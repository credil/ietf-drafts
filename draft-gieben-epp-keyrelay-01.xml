<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY pandocAbstract PUBLIC "" "abstract.xml">
<!ENTITY pandocMiddle PUBLIC "" "middle.xml">
<!ENTITY pandocBack PUBLIC "" "back.xml">
<!ENTITY draftkoch PUBLIC "" "bib/reference.I-D.draft-koch-dnsop-dnssec-operator-change-04.xml">
<!ENTITY rfc2119 PUBLIC "" "bib/reference.RFC.2119.xml">
<!ENTITY rfc3688 PUBLIC "" "bib/reference.RFC.3688.xml">
<!ENTITY rfc4034 PUBLIC "" "bib/reference.RFC.4034.xml">
<!ENTITY rfc5730 PUBLIC "" "bib/reference.RFC.5730.xml">
<!ENTITY rfc5910 PUBLIC "" "bib/reference.RFC.5910.xml">
<!ENTITY rfc5931 PUBLIC "" "bib/reference.RFC.5931.xml">
]>
<rfc ipr="trust200902" category="std" docName="draft-gieben-epp-keyrelay-01" obsoletes="" updates="" submissionType="IETF" xml:lang="en">
  <?rfc toc="yes"?>
  <!--generate a table of contents -->
  <?rfc symrefs="yes"?>
  <!--use anchors instead of numbers for references -->
  <?rfc sortrefs="yes" ?>
  <!--alphabetize the references -->
  <?rfc compact="yes" ?>
  <!--conserve vertical whitespace -->
  <?rfc subcompact="no" ?>
  <!--but keep a blank line between list items -->
  <front>
    <title abbrev="EPP Key Relay">Key Relay Mapping for the Extensible Provisioning Protocol</title>
    <author initials="R." surname="Gieben" fullname="R. (Miek) Gieben">
      <organization>SIDN Labs</organization>
      <address>
        <postal>
          <street>Meander 501</street>
          <street/>
          <city>Arnhem</city>
          <region/>
          <code>6825 MD</code>
          <country>NL</country>
        </postal>
        <phone/>
        <email>miek@miek.nl</email>
        <uri>http://miek.nl/</uri>
      </address>
    </author>
    <author initials="M." surname="Groeneweg" fullname="M. Groeneweg">
      <organization>SIDN Labs</organization>
      <address>
        <postal>
          <street>Meander 501</street>
          <street/>
          <city>Arnhem</city>
          <region/>
          <code>6825 MD</code>
          <country>NL</country>
        </postal>
        <phone/>
        <email>marc.groeneweg@sidn.nl</email>
        <uri>https://www.sidn.nl/</uri>
      </address>
    </author>
    <author initials="R." surname="Ribbers" fullname="Rik Ribbers">
      <organization>SIDN Labs</organization>
      <address>
        <postal>
          <street>Meander 501</street>
          <street/>
          <city>Arnhem</city>
          <region/>
          <code>6825 MD</code>
          <country>NL</country>
        </postal>
        <phone/>
        <email>rik.ribbers@sidn.nl</email>
        <uri>https://www.sidn.nl/</uri>
      </address>
    </author>
    <author initials="A.L.J." surname="Verschuren" fullname="Antoin Verschuren">
      <organization>SIDN Labs</organization>
      <address>
        <postal>
          <street>Meander 501</street>
          <street/>
          <city>Arnhem</city>
          <region/>
          <code>6825 MD</code>
          <country>NL</country>
        </postal>
        <phone/>
        <email>antoin.verschuren@sidn.nl</email>
        <uri>https://www.sidn.nl/</uri>
      </address>
    </author>
    <date month="February" year="2013" day="25"/>
    <area>Internet</area>
    <workgroup/>
    <keyword>Extensible Provisioning Protocol</keyword>
    <abstract><!--This document was prepared using Pandoc2rfc --><!--https://github.com/miekg/pandoc2rfc--><t>This document describes an Extensible Provisioning Protocol (EPP) extension mapping for the purpose of relaying DNSSEC key material from one registrar to another. The mapping introduces <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> as a new command in EPP.  </t><t>This command will help facilitating a transfer of a domain while keeping DNSSEC's chain of trust intact.  </t> </abstract>
  </front>
  <middle><!--This document was prepared using Pandoc2rfc --><!--https://github.com/miekg/pandoc2rfc--><section title="Conventions Used in This Document" anchor="conventions-used-in-this-document" toc="default"><t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14, RFC 2119 <xref target="RFC2119" pageno="false" format="default"/>.  </t><t>In examples, "C:" represents lines sent by a protocol client, and "S:" represents lines returned by a protocol server. "////" is used to note element values that have been shortened to better fit page boundaries. Indentation and white space in examples is provided only to illustrate element relationships and is not a mandatory feature of this protocol.  </t><t>XML is case sensitive. Unless stated otherwise, XML specifications and examples provided in this document MUST be interpreted in the character case presented in order to develop a conforming implementation.  </t><t>The term "key material" denotes one more DNSKEY resource records <xref target="RFC4034" pageno="false" format="default"/>.  </t></section><section title="Introduction" anchor="introduction" toc="default"><t>Certain transactions for DNSSEC signed zones require an authenticated exchange of DNSSEC key material between DNS operators.  Often there is no direct secure channel between the two or it is non-scalable.  </t><t>One of such transactions is changing the DNS operator for DNSSEC signed zones (<xref target="I-D.koch-dnsop-dnssec-operator-change" pageno="false" format="default"/>. In this document we define a protocol extension for use in EPP that helps to implement and automate this transaction. This protocol extension introduces a new command called <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx>.  </t></section><section title="Relaying Key Material" anchor="relaying-key-material" toc="default"><t>The <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> command uses the existing authenticated EPP channel with the registry. Both registrars can securely talk to the registry and as such the registry can serve as a drop box for relaying key material between them (see <xref target="fig:the-gainin" pageno="false" format="default"/>).  </t><figure anchor="fig:the-gainin" align="center" title="" suppress-title="false" alt="" width="" height=""><artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height="">
   +-------------------+  DNSKEY  +--------------------+
   |losing DNS operator| &lt;~~~~~~~ |gaining DNS operator|
   +-------------------+          +--------------------+
                    ^              |
                    |              v
     +-----------------+          +---------+ 
     |current registrar|          |registrar|
     +-----------------+          +---------+
                    ^              |
           EPP poll |              | EPP keyrelay
                    |              V
                   +----------------+
                   |    registry    |
                   +----------------+
</artwork><postamble>The gaining and losing dns-operators should talk directly to each other (the ~ arrow) to exchange the DNSKEY, but often there is no trusted path between the two. As both can securely interact with the registry through the registrar it can act as a relay for the key material exchange.  </postamble></figure><t>The <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> command uploads new key(s) to the registry for a given domain. This key material is then relayed to the current registrar's message queue. There is no need for the registry to store the relayed key in the registry system, although the registry MAY save the key for administrative purposes.  </t><t>The registrar may upload multiple keys in one <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> message. If keys are identical (Flags Field, Protocol Field, Algorithm Field and Public Key Field are equal), the duplicate key MUST be dropped.  </t><t>There is no restriction on the type (for instance Key Signing Keys or Zone Signing Keys) of keys that can be put in the message. It is up to the losing DNS operator to validate the correctness of the key material.  </t><t>If for some reason the registry can not process the <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> command an EPP error response MUST be returned. If the registry does process the <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> command it MUST put all (discarding any duplicates) uploaded keys on to the current registrar's message queue.  </t></section><section title="Rational For a New Command" anchor="rational-for-a-new-command" toc="default"><t>The <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> command is different than the existing EPP commands, because it allows someone to manipulate data without actually being to owner of that data. The EPP transfer command comes close with respect to this functionality. However we did not want to overload the transfer command for this purpose, because a <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> has nothing to do with that operation.  </t></section><section title="Key Relay Interface" anchor="key-relay-interface" toc="default"><t>The Key Relay Interface uses a <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> element for relaying the key material. It needs a minimum of three elements: a domain name, the key(s) to upload, a token which indicates a future transfer is imminent and an OPTIONAL expire element.  </t><t>Thus a <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> element MUST contain the following child elements: </t><t><list style="symbols"><t>A <spanx style="verb" xml:space="preserve">&lt;name&gt;</spanx> element that contains the domain name for which we upload the key.  </t><t>A <spanx style="verb" xml:space="preserve">&lt;keyData&gt;</spanx> element that contains the key material as described in <xref target="RFC5910" pageno="false" format="default"/>, Section 4.2.  </t><t>An <spanx style="verb" xml:space="preserve">&lt;authInfo&gt;</spanx> that contains an authorization token (<xref target="RFC5931" pageno="false" format="default"/>, Section 3.2.4), this should be used as an indication that the registrar had prior contact with the registrant, and a possible future transfer is authorized. The registry MAY check if the <spanx style="verb" xml:space="preserve">&lt;authInfo&gt;</spanx> data is correct and if it does, it MUST return an EPP error response if the authorization token is not correct.  </t></list></t><t>And MAY contain: </t><t><list style="symbols"><t>An <spanx style="verb" xml:space="preserve">&lt;expiry&gt;</spanx> element that describes the lifetime of the relayed key(s). The losing DNS operator can use this to decide when to remove the key material from the zone again. The &lt;expiry&gt; element MUST contain one of the following child elements: <list style="symbols"><t><spanx style="verb" xml:space="preserve">&lt;absolute/&gt;</spanx>: The policy is valid from the current date and time until it expires on the specified date and time.  </t><t><spanx style="verb" xml:space="preserve">&lt;relative/&gt;</spanx>: The policy is valid from the current date and time until the end of the specified duration.  </t></list> <vspace blankLines="1"/> The current date and time are taken from the <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> service message's <spanx style="verb" xml:space="preserve">&lt;qDate&gt;</spanx> element, see <xref target="message-queue-format" pageno="false" format="default"/>.  </t></list></t><section title="Example Key Relay Interface" anchor="example-key-relay-interface" toc="default"><t>The following is an example of the <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> command, where we upload two keys and use an relative expire date of one month and 13 days.  </t><figure title="" suppress-title="false" align="left" alt="" width="" height=""><artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height="">
C:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0" 
C:     xmlns:secDNS="urn:ietf:params:xml:ns:secDNS-1.1"
C:   xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
C:   xmlns:ext="urn:ietf:params:xml:ns:keyrelay-1.0"&gt;
C:  &lt;extension&gt;
C:      &lt;ext:command&gt;
C:          &lt;ext:keyrelay&gt;
C:              &lt;ext:name&gt;example.org&lt;/ext:name&gt;
C:              &lt;ext:keyData&gt;
C:                  &lt;secDNS:flags&gt;256&lt;/secDNS:flags&gt;
C:                  &lt;secDNS:protocol&gt;3&lt;/secDNS:protocol&gt;
C:                  &lt;secDNS:alg&gt;8&lt;/secDNS:alg&gt;
C:                  &lt;secDNS:pubKey&gt;cmlraXN0aGViZXN0&lt;/secDNS:pubKey&gt;
C:              &lt;/ext:keyData&gt;
C:              &lt;ext:keyData&gt;
C:                  &lt;secDNS:flags&gt;256&lt;/secDNS:flags&gt;
C:                  &lt;secDNS:protocol&gt;3&lt;/secDNS:protocol&gt;
C:                  &lt;secDNS:alg&gt;8&lt;/secDNS:alg&gt;
C:                  &lt;secDNS:pubKey&gt;cmlraXN0aGViZXN0&lt;/secDNS:pubKey&gt;
C:              &lt;/ext:keyData&gt;
C:              &lt;ext:authInfo&gt;
C:                  &lt;domain:pw&gt;JnSdBAZSxxzJ&lt;/domain:pw&gt;
C:              &lt;/ext:authInfo&gt;
C:              &lt;ext:expiry&gt;
C:                  &lt;ext:relative&gt;P1M13D&lt;/ext:relative&gt;
C:              &lt;/ext:expiry&gt;
C:          &lt;/ext:keyrelay&gt;
C:      &lt;/ext:command&gt;
C:  &lt;/extension&gt;
C:&lt;/epp&gt;
</artwork></figure></section></section><section title="Server Reply" anchor="server-reply" toc="default"><t>Example <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> response: </t><figure title="" suppress-title="false" align="left" alt="" width="" height=""><artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height="">
S:&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;
S:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0"&gt;
S:  &lt;response&gt;
S:    &lt;result code="1000"&gt;
S:      &lt;msg&gt;Command completed succesfully&lt;/msg&gt;
S:    &lt;/result&gt;
S:    &lt;trID&gt;
S:       &lt;clTRID&gt;ABC-12345&lt;/clTRID&gt;
S:       &lt;svTRID&gt;54321-ZYX&lt;/svTRID&gt;
S:    &lt;/trID&gt;
S:  &lt;/response&gt;
S:&lt;/epp&gt;
</artwork></figure><t>As stated an EPP error response MUST be returned if a <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> command can not be processed for any reason.  </t></section><section title="Message Queue Interface" anchor="message-queue-interface" toc="default"><t>The message queue interface uses the interface as defined in <xref target="RFC5730" pageno="false" format="default"/>, Section 2.6. All elements that are present in the <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> EPP message are put on the message queue of the current registrar for the domain in the <spanx style="verb" xml:space="preserve">&lt;name&gt;</spanx> element.  </t><section title="Message Queue Format" anchor="message-queue-format" toc="default"><t>Example <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> service message: </t><figure title="" suppress-title="false" align="left" alt="" width="" height=""><artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height="">
S:&lt;epp xmlns="urn:ietf:params:xml:ns:epp-1.0" 
S:     xmlns:secDNS="urn:ietf:params:xml:ns:secDNS-1.1"
S:     xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
S:     xmlns:keyrelay="urn:ietf:params:xml:ns:keyrelay-1.0"&gt;
S:  &lt;response&gt;
S:    &lt;result code="1301"&gt;
S:      &lt;msg&gt;Command completed successfully; ack to dequeue&lt;/msg&gt;
S:    &lt;/result&gt;
S:    &lt;msgQ count="5" id="12345"&gt;
S:      &lt;qDate&gt;1999-04-04T22:01:00.0Z&lt;/qDate&gt;
S:      &lt;msg&gt;Key Relay action completed successfully.&lt;/msg&gt;
S:    &lt;/msgQ&gt;
S:      &lt;resData&gt;
S:        &lt;keyrelay:response&gt;
S:          &lt;keyrelay:panData&gt;
S:            &lt;keyrelay:name paResult="true"&gt;example.org
S:              &lt;/keyrelay:name&gt;
S:            &lt;keyrelay:paTRID&gt;
S:              &lt;clTRID&gt;BCD-23456&lt;/clTRID&gt;
S:              &lt;svTRID&gt;65432-WXY&lt;/svTRID&gt;
S:            &lt;/keyrelay:paTRID&gt;
S:            &lt;keyrelay:paDate&gt;1999-04-04T22:01:00.0Z
S:            &lt;/keyrelay:paDate&gt;
S:            &lt;keyrelay:keyData&gt;
S:              &lt;secDNS:flags&gt;256&lt;/secDNS:flags&gt;
S:                &lt;secDNS:protocol&gt;3&lt;/secDNS:protocol&gt;
S:                &lt;secDNS:alg&gt;8&lt;/secDNS:alg&gt;
S:                &lt;secDNS:pubKey&gt;cmlraXN0aGViZXN0&lt;/secDNS:pubKey&gt;
S:            &lt;/keyrelay:keyData&gt;
S:            &lt;keyrelay:authInfo&gt;
S:              &lt;domain:pw&gt;JnSdBAZSxxzJ&lt;/domain:pw&gt;
S:             &lt;/keyrelay:authInfo&gt;
S:             &lt;keyrelay:expiry&gt;
S:               &lt;keyrelay:relative&gt;P24D&lt;/keyrelay:relative&gt;
S:              &lt;/keyrelay:expiry&gt;
S:               &lt;/keyrelay:panData&gt;
S:            &lt;/keyrelay:response&gt;
S:         &lt;/resData&gt;
S:         &lt;trID&gt;
S:            &lt;clTRID&gt;BCD-23456&lt;/clTRID&gt;
S:            &lt;svTRID&gt;65432-WXY&lt;/svTRID&gt;
S:         &lt;/trID&gt;
S:      &lt;/response&gt;
S:&lt;/epp&gt;
</artwork></figure></section></section><section title="Formal Syntax" anchor="formal-syntax" toc="default"><t>An EPP object mapping is specified in XML Schema notation. The formal syntax presented here is a complete schema representation of the object mapping suitable for automated validation of EPP XML instances.  </t><t><spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> command schema: </t><figure title="" suppress-title="false" align="left" alt="" width="" height=""><artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height="">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;schema targetNamespace="urn:ietf:params:xml:ns:keyrelay-1.0"
    xmlns:keyrelay="urn:ietf:params:xml:ns:keyrelay-1.0" 
    xmlns:secDNS="urn:ietf:params:xml:ns:secDNS-1.1"
    xmlns:epp="urn:ietf:params:xml:ns:epp-1.0" 
    xmlns:eppcom="urn:ietf:params:xml:ns:eppcom-1.0"
    xmlns:domain="urn:ietf:params:xml:ns:domain-1.0" 
    xmlns="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified"&gt;

    &lt;annotation&gt;
        &lt;documentation&gt;
            Extensible Provisioning Protocol v1.0 domain name
            extension schema for relaying key material.
        &lt;/documentation&gt;
    &lt;/annotation&gt;

    &lt;import namespace="urn:ietf:params:xml:ns:epp-1.0"
        schemaLocation="epp-1.0.xsd" /&gt;
    &lt;import namespace="urn:ietf:params:xml:ns:eppcom-1.0"
        schemaLocation="eppcom-1.0.xsd" /&gt;
    &lt;import namespace="urn:ietf:params:xml:ns:secDNS-1.1"
        schemaLocation="secdns-1.1.xsd" /&gt;
    &lt;import namespace="urn:ietf:params:xml:ns:domain-1.0"
        schemaLocation="domain-1.0.xsd" /&gt;

    &lt;element name="command" type="keyrelay:commandType" /&gt;
    &lt;element name="response" type="keyrelay:responseType" /&gt;

    &lt;complexType name="responseType"&gt;
        &lt;sequence&gt;
            &lt;element name="panData" 
                type="keyrelay:panKeyRelayDataType"/&gt;
        &lt;/sequence&gt;
    &lt;/complexType&gt;

    &lt;complexType name="commandType"&gt;
        &lt;sequence&gt;
            &lt;element name="keyrelay" 
              type="keyrelay:keyRelayType" /&gt;
        &lt;/sequence&gt;
    &lt;/complexType&gt;

    &lt;complexType name="keyRelayExpiryType"&gt;
        &lt;choice&gt;
            &lt;element name="absolute" type="dateTime" /&gt;
            &lt;element name="relative" type="duration" /&gt;
        &lt;/choice&gt;
    &lt;/complexType&gt;

    &lt;complexType name="keyRelayType"&gt;
        &lt;sequence&gt;
            &lt;element name="name" type="eppcom:labelType" /&gt;
            &lt;element name="keyData" type="secDNS:keyDataType" 
                minOccurs="1" maxOccurs="unbounded" /&gt;
            &lt;element name="authInfo" 
                type="domain:authInfoType" /&gt;
            &lt;element name="expiry" 
                type="keyrelay:keyRelayExpiryType"/&gt;
        &lt;/sequence&gt;
    &lt;/complexType&gt;

    &lt;complexType name="panKeyRelayDataType"&gt;
        &lt;sequence&gt;
            &lt;element name="name" type="domain:paNameType" /&gt;
            &lt;element name="paTRID" type="epp:trIDType" /&gt;
            &lt;element name="paDate" type="dateTime" /&gt;
            &lt;element name="keyData" type="secDNS:keyDataType" 
                minOccurs="1" maxOccurs="unbounded" /&gt;
            &lt;element name="authInfo" type="domain:authInfoType" /&gt;
            &lt;element name="expiry" 
                type="keyrelay:keyRelayExpiryType"/&gt;
        &lt;/sequence&gt;
    &lt;/complexType&gt;
&lt;/schema&gt;
</artwork></figure></section><section title="IANA Considerations" anchor="iana-considerations" toc="default"><t>This document uses URNs to describe XML namespaces and XML schemas conforming to a registry mechanism described in RFC 3688 <xref target="RFC3688" pageno="false" format="default"/>.  </t><t>Two URI assignments must be completed by the IANA.  </t><t>Registration request for the extension namespace: </t><figure title="" suppress-title="false" align="left" alt="" width="" height=""><artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height="">
URI: urn:ietf:params:xml:ns:keyrelay-1.0

Registrant Contact: IESG

XML: None.  Namespace URIs do not represent an XML specification.
</artwork></figure><t>Registration request for the extension XML schema: </t><figure title="" suppress-title="false" align="left" alt="" width="" height=""><artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height="">
URI: urn:ietf:params:xml:schema:keyrelay-1.0

Registrant Contact: IESG

XML: See the "Formal Syntax" section of this document.
</artwork></figure></section><section title="Security Considerations" anchor="security-considerations" toc="default"><t>The <spanx style="verb" xml:space="preserve">&lt;keyrelay&gt;</spanx> EPP extension does not allow for any object transformations.  </t><t>Any registrar can use this mechanism to put key material on the message queue of another registrar, thus mounting a denial of service attack. However this can, and should be detected by the registry. A correct <spanx style="verb" xml:space="preserve">&lt;ext:authInfo&gt;</spanx> element can be used as an indication that putting the key material on the losing registrar's message queue is allowed.  </t><t>Communication between a registrar and registry is mostly done over EPP, but communication between dns-operators, registrants or registrars often is not. If EPP is not used between these entities, relaying the key between a dns-operator and registrar should be adequately authenticated for the complete relay channel to remain secure. It's out of scope for this document to describe how to authenticate with other methods than EPP.  </t></section><section title="Acknowledgements" anchor="acknowledgements" toc="default"><t>Maarten Wullink, Marco Davids and Ed Lewis.  </t></section> </middle>
  <back><references title="Normative References"><reference anchor="RFC2119"><front><title abbrev="RFC Key Words">Key words for use in RFCs to Indicate Requirement Levels</title><author initials="S." surname="Bradner" fullname="Scott Bradner"><organization>Harvard University</organization><address><postal><street>1350 Mass. Ave.</street><street>Cambridge</street><street>MA 02138</street></postal><phone>- +1 617 495 3864</phone><email>sob@harvard.edu</email></address></author><date year="1997" month="March"/><area>General</area><keyword>keyword</keyword><abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized.  This document defines these words as they should be interpreted in IETF documents.  Authors who follow these guidelines should incorporate this phrase near the beginning of their document: <list><t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119.  </t></list></t><t>Note that the force of these words is modified by the requirement level of the document in which they are used.  </t></abstract></front><seriesInfo name="BCP" value="14"/><seriesInfo name="RFC" value="2119"/><format type="TXT" octets="4723" target="http://www.rfc-editor.org/rfc/rfc2119.txt"/><format type="HTML" octets="17970" target="http://xml.resource.org/public/rfc/html/rfc2119.html"/><format type="XML" octets="5777" target="http://xml.resource.org/public/rfc/xml/rfc2119.xml"/></reference> <reference anchor="RFC3688"><front><title>The IETF XML Registry</title><author initials="M." surname="Mealling" fullname="M. Mealling"><organization/></author><date year="2004" month="January"/><abstract><t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract></front><seriesInfo name="BCP" value="81"/><seriesInfo name="RFC" value="3688"/><format type="TXT" octets="17325" target="http://www.rfc-editor.org/rfc/rfc3688.txt"/></reference> <reference anchor="RFC4034"><front><title>Resource Records for the DNS Security Extensions</title><author initials="R." surname="Arends" fullname="R. Arends"><organization/></author><author initials="R." surname="Austein" fullname="R. Austein"><organization/></author><author initials="M." surname="Larson" fullname="M. Larson"><organization/></author><author initials="D." surname="Massey" fullname="D. Massey"><organization/></author><author initials="S." surname="Rose" fullname="S. Rose"><organization/></author><date year="2005" month="March"/><abstract><t>This document is part of a family of documents that describe the DNS Security Extensions (DNSSEC). The DNS Security Extensions are a collection of resource records and protocol modifications that provide source authentication for the DNS. This document defines the public key (DNSKEY), delegation signer (DS), resource record digital signature (RRSIG), and authenticated denial of existence (NSEC) resource records. The purpose and format of each resource record is described in detail, and an example of each resource record is given.&lt;/t&gt;&lt;t&gt; This document obsoletes RFC 2535 and incorporates changes from all updates to RFC 2535. [STANDARDS-TRACK]</t></abstract></front><seriesInfo name="RFC" value="4034"/><format type="TXT" octets="63879" target="http://www.rfc-editor.org/rfc/rfc4034.txt"/></reference> <reference anchor="RFC5730"><front><title>Extensible Provisioning Protocol (EPP)</title><author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck"><organization/></author><date year="2009" month="August"/><abstract><t>This document describes an application-layer client-server protocol for the provisioning and management of objects stored in a shared central repository.  Specified in XML, the protocol defines generic object management operations and an extensible framework that maps protocol operations to objects.  This document includes a protocol specification, an object mapping template, and an XML media type registration.  This document obsoletes RFC 4930. [STANDARDS-TRACK]</t></abstract></front><seriesInfo name="STD" value="69"/><seriesInfo name="RFC" value="5730"/><format type="TXT" octets="134464" target="http://www.rfc-editor.org/rfc/rfc5730.txt"/></reference> <reference anchor="RFC5910"><front><title>Domain Name System (DNS) Security Extensions Mapping for the Extensible Provisioning Protocol (EPP)</title><author initials="J." surname="Gould" fullname="J. Gould"><organization/></author><author initials="S." surname="Hollenbeck" fullname="S. Hollenbeck"><organization/></author><date year="2010" month="May"/><abstract><t>This document describes an Extensible Provisioning Protocol (EPP) extension mapping for the provisioning and management of Domain Name System security (DNSSEC) extensions for domain names stored in a shared central repository.  Specified in XML, this mapping extends the EPP domain name mapping to provide additional features required for the provisioning of DNS security extensions.  This document obsoletes RFC 4310. [STANDARDS-TRACK]</t></abstract></front><seriesInfo name="RFC" value="5910"/><format type="TXT" octets="72490" target="http://www.rfc-editor.org/rfc/rfc5910.txt"/></reference> </references><references title="Informative References"><reference anchor="I-D.koch-dnsop-dnssec-operator-change"><front><title>Changing DNS Operators for DNSSEC signed Zones</title><author initials="P" surname="Koch" fullname="Peter Koch"><organization/></author><author initials="M" surname="Sanz" fullname="Marcos Sanz"><organization/></author><date month="March" day="11" year="2012"/><abstract><t>Changing the DNS delegation for a DNS zone is quite involved if done by the books, but most often handled pragmatically in today's operational practice at the top level with registries and registrars. This document describes a delegation change procedure that maintains consistency and validation under DNSSEC.</t></abstract></front><seriesInfo name="Internet-Draft" value="draft-koch-dnsop-dnssec-operator-change-04"/><format type="TXT" target="http://www.ietf.org/internet-drafts/draft-koch-dnsop-dnssec-operator-change-04.txt"/></reference> <reference anchor="RFC5931"><front><title>Extensible Authentication Protocol (EAP) Authentication Using Only a Password</title><author initials="D." surname="Harkins" fullname="D. Harkins"><organization/></author><author initials="G." surname="Zorn" fullname="G. Zorn"><organization/></author><date year="2010" month="August"/><abstract><t>This memo describes an Extensible Authentication Protocol (EAP) method, EAP-pwd, which uses a shared password for authentication.  The password may be a low-entropy one and may be drawn from some set of possible passwords, like a dictionary, which is available to an attacker.  The underlying key exchange is resistant to active attack, passive attack, and dictionary attack.  This document is not an Internet Standards Track specification; it is published for informational purposes.</t></abstract></front><seriesInfo name="RFC" value="5931"/><format type="TXT" octets="90275" target="http://www.rfc-editor.org/rfc/rfc5931.txt"/></reference> </references><!--This document was prepared using Pandoc2rfc --><!--https://github.com/miekg/pandoc2rfc--><section title="Changelog" anchor="changelog" toc="default"><t>[This section should be removed by the RFC editor before publishing] </t><section title="-00" anchor="section" toc="default"><t><list style="numbers"><t>Initial document.  </t></list></t></section><section title="-01" anchor="section-1" toc="default"><t><list style="numbers"><t>Style and grammar changes; </t><t>Added an expire element; </t><t>Make the authInfo element mandatory and make the registry check it.  </t></list></t></section></section> </back>
</rfc>
