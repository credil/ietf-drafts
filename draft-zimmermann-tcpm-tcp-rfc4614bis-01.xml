<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!-- Section: Basic Functionality -->
    <!ENTITY RFC0793 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0793.xml'>
    <!ENTITY RFC1122 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1122.xml'>
    <!ENTITY RFC2460 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2460.xml'>
    <!ENTITY RFC2873 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2873.xml'>
    <!ENTITY RFC3390 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3390.xml'>
    <!ENTITY RFC5681 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5681.xml'>
    <!ENTITY RFC6298 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6298.xml'>

    <!-- Subsection: Fundamental Changes -->
    <!ENTITY RFC1323 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1323.xml'>
    <!ENTITY RFC2675 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2675.xml'>
    <!ENTITY RFC5482 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5482.xml'>
    <!ENTITY RFC6093 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6093.xml'>

    <!-- Subsection: Congestion Control and Loss Recovery Extensions -->
    <!ENTITY RFC3042 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3042.xml'>
    <!ENTITY RFC3465 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3465.xml'>
    <!ENTITY RFC6582 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6582.xml'>

    <!-- Subsection: SACK-Based Loss Recovery and Congestion Control -->
    <!ENTITY RFC2018 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2018.xml'>
    <!ENTITY RFC2883 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2883.xml'>
    <!ENTITY RFC6675 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6675.xml'>

    <!-- Subsection: Detection and Prevention of Spurious Retransmissions -->
    <!ENTITY RFC4015 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4015.xml'>
    <!ENTITY RFC5682 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5682.xml'>

    <!-- Subsection: Router Cooperative Signaling -->
    <!ENTITY RFC1191 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1191.xml'>
    <!ENTITY RFC1981 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1981.xml'>
    <!ENTITY RFC3168 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3168.xml'>
    <!ENTITY RFC4821 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4821.xml'>
    <!ENTITY RFC6633 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6633.xml'>

    <!-- Subsection: Header Compression -->
    <!ENTITY RFC1144 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1144.xml'>
    <!ENTITY RFC6846 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6846.xml'>

    <!-- Subsection: Defending Spoofing and Flooding Attacks -->
    <!ENTITY RFC4953 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4953.xml'>
    <!ENTITY RFC4987 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4987.xml'>
    <!ENTITY RFC5925 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5925.xml'>
    <!ENTITY RFC5926 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5926.xml'>
    <!ENTITY RFC5961 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5961.xml'>
    <!ENTITY RFC6528 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6528.xml'>

    <!-- Subsection: Architectural Guidelines -->
    <!ENTITY RFC2140 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2140.xml'>
    <!ENTITY RFC3124 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3124.xml'>

    <!-- Subsection: Congestion Control and Loss Recovery Extensions -->
    <!ENTITY RFC2861 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2861.xml'>
    <!ENTITY RFC3649 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3649.xml'>
    <!ENTITY RFC3742 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3742.xml'>
    <!ENTITY RFC5690 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5690.xml'>
    <!ENTITY RFC5827 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5827.xml'>
    <!ENTITY RFC6069 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6069.xml'>
    <!ENTITY RFC6356 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6356.xml'>
    <!ENTITY RFC6824 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6824.xml'>

    <!-- Subsection: Detection and Prevention of Spurious Retransmissions -->
    <!ENTITY RFC3522 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3522.xml'>
    <!ENTITY RFC3708 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3708.xml'>
    <!ENTITY RFC4653 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4653.xml'>

   <!-- Subsection: Router Cooperative Signaling -->
    <!ENTITY RFC3540 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3540.xml'>
    <!ENTITY RFC4782 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4782.xml'>
    <!ENTITY RFC5562 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5562.xml'>

    <!-- Subsection: Defending Spoofing and Flooding Attacks -->
    <!ENTITY RFC5461 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5461.xml'>
    <!ENTITY RFC5927 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5927.xml'>

    <!-- Section: Historic Extensions -->
    <!ENTITY RFC0721 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0721.xml'>
    <!ENTITY RFC1078 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1078.xml'>
    <!ENTITY RFC1106 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1106.xml'>
    <!ENTITY RFC1110 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1110.xml'>
    <!ENTITY RFC1146 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1146.xml'>
    <!ENTITY RFC1263 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1263.xml'>
    <!ENTITY RFC1379 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1379.xml'>
    <!ENTITY RFC1644 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1644.xml'>
    <!ENTITY RFC1693 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1693.xml'>
    <!ENTITY RFC1705 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1705.xml'>
    <!ENTITY RFC6013 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6013.xml'>
    <!ENTITY RFC6247 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6247.xml'>

    <!-- Subsection: Foundational Works -->
    <!ENTITY RFC0675 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0675.xml'>
    <!ENTITY RFC0761 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0761.xml'>
    <!ENTITY RFC0813 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0813.xml'>
    <!ENTITY RFC0814 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0814.xml'>
    <!ENTITY RFC0816 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0816.xml'>
    <!ENTITY RFC0817 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0817.xml'>
    <!ENTITY RFC0872 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0872.xml'>
    <!ENTITY RFC0896 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0896.xml'>
    <!ENTITY RFC0964 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0964.xml'>

    <!-- Subsection: Architectural Guidelines -->
    <!ENTITY RFC1958 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1958.xml'>
    <!ENTITY RFC2914 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2914.xml'>
    <!ENTITY RFC3439 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3439.xml'>
    <!ENTITY RFC6182 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6182.xml'>

    <!-- Subsection: Difficult Network Environments -->
    <!ENTITY RFC2488 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2488.xml'>
    <!ENTITY RFC2757 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2757.xml'>
    <!ENTITY RFC2760 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2760.xml'>
    <!ENTITY RFC3135 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3135.xml'>
    <!ENTITY RFC3150 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3150.xml'>
    <!ENTITY RFC3155 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3155.xml'>
    <!ENTITY RFC3366 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3366.xml'>
    <!ENTITY RFC3449 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3449.xml'>
    <!ENTITY RFC3481 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3481.xml'>
    <!ENTITY RFC3819 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3819.xml'>

    <!-- Subsection: Guidance for Developing, Analyzing, and Evaluating TCP -->
    <!ENTITY RFC4774 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4774.xml'>
    <!ENTITY RFC5033 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5033.xml'>
    <!ENTITY RFC5166 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5166.xml'>
    <!ENTITY RFC6181 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6181.xml'>

    <!-- Subsection: Implementation Advice -->
    <!ENTITY RFC0794 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0794.xml'>
    <!ENTITY RFC0879 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0879.xml'>
    <!ENTITY RFC1071 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1071.xml'>
    <!ENTITY RFC1624 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1624.xml'>
    <!ENTITY RFC1936 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1936.xml'>
    <!ENTITY RFC2525 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2525.xml'>
    <!ENTITY RFC2923 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2923.xml'>
    <!ENTITY RFC3360 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3360.xml'>
    <!ENTITY RFC3493 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3493.xml'>
    <!ENTITY RFC6056 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6056.xml'>
    <!ENTITY RFC6191 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6191.xml'>
    <!ENTITY RFC6429 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6429.xml'>
    <!ENTITY RFC6691 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6691.xml'>
    <!ENTITY RFC6897 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6897.xml'>

    <!-- Subsection: Management Information Bases -->
    <!ENTITY RFC1066 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1066.xml'>
    <!ENTITY RFC1156 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1156.xml'>
    <!ENTITY RFC1213 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1213.xml'>
    <!ENTITY RFC2012 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2012.xml'>
    <!ENTITY RFC2452 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2452.xml'>
    <!ENTITY RFC4022 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4022.xml'>

    <!-- Subsection: Tools and Tutorials -->
    <!ENTITY RFC1180 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1180.xml'>
    <!ENTITY RFC1470 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1470.xml'>
    <!ENTITY RFC2398 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2398.xml'>
    <!ENTITY RFC4614 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4614.xml'>
    <!ENTITY RFC5783 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5783.xml'>
    <!ENTITY RFC6077 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6077.xml'>

    <!-- Subsection: Case Studies -->
    <!ENTITY RFC0700 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0700.xml'>
    <!ENTITY RFC0889 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.0889.xml'>
    <!ENTITY RFC1337 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1337.xml'>
    <!ENTITY RFC2415 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2415.xml'>
    <!ENTITY RFC2416 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2416.xml'>
    <!ENTITY RFC2884 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2884.xml'>

    <!-- Informative References -->
    <!ENTITY RFC1016 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1016.xml'>
    <!ENTITY RFC2026 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2026.xml'>
    <!ENTITY RFC2474 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2474.xml'>
    <!ENTITY RFC4340 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4340.xml'>
    <!ENTITY RFC4341 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4341.xml'>
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds
     might want to use. (Here they are set differently than their defaults in
     xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="3"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->

<rfc ipr="trust200902" category="info" obsoletes="4614"
docName="draft-zimmermann-tcpm-tcp-rfc4614bis-01">
<!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

    <!-- FRONT MATTER -->
    <front>
        <title abbrev="TCP Roadmap">A Roadmap for Transmission Control Protocol
        (TCP) Specification Documents</title>

        <author initials="M." surname="Duke" fullname="Martin Duke">
            <organization>Boeing Phantom Works</organization>
            <address>
                <postal>
                    <street>PO Box 3707, MC 7L-49</street>
                    <city>Seattle</city>
                    <region>WA</region>
                    <code>98124-2207</code>
                </postal>
                <phone>425-865-1182</phone>
                <email>martin.duke@boeing.com</email>
            </address>
        </author>

        <author initials="R." surname="Braden" fullname="Robert Braden">
            <organization abbrev='ISI'>USC Information Sciences
                Institute</organization>
            <address>
                <postal>
                    <street></street>
                    <city>Marina del Rey</city>
                    <region>CA</region>
                    <code>90292-6695</code>
                </postal>
                <phone>310-448-9173</phone>
                <email>braden@isi.edu</email>
            </address>
        </author>

        <author initials="W.M." surname="Eddy" fullname="Wesley M. Eddy">
            <organization >MTI Systems</organization>
            <address>
                <postal>
                    <street>MS 500-ASRC; 21000 Brookpark Rd</street>
                    <city>Cleveland</city>
                    <region>OH</region>
                    <code>44135</code>
                </postal>
                <phone>216-433-6682</phone>
                <email>wes@mti-systems.com</email>
            </address>
        </author>

        <author initials="E." surname="Blanton" fullname="Ethan Blanton">
            <organization abbrev='Purdue University'>Purdue University Computer
                Science</organization>
            <address>
                <postal>
                    <street>305 N. University St.</street>
                    <city>West Lafayette</city>
                    <region>IN</region>
                    <code>47907</code>
                </postal>
                <email>elb@psg.com</email>
            </address>
        </author>

        <author initials="A." surname="Zimmermann" fullname="Alexander Zimmermann">
            <organization>Accenture</organization>
            <address>
                <postal>
                    <street>Kaistrasse 20</street>
                    <city>Duesseldorf</city>
                    <code>40221</code>
                    <country>Germany</country>
                </postal>
                <email>alexander@zimmermann.eu.com</email>
            </address>
        </author>

        <date month="April" year="2013" />

        <!-- Meta-data Declarations -->
        <area>Transport</area>

        <workgroup>TCP Maintenance and Minor Extensions (TCPM) WG</workgroup>

        <keyword>TCP Roadmap</keyword>

        <abstract>
            <t>This document contains a "roadmap" to the Requests for Comments
            (RFC) documents relating to the Internet's Transmission Control
            Protocol (TCP). This roadmap provides a brief summary of the
            documents defining TCP and various TCP extensions that have
            accumulated in the RFC series. This serves as a guide and quick
            reference for both TCP implementers and other parties who desire
            information contained in the TCP-related RFCs.</t>
        </abstract>

    </front>

    <!--  MAIN MATTER -->
    <middle>
        <!-- Section: Introduction -->
        <section title="Introduction">
            <t>A correct and efficient implementation of the Transmission
            Control Protocol (TCP) is a critical part of the software of most
            Internet hosts. As TCP has evolved over the years, many distinct
            documents have become part of the accepted standard for TCP. At
            the same time, a large number of more experimental modifications to
            TCP have also been published in the RFC series, along with
            informational notes, case studies, and other advice.</t>

            <t>As an introduction to newcomers and an attempt to organize the
            plethora of information for old hands, this document contains a
            "roadmap" to the TCP-related RFCs. It provides a brief summary of
            the RFC documents that define TCP. This should provide guidance to
            implementers on the relevance and significance of the
            standards-track extensions, informational notes, and best current
            practices that relate to TCP.</t>

            <t>This document is not an update of RFC 1122 and is not a
            rigorous standard for what needs to be implemented in TCP. This
            document is merely an informational roadmap that captures,
            organizes, and summarizes most of the RFC documents that a TCP
            implementer, experimenter, or student should be aware of.
            Particular comments or broad categorizations that this document
            makes about individual mechanisms and behaviors are not to be taken
            as definitive, nor should the content of this document alone
            influence implementation decisions.</t>

            <t>This roadmap includes a brief description of the contents of
            each TCP-related RFC. In some cases, we simply supply the abstract
            or a key summary sentence from the text as a terse description. In
            addition, a letter code after an RFC number indicates its category
            in the RFC series (see BCP 9 <xref target="RFC2026"/> for
            explanation of these categories):
                <list style="empty">
                    <t>S - Standards Track (Proposed Standard, Draft Standard,
                    or Internet Standard)</t>
                    <t>E - Experimental</t>
                    <t>I - Informational</t>
                    <t>H - Historic</t>
                    <t>B - Best Current Practice</t>
                    <t>U - Unknown (not formally defined)</t>
                </list>
            </t>

            <t>Note that the category of an RFC does not necessarily reflect
            its current relevance. For instance, RFC 5681 is nearly universally
            deployed although it is only a Draft Standard. Similarly, some
            Informational RFCs contain significant technical proposals for
            changing TCP.</t>

            <t>This roadmap is divided into four main sections.
            <xref target="must"/> lists the RFCs that describe absolutely
            required TCP behaviors for proper functioning and interoperability.
            Further RFCs that describe strongly encouraged, but not-essential,
            behaviors are listed in <xref target="should"/>. Experimental
            extensions that are not yet standard practices, but that potentially
            could be in the future, are described in <xref target="may"/>.</t>

            <t>The reader will probably notice that these three sections are
            broadly equivalent to MUST/SHOULD/MAY specifications (per RFC
            2119), and although the authors support this intuition, this document
            is merely descriptive; it does not represent a binding
            standards-track position. Individual implementers still need to
            examine the standards documents themselves to evaluate specific
            requirement levels.</t>

            <t>A small number of older experimental extensions that have not
            been widely implemented, deployed, and used are noted in
            <xref target="history"/>. Many other supporting documents that are
            relevant to the development, implementation, and deployment of TCP
            are described in <xref target="support"/>.</t>

            <t>A fairly ubiquitous important implementation practice that is
            not currently documented in the RFC series is listed in
            <xref target="undocumented"/>.</t>

            <t>Within each section, RFCs are listed in the chronological order
            of their publication dates.</t>
        </section>

        <!-- Section: Basic Functionality -->
        <section title="Basic Functionality" anchor="must">
            <t>A small number of documents compose the core specification of
            TCP. These define the required basic functionalities of TCP's
            header parsing, state machine, congestion control, and
            retransmission timeout computation. These base specifications must
            be correctly followed for interoperability.</t>

            <t><list style="hanging">
                <t hangText="RFC 793 S: &quot;Transmission Control
                Protocol&quot;, STD 7 (September 1981)"><vspace blankLines="1"/>
                This is the fundamental TCP specification document
                <xref target="RFC0793"/>. Written by Jon Postel as part of the
                Internet protocol suite's core, it describes the TCP packet
                format, the TCP state machine and event processing, and TCP's
                semantics for data transmission, reliability, flow control,
                multiplexing, and acknowledgment.</t>

                <t>Section 3.6 of RFC 793, describing TCP's handling of the IP
                precedence and security compartment, is mostly irrelevant
                today. RFC 2873 changed the IP precedence handling, and the
                security compartment portion of the API is no longer
                implemented or used. In addition, RFC 793 did not describe any
                congestion control mechanism. Otherwise, however, the majority
                of this document still accurately describes modern TCPs. RFC
                793 is the last of a series of developmental TCP
                specifications, starting in the Internet Experimental Notes
                (IENs) and continuing in the RFC series.</t>

                <t hangText="RFC 1122 S: &quot;Requirements for Internet Hosts -
                Communication Layers&quot; (October 1989)"><vspace blankLines="1"/>
                This document <xref target="RFC1122"/> updates and clarifies
                RFC 793, fixing some specification bugs and oversights. It
                also explains some features such as keep-alives and Karn's and
                Jacobson's RTO estimation algorithms <xref target="KP87"/><xref
                target="Jac88"/><xref target="JK92"/>. ICMP interactions
                are mentioned, and some tips are given for efficient
                implementation. RFC 1122 is an Applicability Statement,
                listing the various features that MUST, SHOULD, MAY, SHOULD
                NOT, and MUST NOT be present in standards-conforming TCP
                implementations. Unlike a purely informational "roadmap", this
                Applicability Statement is a standards document and gives
                formal rules for implementation.</t>

                <t hangText="RFC 2460 S: &quot;Internet Protocol, Version 6
                (IPv6) Specification&quot; (December 1998)">
                <vspace blankLines="1"/>
                This document <xref target="RFC2460"/> is of relevance to TCP
                because it defines how the pseudo-header for TCP's checksum
                computation is derived when 128-bit IPv6 addresses are used
                instead of 32-bit IPv4 addresses. Additionally, RFC 2675
                describes TCP changes required to support IPv6
                jumbograms.</t>

                <t hangText="RFC 2873 S: &quot;TCP Processing of the IPv4
                Precedence Field&quot; (June 2000)"><vspace blankLines="1"/>
                This document <xref target="RFC2873"/> removes from the TCP
                specification all processing of the precedence bits of the TOS
                byte of the IP header. This resolves a conflict over the use
                of these bits between RFC 793 and Differentiated Services
                <xref target="RFC2474"/>.</t>

                <t hangText="RFC 3390 S: &quot;Increasing TCP's Initial
                Window&quot; (October 2002)"><vspace blankLines="1"/>
                This document <xref target="RFC3390"/> specifies an increase in
                the permitted initial window for TCP from one segment to three
                or four segments during the slow start phase, depending on the
                segment size.</t>

                <t hangText="RFC 5681 S: &quot;TCP Congestion Control&quot;
                (August 2009)"><vspace blankLines="1"/>
                Although RFC 793 did not contain any congestion control
                mechanisms, today congestion control is a required component of
                TCP implementations. This document <xref target="RFC5681"/>
                defines the current versions of Van Jacobson's congestion
                avoidance and control mechanisms for TCP, based on his 1988
                SIGCOMM paper <xref target="Jac88"/>.</t>

                <t>A number of behaviors that together constitute what the
                community refers to as "Reno TCP" are described in RFC 5681.
                The name "Reno" comes from the Net/2 release of the 4.3 BSD
                operating system. This is generally regarded as the least
                common denominator among TCP flavors currently found running on
                Internet hosts. Reno TCP includes the congestion control
                features of slow start, congestion avoidance, fast retransmit,
                and fast recovery.</t>

                <t>RFC 1122 <xref target="RFC1122"/> mandates the
                implementation of a congestion control mechanism, and RFC 5681
                <xref target="RFC5681"/> details the currently accepted
                mechanism. RFC 5681 differs slightly from the other documents
                listed in this section, as it does not affect the ability of
                two TCP endpoints to communicate; however, congestion control
                remains a critical component of any widely deployed TCP
                implementation and is required for the avoidance of congestion
                collapse and to ensure fairness among competing flows.</t>

                <t>RFC 2001 and RFC 2581 are the conceptual precursors of RFC
                5681. The most important changes relative to RFC 2581 are:
                    <?rfc subcompact="yes"?>
                    <list style="format (%c)">
                        <t>The initial window requirements were changed to allow
                        larger Initial Windows as standardized in <xref
                            target="RFC3390"/>.</t>
                        <t>During slow start and congestion avoidance, the
                        usage of Appropriate Byte Counting <xref
                        target="RFC3465"/> is explicitly recommended.</t>
                        <t>The use of Limited Transmit <xref target="RFC3042"/>
                        is now recommended.</t>
                    </list>
                    <?rfc subcompact="no"?>
                </t>

                <t hangText="RFC 6298 S: &quot;Computing TCP's Retransmission
                Timer&quot; (June 2011)"><vspace blankLines="1"/>
                Abstract: &quot;This document defines the standard algorithm
                that Transmission Control Protocol (TCP) senders are required to
                use to compute and manage their retransmission timer. It expands
                on the discussion in section 4.2.3.1 of RFC 1122 and upgrades
                the requirement of supporting the algorithm from a SHOULD to a
                MUST.&quot; <xref target="RFC6298"/>. RFC 6298 is the successor
                of RFC 2988, which changes the initial RTO from 3s to 1s.</t>
            </list></t>
        </section>

        <!-- Section: Recommended Enhancements -->
        <section title="Recommended Enhancements" anchor="should">
            <t>This section describes recommended TCP modifications that improve
            performance and security. <xref target="fundamental"/> represents
            fundamental changes to the protocol. <xref target="cc"/> lists
            improvements in the congestion control and loss recovery mechanisms
            specified in RFC 5681. <xref target="sack"/> describes further
            refinements that make use of selective acknowledgments. <xref
            target="spourious"/> describes algorithms that allows a TCP
            sender to detect whether it has entered loss recovery
            unnecessarily. <xref target="signaling"/> compromises RFCs that
            defines mechanisms that allow routers to add signaling information
            to end-hosts.  Header compression schemes  for TCP/IP header
            compression are listed in <xref target="compression"/>. Finally,
            <xref target="antispoof"/> deals with the problem of preventing
            forged segments and flooding attacks.</t>

            <!-- Subsection: Fundamental Changes -->
            <section title="Fundamental Changes" anchor="fundamental">
                <t>RFC 1323 allows better utilization of high bandwidth-delay
                product paths by providing some needed mechanisms for high-rate
                transfers. RFC 2675 describes changes to TCP's semantic for
                using IPv6 Jumbograms.  RFC 5482 specifies the TCP User Timeout
                Option. RFC 6093 accommodates current practice in processing
                TCP urgent indications.</t>

                <t><list style="hanging">
                    <t hangText="RFC 1323 S: &quot;TCP Extensions for High
                    Performance&quot; (May 1992)"><vspace blankLines="1"/>
                    This document <xref target="RFC1323"/> defines TCP extensions
                    for window scaling, timestamps, and protection against wrapped
                    sequence numbers, for efficient and safe operation over paths
                    with large bandwidth-delay products. These extensions are
                    commonly found in currently used systems; however, they may
                    require manual tuning and configuration. One issue in this
                    specification that is still under discussion concerns a
                    modification to the algorithm for estimating the mean RTT
                    when timestamps are used. RFC 1072 and RFC 1185 are the
                    conceptual precursors of RFC 1323.</t>

                    <t hangText="RFC 2675 S: &quot;IPv6 Jumbograms&quot; (August
                    1999)"><vspace blankLines="1"/>
                    IPv6 supports longer datagrams than were allowed in IPv4.
                    These are known as Jumbograms, and use with TCP has
                    necessitated changes to the handling of TCP's MSS and Urgent
                    fields (both 16 bits). This document <xref target="RFC2675"/>
                    explains those changes. Although it describes changes to basic
                    header semantics, these changes should only affect the use
                    ofnvery large segments, such as IPv6 jumbograms, which are
                    currently rarely used in the general Internet.</t>

                    <t>Supporting the behavior described in this document does
                    not affect interoperability with other TCP implementations
                    when IPv4 or non-jumbogram IPv6 is used. This document
                    states that jumbograms are to only be used when it can be
                    guaranteed that all receiving nodes, including each router
                    in the end-to-end path, will support jumbograms. If even a
                    single node that does not support jumbograms is attached to
                    a local network, then no host on that network may use
                    jumbograms. This explains why jumbogram use has been rare,
                    and why this document is considered a performance
                    optimization and not part of TCP over IPv6's basic
                    functionality.</t>

                    <t hangText="RFC 5482 S: &quot;TCP User Timeout Option&quot;
                    (June 2009)"><vspace blankLines="1"/>
                    As a local per-connection parameter the TCP user timeout
                    controls how long transmitted data may remain
                    unacknowledged before a connection is forcefully closed.
                    This document <xref target="RFC5482"/> specifies the TCP
                    User Timeout Option that allows one end of a TCP connection
                    to advertise its current user timeout value. This
                    information provides advice to the other end of the TCP
                    connection to adapt its user timeout accordingly.</t>

                    <t hangText="RFC 6093 S: &quot;On the Implementation of the
                    TCP Urgent Mechanism&quot; (January 2011)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC6093"/> analyzes how current
                    TCP stacks process TCP urgent indications, and how the
                    behavior of widely deployed middleboxes affects the urgent
                    indications processing. Based on their investigation, the
                    document updates the relevant specifications such that they
                    accommodate current practice in processing TCP urgent
                    indications. Finally, the document raises awareness about
                    the reliability of TCP urgent indications in the Internet,
                    and recommends against the use of urgent mechanism.</t>
                </list></t>
            </section>

            <!-- Subsection: Congestion Control and Loss Recovery Extensions -->
            <section title="Congestion Control and Loss Recovery Extensions" anchor="cc">
                <t>Two of the most important aspects of TCP are its congestion
                control and loss recovery features. TCP traditionally treats
                lost packets as indicating congestion-related loss, and cannot
                distinguish between congestion-related loss and loss due to
                infer congestion, transmission errors. Even when ECN is in
                use, there is a rather intimate coupling between congestion
                control and loss recovery mechanisms. There are several
                extensions to both features, and more often than not, a
                particular extension applies to both. In this sub-section, we
                group enhancements to either congestion control, loss recovery,
                or both, which can be performed unilaterally; that is, without
                negotiating support between endpoints. In the next
                sub-section, we group the extensions that specify or rely on
                the SACK option, which must be negotiated bilaterally. TCP
                implementations should include the enhancements from both
                sub-sections so that TCP senders can perform well without
                regard to the feature sets of other hosts they connect to. For
                example, if SACK use is not successfully negotiated, a host
                should use the NewReno behavior as a fall back.</t>

                <t><list style="hanging">
                    <t hangText="RFC 3042 S: &quot;Enhancing TCP's Loss Recovery
                    Using Limited Transmit&quot; (January 2001)">
                    <vspace blankLines="1"/>
                    Abstract: &quot;This document proposes Limited Transmit, a
                    new Transmission Control Protocol (TCP) mechanism that can
                    be used to more effectively recover lost segments when a
                    connection's congestion window is small, or when a large
                    number of segments are lost in a single transmission
                    window.&quot; <xref target="RFC3042"/> Tests from 2004 showed
                    that Limited Transmit was deployed in roughly one third of
                    the web servers tested <xref target="MAF04"/>.</t>

                    <t hangText="RFC 3465 E: &quot;TCP Congestion Control with
                    Appropriate Byte Counting (ABC)&quot; (February 2003)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC3465"/> suggests that
                    congestion control use the number of bytes acknowledged
                    instead of the number of acknowledgments received. The ABC
                    mechanism behaves differently than the standard method when
                    there is not a one-to-one relationship between data
                    segments and acknowledgements. ABC still operates within
                    the accepted guidelines, but is more robust to delayed ACKs
                    and ACK-division <xref target="SCWA99"/><xref
                    target="RFC3449"/>.</t>

                    <t hangText="RFC 6582 S: &quot;The NewReno Modification to
                    TCP's Fast Recovery Algorithm&quot; (April 2012)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC6582"/>
                    specifies a modification to the standard Reno fast recovery
                    algorithm, whereby a TCP sender can use partial
                    acknowledgments to make inferences
                    determining the next segment to send in situations where SACK
                    would be helpful but isn't available. Although it is only a
                    slight modification, the NewReno behavior can make a
                    significant difference in performance when multiple segments
                    are lost from a single window of data.</t>

                    <t>RFC 2582 and RFC 3782 are the conceptual precursors of RFC
                    6582. The main change in RFC 3782 relative to RFC 2582 was
                    to specify the Careful variant of NewReno's Fast Retransmit
                    and Fast Recovery algorithms and advace those two
                    algorithms from Experimental to Standards Track status. The
                    main change in RFC 6582 relative to RFC 3782 was to solve a
                    performance degradation that could occours if FlightSize on
                    Full ACK reception is zero.</t>
                </list></t>
            </section>

            <!-- Subsection: SACK-Based Loss Recovery and Congestion Control -->
            <section title="SACK-Based Loss Recovery and Congestion Control"
            anchor="sack">
                <t>The base TCP specification in RFC 793 provided only a simple
                cumulative acknowledgment mechanism. However, a selective
                acknowledgment (SACK) mechanism provides performance improvement in
                the presence of multiple packet losses from the same flight, more
                than outweighing the modest increase in complexity. A TCP should
                be expected to implement SACK; however, SACK is a negotiated option
                and is only used if support is advertised by both sides of a
                connection.</t>

                <t><list style="hanging">
                    <t hangText="RFC 2018 S: &quot;TCP Selective Acknowledgment
                    Options&quot; (October 1996)"><vspace blankLines="1"/>
                    When more than one packet is lost during one round trip
                    time TCP may experience poor performance since a TCP sender
                    can only learn about a single lost packet per round trip
                    time from cumulative acknowledgments. This document
                    <xref target="RFC2018"/> defines the basic selective
                    acknowledgment (SACK) mechanism for TCP, which can help to
                    overcome these limitations. The receiving TCP returns SACK
                    blocks to inform the sender which data has been received.
                    The sender can then retransmit only the missing data
                    segments.</t>

                    <t hangText="RFC 2883 S: &quot;An Extension to the Selective
                    Acknowledgement (SACK) Option for TCP&quot; (July 2000)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC2883"/> extends RFC 2018.
                    It enables use of the SACK option to acknowledge duplicate
                    packets. With this extension, called DSACK, the sender is
                    able to infer the order of packets received at the
                    receiver, and therefore to infer when it has unnecessarily
                    retransmitted a packet.</t>

                    <t hangText="RFC 6675 S: &quot;A Conservative Loss Recovery
                    Algorithm Based on Selective Acknowledgment (SACK) for
                    TCP&quot; (August 2012)"><vspace blankLines="1"/>
                    This document <xref target="RFC6675"/> describes a
                    conservative loss recovery algorithm for TCP that is based
                    on the use of the selective acknowledgment (SACK) TCP
                    option <xref target="RFC2018"/>. The algorithm conforms to
                    the spirit of the congestion control specification in RFC
                    5681, but allows TCP senders to recover more effectively
                    when multiple segments are lost from a single flight of
                    data.</t>

                    <t>RFC 6675 is a revision of RFC 3517 to address several
                    situations that are not handled explicitly before. In
                    particular
                        <?rfc subcompact="yes"?>
                        <list style="format (%c)">
                            <t>it improves the loss detection in the event
                            that the sender has outstanding segments that are
                            smaller than SMSS.</t>
                            <t>it modifies the definition of a "duplicate
                            acknowledgment" to utilize the SACK information
                            in detecting loss.</t>
                            <t>it maintains the ACK clock under certain
                            circumstances involving loss at the end of the
                            window.</t>
                        </list>
                        <?rfc subcompact="no"?>
                    </t>
                </list></t>
            </section>

            <!-- Subsection: Detection and Prevention of Spurious
            Retransmissions -->
            <section title="Detection and Prevention of Spurious
            Retransmissions" anchor="spourious">
                <t>ToDo</t>

                <t><list style="hanging">
                    <t hangText="RFC 4015 S: &quot;The Eifel Response Algorithm
                    for TCP&quot; (February 2005)"><vspace blankLines="1"/>
                    This document <xref target="RFC4015"/> describes the
                    response portion of the Eifel algorithm, which can be used
                    in conjunction with one of several methods of detecting when
                    loss recovery has been spuriously entered, such as the Eifel
                    detection algorithm in RFC 3522, the algorithm in RFC 3708,
                    or F-RTO in RFC 5682.</t>

                    <t>Abstract: &quot;Based on an appropriate detection algorithm,
                    the Eifel response algorithm provides a way for a TCP sender
                    to respond to a detected spurious timeout. It adapts the
                    retransmission timer to avoid further spurious timeouts, and
                    can avoid - depending on the detection algorithm - the often
                    unnecessary go-back-N retransmits that would otherwise be
                    sent. In addition, the Eifel response algorithm restores the
                    congestion control state in such a way that packet bursts
                    are avoided.&quot;</t>

                    <t hangText="RFC 5682 S: &quot;Forward RTO-Recovery (F-RTO):
                    An Algorithm for Detecting Spurious Retransmission Timeouts
                    with TCP&quot; (September 2009)"><vspace blankLines="1"/>
                    The F-RTO detection algorithm <xref target="RFC5682"/>,
                    originally describes in RFC 4138, provides an option for
                    inferring spurious retransmission timeouts. Unlike some
                    similar detection methods (e.g. RFC 3522 and RFC 3708),
                    F-RTO does not rely on the use of any TCP options. The
                    basic idea is to send previously unsent data after the
                    first retransmission after a RTO. If the ACKs advance the
                    window, the RTO may be declared spurious.</t>
                </list></t>
            </section>

            <!-- Subsection: Router Cooperative Signaling -->
            <section title="Router Cooperative Signaling" anchor="signaling">
                <t>RFC 3168 describes a change to the Internet's architecture,
                whereby routers signal end-hosts of growing congestion levels
                and can do so before packet losses are forced.</t>

                <t>Technically speaking the algorithm described in RFC 4821
                does not based on router cooperative signaling, however, since
                the algorithm is an alternative to the ICMP based PMTUD of RFC
                1191, RFC 4821 is listed in this section.</t>

               <t>ToDo</t>

                <t><list style="hanging">
                    <t hangText="RFC 1191 S: &quot;Path MTU Discovery&quot;
                    (November 1990)"><vspace blankLines="1"/>
                    Abstract: &quot;This memo describes a technique for
                    dynamically discovering the MTU of an arbitrary Internet
                    path. It specifies a small change to the way routers
                    generate one type of ICMP message. For a path that passes
                    through a router that has not been so changed, this
                    technique might not discover the correct path MTU, but it
                    will always choose a path MTU as accurate as, and in many
                    cases more accurate than, the path MTU that would be chosen
                    by current practice.&quot; <xref target="RFC1191"/></t>

                    <t hangText="RFC 1981 S: &quot;Path MTU Discovery for IP
                    version 6&quot; (August 1996)"><vspace blankLines="1"/>
                    Abstract: &quot;This document describes Path MTU Discovery for
                    IP version 6. It is largely derived from RFC 1191, which
                    describes Path MTU Discovery for IP version 4.&quot;
                    <xref target="RFC1981"/></t>

                    <t hangText="RFC 3168 S: &quot;The Addition of Explicit
                    Congestion Notification (ECN) to IP&quot; (September 2001)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC3168"/> defines a means for end
                    hosts to detect congestion before congested routers are forced
                    to discard packets. Although congestion notification takes
                    place at the IP level, ECN requires support at the transport
                    level (e.g., in TCP) to echo the bits and adapt the sending
                    rate. This document updates RFC 793 to define two
                    previously unused flag bits in the TCP header for ECN support.
                    RFC 3540 provides a supplementary (experimental) means for more
                    secure use of ECN, and RFC 2884 provides some sample results
                    from using ECN.</t>

                    <t hangText="RFC 4821 S: &quot;Packetization Layer Path MTU
                    Discovery&quot; (March 2007)"><vspace blankLines="1"/>
                    Abstract: &quot;This document describes a robust method for
                    Path MTU Discovery (PMTUD) that relies on TCP or some other
                    Packetization Layer to probe an Internet path with
                    progressively larger packets. This method is described as
                    an extension to RFC 1191 and RFC 1981, which specify
                    ICMP-based Path MTU Discovery for IP versions 4 and 6,
                    respectively.&quot; <xref target="RFC4821"/></t>

                    <t hangText="RFC 6633 S: &quot;Deprecation of ICMP Source
                    Quench Messages&quot; (May 2012)"><vspace blankLines="1"/>
                    This document <xref target="RFC6633"/> formally deprecates
                    the use of ICMP Source Quench messages by transport
                    protocols and provides a recommendation against the
                    implementation of <xref target="RFC1016"/>.</t>
                </list></t>
            </section>

            <!-- Subsection: Header Compression -->
            <section title="Header Compression" anchor="compression">
                <t>ToDo</t>

                <t><list style="hanging">
                    <t hangText="RFC 1144 S: &quot;Compressing TCP/IP
                    Headers for Low-Speed Serial Links&quot; (February 1990)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC1144"/> describes a method
                    for compressing the headers of TCP/IP datagrams to improve
                    performance over low speed serial links. The method
                    described in this document is limited in its handling of
                    TCP options and cannot compress the headers of SYNs and
                    FINs.</t>

                    <t hangText="RFC 6846 S: &quot;RObust Header Compression
                    (ROHC): A Profile for TCP/IP (ROHC-TCP)&quot;
                    January 2013)"><vspace blankLines="1"/>
                    From abstract: "This document specifies a RObust Header
                    Compression (ROHC) profile for compression of TCP/IP
                    packets. The profile, called ROHC-TCP, provides efficient
                    and robust compression of TCP headers, including frequently
                    used TCP options such as selective acknowledgments (SACKs)
                    and Timestamps." <xref target="RFC6846"/> RFC 6846 is the
                    successor of RFC 4996. It fixes a technical issue with the
                    SACK compression and clarifies other compression methods
                    used.</t>
                </list></t>
            </section>

            <!-- Subsection: Defending Spoofing and Flooding Attacks -->
            <section title="Defending Spoofing and Flooding Attacks" anchor="antispoof">
                <t>By default, TCP lacks any cryptographic structures to
                differentiate legitimate segments and those spoofed from malicious
                hosts. Spoofing valid segments requires correctly guessing a
                number of fields. The documents in this sub-section describe ways
                to make that guessing harder, or to prevent it from being able to
                affect a connection negatively.</t>

                <t><list style="hanging">
                    <t hangText="RFC 4953 I: &quot;Defending TCP Against Spoofing
                    Attacks&quot; (July 2007)"><vspace blankLines="1"/>
                    This document <xref target="RFC4953"/> discusses the recently
                    increased vulnerability of long-lived TCP connections, such
                    as BGP connections, to resets (RSTs) spoofing attacks. The
                    document analyses the vulnerability, discussing proposed
                    solutions at the transport level and their inherent
                    challenges, as well as existing network level solutions and
                    the feasibility of their deployment.</t>

                    <t hangText="RFC 4987 I: &quot;TCP SYN Flooding Attacks and
                    Common Mitigations&quot; (August 2007)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC4987"/> describes the
                    well-known TCP SYN flooding attack. It analyses and
                    discusses various countermeasures against these attacks,
                    including their use and trade-offs.</t>

                    <t hangText="RFC 5925 S: &quot;The TCP Authentication
                    Option&quot; (May 2010)"><vspace blankLines="1"/>
                    This document <xref target="RFC5925"/> describes the TCP
                    Authentication Option (TCP-AO), which is used to
                    authenticate TCP segments. TCP-AO obsoletes the TCP MD5
                    Signature option of RFC 2385. It supports the use of
                    stronger hash functions, protects against replays for
                    long-lived TCP connections (as used, e.g., in BGP and LDP),
                    coordinates key exchanges between endpoints, and provides a
                    more explicit recommendation for external key management.
                    Cryptographic algorithms for TCP-AO are defined in
                    <xref target="RFC5926"/>.</t>

                    <t hangText="RFC 5926 S: &quot;Cryptographic Algorithms for
                    the TCP Authentication Option (TCP-AO)&quot; (May 2010)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC5926"/> specifies the
                    algorithms and attributes that can be used in TCP
                    Authentication Option's (TCP-AO) current manual keying
                    mechanism and provides the interface for future message
                    authentication codes (MACs).</t>

                    <t hangText="RFC 5961 S: &quot;Improving TCP's Robustness to
                    Blind In-Window Attacks&quot; (August 2010)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC5961"/> describes minor
                    modifications to how TCP handles inbound segments. This
                    renders TCP connections, especially long-lived connections
                    such as H-323 or BGP, are less vulnerable to spoofed packet
                    injection attacks where the 4-tuple (the source and
                    destination IP addresses and the source and destination
                    ports) has been guessed.</t>

                    <t hangText="RFC 6528 S: &quot;Defending Against Sequence
                    Number Attacks&quot; (February 2012)"><vspace blankLines="1"/>
                    Abstract: &quot;This document <xref target="RFC6528"/>
                    specifies an algorithm for the generation of TCP Initial
                    Sequence Numbers (ISNs), such that the chances of an
                    off-path attacker guessing the sequence numbers in use by a
                    target connection are reduced. This document revises (and
                    formally obsoletes) RFC 1948, and takes the ISN generation
                    algorithm originally proposed in that document to Standards
                    Track, formally updating RFC 793.</t>
                </list></t>
            </section>
        </section>

        <!-- Section: Experimental Extensions -->
        <section title="Experimental Extensions" anchor="may">
            <t>The RFCs in this section are still experimental, but they may
            become proposed standards in the future. At least part of the
            reason that they are still experimental is to gain more wide-scale
            experience with them before a standards track decision is made. By
            their publication as experimental RFCs, it is hoped that the
            community of TCP researchers will analyze and test the contents of
            these RFCs. Although experimentation is encouraged, there is not
            yet formal consensus that these are fully logical and safe
            behaviors. Wide-scale deployment of implementations that use these
            features should be well thought-out in terms of consequences.</t>

            <!-- Subsection: Architectural Guidelines -->
            <section title="Architectural Guidelines" anchor="architectural-may">
                <t>ToDo</t>

                <t><list style="hanging">
                    <t hangText="RFC 2140 I: &quot;TCP Control Block
                    Interdependence&quot; (April 1997)"><vspace blankLines="1"/>
                    This document <xref target="RFC2140"/> suggests how TCP
                    connections between the same endpoints might share
                    information, such as their congestion control state. To some
                    degree, this is done in practice by a few operating systems;
                    for example, Linux currently has a destination cache.
                    Although this RFC is technically informational, the concepts
                    it describes are in experimental use, so we include it in
                    this section.</t>

                    <t hangText="RFC 3124 S: &quot;The Congestion Manager&quot;
                    (June 2001)"><vspace blankLines="1"/>
                    This document <xref target="RFC3124"/>, the Congestion
                    Manager, is a related proposal to RFC 2140. The idea behind
                    the Congestion Manager, moving congestion control outside of
                    individual TCP connections, represents a modification to the
                    core of TCP, which supports sharing information among TCP
                    connections as well. Although a Proposed Standard, some
                    pieces of the Congestion Manager support architecture have
                    not been specified yet, and it has not achieved use or
                    implementation beyond experimental stacks, so it is not
                    listed among the standard TCP enhancements in this
                    roadmap.</t>
                </list></t>
            </section>

            <!-- Subsection: Congestion Control and Loss Recovery
            Extensions -->
            <section title="Congestion Control and Loss Recovery Extensions"
            anchor="cc-may">
                <t>ToDo</t>

                <t><list style="hanging">
                    <t hangText="RFC 2861 E: &quot;TCP Congestion Window
                    Validation&quot; (June 2000)"><vspace blankLines="1"/>
                    This document <xref target="RFC2861"/> suggests reducing the
                    congestion window over time when no packets are flowing.
                    This behavior is more aggressive than that specified in RFC
                    5681, which says that a TCP sender SHOULD set its congestion
                    window to the initial window after an idle period of an RTO
                    or greater.</t>

                    <t hangText="RFC 3649 E: &quot;HighSpeed TCP for Large
                    Congestion Windows&quot; (December 2003)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC3649"/> proposes a
                    modification to TCP's congestion control mechanism for use
                    with TCP connections with large congestion windows, to allow
                    TCP to achieve a higher throughput in high-bandwidth
                    environments.</t>

                    <t hangText="RFC 3742 E: &quot;Limited Slow-Start for TCP
                    with Large Congestion Windows&quot; (March 2004)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC3742"/> describes a more
                    conservative slow-start behavior to prevent massive packet
                    losses when a connection uses a very large congestion
                    window.</t>

                    <t hangText="RFC 5690 I: &quot;Adding Acknowledgement
                    Congestion Control to TCP&quot; (February 2010)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC5690"/> describes a
                    congestion control mechanism for acknowledgment (ACKs)
                    traffic in TCP. The mechanism is based on the acknowledgment
                    congestion control of the Datagram Congestion Control
                    Protocol's (DCCP's) <xref target="RFC4340"/> Congestion
                    Control Identifier (CCID) 2 <xref target="RFC4341"/>.</t>

                    <t hangText="RFC 5827 E: &quot;Early Retransmit for TCP and
                    SCTP&quot; (April 2010)"><vspace blankLines="1"/>
                    This document <xref target="RFC5827"/> proposes the
                    &quot;Early Retransmit&quot; mechanism for TCP (and SCTP)
                    that can be used to recover lost segments when a
                    connection's congestion window is small. In certain special
                    circumstances, Early Retransmit reduces the number of
                    duplicate acknowledgments required to trigger fast
                    retransmit to recover segment losses without waiting for a
                    lengthy retransmission timeout.</t>

                    <t hangText="RFC 6069 E: &quot;Making TCP more Robust to
                    Long Connectivity Disruptions (TCP-LCD)&quot; (December
                    2010)"><vspace blankLines="1"/>
                    This document <xref target="RFC6069"/> describes how
                    standard ICMP messages can be used to disambiguate true
                    congestion loss from non-congestion loss caused by
                    connectivity disruptions. It proposes a reversion strategy
                    of TCP's retransmission timer that enables a more prompt
                    detection of whether or not the connectivity has been
                    restored.</t>

                    <t hangText="RFC 6356 E: &quot;Coupled Congestion Control
                    for Multipath Transport Protocols&quot; (August 2011)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC6356"/> presents a congestion
                    control algorithm for multipath transport protocols such as
                    Multipath TCP. It couples the congestion control algorithms
                    running on different subflows by linking their increase
                    functions, and dynamically controls the overall
                    aggressiveness of the multipath flow. The result is an
                    algorithm that is fair to TCP at bottlenecks while moving
                    traffic away from congested links.</t>

                    <t hangText="RFC 6824 E: &quot;TCP Extensions for Multipath
                    Operation with Multiple Addresses&quot; (January 2013)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC6824"/> presents protocol
                    changes required to add multipath capability to TCP;
                    specifically, those for signaling and setting up multiple
                    paths ("subflows"), managing these subflows, reassembly of
                    data, and termination of sessions.</t>
                </list></t>
            </section>

            <!-- Subsection: Detection and Prevention of Spurious
            Retransmissions -->
            <section title="Detection and Prevention of Spurious
            Retransmissions" anchor="spourious-may">
                <t>ToDo</t>

                <t><list style="hanging">
                    <t hangText="RFC 3522 E: &quot;The Eifel Detection Algorithm
                    for TCP&quot; (April 2003)"><vspace blankLines="1"/>
                    The Eifel detection algorithm <xref target="RFC3522"/>
                    allows a TCP sender to detect a posteriori whether it has
                    entered loss recovery unnecessarily by using the TCP
                    timestamp option to solve the ACK ambiguity.</t>

                    <t hangText="RFC 3708 E: &quot;Using TCP Duplicate Selective
                    Acknowledgement (DSACKs) and Stream Control Transmission
                    Protocol (SCTP) Duplicate Transmission Sequence Numbers
                    (TSNs) to Detect Spurious Retransmissions&quot; (February
                    2004)"> <vspace blankLines="1"/>
                    Abstract: &quot;TCP and Stream Control Transmission Protocol
                    (SCTP) provide notification of duplicate segment receipt
                    through Duplicate Selective Acknowledgement (DSACKs) and
                    Duplicate Transmission Sequence Number (TSN) notification,
                    respectively. This document presents conservative methods
                    of using this information to identify unnecessary
                    retransmissions for various applications.&quot;
                    <xref target="RFC3708"/></t>

                    <t hangText="RFC 4653 E: &quot;Improving the Robustness of
                    TCP to Non-Congestion Events&quot; (August 2008)">
                    <vspace blankLines="1"/>
                    In the presence of non-congestion events, such as reordering
                    an out-of-order segment does not necessarily indicates a
                    lost segment and congestion. This document
                    <xref target="RFC4653"/> proposes to increase the threshold
                    used to trigger a fast retransmission from the fixed value
                    of three duplicate ACKs to about one congestion window of
                    data in order to disambiguate true segment loss from segment
                    reordering.</t>
                </list></t>
            </section>

           <!-- Subsection: Router Cooperative Signaling -->
            <section title="Router Cooperative Signaling" anchor="signaling-may">
                <t>ToDo</t>

                <t><list style="hanging">
                    <t hangText="RFC 3540 E: &quot;Robust Explicit Congestion
                    Notification (ECN) signaling with Nonces&quot; (June 2003)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC3540"/> describes an optional
                    addition to ECN that protects against accidental or
                    malicious concealment of marked packets from the TCP
                    sender.</t>

                    <t hangText="RFC 4782 E: &quot;Quick-Start for TCP and
                    IP&quot; (January 2007)"><vspace blankLines="1"/>
                    This document <xref target="RFC4782"/> specifies the
                    optional Quick-Start mechanism for TCP. This mechanism
                    allows connections to use higher sending rates at the
                    beginning of the data transfer or after an idle period,
                    provided that there is significant unused bandwidth along
                    the path, and the sender and all of the routers along the
                    path approve this higher rate.</t>

                    <t hangText="RFC 5562 E: &quot;Adding Explicit Congestion
                    Notification (ECN) Capability to TCP's SYN/ACK Packets&quot;
                    (June 2009)"><vspace blankLines="1"/>
                    This document <xref target="RFC5562"/> describes an
                    experimental modification to ECN <xref target="RFC3168"/>
                    for the use of ECN in TCP SYN/ACK packets. This would allow
                    to ECN-mark rather than drop the TCP SYN/ACK packet at an
                    ECN-capable router, and to avoid the severe penalty of a
                    retransmission timeout for a connection when the SYN/ACK
                    packet is dropped.</t>
                </list></t>
            </section>

            <!-- Subsection: Defending Spoofing and Flooding Attacks -->
            <section title="Defending Spoofing and Flooding Attacks"
            anchor="antispoof-may">
                <t>ToDo</t>

                <t><list style="hanging">
                    <t hangText="RFC 5461 I: &quot;TCP's Reaction to Soft
                    Errors&quot; (February 2009)"><vspace blankLines="1"/>
                    This document <xref target="RFC5461"/> describes a
                    non-standard but widely implemented modification to TCP's
                    handling of ICMP soft error messages that rejects pending
                    connection-requests when such error messages are received.
                    This behavior reduces the likelihood of long delays between
                    connection-establishment attempts that may arise in some
                    scenarios.</t>

                    <t hangText="RFC 5927 I: &quot;ICMP attacks against
                    TCP&quot; (July 2010)">
                    <vspace blankLines="1"/>
                    Abstract: &quot;This document discusses the use of the
                    Internet Control Message Protocol (ICMP) to perform a
                    variety of attacks against the Transmission Control Protocol
                    (TCP). Additionally, this document describes a number of
                    widely implemented modifications to TCP's handling of ICMP
                    error messages that help to mitigate these issues.&quot;
                    <xref target="RFC5927"/></t>
                </list></t>
            </section>
        </section>

        <!-- Section: Historic Extensions -->
        <section title="Historic Extensions" anchor="history">
            <t>The RFCs listed here define extensions that have thus far failed
            to arouse substantial interest from implementers and have never
            seen widespread, or were found to be defective for general use. Most
            of them are reclassifies by RFC 6247 <xref target="RFC6247"/> to
            Historic status.</t>

            <t><list style="hanging">
                <t hangText="RFC 721 U: &quot;Out-of-Band Control Signals in a
                Host-to-Host Protocol&quot; (September 1976): lack of interest">
                <vspace blankLines="1"/>
                RFC 721 <xref target="RFC0721"/> addresses the problem of
                implementing a reliable out-of-band signal (interrupts) for use
                in a host-to-host protocol. The proposal has not been included
                in the final TCP specification.</t>

                <t hangText="RFC 1078 U: &quot;TCP Port Service Multiplexer
                (TCPMUX)&quot; (November 1988): lack of interest">
                <vspace blankLines="1"/>
                This document <xref target="RFC1078"/> propose a protocol to
                contact multiple services on a single well-known TCP port using
                a service name instead of a well-known number.</t>

                <t hangText="RFC 1106 H: &quot;TCP Big Window and NAK
                Options&quot; (June 1989): found defective">
                <vspace blankLines="1"/>
                This RFC <xref target="RFC1106"/> defined an alternative to the
                Window Scale option for using large windows and described the
                "negative acknowledgement" or NAK option. There is a comparison
                of NAK and SACK methods, and early discussion of TCP over
                satellite issues. RFC 1110 explains some problems with the
                approaches described in RFC 1106. The options described in this
                document have not been adopted by the larger community,
                although NAKs are used in the SCPS-TP adaptation of TCP for
                satellite and spacecraft use, developed by the Consultative
                Committee for Space Data Systems (CCSDS).</t>

                <t hangText="RFC 1110 H: &quot;A Problem with the TCP Big
                Window Option&quot; (August 1989): deprecates RFC 1106">
                <vspace blankLines="1"/>
                Abstract: &quot;The TCP Big Window option discussed in RFC 1106
                will not work properly in an Internet environment which has
                both a high bandwidth * delay product and the possibility of
                disordering and duplicating packets. In such networks, the
                window size must not be increased without a similar increase in
                the sequence number space. Therefore, a different approach to
                big windows should be taken in the Internet.&quot;
                <xref target="RFC1110"/></t>

                <t hangText="RFC 1146 H: &quot;TCP Alternate Checksum
                Options&quot; (March 1990): lack of interest">
                <vspace blankLines="1"/>
                This document <xref target="RFC1146"/> defined more robust TCP
                checksums than the 16-bit ones-complement in use today. A
                typographical error in RFC 1145 is fixed in RFC 1146; otherwise,
                the documents are the same.</t>

                <t hangText="RFC 1263 I: &quot;TCP Extensions Considered
                Harmful&quot; (October 1991): lack of interest">
                <vspace blankLines="1"/>
                This document <xref target="RFC1263"/> argues against
                "backwards compatible" TCP extensions. Specifically mentioned
                are several TCP enhancements that have been successful,
                including timestamps, window scaling, PAWS, and SACK. RFC 1263
                presents an alternative approach called "protocol evolution",
                whereby several evolutionary versions of TCP would exist on
                hosts. These distinct TCP versions would represent upgrades to
                each other and could be header-incompatible. Interoperability
                would be provided by having a virtualization layer select the
                right TCP version for a particular connection. This idea did
                not catch on with the community, while the type of extensions
                RFC 1263 specifically targeted as harmful did become popular.
                </t>

                <t hangText="RFC 1379 H: &quot;Extending TCP for Transactions
                -- Concepts&quot; (November 1992): found defective">
                <vspace blankLines="1"/>
                See RFC 1644.</t>

                <t hangText="RFC 1644 H: &quot;T/TCP -- TCP Extensions for
                Transactions Functional Specification&quot; (July 1994):
                found defective"><vspace blankLines="1"/>
                The inventors of TCP believed that cached connection state
                could have been used to eliminate TCP's 3-way handshake, to
                support two-packet request/response exchanges. RFCs 1379
                <xref target="RFC1379"/> and 1644 <xref target="RFC1644"/> show
                that this is far from simple. Furthermore, T/TCP floundered on
                the ease of denial-of-service attacks that can result. One
                idea pioneered by T/TCP lives on in RFC 2140, in the sharing of
                state across connections.</t>

                <t hangText="RFC 1693 H: &quot;An Extension to TCP: Partial
                Order Service&quot; (November 1994): lack of interest">
                <vspace blankLines="1"/>
                This document <xref target="RFC1693"/> defines a TCP extension
                for applications that do not care about the order in which
                application-layer objects are received. Examples are
                multimedia and database applications. In practice, these
                applications either accept the possible performance loss
                because of TCP's strict ordering or they use more specialized
                transport protocols.</t>

                <t hangText="RFC 1705 I: &quot;Six Virtual Inches to the Left:
                The Problem with IPng&quot; (October 1994): lack of interest">
                <vspace blankLines="1"/>
                To overcome the exhaustion of the IP class B address space,
                suggest this document <xref target="RFC1705"/> that a new
                version of TCP (TCPng) needs to be developed and deployed.
                It proposes that a globally unique address be assigned to
                Transport layer to uniquely identify an internet host
                without specifying any routing information.</t>

                <t hangText="RFC 6013 I: &quot;TCP Cookie Transactions
                (TCPCT)&quot; (January 2011): lack of interest">
                <vspace blankLines="1"/>
                This document <xref target="RFC6013"/> describes a method to
                exchange a cookie (nonce) during the connection establishment
                to negotiates elimination of receiver state. These cookies are
                later used to inhibit premature closing of connections, and
                reduce retention of state after the connection has
                terminated.</t>

                <t>Since the cookie pair is too large to fit with the other TCP
                options in the 40 bytes of TCP option space, the document
                further describes method to extent the option space after the
                connection establishment.</t>

                <t>Although the RFC 6013 is publish in 2011, the author
                of this document places it in this section of the roadmap
                document due to two factors.
                    <?rfc subcompact="yes"?>
                    <list style="format (%c)">
                        <t>The author is not aware of any wide deployment and
                        use of RFC 6013.</t>
                        <t>RFC 6013 uses experimental TCP option codepoints,
                        which prohibits a large scale deployment.</t>
                    </list>
                    <?rfc subcompact="no"?>
                </t>
            </list></t>
        </section>

        <!-- Section: Support Documents -->
        <section title="Support Documents" anchor="support">
            <t>This section contains several classes of documents that do not
            necessarily define current protocol behaviors, but that are
            nevertheless of interest to TCP implementers. <xref
            target="foundation"/> describes several foundational RFCs that
            give modern readers a better understanding of the principles
            underlying TCP's behaviors and development over the years.  <xref
             target="architectural-supp"/> contains architectural guidelines
            and principles for TCP architects and designers. The documents
            listed in <xref target="pilc"/> provide advice on using TCP in
            various types of network situations that pose challenges above
            those of typical wired links. Guidance for developing, analyzing,
            and evaluating TCP is given in <xref target="development"/>. Some
            implementation notes and implementation advices can be found in
            <xref target="tcpimpl"/>. The TCP Management Information Bases are
            described in <xref target="mibs"/>. RFCs that describe tools for
            testing and debugging TCP implementations or that contain
            high-level tutorials on the protocol are listed <xref
            target="tools"/>, and <xref target="studies"/> lists a number
            of case studies that have explored TCP performance.</t>

            <!-- Subsection: Foundational Works -->
            <section title="Foundational Works" anchor="foundation">
                <t>The documents listed in this section contain information
                that is largely duplicated by the standards documents
                previously discussed. However, some of them contain a greater
                depth of problem statement explanation or other context.
                Particularly, RFCs 813 - 817 (known as the "Dave Clark Five")
                describe some early problems and solutions (RFC 815 only
                describes the reassembly of IP fragments and is not included
                in this TCP roadmap).</t>

                <t><list style="hanging">
                    <t hangText="RFC 675 U: &quot;Specification of Internet
                    Transmission Control Program&quot; (December 1974)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC0675"/> is a very early
                    precursor of the infamous RFC 793 which already contained
                    the three-way handshake in its final form and the concept
                    of sliding windows for reliable data transmission. Apart
                    from that the segment layout is totally different and the
                    specified API differs from the latter RFC 793.</t>

                    <t hangText="RFC 761 H: &quot;DoD standard Transmission
                    Control Protocol&quot; (Januar 1980)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC0761"/> is the immediate
                    predecessor of RFC 793. The header format, the connection
                    establishment including the different connection states,
                    and the overall API correspond mostly the final Standard
                    RFC 793.</t>

                    <t hangText="RFC 813 U: &quot;Window and Acknowledgement
                    Strategy in TCP&quot; (July 1982)"><vspace blankLines="1"/>
                    This document <xref target="RFC0813"/> contains an early
                    discussion of Silly Window Syndrome and its avoidance and
                    motivates and describes the use of delayed
                    acknowledgments.</t>

                    <t hangText="RFC 814 U: &quot;Name, Addresses, Ports, and
                    Routes&quot; (July 1982)"><vspace blankLines="1"/>
                    Suggestions and guidance for the design of tables and
                    algorithms to keep track of various identifiers within a
                    TCP/IP implementation are provided by this document
                    <xref target="RFC0814"/>.</t>

                    <t hangText="RFC 816 U: &quot;Fault Isolation and
                    Recovery&quot; (July 1982)"><vspace blankLines="1"/>
                    In this document <xref target="RFC0816"/>, TCP's response
                    to indications of network error conditions such as timeouts
                    or received ICMP messages is discussed.</t>

                    <t hangText="RFC 817 U: &quot;Modularity and Efficiency in
                    Protocol Implementation&quot; (July 1982)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC0817"/> contains
                    implementation suggestions that are general and not
                    TCP specific. However, they have been used to develop TCP
                    implementations and describe some performance implications
                    of the interactions between various layers in the Internet
                    stack.</t>

                    <t hangText="RFC 872 U: &quot;TCP-ON-A-LAN&quot; (September
                    1982)"><vspace blankLines="1"/>
                    Conclusion: &quot;The sometimes-expressed fear that using
                    TCP on a local net is a bad idea is unfounded.&quot;
                    <xref target="RFC0872"/> </t>

                    <t hangText="RFC 896 U: &quot;Congestion Control in IP/TCP
                    Internetworks&quot; (January 1984)"><vspace blankLines="1"/>
                    This document <xref target="RFC0896"/> contains some early
                    experiences with congestion collapse and some initial
                    thoughts on how to avoid it using congestion control in
                    TCP.</t>

                    <t hangText="RFC 964 U: &quot;Some Problems with the
                    Specification of the Military Standard Transmission Control
                    Protocol&quot; (November 1985)"><vspace blankLines="1"/>
                    This document <xref target="RFC0964"/> points out several
                    specification bugs in the US Military's MIL-STD-1778
                    document, which was intended as a successor to RFC 793.
                    This serves to remind us of the difficulty in specification
                    writing (even when we work from existing documents!).</t>
                </list></t>
            </section>

            <!-- Subsection: Architectural Guidelines -->
            <section title="Architectural Guidelines" anchor="architectural-supp">
                <t>ToDo</t>

                <t><list style="hanging">
                    <t hangText="RFC 1958 I: &quot;Architectural Principles of
                    the Internet&quot; (June 1996)"><vspace blankLines="1"/>
                    This document <xref target="RFC1958"/> describes the
                    underlying principles of the Internet architecture. It
                    provides guidelines for network systems design that have
                    proven useful in the evolution of the Internet.</t>

                    <t hangText="RFC 2914 B: &quot;Congestion Control
                    Principles&quot; (September 2000)"><vspace blankLines="1"/>
                    This document <xref target="RFC2914"/> motivates the use of
                    end-to-end congestion control for preventing congestion
                    collapse and providing fairness to TCP.</t>

                    <t hangText="RFC 3439 I: &quot;Some Internet Architectural
                    Guidelines and Philosophy&quot; (December 2002)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC3439"/> extents RFC 1958 by
                    outlining some philosophical guidelines for architects and
                    designers of Internet backbone networks. The document
                    describes the Simplicity Principle, which states that
                    complexity is the primary mechanism that impedes efficient
                    scaling.</t>

                    <t hangText="RFC 6182 I: &quot;Architectural Guidelines for
                    Multipath TCP Development&quot; (March 2011)">
                    <vspace blankLines="1"/>
                    Abstract: &quot;This document outlines architectural
                    guidelines for the development of a Multipath Transport
                    Protocol, with references to how these architectural
                    components come together in the development of a Multipath
                    TCP (MPTCP). This document lists certain high-level design
                    decisions that provide foundations for the design of the
                    MPTCP protocol, based upon these architectural
                    requirements&quot; <xref target="RFC6182"/></t>

               </list></t>
            </section>

            <!-- Subsection: Difficult Network Environments -->
            <section title="Difficult Network Environments" anchor="pilc">
                <t>As the internetworking field has explored wireless,
                satellite, cellular telephone, and other kinds of link-layer
                technologies, a large body of work has built up on enhancing
                TCP performance for such links. The RFCs listed in this
                section describe some of these more challenging network
                environments and how TCP interacts with them.</t>

                <t><list style="hanging">
                    <t hangText="RFC 2488 B: &quot;Enhancing TCP Over
                    Satellite Channels using Standard Mechanisms&quot;
                    (January 1999)"><vspace blankLines="1"/>
                    From abstract: &quot;While TCP works over satellite channels
                    there are several IETF standardized mechanisms that enable
                    TCP to more effectively utilize the available capacity of
                    the network path. This document outlines some of these TCP
                    mitigations. At this time, all mitigations discussed in
                    this document are IETF standards track mechanisms (or are
                    compliant with IETF standards).&quot;
                    <xref target="RFC2488"/></t>

                    <t hangText="RFC 2757 I: &quot;Long Thin Networks&quot;
                    (January 2000)"><vspace blankLines="1"/>
                    Several methods of improving TCP performance over long thin
                    networks, such as geosynchronous satellite links, are
                    discussed in this document <xref target="RFC2757"/>. A
                    particular set of TCP options is developed that should work
                    well in such environments and be safe to use in the global
                    Internet. The implications of such environments have been
                    further discussed in RFC 3150 and RFC 3155, and these
                    documents should be preferred where there is overlap
                    between them and RFC 2757.</t>

                    <t hangText="RFC 2760 I: &quot;Ongoing TCP Research Related
                    to Satellites&quot; (February 2000)"><vspace blankLines="1"/>
                    This document <xref target="RFC2760"/> discusses the
                    advantages and disadvantages of several different
                    experimental means of improving TCP performance over
                    long-delay or error-prone paths. These include T/TCP,
                    larger initial windows, byte counting, delayed
                    acknowledgments, slow start thresholds, NewReno and
                    SACK-based loss recovery, FACK <xref target="MM96"/>, ECN,
                    various corruption-detection mechanisms, congestion
                    avoidance changes for fairness, use of multiple parallel
                    flows, pacing, header compression, state sharing, and ACK
                    congestion control, filtering, and reconstruction. Although
                    RFC 2488 looks at standard extensions, this document
                    focuses on more experimental means of performance
                    enhancement.</t>

                    <t hangText="RFC 3135 I: &quot;Performance Enhancing
                    Proxies Intended to Mitigate Link-Related Degradations&quot;
                    (June 2001)"><vspace blankLines="1"/>
                    From abstract: &quot;This document is a survey of Performance
                    Enhancing Proxies (PEPs) often employed to improve degraded
                    TCP performance caused by characteristics of specific link
                    environments, for example, in satellite, wireless WAN, and
                    wireless LAN environments. Different types of Performance
                    Enhancing Proxies are described as well as the mechanisms
                    used to improve performance.&quot;
                    <xref target="RFC3135"/></t>

                    <t hangText="RFC 3150 B: &quot;End-to-end Performance
                    Implications of Slow Links&quot; (July 2001)">
                    <vspace blankLines="1"/>
                    From abstract: &quot;This document makes performance-related
                    recommendations for users of network paths that traverse
                    "very low bit-rate" links....This recommendation may be
                    useful in any network where hosts can saturate available
                    bandwidth, but the design space for this recommendation
                    explicitly includes connections that traverse 56 Kb/second
                    modem links or 4.8 Kb/second wireless access links - both
                    of which are widely deployed.&quot;
                    <xref target="RFC3150"/></t>

                    <t hangText="RFC 3155 B: &quot;End-to-end Performance
                    Implications of Links with Errors&quot; (August 2001)">
                    <vspace blankLines="1"/>
                    From abstract: &quot;This document discusses the specific TCP
                    mechanisms that are problematic in environments with high
                    uncorrected error rates, and discusses what can be done to
                    mitigate the problems without introducing intermediate
                    devices into the connection.&quot;
                    <xref target="RFC3155"/></t>

                    <t hangText="RFC 3366 B: &quot;Advice to link designers on
                    link Automatic Repeat reQuest (ARQ)&quot; (August 2002)">
                    <vspace blankLines="1"/>
                    From abstract: &quot;This document provides advice to the
                    designers of digital communication equipment and link-layer
                    protocols employing link-layer Automatic Repeat reQuest
                    (ARQ) techniques. This document presumes that the
                    designers wish to support Internet protocols, but may be
                    unfamiliar with the architecture of the Internet and with
                    the implications of their design choices for the
                    performance and efficiency of Internet traffic carried over
                    their links.&quot; <xref target="RFC3366"/></t>

                    <t hangText="RFC 3449 B: &quot;TCP Performance Implications
                    of Network Path Asymmetry&quot; (December 2002)">
                    <vspace blankLines="1"/>
                    From abstract: &quot;This document describes TCP performance
                    problems that arise because of asymmetric effects. These
                    problems arise in several access networks, including
                    bandwidth-asymmetric networks and packet radio subnetworks,
                    for different underlying reasons. However, the end result
                    on TCP performance is the same in both cases: performance
                    often degrades significantly because of imperfection and
                    variability in the ACK feedback from the receiver to the
                    sender.</t>

                    <t>The document details several mitigations to these
                    effects, which have either been proposed or evaluated in
                    the literature, or are currently deployed in networks.&quot;
                    <xref target="RFC3449"/></t>

                    <t hangText="RFC 3481 B: &quot;TCP over Second (2.5G) and
                    Third (3G) Generation Wireless Networks&quot; (February 2003)">
                    <vspace blankLines="1"/>
                    From abstract: &quot;This document describes a profile for
                    optimizing TCP to adapt so that it handles paths including
                    second (2.5G) and third (3G) generation wireless networks.&quot;
                    <xref target="RFC3481"/></t>

                    <t hangText="RFC 3819 B: &quot;Advice for Internet Subnetwork
                    Designers&quot; (July 2004)"><vspace blankLines="1"/>
                    This document <xref target="RFC3819"/> describes how TCP
                    performance can be negatively affected by some particular
                    lower-layer behaviors and provides guidance in designing
                    lower-layer networks and protocols to be amicable to TCP.</t>
                </list></t>
            </section>

            <!-- Subsection: Guidance for Developing, Analyzing, and Evaluating TCP -->
            <section title="Guidance for Developing, Analyzing, and Evaluating TCP"
            anchor="development">
                <t>ToDo</t>

                <t><list style="hanging">
                    <t hangText="RFC 4774 B: &quot;Specifying Alternate
                    Semantics for the Explicit Congestion Notification (ECN)
                    Field&quot; (November 2006)"><vspace blankLines="1"/>
                    This document <xref target="RFC4774"/> discusses some of the
                    issues in defining alternate semantics for the ECN field,
                    and specifies requirements for a safe co- existence in an
                    Internet that may include routers that do not understand the
                    defined alternate semantics.</t>

                    <t hangText="RFC 5033 B: &quot;Specifying New Congestion
                    Control Algorithms&quot; (August 2007)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC5033"/> considers the
                    evaluation of suggested congestion control algorithms that
                    differ from the principles outlined in RFC 2914. It is
                    useful for authors of such algorithms as well as for IETF
                    members reviewing the associated documents.</t>

                    <t hangText="RFC 5166 I: &quot;Metrics for the Evaluation of
                    Congestion Control Mechanisms&quot; (March 2008)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC5166"/> discusses metrics
                    that needs to be considered when evaluating new or modified
                    congestion control mechanisms for the Internet. Among
                    others, the document discusses throughput, delay, loss
                    rates, response times, fairness and robustness for
                    challenging environments.</t>

                    <t hangText="RFC 6181 I: &quot;Threat Analysis for TCP
                    Extensions for Multipath Operation with Multiple
                    Addresses&quot; (March 2011)"><vspace blankLines="1"/>
                    This document <xref target="RFC6181"/> describes a threat
                    analysis for Multipath TCP (MPTCP). The document discusses
                    several types of attacks and provides recommendations for
                    MPTCP designers how to create an MPTCP specification that is
                    as secure as the current (single-path) TCP.</t>
               </list></t>
            </section>

            <!-- Subsection: Implementation Advice -->
            <section title="Implementation Advice" anchor="tcpimpl">
                <t><list style="hanging">
                    <t hangText="RFC 794 U: &quot;PRE-EMPTION&quot;
                    (September 1981)"><vspace blankLines="1"/>
                    This document <xref target="RFC0794"/> discusses on a
                    high-level the realization of pre-emption in TCP.</t>

                    <t hangText="RFC 879 U: &quot;The TCP Maximum Segment Size
                    and Related Topics&quot; (November 1983)">
                    <vspace blankLines="1"/>
                    Abstract: &quot;This memo discusses the TCP Maximum Segment
                    Size Option and related topics. The purposes is to clarify
                    some aspects of TCP and its interaction with IP. This memo
                    is a clarification to the TCP specification, and contains
                    information that may be considered as 'advice to
                    implementers'.&quot; <xref target="RFC0879"/></t>

                    <t hangText="RFC 1071 U: &quot;Computing the Internet
                    Checksum&quot; (September 1988)"><vspace blankLines="1"/>
                    This document <xref target="RFC1071"/> lists a number of
                    implementation techniques for efficiently computing the
                    Internet checksum (used by TCP).</t>

                    <t hangText="RFC 1624 I: &quot;Computation of the
                    Internet Checksum via Incremental Update&quot; (May 1994)">
                    <vspace blankLines="1"/>
                    Incrementally updating the Internet checksum is useful to
                    routers in updating IP checksums. Some middleboxes that
                    alter TCP headers may also be able to update the TCP
                    checksum incrementally. This document
                    <xref target="RFC1624"/> expands upon the explanation of the
                    incremental update procedure in RFC 1071.</t>

                    <t hangText="RFC 1936 I: &quot;Implementing the Internet
                    Checksum in Hardware&quot; (April 1996)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC1936"/> describes the
                    motivation for implementing the Internet checksum in
                    hardware, rather than in software, and provides an
                    implementation example.</t>

                    <t hangText="RFC 2525 I: &quot;Known TCP Implementation
                    Problems&quot; (March 1999)"><vspace blankLines="1"/>
                    From abstract: &quot;This memo catalogs a number of known
                    TCP implementation problems. The goal in doing so is to
                    improve conditions in the existing Internet by enhancing
                    the quality of current TCP/IP implementations.&quot;
                    <xref target="RFC2525"/></t>

                    <t hangText="RFC 2923 I: &quot;TCP Problems with Path
                    MTU Discovery&quot; (September 2000)">
                    <vspace blankLines="1"/>
                    From abstract: &quot;This memo catalogs several known
                    Transmission Control Protocol (TCP) implementation problems
                    dealing with Path Maximum Transmission Unit Discovery
                    (PMTUD), including the long-standing black hole problem,
                    stretch acknowlegements (ACKs) due to confusion between
                    Maximum Segment Size (MSS) and segment size, and MSS
                    advertisement based on PMTU.&quot;
                    <xref target="RFC2923"/></t>

                    <t hangText="RFC 3360 B: &quot;Inappropriate TCP Resets
                    Considered Harmful&quot; (August 2002)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC3360"/> is a plea that
                    firewall vendors not send gratuitous TCP RST (Reset)
                    packets when unassigned TCP header bits are used. This
                    practice prevents desirable extension and evolution of the
                    protocol and thus is potentially harmful to the future of
                    the Internet.</t>

                    <t hangText="RFC 3493 I: &quot;Basic Socket Interface
                    Extensions for IPv6&quot; (February 2003)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC3493"/> describes the de
                    facto standard sockets API for programming with TCP. This
                    API is implemented nearly ubiquitously in modern operating
                    systems and programming languages.</t>

                    <t hangText="RFC 6056 B: &quot;Recommendations for
                    Transport-Protocol Port Randomization&quot;
                    (December 2010)"><vspace blankLines="1"/>
                    This document <xref target="RFC6056"/> describes a number of
                    simple and efficient methods for the selection of the client
                    port number. It reduces the possibility of an attacker
                    guessing the correct five-tuple (Protocol,
                    Source/Destination Address, Source/Destination Port).</t>

                    <t hangText="RFC 6191 B: &quot;Reducing the TIME-WAIT State
                    Using TCP timestamps&quot; (April 2011)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC6191"/> describes the usage
                    of the TCP Timestamps option [JBB92] to perform heuristics
                    to determine whether or not to allow the creation of a new
                    incarnation of a connection that is in the TIME-WAIT
                    state.</t>

                    <t hangText="RFC 6429 I: &quot;TCP Sender Clarification for
                    Persist Condition&quot; (December 2011)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC6429"/> clarifies the actions
                    that a TCP can be taken on connections that are experiencing
                    the Zero Window Probe (ZWP) condition.</t>

                    <t hangText="RFC 6691 I: &quot;TCP Options and Maximum
                    Segment Size (MSS)&quot; (July 2012)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC6691"/> clarifies what value
                    to use with the TCP Maximum Segment Size (MSS) option when
                    IP and TCP options are in use.</t>

                    <t hangText="RFC 6897 I: &quot;Multipath TCP (MPTCP)
                    Application Interface Considerations (March 2013)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC6897"/> characterizes the
                    impact that Multipath TCP (MPTCP) may have on applications.
                    It further discusses compatibility issues of MPTCP in
                    combination with non-MPTCP-aware applications. Finally, it
                    describes a basic API that is a simple extension of TCP's
                    interface for MPTCP-aware applications.</t>
                </list></t>
            </section>

            <!-- Subsection: Management Information Bases -->
            <section title="Management Information Bases" anchor="mibs">
                <t>The first MIB module defined for use with Simple Network
                Management Protocol (SNMP) (in RFC 1066 and its update, RFC
                1156) was a single monolithic MIB module, called MIB-I. This
                evolved over time to be MIB-II (RFC 1213). It then became
                apparent that having a single monolithic MIB module was not
                scalable, given the number and breadth of MIB data definitions
                that needed to be included. Thus, additional MIB modules were
                defined, and those parts of MIB-II that needed to evolve were
                split off. Eventually, the remaining parts of MIB-II were also
                split off, the TCP-specific part being documented in RFC
                2012.</t>

                <t>RFC 2012 was obsoleted by RFC 4022, which is the primary TCP
                MIB document today. MIB-I, defined in RFC 1156, has been
                obsoleted by the MIB-II specification in RFC 1213. For current
                TCP implementers, RFC 4022 should be supported.</t>

                <t><list style="hanging">
                    <t hangText="RFC 1066 H: &quot;Management Information Base
                    for Network Management of TCP/IP-based Internets&quot;
                    (August 1988)"><vspace blankLines="1"/>
                    This document <xref target="RFC1066"/> was the description
                    of the TCP MIB. It was obsoleted by RFC 1156.</t>

                    <t hangText="RFC 1156 S: &quot;Management Information Base
                    for Network Management of TCP/IP-based Internets&quot;
                    (May 1990)"><vspace blankLines="1"/>
                    This document <xref target="RFC1156"/> describes the
                    required MIB fields for TCP implementations, with minor
                    corrections and no technical changes from RFC 1066, which
                    it obsoletes. This is the standards track document for
                    MIB-I.</t>

                    <t hangText="RFC 1213 S: &quot;Management Information Base
                    for Network Management of TCP/IP-based Internets:
                    MIB-II&quot; (March 1991)"><vspace blankLines="1"/>
                    This document <xref target="RFC1213"/> describes the second
                    version of the MIB in a monolithic form. RFC 2012 updates
                    this document by splitting out the TCP-specific
                    portions.</t>

                    <t hangText="RFC 2012 S: &quot;SNMPv2 Management Information
                    Base for the Transmission Control Protocol using SMIv2&quot;
                    (November 1996)"><vspace blankLines="1"/>
                    This document <xref target="RFC2012"/> defined the TCP MIB,
                    in an update to RFC 1213. It is now obsoleted by RFC 4022.
                    </t>

                    <t hangText="RFC 2452 S: &quot;IP Version 6 Management
                    Information Base for the Transmission Control Protocol&quot;
                    (December 1998)"><vspace blankLines="1"/>
                    This document <xref target="RFC2452"/> augments RFC 2012 by
                    adding an IPv6-specific connection table. The rest of 2012
                    holds for any IP version. RFC 2012 is now obsoleted by RFC
                    4022.</t>

                    <t>Although it is a standards track document, RFC 2452 is
                    considered a historic mistake by the MIB community, as it
                    is based on the idea of parallel IPv4 and IPv6 structures.
                    Although IPv6 requires new structures, the community has
                    decided to define a single generic structure for both IPv4
                    and IPv6. This will aid in definition, implementation, and
                    transition between IPv4 and IPv6.</t>

                    <t hangText="RFC 4022 S: &quot;Management Information Base
                    for the Transmission Control Protocol (TCP)&quot;
                    (March 2005)"><vspace blankLines="1"/>
                    This document <xref target="RFC4022"/> obsoletes RFC 2012
                    and RFC 2452 and specifies the current standard for the
                    TCP MIB that should be deployed.</t>
                </list></t>
            </section>

            <!-- Subsection: Tools and Tutorials -->
            <section title="Tools and Tutorials" anchor="tools">
                <t><list style="hanging">
                    <t hangText="RFC 1180 I: &quot;TCP/IP Tutorial&quot;
                    (January 1991)"><vspace blankLines="1"/>
                    This document <xref target="RFC1180"/> is an extremely
                    brief overview of the TCP/IP protocol suite as a whole. It
                    gives some explanation as to how and where TCP fits in.</t>

                    <t hangText="RFC 1470 I: &quot;FYI on a Network Management
                    Tool Catalog: Tools for Monitoring and Debugging TCP/IP
                    Internets and Interconnected Devices&quot; (June 1993)">
                    <vspace blankLines="1"/>
                    A few of the tools that this document
                    <xref target="RFC1470"/> describes are still maintained and
                    in use today; for example, ttcp and tcpdump. However, many
                    of the tools described do not relate specifically to TCP and
                    are no longer used or easily available.</t>

                    <t hangText="RFC 2398 I: &quot;Some Testing Tools for TCP
                    Implementors&quot; (August 1998)"><vspace blankLines="1"/>
                    This document <xref target="RFC2398"/> describes a number
                    of TCP packet generation and analysis tools. Although some of
                    these tools are no longer readily available or widely used,
                    for the most part they are still relevant and useable.</t>

                    <t hangText="RFC 4614 I: &quot;A Roadmap for Transmission
                    Control Protocol (TCP) Specification Documents&quot;
                    (September 2006)"><vspace blankLines="1"/>
                    RFC 4614 <xref target="RFC4614"/> is the precursor of this
                    document.</t>

                    <t hangText="RFC 5783 I: &quot;Congestion Control in the RFC
                    Series&quot; (February 2010)"><vspace blankLines="1"/>
                    This document <xref target="RFC5783"/> provides an overview
                    of RFCs related to congestion control that have been
                    published so far. The focus of the document are on
                    end-host-based congestion control.</t>

                    <t hangText="RFC 6077 I: &quot;Open Research Issues in
                    Internet Congestion Control&quot; (January 2011)">
                    <vspace blankLines="1"/>
                    This RFC <xref target="RFC6077"/>  summarizes the main open
                    problems in the domain of Internet congestion control. As a
                    good starting point for newcomers, the document describes
                    several new challenges that are becoming important as the
                    network grows, as well as some issues that have been known
                    for many years.</t>
                </list></t>
            </section>

            <!-- Subsection: Case Studies -->
            <section title="Case Studies" anchor="studies">
                <t><list style="hanging">
                    <t hangText="RFC 700 U: &quot;A Protocol Experiment&quot;
                    (August 1974)"><vspace blankLines="1"/>
                    This document <xref target="RFC0700"/> presents a field
                    report about the deployment of a very early version of
                    TCP, the so-called INWN #39 protocol, which is originally
                    described by Cerf and Kahn in INWG Note #39
                    <xref target="CK73"/> to use a PDP-11 line printer via the
                    ARPANET.</t>

                    <t hangText="RFC 889 U: &quot;Internet Delay Experiments&quot;
                    (December 1983)"><vspace blankLines="1"/>
                    This document <xref target="RFC0889"/> is a status report
                    about experiments concerning the TCP retransmission timeout
                    calculation and also provides advices for implementers.</t>

                    <t hangText="RFC 1337 I: &quot;TIME-WAIT Assassination
                    Hazardsin TCP&quot; (May 1992)"><vspace blankLines="1"/>
                    This document <xref target="RFC1337"/> points out a problem
                    with acting on received reset segments while one is in the
                    TIME-WAIT state. The main recommendation is that hosts in
                    TIME-WAIT ignore resets. This recommendation might not
                    currently be widely implemented.</t>

                    <t hangText="RFC 2415 I: &quot;Simulation Studies of
                    Increased Initial TCP Window Size&quot; (September 1998)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC2415"/> presents results of
                    some simulations using TCP initial windows greater than 1
                    segment. The analysis indicates that user-perceived
                    performance can be improved by increasing the initial
                    window to 3 segments.</t>

                    <t hangText="RFC 2416 I: &quot;When TCP Starts Up With Four
                    Packets Into Only Three Buffers&quot; (September 1998)">
                    <vspace blankLines="1"/>
                    This document <xref target="RFC2416"/> uses simulation
                    results to clear up some concerns about using an initial
                    window of 4 segments when the network path has less
                    provisioning.<vspace blankLines="1"/></t>

                    <t hangText="RFC 2884 I: &quot;Performance Evaluation of
                    Explicit Congestion Notification (ECN) in IP Networks&quot;
                    (July 2000)"><vspace blankLines="1"/>
                    This document <xref target="RFC2884"/> describes
                    experimental results that show some improvements to the
                    performance of both short- and long-lived connections due to
                    ECN.</t>
                </list></t>
            </section>
        </section>

        <!-- Section: Undocumented TCP Features -->
        <section anchor="undocumented" title="Undocumented TCP Features">
            <t>There are a few important implementation tactics for the TCP
            that have not yet been described in any RFC. Although this roadmap
            is primarily concerned with mapping the TCP RFCs, this section is
            included because an implementer needs to be aware of these
            important issues.</t>

            <t><list style="hanging">
                <t hangText="Header Prediction"><vspace blankLines="1"/>
                Header prediction is a trick to speed up the processing of
                segments. Van Jacobson and Mike Karels developed the technique
                in the late 1980s. The basic idea is that some processing time
                can be saved when most of a segment's fields can be predicted
                from previous segments. A good description of this was sent to
                the TCP-IP mailing list by Van Jacobson on March 9, 1988:</t>

                <t>"Quite a bit of the speedup comes from an algorithm that we
                ('we' refers to collaborator Mike Karels and myself) are
                calling "header prediction". The idea is that if you're in the
                middle of a bulk data transfer and have just seen acpacket, you
                know what the next packet is going to look like: It will look
                just like the current packet with either the sequence number or
                ack number updated (depending on whether you're the sender or
                receiver). Combining this with the "Use hints" epigram from
                Butler Lampson's classic "Epigrams for System Designers", you
                start to think of the tcp state (rcv.nxt, snd.una, etc.) as
                "hints" about what the next packet should look like.</t>

                <t>If you arrange those "hints" so they match the layout of a
                tcp packet header, it takes a single 14-byte compare to see if
                your prediction is correct (3 longword compares to pick up the
                send &amp; ack sequence numbers, header length, flags and
                window, plus a short compare on the length). If the prediction
                is correct, there's a single test on the length to see if
                you're the sender or receiver followed by the appropriate
                processing. E.g., if the length is non-zero (you're the
                receiver), checksum and append the data to the socket buffer
                then wake any process that's sleeping on the buffer. Update
                rcv.nxt by the length of this packet (this updates your
                "prediction" of the next packet). Check if you can handle
                another packet the same size as the current one.  If not, set
                one of the unused flag bits in your header prediction to
                guarantee that the prediction will fail on the next packet and
                force you to go through full protocol processing. Otherwise,
                you're done with this packet. So, the *total* tcp protocol
                processing, exclusive of checksumming, is on the order of 6
                compares and an add."</t>
            </list></t>
        </section>

        <!-- Section: Security Considerations -->
        <section title="Security Considerations">
            <t>This document introduces no new security considerations. Each
            RFC listed in this document attempts to address the security
            considerations of the specification it contains.</t>
        </section>

        <!-- Section: IANA Considerations -->
        <section title="IANA Considerations">
            <t>This document contains no IANA considerations.</t>
        </section>

        <!-- Section: Acknowledgments -->
        <section title="Acknowledgments">
            <t>This document grew out of a discussion on the end2end-interest
            mailing list, the public list of the End-to-End Research Group of
            the IRTF, and continued development under the IETF's TCP
            Maintenance and Minor Extensions (TCPM) working group. We thank
            Joe Touch, Reiner Ludwig, Pekka Savola, Gorry Fairhurst, and Sally
            Floyd for their contributions, in particular. The chairs of the
            TCPM working group, Mark Allman and Ted Faber, have been
            instrumental in the development of this document. Keith McCloghrie
            provided some useful notes and clarification on the various
            MIB-related RFCs.</t>
        </section>
    </middle>

    <back>
        <references title="Normative References">
        <!-- Section: Basic Functionality -->
        &RFC0793;
        &RFC1122;
        &RFC2460;
        &RFC2873;
        &RFC3390;
        &RFC5681;
        &RFC6298;

        <!-- Subsection: Fundamental Changes -->
        &RFC1323;
        &RFC2675;
        &RFC5482;
        &RFC6093;

        <!-- Subsection: Congestion Control and Loss Recovery Extensions -->
        &RFC3042;
        &RFC3465;
        &RFC6582;

        <!-- Subsection: SACK-Based Loss Recovery and Congestion Control -->
        &RFC2018;
        &RFC2883;
        &RFC6675;

        <!-- Subsection: Detection and Prevention of Spurious Retransmissions -->
        &RFC4015;
        &RFC5682;

        <!-- Subsection: Router Cooperative Signaling -->
        &RFC1191;
        &RFC1981;
        &RFC3168;
        &RFC4821;
        &RFC6633;

        <!-- Subsection: Header Compression-->
        &RFC1144;
        &RFC6846;

        <!-- Subsection: Defending Spoofing and Flooding Attacks -->
        &RFC4953;
        &RFC4987;
        &RFC5925;
        &RFC5926;
        &RFC5961;
        &RFC6528;

        <!-- Subsection: Architectural Guidelines -->
        &RFC2140;
        &RFC3124;

        <!-- Subsection: Congestion Control and Loss Recovery Extensions -->
        &RFC2861;
        &RFC3649;
        &RFC3742;
        &RFC5690;
        &RFC5827;
        &RFC6069;
        &RFC6356;
        &RFC6824;

        <!-- Subsection: Detection and Prevention of Spurious Retransmissions -->
        &RFC3522;
        &RFC3708;
        &RFC4653;

       <!-- Subsection: Router Cooperative Signaling -->
        &RFC3540;
        &RFC4782;
        &RFC5562;

        <!-- Subsection: Defending Spoofing and Flooding Attacks -->
        &RFC5461;
        &RFC5927;

        <!-- Section: Historic Extensions -->
        &RFC0721;
        &RFC1078;
        &RFC1106;
        &RFC1110;
        &RFC1146;
        &RFC1263;
        &RFC1379;
        &RFC1644;
        &RFC1693;
        &RFC1705;
        &RFC6013;
        &RFC6247;

        <!-- Subsection: Foundational Works -->
        &RFC0675;
        &RFC0761;
        &RFC0813;
        &RFC0814;
        &RFC0816;
        &RFC0817;
        &RFC0872;
        &RFC0896;
        &RFC0964;

        <!-- Subsection: Architectural Guidelines -->
        &RFC1958;
        &RFC2914;
        &RFC3439;
        &RFC6182;

        <!-- Subsection: Difficult Network Environments -->
        &RFC2488;
        &RFC2757;
        &RFC2760;
        &RFC3135;
        &RFC3150;
        &RFC3155;
        &RFC3366;
        &RFC3449;
        &RFC3481;
        &RFC3819;

        <!-- Subsection: Guidance for Developing, Analyzing, and Evaluating TCP -->
        &RFC4774;
        &RFC5033;
        &RFC5166;
        &RFC6181;

        <!-- Subsection: Implementation Advice -->
        &RFC0794;
        &RFC0879;
        &RFC1071;
        &RFC1624;
        &RFC1936;
        &RFC2525;
        &RFC2923;
        &RFC3360;
        &RFC3493;
        &RFC6056;
        &RFC6191;
        &RFC6429;
        &RFC6691;
        &RFC6897;

        <!-- Subsection: Management Information Bases -->
        &RFC1066;
        &RFC1156;
        &RFC1213;
        &RFC2012;
        &RFC2452;
        &RFC4022;

        <!-- Subsection: Tools and Tutorials -->
        &RFC1180;
        &RFC1470;
        &RFC2398;
        &RFC4614;
        &RFC5783;
        &RFC6077;

        <!-- Subsection: Case Studies -->
        &RFC0700;
        &RFC0889;
        &RFC1337;
        &RFC2415;
        &RFC2416;
        &RFC2884;
        </references>

        <references title="Informative References">
            &RFC1016;
            &RFC2026;
            &RFC2474;
            &RFC4340;
            &RFC4341;

            <reference anchor="CK73">
                <front>
                    <title>Towards Protocols for Internetwork Communication</title>
                    <author initials="V." surname="Cerf"/>
                    <author initials="R." surname="Kahn"/>
                    <date month="IFIP/TC6.1, NIC 18764, INWG 39, September" year="1973"/>
                </front>
            </reference>

            <reference anchor="KP87">
                <front>
                    <title>Round Trip Time Estimation</title>
                    <author initials="P." surname="Karn"/>
                    <author initials="C." surname="Partridge"/>
                    <date month="ACM SIGCOMM 1987 Proceedings, in ACM Computer
                    Communication Review, 17 (5), pp. 2-7, August" year="1987"/>
                </front>
            </reference>

            <reference anchor="Jac88">
                <front>
                    <title>Congestion Avoidance and Control</title>
                    <author initials="V." surname="Jacobson"/>
                    <date month="ACM SIGCOMM 1988 Proceedings, in ACM Computer
                    Communication Review, 18 (4), pp. 314-329, August" year="1988"/>
                </front>
            </reference>

            <reference anchor="JK92">
                <front>
                    <title>Congestion Avoidance and Control</title>
                    <author initials="V." surname="Jacobson"/>
                    <author initials="M." surname="Karels"/>
                    <date month="This paper is a revised version of [Jac88], that
                    includes an additional appendix. This paper has not been
                    traditionally published, but is currently available at
                    ftp://ftp.ee.lbl.gov/papers/congavoid.ps.Z." year="1992"/>
                </front>
            </reference>

            <reference anchor="MAF04">
                <front>
                    <title>Measuring the Evolution of Transport Protocols in the
                    Internet</title>
                    <author initials="A." surname="Medina"/>
                    <author initials="M." surname="Allman"/>
                    <author initials="S." surname="Floyd"/>
                    <date month="ACM Computer Communication Review, 35 (2), April"
                    year="2005"/>
                </front>
            </reference>

            <reference anchor="SCWA99">
                <front>
                    <title>TCP Congestion Control with a Misbehaving
                    Receiver</title>
                    <author initials="S." surname="Savage"/>
                    <author initials="N." surname="Cardwell"/>
                    <author initials="D." surname="Wetherall"/>
                    <author initials="T." surname="Anderson"/>
                    <date month="ACM Computer Communication Review, 29 (5), pp.
                    71-78, October" year="1999"/> </front>
           </reference>

           <reference anchor="MM96">
                <front>
                    <title>Forward Acknowledgement: Refining TCP Congestion
                    Control</title>
                    <author initials="M." surname="Mathis"/>
                    <author initials="J." surname="Mahdavi"/>
                    <date month="ACM SIGCOMM 1996 Proceedings, in ACM Computer
                    Communication Review 26 (4), pp. 281-292, October"
                    year="1996"/>
                </front>
            </reference>
        </references>
    </back>
</rfc>
