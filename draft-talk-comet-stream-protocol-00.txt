Internet-Draft                                                  M. Larue
draft-talk-comet-stream-protocol-00.txt                             Rupy
Expires: December 5, 2013                                   June 5, 2013

                    Talk - Comet Stream Protocol

Abstract

   Talk is a very simple way of communicating in real-time over HTTP.

Copyright

   Copyright (c) 2013 IETF Trust and the persons identified as the
   document authors. All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document. Please review these documents
   carefully, as they describe your rights and restrictions with
   respect to this document.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at
   any time.  It is inappropriate to use Internet-Drafts as
   reference material or to cite them other than as "work in
   progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/1id-abstracts.html

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html

Table of Contents

   1. Introduction ................................................... 1

1. Introduction

   Talk uses regular POST for the /push data and variable length chunked
   response GET for the /pull data over duplex sockets to the server.

      +------+ -- /push -> +------+
      |Client|             |Server|
      +------+ <- /pull -- +------+

   The transport envelope for each message is NULL termination (\0).

   Instead of a specification I provide a reference implementation:

   http://rupy.googlecode.com/files/talk-1.0.zip

   ---

   In particular the code in: talk/src/stream/Client.java

   ---

   The following files can be of interest, but are not part of
   explaining the protocol:

   talk/src/stream/Server.java
   talk/src/stream/Node.java
   talk/src/stream/Test.java

Authors' Addresses

   Marc Larue
   Sweden

M. Larue                     Internet-Draft                     [Page 1]