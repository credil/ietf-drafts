<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
]>

<rfc category="std" ipr="trust200902" docName="draft-blanchet-dtnrg-bp-application-framework-01.txt">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
  <?rfc toc="yes" ?>
  <?rfc symrefs="yes" ?>
  <?rfc sortrefs="yes"?>
  <?rfc iprnotified="no" ?>
  <?rfc strict="yes" ?>
  <?rfc compact="yes" ?>
  <front>
    <title abbrev="Bundle Protocol Application Framework">Delay-Tolerant Networking (DTN) Bundle Protocol Application Framework</title>
    <author initials="M." surname="Blanchet" fullname="Marc Blanchet">
      <organization>Viagenie</organization>
      <address>
    <postal>
      <street>246 Aberdeen</street>
      <city>Quebec</city>
      <region>QC</region>
      <code>G1R 2E1</code>
      <country>Canada</country>
    </postal>
    <email>Marc.Blanchet@viagenie.ca</email>
    <uri>http://viagenie.ca</uri>
  </address>
    </author>
    <date month="March" year="2012"/>
    <abstract>
 <t>The current Bundle Protocol specifications define the syntax of service identifiers but do not identify how to make them interoperable. For example, there are currently no way to map a service identifier to a specific Bundle payload format for an application agent. This document proposes an application framework enabling interoperable implementations and deployments of the Bundle Protocol. It also creates a service identifier registry for the Bundle Protocol.</t>
    </abstract>
  </front>
  <middle>
    <section title="Problem Statement">
     <section title="No BP Payload Format Standardization">
<t>The Bundle Protocol (BP) <xref target="RFC5050"/> specifies how to carry bundles over a delay and disruption tolerant network. Up to now, the various BP implementations have defined their own payload format for the applications they support, without any specification. Therefore, between two implementations, there is no garantee that the payloads will be properly processed. This prohibits interoperability between application agents of the various implementations.</t>
  </section>
  <section title="No Service Identifier Centralized Assignments">
<t>The Bundle Protocol <xref target="RFC5050"/> uses Endpoint Identifiers to specify the destination of the bundles. Up to now, two types of identifiers have been defined:
<list style="symbols">
 <t>dtn: uri scheme defined in <xref target="RFC5050"/></t>
 <t>ipn scheme defined in <xref target="RFC6260"/> using the CBHE extension header</t>
 </list>
 </t>
<t> Both schemes syntax carry the service identifier so that the bundle payload is sent to the right application agent and that application agent knows how to process it. Up to now, no definition of these service identifiers exist, therefore, each implementation does not know to which application agent it should send the received bundle payload.</t>
 </section>
 <section title="Need for an Application Framework">
<t>From the point of view of implementations and end-users, the service identifier shall be common to both types of identifiers and the payload format should be identical for the same service identifiers. Therefore, there is a need to normalize the service identifiers as well as the payload formats. This is similar to service and port numbers registry for IP protocols and applications protocols specifications.</t>
<t>As with IP application protocols specifications, some applications require services at the IP layer, such as IPsec. In such cases, the application specification defines the usage and requirements of IPsec for carrying the application packets. Similarly, Bundle protocol applications may require specific bundle protocol services, such as custody, security, quality of service or else.</t>
<t>This document defines a framework by which Bundle Protocol applications should be specified, what bundle services they require and a registry of service identifiers. All together, implementations will interoperate at the application level, instead of just at the bundle forwarding level. Moreover, deployments will be eased by normalized behaviors of BP protocol stacks and applications.</t>
 </section>
 </section>
<section title="Bundle Protocol Application Framework">
<t>The BP Application framework is specified as following:
 <list style="symbols">
  <t>A requirement for BP application protocol specifications.</t>
  <t>A registry of BP service identifiers</t>
 </list>
</t>
<section title="Bundle Protocol Application Protocol Specification">
<t>A BP application is defined by a protocol and a bundle payload format. When a BP  application protocol is specified in a document, it should be specified with the following information:
<list style="symbols">
 <t>Bundle payload format</t>
 <t>Bundle services and extension headers required, such as security, custody or else. The context in which these services and extensions are used must be fully defined to enable interoperability between implementations.</t>
 <t>Service identifier for the dtn: scheme</t>
 <t>Service identifier for the ipn scheme</t>
 <t>Request to register the service identifiers in the registries described in this document.</t>
</list>
</t>
</section>
<section title="Service Identifier Syntax">
<t>While the generic syntax of the dtn: uri is defined, the usage up to now in trials, deployments and implementations has been dtn:node_identifier/service_identifier. For the ipn scheme, the syntax is ipn:node_identifier.service_identifier.  This document registers the service_identifier part values but makes no recommendation on the node identifier part.</t>
</section>
<section title="Bundle Protocol Service Identifiers Registry">
<t>For implementations and for interoperability between various BP network deployments, it is highly preferable that the service identifiers are identical for all deployments and all implementations.</t>
<t>This document requests IANA to create a registry for the service identifiers for both the ipn and the dtn: space. The common service identifiers will be identical for both schemes and for all deployments. The structure of the registry is:
<list style="symbols">
 <t>Structure (aka columns):
  <list style="symbols">
     <t>dtn: service identifier. The dtn: service identifier syntax is defined in section 4.4 of <xref target="RFC5050"/>. </t>
     <t>ipn service identifier. The ipn service identifier syntax is defined in section 2.1 of <xref target="RFC6260"/>. </t>
     <t>Specification Reference: The referenced specification should describe the bundle payload content.</t>
   </list>
 </t>
  <t>Service identifiers must be registered for both schemes at the same time. If it can not be done, the specification must detail why and the expert should review the rationale before accepting that registration.</t>
 <t>Registration Policy:
  <list style="symbols">
     <t>CCSDS book or IETF RFC required. Any other specification must be reviewed by an nominated expert.</t>
     <t>For ipn number space, the XX range is delegated to CCSDS registry service (SANA <eref target="http://sanaregistry.org"/>), therefore not allocated by IANA. In the registry, IANA should point this range to the corresponding SANA registry.</t>
   </list>
 </t>
</list>
</t>
<t>The registry should contain the following initial values:
<list style="symbols">
  <t>dtn: service identifier "none" shall be assigned. The semantic is described in RFC5050</t>
  <t>ipn service identifier of value "0" shall be assigned for the same semantic as dtn:none</t>
  <t>Specification Reference: RFC5050</t>
  <t>Mandatory Bundle Protocol service: none.</t>
</list>
</t>
</section>
<section title="The Bundle Protocol Ping Service">
<t>This section is requesting a registration for the above registry. It also serves as a simple example on how registration requests should be done.</t>
<t>The Ping service is similar to the IP ICMP Echo request/reply service where a source node sends a simple query to the destination node and the destination node replies. 
  This helps troubleshooting the network and knowing if a node is reachable and up.</t>
<t>The ping service has the following Bundle Protocol payload format: TBD.</t>
<t>This document request the registration of the ping service in the above registry as follows:
<list style="symbols">
  <t>dtn: service identifier "ping" shall be assigned to the ping service.</t>
  <t>ipn service identifier of value "1" shall be assigned to the ping service.</t>
  <t>Specification Reference: TBD.</t>
  <t>Mandatory Bundle Protocol service: none.</t>
</list>
</t>
</section>
<section title="CCSDS Reserved Range">
  <t>For the purpose of space networking, the <eref target="http://www.ccsds.org">CCSDS SDO</eref> needs service identifier assignments for its own deployments. 
    For the management of these assignments, registries for  the node and service identifier part of the 
  ipn scheme are managed by the CCSDS Registry Authority,  <eref target="http://sanaregistry.org">Space Assigned Number Authority (SANA)</eref>. 
  This CCSDS registry of node and service identifiers is specific to space networks. However, for implementations and for interoperability between various network deployments, 
  it is highly preferable that the service identifiers are identical for all deployments. Therefore, this document requests IANA to set aside a range of ipn service identifiers 
  to be used by CCSDS and managed by its registry authority SANA.</t>
</section>
<section title="Re-use of the IP Service Names and Transport Port Registry">
<t>The IP Services Names and Port Registry (IPSNPR) is used to list the service and port identifiers for IP packets. Within some DTN deployments, 
  some IP protocols such as HTTP and SMTP have been transported inside the Bundle Protocol payloads. Some other DTN deployments are using non IETF protocols. 
  Therefore, there is some overlap but also some specific DTN applications. The number of IP protocols that will be carried directly as BP payloads are most likely very small, 
  and would not include the vast majority of the port numbers found in the IPSNPR. Therefore, it is proposed to start a new registry from scratch instead of 
  trying to overload or sync with the IPSNPR.
</t>
</section>
</section>
<section title="Security Considerations">
<t>Establishing a registry of service identifiers so that implementations and deployments can interoperate does not bring any specific security concerns and does not add any security.  As with the IP services and port registry, the existence of such registry have not brought any security concerns.</t>
</section>
<section title="IANA Considerations">
<t>IANA is requested to create a registry as specified in this document.</t>
</section>
<section title="Acknowledgements">
 <t>The editor would like to thank the following people who have provided comments and suggestions to this document, in no specific order: Stephen Farrell, Keith Scott, Scott Burleigh.</t>
</section>
  </middle>
  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.5050" ?>
      <?rfc include="reference.RFC.6260" ?>
    </references>
  </back>
</rfc>
