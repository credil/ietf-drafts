<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="no"?>
<?rfc subcompact="no"?>
<?rfc authorship="yes"?>
<?rfc tocappendix="yes"?>

<rfc category="std" docName="draft-thubert-6tisch-architecture-01" ipr="trust200902">

<front>
   <title abbrev="6TiSCH-architecture">An Architecture for IPv6 over the TSCH mode of IEEE 802.15.4e</title>
   <author initials="P" surname="Thubert" fullname="Pascal Thubert" role="editor">
      <organization abbrev="Cisco">Cisco Systems, Inc</organization>
      <address>
         <postal>
            <street>Building D</street>
            <street>45 Allee des Ormes - BP1200 </street>
            <city>MOUGINS - Sophia Antipolis</city>
            <code>06254</code>
            <country>FRANCE</country>
         </postal>
         <phone>+33 497 23 26 34</phone>
         <email>pthubert@cisco.com</email>
      </address>
   </author>
   <author initials="T" surname="Watteyne" fullname="Thomas Watteyne">
      <organization abbrev="Linear Technology">Linear Technology, Dust Networks Product Group</organization>
      <address>
         <postal>
            <street>30695 Huntwood Avenue</street>
            <city>Hayward</city>
            <region>CA</region>
            <code>94544</code>
            <country>USA</country>
         </postal>
         <phone>+1 (510) 400-2978</phone>
         <email>twatteyne@linear.com</email>
      </address>
   </author>
   <author initials="RA" surname="Assimiti" fullname="Robert Assimiti">
      <organization abbrev="Centero">Centero</organization>
      <address>
         <postal>
            <street>961 Indian Hills Parkway</street>
            <city>Marietta</city>
            <region>GA</region>
            <code>30068</code>
            <country>USA</country>
         </postal>
         <phone>+1 404 461 9614</phone>
         <email>robert.assimiti@centerotech.com</email>
      </address>
   </author>
   <date/>
   <area>Internet Area</area>
   <workgroup>6TiSCH</workgroup>
   <keyword>Draft</keyword>
   <abstract>
      <t>
         This document presents an architecture for an IPv6 Multi-Link subnet that
         is composed of a high speed powered backbone and a number of
         IEEE802.15.4e TSCH wireless networks attached and synchronized by
         Backbone Routers. Route Computation may be achieved in a centralized
         fashion by a Path Computation Element, in a distributed fashion using the
         Routing Protocol for Low Power and Lossy Networks, or in a mixed mode.
         The Backbone Routers perform proxy Neighbor Discovery operations over the
         backbone on behalf of the wireless device, so they can share a same subnet
         and appear to be connected to the same backbone as classical devices.
      </t>
   </abstract>
   <note title="Requirements Language">
      <t>
         The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
         "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY",
         and "OPTIONAL" in this document are to be interpreted as described
         in <xref target="RFC2119">RFC 2119</xref>.
      </t>
   </note>
</front>

<middle>
   <section title="Introduction">
      <t>
         The emergence of radio technology enabled a large variety of new types of devices
         to be interconnected, at a very low marginal cost compared to wire, at any range from
         Near Field to interplanetary distances, and in circumstances where wiring would be less
         than practical, for instance rotating devices.
      </t>
      <t>
         At the same time, a new breed of Time Sensitive Networks is being developed to enable
         traffic that is highly sensitive to jitter and quite sensitive to
         latency. Such traffic is not limited to voice and video, but also
         includes command and control operations such as found in industrial
         automation or in-vehicle sensors and actuators.
      </t>
      <t>
         At IEEE802.1, the "Audio/Video Task Group", was renamed TSN for
         Time Sensitive Networking to address Deterministic Ethernet.
         The IEEE802.15.4 Medium access Control (MAC) has evolved with
         IEEE802.15.4e that provides in particular the Timeslotted
         Channel Hopping (TSCH) mode for industrial-type applications.
      </t>
      <t>
         Though at a different time scale, both standards provide
         Deterministic capabilities to the point that a packet that pertains
         to a certain flow crosses the network from node to node following
         a very precise schedule, as a train that leaves intermediate stations
         at precise times along its path. With TSCH, time is formatted into
         timeslots, and an individual timeslot is allocated to unicast or
         broadcast communication at the MAC level. The time slotted operation
         reduces collisions, saves energy, and enables to more closely engineer
         the network for deterministic properties.
         The channel hopping aspect is a simple and efficient technique to combat
         multipath fading and external interference (for example by WiFi emitters).
      </t>
      <t>
         This document presents an architecture for an IPv6 Multi-Link subnet
         that is composed of a high speed powered backbone and a number of
         IEEE802.15.4e TSCH wireless networks attached and synchronized by
         backbone routers. Route Computation may be achieved in a centralized
         fashion by a Path Computation Element (PCE), in a distributed fashion
         using the Routing Protocol for Low Power and Lossy Networks (RPL), or
         in a mixed mode. The Backbone Routers perform proxy IPv6 Neighbor
         Discovery (ND) operations over the backbone on behalf of the wireless
         devices, so they can share a same IPv6 subnet and appear to be
         connected to the same backbone as classical devices. Timeslots and
         other device resources are managed by an abstract Network Management
         Entity (NME) that may cooperate with the PCE in order to minimize
         the interaction with and the load on the constrained device.
      </t>
   </section>
   <section title="Terminology">
   <t>Readers are expected to be familiar with all the terms and concepts
	    that are discussed in <xref target="RFC4861">"Neighbor Discovery for
	    IP version 6"</xref>,  <xref target="RFC4919">"IPv6 over Low-Power
	    Wireless Personal Area Networks (6LoWPANs): Overview, Assumptions,
	    Problem Statement, and Goals"</xref>,
		 <xref target="RFC6775">Neighbor Discovery Optimization 
		 for Low-power and Lossy Networks</xref> and 
		 <xref target="I-D.ietf-ipv6-multilink-subnets">
		 "Multi-link Subnet Support in IPv6"</xref>.
           </t>
	    <t>Readers may benefit from reading the <xref target="RFC6550"> "RPL: 
		IPv6 Routing Protocol for Low-Power and Lossy Networks" </xref> specification;
		<xref target="RFC4903">"Multi-Link Subnet Issues"</xref>;
		<xref target="RFC6275"> "Mobility Support in IPv6" </xref>; 
      <xref target="RFC4389"> "Neighbor Discovery Proxies (ND Proxy)" </xref>;
       <xref target="RFC4862">"IPv6 Stateless Address Autoconfiguration"</xref>;
       <xref target="RFC6620">"FCFS SAVI: First-Come, First-Served Source
       Address Validation Improvement for Locally Assigned IPv6 Addresses"</xref>; and
	    <xref target="RFC4429">"Optimistic Duplicate Address Detection"</xref> 
       prior to this specification for a clear understanding of the art in ND-proxying 
       and binding.</t>
      <t>
         The draft uses terminology defined or referenced in
         <xref target="I-D.palattella-6tisch-terminology"/>,
         <xref target="I-D.chakrabarti-nordmark-6man-efficient-nd"/>,
         <xref target="I-D.roll-rpl-industrial-applicability"/>,
         <xref target="RFC5191"/>
         and
         <xref target="RFC4080"/>.
      </t>
      <t>
         The draft also conforms to the terms and models described  in
         <xref target="RFC3444"/> and <xref target="RFC5889"/> and uses the vocabulary and the concepts
         defined in <xref target="RFC4291"/> for the IPv6 Architecture.
      </t>
   </section>
   <section title="Applications and Goals">
      <t>
         The architecture derives from existing industrial standards for Process
         Control by its focus on Deterministic Networking, in particular with the use
         of the IEEE802.15.4e TSCH MAC <xref target="IEEE802154e"/>
         and the centralized PCE.
         This approach leverages the TSCH MAC benefits for high reliability against interference,
         low-power consumption on deterministic traffic, and its Traffic Engineering capabilities.
         Deterministic Networking applies in particular to open and closed control loops,
         as well as supervisory control flows and management.
      </t>
      <t>
         An incremental set of industrial requirements are addressed with the addition of an
         autonomic and distributed routing operation based on RPL. These use cases include
         plant setup and decommissioning, as well as monitoring of lots of lesser
         importance measurements such as corrosion and events.
         RPL also enables mobile use cases such as mobile workers and cranes.
      </t>
      <t>
         A Backbone Router is included in order to scale the factory plant subnet to address
         large deployments, with proxy ND and time synchronization over a high speed backbone.
      </t>
      <t>
         The architecture also applies to building automation that leverage RPL's storing
         mode to address multipath over a large number of hops, in-vehicle command and control
         that can be as demanding as industrial applications, commercial automation and asset
         Tracking with mobile scenarios, home automation and domotics which become more reliable
         and thus provide a better user experience, and resource management (energy, water, etc.).
      </t>
   </section>
   <section title="Overview and Scope">
      <t>
         The scope of the present work is a subnet that, in its basic
         configuration, is made of a
         <xref target="I-D.watteyne-6tisch-tsch">
         IEEE802.15.4e Timeslotted Channel Hopping (TSCH)</xref>
         MAC Low Power Lossy Network (LLN).
      </t>
      <t>
         <figure anchor="fig1" title="Basic Configuration">
<artwork><![CDATA[
            ---+-------- ............ ------------
               |      External Network       |
               |                          +-----+
            +-----+                       | NME |
            |     | LLN Border            |     |
            |     | router                +-----+
            +-----+
          o    o   o
   o     o   o     o
      o   o LLN   o    o     o
         o   o   o       o
                 o
]]></artwork>
         </figure>
      </t>
      <t>
         The LLN devices communicate over IPv6 <xref target="RFC2460"/>
         using the <xref target="RFC6282">6LoWPAN Header Compression (6LoWPAN HC)</xref>.
         From the perpective of Layer 3, a single LLN interface
         (typically an IEEE802.15.4-compliant radio) may be seen as a collection of Links with
         different capabilities for unicast or multicast services. An IPv6 subnet
         spans over multiple links, effectively forming a Multi-Link subnet. Within that
         subnet, Neighbor Devices are discovered with <xref target="RFC6775"> 6LoWPAN
         Neighbor Discovery (6LoWPAN ND)</xref>. The <xref target="RFC6550">Routing
         Protocol for Low Power and Lossy Networks (RPL)</xref>
         enables routing within the LLN, typically within the Multi-Link subnet
         in the so called Route Over fashion. RPL forms Destination Oriented
         Directed Acyclic Graphs (DODAGs) within Instances of the protocol,
         each Instance being associated with an Objective Function (OF) to
         form a routing topology. A particular LLN device, the LLN Border Router (LBR),
         acts as RPL root, 6LoWPAN HC terminator, and LLN Border Router
         (LBR) to the outside. The LBR is usually powered.
         More on RPL Instances can be found in
         <xref target="RFC6550"/>, sections "3.1.2. RPL Identifiers"
         and "3.1.3. Instances, DODAGs, and DODAG Versions".
      </t>
      <t>
         An extended configuration of the subnet comprises multiple LLNs.
         The LLNs are interconnected and synchronized over a backbone, that
         can be wired or wireless. The backbone can be a classical IPv6
         network, with Neighbor Discovery operating as defined in
         <xref target="RFC4861"/> and <xref target="RFC4862"/>.
         The backbone can also support
         <xref target="I-D.chakrabarti-nordmark-6man-efficient-nd">
         Efficiency-aware IPv6 Neighbor Discovery Optimizations </xref>
         in mixed mode as described in
         <xref target="I-D.thubert-6lowpan-backbone-router"/>.
      </t>
      <t>
         Security is often handled at layer 2 and Layer 4. Authentication
         during the join process can be handled by the <xref target="RFC5191">
         Protocol for Carrying Authentication for Network access (PANA)</xref>.
      </t>
      <t>
         The LLN devices are time-synchronized at the MAC level.
         The LBR that serves as time source is a RPL parent in a particular
         RPL instance that serves for time synchronization;
         this way, the time synchronization starts at the RPL root and follows
         the RPL DODAGs with no timing loop.
      </t>
      <t>
         In the extended configuration, the functionality of the LBR is
         enhanced to that of Backbone Router (BBR). A BBR is an LBR, but
         also an Energy Aware Default Router (NEAR) as defined in
         <xref target="I-D.chakrabarti-nordmark-6man-efficient-nd"/>.
         The BBR performs ND proxy operations between the registered devices
         and the classical ND devices that are located over the backbone.
         6TiSCH BBRs synchronize with one another over the backbone, so as
         to ensure that the multiple LLNs that form the IPv6 subnet stay
         tightly synchronized. If the Backbone is Deterministic (such as
         defined by the Time Sensitive Networking WG at IEEE), then the
         Backbone Router ensures that the end-to-end deterministic
         behavior is maintained between the LLN and the backbone.
      </t>
      <t>
         <figure anchor="fig2" title="Extended Configuration">
<artwork><![CDATA[
               ---+-------- ............ ------------
                  |      External Network       |
                  |                          +-----+
                  |             +-----+      | NME |
               +-----+          |  +-----+   |     |
               |     | Router   |  | PCE |   +-----+
               |     |          +--|     |
               +-----+             +-----+
                  |                   |
                  | Subnet Backbone   |
            +--------------------+------------------+
            |                    |                  |
         +-----+             +-----+             +-----+
         |     | Backbone    |     | Backbone    |     | Backbone
    o    |     | router      |     | router      |     | router
         +-----+             +-----+             +-----+
    o                  o                   o                 o   o
        o    o   o         o   o  o   o         o  o   o    o
   o             o        o  LLN      o      o         o      o
      o   o    o      o      o o     o  o   o    o    o     o
]]></artwork>
         </figure>
      </t>
      <t>
         The main architectural blocks are arranged as follows:
      </t>
      <t>
         <figure anchor="fig4" title="6TiSCH stack">
<artwork><![CDATA[
   +-----+-----+-----+-----+-------+-----+
   |PCEP |   CoAP    |PANA |6LoWPAN| RPL |
   | PCE |DTLS |     |     |   ND  |     |
   +-----+-----+-----+-----+-------+-----+-----+
   | TCP |       UDP       |    ICMP     |RSVP |
   +-----+-----+-----+-----+-------+-----+-----+
   |                 IPv6                      |
   +-------------------------------------------+
   |               6LoWPAN HC                  |
   +-------------------------------------------+
   |                   6top                    |
   +-------------------------------------------+
   |             IEEE802.15.4e   TSCH          |
   +-------------------------------------------+
]]></artwork>
         </figure>
      </t>
      <t>
         RPL is the routing protocol of choice for LLNs. (TBD RPL) whether there
         is a need to define a 6TiSCH OF.
      </t>
      <t>
         (tbd NME) COMAN is working on network Management for LLN.
         They are considering the Open Mobile Alliance (OMA) Lightweight M2M (LWM2M) Object system.
         This standard includes DTLS, CoAP (core plus Block and Observe patterns),
         SenML and CoAP Resource Directory.
      </t>
      <t>
         (tbd PCE) need to work with PCE WG to define flows to PCE, and define how to
         accommodate PCE routes and reservation. Will probably look a lot like GMPLS.
      </t>
      <t>
         (tbd Backbone Router) need to work with 6MAN to define ND proxy.
         Also need BBR sync sync between deterministic Ethernet and 6TiSCH LLNs.
      </t>
      <t>
         IEEE802.1TSN: external, maintain consistency. See also AVnu.
      </t>
      <t>
         IEEE802.15.4: external, (tbd need updates?).
      </t>
      <t>
         ISA100.20 Common Network Management: external, maintain consistency.
      </t>
      <t>
         IoT6 European Project: external, maintain consistency.
      </t>
   </section>
   
   <section title="Communication Paradigms and Interaction Models">
   <t><xref target="I-D.palattella-6tisch-terminology"/> defines the terms
   of Communication Paradigms and Interaction Models, which can be placed
   in parallel to the  Information Models and Data Models that are defined in
   <xref target="RFC3444"/>. 
   </t>
   <t>
   A Communication Paradigms would be an abstract view of a protocol exchange,
   and would come with an Information Model for the information that is being exchanged.
   In contrast, an Interaction Models would be more refined and could point on standard operation
   such as a Representational state transfer (REST) "GET" operation and would match 
   a Data Model for the data that is provided over the protocol exchange.
   </t>
   <t>
   <xref target="I-D.roll-rpl-industrial-applicability"/> section 2.1.3. and next
   discusses appplication-layer
   paradigms, such as Source-sink (SS) that is a Multipeer to Multipeer (MP2MP) 
   model that is primarily used for alarms and alerts,
   Publish-subscribe (PS, or pub/sub) that is typically used for sensor data,
   as well as Peer-to-peer (P2P) and Peer-to-multipeer (P2MP) communications. 
   Additional considerations on Duocast and its N-cast generalization are also provided.
   Those paradigms are frequently used in industrial automation, which is a major use
   case for IEEE802.15.4e TSCH wireless networks with <xref target="ISA100.11a"/>
   and <xref target="HART"/>.
   </t>
   <t>This specification focusses on Communication Paradigms and Interaction Models 
   for packet forwarding and TSCH resources (cells) management. L
   ink-layer and Network-layer Packet forwarding
   interactions are discussed in <xref target="fwd"/>, whereas Link-layer (one-hop),
   Network-layer (multithop along a track), and Application-layer (remote control)
   management mechanisms for the TSCH schedule are discussed in <xref target="schd"/>.
   </t>
   </section>
   
   <section  anchor="fwd" title="Forwarding Models">
      <!-- TW: Forwarding models should be formalized in a standards-track draft? One should be MUST (IPv6?), the others SHOULD? -->
      <t>
         6TiSCH supports three different forwarding model, G-MPLS Track Forwarding (TF),
         6LoWPAN Fragment Forwarding (FF) and IPv6 Forwarding (6F).
      </t>
      <section title="Track Forwarding">
         <t>
            Track Forwarding is the simplest and fastest. A set of input cells are uniquely bound
            to a set of output cells, representing a forwarding state that can be used regardless of
            the upper layer protocol. This model can effectively be seen as a G-MPLS operation
            in that the information used to switch is not an explicit label, but rather related to other
            properties of the way the packet was received, a particular cell in the case of 6TiSCH.
            As a result, as long as the TSCH MAC (and Layer 2 security) accepts a frame, that frame
            can be switched regardless of the protocol, whether this is an IPv6 packet, a 6LoWPAN
            fragment, or a frame from an alternate protocol such as WirelessHART of ISA100.11a.
         </t>
         <t>
            A Track is defined end-to-end as a succession of timeslots. A timeslot belongs
            to at most one Track. For a given iteration of a Slotframe, the timeslot is
            associated uniquely with a cell, which indicates the channel at which the timeslot
            operates for that iteration.
         </t>
         <t>
            A data frame that is forwarded along a Track has a destination MAC address set to broadcast
            or a multicast address depending on MAC support.
            This way, the MAC layer in the intermediate nodes accepts the incoming frame and
            6top switches it without incurring a change in the MAC header.
            In the case of IEEE802.15.4e, this means effectively broadcast, so that along the Track
            the short address for the destination is set to 0xFFFF.
         </t>
         <t>
            Conversely, a frame that is received along a Track with a destination MAC address
            set to this node is extracted from the Track stream and delivered to the upper layer.
            A frame with an unrecognised MAC address is ignored at the MAC layer and thus is not received
            at the 6top sublayer.
         </t>
         <t>
            There are 2 modes for a Track, transport mode and tunnel mode.
         </t>
         <section title="Transport Mode">
            <t>
               In transport mode, the PDU is associated flow information that refers uniquely to the Track,
               so the 6top sublayer can place the frame in the appropriate timeslot without ambiguity.
               In the case of IPv6 traffic, flow identification is transported in the
               Flow Label of the IPv6 header. Associated with the source IPv6 address, the flow label forms a
               globally unique identifier for that particular Track that is validated at egress before restoring
               the destination MAC address (dmac) and punting to the upper layer.
            </t>
            <t>
               <figure title="Track Forwarding, Transport Mode">
<artwork><![CDATA[
                       |                                    ^
   +--------------+    |                                    |
   |     IPv6     |    |                                    |
   +--------------+    |                                    |
   |  6LoWPAN HC  |    |                                    |
   +--------------+  ingress                              egress
   |     6top     |   sets     +----+          +----+     restores
   +--------------+  dmac to   |    |          |    |     dmac to
   |   TSCH MAC   |   brdcst   |    |          |    |      self
   +--------------+    |       |    |          |    |       |
   |   LLN PHY    |    +-------+    +--...-----+    +-------+
   +--------------+
]]></artwork>
               </figure>
            </t>
         </section>
         <section title="Tunnel Mode">
            <t>
               In tunnel mode, the frames originate from an arbitrary protocol over a compatible MAC
               that may or may not be synchronized with the 6TiSCH network. An example of
               this would be a router with a dual radio that is capable of receiving and sending WirelessHART
               or ISA100.11a frames with the second radio, by presenting itself as an access
               Point or a Backbone Router, respectively.
            </t>
            <t>
               In that mode, some entity (e.g. PCE) can coordinate with a WirelessHART Network Manager or an ISA100.11a
               System Manager to specify the flows that are to be transported transparently
               over the Track.
            </t>
            <t>
               <figure anchor="fig6" title="Track Forwarding, Tunnel Mode">
<artwork><![CDATA[
   +--------------+
   |     IPv6     |
   +--------------+
   |  6LoWPAN HC  |
   +--------------+             set            restore
   |     6top     |            +dmac+          +dmac+
   +--------------+            |    |          |    |
   |   TSCH MAC   |            |    |          |    |
   +--------------+            |    |          |    |
   |   LLN PHY    |    +-------+    +--...-----+    +-------+
   +--------------+    |   ingress                 egress   |
                       |                                    |
   +--------------+    |                                    |
   |   LLN PHY    |    |                                    |
   +--------------+    |                                    |
   |   TSCH MAC   |    |                                    |
   +--------------+    |                                    |
   |ISA100/WiHART |    |                                    v
   +--------------+
]]></artwork>
               </figure>
            </t>
            <t>
               In that case, the flow information that identifies the Track is uniquely derived from the
               information at the receiving end, for instance the incoming timeslots, or an ISA100.11a
               ContractId. At the ingress 6TiSCH router, the packet destination is recognized as self but the
               flow information indicates that the frame must be tunnelled over a particular 6top Track so the
               packet is not punted to upper layer. Instead, it is passed to the 6top sublayer for switching.
               The 6top sublayer in the ingress router overrides the destination MAC to broadcast and forwards.
            </t>
            <t>
               At the egress 6top router, the reverse operation occurs. Based on metadata associated to the
               Track, the frame is passed to the appropriate link layer with the destination MAC restored.
            </t>
         </section>
         <section title="Tunnel Metadata">
            <t>
               Metadata coming with the Track configuration is expected to provide the destination MAC address
               of the egress endpoint as well as the tunnel mode and specific data depending on the mode,
               for instance a service access point for frame delivery at egress.
               If the tunnel egress point does not have a MAC address that matches the configuration,
               the Track installation fails.
            </t>
            <t>
               In transport mode, if the final layer 3 destination is the tunnel termination, then it is possible
               that the IPv6 address of the destination is compressed at the 6LoWPAN sublayer based on the MAC address.
               It is thus mandatory at the ingress point to validate that the MAC address that was used at the 6LoWPAN
               sublayer for compression matches that of the tunnel egress point. For that reason, the node that injects
               a packet on a Track checks that the destination is effectively that of the tunnel egress point
               before it overwrites it to broadcast.
               The 6top sublayer at the tunnel egress point reverts that operation to the MAC address obtained
               from the tunnel metadata.
            </t>
         </section>
      </section>
      <section title="Fragment Forwarding">
         <t>
            Considering that 6LoWPAN packets can be as large as 1280 bytes (the IPv6 MTU),
            and that the non-storing mode of RPL implies Source Routing that requires space for routing
            headers, and that a IEEE802.15.4 frame with security may carry in the order of 80 bytes of
            effective payload, an IPv6 packet might be fragmented into more than 16 fragments at the
            6LoWPAN sublayer.
         </t>
         <t>
            This level of fragmentation is much higher than that traditionally experienced over the Internet
            with IPv4 fragments, where fragmentation is already known as harmful.
         </t>
         <t>
            In the case to a multihop route within a 6TiSCH network, Hop-by-Hop recomposition occurs at each
            hop in order to reform the packet and route it. This creates additional latency and forces intermediate
            nodes to store a portion of a packet for an undetermined time, thus impacting critical resources such
            as memory and battery.
         </t>
         <t>
            <xref target="I-D.thubert-roll-forwarding-frags"/> describes a mechanism whereby the datagram tag in the
            6LoWPAN Fragment is used as a label for switching at the 6LoWPAN sublayer. The draft allows for a degree of
            flow control base on an Explicit Congestion Notification, as well as end-to-end individual fragment recovery.
         </t>
         <t>
            <figure anchor="fig7" title="Forwarding First Fragment">
<artwork><![CDATA[
                       |                                    ^
   +--------------+    |                                    |
   |     IPv6     |    |       +----+          +----+       |
   +--------------+    |       |    |          |    |       |
   |  6LoWPAN HC  |    |       learn           learn        |
   +--------------+    |       |    |          |    |       |
   |     6top     |    |       |    |          |    |       |
   +--------------+    |       |    |          |    |       |
   |   TSCH MAC   |    |       |    |          |    |       |
   +--------------+    |       |    |          |    |       |
   |   LLN PHY    |    +-------+    +--...-----+    +-------+
   +--------------+
]]></artwork>
            </figure>
         </t>
         <t>
            In that model, the first fragment is routed based on the IPv6 header that is present in that fragment.
            The 6LoWPAN sublayer learns the next hop selection, generates a new datagram tag for transmission to
            the next hop, and stores that information indexed by the incoming MAC address and datagram tag. The next
            fragments are then switched based on that stored state.
         </t>
         <t>
            <figure anchor="fig8" title="Forwarding Next Fragment">
<artwork><![CDATA[
                       |                                    ^
   +--------------+    |                                    |
   |     IPv6     |    |                                    |
   +--------------+    |                                    |
   |  6LoWPAN HC  |    |       replay          replay       |
   +--------------+    |       |    |          |    |       |
   |     6top     |    |       |    |          |    |       |
   +--------------+    |       |    |          |    |       |
   |   TSCH MAC   |    |       |    |          |    |       |
   +--------------+    |       |    |          |    |       |
   |   LLN PHY    |    +-------+    +--...-----+    +-------+
   +--------------+
]]></artwork>
            </figure>
         </t>
         <t>
            A bitmap and an ECN echo in the end-to-end acknowledgement enable the source to resend the missing
            fragments selectively. The first fragment may be resent to carve a new path in case of a path failure.
            The ECN echo set indicates that the number of outstanding fragments should be reduced.
         </t>
      </section>
      <section title="IPv6 Forwarding">
         <t>
            As the packets are routed at layer 3, traditional QoS and RED operations are expected to prioritize
            flows with differentiated services. A new class of service for Deterministic Forwarding is being
            defined to that effect in <xref target="I-D.svshah-tsvwg-lln-diffserv-recommendations"/>.
         </t>
         <t>
            <figure anchor="fig9" title="IP Forwarding">
<artwork><![CDATA[
                       |                                    ^
   +--------------+    |                                    |
   |     IPv6     |    |       +-QoS+          +-QoS+       |
   +--------------+    |       |    |          |    |       |
   |  6LoWPAN HC  |    |       |    |          |    |       |
   +--------------+    |       |    |          |    |       |
   |     6top     |    |       |    |          |    |       |
   +--------------+    |       |    |          |    |       |
   |   TSCH MAC   |    |       |    |          |    |       |
   +--------------+    |       |    |          |    |       |
   |   LLN PHY    |    +-------+    +--...-----+    +-------+
   +--------------+
]]></artwork>
            </figure>
         </t>
      </section>
   </section>
   <section title="TSCH and 6top">
      <section title="6top">
         <t>
            6top is a sublayer which is the next higher layer to TSCH and which offers a set of commands
            defining data and management interfaces. The management interface of 6top enables an upper layer to schedule cells and Slotframes in the TSCH schedule. 6top is defined in <xref target="I-D.wang-6tisch-6top"/>.
         </t>
         <t>
            If the scheduling entity explicitly specifies the slotOffset/channelOffset of the cells to be
            added/deleted, those cells are marked as "hard". 6top cannot move hard cells in the TSCH schedule.
            Hard cells are for example used by a central PCE.
         </t>
         <t>
            6top contains a monitoring process which monitors the performance of cells, and can move a cell in the TSCH schedule when it performs bad. This is only applicable to cells which are marked as "soft". To reserve a soft cell, the higher layer does not indicate the exact slotOffset/channelOffset of the cell to add, but rather the resulting bandwidth and QoS requirements. When the monitoring process triggers a cell reallocation, the two neighbor motes communicating over this cell negotiate its new position in the TSCH schedule.
         </t>
      </section>
      <section title="Network Synchronization">
         <t>
            Nodes in a TSCH network must be time synchronized. 
            A node keeps synchronized to its time source neighbor
            through a combination of frame-based and acknowledgement-based synchronization.
            In order to maximize battery life and network throughput, it is advisable that RPL ICMP discovery
            and maintenance traffic (governed by the trickle timer) be somehow coordinated with the
            transmission of time synchronization packets (especially with enhanced beacons).
            This could be achieved through an interaction of the 6top sublayer and the RPL objective Function,
            or could be controlled by a management entity.
         </t>
         <!-- TW: Concept of TSGI developed in separate standards-track draft? -->
         <t>
            Time distribution requires a loop-less structure. Nodes taken in a synchronization loop will rapidly
            desynchronize from the network and become isolated. It is expected that a RPL DAG with
            a dedicated global Instance is  deployed for the purpose of time synchronization.
            That Instance is referred to as the Time Synchronization Global Instance (TSGI).
            The TSGI can be operated in either of the 3 modes that are detailed in
            <xref target="RFC6550">RPL</xref>  section "3.1.3. Instances, DODAGs, and DODAG Versions".
            Multiple uncoordinated DODAGs with independent roots may be used if all the roots
            share a common time source such as the Global Positioning System (GPS). In the absence
            of a common time source, the TSGI should form a single DODAG with a virtual root.
            A backbone network is then used to synchronize and coordinate RPL operations between
            the backbone routers that act as sinks for the LLN.
         </t>
         <t>
            A node that has not joined the TSGI advertises a MAC level Join Priority
            of 0xFF to notify its neighbors that is is not capable of serving as time parent.
            A node that has joined the TSGI advertises a MAC level Join Priority set to
            its DAGRank() in that Instance, where DAGRank() is the operation specified in
            <xref target="RFC6550"/>, section "3.5.1. Rank Comparison".
         </t>
         <!-- TW: Official request made to move alter IEEE802.15.4e text. Maybe remove last sentence? -->
         <t>
            A root is configured or obtains by some external means the knowledge of the RPLInstanceID
            for the TSGI. The root advertises its DagRank in the TSGI, that MUST be less than 0xFF,
            as its Join Priority (JP) in its IEEE802.15.4e Extended Beacons (EB). We'll note that the
            JP is now specified between 0 and 0x3F leaving 2 bit sin the octet unused in the IEEE802.15.4e
            specification. After concertation with IEEE authors, it was asserted that 6TiSCH can make
            a full use of the octet to carry an integer value up to 0xFF.
         </t>
         <t>
            A node that reads a Join Priority of less than 0xFF should join the neighbor with
            the lesser Join Priority and use it as time parent. If the node is configured to
            serve as time parent, then the node should join the TSGI, obtain a Rank in that Instance
            and start advertising its own DagRank in the TSGI as its Join Priority in its EBs.
         </t>
      </section>
      <section anchor="Slotframes" title="Slotframes and Priorities">
         <t>
            6top uses priority queues to manage concurrent data flows of different priorities. When a packet is received from an higher layer for transmission, the I-MUX module of 6top inserts that packet in the outgoing queue which matches the packet best (DSCP can therefore be used). At each scheduled transmit slot, the MUX module looks for the frame in all the outgoing queues that best matches the cells. If a frame is found, it is given to TSCH for transmission.
         </t>
      </section>
      <section anchor="Packet" title="Packet Marking and Handling">
         <t>
            reservation
            Deterministic flow allocation (hard reservation of timeslots) eg centralized RSVP? metrics?
            Hop-by-hop interaction with 6top.
            Lazy reservation (use shared slots to transport extra burst and then dynamically (de)allocate)
            Classical QoS (dynamic based on observation)
         </t>
      </section>
   </section>
   <!--
   <section title="Functional Flows">
      <t>
         <list hangIndent="6" style="hanging">
            <t hangText="Join:"></t>
            <t hangText="Time Synchronization:"></t>
            <t hangText="Setup for routing:"></t>
            <t hangText="PCE reservation:"></t>
            <t hangText="Distributed reservation:"></t>
            <t hangText="Dynamic slot (de)allocation:"></t>
            <t hangText="DSCP mapping:"></t>
         </list>
      </t>
   </section>
   -->
   <section anchor="schd" title="Schedule Management Mechanisms">
      <t>
         6TiSCH uses 4 paradigms to manage the TSCH schedule of the LLN nodes: Static Scheduling, 
         Neighbor-to-Neighbor Scheduling, Multihop Monitoring and Scheduling, and Hop-by-hop Scheduling. 
         Multiple mechanisms are proposed that implement the associated Interaction Models, 
         and can be combined and used in the same LLN. 
         Which mechanism(s) are used depends on application requirements. 
      </t>
      <section title="Minimal Static Scheduling">
         <t>
            A static TSCH schedule can be used to bootstrap a network, as a initial phase during implementation, or as a fall-back mechanism in case of network malfunction. This scheduled can be preconfigured, or learnt by a node when joining the network, but it remains unchanged after the node has joined a network. The Routing Protocol for LLNs (RPL) is used on the resulting network. This "minimal" scheduling mechanism that implements this paradigm is detailed in <xref target="I-D.vilajosana-6tisch-minimal"/>.
         </t>
      </section>
      <section title="Neighbor-to-Neighbor Scheduling">
         <t>
            The 6top sublayer <xref target="I-D.wang-6tisch-6top"/> defines a protocol for neighbor nodes to reserve soft cells to one another. Because this reservation is done without global knowledge of the schedule of nodes in the LLN, scheduling collisions are possible. 6top defines a monitoring process which continuously tracks the packet delivery ratio of soft cells. It uses these statistics to trigger the relocation of a soft cell in the schedule, using a negotiation protocol between the neighbors nodes communicating over that cell.
         </t>
         <t>
            Monitoring and relocation is done in the 6top layer. For the upper layer, the connection between two neighbor node appears as an number of cells. Depending on the traffic requirements, the upper layer can request 6top to add or delete a number of cells scheduled to a particular neighbor, without being responsible for choosing the exact slotOffset/channelOffset of those cells.
         </t>
      </section>
      <section title="Remote Monitoring and Schedule Management">
         <t>
            <xref target="I-D.sudhaakar-6tisch-coap"/> defines an mapping of 6top's set of commands to CoAP resources. 
            This allows an entity to interact with the 6top layer of a node that is multiple hops away. 
            <xref target="I-D.sudhaakar-6tisch-coap"/> defines the CoAP resources and associated methods 
            (GET/PUT/POST/DELETE). The payload of those signalling packets use CBOR to encode the different
            fields sent and received.
         </t>
         <t>
            Being able to interact with the 6top sublayer of a node multiple hops away can be used for monitoring, scheduling, or a combination of both. The architecture supports variations on the deployment model, and focuses on the flows rather than the whether there is a proxy or a translational operation on the way.
         </t>
         <t>
            The entity issuing the CoAP requests can be a central scheduling entity (e.g. a PCE), a node multiple hops away with the authority to modify the TSCH schedule (e.g. the head of a local cluster), or a external device monitoring the overall state of the network (e.g. NME). The architecture allows for different types of interactions between this CoAP client and a node in the network:
         </t>
         <t>
            <list hangIndent="6" style="hanging">
               <t hangText="Query">
                  The CoAP client may retrieve information from a specific node in the network. This is typically a CoAP GET request issued on the appropriate resource on the node.
               </t>
               <t hangText="Report">
                  The CoAP client may register for periodic updates from a resource, for example to monitor the state of some statistics maintained by the node. This is typically done through CoAP Observe.
               </t>
               <t hangText="Action">
                  The CoAP client may request the node to take some action, for example add a cell to its TSCH schedule. This is typically a CoAP PUT/POST/DELETE request issued on the appropriate resource on the node.
               </t>
               <t hangText="Request">
                  The node may issue a request to the client to trigger some action, for example the calculation of a multi-hop route. This is typically a CoAP POST request issued by the node on the appropriate resource on the CoAP client.
               </t>
               <t hangText="Event">
                  The node may indicate the occurrence of a specific event to the CoAP client, for example the discovery of a new neighbor. This is typically a CoAP PUT request issued by the node on the appropriate resource on the CoAP client.
               </t>
            </list>
         </t>
         <t>
            <xref target="I-D.sudhaakar-6tisch-coap"/> defines the a basic set of CoAP resources. 
            For cases where extra functionality is needed, the draft also defines the concept of "profiles", 
            as well as a mechanism for a CoAP client to discover the profiles installed on a node.
         </t>
      </section>
      <section title="Hop-by-hop Scheduling">
         <t>
            A node can reserve a track to a destination node multiple hops away by installing soft cells at each intermediate node. This forms a track of soft cells. It is the responsibility of the 6top sublayer of each node on the track to monitor these soft cells and trigger reallocations when needed.
         </t>
         <t>
            This hop-by-hop reservation mechanism is similar to <xref target="RFC2119"/> and <xref target="RFC5974"/>. The protocol for a node to trigger hop-by-hop scheduling is not defined yet.
         </t>
      </section>
   </section>
   <section title="Centralized vs. Distributed Routing">
      <t>
         6TiSCH supports a mixed model of centralized routes and distributed routes. Centralized routes can for example computed by a entity such as a PCE. Distributed routes are computed by the RPL routing protocol.
      </t>
      <t>
         Both may inject routes in the Routing Tables of the 6TiSCH routers. In either case, each route is associated with a topology that is indexed by an RPLInstanceID, as defined in <xref target="RFC6550">RPL</xref>. RPL and PCE rely on shared sources to define Global and Local RPLInstanceIDs.
      </t>
      <t>
         It is possible for centralized and distributed routing to share a same topology. In this case, centralizes routes have precedence over distributed routes in case of a conflict.
      </t>
      <t>
         Inside the 6TiSCH domain, the flow label is used to indicate the topology that must be used for
         routing. The associated Routing Tables are discussed in <xref target="I-D.thubert-roll-flow-label"/>.
      </t>
   </section>
   <section title="IANA Considerations">
      <t>
         This specification does not require IANA action.
      </t>
   </section>
   <section title="Security Considerations">
      <t>
         This specification is not found to introduce new security threat.
      </t>
   </section>
   <section title="Acknowledgements">
      <t>
      </t>
   </section>
</middle>

<back>
   <references title="Normative References">
      <!-- 6TiSCH -->
      <!-- others -->
      <?rfc include="reference.RFC.2119"?> <!-- Key words for use in RFCs to Indicate Requirement Levels -->
      <?rfc include="reference.RFC.2460"?> <!-- Internet Protocol, Version 6 (IPv6) Specification -->
      <?rfc include="reference.RFC.3444"?> <!-- On the Difference between Information Models and Data Models -->
      <?rfc include="reference.RFC.4080"?> <!-- Next Steps in Signaling (NSIS): Framework -->
      <?rfc include="reference.RFC.4291"?> <!-- IP Version 6 Addressing Architecture -->
      <?rfc include="reference.RFC.4861"?> <!-- Neighbor Discovery for IP version 6 (IPv6) -->
      <?rfc include="reference.RFC.4862"?> <!-- IPv6 Stateless Address Autoconfiguration -->
      <?rfc include="reference.RFC.5191"?> <!-- Protocol for Carrying Authentication for Network Access (PANA) -->
      <?rfc include="reference.RFC.5889"?> <!-- IP Addressing Model in Ad Hoc Networks -->
      <?rfc include="reference.RFC.5974"?> <!-- NSIS Signaling Layer Protocol (NSLP) for Quality-of-Service Signaling -->
      <?rfc include="reference.RFC.6282"?> <!-- Compression Format for IPv6 Datagrams over IEEE 802.15.4-Based Networks -->
      <?rfc include="reference.RFC.6550"?> <!-- RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks -->
      <?rfc include="reference.RFC.6775"?> <!-- Neighbor Discovery Optimization for IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) -->
   </references>
   <references title="Informative References">
      <!-- 6TiSCH -->
      <?rfc include='reference.I-D.palattella-6tisch-terminology'?>
      <?rfc include='reference.I-D.watteyne-6tisch-tsch'?>
      <?rfc include='reference.I-D.wang-6tisch-6top'?>
      <?rfc include='reference.I-D.vilajosana-6tisch-minimal'?>
      <?rfc include='reference.I-D.ohba-6tisch-security'?>
      <?rfc include='reference.I-D.sudhaakar-6tisch-coap'?>
      <!-- others -->
      <?rfc include='reference.I-D.ietf-roll-rpl-industrial-applicability'?>
      <?rfc include='reference.I-D.chakrabarti-nordmark-6man-efficient-nd.xml'?>
      <?rfc include='reference.I-D.thubert-6lowpan-backbone-router.xml'?>
      <?rfc include='reference.I-D.thubert-roll-forwarding-frags.xml'?>
      <?rfc include='reference.I-D.svshah-tsvwg-lln-diffserv-recommendations.xml'?>
      <?rfc include='reference.I-D.thubert-roll-flow-label.xml'?>
   </references>
   <references title="External Informative References">
      <reference anchor="IEEE802154e">
         <front>
            <title>IEEE std. 802.15.4e, Part. 15.4: Low-Rate Wireless Personal Area Networks (LR-WPANs) Amendament 1: MAC sublayer</title>
            <author>
               <organization>IEEE standard for Information Technology</organization>
            </author>
            <date month="April" year="2012"/>
         </front>
      </reference>
      <reference anchor="IEEE802.1TSNTG" target="http://www.ieee802.org/1/pages/avbridges.html">
         <front>
            <title>IEEE 802.1 Time-Sensitive Networks Task Group</title>
            <author>
               <organization>IEEE Standards Association</organization>
            </author>
            <date day="08" month="March" year="2013" />
         </front>
      </reference>
      <reference anchor="HART">
         <front>
            <title>Highway Addressable Remote Transducer, a group of specifications for industrial process and control devices administered by the HART Foundation</title>
            <author>
               <organization>www.hartcomm.org</organization>
            </author>
            <date></date>
         </front>
      </reference>
      <reference anchor="ISA100.11a" target="http://www.isa.org/Community/SP100WirelessSystemsforAutomation">
         <front>
            <title>ISA100, Wireless Systems for Automation</title>
            <author>
               <organization>ISA</organization>
            </author>
            <date day="05" month="May" year="2008" />
         </front>
      </reference>
   </references>
</back>

</rfc>
