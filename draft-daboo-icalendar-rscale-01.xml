<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="../../rfc2629.xslt"?><!DOCTYPE rfc SYSTEM 'rfc2629.dtd'[<!ENTITY rfc2119 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'><!ENTITY rfc5234 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml'><!ENTITY rfc5545 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5545.xml'>]><?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?><?rfc toc="yes"?><?rfc comments="yes"?><?rfc inline="yes"?><?rfc symrefs="yes"?><?rfc sortrefs="yes"?><?rfc compact="yes"?><?rfc subcompact="no"?><?rfc tocdepth="2"?><?rfc strict="yes"?><rfc category="std" ipr='trust200902' docName='draft-daboo-icalendar-rscale-01' updates='5545'>  <front>    <title abbrev="iCalendar Property Extensions">Non-Gregorian Recurrence Rules in iCalendar</title>    <author initials="C." surname="Daboo" fullname="Cyrus Daboo">      <organization abbrev="Apple Inc.">Apple Inc.</organization>      <address>        <postal>          <street>1 Infinite Loop</street>          <city>Cupertino</city>          <region>CA</region>          <code>95014</code>          <country>USA</country>        </postal>        <email>cyrus@daboo.name</email>        <uri>http://www.apple.com/</uri>      </address>    </author>    <author initials="G." surname="Yakushev" fullname="Gregory Yakushev">      <organization abbrev="Google Inc.">Google Inc.</organization>      <address>        <postal>          <street>Brandschenkestrasse 100</street>          <city>8002 Zurich</city>          <region></region>          <code></code>          <country>Switzerland</country>        </postal>        <email>yakushev@google.com</email>        <uri>http://www.google.com/</uri>      </address>    </author>    <date />    <area>Applications</area>    <keyword>calendaring</keyword>    <keyword>iCalendar</keyword>    <abstract>      <t>This document defines how non-Gregorian recurrence rules can be specified in iCalendar data.</t>    </abstract>  </front>  <middle>    <section title='Introduction'>      <t>The <xref target='RFC5545'>iCalendar</xref> data format is in widespread use to represent calendar data. iCalendar represents dates and times using the Gregorian calendar system only. It does provide a way to use non-Gregorian calendar systems via a "CALSCALE" property, however this has never been formally used. However, there is a need to support at least non-Gregorian recurrence patterns to cover anniversaries, and many local, religious, or civil holidays based on non-Gregorian dates.</t>      <t>        There are several disadvantages to using the existing "CALSCALE" property in iCalendar for implementing non-Gregorian calendars:        <list style="numbers">          <t>            The "CALSCALE" property exists in the top-level "VCALENDAR" objects and thus applies to all components within that object. In today's multi-cultural society, that restricts the ability to mix events from different calendar systems within the same iCalendar object. e.g., it would prevent having both the Gregorian New Year and Chinese New Year in the same iCalendar object.          </t>          <t>            Many countries observe daylight savings time, encoded in iCalendar using the "VTIMEZONE" component. Timezone and daylight saving time rules are always specified via Gregorian calendar based recurrence rules (e.g., "the 3rd Sunday in March"). This is problematic for non-Gregorian uses of "CALSCALE" which would by default also apply to the dates and rules used in the "VTIMEZONE" components in the corresponding iCalendar object.          </t>        </list>      </t>      <t>This specification solves these issues by allowing the "CALSCALE" to remain set to Gregorian, but re-defining the recurrence rule property "RRULE" to accept new items including one that allows non-Gregorian calendar systems to be used. With this, all the date, time and period values in the iCalendar object would remain specified using the Gregorian calendar system, but repeating patterns in other calendar systems could be defined. It is then up to calendar user agents and servers to map between Gregorian and non-Gregorian calendar systems in order to expand out recurrence instances.</t>      <t>This specification does not itself define calendar systems, rather it utilizes the registry defined by the Unicode Consortium (http://unicode.org) in their CLDR (Common Locale Data Repository) project.</t>    </section>    <section title='Conventions Used in This Document'>      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target='RFC2119' />.</t>      <t>The notation used in this memo is the ABNF notation of <xref target='RFC5234' /> as used by <xref target='RFC5545'>iCalendar</xref>. Any syntax elements shown below that are not explicitly defined in this specification come from <xref target='RFC5545'>iCalendar</xref>.</t>      <t>        When a Gregorian calendar date value is shown in text, it will use the format "YYYYMMHH", where "YYYY" is the 4-digit year, "MM" the 2-digit month, and "DD" the 2-digit day (this is the same format used in <xref target='RFC5545'>iCalendar</xref>). The Chinese calendar will be used as an example of a non-Gregorian calendar for illustrative purposes. When a Chinese calendar date value is shown in text, it will use the format "{C}YYYYMM[L]DD" - i.e., the same format as Gregorian but with a "{C}" prefix, and an optional "L" character after the month element to indicate a leap month. Similarly, {I} and {H} are used in other examples as prefixes for Islamic and Hebrew dates, respectively.      </t>    </section>    <section title="Overview">      <t>In the Gregorian calendar system, each year is composed of a fixed number of months (12), with each month having a fixed number of days (between 30 and 31), except for the second month (February) which contains either 28 days, or 29 days (in a leap year). Weeks are composed of 7 days, with day names Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday. Years can have either 365 or 366 days (the later in a leap year). The number of whole weeks in a year is 52.</t>      <t>        In iCalendar, the "RECUR" value type defines various fields used to express a recurrence pattern, and those fields are given limits based on those of the Gregorian calendar system. Since other calendar systems can have different limits and other behaviors that need to be accounted for, the maximum values for the elements in the "RECUR" value are not covered by this specification.      </t>      <t>        To generate a set of recurring instances in a non-Gregorian calendar system, the following procedure is used:        <list style="numbers">          <t>iCalendar data continues to use the "GREGORIAN" calendar system, so all "DATE", "DATE-TIME" and "PERIOD" values continue to use the Gregorian format and limits.</t>          <t>The "RRULE" property is extended to include an "RSCALE" element in its value that specifies the calendar system to use for the recurrence pattern. The existing elements of the "RRULE" value type are used, but modified to support different upper limits, based on the "RSCALE" value, as well as a modification to month numbers to allow a leap month to be specified. Existing requirements for the use of "RRULE" all still apply (e.g., the "RRULE" has to match the "DTSTART" value of the master instance). Other recurrence properties such as "RECURRENCE-ID", "RDATE" and "EXDATE" continue to use the Gregorian date format as "CALSCALE" is unchanged.</t>        </list>        When generating instances, the following procedure might be used:        <list style="numbers">          <t>Convert the "DTSTART" property value of the master recurring component into the date and time components for the calendar system specified by the "RSCALE" element in the "RRULE" value. This provides the "seed" value for generating subsequent recurrence instances.</t>          <t>Iteratively generate instances using the "RRULE" value applied to the year, month, and day components of the date in the new calendar system.</t>          <t>For each generated instance, convert the date values back from the non-Gregorian form into Gregorian and use those values for other properties such as "RECURRENCE-ID".</t>        </list>      </t>      <t>        Consider the following example for an event representing the Chinese New Year:      <figure><artwork>DTSTART;VALUE=DATE:20130210RRULE:RSCALE=CHINESE;FREQ=YEARLYSUMMARY:Chinese New Year</artwork></figure>      To generate instances, first the "DTSTART" value "20130210" is converted into the Chinese calendar system giving "{C}47110101". Next, the year component is incremented by one to give "{C}47120101", and that is then converted back into Gregorian as "20140131". Additional instances are generated by iteratively increasing the year component in the Chinese date value and converting back to Gregorian.      </t>      <t>        This specification makes use of calendar algorithms defined by the Unicode Consortium [TBD - reference]. The definition of different calendar scales is defined by Unicode, as per <xref target="registration"/>.      </t>    </section>    <section title="Extended RRULE Property">      <t>        This specification extends the existing "RRULE" iCalendar property value to include a new "RSCALE" element that can be used to indicate the calendar system used for generating the recurrence pattern.      </t>      <t>        When "RSCALE" is present, the other changes to "RRULE" are:        <list style="numbers">          <t>Elements that include numeric values (e.g., "BYYEARDAY") have numeric ranges defined by the "RSCALE" value (i.e., in some calendar systems there might be more than 366 days in a year).</t>          <t>Month numbers can include an "L" suffix to indicate that the specified month is a leap month in the corresponding calendar system.</t>          <t>Month numbers can be specified using a negative offset (i.e., "-1" represents the last month of the year).</t>          <t>A "SKIP" element is added to define how "missing" instances are handled. e.g., if a yearly recurring event starts in a leap month, the "SKIP" element determines whether instances in non-leap years are ignored ("SKIP" set to "YES"), appear in the preceding regular month ("SKIP" set to "BACKWARD" - the default when "RSCALE" is present), or appear in the following regular month ("SKIP" set to "FORWARD").</t>        </list>      </t>      <t>        The syntax for the "RECUR" value is modified in the following fashion:            <figure>              <artwork name="abnf"><![CDATA[recur-rule-part /=   ("RSCALE" "=" rscale)                   / ("SKIP" "=" skip)rscale          = (iana-token  ; A CLDR-registered calendar system                               ; name.                 / x-name)     ; A non-standard, experimental                               ; calendar system name.skip            = ("YES" / "BACKWARD" / "FORWARD")                 ; When "RSCALE" is not present the default                 ; is "YES". When "RSCALE" is present the default                 ; is "BACKWARD".monthnum        = [plus / minus] 1*2DIGIT  ["L"]                 ; Existing element modified to include a positive                 ; or negative offset capability, as well as a leap                 ; month indicator suffix.]]></artwork>            </figure></t>      <section title="Handling Leap Months">        <t>Leap months can occur in different calendar systems. For most of those, the suffix "L" is added to the "RRULE" month number component to indicate a leap month. In some cases the month precedes the regular month with the same number, in other cases it follows. The one exception to this rule is the Hebrew calendar, where we follow the definition from Unicode [TBD - REF]. In that case months are number 1 through 13, with month 6 being the leap month. Thus in non-leap years, month 6 is skipped.</t>      </section>      <section title="Examples" anchor="examples">        <section title="Chinese New Year">          <t>Consider the following set of iCalendar properties:      <figure><artwork>DTSTART;VALUE=DATE:20130210RRULE:RSCALE=CHINESE;FREQ=YEARLYSUMMARY:Chinese New Year</artwork></figure>          These define a recurring event for the Chinese New Year, with the first instance the one in Gregorian year 2013.</t>          <t>          The Chinese date corresponding to the first instance is {C}47110101. The table below shows the initial instance, and the next four, each of which is determined by adding the appropriate amount to the year component of the Chinese date. Also shown is the conversion back to the Gregorian date:</t>          <texttable>            <ttcol>Chinese Date</ttcol>            <ttcol>Gregorian Date</ttcol>            <c>{C}47110101</c>            <c>20130210 - DTSTART specified in iCalendar data</c>            <c>{C}47120101</c>            <c>20140131</c>            <c>{C}47130101</c>            <c>20150120</c>            <c>{C}47140101</c>            <c>20160208</c>            <c>{C}47150101</c>            <c>20170128</c>          </texttable>        </section>        <section title="Islamic Start of Ramadan">          <t>Consider the following set of iCalendar properties:      <figure><artwork>DTSTART;VALUE=DATE:20130709RRULE:RSCALE=ISLAMIC;FREQ=YEARLY;BYMONTH=9SUMMARY:Start of Ramadan</artwork></figure>          These define a recurring event for the start of the Islamic month of Ramadan, with the first instance the one in Gregorian year 2013.</t>          <t>          The Islamic date corresponding to the first instance is {I}14340901. The table below shows the initial instance, and the next four, each of which is determined by adding the appropriate amount to the year component of the Islamic date. Also shown is the conversion back to the Gregorian date:</t>          <texttable>            <ttcol>Islamic Date</ttcol>            <ttcol>Gregorian Date</ttcol>            <c>{I}14340901</c>            <c>20130709 - DTSTART specified in iCalendar data</c>            <c>{I}14350901</c>            <c>20140628</c>            <c>{I}14360901</c>            <c>20150618</c>            <c>{I}14370901</c>            <c>20160606</c>            <c>{I}14380901</c>            <c>20170527</c>          </texttable>          <t>Note that in this example, the value of the "BYMONTH" component in the "RRULE" matches the Islamic month value and not the Gregorian month.</t>        </section>        <section title="Hebrew anniversary starting in a leap month">          <t>Consider the following set of iCalendar properties:      <figure><artwork>DTSTART;VALUE=DATE:20140208RRULE:RSCALE=HEBREW;FREQ=YEARLY;BYMONTH=6;BYMONTHDAY=8;SKIP=FORWARDSUMMARY:Anniversary</artwork></figure>          These define a recurring event for the 8th day of the Hebrew month of Adar I, with the first instance the one in Gregorian year 2014.</t>          <t>          The Hebrew date corresponding to the first instance is {H}57740608, note that month 6 is a leap month in year 5774. The table below shows the initial instance, and the next four, each of which is determined by adding the appropriate amount to the year component of the Hebrew date, taking into account that only year 5776 is a leap year. Thus in other years the Hebrew month component is adjusted forward to month 7. Also shown is the conversion back to the Gregorian date:</t>          <texttable>            <ttcol>Hebrew Date</ttcol>            <ttcol>Gregorian Date</ttcol>            <c>{H}57740608</c>            <c>20140208 - DTSTART specified in iCalendar data</c>            <c>{H}57750708</c>            <c>20150227</c>            <c>{H}57760608</c>            <c>20160217</c>            <c>{H}57770708</c>            <c>20170306</c>            <c>{H}57780708</c>            <c>20180223</c>          </texttable>        </section>      </section>    </section>    <section title='Registering Calendar Systems' anchor='registration'>      <t>        This specification uses the Unicode Consortium's registry of calendar systems to define valid values for the "RSCALE" element of an "RRULE" [TBD - Unicode BCP47 - http://unicode.org/repos/cldr/trunk/common/bcp47/calendar.xml]. Note that the underscore character "_" is never used in CLDR-based calendar system names. New values can be added to this registry following Unicode Consortium rules. It is expected that many implementations of non-Gregorian calendars will use software libraries provided by Unicode (ICU), and hence it makes sense to re-use their registry rather than creating a new one. For consistency, when used, the "RSCALE" values SHOULD be uppercased.      </t>    </section>    <section title='Security Considerations'>      <t>This specification does not introduce any addition security concerns beyond those described in <xref target="RFC5545" />.</t>    </section>    <section title='IANA Considerations'>      <t>This specification does not define any new IANA registries or values.</t>    </section>    <section title='Acknowledgments'>      <t>Thanks to the following for feedback:      Mark Davis,      Mike Douglass,      Peter Edberg,      Arnaud Quillaud,      and Dave Thewlis.      This specification came about via discussions at the Calendaring and Scheduling Consortium.</t>    </section>  </middle>  <back>    <references title='Normative References'>&rfc2119; &rfc5234; &rfc5545;</references>    <!--<references title='Informative References'>&rfc5546;</references>-->    <section title="Change History (To be removed by RFC Editor before publication)">      <t>Changes in -01:       <list style='numbers'>        <t>Removed requirement that RSCALE be the first item in an RRULE.</t>        <t>Added BYLEAPMONTH element and removed BYMONTH "L" suffix.</t>        <t>Removed OpPen Issues.</t>      </list>      </t>    </section>  </back></rfc>