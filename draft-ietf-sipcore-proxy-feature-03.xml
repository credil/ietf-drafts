<?xml version="1.0" encoding="iso-8859-1"?>
<!-- comment -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd"[]>
<?rfc toc="yes" ?>
<?rfc compact="yes" ?>
<?rfc sortrefs="no" ?>
<rfc ipr="trust200811" category="std" docName="draft-ietf-sipcore-proxy-feature-03.txt" obsoletes="" updates="" submissionType="IETF" xml:lang="en">
	<front>
		<title abbrev="proxy feature">
			Mechanism to indicate support of features and capabilities in the Session Initiation Protocol (SIP)
		</title>
		<author initials="C.H." surname="Holmberg" fullname="Christer Holmberg">
			<organization>Ericsson</organization>
			<address>
				<postal>
					<street>Hirsalantie 11</street>
					<code>02420</code>
					<city>Jorvas</city>
					<country>Finland</country>
				</postal>
				<email>christer.holmberg@ericsson.com</email>
			</address>
		</author>
		<author initials="I.S." surname="Sedlacek" fullname="Ivo Sedlacek">
			<organization>Ericsson</organization>
			<address>
				<postal>
					<street>Scheelevägen 19C</street>
					<code>22363</code>
					<city>Lund</city>
					<country>Sweden</country>
				</postal>
				<email>ivo.sedlacek@ericsson.com</email>
			</address>
		</author>
		<author initials="H.K." fullname="Hadriel Kaplan" initials="H." surname="Kaplan">
			<organization>Acme Packet</organization>
			<address>
				<postal>
					<street>71 Third Ave.</street>
					<city>Burlington</city>
					<region>MA</region>
					<code>01803</code>
					<country>USA</country>
				</postal>
				<email>hkaplan@acmepacket.com</email>        
			</address>
		</author>		
		
		<date year="2012" />
		<area>Transport</area>
		<workgroup>SIPCORE Working Group</workgroup>
		<keyword>SIP</keyword>
		<keyword>proxy</keyword>
		<keyword>feature</keyword>
		<keyword>feature tag</keyword>
		<keyword>feature cap</keyword>
		<keyword>Feature-Caps</keyword>
		<keyword>capabiltiy</keyword>		
		<abstract>
			<t>
				This specification creates a new IANA registry, "Feature Cap Registry", for 
				registering "feature caps", which are used by SIP entities not represented 
				by the URI of the Contact header field to indicate support of features and 
				capabilities, where media feature tags cannot be used to indicate the support. 
			</t>
			<t>
				This specification also defines a new SIP header field, Feature-Caps, 
				to convey feature caps in SIP messages.				
			</t>
		</abstract>
	</front>
	<middle>
		<section title="Introduction" toc="default">
			<t>
				The Session Initiation Protocol (SIP) <xref target="RFC3261" pageno="false" 
				format="default"/> "Caller Preferences" extension, defined in RFC 3840 <xref 
				target="RFC3840" pageno="false" format="default"/>, provides a mechanism that 
				allows a SIP message to convey information relating to the originator's features 
				and capabilities, using the Contact header field.
			</t>
			<t>
				This specification creates a new IANA registry, "Feature Cap Registry", for 
				registering "feature caps", which are used by SIP entities not represented 
				by the URI of the Contact header field to indicate support of features and 
				capabilities, where media feature tags cannot be used to indicate the support. 
				Such cases are:
				<t>
					<list style="symbols">
						<t>
							- The SIP entity acts as a SIP proxy.
						</t>
						<t>
							- The SIP entity acts as a SIP registrar.
						</t>
						<t>
							- The SIP entity acts as a B2BUA, where the 
							Contact header field URI represents another SIP entity.
						</t>					
					</list>
				</t>
			</t>
			<t>
				This specification also defines a new SIP header field, Feature-Caps,
				to convey feature caps in SIP messages.
			</t>
			<t>
				NOTE: Unlike media feature tags, feature caps are intended to only be 
				used with the SIP protocol.
			</t>
		</section>
		
		<section title="Conventions" toc="default">
			<t>
				The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", 
				"RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in 
				BCP 14, RFC 2119 <xref target="RFC2119" pageno="false" format="default" />.
			</t>
		</section>

		<section title="Definitions" toc="default">
			<t>
				Downstream SIP entity: SIP entity in the direction towards which a SIP request is sent.
			</t>
			<t>
				Upstream SIP entity: SIP entity in the direction from which a SIP request is received.
			</t>
		</section>
		
		<section title="Feature Caps" anchor="sec.fc" toc="default">
			<section title="Introduction" anchor="sec.fc.int" toc="default">
				<t>				
					Feature caps are used by SIP entities not represented by the URI of the Contact header 
					field to indicate support of features and capabilities, where media feature tags cannot 
					be used to indicate the support.
				</t>
				<t>
					A value, or a list of values, that provides additional information about the supported 
					feature or capability, can be associated with a feature cap.
				</t>
				<t>
					Section 5 defines how feature caps are conveyed using the Feature-Caps 
					header field.
				</t>
				<t>
					The feature cap ABNF is defined in Section 6.2.2.
				</t>
			</section>

			<section title="Registration Trees" anchor="sec.fc.reg.tree" toc="default">
				<section title="General" anchor="sec.fc.reg.tree.gen" toc="default">
					<t>
						The following subsections define registration "trees", distinguished
						by the use of faceted names (e.g., names of the form "tree.feature-
						name").
					</t>
					<t>
						The trees defined herein are similar to the global tree and sip tree
						defined for media feature tags, in RFC 2506 <xref target="RFC2506" 
						pageno="false" format="default"/> and RFC 3840 <xref target="RFC3840" 
						pageno="false" format="default"/>. Other registration trees are outside 
						the scope of this specification.
					</t>
					<t>
						NOTE: In contrast to RFC 2506 and RFC 3840, this specification only
						defines a global tree and a sip tree, as they are the only trees
						defined in those RFCs that have been used for defining SIP-specific
						media feature tags.
					</t>
					<t>
						When a feature cap is registered in any registration tree, no
						leading "+" is used in the registration.
					</t>
				</section>
				<section title="Global Tree" anchor="sec.fc.reg.tree.glob" toc="default">
				<t>
					The feature cap global tree is similar to the media feature tag 
					global tree defined in RFC 2506 <xref target="RFC2506" pageno="false" 
					format="default"/>.
				</t>
				<t>
					A feature cap for the global tree will be registered by the IANA after 
					review by a designated expert. That review will serve to ensure that the 
					feature cap meets the technical requirements of this specification.
				</t>	
				<t>
					A feature cap in the global tree will be distinguished by the leading 
					facet "g.". An organization can propose either a designation indicative 
					of the feature, (e.g., "g.blinktags") or a faceted designation including
					the organization name (e.g., "g.organization.blinktags").
				</t>
				<t>
					When a feature cap is registered in the global tree, it needs to meet
					the "Expert Review" policies defined in RFC 5226 <xref target="RFC5226" 
					pageno="false" format="default"/>. A designated area expert will review 
					the proposed feature cap, and consult with members of related mailing
					lists.
				</t>				
				</section>
				<section title="Feature Cap Registration Tree" anchor="sec.fc.reg.tree.sip" toc="default">
				<t>
					The feature cap sip tree is similar to the media feature tag
					sip tree defined in RFC 3840 <xref target="RFC3840" pageno="false" 
					format="default"/>.
				</t>
				<t>
					A feature cap in the sip tree will be distinguished by the leading 
					facet "sip.".
				</t>
				<t>
					When a feature cap is registered in the sip tree, it needs to meet
					the "IETF Consensus" policies defined in RFC 5226 <xref target="RFC5226" 
					pageno="false" format="default"/>. An RFC, which contains the registration
					of the feature cap, MUST be published.
				</t>				
				</section>
			</section>
		
			<section title="Registration Template" anchor="sec.fc.reg.temp" toc="default">
				<figure title="Registration Template" anchor="fig.fc.reg.temp" suppress-title="false" align="left" alt="" width="" height="">
						<artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height=""><![CDATA[ 

					
To: sip-feature-caps@apps.ietf.org (feature caps mailing list)
Subject: Registration of feature cap XXXX

| Instructions are preceded by '|'.  Some fields are optional.

Feature cap name:

Summary of feature indicated by this feature cap:

| The summary should be no longer than 4 lines. More 
| detailed information can be provided in the SIP feature 
| cap specification.
				
Feature cap specification reference:			

| The referenced specification MUST contain the information 
| listed in section XX of XXXX (IANA: Replace XXXX with 
| assigned RFC number of this specification.
												
Values appropriate for use with this feature cap:

| If no values are defined for the feature cap, 
| indicate "N/A". Details about feature cap values 
| MUST be defined in the feature cap specification.
   
The feature cap is intended primarily for 
use in the following applications, protocols, 
services, or negotiation mechanisms:                    [optional]																

| For applications, also specify the number of the 
| first version which will use the feature cap, 
| if applicable.

Examples of typical use:                               	[optional]

Considerations particular to use in individual 
applications, protocols, services, or negotiation 
mechanisms:                                             [optional]

Interoperability considerations:                       	[optional]

Security considerations:

Privacy concerns, related to exposure of personal
information:

Denial of service concerns related to consequences 
of specifying incorrect values:

Other:

    Additional information:                         [optional]

    Keywords:                                       [optional]

    Related feature caps:                    	[optional]

    Name(s) & email address(es) of person(s) to 
    contact for	further information:

    Intended usage:

    | one of COMMON, LIMITED USE or OBSOLETE

    Author/Change controller:

    Other information:                               [optional]

    | Any other information that the author deems 
    | interesting may be added here.	
                      
						]]></artwork>
					</figure>
			</section>
		
			<section anchor="sec.fc.reqs" title="Feature Cap Specification Requirements">
				<section anchor="sec.fc.reqs.gen" title="General">
				<t>
						A feature cap specification MUST address the issues defined 
						in the following subsections, or document why an issue is not applicable 
						for the specific feature cap. A reference to the specification MUST
						be provided when the feature cap is registered with IANA 
						(see <xref target="sec.fc.reg.temp" pageno="false" format="default"/>).
				</t>
				<t>
						It is bad practice for feature cap specifications to repeat procedures 
						(e.g. general procedures on the usage of the Feature-Caps header field 
						and feature caps) defined in this specification, unless needed for 
						clarification or emphasis purpose.
				</t>
				<t>
						A feature cap specification MUST NOT weaken any behavior designated 
						with "SHOULD" or "MUST" in this specification.  However, a 
						specification MAY strengthen "SHOULD", "MAY", or "RECOMMENDED" 
						requirements to "MUST" strength if features and capabilities associated with the SIP 
						feature cap require it.
				</t>
				</section>
				<section anchor="sec.fc.reqs.ove" title="Overall Description">			
					<t>
						The feature cap specification MUST contain an overall description
						of the feature cap: how it is used to indicate support of a
						feature, a description of the feature associated with the SIP feature
						cap, a description of any additional information (conveyed using
						one or more feature cap values) that can be conveyed together
						with the feature cap, and a description of how the associated
						feature may be exercised/invoked.
					</t>
				</section>
				<section anchor="sec.fc.reqs.value" title="Feature Cap Values">
				<t>
					A feature cap can have an associated value, or a list of
					values.
				</t>
				<t>
					The feature cap specification MUST define the syntax and semantics 
					of any value defined for the feature cap, including possible 
					restrictions related to the usage of a specific value. The feature 
					cap specification MUST define the value(s) in accordance with the 
					syntax defined in section 6.2.2.
				</t>
				<t>									
					A feature cap value is only applicable for the feature cap for
					which it has been defined. For other feature caps, the value has to be
					defined explicitly, even if the semantics are identical.
				</t>
				<t>
					It is STRONGLY RECOMMENDED to not re-use a value that already has
					been defined for another feature cap, unless the semantics of the
					values are the same.
				</t>			
				</section>
				<section anchor="sec.fc.reqs.rest" title="Usage Restrictions">
				<t>
					If there are restrictions on how SIP entities can insert a SIP feature 
					cap, the feature cap specification MUST document such restrictions.
				</t>
				<t>			
					There might be restrictions related to whether entities are allowed 
					to insert a feature cap in registration related messages, standalone 
					transaction messages, or dialog related messages, whether entities 
					are allowed to insert a feature cap in requests or responses, whether 
					entities also need to support other features and capabilities in order to insert a 
					feature cap, and whether entities are allowed to indicate support of
					a feature in conjunction with another feature.
				</t>
				</section>
				<section anchor="sec.fc.reqs.ex" title="Examples">
				<t>
					It is RECOMMENDED that the feature cap specification provide
   					demonstrative message flow diagrams, paired with complete messages
   					and message descriptions.
				</t>
				<t>
					Note that example message flows are by definition informative, and do not
   					replace normative text.
				</t>
				</section>
			</section>
		</section>


		<section title="Feature-Caps Header Field" anchor="sec.fchf" toc="default">
			<section title="Introduction" anchor="sec.fchf.int" toc="default">
				<t>
					The Feature-Caps header field is used by SIP entities to convey support 
					of features and capabilities, by setting feature caps. Feature caps 
					conveyed in a Feature-Caps header field indicate that the SIP entity that 
					inserted the header field supports the associated features and capabilities.
				</t>
				<t>
					NOTE: It is not possible to, as a Feature-Caps header field value, convey 
					the address of the SIP entity that inserted the Feature-Caps header field. 
					If additional data about a supported feature needs to be conveyed, such 
					as the address of the SIP entity that indicated support of the feature, then 
					the feature definition needs to define a way to convey that information as 
					a value of the associated feature cap.
				</t>
				<t>	
					The feature cap specification MUST specify for which SIP methods
					and message types, and the associated semantics, the feature cap is 
					applicable. See Section 4 for more information. No semantics is defined for 
					feature caps present in SIP methods and message types not covered 
					by the associated feature cap specification.
				</t>
				<t>
					Within a given Feature-Caps header field, feature caps are listed in a 
					non-priority order, and for a given header field any order of listed SIP feature 
					caps have the same meaning. For example, "foo;bar" and "bar;foo" have the same 
					meaning (i.e. that the SIP entity that inserted the feature caps supports the 
					features and capabilities associated with the "foo" and "bar" feature caps.
				</t>
			</section>	

			<section title="User Agent and Proxy Behavior" anchor="sec.fchf.ua" toc="default">
				<section title="General" anchor="sec.fchf.ua.gen" toc="default">			
					<t>
						If the URI in a Contact header field of a request or response represents 
						a SIP entity, the entity MUST NOT indicate supported features and capabilities 
						using a Feature-Caps header field within that request or response.
					</t>
					<t>
						When a SIP entity receives a SIP request, or response, that contains one or more 
						Feature-Caps header fields, the feature caps in the header field inform 
						the entity about the features and capabilities supported by the entities that inserted the 
						header fields. Procedures how features and capabilities are invoked are outside the scope 
						of this specification, and MUST be described by individual feature cap 
						specifications.
					</t>
					<t>
						When a SIP entity adds a Feature-Caps header field to a SIP message, it MUST place
						the header field before any existing Feature-Caps header field in the message to
						be forwarded, so that the added header field becomes the top-most one.
						Then, when another SIP entity receives a SIP request or the response, the SIP 
						feature caps in the top-most Feature-Caps header field will represent the
						supported features and capabilities "closest" to the entity.
					</t>				
				</section>
				<section title="B2BUA Behavior" anchor="sec.fchf.ua.b2bua" toc="default">			
					<t>
						The procedures in this Section applies to UAs that are part of
						B2BUAs that are referenced in the message by a Record-Route header
						field rather than by the URI of the Contact header field.
					</t>
					<t>
						When a UA sends a SIP request, if the UA wants to indicate support of 
						features and capabilities towards its downstream SIP entities, it inserts a Feature-Caps 
						header field to the request, containing one or more feature caps 
						associated with the supported features and capabilities, before it forwards the request.
					</t>
					<t>
						If the SIP request is triggered by another SIP request that the B2BUA 
						has received, the UA MAY forward received Feature-Caps header fields by 
						copying them to the outgoing SIP request, similar to a SIP proxy, before 
						it inserts its own Feature-Caps header field to the SIP request.				
					</t>
					<t>
						When a UA receives a SIP response, if the UA wants to indicate support 
						of features and capabilities towards its upstream SIP entities, it inserts a Feature-Caps 
						header field to the response, containing one or more feature caps 
						associated with the supported features and capabilities, before it forwards the response.
					</t>
					<t>
						If the SIP response is triggered by another SIP response that the B2BUA 
						has received, the UA MAY forward received Feature-Caps header field by 
						copying them to the outgoing SIP response, similar to a SIP proxy, before 
						it inserts its own Feature-Caps header field to the SIP response.				
					</t>
				</section>
			
				<section title="Registrar Behavior" anchor="sec-ua-reg" toc="default">			
					<t>
						If a SIP registrar wants to indicate support of features and capabilities towards its 
						upstream SIP entities, it inserts a Feature-Caps header field, containing 
						one or more feature caps associated with the supported features and capabilities, to 
						a REGISTER response.
					</t>
				</section>
				
				<section title="Proxy behavior" anchor="sec-proxy" toc="default">			
					<t>
						When a SIP proxy receives a SIP request, if the proxy wants to indicate 
						support of features and capabilities towards its downstream SIP entities, it inserts a 
						Feature-Caps header field to the request, containing one or more SIP 
						feature caps associated with the supported features and capabilities, before it 
						forwards the request.
					</t>
					<t>
						When a proxy receives a SIP response, if the proxy wants to indicate 
						support of features and capabilities towards its upstream SIP entities, it inserts a 
						Feature-Caps header field to the response, containing one or more SIP 
						feature caps associated with the supported features and capabilities, before it forwards 
						the response.
					</t>
				</section>
			</section>

			<section title="SIP Message Type and Response Code Semantics" anchor="sec-fc" toc="default">
				<section title="General" anchor="sec-fc-sip-gen" toc="default">
					<t>
						This Section describes the general usage and semantics of the Feature-Caps
						header field for different SIP message types and response codes. 
						The usage and semantics of a specific feature cap MUST be described in
						the associated feature cap specification.
					</t>
					<t>
						NOTE: Future specifications can define usage and semantics of the Feature-Caps 
						header field for SIP methods, response codes and
						request types not specified in this specification.
					</t>
					<t>
						The Feature-Caps header field ABNF is defined in Section 6.3.1.
					</t>
				</section>
				<section title="SIP Dialog" anchor="sec-fc-sip-dia" toc="default">				
					<t>
						The Feature-Caps header field can be used within an initial SIP request for a dialog, 
						within a target refresh SIP request, and within any 18x or 2xx response associated 
						with such requests.
					</t>
					<t>
						If a feature cap is inserted in a Feature-Caps header field of an initial request
						for a dialog, or within a response of such request, it indicates to the receivers of
						the request (or response) that the feature associated with the feature cap is supported 
						for the duration of the dialog, until a target refresh request is sent for the dialog, or 
						the dialog is terminated.
					</t>
					<t>
						Unless a feature cap is inserted in a Feature-Caps header field or a target
						refresh request, or within a response of such request, it indicates to the receivers of
						the request (or response) that the feature is no long supported for the dialog.	
					</t>
					<t>
						For a given dialog a SIP entity MUST insert the same feature caps in all 18x and 
						2xx responses associated with a given transaction.
					</t>
				</section>
				<section title="SIP Registration (REGISTER)" anchor="sec-fc-sip-reg" toc="default">				
					<t>
						The Feature-Caps header field can be used within a SIP REGISTER request, and within 
						the 200 (OK) response associated with such request.
					</t>
					<t>
						If a feature cap is conveyed in a Feature-Caps header field of a REGISTER request, or
						within an associated response, it indicates to the receivers of the message that the
						feature associated with the feature cap is supported for the registration, until the 
						registration of the contact that was explicitly conveyed in the REGISTER request expires, 
						or until the registered contact is explicitly refreshed and the refresh REGISTER request 
						does not contain the feature cap associated with the feature.				
					</t>
					<t>
						NOTE: While a REGISTER response can contain contacts that have been registered as part
						of other registration transactions, support of any indicated feature only applies to the
						contact(s) that were explicitly conveyed in the associated REGISTER request.
					</t>
					<t>
						This specification does not define any semantics for usage of the Feature-Caps header field
						in pure registration binding fetching messages (see Section 10.2.3 of RFC 3261), where the 
						REGISTER request does not contain a Contact header field. Unless such semantics is defined
						in a future extension, fetching messages will not have any impact on previously indicated 
						support of features and capabilities, and SIP entities MUST NOT insert a Feature-Caps header 
						field to such messages.					
					</t>
					<t>
						If SIP Outbound <xref target="RFC5626" pageno="false" format="default"/> is used, the rules
						above apply. However, supported features and capabilities only apply for the registration 
						flow on which support has been explicitly indicated.						
					</t>
				</section>
				<section title="SIP Stand-Alone Transactions" anchor="sec-fc-sip-sa" toc="default">
					<t>
						The Feature-Caps header field can be used within a standalone SIP request, 
						and within any 18x or 2xx response associated with such request.
					</t>
					<t>
						If a feature cap is inserted in a Feature-Caps header field of a standalone
						request, or within a response of such request, it indicates to the receivers of
						the request (or response) that the feature associated with the feature cap
						is supported for the duration of the standalone transaction.
					</t>
				</section>
			</section>		
		</section>

		<section title="Syntax" anchor="sec.syn" toc="default">
			<section title="General" anchor="sec.syn.gen" toc="default">
				<t>
					This Section defines the ABNF for Feature-Caps, and for the Feature-Cap
					header field.
				</t>
			</section>
			
			<section title="Syntax: feature cap" anchor="sec.syn.fc" toc="default">
				<section title="General" anchor="sec.syn.fc.gen" toc="default">
					<t>
						In a feature cap name (ABNF: fcap-name), dots can be used to implement a SIP feature 
						cap tree hierarchy (e.g. tree.feature.subfeature). The description of usage of such 
						tree hierarchy must be described when registered.
					</t>
				</section>
				<section title="ABNF" toc="default" anchor="sec.syn.fc.abnf">
					<t>
						The ABNF for the feature cap:
					</t>
					<figure title="ABNF" anchor="fig.syn.fc.abnf" suppress-title="false" align="left" alt="" width="" height="">
						<artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height=""><![CDATA[ 

feature-cap       =  "+" fcap-name [EQUAL LDQUOT (fcap-value-list
                         / fcap-string-value ) RDQUOT]
fcap-name         =  ftag-name
fcap-value-list   =  tag-value-list
fcap-string-value =  string-value
;; ftag-name, tag-value-list, string-value defined in RFC 3840
			            
NOTE: In comparison with media feature tags, the "+" sign in front
of the feature cap name is mandatory.
						
						]]></artwork>
					</figure>
				</section>
			</section>
						
			<section title="Syntax: Feature-Caps header field" anchor="sec.syn.fchf" toc="default">
				<section title="ABNF" toc="default" anchor="sec.syn.fchf.abnf">
					<t>
						The ABNF for the Feature-Caps header fields is:
					</t>
					<figure title="ABNF" anchor="fig-abnf" suppress-title="false" align="left" alt="" width="" height="">
					<artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height=""><![CDATA[ 

Feature-Caps = "Feature-Caps" HCOLON fc-value
                *(COMMA fc-value)   
fc-value     = "*" *(SEMI feature-cap) 
 
					]]></artwork>
					</figure>
					<t>
						NOTE: A "*" value means that no information regarding which SIP entity, or 
						domain, that indicate support of features and capabilities is 
						provided.
					</t>
				</section>
			</section>
    	</section>
		
		<section title="IANA Considerations" anchor="sec.iana" toc="default">
			<section title="Registration of the Feature-Caps header field" anchor="sec.iana.fchf" toc="default">
				<t>
					This specification registers a new SIP header field, Feature-Caps, according 
					to the process of RFC 3261 <xref target="RFC3261" pageno="false" format="default"/>.
				</t>
				<t>
					The following is the registration for the Feature-Caps header field:
				</t>
				<t>
					RFC Number: RFC XXX
				</t>
				<t>
					Header Field Name: Feature-Caps
				</t>
			</section>
			<section title="Global Feature Cap Registration Tree" anchor="sec.iana.tree.g" toc="default">
				<t>
					This specification creates a new feature cap tree.
					The name of the tree is "Global Feature Cap Registration Tree", 
					and its leading facet is "g.". It is used for the registration of feature caps.
				</t>
				<t>
					The addition of entries into this registry occurs through the Expert Review
					policies, as defined in RFC 5226 <xref target="RFC5226" pageno="false" 
					format="default"/>. A designated area expert will review the proposed SIP 
					feature cap, and consult with members of related mailing lists. The information 
					required in the registration is defined in Section 4.3 of RFC XXX. 
				</t>	
				<t>	
					Note that all feature caps registered in the SIP tree will have names 
					with a leading facet "g.". No leading "+" is used in the registrations in 
					any of the media feature tag trees.
				</t>
			</section>
			<section title="Feature Cap Registration Tree" anchor="sec.iana.tree.sip" toc="default">
				<t>
					This specification creates a new feature cap tree, per the guidelines in RFC 5226
					<xref target="RFC5226" pageno="false" format="default"/>. The name of the tree is 
					"Feature Cap Registration Tree", and its leading facet is "sip.". It is used for 
					the registration of feature caps.
				</t>
				<t>
					The addition of entries into this registry occurs through the IETF Consensus, as 
					defined in RFC 5226. This requires the publication of an RFC that contains 
					the registration. The information required in the registration is defined in 
					Section 4.3 of RFC XXX. 
				</t>
				<t>
					Note that all feature caps registered in the SIP tree will have names 
					with a leading facet "sip.". No leading "+" is used in the registrations in 
					any of the media feature tag trees.
				</t>
			</section>			
    	</section>

    	<section title="Security Considerations" anchor="sec.seccon" toc="default">
			<t>				
				Feature caps can provide sensitive information about a SIP entity.
				RFC 3840 cautions against providing sensitive information to
				another party. Once this information is given out, any use may be 
				made of it.
			</t>
		</section>
		
		<section title="Acknowledgements" anchor="sec.acks" toc="default">
			<t></t>
		</section>
		
		<section title="Change Log">
			<t>[RFC EDITOR NOTE: Please remove this Section when publishing]</t>
			<t>
				Changes from draft-ietf-sipcore-proxy-feature-02
				<list style="symbols">
					<t>
						Changes based on WGLC comments from Shida Schubert.
					</t>										
					<t>
						- Document title changed
					</t>										
					<t>
						- Terminology alignment
					</t>										
					<t>
						- Note text clarifications
					</t>
					<t>
						Changes based on WGLC comments from Lili Yang.
					</t>								
				</list>
			</t>

			<t>
				Changes from draft-ietf-sipcore-proxy-feature-01
				<list style="symbols">
					<t>
						Changes based on comments from Paul Kyzivat.
					</t>										
					<t>
						IANA Considerations text added.
					</t>										
				</list>
			</t>
			<t>
				Changes from draft-holmberg-sipcore-proxy-feature-04/draft-ietf-sipcore-proxy-feature-00
				<list style="symbols">
					<t>
						Media feature tags replaced with feature caps, based on
						SIPCORE consensus at IETF#83 (Paris).
					</t>										
					<t>
						Editorial corrections and modifications.
					</t>
				</list>
			</t>	
			<t>
				Changes from draft-holmberg-sipcore-proxy-feature-03
				<list style="symbols">
					<t>
						Hadriel Kaplan added as co-author.
					</t>
					<t>
						Terminology change: instead of talking of proxies, talk about
						entities which are not represented by the URI in a Contact header
						field 
						(http://www.ietf.org/mail-archive/web/sipcore/current/msg04449.html).
					</t>
					<t>
						Clarification regarding the usage of the header field in 18x/2xx responses
						(http://www.ietf.org/mail-archive/web/sipcore/current/msg04449.html).
					</t>
					<t>
						Specifying that feature support can also be indicated in target
						refresh requests 
						(http://www.ietf.org/mail-archive/web/sipcore/current/msg04454.html).
					</t>
					<t>
						Feature Cap specification registration information added.
					</t>
				</list>
			</t>	
			<t>
				Changes from draft-holmberg-sipcore-proxy-feature-02
				<list style="symbols">
					<t>
						Definition, and usage of, a new header field, instead of
						Path, Record-Route, Route and Service-Route.
					</t>					
				</list>
			</t>	
			<t>
				Changes from draft-holmberg-sipcore-proxy-feature-01
				<list style="symbols">
					<t>Requirement section added</t>					
					<t>Use-cases and examples updated based on work in 3GPP</t>					
				</list>
			</t>	
			<t>
				Changes from draft-holmberg-sipcore-proxy-feature-00
				<list style="symbols">
					<t>Additional use-cases added</t>
					<t>Direction section added</t>
				</list>
			</t>		
		</section>		
	</middle>
	
	<back>
		<references title="Normative References">
			<?rfc include="reference.RFC.2119"?>			
			<?rfc include="reference.RFC.3261"?>						
		</references>
		<references title="Informative References">	  					
			<?rfc include="reference.RFC.2506"?>			
			<?rfc include="reference.RFC.3840"?>			
			<?rfc include="reference.RFC.5226"?>
			<?rfc include="reference.RFC.5626"?>			
			<?rfc include="reference.3GPP.23.237"?>
			<?rfc include="reference.3GPP.24.837"?>
		</references>
	</back>
</rfc>