<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc2578 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2578.xml">
<!ENTITY rfc2579 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2579.xml">
<!ENTITY rfc2580 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2580.xml">
<!ENTITY rfc2863 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2863.xml">
<!ENTITY rfc3410 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3410.xml">
<!ENTITY rfc3411 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3411.xml">
<!ENTITY rfc3414 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3414.xml">
<!ENTITY rfc3418 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3418.xml">
<!ENTITY rfc3826 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3826.xml">
<!ENTITY rfc4001 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4001.xml">
<!ENTITY rfc5591 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5591.xml">
<!ENTITY rfc5592 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5592.xml">
<!ENTITY rfc6353 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6353.xml">
<!ENTITY rfc6621 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6621.xml">
]>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc strict="no"?>
<?rfc rfcedstyle="yes"?>
<rfc category="exp" docName="draft-ietf-manet-smf-mib-08" ipr="trust200902">
  <front>
    <title abbrev="The SMF-MIB">Definition of Managed Objects for the Manet
    Simplified Multicast Framework Relay Set Process</title>

    <author fullname="Robert G. Cole" initials="R.G." surname="Cole">
      <organization>US Army CERDEC</organization>

      <address>
        <postal>
          <street>6010 Frankford Road</street>
          <city>Aberdeen Proving Ground</city>
          <region>Maryland</region>
          <code>21005</code>
          <country>USA</country>
        </postal>
        <phone>+1 443 395 8744</phone>
        <email>robert.g.cole@us.army.mil</email>
        <!--<uri>http://www.cs.jhu.edu/~rgcole/</uri>-->
      </address>
    </author>

    <author fullname="Joseph Macker" initials="J.M." surname="Macker">
      <organization>Naval Research Laboratory</organization>

      <address>
        <postal>
          <street></street>
          <city>Washington</city>
          <region>D.C.</region>
          <code>20375</code>
          <country>USA</country>
        </postal>
        <email>macker@itd.nrl.navy.mil</email>
      </address>
    </author>

    <author fullname="Brian Adamson" initials="B.A." surname="Adamson">
      <organization>Naval Research Laboratory</organization>
      <address>
        <postal>
          <street></street>
          <city>Washington</city>
          <region>D.C.</region>
          <code>20375</code>
          <country>USA</country>
        </postal>
        <email>adamson@itd.nrl.navy.mil</email>
      </address>
    </author>

    <date />

    <area>Routing</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>Network Management</keyword>

    <keyword>Management Information Base</keyword>

    <keyword>MIB</keyword>

    <keyword>SMIv2</keyword>

    <keyword>Routing</keyword>

    <keyword>MANET</keyword>

    <keyword>Multicast</keyword>

    <abstract>
      <t>This memo defines a portion of the Management Information Base (MIB)
      for use with network management protocols in the Internet community. In
      particular, it describes objects for configuring aspects of the
      Simplified Multicast Forwarding (SMF) process for Mobile Ad-Hoc 
      Networks (MANETs). The SMF-MIB also reports
      state information, performance metrics, and notifications. In addition
      to configuration, the additional state and performance information is
      useful to operators troubleshooting multicast forwarding
      problems.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>This memo defines a portion of the Management Information Base (MIB)
      for use with network management protocols in the Internet community. In
      particular, it describes objects for configuring aspects of a process
      implementing Simplified Multicast Forwarding (SMF) 
      <xref target="RFC6621"></xref> for Mobile Ad-Hoc Networks (MANETs). 
      SMF provides multicast Duplicate
      Packet Detection (DPD) and supports algorithms for constructing an
      estimate of a MANET Minimum Connected Dominating
      Set (MCDS) for efficient multicast forwarding. The SMF-MIB also reports
      state information, performance information, and notifications. In addition
      to configuration, this additional state and performance information is
      useful to operators troubleshooting multicast forwarding
      problems.</t>
    </section>

    <section title="The Internet-Standard Management Framework">
      <t>For a detailed overview of the documents that describe the current
      Internet-Standard Management Framework, please refer to section 7 of RFC
      3410 <xref target="RFC3410"></xref>.</t>

      <t>Managed objects are accessed via a virtual information store, termed
      the Management Information Base or MIB. MIB objects are generally
      accessed through the Simple Network Management Protocol (SNMP). Objects
      in the MIB are defined using the mechanisms defined in the Structure of
      Management Information (SMI). This memo specifies a MIB module that is
      compliant to the SMIv2, which is described in STD 58, 
      RFC 2578 <xref target="RFC2578"></xref>, STD 58, 
      RFC 2579 <xref target="RFC2579"></xref> and STD 58, 
      RFC 2580 <xref target="RFC2580"></xref>.</t>
    </section>

    <section title="Conventions">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
         "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
         document are to be interpreted as described in 
         RFC 2119 <xref target="RFC2119"></xref>.</t>
    </section>

    <section title="Overview">
      <t>SMF provides methods for implementing 
      Duplicate Packet Detection (DPD)-based multicast forwarding
      with the optional use of Connected Dominating Set (CDS)-based relay sets. 
      The CDS provides a complete connected coverage of the nodes comprising 
      the MANET.  The Minimum CDS (MCDS) is the smallest
      set of MANET nodes (comprising a connected cluster) which cover all the
      nodes in the cluster with their transmissions. As the density of the
      MANET nodes increase, the fraction of nodes required in an MCDS
      decreases. Using the MCDS as a multicast forwarding set then becomes an
      efficient multicast mechanism for MANETs.</t>

      <t>Various algorithms for the construction of estimates of the MCDS
      exist.  The Simplified Multicast Framework 
      <xref target="RFC6621"></xref> describes some of these. It further
      defines various operational modes for a node which is participating in
      the collective creation of the MCDS estimates. These modes depend upon
      the set of related MANET routing and discovery protocols and mechanisms
      in operation in the specific MANET node.</t>

      <t>A SMF router's MIB contains SMF process configuration parameters
      (e.g. specific CDS algorithm), state information (e.g., current
      membership in the CDS), performance counters (e.g., packet counters),
      and notifications.</t>

      <section title="SMF Management Model">
        <t>This section describes the management model for the SMF node
        process.</t>

        <t>Figure 1 (reproduced from Figure 4 of 
        <xref target="RFC6621"></xref>) shows the relationship between the SMF
        Relay Set selection algorithm and the related algorithms, processes
        and protocols running in the MANET nodes. The Relay Set Selection
        Algorithm (RSSA) can rely upon topology information gotten from the
        MANET Neighborhood Discovery Protocol (NHDP), from the specific MANET
        routing protocol running on the node, or from Layer 2 information
        passed up to the higher layer protocol processes.</t>

      <figure>
         <preamble />
            <artwork><![CDATA[
    ______________                ____________ 
   |              |              |            |
   | Neighborhood |              | Relay Set  |
   |  Discovery   |------------->| Selection  |
   |              |   neighbor   |            |
   |______________|     info     |____________|
          \                               /
           \                             /
    neighbor\                           / forwarding
      info*  \      _____________      /    status
              \    |             |    / 
               `-->| Forwarding  |<--'
                   |   Process   |
 ----------------->|_____________|----------------->
  incoming packet,                   forwarded packets
  interface id*, and
  previous hop*

           Figure 1: SMF Router Architecture
           ]]></artwork>
         <postamble />
      </figure>

      </section>

      <section title="Terms">
        <t>The following definitions apply throughout this document:</t>

        <t><list style="symbols">
          <t>Configuration Objects - switches, tables, objects which are
          initialized to default settings or set through the management
          interfaces such as defined by this MIB.</t>

          <t>Tunable Configuration Objects - objects whose values affect
          timing or attempt bounds on the SMF Relay Set (RS) process.</t>

          <t>State Objects - automatically generated values which define the
          current operating state of the SMF RS process in the router.</t>

          <t>Performance Objects - automatically generated values which help
          an administrator or automated tool to assess the performance of the
          CDS multicast process on the router and the overall multicast
          performance within the MANET routing domain.</t>
        </list></t>
      </section>
    </section>

    <section title="Structure of the MIB Module">
      <t>This section presents the structure of the SMF-MIB module. The
      objects are arranged into the following groups:</t>

      <t><list style="symbols">
        <t>smfMIBNotifications - defines the notifications associated with the
        SMF process.</t>

        <t>smfMIBObjects - defines the objects forming the basis for the
        SMF-MIB. These objects are divided up by function into the following
        groups:
        <list style="symbols">
          <t>Capabilities Group - This group contains the SMF objects that
          the device uses to advertise its local capabilities with respect
          to, e.g., the supported RSSAs.</t>

          <t>Configuration Group - This group contains the SMF objects that
          configure specific options that determine the overall operation of
          the SMF process and the resulting multicast performance.</t>

          <t>State Group - Contains information describing the current state
          of the SMF process such as the Neighbor Table.</t>

          <t>Performance Group - Contains objects which help to characterize
          the performance of the SMF process, typically
          counters for statistical computations.</t>
        </list></t>

        <t>smfMIBConformance - defines two, i.e., minimal and full, conformance
        implementations for the SMF-MIB.</t>
      </list></t>

      <section title="Textual Conventions">
        <!--Generic and Common Textual Conventions 
        can be found summarized at 
        http://www.ops.ietf.org/mib-common-tcs.html-->

        <t>The textual conventions defined within the SMF-MIB 
           are:</t>
        <t><list style="symbols">
            <t>The SmfStatus is defined within the SMF-MIB.
               This contains the current operational status of the
               SMF process on an interface.</t>
            <t>The SmfOpModeID represents an index that identifies
                a specific SMF operational mode.</t>
            <t>The SmfRssaID represents an index that identifies, through
               reference, a specific RSSA available for 
               operation on the device.</t>
        </list></t>
      </section>

      <section title="The Capabilities Group">
        <t>The SMF device supports a set of capabilities. The list of
           capabilities which the device can advertise are:</t>
           <t><list style="symbols">
               <t>Operational Mode - topology information from NHDP, CDS-aware
                  unicast routing or Cross-layer from Layer 2.</t>

               <t>SMF RSSA - the specific RSSA operational on the device.  Note that
                  configuration, state and performance objects related to a specific
                  RSSA must be defined within a separate MIB.</t>
           </list></t>
      </section>

      <section title="The Configuration Group">
        <t>The SMF device is configured with a set of controls. 
           Some of the prominent
           configuration controls for the SMF device are:</t>

        <t><list style="symbols">
          <t>Operational Mode - determines where topology information 
             is derived from, e.g., NHDP, CDS-aware
             unicast routing or Cross-layer from Layer 2.</t>

          <t>SMF RSSA - the specific RSSA operational on the device.</t>

          <t>Duplicate Packet detection for IPv4 - Identification-based or
             Hash-based DPD.</t>

          <t>Duplicate Packet detection for IPv6 - Identification-based or
             Hash-based DPD.</t>

          <t>SMF Type Message TLV - if NHDP mode is selected, then the
             SMF Type Message TLV MAY be included in the NHDP exchanges.</t>

          <t>SMF Address Block TLV - if NHDP mode is selected, then
             the SMF Address Block TLV SHOULD be included in the NHDP exchanges.</t>
        </list></t>
      </section>

      <section title="The State Group">
        <t>The State sub-tree reports current state information, e.g.,</t>

        <t><list style="symbols">
          <t>Node RSSA State - identifies whether the node is currently 
             in or out of the Relay Set.</t>

          <t>Neighbors Table - a table containing current one-hop neighbors and their
             operational RSSA.</t>
        </list></t>
      </section>

      <section title="The Performance Group">
        <t>The Performance sub-tree reports primarily counters that relate to
           SMF RSSA performance. The SMF performance counters consists of per
           node and per interface objects:</t> 
        
        <t><list style="symbols">
            <t>Total multicast packets received.</t>

            <t>Total multicast packets forwarded.</t>

            <t>Total duplicate multicast packets detected.</t>

            <t>Per interface statistics table with the following entries:
            <list style="symbols">
              <t>Multicast packets received.</t>

              <t>Multicast packets forwarded.</t>

              <t>Duplicate multicast packets detected.</t>
            </list></t>
        </list></t>
      </section>


      <section title="The Notifications Group">
        <t>The Notifications Sub-tree contains the list of notifications
           supported within the SMF-MIB and their intended purpose and utility.
        </t>
      </section>


      <section title="Tables and Indexing">
        <t>The SMF-MIB module contains a number of tables which record
           data related to:
        </t>
        <t><list style='symbols'>  
           <t>configuration and operation of packet forwarding on the local router,</t> 
           <t>configuration and operation of local MANET interfaces on the router, and</t>  
           <t>configuration and operation of various RSSA algorithms for
              packet forwarding.</t>  
        </list></t>

        <t>The SMF-MIB module's tables are indexed via the following constructs:
        </t>
        <t><list style='symbols'>  
           <t>smfOpModeCapabilitiesID - the index identifying the
              SMF modes.</t> 
           <t>smfRssaCapabilitiesID - the index identifying the
              RSSAs supported by this specific device.</t> 
           <t>smfConfiguredAddrForwardingAddrType and
              smfConfiguredAddrForwardingFirstAddr - indexes to configured multicast addresses
              which are forwarded by the SMF process.</t> 
           <t>smfIfIndex - the IfIndex of the interface on the local router on which
              SMF is configured.</t> 
           <t>smfDiscoveredAddrForwardingAddrType and
              smfDiscoveredAddrForwardingFirstAddr - indexes to discovered
              multicast addresses which are forwarded by the SMF process.</t> 
           <t>smfNeighborIpAddrType, smfNeighborIpAddr, and
              smfNeighborPrefixLen - the interface index set of specific
              one-hop neighbor nodes to this local router.</t> 
        </list></t>

        <t>These tables and their associated indexing are:
        </t>
        <t><list style='symbols'>
           <t>smfOpModeCapabilitiesTable - identifies the resident
              set of SMF Operational Modes on this router.
              This table has 'INDEX { smfOpModeCapabilitiesID }.</t>
           <t>smfRssaCapabilitiesTable - contains reference to the
              specific set of RSSAs currently supported on this device.
              This table has 'INDEX { smfRssaCapabilitiesID }'.</t>
           <t>smfConfiguredAddrForwardingTable - contains information on
              multicast addresses which are to be forwarded by the
              SMF process on this device.
              This table has 'INDEX { smfConfiguredAddrForwardingAddrType, 
              smfConfiguredAddrForwardingFirstAddr, 
              smfConfiguredAddrForwardingLastAddr }'.</t>
           <t>smfInterfaceTable - describes the SMF interfaces on this
              device that are participating in the SMF packet forwarding
              process.
              This table has 'INDEX { smfIfIndex }'.</t>
           <t>smfDiscoveredAddrForwardingTable - contains discovered
              address for SMF packet forwarding.
              This table has 'INDEX { smfDiscoveredAddrForwardingAddrType, 
              smfDiscoveredAddrForwardingFirstAddr }'.</t>
           <t>smfNeighborTable - describes the current neighbor nodes,
              their addresses and the SMF RSSA and the interface on which
              they can be reached.
              This table has 'INDEX { smfNeighborIpAddrType,
              smfNeighborIpAddr, smfNeighborPrefixLen }'.</t>
           <t>smfIpv4InterfaceTable - contains the IPv4 related SMF statistics
              per each SMF interface on this device.
              This table has 'INDEX { smfIfIndex }'.</t>
           <t>smfIpv6InterfaceTable - contains the IPv6 related SMF statistics
              per each SMF interface on this device.
              This table has 'INDEX { smfIfIndex }'.</t>
         </list></t>
      </section>


    </section>

    <section title="Relationship to Other MIB Modules">

      <section title="Relationship to the SNMPv2-MIB">
        <t>The 'system' group in the SNMPv2-MIB <xref target="RFC3418"></xref>
           is defined as being mandatory for all systems, and the objects apply
           to the entity as a whole. The 'system' group provides identification
           of the management entity and certain other system-wide data. The
           SMF-MIB does not duplicate those objects.</t>
      </section>

      <section title="MIB modules required for IMPORTS">
        <t>The textual conventions imported for use in the SMF-MIB are as follows.
           The MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE, Counter32,
           Unsigned32, Integer32 and mib-2 textual conventions are imported from RFC 2578 
           <xref target="RFC2578" />.
           The TEXTUAL-CONVENTION, RowStatus and TruthValue textual conventions 
           are imported from RFC 2579 
           <xref target="RFC2579" />.
           The MODULE-COMPLIANCE, OBJECT-GROUP and NOTIFICATION-GROUP 
           textual conventions are imported from RFC 2580 
           <xref target="RFC2580" />.
           The InterfaceIndexOrZero textual convention is imported from RFC 2863 
           <xref target="RFC2863" />.
           The SnmpAdminString textual convention is imported from RFC 3411 
           <xref target="RFC3411" />.
           The InetAddress, InetAddressType and InetAddressPrefixLength 
           textual conventions are imported from RFC 4001 
           <xref target="RFC4001" />.</t>
      </section>

      <section title="Relationship to the Future RSSA-MIBs">
        <t>In a sense, the SMF-MIB is a general front-end to a set of, yet to be
        developed, RSSA-specific MIBs.  These RSSA-specific MIBs will define the objects
        for the configuration, state, performance and notification
        required for the operation of these specific RSSAs.  The SMF-MIB Capabilities
        Group allows the remote management station the ability to query the
        router to discover the set of supported RSSAs.</t>
      </section>

    </section>


    <!-- Definitions section -->
    <section title="Definitions">
      <t></t>

      <figure>
        <artwork><![CDATA[

   SMF-MIB DEFINITIONS ::= BEGIN

   IMPORTS

      MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,
      Counter32, Integer32, TimeTicks, experimental
         FROM SNMPv2-SMI                          -- [RFC2578]

      TEXTUAL-CONVENTION, RowStatus, TruthValue,
      DisplayString
         FROM SNMPv2-TC                           -- [RFC2579]

      MODULE-COMPLIANCE, OBJECT-GROUP, 
      NOTIFICATION-GROUP
         FROM SNMPv2-CONF                         -- [RFC2580]

      InterfaceIndexOrZero
         FROM IF-MIB                              -- [RFC2863]

      SnmpAdminString
         FROM SNMP-FRAMEWORK-MIB                  -- [RFC3411]

      InetAddress, InetAddressType,
      InetAddressPrefixLength
         FROM INET-ADDRESS-MIB                    -- [RFC4001]
      ;

   smfMIB MODULE-IDENTITY
      LAST-UPDATED "201309011300Z"  -- September 01, 2013
      ORGANIZATION "IETF MANET Working Group"
      CONTACT-INFO
         "WG E-Mail: manet@ietf.org

          WG Chairs: sratliff@cisco.com
                     jmacker@nrl.navy.mil


          Editors:   Robert G. Cole
                     US Army CERDEC
                     Space and Terrestrial Communications
                     6010 Frankford Road
                     Aberdeen Proving Ground, MD 21005
                     USA
                     +1 443 395-8744
                     robert.g.cole@us.army.mil

                     Joseph Macker
                     Naval Research Laboratory
                     Washington, D.C. 20375
                     USA
                     macker@itd.nrl.navy.mil

                     Brian Adamson
                     Naval Research Laboratory
                     Washington, D.C. 20375
                     USA
                     adamson@itd.nrl.navy.mil"

      DESCRIPTION
         "This MIB module contains managed object definitions for
          the Manet SMF RSSA process defined in: 

          [SMF] Macker, J.(ed.), 
          Simplified Multicast Forwarding, RFC 6621,
          May 2012. 

          Copyright (C) The IETF Trust (2012). This version
          of this MIB module is part of RFC xxxx; see the RFC
          itself for full legal notices."

        -- Revision History
        REVISION    "201309011300Z"   -- September 01, 2013
        DESCRIPTION
           "The first version of this MIB module,
            published as RFC xxxx.
           "
        -- RFC-Editor assigns xxxx
        ::= { experimental xxxx }   -- to be assigned by IANA


   --
   -- TEXTUAL CONVENTIONs
   --

   SmfStatus ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION
          "An indication of the operability of a SMF
          function or feature.  For example, the status
          of an interface: 'enabled' indicates that
          this interface is performing SMF functions,
          and 'disabled' indicates that it is not.
          Similarly for the status of the device:
          'enabled' indicates that the device has 
          enabled the SMF functions on the device and
          'disabled' means that the device and all interfaces
          have disabled all SMF functions."
       SYNTAX  INTEGER { 
                        enabled (1), 
                        disabled (2) 
               }

   SmfOpModeID ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION
           "An index that identifies through reference to a specific
            SMF operations mode.  There are basically three styles
            of SMF operation with reduced relay sets: 

              Independent operation 'independent(1)' - 
                  SMF performs its own relay
                  set selection using information from an associated 
                  MANET NHDP process.

              CDS-aware unicast routing operation 'routing(2)'- 
                  a coexistent unicast routing 
                  protocol provides dynamic relay 
                  set state based upon its own control plane 
                  CDS or neighborhood discovery information.

              Cross-layer operation 'crossLayer(3)' -  
                  SMF operates using neighborhood 
                  status and triggers from a 
                  cross-layer information base for dynamic relay 
                  set selection and maintenance."
       REFERENCE
          "RFC 6621 - Simplified Multicast Forwarding
           (SMF), Macker, J., May 2012."
       SYNTAX  INTEGER { 
                        independent (1), 
                        routing (2),
                        crossLayer (3)
                        -- future (4-255) 
               }


   SmfRssaID ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION
           "An index that identifies through reference to a specific
            RSSA algorithms.  Several are currently defined
            in the appendix of RFC 6621."
       REFERENCE
          "RFC 6621 - Simplified Multicast Forwarding 
           (SMF), Macker, J., May 2012."
       SYNTAX      INTEGER {
                           cF(1),
                           sMPR(2),
                           eCDS(3),
                           mprCDS(4)
                           -- future(5-127)
                           -- noStdAction(128-239)
                           -- experimental(240-255)
                   }


   --
   -- Top-Level Object Identifier Assignments
   --

   smfMIBNotifications OBJECT IDENTIFIER ::= { smfMIB 0 }
   smfMIBObjects       OBJECT IDENTIFIER ::= { smfMIB 1 }
   smfMIBConformance   OBJECT IDENTIFIER ::= { smfMIB 2 }



   --
   -- smfMIBObjects Assignments:
   --      smfCapabilitiesGroup  - 1
   --      smfConfigurationGroup - 2
   --      smfStateGroup         - 3
   --      smfPerformanceGroup   - 4
   --

   --
   -- smfCapabilitiesGroup
   --
   --    This group contains the SMF objects that identify specific
   --    capabilities within this device related to SMF functions.
   --

   smfCapabilitiesGroup  OBJECT IDENTIFIER ::= { smfMIBObjects 1 }

  --
   -- SMF Operational Mode Capabilities Table
   --

   smfOpModeCapabilitiesTable OBJECT-TYPE
       SYNTAX      SEQUENCE OF SmfOpModeCapabilitiesEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "The smfOpModeCapabilitiesTable identifies the
            resident set of SMF Operational Modes on this
            router."
       REFERENCE
          "RFC 6621 - Simplified Multicast Forwarding 
           (SMF), Macker, J., May 2012."
       ::= { smfCapabilitiesGroup 1 }

   smfOpModeCapabilitiesEntry OBJECT-TYPE
       SYNTAX      SmfOpModeCapabilitiesEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "Information about a particular operational
            mode.
           "
       INDEX   { smfOpModeCapabilitiesID }
       ::= { smfOpModeCapabilitiesTable 1 }

   SmfOpModeCapabilitiesEntry ::= SEQUENCE {
         smfOpModeCapabilitiesID              SmfOpModeID,
         smfOpModeCapabilitiesName            SnmpAdminString,
         smfOpModeCapabilitiesReference       SnmpAdminString
   }

   smfOpModeCapabilitiesID     OBJECT-TYPE
       SYNTAX      SmfOpModeID
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "The index for this entry.  This object identifies
            the particular operational mode for this device."
       ::= { smfOpModeCapabilitiesEntry 1 }

   smfOpModeCapabilitiesName OBJECT-TYPE
       SYNTAX      SnmpAdminString
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
           "The textual name of this operational
            mode.  Current operational modes include:
               'independent', 
               'routing', and 
               'crossLayer' Mode.  
            Others may be defined
            in future revisions of [SMF]."
       ::= { smfOpModeCapabilitiesEntry 2 }

   smfOpModeCapabilitiesReference OBJECT-TYPE
       SYNTAX      SnmpAdminString
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
           "This object contains a reference to the document
            that defines this operational mode."
       ::= { smfOpModeCapabilitiesEntry 3 }


   --
   -- SMF RSSA Capabilities Table
   --

   smfRssaCapabilitiesTable OBJECT-TYPE
       SYNTAX      SEQUENCE OF SmfRssaCapabilitiesEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "The smfRssaCapabilitiesTable contains 
            reference to the specific set of RSSAs
            currently supported on this device.
           "
       REFERENCE
          "RFC 6621 - Simplified Multicast Forwarding 
           (SMF), Macker, J., May 2012."
       ::= { smfCapabilitiesGroup 2 }

   smfRssaCapabilitiesEntry OBJECT-TYPE
       SYNTAX      SmfRssaCapabilitiesEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "Information about a particular RSSA
            algorithm.

            By default, the agent should support at least the
            Classical Flooding 'cF' algorithm.  All compliant
            SMF forwarders must support Classical Flooding.
            Hence, at least one entry in this table must
            exist with the smfRssaCapabilitiesID indicating
            'cF'."
       INDEX   { smfRssaCapabilitiesID }
       ::= { smfRssaCapabilitiesTable 1 }

   SmfRssaCapabilitiesEntry ::= SEQUENCE {
         smfRssaCapabilitiesID              SmfRssaID,
         smfRssaCapabilitiesName            SnmpAdminString,
         smfRssaCapabilitiesReference       SnmpAdminString
   }

   smfRssaCapabilitiesID     OBJECT-TYPE
       SYNTAX      SmfRssaID
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "The index for this entry.  This object identifies
            the particular RSSA algorithm in this MIB 
            module.  Example RSSAs are found in the
            appendix of RFC 6621."
       REFERENCE
          "RFC 6621 - Simplified Multicast Forwarding
           (SMF), Macker, J., May 2012."
       ::= { smfRssaCapabilitiesEntry 1 }

   smfRssaCapabilitiesName OBJECT-TYPE
       SYNTAX      SnmpAdminString
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
           "The textual name of this RSSA algorithm.
            Currently defined names are:
                'cF',
                'sMPR',
                'eCDS',
                'mprCDS'.
           "
       ::= { smfRssaCapabilitiesEntry 2 }

   smfRssaCapabilitiesReference OBJECT-TYPE
       SYNTAX      SnmpAdminString
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
           "This object contains a published reference 
            to the document that defines this algorithm.
           "
       ::= { smfRssaCapabilitiesEntry 3 }




   --
   -- smfConfigurationGroup
   --
   --    This group contains the SMF objects that configure specific
   --    options that determine the overall performance and operation
   --    of the multicast forwarding process for the router device
   --    and its interfaces.
   --

   smfConfigurationGroup  OBJECT IDENTIFIER ::= { smfMIBObjects 2 }

   smfAdminStatus  OBJECT-TYPE
      SYNTAX      SmfStatus
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The configured status of the SMF process
          on this device.  'enabled(1)' means that
          SMF is configured to run on this device.
          'disabled(2)' mean that the SMF process
          is configured off.

          Prior to SNM functions being performed over
          specific interfaces, this object must first
          be 'enabled'.  If this object is 'disabled',
          then no SMF functions SHOULD be performed on 
          the device and all smfIfAdminStatus objects 
          SHOULD also be set to 'disabled'.  When
          this object is changed from 'enabled' to
          'disabled', then all smfIfAdminStatus objects
          SHOULD also be set to 'disabled'.

          The default value for this object SHOULD be
          'enabled'.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      DEFVAL { enabled }
   ::= { smfConfigurationGroup 1 }

   smfRouterIDAddrType  OBJECT-TYPE
      SYNTAX      InetAddressType { ipv4(1), ipv6(2) }
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The address type of the address used for
          SMF ID of this router as specified
          in the 'smfRouterID' next.

          Only the values ipv4(1) and ipv6(2)
          are supported.

          This can be set by the management station,
          the smfRouterID must be a routable address
          assigned to this router.  If the management
          station does not assign this value, then the
          router should choose the highest routable
          IP address assigned to this router.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      DEFVAL { ipv4 }
   ::= { smfConfigurationGroup 2 }

   smfRouterID  OBJECT-TYPE
      SYNTAX      InetAddress (SIZE(4|16))
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The IP address used as the SMF router ID.
          This can be set by the management station.
          If not explicitly set, then the device
          should select a routable IP address
          assigned to this router for use as
          the 'smfRouterID'.

          The smfRouterID is a logical identification 
          that MUST be consistent across interoperable
          SMF neighborhoods and it is RECOMMENDED to be 
          chosen as the numerically largest address 
          contained in a node's 'Neighbor Address List'
          as defined in NHDP.  A smfRouterID MUST be 
          unique within the scope of the operating 
          MANET network regardless of the method used 
          for selecting it.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
    ::= { smfConfigurationGroup 3 }

   smfConfiguredOpMode  OBJECT-TYPE
      SYNTAX      SmfOpModeID
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The SMF RSS node operational mode as defined
          in the TEXTUAL CONVENTION for `SmfOpModeID'
          and in this MIB module.

          The default value for this object is
          'independent(1)'.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
      DEFVAL { independent } 
   ::= { smfConfigurationGroup 4 }


   smfConfiguredRssa  OBJECT-TYPE
      SYNTAX      SmfRssaID
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The SMF RSS currently operational algorithm
          as defined in the TEXTUAL CONVENTION for
          `SmfRssaID' and in RFC 6621.

           The deflaut value for this object is
           'cF(1)', i.e., Classical Flooding.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
      DEFVAL { cF }
   ::= { smfConfigurationGroup 5 }

   smfRssaMember  OBJECT-TYPE
      SYNTAX      INTEGER {
                          potential(1),
                          always(2),
                          never(3)
                          }
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The RSSA downselects a set of forwarders for
          multicast forwarding.  Sometimes it is useful
          to force an agent to be included or excluded
          from the resulting RSS.  This object is a
          switch to allow for this behavior.

          The value 'potential(1)' allows the selected
          RSSA to determine if this agent is included
          or excluded from the RSS.

          The value 'always(1)' forces the selected
          RSSA include this agent in the RSS.

          The value 'never(3)' forces the selected
          RSSA to exclude this agent from the RSS.

          The default setting for this object is
          'potential(1)'.  Other settings could pose
          operational risks under certain conditions.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
      DEFVAL { potential }
   ::= { smfConfigurationGroup 6 }

   smfIpv4Dpd  OBJECT-TYPE
      SYNTAX      INTEGER {
                          hashBased(1),
                          identificationBased(2)
                          }
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The current method for IPv4 duplicate packet
          detection.

          The value 'hashBased(1)' indicates that the
          routers duplicate packet detection is based
          upon comparing a hash over the packet fields.
          This is the default setting for this object.

          The value 'identificationBased(2)'
          indicates that the duplicate packet
          detection relies upon header information
          in the multicast packets to identify 
          previously received packets.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
      DEFVAL { hashBased }
   ::= { smfConfigurationGroup 7 }

   smfIpv6Dpd  OBJECT-TYPE
      SYNTAX      INTEGER {
                          hashBased(1),
                          identificationBased(2)
                          }
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The current method for IPv6 duplicate packet
          detection.

          The values indicate the type of method used
          for duplicate packet detection as described 
          the previous description for the object
          `smfIpv4Dpd'.

          The default value for this object is
          'hashBased(1)'.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
      DEFVAL { hashBased }
   ::= { smfConfigurationGroup 8 }

   smfMaxPktLifetime  OBJECT-TYPE
      SYNTAX      Integer32 (0..65535)
      UNITS       "Seconds"
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The estimate of the network packet
          traversal time.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
      DEFVAL { 60 }
   ::= { smfConfigurationGroup 9 }

   smfDpdMaxMemorySize  OBJECT-TYPE
      SYNTAX      Integer32 (0..65535)
      UNITS       "Kilo-Bytes"
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The locally reserved memory for storage
          of cached DPD records for both IPv4 and
          IPv6 methods.

          The local SMF device should protect itself
          against the SNMP manager from requesting
          too large a memory value.  If this is the case,
          an error indication should be returned in response
          to the SNMP SET request.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
      DEFVAL { 1024 }
   ::= { smfConfigurationGroup 10 }

   smfDpdEntryMaxLifetime  OBJECT-TYPE
      SYNTAX      Integer32 (0..65525)
      UNITS       "Seconds"
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "The maximum lifetime of a cached DPD
          record in the local device storage.

          If the memory is running low prior to the 
          MaxLifetimes being exceeded, the local SMF 
          devices should purge the oldest records first.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
      DEFVAL { 600 }
   ::= { smfConfigurationGroup 11 }


   --
   -- Configuration of messages to be included in 
   -- NHDP message exchanges in support of SMF
   -- operations.
   --

   smfNhdpRssaMesgTLVIncluded  OBJECT-TYPE
      SYNTAX      TruthValue
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "Indicates whether the associated NHDP messages
          include the RSSA Message TLV, or not.  This
          is an optional SMF operational setting. 
          The value 'true(1)' indicates that this TLV is
          included; the value 'false(2)' indicates that it
          is not included.

          It is RECOMMENDED that the RSSA Message TLV
          be included in the NHDP messages.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
      DEFVAL { true }
   ::= { smfConfigurationGroup 12 }

   smfNhdpRssaAddrBlockTLVIncluded  OBJECT-TYPE
      SYNTAX      TruthValue
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
         "Indicates whether the associated NHDP messages
          include the RSSA Address Block TLV, or not.
          This is an optional SMF operational setting.
          The value 'true(1)' indicates that this TLV is
          included; the value 'false(2)' indicates that it
          is not included.

          The smfNhdpRssaAddrBlockTLVIncluded is optional 
          in all cases as it depends on the existence of 
          an address block which may not be present.  
          If this SMF device is configured with NHDP,
          then this object SHOULD be set to 'true(1)'.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
      DEFVAL { true }
   ::= { smfConfigurationGroup 13 }



   --
   -- Table identifying configured multicast addresses to be forwarded.
   --

   smfConfiguredAddrForwardingTable  OBJECT-TYPE
      SYNTAX     SEQUENCE OF SmfConfiguredAddrForwardingEntry
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
         "The (conceptual) table containing information on multicast
          addresses which are to be forwarded by the SMF process.

          Entries in this table are configured.  As well, addresses
          to be forwarded by the SMF device can be dynamically
          discovered by other means.  The corresponding state 
          table, smfDiscoveredAddrForwardingTable, contains
          these additional, dynamically discovered address for
          forwarding.

          Each row is associated with a range of multicast 
          addresses, and ranges for different rows must be disjoint.

          The objects in this table are persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfConfigurationGroup 15 }

   smfConfiguredAddrForwardingEntry OBJECT-TYPE
      SYNTAX     SmfConfiguredAddrForwardingEntry
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
         "An entry (conceptual row) containing the information on a
          particular multicast scope."
      INDEX { smfConfiguredAddrForwardingAddrType, 
              smfConfiguredAddrForwardingFirstAddr,
              smfConfiguredAddrForwardingLastAddr }
      ::= { smfConfiguredAddrForwardingTable 1 }

   SmfConfiguredAddrForwardingEntry ::= SEQUENCE {
      smfConfiguredAddrForwardingAddrType      InetAddressType,
      smfConfiguredAddrForwardingFirstAddr     InetAddress,
      smfConfiguredAddrForwardingLastAddr      InetAddress,
      smfConfiguredAddrForwardingStatus        RowStatus
   }

   smfConfiguredAddrForwardingAddrType OBJECT-TYPE
      SYNTAX     InetAddressType { ipv4(1), ipv6(2) }
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
         "The type of the addresses in the multicast forwarding
          range.  Legal values correspond to the subset of 
          address families for which multicast address allocation 
          is supported.

          Only the values ipv4(1) and
          ipv6(2) are supported.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
   ::= { smfConfiguredAddrForwardingEntry 1 }

   smfConfiguredAddrForwardingFirstAddr OBJECT-TYPE
      SYNTAX     InetAddress (SIZE(4|16))
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
         "The first address in the multicast scope range.  The type
          of this address is determined by the value of the
          smfConfiguredAddrForwardingAddrType object.

          The value for this object must be less than or equal
          to the value entered for the
          smfConfiguredAddrForwardingLastAddr.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
   ::= { smfConfiguredAddrForwardingEntry 2 }

   smfConfiguredAddrForwardingLastAddr OBJECT-TYPE
      SYNTAX     InetAddress (SIZE(4|16))
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
         "The last address in the multicast scope range.  
          The type of this address is determined by the 
          value of the smfConfiguredAddrForwardingAddrType 
          object.

          The value for this object must be greater than or
          equal to the value entered for the
          smfConfiguredAddrForwardingFirstAddr.

          This object is persistent and when written
          the entity SHOULD save the change to 
          non-volatile storage."
   ::= { smfConfiguredAddrForwardingEntry 3 }

   smfConfiguredAddrForwardingStatus OBJECT-TYPE
      SYNTAX     RowStatus
      MAX-ACCESS read-create
      STATUS     current
      DESCRIPTION
         "The status of this row, by which new entries may be
          created, or old entries deleted from this table."
   ::= { smfConfiguredAddrForwardingEntry 4 }



   --
   -- SMF Interfaces Configuration Table
   --

   smfInterfaceTable  OBJECT-TYPE
      SYNTAX      SEQUENCE OF SmfInterfaceEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
         "The SMF Interface Table describes the SMF
          interfaces that are participating in the 
          SMF packet forwarding process. The ifIndex is 
          from the interfaces group defined in the 
          Interfaces Group MIB (RFC 2863). As such,
          this table 'sparse augments' the ifTable
          specifically when SMF is to be configured to
          operate over this interface.

          A conceptual row in this table exists if and only
          if either a manager has explicitly created the row
          or there is an interface on the managed device
          that supports and runs SMF.

          The manager can create a row by setting
          rowStatus to 'createAndGo' or 'createAndWait'.
          Row objects having associated DEFVAL clauses are
          automatically defined by the agent with these
          values during row creation, unless the manager
          explicitly defines these object values during the
          row creation.

          If the corresponding entry with ifIndex value
          is deleted from the Interface Table, then the entry
          in this table is automatically deleted and
          SMF is disabled on this interface,
          and all configuration and state information
          related to this interface is to be removed
          from memory.

          If the value of the smfAdminStatus object is changed
          from 'enabled' to 'disabled', then all rows in this
          table are to be deleted and all 
          configuration and state information
          related to this interface is to be removed
          from memory."
      REFERENCE
         "RFC 2863 - The Interfaces Group MIB, McCloghrie,
          K., and F. Kastenholtz, June 2000."
   ::= { smfConfigurationGroup 16 }

   smfInterfaceEntry OBJECT-TYPE
      SYNTAX      SmfInterfaceEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
         "The SMF interface entry describes one SMF
          interface as indexed by its ifIndex.

          The objects in this table are persistent and when
          written the device SHOULD save the change to
          non-volatile storage.  For further information
          on the storage behavior for these objects, refer
          to the description for the smfIfRowStatus
          object."
      INDEX { smfIfIndex }
   ::= { smfInterfaceTable 1 }

   SmfInterfaceEntry ::=
      SEQUENCE {
         smfIfIndex        InterfaceIndexOrZero, 
         smfIfName         DisplayString,
         smfIfAdminStatus  SmfStatus,
         smfIfRowStatus    RowStatus
         }

   smfIfIndex  OBJECT-TYPE
      SYNTAX      InterfaceIndexOrZero
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
         "The ifIndex for this SMF interface. This value 
          MUST correspond to an ifIndex referring
          to a valid entry in The Interfaces Table."
      REFERENCE
         "RFC 2863 - The Interfaces Group MIB, McCloghrie,
          K., and F. Kastenholtz, June 2000."
      ::= { smfInterfaceEntry 1 }

   smfIfName  OBJECT-TYPE
      SYNTAX      DisplayString
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "The textual name of the interface.  The value of this
         object should be the name of the interface as assigned by
         the local device and should be suitable for use in commands
         entered at the device's `console'.  This might be a text
         name, such as `le0' or a simple port number, such as `1',
         depending on the interface naming syntax of the device.

         If there is no local name, or this object is otherwise
         not applicable, then this object contains 
         a zero-length string."
   ::= { smfInterfaceEntry 2 }

   smfIfAdminStatus OBJECT-TYPE
      SYNTAX      SmfStatus
      MAX-ACCESS  read-create
      STATUS      current
      DESCRIPTION
         "The SMF interface's administrative status.
         The value 'enabled' denotes that the interface
         is running the SMF forwarding process.
         The value 'disabled' denotes that the interface is
         currently external to the SMF forwarding process.

         The default value for this object is 'enabled(1)'.

         This object SHOULD be persistent and when
         written the device SHOULD save the change to
         non-volatile storage."
      DEFVAL { enabled } 
      ::= { smfInterfaceEntry 3 }

   smfIfRowStatus  OBJECT-TYPE
      SYNTAX      RowStatus
      MAX-ACCESS  read-create
      STATUS      current
      DESCRIPTION
         "This object permits management of the table
          by facilitating actions such as row creation,
          construction, and destruction. The value of
          this object has no effect on whether other
          objects in this conceptual row can be 
          modified.

          An entry may not exist in the active(1) state unless all
          objects in the entry have a defined appropriate value.  For
          objects with DEFVAL clauses, the management station
          does not need to specify the value of this object in order
          for the row to transit to the active(1) state; the default
          value for this object is used.  For objects that do not
          have DEFVAL clauses, then the network manager MUST
          specify the value of this object prior to this row
          transitioning to the active(1) state.

          When this object transitions to active(1), all objects
          in this row SHOULD be written to non-volatile (stable)
          storage.  Read-create objects in this row MAY be modified.
          When an object in a row with smfIfRowStatus of active(1)
          is changed, then the updated value MUST be reflected in SMF
          and this new object value MUST be written to non-volatile
          storage.

          If this object is not equal to active(1), all associated
          entries in the smfIpv4InterfaceperfTable and the 
          smfIpv6InterfacePerfTable MUST be deleted."
   ::= { smfInterfaceEntry 4 }


   --
   -- smfStateGroup
   --
   --    Contains information describing the current state of the SMF
   --    process such as the current inclusion in the RS or not.
   --

   smfStateGroup  OBJECT IDENTIFIER ::= { smfMIBObjects 3 }

   smfNodeRsStatusIncluded  OBJECT-TYPE
      SYNTAX      TruthValue
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "The current status of the SMF node in the context of
          the MANETs relay set. A value of 'true(1)' indicates
          that the node is currently part of the MANET Relay
          Set. A value of 'false(2)' indicates that the node
          is currently not part of the MANET Relay Set."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfStateGroup 1 }

   smfDpdMemoryOverflow  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Overruns"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "The number of times that the memory for caching
          records for DPD overran and records had to be flushed.
          The number of records to be flushed upon a buffer
          overflow is an implementation specific decision."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfStateGroup 2 }



   --
   -- Dynamically Discovered Multicast Addr Table
   --

   smfDiscoveredAddrForwardingTable  OBJECT-TYPE
      SYNTAX     SEQUENCE OF SmfDiscoveredAddrForwardingEntry
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
         "This state table, smfDiscoveredAddrForwardingTable,
          contains additional, dynamically discovered addresses
          for forwarding.

          Each row is associated with a range of 
          multicast addresses, and ranges for different rows 
          must be disjoint."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfStateGroup 3 }

   smfDiscoveredAddrForwardingEntry OBJECT-TYPE
      SYNTAX     SmfDiscoveredAddrForwardingEntry
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
         "An entry (conceptual row) containing the information on a
          particular multicast scope."
      INDEX { smfDiscoveredAddrForwardingAddrType, 
              smfDiscoveredAddrForwardingFirstAddr,
              smfDiscoveredAddrForwardingLastAddr }
      ::= { smfDiscoveredAddrForwardingTable 1 }

   SmfDiscoveredAddrForwardingEntry ::= SEQUENCE {
      smfDiscoveredAddrForwardingAddrType   InetAddressType,
      smfDiscoveredAddrForwardingFirstAddr  InetAddress,
      smfDiscoveredAddrForwardingLastAddr   InetAddress,
      smfDiscoveredAddrForwardingSource     SnmpAdminString
   }

   smfDiscoveredAddrForwardingAddrType OBJECT-TYPE
      SYNTAX     InetAddressType { ipv4(1), ipv6(2) }
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
         "The type of the addresses in the multicast forwarding
          range.  Legal values correspond to the subset of 
          address families for which multicast address allocation 
          is supported.

          Only the values ipv4(1) and
          ipv6(2) are supported."
   ::= { smfDiscoveredAddrForwardingEntry 1 }

   smfDiscoveredAddrForwardingFirstAddr OBJECT-TYPE
      SYNTAX     InetAddress (SIZE(4|16))
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
         "The first address in the multicast scope range.  The type
          of this address is determined by the value of the
          smfConfiguredAddrForwardingAddrType object.

          The value for this object must be less than or
          equal to the value entered for the
          smfDiscoveredAddrForwardingLastAddr."
   ::= { smfDiscoveredAddrForwardingEntry 2 }

   smfDiscoveredAddrForwardingLastAddr OBJECT-TYPE
      SYNTAX     InetAddress (SIZE(4|16))
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
         "The last address in the multicast scope range.  
          The type of this address is determined by the 
          value of the smfConfiguredAddrForwardingAddrType 
          object.

          The value for this object must be greater than or
          equal to the value entered for the
          smfDiscoveredAddrForwardingFirstAddr."
   ::= { smfDiscoveredAddrForwardingEntry 3 }


   smfDiscoveredAddrForwardingSource OBJECT-TYPE
      SYNTAX     SnmpAdminString
      MAX-ACCESS read-only
      STATUS     current
      DESCRIPTION
         "The textual description of the method by which
          this multicast address range was discovered."
   ::= { smfDiscoveredAddrForwardingEntry 4 }


   --
   -- SMF Neighbor Table
   --

   smfNeighborTable  OBJECT-TYPE
      SYNTAX       SEQUENCE OF SmfNeighborEntry
      MAX-ACCESS   not-accessible
      STATUS       current
      DESCRIPTION
         "The SMF NeighborTable describes the
          current one-hop neighbor nodes, their address
          and SMF RSSA and the interface on which
          they can be reached."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012. 
          Section 7: SMF Neighborhood Discovery 
          Requirements."
   ::= { smfStateGroup 4 }

   smfNeighborEntry  OBJECT-TYPE
      SYNTAX       SmfNeighborEntry
      MAX-ACCESS   not-accessible
      STATUS       current
      DESCRIPTION
         "The SMF Neighbor Table contains the
          set of one-hop neighbors, the interface
          they are reachable on and the SMF RSSA
          they are currently running."
      INDEX { smfNeighborIpAddrType,
              smfNeighborIpAddr,
              smfNeighborPrefixLen }
   ::= { smfNeighborTable 1 }

   SmfNeighborEntry ::=
      SEQUENCE {
         smfNeighborIpAddrType        InetAddressType,
         smfNeighborIpAddr            InetAddress,
         smfNeighborPrefixLen         InetAddressPrefixLength,
         smfNeighborRSSA              SmfRssaID,
         smfNeighborNextHopInterface  InterfaceIndexOrZero
         }

   smfNeighborIpAddrType  OBJECT-TYPE
      SYNTAX      InetAddressType { ipv4(1), ipv6(2) }
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
         "The one-hop neighbor IP address type.

          Only the values 'ipv4(1)' and
          'ipv6(2)' are supported."
   ::= { smfNeighborEntry 1 }

   smfNeighborIpAddr  OBJECT-TYPE
      SYNTAX      InetAddress (SIZE(4|16))
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
         "The one-hop neighbor Inet IPv4 or IPv6 
         address.

         Only IPv4 and IPv6 addresses 
         are supported."
   ::= { smfNeighborEntry 2 }

   smfNeighborPrefixLen  OBJECT-TYPE
      SYNTAX      InetAddressPrefixLength
      UNITS       "bits"
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
         "The prefix length. This is a decimal value that
          indicates the number of contiguous, higher-order
          bits of the address that make up the network
          portion of the address."
   ::= { smfNeighborEntry 3 }

   smfNeighborRSSA  OBJECT-TYPE
      SYNTAX       SmfRssaID
      MAX-ACCESS   read-only
      STATUS       current
      DESCRIPTION
         "The current RSSA running on the neighbor.
          The list is identical to that described
          above for the smfRssa object."
   ::= { smfNeighborEntry 4 }

   smfNeighborNextHopInterface OBJECT-TYPE
      SYNTAX       InterfaceIndexOrZero
      MAX-ACCESS   read-only
      STATUS       current
      DESCRIPTION
         "The interface ifIndex over which the
          neighbor is reachable in one-hop."
   ::= { smfNeighborEntry 5 }




   --
   -- SMF Performance Group
   --
   --    Contains objects which help to characterize the
   --    performance of the SMF RSSA process, such as statistics
   --    counters. There are two types of SMF RSSA statistics:
   --    global counters and per interface counters.
   --

   smfPerformanceGroup  OBJECT IDENTIFIER ::= { smfMIBObjects 4 }

   smfGlobalPerfGroup  OBJECT IDENTIFIER ::= { smfPerformanceGroup 1 }

   --
   -- IPv4 packet counters
   --

   smfIpv4MultiPktsRecvTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of
          multicast IPv4 packets received by the
          device and delivered to the SMF process."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 1 }

   smfIpv4MultiPktsForwardedTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of
          multicast IPv4 packets forwarded by the
          device."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 2 }

   smfIpv4DuplMultiPktsDetectedTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of duplicate
          multicast IPv4 packets detected by the
          device."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 3 }

   smfIpv4DroppedMultiPktsTTLExceededTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of dropped
          multicast IPv4 packets by the
          device due to TTL exceeded."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 4 }

   smfIpv4TTLLargerThanPreviousTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of IPv4 packets
          recieved which have a TTL larger than that
          of a previously received identical packet."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 5 }

   --
   -- IPv6 packet counters
   --

   smfIpv6MultiPktsRecvTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of
          multicast IPv6 packets received by the
          device and delivered to the SMF process."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 6 }

   smfIpv6MultiPktsForwardedTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of
          multicast IPv6 packets forwarded by the
          device."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 7 }

   smfIpv6DuplMultiPktsDetectedTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of duplicate
          multicast IPv6 packets detected by the
          device."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 8 }

   smfIpv6DroppedMultiPktsTTLExceededTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of dropped
          multicast IPv6 packets by the
          device due to TTL exceeded."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 9 }

   smfIpv6TTLLargerThanPreviousTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of IPv6 packets
          recieved which have a TTL larger than that
          of a previously recived identical packet."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 10 }

   smfIpv6HAVAssistsReqdTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of IPv6 packets
          received which required the HAV assist for DPD."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 11 }

   smfIpv6DpdHeaderInsertionsTotal  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of IPv6 packets
          recieved which the device inserted the
          DPD header option."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfGlobalPerfGroup 12 }


   --
   -- Per SMF Interface Performance Table
   -- 

   smfInterfacePerfGroup OBJECT IDENTIFIER ::= { smfPerformanceGroup 2 }

   smfIpv4InterfacePerfTable OBJECT-TYPE
      SYNTAX       SEQUENCE OF SmfIpv4InterfacePerfEntry
      MAX-ACCESS   not-accessible
      STATUS       current
      DESCRIPTION
         "The SMF Interface Performance Table
          describes the SMF counters per
          interface."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfInterfacePerfGroup 1 }

   smfIpv4InterfacePerfEntry OBJECT-TYPE
      SYNTAX       SmfIpv4InterfacePerfEntry
      MAX-ACCESS   not-accessible
      STATUS       current
      DESCRIPTION
         "The SMF Interface Performance entry
          describes the statistics for a particular
          node interface."
      INDEX { smfIfIndex }
   ::= { smfIpv4InterfacePerfTable 1 }

   SmfIpv4InterfacePerfEntry ::=
      SEQUENCE {
         smfIpv4MultiPktsRecvPerIf               Counter32,
         smfIpv4MultiPktsForwardedPerIf          Counter32,
         smfIpv4DuplMultiPktsDetectedPerIf       Counter32,
         smfIpv4DroppedMultiPktsTTLExceededPerIf Counter32,
         smfIpv4TTLLargerThanPreviousPerIf       Counter32
         }

   smfIpv4MultiPktsRecvPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the number of
          multicast IP packets received by the
          SMF process on this device on 
          this interface."
   ::= { smfIpv4InterfacePerfEntry 1 }

   smfIpv4MultiPktsForwardedPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the number of
          multicast IP packets forwarded by the
          SMF process on this device 
          on this interface."
   ::= { smfIpv4InterfacePerfEntry 2 }

   smfIpv4DuplMultiPktsDetectedPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the number of duplicate
          multicast IP packets detected by the
          SMF process on this device 
          on this interface."
   ::= { smfIpv4InterfacePerfEntry 3 }

   smfIpv4DroppedMultiPktsTTLExceededPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of dropped
          multicast IPv4 packets by the SMF process
          on this device on this interface
          due to TTL exceeded."
   ::= { smfIpv4InterfacePerfEntry 4 }

   smfIpv4TTLLargerThanPreviousPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of IPv4 packets
          received by the SMF process on this device
          on this interface which have a TTL larger than
          that of a previously recived identical packet."
   ::= { smfIpv4InterfacePerfEntry 5 }


   smfIpv6InterfacePerfTable OBJECT-TYPE
      SYNTAX       SEQUENCE OF SmfIpv6InterfacePerfEntry
      MAX-ACCESS   not-accessible
      STATUS       current
      DESCRIPTION
         "The SMF Interface Performance Table
          describes the SMF counters per
          interface."
      REFERENCE
         "RFC 6621 - Simplified Multicast Forwarding 
          (SMF), Macker, J., May 2012."
   ::= { smfInterfacePerfGroup 2 }

   smfIpv6InterfacePerfEntry OBJECT-TYPE
      SYNTAX       SmfIpv6InterfacePerfEntry
      MAX-ACCESS   not-accessible
      STATUS       current
      DESCRIPTION
         "The SMF Interface Performance entry
          describes the counters for a particular
          node interface."
      INDEX { smfIfIndex }
   ::= { smfIpv6InterfacePerfTable 1 }

   SmfIpv6InterfacePerfEntry ::=
      SEQUENCE {
         smfIpv6MultiPktsRecvPerIf               Counter32,
         smfIpv6MultiPktsForwardedPerIf          Counter32,
         smfIpv6DuplMultiPktsDetectedPerIf       Counter32,
         smfIpv6DroppedMultiPktsTTLExceededPerIf Counter32,
         smfIpv6TTLLargerThanPreviousPerIf       Counter32,
         smfIpv6HAVAssistsReqdPerIf              Counter32,
         smfIpv6DpdHeaderInsertionsPerIf         Counter32
         }

   smfIpv6MultiPktsRecvPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the number of
          multicast IP packets received by the
          SMF process on this device 
          on this interface."
   ::= { smfIpv6InterfacePerfEntry 1 }

   smfIpv6MultiPktsForwardedPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the number of
          multicast IP packets forwarded by the
          SMF process on this device 
          on this interface."
   ::= { smfIpv6InterfacePerfEntry 2 }

   smfIpv6DuplMultiPktsDetectedPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the number of duplicate
          multicast IP packets detected by the
          SMF process on this device 
          on this interface."
   ::= { smfIpv6InterfacePerfEntry 3 }

   smfIpv6DroppedMultiPktsTTLExceededPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the number of dropped
          multicast IP packets by the
          SMF process on this device 
          on this interface due to TTL
          exceeded."
   ::= { smfIpv6InterfacePerfEntry 4 }

   smfIpv6TTLLargerThanPreviousPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of IPv6 packets
          received which have a TTL larger than that
          of a previously received identical packet
          by the SMF process on this device on this
          interface."
   ::= { smfIpv6InterfacePerfEntry 5 }

   smfIpv6HAVAssistsReqdPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of IPv6 packets
          received by the SMF process on this device
          on this interface which required the 
          HAV assist for DPD."
   ::= { smfIpv6InterfacePerfEntry 6 }

   smfIpv6DpdHeaderInsertionsPerIf  OBJECT-TYPE
      SYNTAX      Counter32
      UNITS       "Packets"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "A counter of the total number of IPv6 packets
          received by the SMF process on this device
          on this interface which the device inserted the
          DPD header option."
   ::= { smfIpv6InterfacePerfEntry 7 }



   --
   -- Notifications
   --

smfMIBNotifObjects OBJECT IDENTIFIER ::= { smfMIBNotifications 0 }
smfMIBNotifControl OBJECT IDENTIFIER ::= { smfMIBNotifications 1 }


   -- smfMIBNotifObjects
   
   smfAdminStatusChange NOTIFICATION-TYPE
          OBJECTS { smfRouterIDAddrType, -- The originator of
                                         --   the notification.
                    smfRouterID,         -- The originator of
                                         --   the notification.
                    smfAdminStatus       -- The new status of the
                                         --   SMF process.
                  }
          STATUS       current
          DESCRIPTION
             "smfAdminStatusChange is a notification sent when a 
              the 'smfAdminStatus' object changes."
          ::= { smfMIBNotifObjects 1 }

   smfConfiguredOpModeChange NOTIFICATION-TYPE
          OBJECTS { smfRouterIDAddrType, -- The originator of
                                         --   the notification.
                    smfRouterID,         -- The originator of
                                         --   the notification.
                    smfConfiguredOpMode  -- The new Operations
                                         --   Mode of the SMF 
                                         --   process.
                  }
          STATUS       current
          DESCRIPTION
             "smfConfiguredOpModeChange is a notification 
              sent when a the 'smfConfiguredOpMode' object 
              changes."
          ::= { smfMIBNotifObjects 2 }

   smfConfiguredRssaChange NOTIFICATION-TYPE
          OBJECTS { smfRouterIDAddrType, -- The originator of
                                         --   the notification.
                    smfRouterID,         -- The originator of
                                         --   the notification.
                    smfConfiguredRssa    -- The new RSSA for
                                         --   the SMF process.
                  }
          STATUS       current
          DESCRIPTION
             "smfAdminStatusChange is a notification sent when a 
              the 'smfConfiguredRssa' object changes."
          ::= { smfMIBNotifObjects 3 }

   smfIfAdminStatusChange NOTIFICATION-TYPE
          OBJECTS { smfRouterIDAddrType, -- The originator of
                                         --   the notification.
                    smfRouterID,         -- The originator of
                                         --   the notification.
                    smfIfName,           -- The interface whose
                                         --   status has changed.
                    smfIfAdminStatus     -- The new status of the
                                         --   SMF interface.
                  }
          STATUS       current
          DESCRIPTION
             "smfIfAdminStatusChange is a notification sent when a 
              the 'smfIfAdminStatus' object changes."
          ::= { smfMIBNotifObjects 4 }

    smfDpdMemoryOverflowEvent NOTIFICATION-TYPE
          OBJECTS { smfRouterIDAddrType, -- The originator of
                                         --   the notification.
                    smfRouterID,         -- The originator of
                                         --   the notification.
                    smfDpdMemoryOverflow -- The counter of
                                         --   the overflows.
             }
          STATUS       current
          DESCRIPTION
             "smfDpdMemoryOverflowEvents is sent when the
              number of memory overflow events exceeds the
              the 'smfDpdMemoryOverflowThreshold' within the
              previous number of seconds defined by the
              'smfDpdMemoryOverflowWindow'."
          ::= { smfMIBNotifObjects 5 }



   -- smfMIBNotifControl
   smfDpdMemoryOverflowThreshold OBJECT-TYPE
          SYNTAX       Integer32 (0..255)
          UNITS        "Events"
          MAX-ACCESS   read-write
          STATUS       current
          DESCRIPTION
             "A threshold value for the
              `smfDpdmemoryOverflowEvents' object.  
              If the number of occurences exceeds
              this threshold within the previous 
              number of seconds
              'smfDpdMemoryOverflowWindow',
              then the `smfDpdMemoryOverflowEvent'
              notification is sent.

              The default value for this object is
              '1'."
          DEFVAL { 1 }
           ::= { smfMIBNotifControl 1 }

   smfDpdMemoryOverflowWindow OBJECT-TYPE
          SYNTAX       TimeTicks
          MAX-ACCESS   read-write
          STATUS       current
          DESCRIPTION
             "A time window value for the
              `smfDpdmemoryOverflowEvents' object.  
              If the number of occurences exceeds
              the `smfDpdMemoryOverflowThreshold'
              within the previous number of seconds
              'smfDpdMemoryOverflowWindow',
              then the `smfDpdMemoryOverflowEvent'
              notification is sent.

              The default value for this object is
              '1'."
          DEFVAL { 1 } 
           ::= { smfMIBNotifControl 2 }


   --
   -- Compliance Statements
   --

   smfCompliances  OBJECT IDENTIFIER ::= { smfMIBConformance 1 }
   smfMIBGroups    OBJECT IDENTIFIER ::= { smfMIBConformance 2 }

   smfBasicCompliance  MODULE-COMPLIANCE
      STATUS current
      DESCRIPTION "The basic implementation requirements for 
                   managed network entities that implement
                   the SMF RSSA process." 
      MODULE  -- this module
      MANDATORY-GROUPS { smfCapabObjectsGroup,
                         smfConfigObjectsGroup }
   ::= { smfCompliances 1 }  

   smfFullCompliance MODULE-COMPLIANCE
      STATUS current
      DESCRIPTION "The full implementation requirements for
                   managed network entities that implement
                   the SMF RSSA process."
      MODULE  -- this module
      MANDATORY-GROUPS { smfCapabObjectsGroup,
                         smfConfigObjectsGroup,
                         smfStateObjectsGroup,
                         smfPerfObjectsGroup,
                         smfNotifObjectsGroup,
                         smfNotificationsGroup
                       }
   ::= { smfCompliances 2 }  

   --
   -- Units of Conformance
   --

   smfCapabObjectsGroup OBJECT-GROUP
      OBJECTS {
              smfOpModeCapabilitiesName,
              smfOpModeCapabilitiesReference,

              smfRssaCapabilitiesName,
              smfRssaCapabilitiesReference
      }
      STATUS  current
      DESCRIPTION
         "Set of SMF configuration objects implemented
          in this module."
   ::= { smfMIBGroups 1 }

   smfConfigObjectsGroup OBJECT-GROUP
      OBJECTS {
              smfAdminStatus,
              smfRouterIDAddrType,
              smfRouterID,
              smfIfName,
              smfConfiguredOpMode,
              smfConfiguredRssa,
              smfRssaMember,
              smfIpv4Dpd, 
              smfIpv6Dpd,
              smfMaxPktLifetime,
              smfDpdMaxMemorySize,
              smfDpdEntryMaxLifetime,
              smfNhdpRssaMesgTLVIncluded,
              smfNhdpRssaAddrBlockTLVIncluded,

              smfConfiguredAddrForwardingStatus,

              smfIfAdminStatus,
              smfIfRowStatus
      }
      STATUS  current
      DESCRIPTION
         "Set of SMF configuration objects implemented
          in this module."
   ::= { smfMIBGroups 2 }

   smfStateObjectsGroup  OBJECT-GROUP
      OBJECTS {
              smfNodeRsStatusIncluded,
              smfDpdMemoryOverflow,

              smfDiscoveredAddrForwardingSource,

              smfNeighborRSSA,
              smfNeighborNextHopInterface
      }
      STATUS  current
      DESCRIPTION
         "Set of SMF state objects implemented
          in this module."
   ::= { smfMIBGroups 3 }

   smfPerfObjectsGroup  OBJECT-GROUP
      OBJECTS {
              smfIpv4MultiPktsRecvTotal,
              smfIpv4MultiPktsForwardedTotal,
              smfIpv4DuplMultiPktsDetectedTotal,     
              smfIpv4DroppedMultiPktsTTLExceededTotal,     
              smfIpv4TTLLargerThanPreviousTotal,

              smfIpv6MultiPktsRecvTotal,
              smfIpv6MultiPktsForwardedTotal,
              smfIpv6DuplMultiPktsDetectedTotal,     
              smfIpv6DroppedMultiPktsTTLExceededTotal,     
              smfIpv6TTLLargerThanPreviousTotal,
              smfIpv6HAVAssistsReqdTotal,
              smfIpv6DpdHeaderInsertionsTotal,

              smfIpv4MultiPktsRecvPerIf,
              smfIpv4MultiPktsForwardedPerIf,
              smfIpv4DuplMultiPktsDetectedPerIf,
              smfIpv4DroppedMultiPktsTTLExceededPerIf,
              smfIpv4TTLLargerThanPreviousPerIf,

              smfIpv6MultiPktsRecvPerIf,
              smfIpv6MultiPktsForwardedPerIf,
              smfIpv6DuplMultiPktsDetectedPerIf,
              smfIpv6DroppedMultiPktsTTLExceededPerIf,
              smfIpv6TTLLargerThanPreviousPerIf,
              smfIpv6HAVAssistsReqdPerIf,
              smfIpv6DpdHeaderInsertionsPerIf
      }
      STATUS  current
      DESCRIPTION
         "Set of SMF performance objects implemented
          in this module by total and per interface."
   ::= { smfMIBGroups 4 }

   smfNotifObjectsGroup  OBJECT-GROUP
      OBJECTS {
              smfDpdMemoryOverflowThreshold,
              smfDpdMemoryOverflowWindow
      }
      STATUS  current
      DESCRIPTION
         "Set of SMF notification control
          objects implemented in this module."
   ::= { smfMIBGroups 5 }

   smfNotificationsGroup  NOTIFICATION-GROUP
      NOTIFICATIONS {
              smfAdminStatusChange,
              smfConfiguredOpModeChange,
              smfConfiguredRssaChange,
              smfIfAdminStatusChange,
              smfDpdMemoryOverflowEvent
      }
      STATUS  current
      DESCRIPTION
         "Set of SMF notifications implemented
          in this module."
   ::= { smfMIBGroups 6 }



   END

	]]></artwork>
      </figure>
    </section>

    <section title="Security Considerations">
      <t>This section discusses security implications of the choices made in this
         SMF-MIB module.</t>

      <t>There are a number of management objects defined in this MIB module
      with a MAX-ACCESS clause of read-write and/or read-create. Such objects
      may be considered sensitive or vulnerable in some network environments.
      The support for SET operations in a non-secure environment without
      proper protection can have a negative effect on network operations.
      These are the tables and objects and their
      sensitivity/vulnerability:</t>

      <t><list style="symbols">
          <t>'smfAdminStatus' - this writable configuration object controls the 
             operational status of the SMF process.  If this setting is configured
             inconsistently across the MANET multicast domain, then delivery of
             multicast data may be inconsistent across the domain; some nodes may 
             not receive multicast data intended for them.</t>

          <t>'smfRouterIDAddrType' and 'smfRouterID' - these writable 
             configuration objects define the 
             ID of the SMF process.  These objects should be configured
             with a routable address defined on the local SMF device.
             The smfRouterID is a logical identification
             that MUST be configured as unique across inter-operating 
             SMF neighborhoods and it is RECOMMENDED to be 
             chosen as the numerically largest address 
             contained in a node's 'Neighbor Address List'
             as defined in NHDP.  A smfRouterID MUST be 
             unique within the scope of the operating 
             MANET network regardless of the method used 
             for selecting it.</t>

          <t>'smfConfiguredOpMode' - this writable configuration objects define the 
             operational mode of the SMF process.  The operational mode
             defines how the SMF process develops its local estimate of the CDS.</t>

          <t>'smfConfiguredRssa' - this writable configuration object sets the specific 
             Reduced Set Selection Algorithm (RSSA) for the SMF process.  If this
             object is set inconsistently across the MANET domain, multicast
             delivery of data will fail.</t>

          <t>'smfRssaMember' - this writable configuration object sets the 'interest'
             of the local SMF node in participating in the CDS.  Setting this
             object to 'never(3)' on a highly highly connected device could lead
             to frequent island formation.  Setting this object to 'always(2)'
             could support data ex-filtration from the MANET domain.</t>

          <t>'smfIpv4Dpd' - this writable configuration object sets the duplicate
             packet detection method for forwarding of IPv4 multicast packets.</t>

          <t>'smfIpv6Dpd' - this writable configuration object sets the duplicate
             packet detection method for forwarding of IPv6 multicast packets.</t>

          <t>'smfMaxPktLifetime' - this writable configuration object sets the 
             estimate of the network packet traversal time.  If set too small,
             this could lead to poor multicast data delivery ratios throughout
             the MANET domain.</t>

          <t>'smfDpdMaxMemorySize' - this writable configuration object sets the 
             memory storage size (in Kilo-Bytes) for the cached DPD records
             for the combined IPv4 and IPv6 methods.  If set too small this
             could lead to poor performance of the duplicate packet protection
             algorithms and lead to inefficient resource, e.g., link, utilization
             within the MANET domain.  The local SMF device should protect 
             itself against memory overruns in the event that too large a
             setting is requested.</t>

          <t>'smfDpdEntryMaxLifetime' - this writable configuration object sets the 
             maximum lifetime (in seconds) for the cached DPD records
             for the combined IPv4 and IPv6 methods.  If the memory 
             is running low prior to the MaxLifetimes being exceeded, the
             local SMF devices should purge the oldest records first.</t>

          <t>'smfNhdpRssaMesgTLVIncluded' - this writable configuration object 
             indicates whether the associated NHDP messages include the
             the RSSA Message TLV, or not.  It is highly RECOMMENDED that
             this object be set to 'true(1)'.</t>

          <t>'smfNhdpRssaAddrBlockTLVIncluded' - this writable configuration object 
             indicates whether the associated NHDP messages include the
             the RSSA Address Block TLV, or not.  
             The smfNhdpRssaAddrBlockTLVIncluded is optional 
             in all cases as it depends on the existence of 
             an address block which may not be present.  
             If this SMF device is configured with NHDP,
             then this object should be set to 'true(1)'.</t>

          <t>'smfConfiguredAddrForwardingTable' - the writable configuration objects
             in this table indicate which multicast IP address are to be 
             forwarded by this SMF node.  Misconfiguration of rows within
             this table can limit the ability of this SMF device to
             forward multicast data.</t> 

          <t>'smfInterfaceTable' - the writable configuration objects
             in this table indicate which SMF node interfaces are  
             participating in the SMF packet forwarding process.
             Misconfiguration of rows within
             this table can limit the ability of this SMF device to
             forward multicast data.</t> 
        </list></t>


      <t>Some of the readable objects in this MIB module (i.e., objects with a
      MAX-ACCESS other than not-accessible) may be considered sensitive or
      vulnerable in some network environments. It is thus important to control
      even GET and/or NOTIFY access to these objects and possibly to even
      encrypt the values of these objects when sending them over the network
      via SNMP. These are the tables and objects and their
      sensitivity/vulnerability: 
        <list style="symbols">
          <t>'smfNodeRsStatusIncluded' - this readable state object
             indicates that this SMF node is part of the CDS, or not.
             Being part of the CDS makes this node a distinguished device.
             It could be exploited for data ex-filtration, or denial of
             service attacks.</t> 

          <t>'smfDiscoveredAddrForwardingTable' - the readable state
             objects in this table indicate which, dynamically discovered,
             multicast IP address are to be forwarded by this SMF node.</t> 

          <t>'smfNeighborTable' - the readable state objects
             in this table indicate current neighbor nodes to
             this SMF node.  Exposing this information to an attacker
             could allow the attacker easier access to the larger
             MANET domain.</t> 
        </list></t>

      <t>The remainder of the objects in the SMF-MIB are performance counter objects.
         While these give an indication of the activity of the SMF process on this node,
         it is not expected that exposing these values pose a security risk
         to the MANET network.</t>

      <t>SNMP versions prior to SNMPv3 did not include adequate security. Even
         if the network itself is secure (for example by using IPSec), even then,
         there is no control as to who on the secure network is allowed to access
         and GET/SET (read/change/create/delete) the objects in this MIB
         module.</t>

      <t>Implementations MUST provide the security features described by the
         SNMPv3 framework (see <xref target="RFC3410"></xref> ), including full support for
         authentication and privacy via the User-based Security Model (USM)
         <xref target="RFC3414"></xref>  
         with the AES cipher algorithm <xref target="RFC3826"></xref>.  
         Implementations MAY also provide support for the Transport Security Model (TSM)
         <xref target="RFC5591"></xref> in combination with a secure transport such as 
         SSH <xref target="RFC5592"></xref> or 
         TLS/DTLS <xref target="RFC6353"></xref>.</t>

      <t>Further, deployment of SNMP versions prior to SNMPv3 is NOT
         RECOMMENDED. Instead, it is RECOMMENDED to deploy SNMPv3 and to enable
         cryptographic security. It is then a customer/operator responsibility to
         ensure that the SNMP entity giving access to an instance of this MIB
         module is properly configured to give access to the objects only to
         those principals (users) that have legitimate rights to indeed GET or
         SET (change/create/delete) them.</t>
    </section>


    <section title="Applicability Statement">
      <t>This document describes objects for configuring parameters of the
         Simplified Multicast Forwarding <xref target="RFC6621"/>
         process on a Mobile Ad-Hoc Network (MANET) router.  
         This MIB module, denoted SMF-MIB, 
         also reports state and performance information and notifications.
         This section provides some examples of how this MIB module can be used in
         MANET network deployments.
         A fuller discussion of MANET network management use cases and
         challenges will be provided elsewhere.
      </t>

      <t>SMF is designed to allow MANET routers to forward IPv4 and IPv6 packets over
         the MANET and cover the MANET nodes through the automatic discovery
         of efficient estimates of the Minimum Connected Dominating Set (MCDS)
         of nodes within the MANET.  
         The MCDS are estimated using the Relay Set Selection Algorithms (RSSAs)
         discussed within this document.
         In the following, three scenarios are listed where this MIB module is useful, i.e.,
      </t>

      <t><list style='symbols'>
            <t>For a Parking Lot Initial Configuration Situation - it is common for
               the vehicles comprising the
               MANET being forward deployed at a remote location, 
               e.g., the site of a natural disaster, 
               to be off-loaded in a parking lot where an initial configuration
               of the networking devices is performed.  
               The configuration is loaded into the
               devices from a fixed location Network Operation Center (NOC) 
               at the parking lot and the vehicles are stationary at the parking lot 
               while the configuration changes are made.
               Standards-based methods for configuration management from the co-located NOC
               are necessary for this deployment option.
               The set of interesting configuration objects for the SMF process are
               listed within this MIB module.
               </t>
            <t>For Mobile vehicles with Low Bandwidth Satellite Link to a Fixed NOC - Here
               the vehicles carrying the MANET routers carry multiple wireless interfaces, 
               one of which is a relatively low-bandwidth on-the-move satellite connection 
               which interconnects a fix NOC to the nodes of the MANET.
               Standards-based methods for monitoring and fault management from the fixed NOC
               are necessary for this deployment option. </t>
            <t>For Fixed NOC and Mobile Local Manager in Larger Vehicles - for larger
               vehicles, a hierarchical network management arrangement is useful.  
               Centralized network management is performed from a fixed NOC 
               while local management is performed locally from within the vehicles.
               Standards-based
               methods for configuration, monitoring and fault management
               are necessary for this deployment option. </t>
         </list>
      </t>

    </section>


    <section title="IANA Considerations">
       <t>The MIB module in this document uses the following IANA-assigned
          OBJECT IDENTIFIER value recorded in the SMI Numbers registry:</t>

      <figure>
        <artwork>
      Descriptor        OBJECT IDENTIFIER value
      ----------        -----------------------
      SMF-MIB          { experimental XXXX }
      IANA EDITOR NOTE: please assign XXXX, and remove this note.
        </artwork>
      </figure>
    </section>



    <!-- The Author's Addresses section will be generated 
         automatically by XML2RFC from the front information -->

    <section title="Contributors">
      <t>This MIB document uses the template authored by D. Harrington which
      is based on contributions from the MIB Doctors, especially Juergen
      Schoenwaelder, Dave Perkins, C.M.Heard and Randy Presuhn.</t>
    </section>

    <section title="Acknowledgements">
      <t>The authors would like to acknowledge the valuable comments from Sean Harnedy
         in the early phases of the development of this MIB-module.
         The authors would like to thank James Nguyen for his careful review
         and comments on this MIB-module and his work on the definitions of
         the follow on MIB-modules to configure specific RSSA algorithms
         related to SMF.  Further, the authors would like to acknowledge to
         work of James Nguyen, Brian Little, Ryan Morgan and Justin Dean
         on their software development of the SMF-MIB.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <!-- <t>[TODO] rfc2629, 2863, 3418, and 4181 are normative references that
      are required only to support this template, and which can be removed
      from your final document, if not used for other purposes.</t>-->

      <!--
      &rfc2629;
      &rfc4181;
-->

      &rfc2863;

      &rfc3411;

      &rfc3418;

      &rfc4001;

      <!--  <t>[TODO] rfc2119, 2578, 2579, and 2580 are required to support MIB
      module boilerplate text.</t> -->

      &rfc2119;

      &rfc2578;

      &rfc2579;

      &rfc2580;

      &rfc6621;

      <!--  <t>[TODO]: Add your own normative references.</t>-->
      <!--<reference anchor="SMF">
        <front>
          <title>Simplified Multicast Forwarding</title>
          <author initials="J." surname="Macker">
            <organization></organization>
          </author>
          <date month="March" day="06" year="2010" />
        </front>
        <seriesInfo name='Internet-Draft' value='draft-ietf-manet-smf-10' />
        <format type='TXT' target='http://www.ietf.org/internet-drafts/draft-ietf-manet-smf-10.txt' />
      </reference>
      -->
    </references>



    <references title="Informative References">
      <!-- <t>[TODO] RFC3410 is required to support the boilerplate text.</t>-->

      &rfc3410;

      &rfc3414;

      &rfc3826;

      &rfc5591;

      &rfc5592;

      &rfc6353;

      <!-- <t>[TODO] Add your own informative references</t>-->
    </references>


    <section title="">
       <figure>
          <preamble />

             <artwork><![CDATA[
***************************************************************
* Note to the RFC Editor (to be removed prior to publication) *
*                                                             *
* The reference to RFC xxxx within the DESCRIPTION clauses    *
* of the MIB module point to this draft and are to be         *
* assigned by the RFC Editor.                                 *
*                                                             *
***************************************************************
              ]]></artwork>
           <postamble></postamble>
        </figure>
     </section>

  </back>
</rfc>
