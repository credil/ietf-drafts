<?xml version="1.0" encoding="utf-8"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="bcp" docName="draft-saldana-tsvwg-tcmtf-03" ipr="trust200811" obsoletes="4170">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="TCMTF">Tunneling Compressed Multiplexed Traffic Flows (TCMTF)</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Jose Saldana" initials="J." surname="Saldana">
      <organization>University of Zaragoza</organization>
      <address>
        <postal>
          <street>Dpt. IEC Ada Byron Building</street>
          <!-- Reorder these if your country does things differently -->
          <city>Zaragoza</city>
          <region></region>
          <code>50018</code>
          <country>Spain</country>
        </postal>
        <phone>+34 976 762 698</phone>
        <email>jsaldana@unizar.es</email>
        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>
       
    <author fullname="Dan Wing" initials="D." surname="Wing">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>771 Alder Drive</street>
          <!-- Reorder these if your country does things differently -->
          <city>San Jose</city>
          <region>CA</region>
          <code>95035</code>
          <country>US</country>
        </postal>
        <phone>+44 7889 488 335</phone>
        <email>dwing@cisco.com</email>
        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>  

    <author fullname="Julian Fernandez Navajas" initials="J." surname="Fernandez Navajas">
      <organization>University of Zaragoza</organization>
      <address>
        <postal>
          <street>Dpt. IEC Ada Byron Building</street>
          <!-- Reorder these if your country does things differently -->
          <city>Zaragoza</city>
          <region></region>
          <code>50018</code>
          <country>Spain</country>
        </postal>
        <phone>+34 976 761 963</phone>
        <email>navajas@unizar.es</email>
        <!-- uri and facsimile elements may also be added -->
      </address>
    </author> 

	<author initials="Muthu A M" surname="Perumal" fullname="Muthu Arul Mozhi Perumal">
       <organization>Cisco Systems</organization>
       <address>
         <postal>
           <street>Cessna Business Park</street>
           <street>Sarjapur-Marathahalli Outer Ring Road</street>
           <city>Bangalore</city>
           <region>Karnataka</region>
           <code>560103</code>
           <country>India</country>
         </postal>
         <phone>+91 9449288768</phone>
	   <email>mperumal@cisco.com</email>
       </address>
    </author>

    <author fullname="Fernando Pascual Blanco" initials="F." surname="Pascual Blanco">
      <organization>Telefonica I+D</organization>
      <address>
        <postal>
          <street>Ramon de la Cruz 84</street>
          <!-- Reorder these if your country does things differently -->
          <city>Madrid</city>
          <region></region>
          <code>28006</code>
          <country>Spain</country>
        </postal>
        <phone>+34 913128779</phone>
        <email>fpb@tid.es</email>
        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>   

    <date month="July" year="2012" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>Transport</area>

    <workgroup>Transport Area Working Group</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>template</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document describes a method to improve the bandwidth utilization
	 of network paths that carry multiple streams in parallel between two
	 endpoints, as in voice trunking.  The method combines standard protocols that 
	 provide compression, multiplexing, and tunneling over a network path for the 
	 purpose of reducing the bandwidth used when multiple streams are carried
	 over that path.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>This document describes a way to combine existing protocols for compression, 
	 multiplexing, and tunneling to save bandwidth for some applications that generate 
	 small packets, such as real-time ones.</t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>

      <section title="Bandwidth efficiency of real-time flows">
        <t>In the last years we are witnessing the raise of new real-time services that 
	   use the Internet for the delivery of interactive multimedia applications. The 
	   most common of these services is VoIP, but many others have been developed, and 
	   are experiencing a significant growth: videoconferencing, telemedicine, video 
	   vigilance, online gaming, etc.</t>

	<t>The first design of the Internet did not include any mechanism capable of 
	   guaranteeing an upper bound for delivery delay, taking into account that the
	   first deployed services were e-mail, file transfer, etc., in which delay is not
	   critical. RTP <xref target="RTP"></xref> was first defined in
	   1996 in order to permit the delivery of real-time contents. Nowadays, although
	   there are a variety of protocols used for signaling real-time flows (SIP 
	   <xref target="SIP"></xref>, H.323, etc.), RTP has become the standard par 
	   excellence for the delivery of real-time content.</t>

	   <t>RTP was designed to work over UDP datagrams. This implies that an IPv4 packet 
	   carrying real-time information has to include 40 bytes of headers: 20 for IPv4
	   header, 8 for UDP, and 12 for RTP. This overhead is significant, taking into 
   	   account that many real-time services send very small payloads. It becomes even 	 
       more significant with IPv6 packets, as the basic IPv6 header is twice the size 
	   of the IPv4 header (<xref target="table_1"></xref>).</t>

        <texttable anchor="table_1" title="Efficiency of different voice codecs">
          <preamble></preamble>
          <ttcol align="center">IPv4</ttcol>
          <ttcol align="center">IPv6</ttcol>
          <c>IPv4+UDP+RTP: 40 bytes header</c>
          <c>IPv6+UDP+RTP: 60 bytes header</c>
          <c>G.711 at 20 ms packetization: 25% header overhead</c>
          <c>G.711 at 20 ms packetization: 37.5% header overhead</c>
          <c>G.729 at 20 ms packetization: 200% header overhead</c>
          <c>G.729 at 20 ms packetization: 300% header overhead</c>
          <postamble></postamble>
        </texttable>

	   <t>In order to mitigate this bad network efficiency, the multiplexing of a 
       number of payloads into a single packet can be considered as a solution. If 
	   we have only one flow, the number of samples included in a packet can be increased,
       but at the cost of adding new packetization delays. However, if a number of
	   flows share the same path between an origin and a destination, a multiplexer 
	   can build a bigger packet in which a number of payloads share a common header. 
       A demultiplexer is necessary at the end of the common path, so as to rebuild the 
	   packets as they were originally sent, making multiplexing a 
	   transparent process for the extremes of the flow.</t>

	   <t>The headers of the original packets can be compressed to save more bandwidth,
	   taking into account that there exist some header compressing standards 
	   (<xref target="cRTP"></xref>, <xref target="ECRTP"></xref>, <xref target="IPHC"></xref>,
	   <xref target="ROHC"></xref>). When different headers are compressed together, 
	   tunneling can be used to relieve intermediate routers from the decompression
	   and compression processing.
	   </t>
      </section>

      <section title="Real-time applications not using RTP">
		<t>But there are many real-time applications that do not use RTP. Some of them 
		send UDP packets, e.g. First Person Shooter (FPS) online games, for which latency
		is very critical. There is also another fact which has to be taken into account: 
		TCP is getting used for media delivery. For many reasons, such as avoiding 
		firewalls, the standard RTP/UDP/IP protocol stack is substituted in many cases
		by FLV/HTTP/TCP/IP (FLash Video <xref target="FLV"></xref>).</t>

		<t>There is also another kind of applications which have been reported as 
		real-time using TCP: MMORPGs (Massively Multiplayer Online Role Playing Games),
		which in some cases have millions of players, thousands of them sharing the same 
		virtual world. They use TCP packets to send the player commands to the server, 
		and also to send to the player's application the characteristics and situation 
		of other gamers' avatars. These games do not have the same interactivity of 
		FPSs, but the quickness and the movements of the player are important, and 
		can decide if they win or lose a fight.</t>
      </section>

      <section title="Scenarios of application">
		<t>Different scenarios of application can be considered for the tunneling, 
		compressing and multiplexing solution: for example, voice trunking between 
		gateways of different offices of an enterprise. Also, the traffic of the users 
		of an application in a town or a district, which can be multiplexed and sent to 
		the central server. Also Internet cafes are suitable of having many users of the 
		same application (e.g. a game) sharing the same access link.</t>

		<t>Another interesting scenario are satellite communication links that often manage
		 the bandwidth by limiting the transmission rate, measured in packets per second 
		 (pps), to and from the satellite. Applications like VoIP that generate a large 
		 number of small packets can easily fill the maximum number of pps slots, limiting 
		 the throughput across such links. As an example, a G.729a voice call generates 
		 50 pps at 20 ms packetization time. If the satellite transmission allows 1,500 pps, 
		 the number of simultaneous voice calls is limited to 30. This results in poor 
		 utilization of the satellite link's bandwidth as well as places a low bound on 
		 the number of voice calls that can utilize the link simultaneously. 
		 Multiplexing small packets into one packet for transmission would improve 
		 the efficiency. Satellite links would also find it useful to multiplex small 
		 TCP packets into one packet. This could be especially interesting for 
		 compressing TCP ACKs.</t>
		 
		<t>There is still another interesting use case: desktop or application sharing where 
		the traffic from the server to the client typically consists of the delta of screen 
		updates. Also, the standard for remote desktop sharing emerging for WebRTC in the 
		RTCWEB Working Group is: {something}/SCTP/UDP (Stream Control Transmission 
		Protocol <xref target="SCTP"></xref>). In 
		this scenario, SCTP/UDP could be used in other cases: chatting, file sharing and 
		applications related to WebRTC peers. There could be hundreds of clients at a site 
		talking to a server located at a datacenter over a WAN. Compressing, multiplexing and 
		tunneling this traffic could save WAN bandwidth and potentially improve latency.</t>
      </section>

      <section title="Objective of this standard">
		<t>In conclusion, a standard that multiplexes, compresses and sends packets 
		using a tunnel can be interesting for many enterprises: developers of VoIP 
		systems can include this option in their solutions; or game providers, who 
		can achieve bandwidth savings in their supporting infrastructures. Other fact 
		that has to be taken into account is that the technique not only saves bandwidth 
		but also reduces the number of packets per second, which sometimes can be a 
		bottleneck for a satellite link or even for a network router.</t>

		<t>If only one stream is tunneled and compressed, then little bandwidth savings 
		will be obtained. In contrast, multiplexing is helpful to amortize the overhead 
		of the tunnel header over many payloads.</t>

      </section>

      <section anchor="current" title="Current Standard">
        <t>The current standard <xref target="TCRTP"></xref> defines a way to reduce
        bandwidth and pps of RTP traffic, by combining three different standard
        protocols:</t>
        <t><list style="symbols">
          <t>Regarding compression, <xref target="ECRTP"></xref> is the selected option.</t>

          <t>Multiplexing is accomplished using PPP Multiplexing <xref target="PPP-MUX">
          </xref></t>

	  	  <t>Tunneling is accomplished by using L2TP (Layer 2 Tunneling Protocol 
	  	  <xref target="L2TPv3"></xref>).</t>
	  	  
        </list>The three layers are combined as shown in the figure:</t>

<figure align="center" anchor="tcrtp_stack">
        <preamble></preamble>

        <artwork align="center"><![CDATA[
RTP/UDP
   |
   |         ----------------------------
   |              
 ECRTP             compressing layer
   |                   
   |         ----------------------------
   |
 PPPMUX            multiplexing layer
   |
   |         ----------------------------
   |
 L2TP              tunneling layer
   |
   |         ----------------------------
   |
  IP
            ]]></artwork>

        <postamble></postamble>
      </figure>
      </section>

      <section anchor="proposal" title="Improved Standard Proposal">

		<t>In contrast to the current standard <xref target="TCRTP"></xref>, the 
		new proposal allows the compression of other protocols in addition to 
		RTP/UDP, since real-time services are also provided by bare UDP or TCP, as
		shown in the figure:</t>

<figure align="center" anchor="tcmtf_stack">
        <preamble></preamble>

        <artwork align="left"><![CDATA[
       TCP    UDP  RTP/UDP
        |      |      |
         \     |     /                    ------------------------------
           \   |   /
Nothing or ROHC or ECRTP or IPHC             header compressing layer
               |
               |                          ------------------------------
               |
   PPPMUX or other mux protocols                multiplexing layer
               |
              / \                         ------------------------------
             /   \
            /     \
   GRE or L2TP     \                              tunneling layer
          |        MPLS
          |                               ------------------------------
          IP
            ]]></artwork>

        <postamble></postamble>
      </figure>

		<t>Each of the three layers is considered as independent of the other two, 
		i.e. different combinations of protocols can be implemented according to 
		the new proposal:</t>

        <t><list style="symbols">
          <t>Regarding compression, a number of options can be considered: 
          as different standards are able to compress different headers 
          (<xref target="cRTP"></xref>, <xref target="ECRTP"></xref>, 
          <xref target="IPHC"></xref>, <xref target="ROHC"></xref>). The one 
          to be used could be selected depending on the traffic to compress and
          the concrete scenario (packet loss percentage, delay, etc.). 
          It also exists the possibility of having a null header compression, 
          in the case of wanting to avoid traffic compression, taking into 
          account the need of storing a context for every flow and the problems 
          of context desynchronization in certain scenarios.</t>

          <t>Multiplexing is also accomplished using PPP Multiplexing <xref target="PPP-MUX">
          </xref>. Nevertheless, other multiplexing protocols can also be considered.</t>

	      <t>Tunneling is accomplished by using L2TP (Layer 2 Tunneling Protocol 
	      <xref target="L2TPv3"></xref>) over IP, GRE (Generic Routing Encapsulation 
	      <xref target="GRE"></xref>) over IP, or MPLS (Multiprotocol Label Switching 
	      Architecture <xref target="MPLS"></xref>).</t>
	      
        </list>Payload compression schemes could also be used, but they are not the aim of 
        this standard.</t>
      </section>

    </section>


    <section title="Protocol Operation">
		<t>This section describes how to combine three protocols: compressing,
   		multiplexing, and tunneling, to save bandwidth for real-time applications.</t>

      <section title="Models of implementation">
		<t>TCMTF can be implemented in different ways.  The most straightforward 
		is to implement it in the devices terminating the real-time streams 
		(these devices can be e.g. voice gateways, or proxies grouping a 
		number of flows):</t>

<figure align="center" anchor="implem_1">
        <preamble></preamble>

        <artwork align="left"><![CDATA[
       [ending device]---[ending device]
                       ^
                       |
                  TCMTF over IP
            ]]></artwork>

        <postamble></postamble>
      </figure>

		<t>Another way TCMTF can be implemented is with an external concentration
		device.  This device could be placed at strategic places in the network 
		and could dynamically create and destroy TCMTF sessions without the 
		participation of the endpoints that generate real-time flows.</t>

<figure align="center" anchor="implem_2">
        <preamble></preamble>

        <artwork align="left"><![CDATA[
  [ending device]\                                   /[ending device]
  [ending device]---[concentrator]---[concentrator]---[ending device]
  [ending device]/                                   \[ending device]
                  ^                ^                ^
                  |                |                |
               Native IP      TCMTF over IP      Native IP

            ]]></artwork>

        <postamble></postamble>
      </figure>

		<t>A number of already compressed flows can also be merged in a tunnel using
		a concentrator in order to increase the number of flows in a tunnel:</t>

<figure align="center" anchor="implem_3">
        <preamble></preamble>

        <artwork align="left"><![CDATA[
  [ending device]\                                   /[ending device]
  [ending device]---[concentrator]---[concentrator]---[ending device]
  [ending device]/                                   \[ending device]
                  ^                ^                ^
                  |                |                |
             Compressed        TCMTF over IP    Compressed

            ]]></artwork>

        <postamble></postamble>
      </figure>

      </section>

      <section anchor="choice" title="Choice of the compressing protocol">
        <t>There are different protocols that can be used for compressing 
        real-time flows:</t>

        <t><list style="symbols">
          <t>IPHC (IP Header Compression <xref target="IPHC"></xref>) permits the compression 
          of TCP/IP, UDP/IP and ESP/IP headers (Encapsulating Security Payload <xref target="ESP"></xref>). It has a low implementation 
          complexity. On the other hand, the resynchronization of the 
          context can be slow over long RTT links. It should be used in 
          scenarios presenting very low packet loss percentage.</t>

          <t>cRTP (compressed RTP <xref target="cRTP"></xref>) works the same way as IPHC, 
          but is also able to compress RTP headers. The link layer transport 
          is not specified, but typically PPP is used.  For cRTP to compress 
          headers, it must be implemented on each PPP link.  A lot of context 
          is required to successfully run cRTP, and memory and processing 
          requirements are high, especially if multiple hops must implement 
          cRTP to save bandwidth on each of the hops.  At higher line rates, 
          cRTP's processor consumption becomes prohibitively expensive. cRTP 
          is not suitable over long-delay WAN links commonly used when tunneling, 
          as proposed by this document. To avoid the per-hop expense of cRTP, a 
          simplistic solution is to use cRTP with L2TP to achieve end-to-end cRTP.
          However, cRTP is only suitable for links with low delay and low loss.
          Thus, if multiple router hops are involved, cRTP's expectation of 
          low delay and low loss can no longer be met.  Further, packets can arrive
          out of order.</t>

	      <t>ECRTP (Enhanced Compressed RTP <xref target="ECRTP"></xref>) is an extension of cRTP 
	      <xref target="cRTP"></xref> that provides tolerance to packet loss and packet 
	      reordering between compressor and decompressor. Thus, ECRTP should be used 
	      instead of cRTP.</t>

	      <t>ROHC (RObust Header Compression <xref target="ROHC"></xref>) is able to compress TCP/IP, UDP/IP, 
	      ESP/IP and RTP/UDP/IP headers. It is a robust scheme developed for header 
	      compression over links with high bit error rate, such as wireless ones. 
	      It incorporates mechanisms for quick resynchronization of the context. 
	      It includes an improved encoding scheme for compressing the header fields 
	      that change dynamically. Its main drawback is that it requires significantly 
	      more processing and memory resources than the ones necessary for IPHC or 
	      ECRTP.</t>
        </list> This standard does not determine which of the existing protocols has to be 
        used for the compressing layer. The decision will depend on the scenario, and will 
        mainly be determined by the packet loss probability, RTT, and the availability 
        of memory and processing resources. The standard is also suitable to include other 
        compressing schemes that may be further developed.</t>

        <section title="Context Synchronization in ECRTP">
		  <t>When the compressor receives an RTP packet that has an unpredicted
   		  change in the RTP header, the compressor should send a COMPRESSED_UDP
          packet (described in <xref target="ECRTP"></xref>) to synchronize the 
          ECRTP decompressor state.  The COMPRESSED_UDP packet updates the RTP context 
          in the decompressor.</t>

          <t>To ensure delivery of updates of context variables, COMPRESSED_UDP
          packets should be delivered using the robust operation described in
          <xref target="ECRTP"></xref>.</t>

          <t>Because the "twice" algorithm described in <xref target="ECRTP"></xref> relies 
          on UDP checksums, the IP stack on the RTP transmitter should transmit UDP
          checksums.  If UDP checksums are not used, the ECRTP compressor should use the 
          cRTP Header checksum described in <xref target="ECRTP"></xref>.</t>


        </section>

        <section title="Context Synchronization in ROHC">
		  <t>ROHC <xref target="ROHC"></xref> includes a more complex mechanism in order 
		  to maintain context synchronization. It has different operation modes and defines 
		  compressor states which change depending on link behavior.</t>
        </section>

      </section>

      <section title="Multiplexing">
	      <t>Header compressing algorithms require a layer two protocol that allows 
	      identifying different protocols.  PPP <xref target="PPP"></xref> is suited for this, 
	      although other multiplexing protocols can also be used for this layer of TCMTF.</t>

		  <t>When header compression is used inside of a tunnel, it will reduce the size of 
		  the headers of the IP packet carried in the tunnel.  However, the 
		  tunnel itself has overhead due to its IP header and the tunnel header (the 
		  information necessary to identify the tunneled payload).  One way to reduce the 
		  overhead of the IP and tunnel headers is to multiplex multiple real-time 
		  payloads in a single tunneled packet.</t>

        <section title="Tunneling Inefficiencies">
		  <t>To get reasonable bandwidth efficiency using multiplexing within a
   	      tunnel, multiple real-time streams should be active between the source
          and destination of an L2TP tunnel. The packet size of the real-time streams has 
          to be small in order to permit a good bandwidth saving.</t>

          <t>If the source and destination of the tunnel are the same as the
          source and destination of the compressing protocol sessions, then the source 
          and destination must have multiple active real-time streams to get any benefit 
          from multiplexing.</t>

          <t>Because of this limitation, TCMTF is mostly useful for applications
          where many real-time sessions run between a pair of endpoints.  The
          number of simultaneous sessions required to reduce the header
          overhead to the desired level depends on the size of the tunnel header.
          A smaller tunnel header will result in fewer simultaneous sessions
          being required to produce adequate bandwidth efficiencies.</t>

        </section>

      </section>

      <section title="Tunneling">
        <t>Different tunneling schemes can be used for sending end to end the compressed
        payloads.</t>
       <section title="Tunneling schemes over IP: L2TP and GRE">
		<t>L2TP tunnels should be used to tunnel the compressed payloads end to end.
        L2TP includes methods for tunneling messages used in PPP session
        establishment, such as NCP (Network Control Protocol).  This allows 
        <xref target="IPCP-HC"></xref> to 
        negotiate ECRTP compression/decompression parameters.</t>
	   
	    <t>Other tunneling schemes, such as GRE <xref target="GRE"></xref> may also be 
	    used to implement the tunneling layer of TCMTF.</t>
	   </section>
	   
       <section title="MPLS tunneling">
       <t>In some scenarios, mainly in operator´s core networks, the use of MPLS is widely 
       deployed as data transport method. The adoption of MPLS as tunneling layer in this 
       proposal intends to natively adapt TCMTF to those transport networks.</t>

	   <t>In the same way that layer 3 tunnels, MPLS paths, identified by MPLS labels, 
	   established between Label Edge Routers (LSRs), could be used to transport the 
	   compressed payloads within an MPLS network. This way, multiplexing layer must be 
	   placed over MPLS layer. Note that, in this case, layer 3 tunnel headers do not have to
	   be used, with the consequent data efficiency improvement.</t>
	   </section>

      </section>

      <section title="Encapsulation Formats">
		<t>The packet format for a packet compressed is:</t>

<figure align="center" anchor="encap_1">
        <preamble></preamble>
        <artwork align="left"><![CDATA[
        +------------+-----------------------+
        |            |                       |
        |   Compr    |                       |
        |   Header   |      Data             |
        |            |                       |
        |            |                       |
        +------------+-----------------------+
            ]]></artwork>
        <postamble></postamble>
      </figure>


   <t>The packet format of a multiplexed PPP packet as defined by <xref target="PPP-MUX">
   </xref> is:</t>
   
<figure align="center" anchor="encap_2">
        <preamble></preamble>
        <artwork align="left"><![CDATA[
        +-------+---+------+-------+-----+   +---+------+-------+-----+
        | Mux   |P L|      |       |     |   |P L|      |       |     |
        | PPP   |F X|Len1  |  PPP  |     |   |F X|LenN  |  PPP  |     |
        | Prot. |F T|      | Prot. |Info1| ~ |F T|      | Prot. |InfoN|
        | Field |          | Field1|     |   |          |FieldN |     |
        | (1)   |1-2 octets| (0-2) |     |   |1-2 octets| (0-2) |     |
        +-------+----------+-------+-----+   +----------+-------+-----+
            ]]></artwork>

        <postamble></postamble>
      </figure>

   <t>The combined format used for TCMTF with a single payload is all of
   the above packets concatenated. Here is an example with one payload, using
   L2TP or GRE tunneling:</t>
   
<figure align="center" anchor="encap_3">
        <preamble></preamble>

        <artwork align="left"><![CDATA[
        +------+------+-------+----------+-------+--------+----+
        | IP   |Tunnel| Mux   |P L|      |       |        |    |
        |header|header| PPP   |F X|Len1  |  PPP  | Compr  |    |
        | (20) |      | Proto |F T|      | Proto | header |Data|
        |      |      | Field |          | Field1|        |    |
        |      |      | (1)   |1-2 octets| (0-2) |        |    |
        +------+------+-------+----------+-------+--------+----+
               |<------------- IP payload -------------------->|
                              |<-------- Mux payload --------->|
            ]]></artwork>
        <postamble></postamble>
      </figure>

   <t>If the tunneling technology is MPLS, then the scheme would be:</t>
 <figure align="center" anchor="encap_4">
        <preamble></preamble>

        <artwork align="left"><![CDATA[
        +------+-------+----------+-------+--------+----+
        |MPLS  | Mux   |P L|      |       |        |    |
        |header| PPP   |F X|Len1  |  PPP  | Compr  |    |
        |      | Proto |F T|      | Proto | header |Data|
        |      | Field |          | Field1|        |    |
        |      | (1)   |1-2 octets| (0-2) |        |    |
       -+------+-------+----------+-------+--------+----+
               |<---------- MPLS payload -------------->|
                       |<-------- Mux payload --------->|
            ]]></artwork>
        <postamble></postamble>
      </figure>
  
   <t>If the tunnel contains multiplexed traffic, multiple "PPPMux
   payload"s are transmitted in one IP packet.</t>

      </section>

    </section>

    <section anchor="Contributing_Authors" title="Contributing Authors">
   
    <figure align="left">
        <artwork align="left"><![CDATA[
Gonzalo Camarillo
Ericsson
Advanced Signalling Research Lab.
FIN-02420 Jorvas
Finland

Email: Gonzalo.Camarillo@ericsson.com
            ]]></artwork>
      </figure>

    <figure align="left">
        <artwork align="left"><![CDATA[
Michael A. Ramalho
Cisco Systems, Inc.
4564 Tuscana Drive
Sarasota, FL 34241-4201
US

Phone: +1.732.449.5762
Email: mramalho@cisco.com            ]]></artwork>
      </figure>

    <figure align="left">
        <artwork align="left"><![CDATA[
Jose Ruiz Mas
University of Zaragoza
Dpt. IEC Ada Byron Building
50018 Zaragoza
Spain

Phone: +34 976762158
Email: jruiz@unizar.es            ]]></artwork>
      </figure>

    <figure align="left">
        <artwork align="left"><![CDATA[
Diego Lopez Garcia
Telefonica I+D
Ramon de la cruz 84
28006 Madrid
Spain

Phone: +34 913129041
Email: diego@tid.es            ]]></artwork>
      </figure>

    <figure align="left">
        <artwork align="left"><![CDATA[
David Florez Rodriguez
Telefonica I+D
Ramon de la cruz 84
28006 Madrid
Spain

Phone: +34 91312884
Email: dflorez@tid.es            ]]></artwork>
      </figure>

    <figure align="left">
        <artwork align="left"><![CDATA[
Manuel Nunez Sanz
Telefonica I+D
Ramon de la cruz 84
28006 Madrid
Spain

Phone: +34 913128821 
Email: mns@tid.es            ]]></artwork>
      </figure>

    <figure align="left">
        <artwork align="left"><![CDATA[
Juan Antonio Castell Lucia
Telefonica I+D
Ramon de la cruz 84
28006 Madrid
Spain

Phone: +34 913129157 
Email: jacl@tid.es            ]]></artwork>
      </figure>

    </section>


    <section anchor="Acknowledgements" title="Acknowledgements">
      <t></t>

    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>

    </section>

    <section anchor="Security" title="Security Considerations">
      <t>All drafts are required to have a security considerations section.
      See <xref target="RFC3552">RFC 3552</xref> for a guide.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">

      &RFC2119;

	  <reference anchor="PPP-MUX" target="">
        <front>
          <title>PPP Multiplexing</title>
          <author initials="R." surname="Pazhyannur">
            <organization></organization>
          </author>
          <author initials="I." surname="Ali">
            <organization></organization>
          </author>
          <author initials="C." surname="Fox">
            <organization></organization>
          </author>
		  <date year="2001" />         
        </front>
        <seriesInfo name="RFC" value="3153" />
      </reference>

	  <reference anchor="ECRTP" target="">
        <front>
          <title>Enhanced Compressed RTP (CRTP) for Links with High Delay, Packet Loss 
          and Reordering</title>
          <author initials="T." surname="Koren">
            <organization></organization>
          </author>
          <author initials="S." surname="Casner">
            <organization></organization>
          </author>
          <author initials="J." surname="Geevarghese">
            <organization></organization>
          </author>
          <author initials="B." surname="Thompson">
            <organization></organization>
          </author>
		  <author initials="P." surname="Ruddy">
            <organization></organization>
          </author>
		  <date year="2003" />          
        </front>
        <seriesInfo name="RFC" value="3545" />
      </reference>
   
	  <reference anchor="cRTP" target="">
        <front>
          <title>Compressing IP/UDP/RTP Headers for Low-Speed Serial Links</title>	
          <author initials="S." surname="Casner">
            <organization></organization>
          </author>
          <author initials="V." surname="Jacobson">
            <organization></organization>
          </author>
          <date year="1999" />        
        </front>
        <seriesInfo name="RFC" value="2508" />
      </reference>
   
   
	  <reference anchor="IPHC" target="">
        <front>
          <title>IP Header Compression</title>
          <author initials="M." surname="Degermark">
            <organization></organization>
          </author>
          <author initials="B." surname="Nordgren">
            <organization></organization>
          </author>
          <author initials="S." surname="Pink">
            <organization></organization>
          </author>
          <date year="1999" />        
        </front>
        <seriesInfo name="RFC" value="2580" />
      </reference>

      <reference anchor="IPCP-HC" target="">
        <front>
          <title>IP Header Compression over PPP</title>
          <author initials="M." surname="Engan">
            <organization></organization>
          </author>
          <author initials="S." surname="Casner">
            <organization></organization>
          </author>
          <author initials="C." surname="Bormann">
            <organization></organization>
          </author>
          <author initials="T." surname="Koren">
            <organization></organization>
          </author>
		  <date year="2003" />
        </front>
        <seriesInfo name="RFC" value="3544" />
      </reference>
      
      <reference anchor="RTP" target="">
        <front>
          <title>RTP: A Transport Protocol for Real-Time Applications</title>
          <author initials="H." surname="Schulzrinne">
            <organization></organization>
          </author>
          <author initials="S." surname="Casner">
            <organization></organization>
          </author>
          <author initials="R." surname="Frederick">
            <organization></organization>
          </author>
          <author initials="V." surname="Jacobson">
            <organization></organization>
          </author>
		  <date year="2003" />
        </front>
        <seriesInfo name="RFC" value="3550" />
      </reference>
      
      <reference anchor="L2TPv3" target="">
        <front>
          <title>Layer Two Tunneling Protocol - Version 3 (L2TPv3)</title>
          <author initials="J." surname="Lau">
            <organization></organization>
          </author>
          <author initials="M." surname="Townsley">
            <organization></organization>
          </author>
          <author initials="I." surname="Goyret">
            <organization></organization>
          </author>
		  <date year="2005" />
        </front>
        <seriesInfo name="RFC" value="3931" />
      </reference>

      <reference anchor="I.363.2" target="">
        <front>
          <title>B-ISDN ATM Adaptation layer specification: Type 2
             AAL</title>
          <author>
            <organization>ITU-T</organization>
          </author>
		  <date year="1997" />
        </front>
        <seriesInfo name="I." value="363.2" />
      </reference>

      <reference anchor="PPP" target="">
        <front>
          <title>The Point-to-Point Protocol (PPP)</title>
          <author initials="W." surname="Simpson">
            <organization></organization>
          </author>
		  <date year="1994" />
        </front>
        <seriesInfo name="RFC" value="1661" />
      </reference>

      <reference anchor="GRE" target="">
        <front>
          <title>Generic Routing Encapsulation (GRE)</title>
          <author initials="D." surname="Farinacci">
            <organization></organization>
          </author>
          <author initials="T." surname="Li">
            <organization></organization>
          </author>
          <author initials="S." surname="Hanks">
            <organization></organization>
          </author>
          <author initials="D." surname="Meyer">
            <organization></organization>
          </author>
          <author initials="P." surname="Traina">
            <organization></organization>
          </author>
		  <date year="2000" />
        </front>
        <seriesInfo name="RFC" value="2784" />
      </reference>

      <reference anchor="ROHC" target="">
        <front>
          <title>The RObust Header Compression (ROHC) Framework</title>
          <author initials="L-E." surname="Jonsson">
            <organization></organization>
          </author>
          <author initials="G." surname="Pelletier">
            <organization></organization>
          </author>
          <author initials="K." surname="Sandlund">
            <organization></organization>
          </author>
		  <date year="2007" />
        </front>
        <seriesInfo name="RFC" value="4995" />
      </reference>

      <reference anchor="TCRTP" target="">
        <front>
          <title>Tunneling Multiplexed Compressed RTP (TCRTP)</title>
          <author initials="B." surname="Thomson">
            <organization></organization>
          </author>
          <author initials="T." surname="Koren">
            <organization></organization>
          </author>
          <author initials="D." surname="Wing">
            <organization></organization>
          </author>
		  <date year="2005" />
        </front>
        <seriesInfo name="RFC" value="4170" />
      </reference>

      <reference anchor="SIP" target="">
        <front>
          <title>SIP: Session Initiation Protocol</title>
          <author initials="J." surname="Rosenberg">
            <organization></organization>
          </author>
          <author initials="H." surname="Schulzrinne">
            <organization></organization>
          </author>
          <author initials="G." surname="Camarillo">
            <organization></organization>
          </author>
          <author initials="et" surname="al.">
            <organization></organization>
          </author>

		  <date year="2005" />
        </front>
        <seriesInfo name="RFC" value="3261" />
      </reference>

      <reference anchor="SCTP" target="">
        <front>
          <title>Stream Control Transmission Protocol</title>
          <author initials="R." surname="Stewart, Ed.">
            <organization></organization>
          </author>
 		  <date year="2007" />
        </front>
        <seriesInfo name="RFC" value="4960" />
      </reference>

      <reference anchor="FLV" target="">
        <front>
          <title>FLV and F4V File Format Specification</title>
          <author>
            <organization>ISO/IEC</organization>
          </author>
		  <date year="2008" />
        </front>
        <seriesInfo name="" value="14496-12 MPEG-4 Part 12" />
      </reference>
      
      <reference anchor="ESP" target="">
        <front>
          <title>IP Encapsulating Security Payload </title>
          <author initials="S." surname="Kent">
            <organization></organization>
          </author>
 		  <date year="2005" />
        </front>
        <seriesInfo name="RFC" value="4303" />
      </reference>

	<reference anchor="MPLS">
	<front>
	<title>Multiprotocol Label Switching Architecture</title>
		<author initials="E." surname="Rosen" fullname="E. Rosen">
		<organization/>
		</author>
		<author initials="A." surname="Viswanathan" fullname="A. Viswanathan">
		<organization/>
		</author>
		<author initials="R." surname="Callon" fullname="R. Callon">
		<organization/>
		</author>
		<date year="2001" month="January"/>
		<abstract>
		<t>
		This document specifies the architecture for Multiprotocol Label Switching (MPLS). [STANDARDS-TRACK]
		</t>
		</abstract>
		</front>
		<seriesInfo name="RFC" value="3031"/>
		<format type="TXT" octets="147175" target="http://www.rfc-editor.org/rfc/rfc3031.txt"/>
		</reference>


    </references>


    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->


      &RFC3552;



    </references>
    <!-- Change Log

v00 2006-03-15  EBD   Initial version

v01 2006-04-03  EBD   Moved PI location back to position 1 -
                      v3.1 of XMLmind is better with them at this location.
v02 2007-03-07  AH    removed extraneous nested_list attribute,
                      other minor corrections
v03 2007-03-09  EBD   Added comments on null IANA sections and fixed heading capitalization.
                      Modified comments around figure to reflect non-implementation of
                      figure indent control.  Put in reference using anchor="DOMINATION".
                      Fixed up the date specification comments to reflect current truth.
v04 2007-03-09 AH     Major changes: shortened discussion of PIs,
                      added discussion of rfc include.
v05 2007-03-10 EBD    Added preamble to C program example to tell about ABNF and alternative 
                      images. Removed meta-characters from comments (causes problems).  -->
  </back>
</rfc>
