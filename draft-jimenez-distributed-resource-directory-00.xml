<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC0792 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0792.xml">
<!ENTITY RFC2045 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2045.xml">
<!ENTITY RFC2046 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2046.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2616 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2616.xml">
<!ENTITY RFC3986 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4288 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4288.xml">
<!ENTITY RFC4346 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4346.xml">
<!ENTITY RFC4347 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4347.xml">
<!ENTITY RFC4944 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4944.xml">
<!ENTITY RFC5234 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml">
<!ENTITY RFC5785 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5785.xml">
<!ENTITY RFC5988 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5988.xml">
<!ENTITY RFC6570 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC6775 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC6690 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6690.xml">
<!ENTITY I-D.ietf-core-coap SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-core-coap.xml">
<!ENTITY I-D.vanderstok-core-bc SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.vanderstok-core-bc.xml">
<!ENTITY I-D.brandt-coap-subnet-discovery SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.brandt-coap-subnet-discovery.xml">
<!ENTITY I-D.shelby-core-resource-directory SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.shelby-core-resource-directory.xml">



]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="3"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" ipr="trust200902" docName="draft-jimenez-distributed-resource-directory-00">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>

<front>
	<title>A Distributed Resource Directory (DRD)</title>
	<author initials="J.J" surname="Jimenez" fullname="Jaime Jimenez">
		<organization>
             Ericsson
          </organization>
		<address>
			<postal>
				<street>Hirsalantie 11</street>
				<city>Jorvas</city>
				<code>02420</code>
				<country>FINLAND</country>
			</postal>
			<phone>+358442992827</phone>
			<email>jaime.j.jimenez@ericsson.com</email>
		</address>
	</author>
	
	<author initials="M.L." surname="Liu" fullname="Meirong Liu">
		<organization>University of Oulu</organization>
		<address>
			<postal>
				<street>Erkki Koiso-Kanttilan Katu 3</street>
				<city>University of Oulu</city>
				<code>90014</code>
				<country>FINLAND</country>
			</postal>
			<email>meiliu@ee.oulu.fi</email>
		</address>
	</author>
	
	<author initials="E.H." surname="Harjula" fullname="Erkki Harjula">
		<organization>University of Oulu</organization>
		<address>
			<postal>
				<street>Erkki Koiso-Kanttilan Katu 3</street>
				<city>University of Oulu</city>
				<code>90014</code>
				<country>FINLAND</country>
			</postal>
			<phone>+358503030478</phone>
			<email>erkki.harjula@ee.oulu.fi</email>
		</address>
	</author>
	<date year="2013"/>
	<area>Internet</area>
	<workgroup>CoRE</workgroup>
	<keyword>CoRE, Distributed Resource Discovery, Resource Directory</keyword>
	<abstract>
		<t>
	In some M2M scenarios, it is convenient to offer non-centralized alternatives for discovery and rendezvous. 
	This document defines a Distributed Resource Directory (DRD) for Constrained Application Protocol (CoAP). 
	Distribution is achieved by means of a structured Peer-to-Peer (P2P) overlay. The DHT-based P2P overlay provides 
	discovery, rendezvous and caching services for CoAP End-points as well as HTTP proxy service for Web clients. 
	</t>
	</abstract>
</front>


    <middle>


  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->

<section anchor="introduction" title="Introduction">
	<t>
  CoAP is a specialized Web transfer protocol that can be used not only between nodes on the same constrained 
  network but also between constrained nodes and other nodes on the Internet. The latter is possible since CoAP 
  can be translated into Hypertext Transfer Protocol (HTTP) for integration with the Web.
  </t>
	<t>	  
  The discovery of resources offered by a constrained server is very important in machine-to-machine applications 
  and it is dealt in CoAP by the Resource Directory (RD) <xref target="I-D.shelby-core-resource-directory"/>. 
  RD uses Web Linking for discovering resources in CoAP servers as specified by the CoRE Link Format 
  <xref target="RFC6690"/>  and Web Linking <xref target="RFC5988"/>. When used globally the RD is not sufficient 
  if we want to independently access small portions of the RD database.
  </t>
	<t>
  This document specifies the interfaces to a DHT and specifies how to use DHT capabilities to enable a distributed 
  Resource Directory. The peer-to-peer overlay provides 1) a rendezvous service, 2) enables the use of the overlay 
  as a cache for sensor data, and 3) provides HTTP-proxying functionality. The mentioned  functionalities can be 
  implemented in the overlay itself, without the use of centralized servers. The use of a DHT provides some useful 
  properties for M2M, such as autonomy, low deployment cost and enhanced network failure tolerance and scalability. 
  
 </t>
</section>



  
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** --> 
  <section anchor="terminology" title="Terminology">
	<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
	"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
	document are to be interpreted as described in <xref target="RFC2119"/>. The
	term "byte" is used in its now customary sense as a synonym for "octet".</t>

	<t>This specification requires readers to be familiar with all the terms
	and concepts that are discussed in <xref target="RFC5988"/> and <xref target="RFC6690"/>. Readers should 
	also be familiar with the terms and concepts discussed in <xref target="I-D.ietf-core-coap"/>. The URI 
	Template format is used to describe the REST interfaces defined in this specification <xref target="RFC6570"/>.	
	This specification uses the following additional terminology:
	<list style="hanging">
	  <t hangText="HTTP Client"><vspace />
		HTTP Clients are clients that send out requests to resource directory using HTTP messages. </t>
	  <t hangText="CoAP Client"><vspace />
		CoAP clients are CoAP entities that send out requests to resource directory using CoAP messages. </t>
	</list>
	</t>

  </section>
  

  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <section anchor='arch' title="Architecture">

	<t>
	The Distributed Resource Directory (DRD) architecture is shown in <xref target="fig-arch"/>. It provides the 
	same REST interfaces as the centralized Resource Directory (RD) does. Endpoints are physical nodes that may 
	run one or more CoAP servers, and can use REST operations such as POST and GET in the DRD. Endpoints can also 
	act as clients. In this case we name them CoAP Clients. There can be also traditional or legacy HTTP Clients 
	that need to access the resources stored in the DRD. The different nodes, according to their functionality are:
	<list style="hanging">
		<t hangText="Endpoints (EP)"><vspace/>
			Endpoint (EP) is an entity that lives on a "Node" and communicates using the CoAP protocol. A CoAP 
			endpoint can be the source or destination of a CoAP message.   </t>
		<t hangText="Peers"><vspace/>
			Peers (P) are full overlay member nodes, capable of forwarding messages following a path through the 
			overlay to the destination. Some Peers can also act as HTTP Proxies (see next). In other words, 
			beside acting as a peer, the node also acts as a proxy for protocol translation.  </t>
		<t hangText="HTTP Proxy"><vspace/>
	    	A HTTP Proxy (HP) is capable of running both HTTP and CoAP protocols, as well as performing 
			translation between the two. </t>
		<t hangText="HTTP Clients"><vspace/>
			HTTP Clients are clients that send out requests to a resource directory using HTTP messages. </t>
		<t hangText="CoAP Clients"><vspace/>
	  		CoAP clients are CoAP entities that send out requests to a resource directory using CoAP messages. </t>
	</list>
	</t>


		<figure anchor="fig-arch" title="The Distributed Resource Directory architecture.">
          <artwork align="left"><![CDATA[
          
	         Registration                Lookup
	              |                         |
	  +----+ CoAP |     +---+     +----+    | HTTP +--------+
	  | EP |----- |     | P |-----| HP |    | -----| Client |
	  +----+      |     +---+     +----+    |      +--------+
	  +----+ CoAP |       |         |       | 
	  | EP |----- | ----  |   DRD   |  ---- |
	  +----+      |       |         |       |
	  +----+ CoAP |     +---+     +---+     | CoAP +--------+
	  | EP |----- |     | P |-----| P |     | -----| Client |
	  +----+      |     +---+     +---+     |      +--------+
  
            ]]></artwork>
        </figure>

	
		

  </section>


  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <section anchor='drd_discovery' title="DRD Discovery">
   
  <t>
Before an endpoint (EP) can register its resources into the DRD, it needs to find an entry point to the DRD. 
The initial entry point can be any peer connected to the DRD. There are a number of ways for finding an entry 
point. One method is to use a well-known multicast address, where the endpoint sends a POST request to a 
well-known address to get the information of the DRD. Other ways include finding the nearest DRD EP or the dynamic 
discovery of the DRD. 
  </t>
  
  </section>


  
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <section anchor='drd' title="Distributed Resource Directory Function Set">

	<t>
	This section defines the interfaces between an endpoint and a DRD peer. The interface is called the Resource 
	Directory Function Set. This section also describes the operations required in the DHT to realize the REST 
	operations that a RD implements. We assume that EPs implement CoAP <xref target="I-D.ietf-core-coap"/> and 
	optionally HTTP <xref target="RFC2616"/> protocols.
	</t>
	</section>
	
<section anchor="registration" title="Registration">
	<t>
	In registration, EP sends a CoAP POST message that must contain the list of resources (in the payload of the 
	message), to register its resources into the DRD. When a peer (P) (that runs a DHT algorithm to participate in 
	the DRD overlay) receives a registration message, it stores the CoAP Registration structure under the hash of 
	its CoAP URI in the DHT. The payload of the CoAP Registration is stored as the value into the overlay. After 
	getting the DHT ACK message, the peer sends back a COAP ACK message back to the EP to indicate the resource is 
	registered into the DRD. 
	</t>

<t>
	The POST request should include a query string parameter to indicate the name of the endpoint, which is used to 
	uniquely identify the endpoint (it could be a node or a device). The endpoint name setting has different 
	alternatives. One method is to hash the MAC address of the device to generate the endpoint name. Another method 
	is to use common names. 
	
	The sequence diagram is shown below.
	</t>

	<t>
		As an example, if an endpoint with name "9996172"  wants to register two different temperature descriptions 
		into the DRD, the endpoint sends a POST request with the URI 
		"coap://overlay-1.com/proxy-1/.well-known/core?ep=9996172".The temperature descriptions are included in the 
		payload of the message. An example of the registration message is given below.
		
		<figure><artwork align="left"><![CDATA[


				  +---+           +---+         +-----+
				  |EP |           | P |         | DHT |
				  +---+           +---+         +-----+
				    |               |              |
				    |   CoAP POST   |              |
				    |   (URI )      | Store        |
				    |+------------->| h(URI), VALUE|
				    |               |+------------>|
				    |               |              |
				    |               |              |
				    |               |              |
				    |               |              |
				    |               | Store ACK    |
				    |  2.01  ACK    |<------------+|
				    |<-------------+|              |
				    |               |              |

	            ]]></artwork></figure>
		
			<figure><artwork align="left"><![CDATA[
	   		   Req: POST coap://overlay-1.com/proxy-1/.well-known/core?ep=9996172
	   		   Payload:
	   		   </temperature-1>;ct=41;rt="TemperatureC";if="sensor",
	   		   </temperature-2>;ct=41;rt="LightLux";if="sensor"

	            ]]></artwork></figure>
		
		
		 The peer in the resource directory stores the following mapping in the overlay:
		<figure><artwork align="left"><![CDATA[
		 <artwork>
			Resource-ID = h(coap://overlay-1.com/proxy-1/.well-known/core?ep=9996172) 
			KEY =	 9996172,
			VALUE = {<./temperature-1>;ct=41;rt="TemperatureC";if="sensor", <./temperature-2>;ct=41;rt="LightLux";if="sensor",}  
            ]]></artwork></figure>

		</t>
		
		
		<t>
		Note that the Resource-ID stored in the overlay is calculated as hash over the URI (i.e. h(URI)), for 
		instance SHA-1.
		</t>
		<t>
		This action informs any other node performing a lookup for the previous URI 
		"coap://overlay-1.com/proxy-1/.well-known/core?ep=9996172" that the Node-ID value for peer is "9996172".  
	</t>
</section>

	  
	
	  <section anchor='discovery' title="Discovery">

		<t  hangText="Endpoints discover resources">
		The DRD also supports rendezvous by fetching the mapping information between CoAP URIs and Node-IDs to get 
		the address information of resources. Specifically, an endpoint sends a CoAP GET request to the DRD, 
		including the URI information of requested resource. The DRD peer (handling this request) performs a DHT 
		Lookup for the hash of the COAP URI. The DHT then finds the peer that is responsible for the value of the 
		resource. The destination peer returns the stored value to the peer (P). Finally, P sends back the content 
		(i.e., stored value) back to the endpoint. The sequence diagram is shown below.
		</t>

		<figure><artwork align="left"><![CDATA[


			+---+           +---+         +-----+
			|EP |           | P |         | DHT |
			+---+           +---+         +-----+
			  |               |              |
			  |   CoAP GET    |              |
			  |  (URI)        | Lookup       |
			  |+------------->| h(URI)       |
			  |               |+------------>|
			  |               |              |
			  |               |              |
			  |               |              |
			  |               | Lookup Reply |
			  |               |  (Content)   |
			  |  2.05 Content |<------------+|
			  |<-------------+|              |
			  |               |              |

	            ]]></artwork></figure>
	<t>
As an example, if a peer located in the overlay overlay-1.com wishes to retrieve the resources with URI 
coap://overlay-1.com/proxy-1/.well-known/core?ep=9996172, it performs DHT Lookup operation in the overlay. 
The Resource-ID used in this lookup is a SHA-1 hash over the URI 
"coap://overlay-1.com/proxy-1/.well-known/core?ep=9996172". 
</t>
<t>
As a response to this fetch request, the overlay returns the following result:
</t>
<t>
<figure><artwork align="left"><![CDATA[
	<artwork>
	Resource-ID = h(coap://overlay-1.com/proxy-1/.well-known/core?ep=9996172) 
	KEY =	 9996172,
	VALUE = {<./temperature-1>;ct=41;rt="TemperatureC";if="sensor",
 ? ? ?     ?<./temperature-2>;ct=41;rt="LightLux";if="sensor",}  
		  
]]></artwork></figure>

</t>
<t>
The obtained KEY is the Node-ID of the peer that is responsible of this KEY/VALUE pair. The VALUE is the set 
of resource descriptions that are necessary to read data from the endpoints.
</t>	
			<figure><artwork align="left"><![CDATA[
	   		   Req: GET coap://overlay-1.com/proxy-1/.well-known/core?ep=9996172
	   		  
           Response Payload:
	   		   </temperature-1>;ct=41;rt="TemperatureC";if="sensor",
	   		   </temperature-2>;ct=41;rt="LightLux";if="sensor"

	            ]]></artwork></figure>

  
        
	
	  </section>


	  <section anchor='update' title="Update">

		<t>
		In addtion, EP can send a CoAP PUT message to update its resources into the DRD. When receiving the PUT 
		message, the P performs a DHT Store operation to update the CoAP message structure under the hash of its 
		CoAP URI. The payload of the CoAP Registration is stored as the the new value into the overlay. After 
		receiving the ACK message, P sends a COAP Changed message back to the EP to indicate the resource was 
		updated into the DRD. The sequence diagram is shown below.
		</t>

	<figure><artwork align="left"><![CDATA[

+---+           +---+         +-----+
|EP |           | P |         | DHT |
+---+           +---+         +-----+
  |               |              |
  |   CoAP PUT    |              |
  |   (URI )      | Store        |
  |+------------->| h(URI), VALUE|
  |               |+------------>|
  |               |              |
  |               |              |
  |               |              |
  |               |              |
  |               | Store ACK    |
  |  2.04 Changed |<------------+|
  |<-------------+|              |
  |               |              |

 ]]></artwork></figure>



        

	
	  </section>
	  
	 <section title="Caching Mechanisms"
anchor="sec-cach">


<t>
The CoAP protocol itself supports caching of resource values in order to reduce the response time and network 
bandwidth consumption of future equivalent requests. This storage can be done in CoAP endpoints and CoAP proxies. 
Herein, CoAP proxies mean the CoAP endpoints that perform requests on behalf of CoAP clients.
</t> 
 	<figure><artwork align="left"><![CDATA[
+---+           +---+         +-----+
|HC |           | P |         | DHT |
+---+           +---+         +-----+
  |               |              |
  |   HTTP GET    |              |
  | (CONTENT URI) | Lookup       |
  |+------------->| h(URI)       |
  |               |+------------>|
  |               |              |
  |               |              |
  |               |              |
  |               | Lookup Reply |
  |               |  (Data   )   |
  |  HTTP Reply   |<------------+|
  |<-------------+|              |
  |               |              |

     
           ]]></artwork></figure>
	 
	  </section>
	 
 <section title="Get Data (resource values) from Endpoint via DHT" 
 anchor="sec-getdata">	 
	 <t >
  
 The DRD also supports fetching data (i.e., resource values) from endpoints. Specifically, if an endpoint EP1 
 wants to get the data provided by another endpoint EP2, EP1 firsts sends a GET request to peer P1 in the DRD. 
 P1 then performs DHT Lookup operation to find the destination peer (in this case P2) that is responsible for 
 managing EP2. P2 then sends a CoAP GET request to get the data provided by the endpoint EP2. After getting the 
 data provided by EP2, P2 sends the data back to P1, which in turn sends it  back to the EP1. The sequence 
 diagram is shown below.
  </t >   
    <figure><artwork align="left"><![CDATA[
+---+          +---+           +-----+         +---+          +---+
|EP1|          |P1 |           | DHT |         |P2 |          |EP2|
+---+          +---+           +-----+         +---+          +---+
 |               |                |              |              |
 |   GET         |                |              |              |
 |  (CONTENT)    | Lookup         |              |              |
 |+------------->| h(CONTENT)     |   GET        |              |
 |               |+-------------> |  (CONTENT)   |   GET        |
 |               |                |+------------>|  (CONTENT)   |
 |               |                |              |+------------>|
 |               |                               |              |
 |               |                               | 2.05 Content |
 |               | 2.05 Content                  |<------------+|
 |  2.05 Content |<-----------------------------+|              |
 |<-------------+|                               |              |
 |               |                               |              |
       ]]></artwork></figure>
      
 
 
 </section> 



<!-- **************************************************************** -->
<!-- **************************************************************** -->
<!-- **************************************************************** -->
<!-- **************************************************************** -->



<!-- **************************************************************** -->
<!-- **************************************************************** -->
<!-- **************************************************************** -->
<!-- **************************************************************** -->


  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->

  <section title="Security Considerations">
         <t> 
         This document needs the same security considerations as described in Section 7 of 
		 <xref target="RFC5988"/> and Section 6 of <xref target="RFC6690"/>. The /.well-known/core resource may 
		 be protected e.g. using DTLS when hosted on a CoAP server as described in 
		 <xref target="I-D.ietf-core-coap"/>. 
     	 </t>
     	 <t>
     	 Access control SHOULD be performed separately for the RD Function Set and the RD Lookup Function Set, 
		 as different endpoints may be authorized to register with an RD from those authorized to lookup 
		 endpoints from the RD. Such access control SHOULD be performed in as fine-grained a level as possible. 
		 For example access control for lookups could be performed either at the domain, endpoint or resource 
		 level. 
     	 </t>

  </section>

  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->

  <section title="IANA Considerations">

	<t>
	"core.rd", "core.rd-group" and "core.rd-lookup" resource types need to be registered with the resource type 
	registry defined by <xref target="RFC6690"/>.
	</t>
	
	<t>
	The "exp" attribute needs to be registered when a future Web Linking attribute is created.
	</t>

     
  </section>

<!--  **************************************************************** -->
<!--  SECTION: ACKNOWLEDGMENTS          -->
<!--  **************************************************************** -->

<section title="Acknowledgments">

<t>This work was carried out in the MAMMotH project funded by Tekes, the Finnish Funding Agency for Technology 
and Innovation.
</t>

</section>

  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->
  <!-- **************************************************************** -->

  <section title="Changelog">









  </section>

  </middle>

    <back>
    <references title='Normative References'>
       &RFC6690;
       &RFC2119;
       &RFC5988;
       &RFC6570;
       
    </references>

    <references title='Informative References'>
		&I-D.shelby-core-resource-directory;
		&I-D.ietf-core-coap;
		&I-D.vanderstok-core-bc;
		&I-D.brandt-coap-subnet-discovery;
		&RFC6775;
		&RFC2616;
       
    </references>
    </back>

</rfc>
