<?xml version="1.0" encoding="UTF-8"?>


<rfc category="info" ipr="full3978" docName="draft-ietf-sipping-presence-scaling-requirements-02.txt">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes" ?>

<front> <title abbrev='Scaling Requirements for Presence'>Scaling Requirements for Presence in SIP/SIMPLE</title>

    <author initials="A." surname="Houri" fullname="Avshalom Houri"> 
<organization>IBM</organization> <address> <postal> <street>3 Pekris Street, Science Park 
</street> <city>Rehovot</city> <region></region> <code></code> 
<country>Israel</country> </postal> <email>avshalom@il.ibm.com</email> 
</address> </author>

    <author initials="S." surname="Parameswar" fullname="Sriram Parameswar"> 
<organization>Microsoft Corporation</organization> <address> <postal> 
<street>One Microsoft Way</street> <city>Redmond</city> <region>WA</region> 
<code>98052</code> <country>USA</country> </postal> 
<email>Sriram.Parameswar@microsoft.com</email> </address> </author>

 <author initials="E." surname="Aoki" fullname="Edwin Aoki">
<organization>AOL  LLC</organization>
<address> <postal> <street>401 Ellis St.</street> 
<city>Mountain View</city> <region>CA</region> <code>94043</code> 
<country>USA</country> </postal> <email>aoki@aol.net</email> </address> 
 </author>

    <author initials="V." surname="Singh" fullname="Vishal Singh"> 
<organization abbrev="Columbia U.">Columbia University</organization> <address> 
<postal> <street>Department of Computer Science</street> <street>450 Computer 
Science Building</street> <city>New York</city> <region>NY</region> 
<code>10027</code> <country>US</country> </postal> 
<email>vs2140@cs.columbia.edu</email> 
<uri>http://www.cs.columbia.edu/~vs2140</uri> </address> </author>

    <author initials="H." surname="Schulzrinne" fullname="Henning Schulzrinne"> 
<organization abbrev="Columbia U.">Columbia University</organization> <address> 
<postal> <street>Department of Computer Science</street> <street>450 Computer 
Science Building</street> <city>New York</city> <region>NY</region> 
<code>10027</code> <country>US</country> </postal> <phone>+1 212 939 
7004</phone> <email>hgs+ecrit@cs.columbia.edu</email> 
<uri>http://www.cs.columbia.edu/~hgs</uri> </address> </author>


    <date month="November" year="2008"/> <area>Real Time</area> 
<workgroup>SIPPING WG</workgroup> <keyword>I-D</keyword> <keyword>Internet-
Draft</keyword> <keyword>SIMPLE</keyword> <keyword>problem statement</keyword>

<abstract>

<t>The document provides a set of requirements for enabling interdomain scaling 
in presence for SIP/SIMPLE.</t>

</abstract>

</front>

<middle>

<section title="Requirements notation">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", 
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document 
are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>

<section title="Introduction">

<t>The document lists requirements for optimizations of the SIP/SIMPLE protocol. 
See <xref target="I-D.ietf-simple-simple"/> for the list of RFCs and drafts that 
are considered as part of the SIP/SIMPLE protocol. These optimizations should 
reduce the load on the network and the presence servers in interdomain presence 
subscriptions. The requirements are based on a separate scaling analysis 
document <xref target="I-D.ietf-simple-interdomain-scaling-analysis" />.</t>

<t>The scaling analysis document have shown that there is much room for 
optimizations in the SIP/SIMPLE protocol. The need for optimizations is in the 
number of by teds that are sent between two federating domains, the number of 
messages that need to be processed and the amount of state that needs to be 
managed by the presence servers. The following is a snaphot of various numbers from the 
scaling analysis document. This snapshot is in clouded here for completeness, 
please refer to the scaling analysis document for the full details including the 
description of the calculations and the various SIP optimizations 
investigated.</t>

<section title="Very large network peering">

    <t>In this environment, two or more very large networks create a peering 
    relationship allowing their users to subscribe to presence in the other 
    domains.  Where as the number of users in other deployment types ranges 
    from hundreds to several hundred thousand, these large networks host up 
    to hundreds of millions of users.  Examples of these networks are large 
    wireless carriers and consumer IM networks.</t>

    <t>Common characteristics of this deployment are:</t>

    <t><list style="symbols">
    <t>As users become accustomed to network 
    boundaries disappearing, federated subscriptions become as common as 
    subscriptions within the same domain</t>
    <t>Individual users are highly 
    likely to want to see presence of multiple presentities in the peer 
    network</t>
    <t>The intersection of users in the deployment watching the 
    same presentities is very high (i.e., two or more users in network A are 
    extremely likely to be watching a same user in network B)</t>
    <t>Status 
    changes increase greatly due to typical observed consumer behavior</t> 
    </list></t>

    <t>The first table below provides the calculations without optimizations 
    the second table provides the calculations with optimizations. Even 
    though the optimizations help a lot (almost cut the number of messages by 
    half), the numbers are still very high. Note also that the bandwidth required is very high.</t>

<figure title="Very large network peering with no optimizations" anchor="fig07">
<artwork><![CDATA[
** Constants
(C01) Subscription lifetime (hours)...........................8
(C02) Presence state changes / hour...........................6
(C03) Subscription refresh interval / hour....................1
(C04) Total federated presentities per watcher...............10
(C05) Number of dialogs to maintain per watcher..............10
(C06) Total number of watchers in domains............20,000,000
(C07) SUBSCRIBE message size in bytes.......................450
(C08) 200 OK for SUBSCRIBE message size in bytes............370
(C09) NOTIFY message size not including presence doc........500
(C10) 200 OK for NOTIFY message size in bytes...............370
(C11) Size of an average presence document..................350

** Initial Messages
(I01) Initial SUBSCRIBE msgs per watcher.....................10
(I02) Initial 200 OK msgs (SUBSCRIBE) per watcher............10
(I03) Initial NOTIFY msgs per watcher........................10
(I04) Initial 200 OK msgs (NOTIFY) per watcher...............10
(I05) Total number & bytes of initial SUBSCRIBE msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers.................90,000,000,000
(I06) Total number & bytes of initial 200 OK (SUBSCRIBE) msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers.................74,000,000,000
(I07) Total number & bytes of initial NOTIFY msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers................170,000,000,000
(I08) Total number & bytes of initial 200 OK (NOTIFY) msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers.................74,000,000,000
(I09) Total number & bytes of initial messages per day
          Number of msgs for all watchers...........800,000,000
          Bytes for all watchers................408,000,000,000

** Steady State Messages
(S01) NOTIFY msgs due to state change
          per watched presentity per day.....................46
(S02) 200 (for NOTIFY due to state change) msgs
          per watched presentity per day.....................46
(S03) Total number and size of msgs due to state change per day
          Number of msgs for all watchers........18,400,000,000
          Bytes for all watchers.............11,224,000,000,000
(S04) Number of SUBSCRIBE msgs for refreshes
          per watcher per day................................70
(S05) Number of 200 OK msgs for SUBSCRIBE msgs for refreshes
          per watcher per day................................70
(S06) Number of NOTIFY msgs for refreshes
          per watcher per day................................70
(S07) Number of 200 OK msgs for NOTIFY msgs for refreshes
          per watcher per day................................70
(S08) Total number and size of msgs due to SUBSCRIBE refreshes
          Number of msgs for all watchers per day.5,600,000,000
          Bytes for all watchers per day......2,856,000,000,000
(S09) Total number & bytes of steady messages per day
          Number of msgs for all watchers........24,000,000,000
          Bytes for all watchers.............14,080,000,000,000

** Termination Messages
(T01) Terminating SUBSCRIBE msgs per watcher.................10
(T02) Terminating 200 OK msgs (SUBSCRIBE) per watcher........10
(T03) Terminating NOTIFY msgs per watcher....................10
(T04) Terminating 200 OK msgs (NOTIFY) per watcher...........10
(T05) Total number & bytes of Terminating SUBSCRIBE msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers.................90,000,000,000
(T06) Total number & bytes of terminating 200 OK (SUBSCRIBE) msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers.................74,000,000,000
(T07) Total number & bytes of terminating NOTIFY msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers................170,000,000,000
(T08) Total number & bytes of terminating 200 OK (NOTIFY) msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers.................74,000,000,000
(T09) Total number & bytes of terminating messages per day
          Number of msgs for all watchers...........800,000,000
          Bytes for all watchers................408,000,000,000
      
** Bottom Line
(B01) Total of messages between domains..........25,600,000,000 
      Total of bytes bet. domains (PD=350)...14,896,000,000,000 
      Total of bytes bet. domains (PD=3000)..44,046,000,000,000 
(B02) Total number of messages / second.................888,889 
      Total of bytes per second (PD=350)............517,222,222
      Total of bytes per second (PD=3000).........1,529,375,000 
(B03) Total number of by msgs per user/day................1,280
      Total number of bytes per user/day (PD=350).......744,800
      Total number of bytes per user/day (PD=3000)....2,202,300
]]></artwork></figure>

<figure title="Very large network peering with optimizations" anchor="fig08">
<artwork><![CDATA[
** Constants
(C01) Subscription lifetime (hours)...........................8
(C02) Presence state changes / hour...........................6
(C03) Subscription refresh interval / hour....................1
(C04) Total federated presentities per watcher...............10
(C05) Number of dialogs to maintain per watcher...............1
(C06) Total number of watchers in domains............20,000,000
(C07) SUBSCRIBE message size in bytes.......................450
(C08) 200 OK for SUBSCRIBE message size in bytes............370
(C09) NOTIFY message size not including presence doc........500
(C10) 200 OK for NOTIFY message size in bytes...............370
(C11) Size of an average presence document..................350
(C13) Additional data per document in RLMI..................160
(C14) Multiparty boundary in RLMI document..................144
(C15) XML root node in RLMI document........................144

** Initial Messages
(I01) Initial SUBSCRIBE msgs per watcher......................1
(I02) Initial 200 OK msgs (SUBSCRIBE) per watcher.............1
(I03) Initial NOTIFY msgs per watcher.........................1
(I04) Initial 200 OK msgs (NOTIFY) per watcher................1
(I05) Total number & bytes of initial SUBSCRIBE msgs
          Number of msgs for all watchers............20,000,000
          Bytes for all watchers..................9,000,000,000
(I06) Total number & bytes of initial 200 OK (SUBSCRIBE) msgs
          Number of msgs for all watchers............20,000,000
          Bytes for all watchers..................7,400,000,000
(I07) Total number & bytes of initial NOTIFY msgs
          Number of msgs for all watchers............20,000,000
          Bytes for all watchers................146,560,000,000
(I08) Total number & bytes of initial 200 OK (NOTIFY) msgs
          Number of msgs for all watchers............20,000,000
          Bytes for all watchers..................7,400,000,000
(I09) Total number & bytes of initial messages per day
          Number of msgs for all watchers............80,000,000
          Bytes for all watchers................170,360,000,000

** Steady State Messages
(S01) NOTIFY msgs due to state change
          per watched presentity per day.....................46
(S02) 200 (for NOTIFY due to state change) msgs
          per watched presentity per day.....................46
(S03) Total number and size of msgs due to state change per day
          Number of msgs for all watchers........18,400,000,000
          Bytes for all watchers.............16,670,400,000,000
(S04) Number of SUBSCRIBE msgs for refreshes
          per watcher per day.................................7
(S05) Number of 200 OK msgs for SUBSCRIBE msgs for refreshes
          per watcher per day.................................7
(S06) Number of NOTIFY msgs for refreshes
          per watcher per day.................................0
(S07) Number of 200 OK msgs for NOTIFY msgs for refreshes
          per watcher per day.................................0
(S08) Total number and size of msgs due to SUBSCRIBE refreshes
          Number of msgs for all watchers per day...280,000,000
          Bytes for all watchers per day........114,800,000,000
(S09) Total number & bytes of steady messages per day
          Number of msgs for all watchers........18,680,000,000
          Bytes for all watchers.............16,785,200,000,000

** Termination Messages
(T01) Terminating SUBSCRIBE msgs per watcher..................1
(T02) Terminating 200 OK msgs (SUBSCRIBE) per watcher.........1
(T03) Terminating NOTIFY msgs per watcher.....................0
(T04) Terminating 200 OK msgs (NOTIFY) per watcher............0
(T05) Total number & bytes of Terminating SUBSCRIBE msgs
          Number of msgs for all watchers............20,000,000
          Bytes for all watchers..................9,000,000,000
(T06) Total number & bytes of terminating 200 OK (SUBSCRIBE) msgs
          Number of msgs for all watchers............20,000,000
          Bytes for all watchers..................7,400,000,000
(T07) Total number & bytes of terminating NOTIFY msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(T08) Total number & bytes of terminating 200 OK (NOTIFY) msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(T09) Total number & bytes of terminating messages per day
          Number of msgs for all watchers............40,000,000
          Bytes for all watchers.................16,400,000,000
      
** Bottom Line
(B01) Total of messages between domains..........18,800,000,000
      Total of bytes bet. domains (PD=350)...16,971,960,000,000 
      Total of bytes bet. domains (PD=3000)..41,881,960,000,000 
(B02) Total number of messages / second.................652,778
      Total of bytes per second (PD=350)............589,304,167
      Total of bytes per second (PD=3000).........1,454,234,722 
(B03) Total number of by msgs per user/day..................940
      Total number of bytes per user/day (PD=350).......848,598 
      Total number of bytes per user/day (PD=3000)....2,094,098

]]></artwork></figure>

</section>

<section title="State Management">

<t>In previous sections we have demonstrated the large amount of messages that need to 
be sent to/from a presence server In this section the state that needs to be 
maintained by a presence server will be analyzed and shown to be far from 
trivial.</t>

<t>The presence server has two parallel tasks.</t>

<t><list style="numbers">

<t>Maintain the state of the presentities to which watchers subscribe.</t>

<t>Maintain the state of the subscriptions of watchers and provide timely 
updates to the watchers.</t>

</list></t>

<t>For a single subscription from a single watcher on a presentity, the presence 
server has to maintain the following state:</t>

<t><list style="symbols">

<t>Subscription state including all the parameters that are needed in order to 
maintain the subscription as timers.</t>

<t>Optional filtering information that was requested by the watcher. This 
includes enough information that is needed for doing the filtering. In addition 
additional information has to be maintained if partial notification is being 
supported for the subscription</t>

<t>Optional rate management information as throttling</t> 

<t>Watcher information <xref target="RFC3857"/>, <xref target="RFC3858"/> that 
is the result of the subscription in order to enable watched presentities to see 
who is watching them.</t>

</list></t>

<t>For each presentity that has been subscribed to in the presence server, the 
presence server has to maintain the following state:</t>

<t><list style="symbols">

<t>A list of the subscriptions for the presentity. Note that this is already 
taken care of from the size calculation point of view by the subscription state 
above.</t>

<t>Authorization information for the presentity.</t>

</list></t>

<t>For each presentity for which there was any publication and the presentity 
has a state other then a default value, the presence server has to maintain the 
current value of the presentity.</t>

<section title="State Size Calculations">

<t>Assuming the following sizes, the state size is calculated for various systems:</t>

<t><list style="symbols">

<t>Subscription size - 2K bytes. This includes watcher information that 
need to be created by the presence server for each subscription. This is 
for each subscription that is done by each watcher to each presentity that 
the watcher is watching. So if we have 10K watchers we should have 10K of 
these.</t>

<t>Subscribed to resource - 1K bytes (for privacy information and other 
management info). This is for each presentity that is being watched. No 
matter how many watchers are watching it. The subscriptions themselves are 
already calculated in the previous bullet.</t>

<t>Resource with a state - 6K bytes. This is a moderate assumption if we 
take into account the amount of data that is being put in a presence 
document as multiple devices, calendar and geographical information. This 
is for each presentity that has state other then the default empty state. 
It does not matter if it is being watched or not.</t>

</list></t>

<t>Tiny System:</t>

<t><list style="symbols">

<t>10K subscriptions = 19M bytes.</t>

<t>5K subscribed to presentities = 5M bytes.</t>

<t>10K presentities with state = 58M bytes.</t>

</list></t>

<t>The total for tiny system is 82M bytes.</t>

<t>Medium System:</t>

<t><list style="symbols">

<t>100K subscriptions = 195M bytes.</t>

<t>50K subscribed to presentities = 49M bytes.</t>

<t>100K presentities with state = 586M bytes.</t>

</list></t>

<t>The total for medium system is 830M bytes.</t>

<t>Large System:</t>

<t><list style="symbols">

<t>6M subscriptions = 11,718M bytes.</t>

<t>3M subscribed to presentities = 2,929M bytes.</t>

<t>4M presentities with state = 23437M bytes.</t>

</list></t>

<t>The total for large system is 38G bytes.</t>

<t>Very Large System:</t>

<t><list style="symbols">

<t>150M subscriptions = 292,969M bytes.</t>

<t>75M subscribed to presentities = 73,242M bytes.</t>

<t>100M presentities with state = 585,937M bytes.</t>

</list></t>

<t>The total for very large system is 952G bytes which is a very big number for 
a very dynamic storage as needed by the presence server.</t>

<t>Although the numbers above may seem moderate enough for the sizes that the presence server is
handling we should consider the following:</t>

<t><list style="symbols">

<t>Dynamic state - Although the state may seem not so big for databases even for 
the very large system, we need to remember that this state is a very dynamic 
state. Subscriptions come and go all the time, the status of presentities is being 
updated and so forth. This means that the presence server has to manage its 
state in a medium that is very dynamic and for such large sizes this task is not 
trivial.</t>

<t>Interlinked state - The subscriptions and the subscribed to presentities are 
dependent on each other. There needs to be a link from the presentity to the 
subscriptions and vice versa. There is a need to be a linkage between the 
Resource List Server (RLS <xref target="RFC4662" />) and the various presence 
servers that hold the presence data. See section 4.5 in the presence scaling 
document for more details.</t>

<t>Moderate assumptions - The size assumptions that were made above are quite 
moderate. As presence is becoming more a core middleware functionality that holds 
a lot of data on the user. In real-life the numbers above may be even higher and 
the presence server can have additional overhead as managing the SIP sessions, 
networking and more.</t>

</list></t>

<t>Although the calculations above do not show that there is a real issue with 
state management of presence in medium systems or even in big systems since it 
should be possible to divide the state between different machines, the state 
size is still very big. A bigger issue with the state is more when resource 
lists are involved and create an interlinked state between many servers. In that 
case the division of very big state to multiple servers becomes less 
trivial...</t>

</section>

</section>

</section>

<section title="Requirements">

<t>This section lists requirements for a solution that will optimize the 
interdomain presence loads. The requirements are based on the presence scaling 
draft <xref target="I-D.ietf-simple-interdomain-scaling-analysis" />.</t>

<section title="Backward Compatibility Requirements">

<t><list style="symbols">

<t>REQ-001: The solution SHOULD NOT deprecate existing protocol mechanisms 
defined in SIP/SIMPLE. The ability of existing SIP/SIMPLE clients and/or servers from 
peering with a domain or a client implementing the solution SHOULD be retained 
with no changes required of existing servers to interoperate.<vspace 
blankLines='1' /></t>

<t>REQ-002-A: The solution SHOULD NOT constrain any existing RFC functional 
requirements for presence.<vspace blankLines='1' /></t>

<t>REQ-002-B: The solution MUST NOT constrain any existing RFC security 
requirements for presence.<vspace blankLines='1' /></t>

<t>REQ-003: Systems that are not using the new additions to the protocol SHOULD 
operate at the same level as they do today.<vspace blankLines='1' /></t>
</list></t>

</section>

<section title="Policy, Privacy, Permissions Requirements">

<t><list style="symbols">

<t>REQ-004: The solution SHOULD NOT limit the ability for presentities to present 
    different views of presence to different watchers.<vspace blankLines='1' /></t>

<t>REQ-005: The solution SHOULD NOT restrict the ability of a presentity to obtain 
    its list of watchers.<vspace blankLines='1' /></t>

<t>REQ-006: The solution MUST NOT create any new or make worse any existing 
privacy holes.<vspace blankLines='1' /></t>

</list></t>

</section>


<section title="Scalability Requirements">

<t><list style="symbols">

    <t>REQ-007: Presence systems (intra or inter-domain) SHOULD scale in 
    linear proportion to the number of watchers and presentities in the system.<vspace blankLines='1' /></t>

    <t>REQ-008: The solution SHOULD NOT require significantly more state then 
    solutions based on current protocol in order to implement the 
    optimizations.<vspace blankLines='1' /></t>

    <t>REQ-009: The solution MUST allow presence systems to scale. Note: we view scalability on the order of 
    tens of millions of users in each peer domain.<vspace blankLines='1' /></t>

    <t>REQ-010: There may be various usage patterns when users of one domain 
    subscribe to users from another domain. It may be that only small 
    percentage of users from each domain will subscribe to users from the other 
    domain, it may be that most watchers will be from the other domain while 
    there will be few watchers from the same domain. The solution MUST support 
    high percentage of watcher/presentity intersections between the domains and 
    it MUST support various intersection models.<vspace blankLines='1' /></t>

    <t>REQ-011: Protocol changes MUST NOT prohibit optimizations in different 
    deployment models especially where there is a high level of cross subscriptions 
    between the domains.<vspace blankLines='1' /></t>

    <t>REQ-012: New functionalities and extensions to the presence protocol 
    SHOULD take into account scalability with respect to the number of messages, 
    state size and management and processing load.<vspace blankLines='1' /></t>

    </list></t>
    
</section>

<section title="Topology Requirements">

    <t><list style="symbols">

    <t>REQ-013: The solution SHOULD allow for arbitrary federation topologies 
    including direct and indirect peering.<vspace blankLines='1' /></t>


    </list></t>
    
</section>

</section>


<section title="Considerations for Possible Optimizations ">

<t>The document provides an initial list of requirements for a solution of 
scalability of interdomain presence systems using the SIP/SIMPLE protocol. The 
issue of scalability was shown in a separate document <xref target="I-D.ietf-simple-interdomain-scaling-analysis" />.
</t>

<t>The following is a discussion of the various possible paths for optimizations. 
One of the most important considerations is whether there is a need to adapt SIP 
that was designed more as an end to end protocol to be much more optimized when 
presence server interacts directly with another presence server.</t>

<t>It is very possible that the issues that are described in this document are 
inherent to presence systems in general and not specific to the SIP/SIMPLE protocol. 
Organizations need to be prepared to invest substantial resources in the form of 
networks and hardware in order to create sizable systems. However, it is 
apparent that additional protocol optimizations are possible and further work is 
needed in the IETF in order to provide better scalability of large presence 
systems.</t>

<t>We should remember that SIP was originally designed for end to 
end session creation and number and size of messages are of secondary importance 
for an end to end session negotiation protocol. For large scale and especially for very 
large scale presence the number of messages that are needed and the size of each 
message are of extreme importance. Adequate care must be taken in addressing 
scalability as part of the initial protocol design phase; Trying to to 
shoehorn scalability at a later phase will be doomed to failure.</t>

<t>We should also consider whether using the same protocol between clients and 
servers and between servers is a good choice. It may be that in interdomain or 
even between servers in the same domain (as between RLSs  <xref target="RFC4662" 
/>, and presence servers) there is a need to have a different protocol that will 
be very optimized for the load and can assume some assumptions about the network 
(for example do not use unreliable protocol as UDP but only TCP, see the section 
that calculates the number of bytes and messages for imaginary very optimized 
SIP).</t>

<t>When a presence server connects to another server using the current 
SIP/SIMPLE protocol, there will be an extreme number of redundant messages 
due to the overhead in the SIP protocol of supporting both TCP and UDP and due 
to the need to send multiple presence documents for the same watched user 
because of privacy issues. A server to server protocol will have to address 
these issues. Some initial work to address these issues can be found in: <xref target="I-D.ietf-simple-view-sharing"/>
and <xref target="I-D.ietf-simple-intradomain-federation"/>
and in other (still individual) drafts.</t>

<t>Another issue that is more related to protocol design is whether NOTIFY 
messages should not be considered as media just like audio, video and even text 
messaging. The SUBSCRIBE method may be extended to negotiate the route and other 
parameters of the NOTIFY messages, in a similar way that the INVITE method  
negotiates media parameters. This way the load can be offloaded to a 
specialized NOTIFY "relays" thus not loading the control path of SIP. One of the 
possible ideas (Marc Willekens) is to use the SIP protocol for client/server 
NOTIFY but make use of a more optimized and controllable protocol for the 
server-to-server interface. Another possibility is to use the MSRP <xref 
target="RFC4975"/>, <xref target="RFC4976"/> protocol for the notifications.</t> 

<section title="Very Optimized SIP">

<t>SIP is network agnostic protocol, therefore, the protocol carries 
additional messages like 200 OK that would have been redundant in a 
protocol that is  TCP based only.</t>

<t>The following calculation assumes an imaginary TCP only based version of SIP 
that optimizes the following:</t>

<t><list style="symbols">

<t>There is no 200 OK for each message. Since only TCP has to be supported, 
there is not need to compensate for network issues.</t>

<t>There is no refresh for subscriptions.</t>

<t>There is no NOTIFY upon termination of SUBSCRIPTION</t>

<t>The size of each message is smaller since there is no need for the various 
headers that SIP uses for routing etc. So we need to assume smaller message 
sizes while we will keep the size of the presence document the same.</t>

</list></t>

<t>As notes above the calculations in this document do not assume offline 
means of getting parts of the presence information. Therefore, in addition 
to the above optimizations, the other optimizations that were assumed in 
the document will be assumed here also. These includes partial 
notifications and the dialog optimizations. The NOTIFY optimization is not 
relevant here since there are no refreshes of subscriptions.</t>

<t>The following is a calculation for the very large networks peering scenario
assuming the imaginary TCP only SIP. It is very interesting to note that 
the dialog optimization does not reduce the number of bytes when partial 
notification optimization is applied (on the contrary) due to the RLMI overhead.</t>

<figure title="Very large networks peering, TCP only SIP+Partial+Dialog optimizations" anchor="fig12">
<artwork><![CDATA[
** Constants
(C01) Subscription lifetime (hours)...........................8
(C02) Presence state changes / hour...........................6
(C03) Subscription refresh interval / hour....................0
(C04) Total federated presentities per watcher...............10
(C05) Number of dialogs to maintain per watcher...............1
(C06) Total number of watchers in domains............20,000,000
(C07) SUBSCRIBE message size in bytes.......................150
(C08) 200 OK for SUBSCRIBE message size in bytes..............0
(C09) NOTIFY message size not including presence doc........150
(C10) 200 OK for NOTIFY message size in bytes.................0
(C11) Size of an average presence document..................350
(C12) Size of an average partial presence document..........200

** Initial Messages
(I01) Initial SUBSCRIBE msgs per watcher......................1
(I02) Initial 200 OK msgs (SUBSCRIBE) per watcher.............0
(I03) Initial NOTIFY msgs per watcher.........................1
(I04) Initial 200 OK msgs (NOTIFY) per watcher................0
(I05) Total number & bytes of initial SUBSCRIBE msgs
          Number of msgs for all watchers............20,000,000
          Bytes for all watchers..................3,000,000,000
(I06) Total number & bytes of initial 200 OK (SUBSCRIBE) msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(I07) Total number & bytes of initial NOTIFY msgs
          Number of msgs for all watchers............20,000,000
          Bytes for all watchers................136,680,000,000
(I08) Total number & bytes of initial 200 OK (NOTIFY) msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(I09) Total number & bytes of initial messages per day
          Number of msgs for all watchers............40,000,000
          Bytes for all watchers................139,680,000,000

** Steady State Messages
(S01) NOTIFY msgs due to state change
          per watched presentity per day.....................46
(S02) 200 (for NOTIFY due to state change) msgs
          per watched presentity per day......................0
(S03) Total number and size of msgs due to state change per day
          Number of msgs for all watchers.........9,200,000,000
          Bytes for all watchers..............8,666,400,000,000
(S04) Number of SUBSCRIBE msgs for refreshes
          per watcher per day.................................0
(S05) Number of 200 OK msgs for SUBSCRIBE msgs for refreshes
          per watcher per day.................................0
(S06) Number of NOTIFY msgs for refreshes
          per watcher per day.................................0
(S07) Number of 200 OK msgs for NOTIFY msgs for refreshes
          per watcher per day.................................0
(S08) Total number and size of msgs due to SUBSCRIBE refreshes
          Number of msgs for all watchers per day.............0
          Bytes for all watchers per day......................0
(S09) Total number & bytes of steady messages per day
          Number of msgs for all watchers.........9,200,000,000
          Bytes for all watchers..............8,666,400,000,000

** Termination Messages
(T01) Terminating SUBSCRIBE msgs per watcher..................1
(T02) Terminating 200 OK msgs (SUBSCRIBE) per watcher.........0
(T03) Terminating NOTIFY msgs per watcher.....................0
(T04) Terminating 200 OK msgs (NOTIFY) per watcher............0
(T05) Total number & bytes of Terminating SUBSCRIBE msgs
          Number of msgs for all watchers............20,000,000
          Bytes for all watchers..................3,000,000,000
(T06) Total number & bytes of terminating 200 OK (SUBSCRIBE) msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(T07) Total number & bytes of terminating NOTIFY msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(T08) Total number & bytes of terminating 200 OK (NOTIFY) msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(T09) Total number & bytes of terminating messages per day
          Number of msgs for all watchers............20,000,000
          Bytes for all watchers..................3,000,000,000
      
** Bottom Line
(B01) Total of messages between domains...........9,260,000,000
      Total of bytes between domains (PD=350).8,809,080,000,000 
      Total of bytes bet. domains (PD=3000)...9,339,080,000,000 
(B02) Total number of messages / second.................321,528
      Total of bytes per second (PD=350)............305,870,833
      Total of bytes per second (PD=3000)...........324,273,611 
(B03) Total number of by msgs per user/day..................463
      Total number of bytes per user/day (PD=350).......440,454 
      Total number of bytes per user/day (PD=3000)......466,954
<artwork><![CDATA[

]]></artwork></figure>

<figure title="Very large networks peering, TCP only SIP+Partial optimizations" anchor="fig18">
<artwork><![CDATA[
** Constants
(C01) Subscription lifetime (hours)...........................8
(C02) Presence state changes / hour...........................6
(C03) Subscription refresh interval / hour....................0
(C04) Total federated presentities per watcher...............10
(C05) Number of dialogs to maintain per watcher..............10
(C06) Total number of watchers in domains............20,000,000
(C07) SUBSCRIBE message size in bytes.......................150
(C08) 200 OK for SUBSCRIBE message size in bytes..............0
(C09) NOTIFY message size not including presence doc........150
(C10) 200 OK for NOTIFY message size in bytes.................0
(C11) Size of an average presence document..................350
(C12) Size of an average partial presence document..........200

** Initial Messages
(I01) Initial SUBSCRIBE msgs per watcher.....................10
(I02) Initial 200 OK msgs (SUBSCRIBE) per watcher.............0
(I03) Initial NOTIFY msgs per watcher........................10
(I04) Initial 200 OK msgs (NOTIFY) per watcher................0
(I05) Total number & bytes of initial SUBSCRIBE msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers.................30,000,000,000
(I06) Total number & bytes of initial 200 OK (SUBSCRIBE) msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(I07) Total number & bytes of initial NOTIFY msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers................100,000,000,000
(I08) Total number & bytes of initial 200 OK (NOTIFY) msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(I09) Total number & bytes of initial messages per day
          Number of msgs for all watchers...........400,000,000
          Bytes for all watchers................130,000,000,000

** Steady State Messages
(S01) NOTIFY msgs due to state change
          per watched presentity per day.....................46
(S02) 200 (for NOTIFY due to state change) msgs
          per watched presentity per day......................0
(S03) Total number and size of msgs due to state change per day
          Number of msgs for all watchers.........9,200,000,000
          Bytes for all watchers..............3,220,000,000,000
(S04) Number of SUBSCRIBE msgs for refreshes
          per watcher per day.................................0
(S05) Number of 200 OK msgs for SUBSCRIBE msgs for refreshes
          per watcher per day.................................0
(S06) Number of NOTIFY msgs for refreshes
          per watcher per day.................................0
(S07) Number of 200 OK msgs for NOTIFY msgs for refreshes
          per watcher per day.................................0
(S08) Total number and size of msgs due to SUBSCRIBE refreshes
          Number of msgs for all watchers per day.............0
          Bytes for all watchers per day......................0
(S09) Total number & bytes of steady messages per day
          Number of msgs for all watchers.........9,200,000,000
          Bytes for all watchers..............3,220,000,000,000

** Termination Messages
(T01) Terminating SUBSCRIBE msgs per watcher.................10
(T02) Terminating 200 OK msgs (SUBSCRIBE) per watcher.........0
(T03) Terminating NOTIFY msgs per watcher.....................0
(T04) Terminating 200 OK msgs (NOTIFY) per watcher............0
(T05) Total number & bytes of Terminating SUBSCRIBE msgs
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers.................30,000,000,000
(T06) Total number & bytes of terminating 200 OK (SUBSCRIBE) msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(T07) Total number & bytes of terminating NOTIFY msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(T08) Total number & bytes of terminating 200 OK (NOTIFY) msgs
          Number of msgs for all watchers.....................0
          Bytes for all watchers..............................0
(T09) Total number & bytes of terminating messages per day
          Number of msgs for all watchers...........200,000,000
          Bytes for all watchers.................30,000,000,000
      
** Bottom Line
(B01) Total of messages between domains...........9,800,000,000
      Total of bytes between domains (PD=350).3,380,000,000,000 
      Total of bytes bet. domains (PD=3000)...3,910,280,000,000 
(B02) Total number of messages / second.................340,278
      Total of bytes per second (PD=350)............117,361,111
      Total of bytes per second (PD=3000)...........135,763,889 
(B03) Total number of by msgs per user/day..................490
      Total number of bytes per user/day (PD=350).......169,000 
      Total number of bytes per user/day (PD=3000)......195,500

]]></artwork></figure>

</section>

</section>


    <section title="Security Considerations">

    <t>This document discusses scalability requirements for the existing 
    SIP/SIMPLE protocol and model. Many of the changes to the protocol 
    will have security implications as mentioned in some of the requirements 
    above.</t>

    <t>One example of possible protocol changes that may have security 
    implications is sending a presence document only once between domains in 
    order to optimize the number of messages and network load. This possible 
    optimization will delegate privacy protection from one domain to another 
    domain and should be addressed when designing protocol optimizations</t>

    <t>Important part of work on the requirements and optimizations will be to make 
    sure that all the security aspects are covered.</t>

   </section>

	<section title="IANA Considerations">
		<t>This document has no IANA actions.</t>
	</section>
	
    <section title="Acknowledgments">

    <t>We would like to thank Jonathan Rosenberg, Ben Campbell, Markus Isomaki 
    Piotr Boni, David Viamonte, Aki Niemi, Marc Willekens Gonzalo Camarillo for 
    their ideas and input. Special thanks to Jean-Francois Mule, Vijay K. 
    Gurbani and Hisham Khartabil for their a detailed review.</t>

   </section>


   </middle>

    <back>
			<references title="Normative References">
				<?rfc include="reference.RFC.2119" ?>
			</references>
    	<references title="Informational References">
        <?rfc include="reference.RFC.3857" ?>
        <?rfc include="reference.RFC.3858" ?>
        <?rfc include="reference.RFC.4662" ?>
        <?rfc include="reference.RFC.4975" ?>
        <?rfc include="reference.RFC.4976" ?>
     		<?rfc include="reference.I-D.ietf-simple-simple" ?>
    		<?rfc include="reference.I-D.ietf-simple-interdomain-scaling-analysis" ?>
        <?rfc include="reference.I-D.ietf-simple-view-sharing" ?>
        <?rfc include="reference.I-D.ietf-simple-intradomain-federation" ?>
			</references>
    </back>
</rfc>
