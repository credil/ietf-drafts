<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3928 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3928.xml">
<!ENTITY RFC4510 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4510.xml">
<!ENTITY RFC4511 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4511.xml">
<!ENTITY RFC4512 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4512.xml">
<!ENTITY RFC4513 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4513.xml">
<!ENTITY RFC4533 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4533.xml">
<!ENTITY RFC5234 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml">
]>
<rfc category="std" docName="draft-dawkins-ldapext-subnot-02"
     ipr="trust200811">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc="yes" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="yes"?>

  <?rfc iprnotified="no" ?>

  <?rfc strict="yes" ?>

  <?rfc compact="yes" ?>

  <?rfc comments="yes"?>

  <?rfc inline="yes"?>

  <front>
    <title abbrev="LDAP Subscribe/Notify">Subscription/Notification for
    Lightweight Directory Access Protocol (LDAP)</title>

    <author fullname="Peng Xun" initials="P." surname="Xun">
      <organization abbrev="Huawei">Huawei Technologies Co.,
      Ltd.</organization>

      <address>
        <email>xunpeng@huawei.com</email>
      </address>
    </author>

    <author fullname="Spencer Dawkins" initials="S." role="editor"
            surname="Dawkins">
      <organization abbrev="Huawei (USA)">Huawei Technologies
      (USA)</organization>

      <address>
        <phone>+1 214 755 3870</phone>

        <email>spencer@wonderhamster.org</email>
      </address>
    </author>

    <date month="November" year="2009" />

    <area>APP</area>

    <workgroup>Network Working Group</workgroup>

    <abstract>
      <t>This document extends Lightweight Directory Access Protocol (LDAP) to
      support subscription and notification mechanism. An LDAP client can
      subscribe to data of interest available from an LDAP server and receive
      notifications from the LDAP server when this data is updated. By this
      means, an LDAP client can become aware of changes to data of interest in
      a timely manner.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>This document extends the Lightweight Directory Access Protocol
      (LDAP) (<xref target="RFC4510"></xref>, <xref target="RFC4511"></xref>,
      <xref target="RFC4512"></xref>) to allow LDAP clients to subscribe to
      data of interest available from LDAP servers and be notified of changes
      to subscribed data.</t>

      <t>This extension consists of one extended operation and one unsolicited
      notification message. The Subscribe operation is used by the LDAP client
      to subscribe for interested data in LDAP server. When the subscribed
      data are updated, the LDAP server sends the notification message to the
      related LDAP client with required data.</t>
    </section>

    <section title="Background of this Specification">
      <t>3GPP is developing specifications for "User Data Convergence", or
      UDC. (The current service description for UDC is available at
      http://www.3gpp.org/ftp/Specs/archive/22_series/22.101/22101-a00.zip)</t>

      <t>The 3GPPP CT4 technical specification group is considering LDAP as a
      building block for this service, but LDAP lacks a way to meet one key
      requirement (from the 22.101 specification, in section 4.11.1):</t>

      <t><list>
          <t>"Applications can subscribe to specific events which will likely
          occur on specific user data, and those should be notified when those
          events do appear. The events can be changes on existing user data,
          addition of user data, and so on."</t>
        </list></t>

      <t>This extension is intended to meet this specific requirement,
      allowing LDAP to be selected as the building block protocol for UDC.</t>
    </section>

    <section title="Terminology in this Specification">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in RFC 2119. <xref
      target="RFC2119"></xref></t>

      <t>Augmented BNF (<xref target="RFC5234"></xref>) is used in this
      specification.</t>
    </section>

    <section anchor="subscribe" title="The Subscribe Operation">
      <t>The Subscribe operation allows an LDAP client to create a
      subscription to specific data in an LDAP server.</t>

      <section anchor="sub-request" title="The Subscribe Request">
        <t>NOTE TO RFC EDITOR: Please replace all instances of
        "IANA-ASSIGNED-OID" with the actual value assigned by IANA, when this
        value is available.</t>

        <figure>
          <preamble>The Subscribe Request is an LDAPMessage of CHOICE
          extendedReq where the requestName is IANA-ASSIGNED-OID.1. The
          message is defined as follows:</preamble>

          <artwork>

SubscribeReq ::= [APPLICATION 23] SEQUENCE {
	requestName		LDAPOID,
	requestValue		SubscribeRequestValue }

SubscribeRequestValue ::= SEQUENCE {
	subscribeRequestType	ENUMERATED {
		subscribe	(0),
		unsubscribe	(1) }
	subscribeContent	SubscribeContent,
	notifyRestriction	NotifyRestriction OPTIONAL,
	notificationRefData	LDAPString OPTIONAL,
	sendDataIndication 	BOOLEAN,
	expiryTime		GeneralizedTime OPTIONAL }

SubscribeContent ::= SEQUENCE {
	baseObject		LDAPDN,
	subscribeAttributeList	SEQUENCE OF SubscribeAttributes }

SubscribeAttributes ::= SEQUENCE {
	attributes		AttributeSelection,
	operation		SET SIZE(1..3) OF ENUMERATED {
			add	(0),
			modify	(1),
			delete	(2) } }

NotifyRestriction ::= SEQUENCE {
	notifyTo		NotifyReceiver OPTIONAL,
	notifyStart		GeneralizedTime OPTIONAL }

NotifyReceiver ::= SEQUENCE {
	entryDN		LDAPDN,
	attributeName	AttributeDescription }
			</artwork>
        </figure>

        <section title="SubscribeReq.requestValue.subscribeRequestType">
          <t>This field indicates this request is a request to subscribe or
          unsubscribe. The values of this field are: <list style="symbols">
              <t>subscribe: indicates this request is to subscribe to specific
              data in LDAP server</t>

              <t>unsubscribe: indicates this request is to cancel the
              associated subscription</t>
            </list></t>
        </section>

        <section title="SubscribeReq.requestValue.notificationRefData">
          <t>If present, this is an opague block of data that a client sends
          to the server in the Subscribe request and gets back unmodified in
          the Notification response when the notification is triggered.</t>
        </section>

        <section title="SubscribeReq.requestValue.sendDataIndication">
          <t>This indication tells the server whether to return the current
          values of the subscribed attributes listed in subscribeContent in
          the Subscribe response.</t>
        </section>

        <section title="SubscribeReq.requestValue.expiryTime">
          <t>If present, this is the designated time at which the subscription
          expires, specified as GeneralizedTime. If this field is absent, the
          Subscribe request is always valid until the LDAP server receives a
          Subscribe request with the subscribeRequestType set to
          unsubscribe.</t>
        </section>

        <section title="SubscribeReq.subscribeContent">
          <t>The subscriberContent defines the content of a subscription
          request.</t>

          <section title="baseObject">
            <t>This field specifies the name of object entry that LDAP clients
            wish to receive notifications for, when the object entry
            attributes change.</t>
          </section>

          <section title="SubscribeReq.subscribeContent.subscribeAttributeList">
            <t>A subscribeAttributeList lists the selected attributes that the
            LDAP client is interested in.</t>

            <t><list style="symbols">
                <t>attributes: In this field, the selected attributes in the
                entry are listed. If the value of any attribute listed in this
                field is updated, a Notification response is sent to the
                client.</t>

                <t>operation: The value of this field denotes that the client
                is interested in the specific cause that results in the change
                of attribute. In this field, one or more (of the following
                three) operations MUST be listed. <list style="symbols">
                    <t>add: if the attribute is added, the server sends the
                    notification response.</t>

                    <t>modify: if the attribute is modified, the server sends
                    the notification response.</t>

                    <t>delete: if the attribute is deleted, the server sends
                    the notification response.</t>
                  </list></t>
              </list></t>
          </section>
        </section>

        <section title="SubscribeReq.requestValue.notifyRestriction">
          <t>The notifyRestriction describes how the Notice of Data Changed
          Notification is sent.</t>

          <section title="SubscribeReq.requestValue.notifyRestriction.notifyTo">
            <t>This denotes the receiver of a Notice of Data Changed
            Notification of a related Subscribe request. In the Subscribe
            request, an attribute name MAY be designated and the value(s) of
            this attribute contains the specific client(s) name(s) which will
            receive the related Notification. If this field is absent, the
            receiver is the client which issues this Subscribe request.</t>

            <section title="SubscribeReq.requestValue.notifyRestriction.notifyTo.entryDN">
              <t>This field describes the entry in which the designated
              attribute locates.</t>
            </section>

            <section title="SubscribeReq.requestValue.notifyRestriction.notifyTo.attributeName">
              <t>This field denotes the attribute name which contains the
              specific client(s) name(s).</t>
            </section>
          </section>

          <section title="SubscribeReq.requestValue.notifyRestriction.notifyStart">
            <t>The designated time that the Subscribe request comes into
            effect, specified as GeneralizedTime. If this field is absent, the
            Subscribe request is valid when the server receives it.</t>
          </section>
        </section>
      </section>

      <section title="Subscribe Result">
        <t>The results of the Subscribe Request consist of zero or more
        SubscribeResultEntry messages followed by a single SubscribeResultDone
        message.</t>

        <figure>
          <preamble>The SubscribeResultEntry is present if the
          sendDataIndication is set to TRUE in the Subscribe Request. Every
          SubscribeResultEntry represents an entry listed in subscribeContent
          of the Subscribe Request. The SubscribeResultEntry is an
          IntermediateResponse message where the requestName is
          IANA-ASSIGNED-OID.2 and the requestValue is present and contains a
          SubscribeResultData type defined as follows:</preamble>

          <artwork>
SubscribeResultData ::= SEQUENCE {
	objectName		LDAPDN,
	attributes		PartialAttributeList}

PartialAttributeList ::= SEQUENCE OF
	partialAttribute PartialAttribute
			</artwork>
        </figure>

        <figure>
          <preamble>The SubscribeResultDone is an LDAPMessage of CHOICE
          extendedResp where the requestName is IANA-ASSIGNED-OID.3. The
          message is defined as follows:</preamble>

          <artwork>
SubscribeResultDone ::= [APPLICATION 24] SEQUENCE {
	COMPONENTS OF LDAPResult,
	responseName	LDAPOID }
			</artwork>
        </figure>
      </section>

      <section title="Subscription Lifetimes">
        <t>When a client has successfully subscribed for notifications, the
        subscription remains active until either <list style="symbols">
            <t>The subscription expires, at the time specified in expiryTime,
            or</t>

            <t>The client explicitly "unsubscribes".</t>
          </list></t>
      </section>
    </section>

    <section title="The Notification Operation">
      <t>When a client successfully subscribes for notifications, when the
      subscribed data is updated (i.e. added, deleted, modified), the server
      SHALL send the Notification of Data Change message to the required
      client(s) with the data before and after the changes.</t>

      <t>To perform this operation, first, the server SHALL check if the
      actual notification receiver - which is designated in the value of
      parameter SubscribeReq.requestValue.notifyRestriction.notifyTo - is
      valid.</t>

      <t>Second, the server SHALL check if the notification receiver is
      permitted to receive the data according to the access control mechanism
      of LDAP. Then the server SHALL send the notification message after all
      the checks are done.</t>

      <t>The Notice of Data Change is an Unsolicited Notification as defined
      in <xref target="RFC4511"></xref>. The responseName field of the Notice
      of Data Changed message is IANA-ASSIGNED-OID.4 and the responseValue is
      present and contains a BER-encoded NotifyResponseValue.</t>

      <figure>
        <artwork>

NotifyResponseValue ::= SEQUENCE {
	notificationID		INTEGER (0 ..  maxInt),
	notificationRefData	LDAPString OPTIONAL,
	notifyContent		SEQUENCE OF NotifyEntry }

NotifyEntry ::= SEQUENCE {
	baseObject		LDAPDN,
	notifyAttributeList	SEQUENCE OF NotifyAttribute }

NotifyAttribute ::= SEQUENCE {
	state			ENUMERATED {
			add	(0),
			modify	(1),
			delete	(2) }
	attributeType		AttributeDesciption,
	newValue [0] SET OF value AttributeValue OPTIONAL,
	oldValue [1] SET OF value AttributeValue OPTIONAL
}
		</artwork>
      </figure>

      <t>Fields of the Notice of Data Changed message are: <list
          style="numbers">
          <t>notificationID: notification identifier which is the unique
          identifier of the notification operation.</t>

          <t>notificationRefData: server returns the same notificationRefData
          as received in the related Subscribe Request to the Notification of
          Data Change message.</t>

          <t>notificationContent: the detailed data which has been
          updated.</t>

          <t>state: denotes the operation that changed the attribute, i.e. the
          attribute has been added, deleted, or modified.</t>

          <t>attributeType: denotes which attribute is changed.</t>

          <t>newValue: the new value of the attribute after change.</t>

          <t>oldValue: the original value of the attribute before change.</t>
        </list></t>

      <t>The server sends the Notification of Data Change message and waits
      for the acknowledge from the clients.</t>
    </section>

    <section title="The notification Acknowledge Operation">
      <t>The Notification Acknowledge Operation is intended to response the
      notification sent by LDAP server. The Notification Acknowledge is an
      LDAPMessage of CHOICE extendedReq where the requestName is
      IANA-ASSIGNED-OID.5 The requestValue is information in the form of
      NotificatinAckValue, encapsulated inside an OCTET STRING.</t>

      <figure>
        <artwork>NotificationAckValue ::= SEQUENCE {
	notificationID	INTEGER	(0 ..  maxInt),
	resultCode		ENUMERATED	{
			success	(0),
			failure	(1),
}</artwork>
      </figure>

      <t>Fields of the Notification Acknowledge message are:<list
          style="numbers">
          <t>notificationID: notification identifier which is same as the
          value of notificationID denoted in the Notification Operation.</t>

          <t>resultCode: the result of Notification Operation.</t>
        </list></t>

      <t>There is no response defined in the notification acknowledge
      operation. Upon receipt of an notification acknowledge, if failure is
      indicated and any other client is available, the server selects another
      available client and sends the notification to the selected client.
      Otherwise, the server terminites the process of notification.</t>
    </section>

    <section title="Differences From Existing LDAP Synchronization Extensions">
      <t>LDAP already provides extension (LDAP Content Sync <xref
      target="RFC4533"></xref>, LCUP in RFC 3928 <xref
      target="RFC3928"></xref>, and Persistent Search in the now-expired
      draft-smith-psearch-ldap-01) that might be used to to notify an LDAP
      client of changes to data of interest stored on an LDAP server. We
      proposed a new SUBSCRIBE/NOTIFY extension to satisfiy the following
      requirements.</t>

      <t><list style="numbers">
          <t>This mechanism does not require a persistent LDAP session in
          order to notify the LDAP client of changes to data of interest in a
          timely manner. We believe this is a useful advantage when large
          numbers of LDAP clients wish to subscribe for notifications.</t>

          <t>In current LDAP mechanisms, the server will notify the client of
          all changes but the client may require notifications only for
          changes which meet some condition, such as addition, modification or
          deletion.</t>

          <t>Current LDAP mechanisms are used to synchronize the data copy in
          the LDAP client to the server, so in the first phase the server will
          return all of the data by default. But in some case the client only
          needs to discover what has changed, and doesn't need to receive all
          of the data.</t>
        </list></t>

      <t>The Subscribe/Notify mechanism allows the LDAP Server to notify
      Clients of changes in real-time, and LDAP Server doesn't need to
      maintain many simultaneous LDAP sessions.</t>
    </section>

    <section anchor="sec" title="Security Considerations">
      <t>SUBSCRIBE/NOTIFY has enough in common with <xref
      target="RFC4533"></xref> and <xref target="RFC3928"></xref> to share
      many of the same security considerations - we have reused text from both
      <xref target="RFC4533"></xref> and <xref target="RFC3928"></xref> in
      this specification.</t>

      <t>General security considerations in <xref target="RFC4510"></xref>,
      especially those associated with update operations in <xref
      target="RFC4511"></xref>, apply to this extension.</t>

      <t>General security considerations in <xref target="RFC4513"></xref>
      also apply to this extension.</t>

      <t>In some situations, it may be important to prevent general exposure
      of information about changes that occur in an LDAP server. Therefore,
      servers that implement the mechanism described in this document SHOULD
      provide a means to enforce access control on the entries returned and
      MAY also provide specific access control mechanisms to control the use
      of the controls and extended operations defined in this document.</t>

      <t>The operation may be the target of direct denial-of-service attacks.
      Implementors should provide safeguards to ensure the operation is not
      abused. Servers may place access control or other restrictions upon the
      use of this operation.</t>

      <t>Note that even small updates to the directory may cause a significant
      amount of traffic to be generated to clients using this operation. A
      user could abuse its update privileges to mount an indirect denial of
      service to these clients, other clients, and/or portions of the network.
      Servers should provide safeguards to ensure that update operations are
      not abused.</t>
    </section>

    <section anchor="iana" title="IANA Considerations">
      <t>It is requested that Internet Assigned Numbers Authority (IANA) make
      the following assignment:</t>

      <t><figure>
          <artwork>
Subject: Request for LDAP Protocol Mechanism Registration
Object Identifier: see table
Description: see table
Person and email address to contact for further information:
	Peng Xun xunpeng@huawei.com

NOTE TO RFC EDITOR: Please replace all instances of 
			XXXX with the RFC number 
			for this specification when it is 
			assigned.
Specification: RFC XXXX

Author/Change Controller: IESG

Comments:

Object Identifier   Type Description
------------------- ---- -------------------------
IANA-ASSIGNED-OID.1  E	Subscribe Extended Request
IANA-ASSIGNED-OID.2  E	SubscribeResultEntry Extended 
                                 IntermediateResponse
IANA-ASSIGNED-OID.3  E	SubscribeResultDone Extended 
                                 Response
IANA-ASSIGNED-OID.4  N	Notice of Data Changed
IANA-ASSIGNED-OID.5  E	Notification Acknowledge Extended Request

Legend
---------------------------------------------------
E =&gt; supportedExtension
N =&gt; Unsolicited Notice
			</artwork>
        </figure></t>
    </section>

    <section title="Acknowledgements">
      <t>The authors would like to thank Ludovic Poitou, Steven Legg, Alexey
      Melnikov, and Kurt Zeilenga, who provided feedback on the previous
      version of this draft.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &RFC2119;

      &RFC4510;

      &RFC4511;

      &RFC4512;

      &RFC4513;

      &RFC5234;
    </references>

    <references title="Informative References">
      &RFC3928;

      &RFC4533;
    </references>
  </back>
</rfc>
