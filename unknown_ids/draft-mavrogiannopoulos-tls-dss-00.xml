<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
     
<!ENTITY RFC4880 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.4880.xml">
<!ENTITY RFC2246 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.2246.xml">
<!ENTITY RFC5081 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5081.xml">
<!ENTITY RFC5246 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY RFC5226 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY RFC2119 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6066 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.6066.xml">
<!ENTITY RFC5280 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
]>
     
<?rfc rfcedstyle="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no" ?>
<?rfc toc="no"?>
<?rfc symrefs="yes"?>

<rfc category="std" ipr="trust200902" docName="draft-mavrogiannopoulos-tls-dss-00" submissionType="IETF">
   <front>
      <title abbrev="TLS with DSA and ECDSA">Using transport layer security (TLS) with DSA and ECDSA ciphersuites</title>
      <author initials="N." surname="Mavrogiannopoulos" fullname="Nikos
      Mavrogiannopoulos">
         <organization abbrev="KUL">ESAT/COSIC Katholieke Universiteit Leuven</organization>
         <address>
            <postal>
               <street>Kasteelpark Arenberg 10, bus 2446</street>
               <city>Leuven-Heverlee</city>
               <region></region>
               <code>B-3001</code>
               <country>Belgium</country>
            </postal>
            <email>nikos.mavrogiannopoulos@esat.kuleuven.be</email>
<!--            <email>nmav@gnutls.org</email>-->
<!--            <uri>http://www.gnutls.org/</uri>-->
         </address>
      </author>

      <date month="June" year="2011"/>
      <area>Security</area>

<!-- [rfced] Please note that after you have approved the document,
post-xml2rfc changes will be made to update the header and boilerplate as
described in RFC 5741. -->

      <abstract>
         <t>
This memo clarifies the usage of the digital signature algorithm (DSA)
with extended key lengths, in the transport layer security (TLS) protocol
earlier than 1.2, and makes clarifications for the usage of DSA and 
its elliptic curves equivalent (ECDSA) in TLS 1.2.
         </t>
      </abstract>
   </front>

   <middle>
      <section anchor="intro" title="Introduction">
        <t>
          The TLS protocols support the DSA algorithm even from 
          its first incarnation in <xref target="RFC2246"/>. However
          the latest DSA publication from NIST at <xref target="DSS"/>,
          suggests some changes that do not straightforwardly apply
          to the TLS protocols.
        </t>
        <t>
          In this document we describe the differences on the new 
          DSS algorithms<xref target="DSS"/>, and define a profile for
          TLS implementations.
        </t>
     </section>

     <section anchor="terms" title="Terminology">
        <t>
         This document uses the same notation and terminology used in the TLS Protocol specification
         <xref target="RFC5246"/>.
        </t>
        <t>
         The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
         NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
         "OPTIONAL" in this document are to be interpreted as described in
         <xref target="RFC2119"/>.
        </t>
      </section>

      <section anchor="fips" title="DSA in FIPS-186-3">
        <t>
          In this section we discuss the differences between the old DSS
          publication <xref target="OLDDSS"/> and the new one 
          <xref target="DSS"/>, that justify the need for a TLS profile.
        </t>
        <t>
          DSA parameters include a prime modulus p and a prime divisor
          of p-1 called q. In <xref target="OLDDSS"/> the bit length of p
          was fixed to 1024 bits, the length of q to 160 bits and
          the underlying hash algorithm was fixed to SHA-1.
          However the DSA algorithm in <xref target="DSS"/> allows more lengths 
          for p and q, as well different hash algorithms, than the older 
          version which is currently referred by TLS protocols.
        </t>
        <t>
          The new document relies on the "bits of security" term defined in <xref target="SP800-57"/>,
          and recommends that security strength of the hash algorithm matches
          the security strength of other DSA parameters. It is required either
          the bits of the hash algorithm to match the bits of length of q (N),
          or if the hash size is larger, only the N leftmost bits of the hash output are being used.
          The corresponding mappings are shown in <xref target="hash_table"/>
          and <xref target="n_table"/>.
        </t>
        <texttable anchor='hash_table'>
              <preamble></preamble>
              <ttcol align='center'>Hash algorithm</ttcol>
              <ttcol align='center'>Hash size</ttcol>
              <ttcol align='center'>Bits of security</ttcol>
              <c>SHA-1</c><c>160</c><c>80</c>
              <c>SHA-224</c><c>224</c><c>112</c>
              <c>SHA-256</c><c>256</c><c>128</c>
              <c>SHA-384</c><c>384</c><c>192</c>
              <c>SHA-512</c><c>512</c><c>256</c>
              <postamble></postamble>
        </texttable>
        <texttable anchor='n_table'>
              <preamble></preamble>
              <ttcol align='center'>Length of p (L)</ttcol>
              <ttcol align='center'>Length of q (N)</ttcol>
              <ttcol align='center'>Bits of security</ttcol>
              <ttcol align='center'>Matching hash algorithms</ttcol>
              <c>1024</c><c>160</c><c>80</c><c>SHA-1, SHA-224, SHA-256, SHA-384, SHA-512</c>
              <c>2048</c><c>224</c><c>112</c><c>SHA-224, SHA-256, SHA-384, SHA-512</c>
              <c>2048</c><c>256</c><c>(112,128)</c><c>SHA-256, SHA-384, SHA-512</c>
              <c>3072</c><c>256</c><c>128</c><c>SHA-256, SHA-384, SHA-512</c>
              <postamble></postamble>
        </texttable>
      </section>
       
      <section anchor="tls1" title="The SSL 3.0, TLS 1.0 and 1.1 protocols">
        <t>
          The SSL 3.0, TLS 1.0 and 1.1 protocols support ciphersuites that utilize the DSA
          algorithms for signing. The digital signatures are used
          for the "Server key exchange" and "Certificate verify" messages. 
          In those messages there is no indication of the signature algorithm used, thus
          the selection is implicit. The signature contained in both messages
          is defined, for the DSA algorithm, as:
        </t>
        <figure>
        <artwork><![CDATA[
       select (SignatureAlgorithm)
       {
           case dsa:
               digitally-signed struct {
                   opaque sha_hash[20];
               };
       } Signature;
]]></artwork></figure>
        <t>
          This structure refers to the DSA algorithm with L=1024 and N=160,
          but this is not an explicit requirement of those protocols and
          several existing implementations are using the SHA-1 algorithm for all 
          DSA key sizes. For this reason it is RECOMMENDED not to use DSA keys
          of sizes other than L=1024 and N=160 in combination with those protocols.
        </t>
        <t>
          If however keys of sizes larger than L=1024 and N=160 have
          to be used, then the SHA-1 algorithm has to be used.
        </t>
<!--        <figure>
        <artwork><![CDATA[
       uint8 hash_size;

       select (SignatureAlgorithm)
       {
           case dsa:
               digitally-signed struct {
                   opaque sha_hash[hash_size];
               };
       } Signature;
]]></artwork></figure>
        <t>
        <list style='hanging'>
          <t hangText="hash_size">
          This corresponds to the hash size of the algorithm, that
          is selected using the DSA parameters information as in 
          <xref target="tls1_hash_table"/>.
          </t>
        </list>
        </t>
        <t>
          When an implementation is using DSA keys with other sizes than
          the allowed by <xref target="OLDDSS"/> the method above MUST
          be used.
        </t>
-->
        </section>
      <section anchor="tls12" title="The TLS protocol 1.2">
        <t>
          This version of the protocol also requires signatures for the
          "Server key exchange" and "Certificate verify" messages. However
          in this version signature algorithm negotiation is explicit via 
          the "Signature algorithms" extension. The signature used is as
          below:
        </t>
        <figure>
        <artwork><![CDATA[
      struct {
         SignatureAndHashAlgorithm algorithm;
         opaque signature<0..2^16-1>;
      } DigitallySigned;
]]></artwork></figure>

	<section anchor="tls12-dsa" title="DSA">
        <t>
          In this case a signature algorithm should be selected that matches
          the requirements as in <xref target="tls1_hash_table"/>.
          Implementations SHOULD select the algorithms shown on that table.
        </t>
        <texttable anchor='tls1_hash_table'>
              <preamble></preamble>
              <ttcol align='center'>Length of p in bits</ttcol>
              <ttcol align='center'>Length of q in bits</ttcol>
              <ttcol align='center'>Hash algorithm</ttcol>
              <ttcol align='center'>Hash size</ttcol>
              <ttcol align='center'>Truncated hash size</ttcol>
              <c>1024</c><c>160</c><c>SHA-1</c><c>20</c><c>20</c>
              <c>2048</c><c>224</c><c>SHA-256</c><c>32</c><c>28</c>
              <c>2048</c><c>256</c><c>SHA-256</c><c>32</c><c>32</c>
              <c>3072</c><c>256</c><c>SHA-256</c><c>32</c><c>32</c>
              <postamble></postamble>
        </texttable>
        <t>
          Note: When the hash size does not match the length of q, then
          only the leftmost bytes of the hash, that match
          the length of q, are used. This is indicated in the "Truncated hash size"
          column of the table.
        </t>
        <t>
          Note: SHA-224 is not used to allow servers that do not cache
          all messages up to "Certificate verify" to carry a single SHA-256
          hash state instead. SHA-224 and SHA-256
          have the exact same security properties, because SHA-224 is 
          a truncated SHA-256 (with a different internal start value).
        </t>
        </section>

	<section anchor="tls12-ecdsa" title="ECDSA">
        <t>
          In this case a signature algorithm should be selected that matches
          the requirements as in <xref target="ecdsa_table"/>.
          Implementations SHOULD select the algorithms shown on that table.
        </t>
        <texttable anchor='ecdsa_table'>
              <preamble></preamble>
              <ttcol align='center'>ECDSA key size</ttcol>
              <ttcol align='center'>Hash algorithm</ttcol>
              <ttcol align='center'>Hash size</ttcol>
              <ttcol align='center'>Truncated hash size</ttcol>
              <c>192</c><c>SHA-256</c><c>32</c><c>24</c>
              <c>224</c><c>SHA-256</c><c>32</c><c>28</c>
              <c>256</c><c>SHA-256</c><c>32</c><c>32</c>
              <c>384</c><c>SHA-384</c><c>48</c><c>48</c>
              <c>512</c><c>SHA-512</c><c>64</c><c>64</c>
              <postamble></postamble>
        </texttable>
        <t>
          Note: As with DSA, when the hash size does not match the curve length,
          only the leftmost bytes of the hash are used. This size is shown in the "Truncated hash size"
          column of the table.
        </t>
        </section>
      </section>

      <section anchor="illegal-params" title="Parameters not allowed by DSS">
        <t>
          TLS implementations MUST NOT support parameter lengths not allowed 
          by <xref target="DSS"/>. If illegal parameters are encountered,
          the handshake should be aborted using an "illegal_parameter" alert.
        </t>
        <!--<t>
          It is RECOMMENDED that only DSA parameter lengths allowed 
          by <xref target="DSS"/> are supported by implementations.
        </t>
        <t>
          However if they are used then
          the hash algorithm from the SHA family as in <xref target="hash_table"/>
          that has hash size corresponding to the length of q, MUST be used.
        </t>-->
      </section>

      <section anchor="security" title="Security Considerations">
        <t>
          When DSA keys are being used in connections that involve the SSL 3.0,
          TLS 1.0 or TLS 1.1 protocols then the entire connection security
          depends on the SHA-1 algorithm. This is about 80-bits of security
          irrespective of the sizes of the DSA keys.
        </t>
        <t>
          All security considerations discussed in <xref target="RFC5246"/>, 
          apply to this document.
        </t>
      </section>

      <!--
      <section title="Acknowledgements">
        <t>
        </t>
      </section>
      -->

   </middle>

   <back>
    <references title="Normative References">
        <reference anchor='DSS'>
        <front>
            <title>Digital Signature Standard</title>
            <author><organization>NIST FIPS PUB 186-3</organization>
            </author>

            <date month='June' year='2009' />
        </front>
        <seriesInfo name="National Institute of Standards and Technology, U.S.
        Department of Commerce" value=""/>
    </reference>
   &RFC2119;
   &RFC5246;
  </references>

  <references title="Informative References">
    <reference anchor='OLDDSS'>
    <front>
        <title>Digital Signature Standard</title>
        <author><organization>NIST FIPS PUB 186</organization>
        </author>

        <date day="18" month='May' year='1994' />
    </front>
    <seriesInfo name="National Institute of Standards and Technology, U.S.
    Department of Commerce" value=""/>
    </reference>

    <reference anchor='SP800-57'>
    <front>
        <title>Recommendation for Key Management</title>
        <author><organization>NIST FIPS SP 800-57</organization>
        </author>

        <date month='March' year='2007' />
    </front>
    <seriesInfo name="National Institute of Standards and Technology, U.S.
    Department of Commerce" value=""/>
    </reference>

   &RFC2246;
  </references>

  </back>
</rfc>
