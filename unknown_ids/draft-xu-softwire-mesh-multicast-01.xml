<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes" symrefs="no" ?>
<rfc docName="draft-xu-softwire-mesh-multicast-01" ipr="pre5378Trust200902">
  <front>
    <title abbrev="softwire mcast framework">Softwire Mesh Multicast</title>

    <author fullname="Mingwei Xu" initials="M" surname="Xu">
      <organization>Tsinghua University</organization>

      <address>
        <postal>
          <street>Department of Computer Science, Tsinghua University</street>

          <city>Beijing</city>

          <code>100084</code>

          <country>P.R.China</country>
        </postal>

        <phone>+86-10-6278-5822</phone>

        <email>xmw@csnet1.cs.tsinghua.edu.cn</email>
      </address>
    </author>

    <author fullname="Yong Cui" initials="Y" surname="Cui">
      <organization>Tsinghua University</organization>

      <address>
        <postal>
          <street>Department of Computer Science, Tsinghua University</street>

          <city>Beijing</city>

          <code>100084</code>

          <country>P.R.China</country>
        </postal>

        <phone>+86-10-6278-5822</phone>

        <email>cuiyong@tsinghua.edu.cn</email>
      </address>
    </author>

    <author fullname="Shu Yang" initials="Shu" surname="Yang">
      <organization>Tsinghua University</organization>

      <address>
        <postal>
          <street>Department of Computer Science, Tsinghua University</street>

          <city>Beijing</city>

          <code>100084</code>

          <country>P.R.China</country>
        </postal>

        <phone>+86-10-6278-5822</phone>

        <email>yangshu@csnet1.cs.tsinghua.edu.cn</email>
      </address>
    </author>

    <author fullname="Chris Metz" initials="Chris" surname="Metz">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>170 West Tasman Drive</street>

          <city>San Jose, California</city>

          <code>95134-1706</code>

          <country>USA</country>
        </postal>

        <phone>+1-408-525-3275</phone>

        <email>chmetz@cisco.com</email>
      </address>
    </author>

    <author fullname="Greg Shepherd" initials="greg" surname="Shepherd">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>170 West Tasman Drive</street>

          <city>San Jose, California</city>

          <code>95134</code>

          <country>USA</country>
        </postal>

        <phone>+1-541-912-9758</phone>

        <email>shep@cisco.com</email>
      </address>
    </author>

    <date month="March" year="2011" />

    <abstract>
      <t>The Internet will need to support IPv4 and IPv6 packets.  Both address
      families and their attendent protocol suites support multicast of the
      single-source and any-source varieties.  As part of the transition to
      IPv6, there will be scenarios where a backbone network running one IP
      address family internally (referred to as internal IP or I-IP) will
      provide transit services to attached client networks running another IP
      address family (referred to as external IP or E-IP).  It is expected that
      the I-IP backbone will offer unicast and multicast transit services to
      the client E-IP networks.</t>

      <t>Softwires Mesh is a solution for supporting E-IP unicast and
      multicast across an I-IP backbone.  This document describes the
      mechanisms for suppporting Internet-style multicast across a set of
      E-IP and I-IP networks supporting softwires mesh.</t>

      <t></t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t></t>

      <t>The Internet will need to support IPv4 and IPv6 packets.  Both address
      families and their attendent protocol suites support multicast of the
      single-source and any-source varieties.  As part of the transition to
      IPv6, there will be scenarios where a backbone network running one IP
      address family internally (referred to as internal IP or I-IP) will
      provide transit services to attached client networks running another IP
      address family (referred to as external IP or E-IP).</t>

      <t>The preferred solution is to leverage the multicast functions,
      inherent in the I-IP backbone, to efficiently and scalably tunnel
      encapsulated client E-IP multicast packets inside an I-IP core tree
      rooted at one or more ingress AFBR nodes and branching out to one or
      more egress AFBR leaf nodes.</t>

      <t><xref target="RFC4925"></xref> outlines the requirements for the
      softwires mesh scenario including multicast.  It is straightforward to
      envisage that client E-IP multicast sources and receivers will reside in
      different client E-IP networks connected to an I-IP backbone network.  This requires that the client E-IP source-rooted or shared tree will
      need to traverse the I-IP backbone network.</t>

      <t>One method to accomplish this is to re-use the multicast VPN approach
      outlined in <xref target="I-D.ietf-l3vpn-2547bis-mcast"></xref>.  MVPN-like schemes can
      support the softwire mesh scenario and achieve a "many-to-one" mapping
      between the E-IP client multicast trees and transit core multicast
      trees.  The advantage of this approach is that the number of trees in the
      I-IP backbone network scales less than linearly with the number of E-IP
      client trees.  Corporate enterprise networks and by extension multicast
      VPNs have been known to run applications that create a large amount of
      (S,G) states.  Aggregation at the edge contains the (S,G) states that need
      to be maintained by the network operator supporting the customer VPNs.
      The disadvantage of this approach is possible inefficient bandwidth and
      resource utilization if multicast packets are delivered to a receiver
      AFBR with no attached E-IP receiver.</t>

      <t>Internet-style multicast is a somewhat different in that the trees
      tends to be relatively sparse and source-rooted.  The need for multicast
      aggregation at the edge (where many customer multicast trees are mapped
      into a few or one backbone multicast trees) does not exist and to date
      has not been identified.  Thus the need for a basic or closer alignment
      with E-IP and I-IP multicast procedures emerges. </t>

      <t>A framework on how to support such methods is discribed in <xref
      target="RFC5565"></xref>.  In this document, a more detailed discussion
      supporting the "one-to-one" mapping schemes for the IPv6 over IPv4 and
      IPv4 over IPv6 scenarios will be discussed.</t>
    </section>

    <section title="Terminology">
      <t>An example of a softwire mesh network supporting multicast is
      illustrated in Figure 1.  A multicast source S is located in one E-IP
      client network, while candidate E-IP group receivers are located in the
      same or different E-IP client networks that all share a common I-IP
      transit network.  When E-IP sources and receivers are not local to each
      other, they can only communicate with each other through the I-IP core.
      There may be several E-IP sources for some multicast group residing in
      different client E-IP networks.  In the case of shared trees, the E-IP
      sources, receivers and RPs might be located in different client E-IP
      networks.  In the simple case the resources of the I-IP core are managed
      by a single operator although the inter-provider case is not
      precluded.</t>

      <figure>
        <artwork><![CDATA[
                         ._._._._.            ._._._._.
                        |         |          |         |   --------
                        |  E-IP   |          |  E-IP   |--|Source S|
                        | network |          | network |   --------
                         ._._._._.            ._._._._.
                            |                    |
                           AFBR             upstream AFBR
                            |                    |
                          __+____________________+__
                         /   :   :           :   :  \
                        |    :      :      :     :   |  E-IP Multicast
                        |    : I-IP transit core :   |  message should
                        |    :     :       :     :   |  get across the
                        |    :   :            :  :   | I-IP transit core
                         \_._._._._._._._._._._._._./
                             +                   +
                        downstream AFBR    downstream AFBR
                             |                    |
                          ._._._._            ._._._._
             --------    |        |          |        |   --------
            |Receiver|-- |  E-IP  |          |  E-IP  |--|Receiver|
             --------    |network |          |network |   --------
                          ._._._._            ._._._._


           ]]></artwork>

        <postamble>Figure 1: Softwire Mesh Multicast Framework</postamble>
      </figure>

      <t></t>

      <t>Terminology used in this document:</t>

      <t>o Address Family Border Router (AFBR) - A dual-stack router
      interconnecting two or more networks using different IP address
      families.  In the context of softwires mesh multicast, the AFBR runs E-IP
      and I-IP control planes to maintain E-IP and I-IP multicast state
      respectively and performs the appropriate encapsulation/decapsulation
      client E-IP multicast packets for transport across the I-IP core.  An
      AFBR will can act as a source and/or receiver in an I-IP multicast
      tree.</t>

      <t>o Upstream AFBR: The AFBR routers that are located at the upstream of
      multicast data flow.</t>

      <t>o Downstream AFBR: The AFBR routers that are located at the
      downstream of multicast data flow.</t>

      <t>o I-IP (Internal IP).  This refers to the form of IP (i.e., either
      IPv4 or IPv6) that is supported by the transit (or backbone)
      network.</t>

      <t>o E-IP (External IP) This refers to the form of IP (i.e. either IPv4
      or IPv6) that is supported by the client network(s) attached to the I-IP
      transit core.  An E-IPv6 client network runs IPv6 and an E-IPv4 client
      network runs IPv4.</t>

      <t>o I-IP core tree.  A single-source or multi-source distribution tree
      rooted at one or more AFBR source nodes and branching out to one or more
      AFBR leaf nodes.  An I-IP core Tree is built using standard IP or MPLS
      multicast signaling protocols operating exclusively inside the I-IP core
      network.  An I-IP core Tree is used to tunnel E-IP multicast packets
      belonging to E-IP trees across the I-IP core.  Another name for an I-IP
      core Tree is multicast or multipoint softwire.  An I-IPv6 core network
      runs IPv6 and an I-IPv4 core network runs IPv4.</t>

      <t>o E-IP client tree.  A single-source or multi-source distribution tree
      rooted at one or more hosts or routers located inside a client E-IP
      network and branching out to one or more leaf nodes located in the same
      or different client E-IP networks.</t>

      <t></t>
    </section>

    <section title="Scenarios of Interest">
      <t></t>

      <t>This section describes the two different scenarios where softwires
      mesh multicast will apply.</t>

      <section title="IPv6-over-IPv4 ">
        <figure>
          <artwork><![CDATA[
                         ._._._._.            ._._._._.
                        |  IPv6   |          |  IPv6   |   --------
                        | Client  |          | Client  |--|Source S|
                        | network |          | network |   --------
                         ._._._._.            ._._._._.
                            |                    |
                           AFBR             upstream AFBR
                            |                    |
                          __+____________________+__
                         /   :   :           :   :  \
                        |    :      :      :     :   |  
                        |    : IPv4 transit core :   | 
                        |    :     :       :     :   |  
                        |    :   :            :  :   | 
                         \_._._._._._._._._._._._._./
                             +                   +
                        downstream AFBR    downstream AFBR
                             |                    |
                          ._._._._            ._._._._
             --------    |  IPv6  |          |  IPv6  |   --------
            |Receiver|-- | Client |          | Client |--|Receiver|
             --------    |network |          | network|   --------
                          ._._._._            ._._._._


           ]]></artwork>

          <postamble>Figure 2: IPv6-over-IPv4 Scenario</postamble>
        </figure>

        <t>In this scenario, the E-IP Client Networks run IPv6 while the I-IP
        core runs IPv4 and is illustrated in Figure 2.</t>

        <t>IPv6 multicast group addresses are longer than IPv4 multicast group
        addresses.  It will not be possible to perform an algorithmic IPv6 - to
        - IPv4 address mapping without the risk of multiple IPv6 group
        addresses mapped to the same IPv4 address resulting in unnecessary
        bandwidth and resource consumption.  Therefore additional effort in the
        form of inter-AFBR signaling will be required to ensure client E-IPv6
        multicast packets are injected into the correct I-IPv4 multicast trees
        at the AFBRs.  This clear mismatch in IPv6 and IPv4 group address
        lengths means that it will not be possible to perform a "one to one"
        mapping between IPv6 and IPv4 group addresses unless the IPv6 group
        address is scoped.</t>

        <t>As mentioned earlier this scenario is common the MVPN environment.
        As native IPv6 deployments and multicast applications emerge from the
        outer reaches of the greater public IPv4 Internet, it is envisaged
        that the IPv6 over IPv4 softwires mesh multicast scenario will be a
        necessary feature supported by networks operators. </t>
      </section>

      <section title="IPv4-over-IPv6">
        <figure>
          <artwork><![CDATA[
                         ._._._._.            ._._._._.
                        |  IPv4   |          |  IPv4   |   --------
                        | Client  |          | Client  |--|Source S|
                        | network |          | network |   --------
                         ._._._._.            ._._._._.
                            |                    |
                           AFBR             upstream AFBR(A)
                            |                    |
                          __+____________________+__
                         /   :   :           :   :  \
                        |    :      :      :     :   |  
                        |    : IPv6 transit core :   | 
                        |    :     :       :     :   |  
                        |    :   :            :  :   | 
                         \_._._._._._._._._._._._._./
                             +                   +
                        downstream AFBR(C)  downstream AFBR(D)
                             |                    |
                          ._._._._            ._._._._
             --------    |  IPv4  |          |  IPv4  |   --------
            |Receiver|-- | Client |          | Client |--|Receiver|
             --------    |network |          | network|   --------
                          ._._._._            ._._._._


           ]]></artwork>

          <postamble>Figure 3: IPv4-over-IPv6 Scenario</postamble>
        </figure>

        <t>In this scenario, the E-IP client networks run IPv4 and I-IP core
        runs IPv6.  This scenario is illustrated in Figure 3.</t>

        <t>Because of the much larger IPv6 group address space, it will not be
        a problem to map individual client E-IPv4 trees to a specific I-IPv6
        core tree.  This simplifies operations on the AFBR because it becomes
        possible to algorithmically map an IPv4 group/source address to an IPv6 group/source
        address and vice-versa. </t>

        <t>The IPv4-over-IPv6 scenario is an emerging requirement as network
        operators build out native IPv6 backbone networks.  These networks
        naturally will support native IPv6 services and applications but it is
        with near 100% certainty that legacy IPv4 networks handling unicast
        and multicast will need to be accomodated. </t>

        <t></t>
      </section>
    </section>

    <section title="IPv4-over-IPv6 ">
      <section title="Mechanism">
        <t>Routers in the client E-IPv4 networks contain routes to all other
        client E-IPv4 networks.  Through the set of known and deployed
        mechanisms, E-IPv4 hosts and routers have discovered or learned of
        (S,G) or (*,G) IPv4 addresses.  Any I-IP multicast state instantiated
        in the core is referred to as (S',G') or (*,G') and is of course
        separate from E-IP multicast state.</t>

        <t>Suppose a downstream AFBR D receives an E-IPv4 PIM Join/Prune
        message from the E-IPv4 network for either an (S,G) tree or a (*,G)
        tree.  The AFBR D router can translate the E-IPv4 PIM message into an
        I-IPv6 PIM message with the latter being directed towards I-IP IPv6
        address of the upstream AFBR.  When the I-IPv6 PIM message arrives at
        the upstream AFBR A, it should translate the message back into an
        E-IPv4 PIM message.  The result of these actions is the construction
        of E-IPv4 tree with (S,G) or (*,G) state deposited in the E-IP
        networks and an I-IP trees with (S',G') or (*,G') contained in the I-IP
        network.</t>

        <t>In this case it is incumbent upon the AFBR routers to perform PIM
        signaling message conversions in the control plane and IP group
        address conversions or mappings in the data plane. It becomes possible to
        devise an algorithmic IPv4-to-IPv6 group mapping at AFBR.  AFBR A can
        translate the IPv4 source address S into the corresponding IPv4-mapped
        IPv6 address, and then D can translate it back.  A proposed group
        address mapping is described in the next section.</t>

        <t>Note that the I-IPv6 core routers do not contain E-IPv4 routes. To
        ensure that PIMv6 join messages can reach the correct AFBR router
        leading to E-IPv4 source network, the RPF Vector <xref
        target="RFC5496"></xref> is appended to the PIMv6 message on its ways
        to the AFBR.</t>
      </section>

      <section title="Group Address Mapping">
        <t></t>

        <t>For IPv4-over-IPv6 scenario, an simple algorithmic mapping between
        IPv4 multicast group addresses and IPv6 group addresses is supported.
        One possibility is to prepend the operator's IPv6 prefix to the IPv4
        address when mapping an E-IP address to an I-IP address, just like
        figure 8 shows.</t>

        <figure>
          <artwork><![CDATA[
             0  8  16                            96        127
             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
             |FF XX|      ISP Assigned Prefix    | v4 address|
             +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
             
           ]]></artwork>

          <postamble>Figure 8: Mapping IPv4 to IPv6 group address</postamble>
        </figure>

        <t></t>

        <t>The first two octets identify the the IPv6 multicast address format
        described in <xref target="RFC2373"></xref>.  The following 10 octets
        are assigned by the network operator and the last 4 octets are the
        IPv4 address.</t>

        <t>Additional group address mapping options will be provided in the
        next version of this draft. </t>
      </section>

      <section title="Actions performed by AFBR">
        <t>The following actions are performed by the AFBR</t>

        <t><list style="symbols">
            <t>Process E-IPv4 PIM messages<vspace/>
		When a downstream AFBR receives an E-IPv4 PIM message , it should check the address family of the next-hop towards the destination.  If the address family is IPv4, the AFBR should forward the message without any translation; otherwise it should follow the following operation.</t>

            <t>Perform E-IPv4 PIM to I-IPv6 PIM message conversion<vspace/>
First, E-IPv4 PIM message with S(or *) and G is translated into I-IPv6 PIM message with S'(or *) and G'; Second, with MBGP, AFBRs knew the unicast address of upstream AFBR, thus RPF vector with unicast address of upstream AFBR is appended to the I-IPv6 PIM Join message.</t>

            <t>Transmit and receive I-IPv6 PIM messages<vspace/>
The downstream AFBR sends the I-IPv6 PIM message to the upstream AFBR. When the upstream AFBR receives this I-IPv4 PIM message, it checks the prefix of the multicast address and knows that the message is a translated message, then it removes the prefix (including the RPF vector) and sends the E-IPv4 PIM message towards upstream.</t>
          </list></t>
      </section>
    </section>

    <section title="IPv6-over-IPv4">
      <section title="Discussion">
        <t></t>

        <t>Routers in the client E-IPv6 networks contain routes to all other
        client E-IPv6 networks.  Through the set of known and deployed
        mechanisms, E-IPv6 hosts and routers have discovered or learned of
        (S,G) or (*,G) IPv6 addresses.  Any I-IP multicast state instantiated
        in the core is referred to as (S',G') or (*,G') and is of course
        separate from E-IP multicast state.</t>

        <t>This particular scenario introduces unique challenges.  Unlike the
        IPv4-over-IPv6 scenario, it&rsquo;s impossible to map all of the IPv6
        multicast address space into the IPv4 address space to address the
        one-to-one Softwire Multicast requirement.  There are however a number
        of approaches to either reduce the scope of the one-to-one requirement
        or to provide minimal aggregation as a compromise.  These can be
        explored in greater detail and articulated in future drafts for
        consideration of the Softwire Multicast solution by the working group.
        Simple examples of these follow as discussion items for this work in
        progress.</t>
      </section>

      <section title="I-IP IPv4 Address Limitations">
        <t>We must first consider what range of I-IP IPv4 multicast addresses
        are available for the IPv6-over-IPv4 mapping.  If the I-IP provider is
        also using IPv4 multicast for other services then the entire 224/4
        address range will not be available.  Additionally, the 239/8 scoped
        range may also be used for other services limiting the available
        addresses for Softwire Multicast even further.  These limitations need
        to be addressed in any Softwire Mesh Multicast IPv6-over-IPv4
        solution.</t>
      </section>

      <section title="Source Address Mapping">
	  <t>Source address S of E-IPv6 message will be mapped into S', which is the I-IPv4 address of upstream AFBR.</t>
        <t>With source address of I-IPv4 PIM message set to be S', routers in the backbone will transmit the message towards upstream AFBR, which will translate it back into E-IPv6 PIM message.</t>
      </section>
      
      <section title="E-IP IPv6 Addressing">
        <t>The multicast address range of E-IP IPv6 can be reduced in a number
        of ways to limit the scope of addresses that need to be mapped into
        the I-IP IPv4 space.  The IPv6 multicast address that's shared by both domain of IPv4 and IPv6 will be assigned with a fixed prefix, The high order bits of the IPv6 address range will be fixed for mapping purposes.</t>
        <t>The document <xref target="I-D.boucadair-behave-64-multicast-address-format"></xref> provides a guideline for fixing the higher order bits of IPv6 address. Part of the higher order bits will be in accordance with the previous RFCs(with one bit indicating it's an IPv4-Embedded IPv6 multicast address), and another part will be configurable according to local policies of the network manager.</t>
	<t>With this scheme, each IPv4 multicast address can be mapped into a unique IPv6 multicast address (with the assigned prefix), and each IPv6 multicast address with the assigned prefix can be mapped into a unique IPv4 multicast address. Here, IPv4 multicast address act as the mulitcast flow identification(Flow_ID) that adapts to both IPv4 and IPv6 domain.</t>
      </section>
      
      <section title="AFBR Signaling">
<t>Due to the non-"one-to-one" mapping of E-IPv6 to I-IPv4 unicast address, upstream AFBR is unable to remapped the I-IPv4 source address to the original E-IPv6 source address(without any constraint like E-IP IPv6 addressing).  Thus we need a signal to inform the upstream AFBR the original E-IPv6 source address.</t>
<t>One possible way to accomplish this is to use a tunnel to send the
   original E-IPv6 PIM message to the corresponding upstream AFBR.
   For example, suppose that a downstream AFBR receives an E-IPv6 PIM
   Join(S,G) message and needs to forward it to the I-IP network, it
   should not only send the translated I-IPv4 PIM Join(S',G') into the
   I-IP network, but also encapsulate the original PIMv6 Join(S,G) and
   send it to the upstream AFBR.  When the upstream AFBR
   decapsulates a packet and finds a PIMv6 Join(S,G) message, it should
   process it as a normal PIMv6 message.  The synchronization of the
   original PIMv6 message and the translated PIMv4 message that upstream
   AFBR receives will be included in the next version of this document.</t>
      </section>
      <section title="Actions performed by AFBR">
        <t>The following actions are performed by the AFBR</t>
        <t><list style="symbols">
            <t>Process E-IPv6 PIM messages<vspace/>
		When a downstream AFBR receives an E-IPv6 PIM message, it should check the address family of the upstream router. If the address family is IPv6, the AFBR should not translate this message; If the address family is IPv4, it should process it as specified below.</t>
            <t>Perform E-IPv6 PIM to I-IPv4 PIM message conversion<vspace/>
            First, E-IPv6 PIM Join(S,G) messages are encapsulated and sent to the upstream AFBR.
            Second, the E-IPv6 PIM messages with S(or *) and G are translated into I-IPv4 PIM messages with S'(or *) and G'.
            Third, translated I-IPv4 PIM Join(*,G') messages should be appended with RPF vector indicating the unicast address of upstream AFBR.
            However, because multiple S may be mapped into the same S', not every E-IPv6 PIM messages will be translated into I-IPv4 PIM messages. Suppose S1, S2 will be mapped into the same S', after translating Join(S1,G) into Join(S',G'), Join(S2,G) need not to be translated into Join(S',G'). When downstream AFBR has joined both (S1,G) and (S2,G), Prune(S',G') can only sent out when both (S1,G) and (S2,G) have no receivers.
            The details of this part will be illustrated in the next version of this draft.
               </t>

            <t>Transmit and receive PIM messages<vspace/>
            The upstream AFBR will receive both encapsulated E-IPv6 PIM messages and translated I-IPv4 PIM messages. Upon receiving encapsulated E-IPv6 PIM messages, the upstream AFBR decapsulates it and gets the original E-IPv6 PIM Join(S,G) messages; Upon receiving translated I-IPv4 PIM messages, the upstream AFBR just joins the multicast tree in the backbone. Besides, when receiving PIM messages, the mapping relation should be established between (S,G)(or (*,G)) and (S',G')(or (*,G')). 
			</t>
          </list></t>
        </section>
    </section>

    <section title="Summary">
      <t>There are two scenarios applicable to softwire mesh multicast:
      IPv4-over-IPv6 and IPv6-over-IPv4.  In the former senario, one-to-one
      group address mapping and PIM signaling conversion can be supported. </t>

      <t>The latter scenario introduces several challenges related to group
      address constraints and AFBR signaling. Solutions are discussed. </t>
    </section>

    <section title="Security Considerations">
      <t>The AFBR routers could maintain secure communications through the use
      of Security Architecture for the Internet Protocol as described
      in[RFC4301].  But when adopting some schemes that will cause heavy burden
      on routers, some attacker may use it as a tool for DDoS attack.</t>
    </section>

    <section title="IANA Considerations">
      <t>For Inter-AFBR signaling, address mapping is applied, and it should
      follow some predefined rule, especially the format of IPv6 prefix for
      address mapping should be predefined, so that ingress AFBR and egress
      AFBR can finish the mapping procedure correctly.  The format of IPv6
      prefix for translation can be unified within only the transit core, or
      within global area.  In the later condition, the format should be
      assigned by IANA.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2784" ?>

	<?rfc include="reference.RFC.3991" ?>

	<?rfc include="reference.RFC.2373" ?>

      <?rfc include="reference.RFC.4291" ?>

      <?rfc include="reference.RFC.4601" ?>

      <?rfc include="reference.RFC.4925" ?>

      <?rfc include="reference.RFC.5496" ?>

      <?rfc include="reference.RFC.5565" ?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.I-D.ietf-pim-rpf-vector" ?>

      <?rfc include="reference.I-D.ietf-l3vpn-2547bis-mcast" ?>

      <?rfc include="reference.I-D.draft-metz-softwires-multicast-problem-statement-00" ?>
      
      <?rfc include="reference.I-D.boucadair-behave-64-multicast-address-format" ?>
    </references>
  </back>
</rfc>
