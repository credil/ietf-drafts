<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY I-D.ietf-dkim-mailinglists PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-dkim-mailinglists.xml'>
<!ENTITY I-D.saintandre-tls-server-id-check PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.saintandre-tls-server-id-check.xml'>
<!ENTITY RFC1034  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1034.xml'>
<!ENTITY RFC1035  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml'>
<!ENTITY RFC1930  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1930.xml'>
<!ENTITY RFC2119  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
<!ENTITY RFC2671  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2671.xml'>
<!ENTITY RFC2672  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2672.xml'>
<!ENTITY RFC2919  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2919.xml'>
<!ENTITY RFC3123  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3123.xml'>
<!ENTITY RFC3207  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3207.xml'>
<!ENTITY RFC4408  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4408.xml'>
<!ENTITY RFC4648  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4648.xml'>
<!ENTITY RFC4686  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4686.xml'>
<!ENTITY RFC4871  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4871.xml'>
<!ENTITY RFC4954  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4954.xml'>
<!ENTITY RFC5016  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5016.xml'>
<!ENTITY RFC5226  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml'>
<!ENTITY RFC5234  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml'>
<!ENTITY RFC5248  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5248.xml'>
<!ENTITY RFC5321  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5321.xml'>
<!ENTITY RFC5322  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5322.xml'>
<!ENTITY RFC5451  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5451.xml'>
<!ENTITY RFC5617  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5617.xml'>
<!ENTITY RFC5672  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5672.xml'>
<!ENTITY RFC5863  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5863.xml'>
<!ENTITY FIPS.180-2.2002  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml2/reference.FIPS.180-2.2002.xml'>
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc compact="yes" ?>
<?rfc subcompact="yes" ?>
<?rfc toc="yes" ?>
<?rfc tocindent="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc iprnotified="yes" ?>
<?rfc autobreaks="no"?>
<?rfc strict="yes" ?>

<rfc category="std" docName="draft-otis-dkim-tpa-label-06" ipr="trust200902">
  <front>
    <title abbrev="TPA-Label">DKIM Third-Party Authorization Label</title>

    <author fullname="Douglas Otis" initials="D." surname="Otis">
      <organization>Trend Micro</organization>
      <address>
        <postal>
          <street>10101 N. De Anza Blvd</street>
          <city>Cupertino</city>
          <region>CA</region>
          <code>95014</code>
          <country>USA</country>
        </postal>
        <phone>+1.408.257-1500</phone>
        <email>doug_otis@trendmicro.com</email>
      </address>
    </author>

    <author fullname="Daniel Black" initials="D." surname="Black">
      <organization/>
      <address>
        <postal>
          <street/>
          <region>Canberra ACT</region>
          <country>Australia</country>
        </postal>
        <email>daniel.subs@internode.on.net</email>
      </address>
    </author>

    <date month="August" year="2010"/>
    <area>Internet Area</area>
    <workgroup>DKIM Working Group</workgroup>
    <keyword>DKIM-TPA-Label</keyword>
    <keyword>Draft</keyword>

    <abstract>
      <t>A third party authorization label (TPA-Label) is a DNS-based extension for DKIM ADSP
        records that allows domains in the From header field to authorize acceptable third-party
        signatures. This approach allows autonomous and unilateral authorizations for third-party
        domains using scalable, individual DNS transactions. The extended scope of DKIM signing
        practice assertions introduced here supplants transparent authorization schemes that are
        more difficult to administer. Alternatives for facilitating third-party authorizations
        currently necessitate coordination between two or more domains to synchronously set up
        selector/key DNS records, DNS zone delegations, and/or a regular exchange of public/private
        keys.</t>

      <t>Checking TPA-Label Resource Records for signing practices might occur infrequently when a
        message is not compliant with restrictive ADSP practices, where an Author Domain Signature
        is either missing or invalid. When a third-party signature is found, TPA-Label Resource
        Record transactions offer an efficient means for Author Domains to authorize specific
        third-party signing domains. Recipients are afforded a method to determine whether
        authorization exists in situations where other modes of authorization are impractical.
        TPA-Label Resource Records permit Author Domains a means to influence message handling
        selectively, for messages otherwise lacking valid Author Domain signatures.<vspace
          blankLines="1"/></t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
        "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in
          <xref target="RFC2119"/>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>A transparent method for DKIM authorization requires the sharing of a number of details
        between the domain owner, and one or more providers of email and DNS. Transparent
        authorization occurs when an Author Domain's DNS resolves a public DKIM key, with the
        corresponding private key being held by a third-party. With the many ways in which this
        might be achieved, it is unlikely that standardized formats will be developed to exchange
        necessary, and at times, sensitive information between various informal third-party
        services, such as mailing-lists. With transparent authorizations, when a security breach
        does occur, the wrong party might be held accountable for content it never saw nor logged.
        For informal authorizations, the TPA-Label Resource Record supports a simple authorization
        method that keeps visible which administrative entity signed a message, and whether an
        Author Domain authorized the signature. The authorization record may also impose additional
        header field requirements to better ensure protective message sorting.</t>

      <t>Tens of thousands of domains of various financial institutions are frequently being
        phished. Phishing creates a nuisance for those who aren't expecting these messages, and a
        threat for those who then interact with them. Whenever institutions employ DKIM and wish to
        utilize various informal third-party services, the integrity of their Author Domain
        Signatures might be affected. Some respond to this by implementing less stringent Author
        Domain Signing Practices on subdomains to accommodate the impact of these third-party
        services, as suggested by <xref target="I-D.ietf-dkim-mailinglists"/> Section 4.1, that
        recommends use of subdomains to assert less restrictive ADSP practices.</t>

      <t>As currently structured, ADSP does not offer an alternative to using more domains, where
        only some are protected by a restrictive practice. As such, it lacks a method to retain an
        authentication &amp; authorization as an acceptance condition when using informal third
        party services. Loss of authentication will lead to an increase of those being deceived by
        phishing attempts. This is because people often do not understand the significance of URI
        hierarchy, and become confused or insensitive to domain changes. APWG phishing trends, <xref
          target="apwg-globalphishingsurvey-2H2009"/> page 18, indicates phishing commonly uses
        subdomains in a URL to fool potential victims.</t>

      <t>Deterrents based upon reputation and/or path based strategies that utilize a variety of
        originating header fields are ineffective. These header fields often remain invisible to
        recipients, and contain domains being exploited for periods measured in hours, in an
        avoidance of any Whack-A-Mole like response. Even long term reputations are increasingly
        problematic due to an intermix of messages from compromised accounts. Few recipients will
        inspect the stack of message header fields, or be able to draw useful conclusions from a
        profusion of unfriendly information. However, many recipients deal with abuse by sorting
        messages into groups based upon an assumed source found in a few originating header
        fields.</t>

      <t>ADSP represents an open registry that offers domain specific guidance for DKIM acceptance
        criteria when determining whether messages should be delivered, refused, or discarded.
        However, appropriate actions become unclear whenever third-party services are involved. For
        example, it is not clear whether ADSP "dkim=all" assertions include third-party services
        that could potentially damage Author-Domain signatures. Although ADSP warns of a potential
        for disruption, specific handling recommendations are limited to "dkim=discardable".
        Administrative domains that assert all of their outbound messages are signed offer
        significant forensic value. However, the handling for their messages lacking an Author
        Domain Signature with an ADSP "dkim=all" assertion remains unclear.</t>

      <t>This document describes how any Author Domain publishing ADSP records defined in <xref
          target="RFC5617"/> can autonomously authorize DKIM signatures <xref target="RFC4871"/>
        (updated by <xref target="RFC5672"/>) by specific domains. This document offers secondary
        signing practices for additional ADSP compliance options whenever no Author Domain Signature
        is present within the message. The intended purpose of TPA-Label Resource Records is to
        improve acceptance rates of genuine messages, to minimize domain use, to minimize success
        rates for phishing, to improve sorting protections, and to minimize a recipient's
        administrative costs.</t>

      <t>TPA-Label Resource Records authorize third-party signing domains and services to extend
        DKIM compliance options for signing practices defined by <xref target="RFC5617"/>. Domains
        that both reference and are listed within a TPA-Label resource record are to be considered
        equivalent to the authorizing Author Domain when assessing compliance with ADSP. The TXT
        resource records, associated with TPA-Labels, start with the 'dkim' tag as defined by <xref
          target="RFC5617"/> for signing practices, and may contain tags specifically defined for
        TPA-Label Resource Records.</t>
    </section>

    <section title="Language and Terminology">
      <section title="Terms Imported from other DKIM Specifications:">
        <t>
          <list>
            <t>A "Valid Signature" is any signature on a message that correctly verifies using the
              procedure described in Section 6.1 of <xref target="RFC4871"/>.<vspace blankLines="1"
              /></t>
            <t>"Author Address" is defined in Section 2.3 of <xref target="RFC5617"/>.<vspace
                blankLines="1"/></t>
            <t>"Author Domain" is defined in Section 2.4 of <xref target="RFC5617"/>.<vspace
                blankLines="1"/></t>
            <t>"Alleged Author" is defined in Section 2.5 of <xref target="RFC5617"/>.<vspace
                blankLines="1"/></t>
            <t>"Author Domain Signature" is defined in Section 2.7 of <xref target="RFC5617"/>
            </t>
          </list>
          <vspace blankLines="1"/></t>
      </section>

      <section title="Terms Defined by this Specification:">
        <section title="Third Party Signature">
          <t>A "Third Party Signature" is a Valid Signature that does not qualify as an Author
            Domain Signature.</t>
          <t>
            <list>
              <t>Editor's Note: While this term is defined in Section 6.3 of <xref target="RFC5863"
                /> and in Section 2 of <xref target="RFC5016"/>, this definition is in terms of the
                Author Domain Signature and avoids statements about any header field
                dependencies.</t>
            </list>
          </t>
        </section>

        <section title="Third Party Signer">
          <t>A "Third Party Signer" is a signer that adds a valid DKIM signature that references a
            domain with the 'd=' tag in the DKIM-Signature header field that is not the Author
            Domain.</t>
        </section>

        <section title="TPA-Label Listed Domain, TPA-LLD">
          <t>TPA-Label Listed Domain, TPA-LLD, is a TXT resource record referenced with a TPA-Label
            published within an Author Domain. When a "tpa" tag exists within the TXT resource
            record located at the TPA-Label, the referencing domain (the domain used to generate the
            label) must be within the listed domain. When the "tpa" tag does not exist, the
            referenced domain is presumed listed. The "scope" tag may stipulate existence of
            additional header fields, or indicate alternate confirmation methods applied against
            specific email elements. Third-party domain confirmation might use a DKIM signature or
            confirm the authorized domain using specific methods with various path related email
            elements. 'F' is the default confirmation scope assumed, indicating DKIM confirms the
            authorized domain when no other method is specified. The 'S' and 'L' scope do not
            confirm the domain, but require at least one Sender or List-ID header field to hold the
            identity of the authorized domain respectively. The 'e', 'h', 'm', and 't' indicate
            specific alternative methods using message elements to confirm the authorized domain.
            Being compliant with TPA-LLD allows the referencing domain to informally act on behalf
            of the Author Domain. Following <xref target="RFC5321"/>, domain name comparisons, as
            well as TPA-Labels, are case insensitive.</t>
        </section>

        <section title="Author's Domain Acceptable Third-Party Signature">
          <t>An "Author's Domain Acceptable Third-Party Signature" is a Valid Signature in which the
            domain name of the DKIM signing entity, i.e., the 'd=' tag in the DKIM-Signature header
            field, is the domain name referenced in the TPA-Label Resource Record published by the
            Author Domain with a scope of 'F'. The 'F' scope indicates this third-party domain
            implements DKIM signing. For 'S' and 'L' scopes, the respective Sender header field or a
            List-ID identifier of the List-ID header field must exist for either scope and contain a
            domain within the TPA-LLD for authorization to be valid.</t>
        </section>

        <section title="Author's Domain Acceptable Third-Party Service">
          <t>An "Author's Domain Acceptable Third-Party Service" is a service that confirms the
            administrative domain through the message element determined by the method specified by
            the scope of 'e', 'h', 'm', or 't'. For 'S' or 'L' scopes, the respective Sender header
            field or a List-ID identifier of the List-ID header field must exist for either scope
            and contain a domain within the TPA-LLD for authorization to be valid.</t>
        </section>
      </section>
    </section>

    <section title="Combinatorial ADSP &quot;dkim&quot; tag Values.">
      <t>This document defines new values listed with the ADSP "dkim" tag in addition to those
        defined in <xref target="RFC5617"/> Section 4.2.1. These values can be appended to those
        currently defined or used separately. When used separately, the value "all" is to be assumed
        to prefix the new values when recognized, otherwise the value "unknown" will be assumed. It
        is not recommended to use any new value in conjunction with "discardable", because when not
        understood, a message that depends upon different handling might become lost.</t>

      <section title="tpa-sig">
        <t>The ADSP dkim tag value "tpa-sig" indicates that TPA-Labels will offer a comprehensive
          list of Author's Domain Acceptable Third-Party Signatures that may also include header
          field requirements. When there is no valid Author Domain Signature or Author's Domain
          Acceptable Third-Party Signature, the Author Domain recommends these messages be
          refused.</t>
      </section>

      <section title="tpa-path">
        <t>The ADSP dkim tag value "tpa-path" indicates that TPA-Labels will offer a comprehensive
          list of Author's Domain Acceptable Third-Party Signatures and Authorized Third-Party
          Services that may also include header field requirements.</t>

        <t>The "tpa-path" allows alternative path verification methods, to accommodate third party
          services lacking DKIM signatures. The message element is determined by the method
          specified by the scope. When the path domain is confirmed by the specified method, and the
          message is compliant with TPA-LLD requirements, then it is also compliant with the Author
          Domain's asserted signing practices. The leaf of the hostname (left most label) may need
          to be omitted when checking for TPA-Label Resource Record authorization.</t>

        <t>When there is no valid Author Domain Signature, or Author's Domain Acceptable Third-Party
          Signature, or Author's Domain Acceptable Third-Party Service, the Author Domain recommends
          these messages be refused.</t>

        <t>ADSP defends domains against spoofing. Any subdomain of a domain publishing an ADSP with
          the "dkim" tag value containing "tpa-sig" or "tpa-path" not also publishing an MX resource
          record should be assumed to have published the same ADSP records there as well.</t>
      </section>
    </section>

    <section title="TPA-Label Resource Record Authorization Considerations">
      <t>When an Author Domain is not within the DKIM signing domain, the TPA-LLD scheme can extend
        ADSP signing practice compliance. The TPA-LLD scheme with an 'F', 'S', or 'L' scope permits
        a contained Third Party Signature to be treated as an Author Domain Signature. The 'e', 'h',
        and 't' scopes permit acceptance based upon confirmation of the client hostname (EHLO/HELO).
        The 'm' scope permits confirmations based upon the return path (Mail From) domain. For 'S'
        and 'L' scopes, a respective Sender header field or a List-ID identifier of the List-ID
        header field must exist for at least one of the scopes, and contain a domain within the
        TPA-LLD for authorization to be valid.</t>

      <t>The 'S' and 'L' scopes support message sorting. Any matching header field with a domain
        within the TPA-LLD allows recipients to differentiate sources, which satisfies requirements
        for any other 'S' or 'L' scope. The 'S' and 'L' scopes provide Author Domains a means to
        extend restrictive policy compliance.</t>

      <t>The TPA-LLD scheme plays the role of only providing acceptable signatures or services which
        might be suitable for non-critical messages, with the goal of improving delivery acceptance,
        such as those from specific mailing-lists. The TPA-LLD authorization scheme only requires
        that DNS publications be made by the Author Domain, even when signing domains and the Author
        Domain differ. This approach avoids a need to exchange DKIM key related information and
        better protects private key information. Before TPA-LLD authorization is deployed, the
        Author Domain should be assured by domains being authorized that appropriate measures are in
        place to authenticate those who are submitting messages.</t>

      <t>Retaining authentication &amp; authorization for the From, Sender, and List-ID header
        fields, and being able to ensure third-party inclusion of a Sender or List-ID header fields,
        enhances protections afforded by message sorting. This protection reduces susceptibility to
        deceptive look-alike phishing attempts. Use of subdomains that assert less stringent
        practices, might inadvertently combine with those having more stringent practices when
        sorting is based upon parent domains. Consistently using the same domain avoids confusion
        that could be exploited to deceive recipients.</t>

      <t>At this time, it is not practical for large ISPs to make restrictive ADSP assertions. This
        would impair the utility of their service by excluding all third-party services lacking
        suitable source authentication. However, institutions can benefit by making restrictive ADSP
        assertions that better retain recipient trust in their email notifications, without forgoing
        use of all informal third-party services. Rather than using subdomains lacking ADSP
        restrictions, suitable third-party services can be authorized by using TPA-Labels instead.
        This approach also offers a proactive means for recipients to filter phishing attempts.</t>

      <t>TPA-Label authorization will not ensure all possible spoofing is prevented. However, by
        permitting broader use of restrictive practices, this should generally reduce the level of
        spoofing over what might be otherwise allowed. Authorized third party messages SHOULD NOT
        receive annotations that indicate the message contains authenticated identities. The TPA-LLD
        scope SHOULD include the 'S' or 'L' scope where appropriate to allow recipients a means to
        isolate and distinguish different message sources.</t>

      <t>The "dkim" tag within the TPA-Label Resource Record is normally expected to contain a copy
        of the value asserted by the ADSP Resource Record "dkim" tag. When the TPA-Label Resource
        Record "dkim" tag value differs, and the message is compliant with the "scope" and "tpa" tag
        values, the TPA-Label Resource Record "dkim" tag value overrides the ADSP Resource Record
        "dkim" tag value. When the TPA-Label Resource Record "dkim" tag value contains
        "discardable", compliance with the "scope" tag values is not required to override the ADSP
        Resource Record. Use of "tpa-path" SHOULD selectively override the ADSP "tpa-sig" only where
          needed.<vspace blankLines="100"/></t>
    </section>

    <section anchor="eval-3p-tpa-domain"
      title="Evaluating the Third-party Signing Domain or Service">
      <t>An Author Domain deploying a TPA-Label Resource Record does so on a trust basis. Reasons
        for deploying TPA-Label Resource Records might be to allow deployment of more stringent ADSP
        records while also utilizing third-party signatures or services.</t>

      <t>When an authorized Third Party Signer does not employ DKIM authentication with ADSP or does
        not include Authentication-Results header fields <xref target="RFC5451"/>, this could allow
        authorizations to be exploited.</t>

      <section anchor="tpa-auth" title="Third Party Authentication">
        <t>The Author Domain SHOULD ensure the Authorization Scope of the TPA-Label Resource Record
          is authenticated. There are a number of ways email can be authenticated, and different
          authentication mechanisms validate different parts of the email. The following are
          examples of how authorization might work.</t>

        <section title="Third Party Authentication - Web Email Provider with Subscriber Pingbacks">
          <t>The Author Domain "example.com" wants to deploy a TPA-Label Resource Record to permit
            its traveling agents the use of "webmail.example.net" services. This email provider has
            a closed user policy and adds DKIM signatures to messages on behalf of the
            "webmail.example.net" domain.</t>

          <t>The closed user policy of "webmail.example.net" permits subscribers to post messages
            with Author Domains that are not "webmail.example.net" in the From header fields, only
            when control of the Author Address has been validated by a response to an encoded
            "pingback" email. The "webmail.example.net" service also establishes accounts to
            authenticate all users sending messages through its service. Therefore, the referenced
            TPA-Label Resource Record can include an 'F' scope value to authorize Author Domain
            messages signed by this Third-Party Signer.</t>
        </section>

        <section title="Third Party Authentication - Closed Mailing List Example">
          <t>The Author Domain wants to deploy a TPA-Label Resource Record for a mailing list with a
            closed posting policy that redistributes email in a way that breaks Author Domain
            Signatures, but adds a DKIM signature on behalf of the mailing list domain and includes
            an Authentication-Results header field for posted messages. The closed posting policy is
            enforced by requiring subscribers to validate their control of their Author Addresses by
            responding to encoded "pingback" email sent to these addresses.</t>

          <t>Since the mailing list management always verifies control of the Author Address, and is
            configured to include Authentication-Results header fields, and includes a List-ID
            header field, the referenced TPA-Label Resource Record can include an 'L' scope value to
            permit Author Domain messages containing an authorized List-ID domain to be signed by
            this Third-Party Signer.</t>
        </section>

        <section title="Third Party Authentication - Open Mailing List Example">
          <t>The Author Domain wants to deploy a TPA-Label Resource Record for a mailing list with
            an open posting policy that redistributes email in a way that breaks Author Domain
            Signatures, but that adds a DKIM signature on behalf of the mailing list domain and
            includes an Authentication-Results header field for posted messages. The open posting
            policy will refuse messages lacking Author Domain Signatures for domains that have
            deployed an ADSP signing practice of "dkim=all" or "dkim=discardable".</t>

          <t>Since the list management always refuses to post an Author Address lacking a Author
            Domain Signature when the domain has deployed an ADSP record with an "dkim=all" or
            "dkim=discardable", and is configured to include Authentication-Results header fields,
            and includes a List-ID header field, the referenced TPA-Label Resource Record can
            include an 'L' scope value to permit Author Domain messages containing an authorized
            List-ID domain to be signed by this Third-Party Signer.</t>
        </section>

        <section title="Third Party Authentication Example - Sender Header Field">
          <t>Author Domain "example.com" wishes to temporarily employ the service agency
            "temp.example.org" to handle overflow secretarial support. The agency "temp.example.org"
            sends email on behalf of the executive staff of "example.com" and adds the Sender header
            field of "secretary@temp.example.org" in the email. Since "temp.example.org" only allows
            its own staff to email through its server which adds "temp.example.org" DKIM signatures,
            a TPA-LLD can include the "temp.example.org" domain with an 'S' scope to specifically
            authorize messages containing the Sender header field to help ensure these messages are
            not handled as phishing attempts.</t>
        </section>

        <section title="Services Lacking DKIM Signatures">
          <section title="Abuse and DSN Reporting">
            <t>There is likely little interest for an otherwise uninvolved domain to receive a
              massive number of bogus messages being returned as feedback. Often the purpose of
              feedback is to discover compromised systems or accounts actively being exploited in
              some manner. Unless the Author Domain is confirmed as having handled or authorized the
              handling of the message, only statistics and samples should be reported to the
              associated Autonomous System <xref target="RFC1930"/>, and perhaps to the Author
              Domain when interest is expressed.</t>

            <t>The 'e', 'h', 'm', and 't' scope options within the TPA-LLD records allow the Author
              Domain to be associated through various methods with path related domains, when DKIM
              is not employed by the third-party service. In this case, appropriate DSN or abuse
              reporting to the Author Domain is better assured as well.</t>
          </section>

          <section title="Third Party Authentication Example - SMTP Host">
            <t>Author Domain "example.com" makes use of invite services. This service does not
              utilize DKIM, where the host name given by the EHLO command is "invite.example.net".
              The Author Domain can authorize the domain "invite.example.net" or "example.net" with
              the scope of 'e' to improve acceptance of messages that are sent on behalf of
              "example.com" from this outbound server.<vspace blankLines="1"/></t>
          </section>

          <section title="Third Party Authentication Example - Return Path">
            <t>Author Domain "example.com" makes use of tell-a-friend services. This service does
              not utilize DKIM with its own return path as "customer@taf.example.net" in the SMTP
              exchange. The Author Domain can authorize the domain "taf.example.net" with the scope
              of 'm' to improve acceptance of messages that are on behalf of "example.com" from this
              outbound server.</t>
          </section>

          <section title="Use of Path Authorization">
            <t>Those using the "tpa-path" value should not authorize domains requiring more than 5
              network transactions to confirm their domain. Those implementing this ADSP extension
              should also limit the number of DNS transactions attempted, or this could negatively
              impact unrelated domains when evaluating path related protocols.<vspace blankLines="1"/>
              <list>
                <t>Methods that create subsequent transactions based upon the macro expansion of
                  email-address local-parts should not be used. Libraries that process <xref
                    target="RFC4408"/> record scripts may invoke a large number of DNS transactions
                  from cached records, and target unrelated domains with queries modulated by
                  recipients through macro expansion. Recipient processing of such scripts might
                  become blocked, when found to produce significant network amplification from
                  cached records during spam campaigns.</t>
              </list></t>
          </section>
        </section>
      </section>
    </section>

    <section title="DNS Representation">
      <t>The receiver obtains domain authorizations with a DNS query for an IN class TXT TPA-Label
        resource record located below the location specified in <xref target="RFC4871"/> Section 7.4
        and the label "_tpa.". The TPA-Label itself is generated by processing the domain in
        question, which normally matches the DKIM signature's "d=" parameter. A TPA-Label Resource
        Record is published adjacent to the <xref target="RFC5617"/> conventional ADSP record, for
        example below "_tpa._domainkey.&lt;Author-Domain&gt;". The Author Domain provides
        authorization for other domains with the existence of a TPA-Label TXT resource record. When
        a "tpa" tag value exists, it must include the referenced domain before authorization is
        valid. Authorization to informally act on behalf of the Author Domain can also be limited by
        the "scope" tag value for specific message elements.</t>

      <t>An Author Domain may wish to delegate the listing of third-party services to a different
        administrative domain. Ideally, this would be accomplished by delegating the
        _tpa._domainkey.&lt;Author-Domain&gt; zone to the administrative entity handling publication
        of TPA-Label Resource Records. This delegation could also be done unilaterally with a <xref
          target="RFC2672"/> DNAME resource record published at
        _tpa._domainkey.&lt;Author-Domain&gt;.</t>

      <t>Character-strings contained within the TXT resource record are concatenated into forming a
        single string. A character-string, as defined in <xref target="RFC1035"/> Section 3.3 for
        resource records, is a single length octet followed by that number of characters treated as
        binary information. <vspace blankLines="1"/></t>

      <t>The TPA-Label Resource Records should be located at these domains:<list>
          <t/>
          <t>&lt;tpa-label&gt;._tpa._domainkey.&lt;Author-Domain&gt;.</t>
        </list>
      </t>
    </section>

    <section title="TPA-Label and Tag Syntax Definitions">
      <t>Augmented BNF for Syntax Specifications:</t>
      <figure title="">
        <artwork name="" type="" height="" width="" xml:space="preserve">
          asterisk = %x2A ; "*"
          dash = %x2D ; "-"
          dot = %x2E ; "."
          underscore = %x5F ; "_"
          ANY = asterisk dot ; "*."
          dns-char = ALPHA / DIGIT / dash
          id-prefix = ALPHA / DIGIT
          label = id-prefix [*61dns-char id-prefix]
          sldn = label dot label
          base-char = (dns-char / underscore)
          domain = *(label dot) sldn

          tag-list  =  tag-spec 0*( ";" tag-spec ) [ ";" ]
          tag-spec  =  *WSP tag-name *WSP "=" *WSP tag-value [WSP]
          tag-name  =  ALPHA 0*ALNUMPUNC / "dkim" / "scope" / "tpa"
          tag-value =  [ tval 0*( 1*(WSP) tval ) ]
                          ; WSP prohibited at end
          tval      =  1*VALCHAR
          VALCHAR   =  %x21-3A / %x3C-7E
                          ; EXCLAMATION to TILDE except SEMICOLON
          ALNUMPUNC =  ALPHA / DIGIT / "_"
        </artwork>
      </figure>
    </section>

    <section title="TPA-Label Generation">
      <t>The TPA-Label is generated by nesting functions as follows:</t>
      <t><list>
          <t>"base32" function is defined in <xref target="RFC4648"/>.<vspace blankLines="1"/></t>
          <t>"sha1" function is defined in <xref target="FIPS.180-2.2002"/>.<vspace blankLines="1"
            /></t>
          <t>"lcase" converts upper-case ALPHA characters to lower-case.<vspace blankLines="1"/></t>
          <t>"tpa-domain" is normally the "d=" tag value defined in Section 3.5 of <xref
              target="RFC4871"/>.<vspace blankLines="2"/></t>
          <t> &lpar;underscore&rpar; base32&lpar; sha1&lpar; lcase&lpar;tpa-domain&rpar;&rpar;&rpar;
          </t>
        </list><vspace blankLines="1"/></t>

      <t>The TPA-Label is created from the hash value returned by the "sha1" function of the
        tpa-domain expressed in lower case ASCII. Any terminating period is not included with the
        tpa-domain, as indicated by the ABNF definition.<vspace blankLines="1"/><list>
          <t>Note: No newline character, 0x0A, is to be appended to the end of the domain name, as
            might occur with the command line generation of sha1 values. For example, these command
            line appended newlines can be avoided by using the 'echo -n" option.</t>
        </list></t>
      <t>The label encoding process inputs the hash as a byte stream of four 40-bit data blocks
        where each data block outputs 8 encoded characters. Proceeding from left to right, a 40-bit
        input group is formed by concatenating 5 bytes. The 40-bit input is then treated as 8
        concatenated 5-bit groups, each of which is translated into a single digit of the base32
        alphabet. The bit stream is ordered with the most-significant-bit first, being the
        high-order bit of the first byte. The entire output is then concatenated first to last, left
        to right, into 32 characters prefixed with an underscore.</t>
    </section>

    <section anchor="tpalabel-rr" title="TPA-Label TXT Resource Record Structure">
      <t>Every TPA-Label TXT resource record MUST start with an outbound signing-practices tag, so
        the first four characters of the record are lowercase "dkim", followed by optional
        whitespace and "=". In addition to the tags defined by <xref target="RFC5617"/>, TPA-Label
        syntax descriptions for additional tags follow the tag-value syntax described in section
        4.2.1 of <xref target="RFC5617"/> and Section 3.2 of <xref target="RFC4871"/>. Unrecognized
        tags and tags with illegal values MUST be ignored. In the ABNF below, the WSP token is
        inherited from <xref target="RFC5322"/>. The ALPHA and DIGIT tokens are imported from <xref
          target="RFC5234"/>.</t>
      <t>The tags used in TPA-Label resource records are as follows:</t>

      <texttable title="TPA-Label Tags">
        <ttcol align="center">Tag</ttcol>
        <ttcol align="left">Function</ttcol>
        <c>dkim</c>
        <c>Outbound Extended Signing Practices (dkim-tag)</c>
        <!--  -->
        <c>scope</c>
        <c>Authorization Scope List (scope-tag)</c>
        <!--  -->
        <c>tpa</c>
        <c>Authorized Domains List (tpa-tag)</c>
        <!--  -->
      </texttable>

      <texttable title="Outbound Extended Signing Practices Values">
        <ttcol align="center" width="10%">dkim values</ttcol>
        <ttcol align="left">Field or Parameter</ttcol>
        <!--  -->
        <c>tpa-sig</c>
        <c>Third-Party Signature</c>
        <!--  -->
        <c>tpa-path</c>
        <c>Third-Party Path or Signature</c>
        <!--  -->
        <c>all tpa-sig</c>
        <c>Third-Party Signature</c>
        <!--  -->
        <c>discardable</c>
        <c>Selective discardable</c>
      </texttable>

      <t><vspace blankLines="100"/></t>

      <texttable title="TPA-Label Scope Values">
        <ttcol align="center" width="10%">scope values</ttcol>
        <ttcol align="left">Field or Parameter</ttcol>
        <ttcol align="left">Method</ttcol>
        <!--  -->
        <c>F</c>
        <c>From (Author) Header Field</c>
        <c>Match Address Domain</c>
        <!--  -->
        <c>L</c>
        <c>List-ID Header Field</c>
        <c>Match List-ID Identifier</c>
        <!--  -->
        <c>S</c>
        <c>Sender Header Field</c>
        <c>Match Address Domain</c>
        <!--  -->
        <c>e</c>
        <c>SMTP Hostname</c>
        <c>Resolve Hostname IP Addr</c>
        <!--  -->
        <c>h</c>
        <c>SMTP Hostname</c>
        <c>Pass SPF with Hostname</c>
        <!--  -->
        <c>m</c>
        <c>MailFrom</c>
        <c>Pass SPF with MailFrom</c>
        <!--  -->
        <c>t</c>
        <c>SMTP Hostname</c>
        <c>Cert of Hostname</c>
      </texttable>
    </section>



    <section anchor="tpalabelrr-defn" title="TPA-Label Resource Record Definition">
      <t>Tags in the TPA-Label Resourse Record are shown below. The dkim tag MUST be present as the
        left most tag.Unrecognized tags MUST be ignored.</t>
      <t>TPA-Label Resource Record Definition<list>

          <t>tpalabelrr = dkim-tag [";"] 0*( 1*(WSP) tag-list) ] </t>

        </list>
      </t>
    </section>

    <section anchor="oesp-defn" title="Outbound Extended Signing Practice">
      <t>Outbound Signing Practice Extensions. This tag defines a list of extended outbound signing
        practices that combine with those for various email-address locations within the message.
        Only recognized scope values offer any form of ADSP authorization.</t>
      <t>"dkim" tag <list>
          <t>; hyphenated-word is defined in <xref target="RFC4871"/></t>
          <t>x-obesp = hyphenated-word ; for future extension</t>
          <t>dkim_val = ( "tpa-sig" / "tpa-path" / "all tpa-sig"/ "discardable" / x-obsp)</t>
          <t>dkim-tag = %x64.6b.69.6d *WSP "=" *WSP dkim_val</t>
        </list></t>
    </section>

    <section anchor="scope-defn" title="TPA-Label Resource Record Scope Syntax">
      <t>Authorization Scope List (Optional). This tag defines a list of scoping assertions for
        various email-address locations within the message. Only recognized scope values offer any
        form of ADSP authorization.</t>
      <t>"scope" tag <list>
          <t>as_val = "F" / "L" / "S" / "e" / "h" / "m" / "t"</t>
          <t>as-list = %x73.63.6f.70.65 *WSP "=" [ as_val 0*( 1*(WSP) as_val )]</t>
        </list>
      </t>

      <section anchor="tpa-defn" title="Authorized Signing Domain">
        <t>Authorized Signing Domain list. (optional) This tag, when present, MUST repeat all or
          portions of the domain encoded within the TPA-Label Resource Record. This option ensures
          the proper handling of possible hash collisions. When a domain is prefixed with the "*."
          ANY label, then all subdomains of this domain are to be considered included within the
          list. When the 'tpa' tag is not present or has no value, it should be assumed to compare
          with the domain used to generate the TPA-Label.</t>
        <t>"tpa" tag <list>
            <t>ad_val = [ANY] domain</t>
            <t>ad-list = %x74.70.61 *WSP "=" [ ad_val 0*( 1*(WSP) ad_val )]</t>
          </list>
        </t>
      </section>

      <section anchor="scopeF-defn" title="TPA-Label Listed Domain Authorization">
        <section title="From (Author) Header Field">
          <t>The "F" scope asserts that messages carrying the Author Domain within the From header
            field are authorized to be signed by the TPA-LLD.<vspace blankLines="1"/></t>
        </section>
      </section>

      <section title="Header Dependent Authorizations">
        <section anchor="scopeL-defn" title="List-ID Header Field">
          <t>The "L" scope asserts that authorization is valid only when a List-ID identifier of the
            List-ID header field <xref target="RFC2919"/> contains a domain that is within a domain
            listed in the TPA-LLD "tpa" tag.</t>
          <t>The syntax of the List-Id header field is as follows:<list>
              <t>list-id-header = "List-ID:" [phrase] "&lt;"identifier"&gt;"CRLF<vspace
                  blankLines="1"/></t>
            </list></t>
        </section>

        <section anchor="scopeS-defn" title="Sender Header Field">
          <t>The "S" scope asserts that authorization is valid only when the domain in the Sender
            header field is within the TPA-LLD.<vspace blankLines="1"/></t>
        </section>

        <section title="Combined 'L' or 'S' Scopes">
          <t>When combined, the scopes 'L' and 'S' require that either a List-ID identifier of the
            List-ID header field or the Sender header field must contain a domain within the TPA-LLD
            for the authorization to be valid.</t>
        </section>
      </section>

      <section anchor="scopeE-defn" title="SMTP Host domains">
        <t>The "e" scope asserts that host names given in <xref target="RFC5321"/> EHLO or HELO
          commands within TPA-LLD is authorized when the hostname resolves the server's IP
            address.<vspace blankLines="1"/></t>
      </section>

      <section anchor="scopeH-defn" title="SMTP Host domains">
        <t>The "h" scope asserts that host names given in <xref target="RFC5321"/> EHLO or HELO
          commands within TPA-LLD is authorized only when this hostname submitted to an spf <xref
            target="RFC4408"/> process returns pass.<vspace blankLines="1"/></t>
      </section>
      <section anchor="scopeM-defn" title="MailFrom Parameter">
        <t>The "m" scope asserts that an email-address domain in the <xref target="RFC5321"/> MAIL
          command within a TPA-LLD is authorized only when this email-address submitted to an spf
            <xref target="RFC4408"/> process returns pass.<vspace blankLines="1"/>
        </t>
      </section>

      <section anchor="scopeT-defn" title="SMTP Host domains">
        <t>The "t" scope asserts that host names given in <xref target="RFC5321"/> EHLO command
          after <xref target="RFC3207"/> negotiation where the Cert DNS-ID domain is within TPA-LLD
          is authorized.</t>
        <t>Not to RFC Editor: Remove this comment before publishing.<list>
            <t>Currently, no general practice employs certificates to confirm the domain of the
              client initiating a connection. This may be needed for clients within IPv6 IP address
              space where tunneling, carrier grade NATs, and rapid space assignment without any
              practical reverse mapping reduces the effectiveness of IP address based
              reputations.</t>

            <t>There is an existing TLS option for SMTP and an ongoing effort to standardize
              automated server confirmation. It might be possible to leverage this effort to
              establish practices used at the client. It might also be possible to utilize the DKIM
              public key to verify a challenge signed by the client based upon keys located at its
              hostname, but this would require a change made to SMTP conversations defined in <xref
                target="RFC4954"/> Section 4. For information related to ongoing server related
              efforts see:</t>
            <t><xref target="I-D.saintandre-tls-server-id-check"/><vspace blankLines="1"/></t>
          </list></t>
      </section>
    </section>

    <section anchor="tpa-qt" title="TPA-Label Resource Record Query Transactions">
      <t>The discovery of TPA-Label resource records need not be subsequent to the discovery of the
        ADSP record specified by <xref target="RFC5617"/>. However, when no ADSP record is
        discovered or when it does not contain a "dkim" tag value of either "tpa-sig" or "tpa-path",
        the verifier MAY assume that no TPA-Label Resource Records have been published. Otherwise,
        when there is a Third Party Signature without any Author Domain Signature, the discovery of
        TPA-Label Resource Records should be attempted.</t>
    </section>

    <section anchor="auth-meaning" title="TPA-Label Resource Record Compliance Assessment">
      <t>The signing practice compliance assessment of Third Party Signatures is a discretionary
        operation performed by the verifier. Messages that have valid Author Domain Signatures are
        already considered to result in a pass. When a verifier decides to assess compliance for
        Third Party Signatures with an Author Domain ADSP "dkim" tag value "tpa-sig" or "tpa-path",
        then, checked in succession, one of the following sets of conditions MUST be met for the
        result to be considered a pass.</t>

      <t>For Third Party Signatures, the following represents the set of "tpa-sig" assessment
        conditions to be checked:</t>
      <t>
        <list style="symbols">
          <t>The Third Party Signature MUST validate according to <xref target="RFC4871"/>.</t>
          <t>A TXT Resource Record, referenced by a TPA-Label created by the DKIM signature "d="
            tag, MUST exist in DNS.</t>
          <t>The discovered TPA-Label TXT Resource Record structure MUST be valid.</t>
          <t>The domain that created the TPA-Label MUST be within the TPA-LLD.</t>
          <t>Where a scope of 'F', 'S', or 'L' is specified, the Author Domain MUST have an Author's
            Domain Acceptable Third-Party Signature.</t>
          <t>Where a scope of 'L' or 'S' is specified, a List-ID identifier in the List-ID header
            field or a Sender header field MUST contain a domain within the TPA-LLD.</t>
        </list></t>
      <t>Meeting all the conditions in this set results in a "tpa-sig" pass, where subsequent checks
        are then skipped.<vspace blankLines="1"/></t>

      <t>For Third Party Services where the Author Domain ADSP "dkim" tag value contains "tpa-path",
        and where the preceding assessment conditions were not met, then the following represents
        "tpa-path" assessment conditions to be checked:</t>

      <t>One of the three possible TXT Resource Records is checked in succession. Each would be
        referenced by an 'h' or 'e' or 't' related domain given by <xref target="RFC5321"/> EHLO or
        HELO command, this domain with left-most label omitted, or by an 'm' related email-address
        domain within the <xref target="RFC5321"/> MAIL command.<vspace blankLines="1"/></t>

      <t>The TXT record discovery process continues until a TPA-Label TXT Resource Record structure
        is found where:</t>
      <t><list style="symbols">
          <t>The discovered TPA-Label TXT Resource Record Structure is valid.</t>
          <t>The domain that created the TPA-Label is within the TPA-LLD.</t>
          <t>The domain that created the TPA-Label corresponds with a listed scope of 'e', 'h' or
            'm' or 't'.</t>
          <t>Where a scope of 'L' or 'S' is specified, either the domain in List-ID given by <xref
              target="RFC2919"/> in the List-ID header field is within the TPA-LLD, or a Sender
            header field contains a domain within the TPA-LLD respectively.</t>
          <t>Once these four conditions have been met, for 'h' or 'm' scopes the domain MUST be
            confirmed by submitting the domain to an spf process that then returns pass. The 'e'
            scope MUST be confirmed by a forward DNS reference that resolves the address of the SMTP
            client. The 't' scope MUST be confirm the DNS-ID in the client certificate. </t>
        </list></t>
      <t>Meeting all four conditions in this set, and confirming the domain, results in a "tpa-path"
          pass.<vspace blankLines="1"/></t>

      <t>When the TPA-Label TXT Resource Record can not be retrieved due to some error that is
        likely transient in nature, as specified in <xref target="RFC5617"/> Section 4.3. such as
        "SERVFAIL" for example, the result of the TPA-Label Resource Record compliance assessment is
        "temperror".</t>

      <t>When the TPA-Label TXT Resource Record retrieval returns a DNS "NOERROR", but not with a
        single record, the result of the TPA-Label Resource Record compliance assessment is
        "permerror".</t>

      <t>When the TPA-Label TXT Resource Record can not be retrieved with a DNS "NXDOMAIN"
        response,the result of the TPA-Label Resource Record compliance assessment is
          "nxdomain".<vspace blankLines="1"/></t>

      <t>The following pass conditions are combined to provide a single pass value. <list
          style="symbols">
          <t>A "tpa-sig" pass confirms an Author Domain Acceptable Third-Party Signature.</t>
          <t>A "tpa-path" pass confirms an Author Domain Acceptable Service.<vspace blankLines="1"/>
          </t>
        </list>
      </t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <section title="Author Domain Signing Practices (ADSP) Parameters">
        <t>To accommodate the extensions to ADSP Signing Practices, the IANA Registry "ADSP Outbound
          Signing Practices" defined by Section 4.2.1 of <xref target="RFC5617"/> needs the
          following elements to be added:</t>

        <!-- http://www.iana.org/assignments/adsp-parameters/adsp-parameters.xhtml -->
        <texttable title="TPA-Label Resource Record validation Method">
          <ttcol align="center">Type</ttcol>
          <ttcol align="center">Reference</ttcol>
          <c>tpa-sig</c>
          <c>(this document)</c>
          <c>tpa-path</c>
          <c>(this document)</c>
        </texttable>
        <t>
          <vspace blankLines="100"/>
        </t>
      </section>
      <section title="Email Authentication Method Registry">
        <t>To accommodate the method derived from TPA-Label Resource Record processing, the IANA
          Registry "Email Authentication Method" defined by Section 6.2 of <xref target="RFC5451"/>
          needs the following elements to be added:</t>

        <!-- http://www.iana.org/assignments/email-auth/email-auth.xhtml#email-auth-methods -->

        <texttable title="TPA-Label Resource Record validation Method">
          <ttcol align="left">Method</ttcol>
          <ttcol align="center" width="10%">Defined</ttcol>
          <ttcol align="center" width="10%">ptype</ttcol>
          <ttcol align="left">property</ttcol>
          <ttcol align="left">value</ttcol>
          <c>tpa-lld</c>
          <c>(this document)</c>
          <c>header field</c>
          <c>d</c>
          <c>value of signature "d" tag. The dkim method results from <xref target="RFC5451"/>
            should also be included in a Authenticated Results header field</c>
          <!--  -->
          <c/>
          <!-- spanx ?? -->
          <c/>
          <c/>
          <c>scope</c>
          <c>value of <xref target="scope-registry">scope</xref> tag. (When 'scope' contains 'e',
            'h' or 'm', the <xref target="RFC5451">iprev</xref> (Section 3) method results should
            also be included in the Authenticated-Results header field to capture the SMTP client IP
            address.</c>
          <c/>
          <!-- spanx ?? -->
          <c/>
          <c/>
          <c>ca-scope</c>
          <c>The <xref target="scope-registry">scopes</xref> with a compliance assessment as
            pass</c>
          <c/>
          <!-- spanx ?? -->
          <c/>
          <c/>
          <c>tpa</c>
          <c>Value of <xref target="tpa-defn">tpa</xref> tag at time of compliance assessment</c>
        </texttable>
        <t>
          <vspace blankLines="100"/>
        </t>
      </section>

      <section title="Email Authentication Result Names Registry">
        <t>To accommodate the results derived from TPA-Label Resource Record processing, the IANA
          Registry "Email Authentication Method" defined by Section 6.3 of <xref target="RFC5451"/>
          needs the following elements added:</t>

        <!--  http://www.iana.org/assignments/email-auth/email-auth.xhtml#email-auth-result-names -->

        <texttable title="TPA-Label Resource Record complaince assessment Results">
          <ttcol align="left" width="20%">code</ttcol>
          <ttcol align="left">method</ttcol>
          <ttcol align="left">meaning</ttcol>
          <c>none</c>
          <c>tpa-lld</c>
          <c>No TPA-Label was published</c>
          <!--  -->
          <c>pass</c>
          <c>tpa-lld</c>
          <c><xref target="auth-meaning"/></c>
          <!--  -->
          <c>tempfail</c>
          <c>tpa-lld</c>
          <c><xref target="auth-meaning"/></c>
          <!--  -->
          <c>permfail</c>
          <c>tpa-lld</c>
          <c><xref target="auth-meaning"/></c>
          <!--  -->
          <c>unknown</c>
          <c>tpa-lld</c>
          <c>The TPA-Label Resource Record had a tag/value of "dkim=unknown" and the Third Party
            Signature failed its compliance assessment.</c>
          <!--  -->
          <c>discard</c>
          <c>tpa-lld</c>
          <c>The TPA-Label Resource Record had a tag/value of dkim=discard and the Third Party
            Signature failed its compliance assessment.</c>
          <!--  -->
          <c>fail</c>
          <c>tpa-lld</c>
          <c>The TPA-Label Resource Record had a tag/value of dkim=all and the Third Party Signature
            failed to its compliance assessment.</c>
          <!--  -->
          <c>nxdomain</c>
          <c>tpa-lld</c>
          <c>When obtaining the TPA-Label Resource Record, DNS indicated this domain does not exist. </c>
          <!--  -->
          <c>Other value defined in the IANA ADSP Outbound Signing Practices Registry</c>
          <c>tpa-lld</c>
          <c>The TPA-Label Resource Record had a tag/value of dkim={other value} and the Third Party
            Signature failed its compliance assessment.</c>
        </texttable>
      </section>

      <section title="Third Party Authorizations Labels Registry">
        <t>Names of tags that are valid in TPA-Label Resource Records with the exception of
          experimental tags <xref target="tpalabel-rr"/> MUST be registered in this created IANA
          registry.</t>

        <t>New entries are assigned only for values that have been documented in a published RFC
          that has had IETF Review, per <xref target="RFC5226">IANA CONSIDERATIONS</xref>.</t>

        <t>Each tag registered must correspond to a definition.</t>
        <t>The initial set of values for this registry is:</t>
        <texttable title="TPA-Label Resource Record compliance assessment Results">
          <ttcol align="left" width="20%">tag</ttcol>
          <ttcol align="left">defined</ttcol>
          <ttcol align="left">definition</ttcol>
          <c>dkim</c>
          <c>
            <xref target="tpalabel-rr"/>
          </c>
          <c>As per IANA Registry ADSP Outbound Signing Practices</c>
          <!--  -->
          <c>tpa-sig</c>
          <c>
            <xref target="oesp-defn"/>
          </c>
          <c>DKIM auth</c>
          <!--  -->
          <c>tpa-path</c>
          <c>
            <xref target="oesp-defn"/>
          </c>
          <c>DKIM or path auth</c>
          <!--  -->
          <c>all tpa-sig</c>
          <c>
            <xref target="oesp-defn"/>
          </c>
          <c>Same as tpa-sig</c>
          <!--  -->
          <c>scope</c>
          <c>
            <xref target="scope-defn"/>
          </c>
          <c>
            <xref target="scope-registry"/>
          </c>
          <!--  -->
          <c>tpa</c>
          <c>
            <xref target="tpa-defn"/>
          </c>
          <c>List of Authorized Domains or Identifiers </c>
        </texttable>
      </section>

      <section anchor="scope-registry" title="Third Party Authorizations Scope Registry">
        <t>Values that correspond to <xref target="scope-defn"/> MUST be registered in this created
          registry:</t>

        <t>New entries are assigned only for values that have been documented in a published RFC
          that has had IETF Review, per <xref target="RFC5226">IANA CONSIDERATIONS</xref>.</t>

        <t>Each value registered must correspond to a definition.</t>
        <t>The initial set of values for this registry is:</t>
        <texttable title="TPA-Label Resource Record compliance assessment Results">
          <ttcol align="left">value</ttcol>
          <ttcol align="left">defined</ttcol>
          <c>F</c>
          <c>
            <xref target="scopeF-defn"/>
          </c>
          <!--  -->
          <c>L</c>
          <c>
            <xref target="scopeL-defn"/>
          </c>
          <!--  -->
          <c>S</c>
          <c>
            <xref target="scopeS-defn"/>
          </c>
          <!--  -->
          <c>h</c>
          <c>
            <xref target="scopeH-defn"/>
          </c>
          <!--  -->
          <c>e</c>
          <c>
            <xref target="scopeE-defn"/>
          </c>
          <!--  -->
          <c>m</c>
          <c>
            <xref target="scopeM-defn"/>
          </c>
          <!--  -->
          <c>t</c>
          <c>
            <xref target="scopeT-defn"/>
          </c>
        </texttable>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>This draft extends signing practices for <xref target="RFC4871"/> where most generic DKIM
        Signature related security matters are discussed. Additional considerations are also
        included in <xref target="I-D.ietf-dkim-mailinglists"/>. Security considerations for the
        TPA-LLD scheme are mostly related to attempts on the part of malicious senders to falsely
        represent themselves as other senders, often in an attempt to defraud either the recipient
        or the alleged originator.</t>

      <t>Additional security considerations regarding DKIM signing practices may be found in the
        DKIM threat analysis <xref target="RFC4686"/>.</t>

      <section title="Benefits to Recipients">
        <t>The verifier, after finding either an Author's Domain Acceptable Third-Party Signature or
          Author's Domain Acceptable Third-Party Service in a message, will have significantly
          greater confidence in the Third-Party, than when no TPA-Label Resource Record is obtained.
          This enhanced confidence may, at the recipients' discretion, cause a message to be
          delivered to the recipient without further source related assessment.</t>
      </section>

      <section title="Risks to Recipients">
        <t>The decisions a recipient makes in regard to message filtering based on TPA-Label
          Resource Records are likely to depend on the system integrity of the Third Party with
          respect to the Authentication (see <xref target="tpa-auth"/>) and the provided scope
          labels. When the 'e', 'h', or 'm' scoped domain is not confirmed or the third-party domain
          does not authenticate the sender, there is a risk of accepting potentially spoofed
          messages. When there is no out-of-band authentication confirming the sender,
          Authentication-Results header fields then play an important role. Without proper
          Authentication-Results handling by the third-party, there is also risk of accepting
          potentially spoofed messages.</t>

        <t>With this specification, third party signatures have verifiable value. When implementing
          the compliance assessment of third party signatures and TPA-Label Resource Records,
          implementers need to consider the possibility that a Bad Actor will send the recipient a
          message with a large number of valid DKIM Signatures. Verifying all of these may consume a
          large amount of processing resources such that it may be worth checking the existence of a
          TPA-Label Resource Record first. <xref target="tpa-qt"/> describes a quick check to see if
          TPA-Label Resource Records may exist. Additionally validating DKIM signatures and
          obtaining related resource records might be limited to known trustworthy domains.</t>

        <t>Services that depend only upon path authorizations might permit the Author Domain to be
          spoofed and yet obtain acceptance. During such events, the Author Domain might need to
          retract its authorization from the service. For this reason, "tpa-path" authorization
          should only be used as a carefully monitored interim solution.</t>
      </section>

      <section title="Benefits to Author Domains">
        <t>TPA-Label resource records can replace domain delegations, selector/key record mirroring,
          or key exchanges. A significant number of details are associated with selector/key
          records. These details include user limitations, suitable services, key resource record's
          Time-To-Live, revocation and update procedures, and how the DKIM Signature header field's
          'i=' semantics are to be applied. In addition, services that depend upon DKIM keys are
          better secured by not delegating these DKIM keys, where instead the TPA-LLD scheme allows
          Author Domains an ability to limit the scope of their authorizations, while also not being
          mistaken for having authenticated the entity submitting the message.</t>

        <t>TPA-Label Resource Records convey which domains are authoritative even when they are not
          the Author Domain. However, authorized domains are unable to utilize the DKIM signature's
          'i=' semantics to directly assert which identifiers on whose behalf a signature was added.
          As such, no domain should be authorized unless it is trusted to ensure the Alleged Author
          of an email undergoes authentication that offers acceptable protections for the Author
          Domain. For example, such authentication might ensure submitting entities have
          demonstrated receipt of "pingback" messages sent to the Author Address contained within
          the messages being signed.</t>

        <t>By deploying TPA-Label Resource Records, Author Domains benefit when recipients assess
          signing practice compliance by using the TPA-LLD scheme. These recipients will be less
          likely to drop the Author Domain's genuine messages, whenever the Author Domain attempts
          to restrict acceptance. Restricting acceptance of non-compliant messages is the basic
          motivation for publishing ADSP records. In addition, recipients are more likely to
          validate Authorized Third Party Domain Signatures.</t>

        <t>Broader use of restrictive ADSP policies provides a better likelihood of being able to
          eliminate a greater range of non-compliant messages, in addition to improving acceptance
          from authorized sources. With authorization, scope labels allow the Author Domain to
          control message attributes even from the authorized third parties.</t>

        <t>Signing domains having good reputations referenced by a TPA-LLD might therefore provide a
          means to safely extend limited compliance assessment resources to otherwise unknown
          domains or SMTP Clients.</t>
      </section>

      <section title="Risks to Author Domains">
        <t>As indicated in <xref target="eval-3p-tpa-domain"/>, there is ultimately a trust of the
          third party domain to do the right thing and not generate, or allow others to generate,
          messages that falsely appear to be from the Author Domain. The authentication methods in
          place for different email elements need to be carefully reflected in the scope of the TPA
          records.</t>

        <t>By authorizing mailing lists with TPA-Label Resource Records, this could cause a loss of
          confidentiality in mailing list participation by the Author Domain. This might help Bad
          Actors deduce which subscription related email the Author Domain may receive. Because of
          the hashing function in generating the TPA-label, anyone wishing to discover which domains
          are being authorized, has to probe each TPA-label based on the exact signing domain. In
          addition, service organizations or community groups are able to share comprehensive lists
          which means, even though the domain has been authorized, that in itself does not mean the
          Author Domain is exchanging messages with the authorized domain.</t>
      </section>

      <section title="Benefits to Third Party Signers">
        <t>Third Party Signers benefit by allowing those using their service, the autonomy to
          authorize their service without needing to exchange DKIM key related details. This is
          particularly useful for mailing lists.</t>
      </section>

      <section title="Risks caused by Third Party Signers">
        <t>As mentioned before, Third Party Signers need to authenticate messages from Author
          Domains. This authentication provides a safety mechanism for the Author Domain and their
          recipients. The Third Party may not be aware of the authentication value or the message
          elements involved and make changes without understanding the impact this may have upon
          targeted Author Domains and their recipients. For example, the Third Party might stop DKIM
          signing or stop applying Authentication-Results header fields. The unexpected exposure
          might enable wide spread abuse and prove detrimental for both the Author Domain and their
          recipients.</t>
      </section>

      <section title="SHA-1 Collisions">
        <t>The use of the SHA-1 hash algorithm does not represent a security concern. The hash
          simply ensures a deterministic domain-name size is achieved. Unexpected collisions can be
          detected and handled by using the extended TPA-Label Resource Record "tpa=" option. The
          use of TPA-Label Resource Records without the TPA-Label "tpa=" options does present an
          opportunity for an adversary to attempt to find a hash collision. Message spoofing outside
          the realm of DKIM protection is likely easier to achieve than finding hash collisions.
          There is minimal risk of TPA-Labels colliding. Listing 3 x 10^45 domains has less than a
          0.1 percent risk of any two domain labels colliding.</t>
      </section>

      <section anchor="DNS" title="DNS Limits">
        <t>Use of the TPA-Label Resource Records, rather than simply listing the authorized domain,
          ensures the DNS record size is independent of the Third Party Domain. The typical domain
          name size has been steadily increasing. This increase has been caused by domain names that
          encode international character sets. Perhaps soon there will be a further increase spurred
          by an expanse of TLDs having larger international labels.</t>

        <t>The maximum domain name size allowed, per <xref target="RFC1034"/> Section 3, is 255
          bytes (or octets). Each label has a byte for its length. Every domain name has a right
          most label representing the root with a zero length, for another byte. A scheme that
          concatenates a listed domain with the publishing domain, separated by some conventional
          label, reduces the maximal domain name in half, where the conventional label reduces this
          further.</t>

        <t>If "_tpa." were used as the conventional label with a simple listing method, the maximum
          domain name size this supports would be 122 bytes. The suffix for TPA-Labels is
          "_tpa.domainkey." which consumes 16 bytes. The TPA-Label itself consumes 34 bytes. A
          domain that publishes the TPA-labels in its domain would then have 205 bytes available for
          their Author Domain. Since an Author's Domain Acceptable Third-Party Service might not
          implement DKIM, the TPA-Label is still able to authorize any domain name with a valid
          length. As a result, the maximum allowable Author Domain is increased by 83 bytes or
          68&percnt; over simple name concatenation.</t>

        <t>Normally, DNS messages should not exceed 512 bytes as per Section 2.3.4 of <xref
            target="RFC1035"/>. Using TPA-Label Resource Records in the DNS, as described by this
          document, consumes a consistent 50 bytes, in addition to the domain name publishing the
          TPA-Labels. With this being constant, a limit can be determined as a constraint to
          resource record size, to ensure a response does not exceed the maximum DNS message size.
          DNS servers that add additional resource records, for nameservers as an example, will
          further reduce available resource record capacity. Domains publishing TPA-Labels exceeding
          the DNS message limit will need to rely on recipients using TCP for DNS retrieval, or
          EDNS0 <xref target="RFC2671"/> for extended DNS lengths. <vspace blankLines="1"/></t>
      </section>
    </section>
    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>Jeff MacDonald, Michael Deutschmann, Frank Ellermann, Murray Kucherawy, and Wietse
          Venema.<vspace blankLines="5"/></t>
    </section>
  </middle>

  <back>
    <references title="Normative References"> &RFC2119; &RFC2919; &RFC3207; &RFC4408; &RFC4648;
      &RFC4871; &RFC5234; &RFC5321; &RFC5322; &RFC5451; &RFC5617; &FIPS.180-2.2002;
      &I-D.saintandre-tls-server-id-check; </references>

    <references title="Informative References">&I-D.ietf-dkim-mailinglists; &RFC5863; &RFC1034;
      &RFC1035; &RFC1930; &RFC2671; &RFC2672; &RFC4686; &RFC4954; &RFC5016; &RFC5226; &RFC5672;
        <reference anchor="apwg-globalphishingsurvey-2H2009"
        target="http://www.antiphishing.org/reports/APWG_GlobalPhishingSurvey_2H2009.pdf">
        <front>
          <title>Global Phishing Survey: Trends and Domain Name Use 2H2009</title>
          <author>
            <organization>Anti-Phishing Working Group</organization>
          </author>
          <date month="May" year="2009"/>
        </front>
      </reference>
    </references>

    <section title="DNS Example of TPA-Label Resource Record placement" toc="default">
      <figure title="">
        <artwork name="" type="" height="" width="" xml:space="preserve">
####          
# Practices for Example.com email domain using example.com, isp.com,
# and example.com.isp.com as signing domains.
####

#### 5322.From authorization for 3P domains ####

## "isp.com" TPA-Label Resource Record ##
_HTIE4SWL3L7G4TKAFAUA7UYJSS2BTEOV._tpa._domainkey.example.com. IN TXT
  "dkim=all tpa-sig; tpa=isp.com; scope=F;"

#### 5322.Sender/List-ID authorization for 3P domains ####

## "example.com.isp.com" TPA-Label Resource Record ##
_6MEHLQLKWAL5HQREXWDN2TBXAJ6VZ44B._tpa._domainkey.example.com.  IN TXT
  "dkim=all tpa-sig; tpa=*.isp.com; scope=L S;" 
     </artwork>
      </figure>
      <t>
        <vspace blankLines="100"/>
      </t>
    </section>
    <section title="C code for label generation">
      <t>The following utility can be compiled as tpa-label.c using the following:</t>
      <t>gcc -lcrypto tpa-label.c -o tpa-label</t>
      <figure title="">
        <artwork name="" type="" height="" width="" xml:space="preserve">
/*
 * TPA-Label generation utility
 * Copyright (c) 2010 IETF Trust and the persons identified as the
 * document authors.  All rights reserved.
 *
 * This document is subject to BCP 78 and the IETF Trust's Legal
 * Provisions Relating to IETF Documents
 * (http://trustee.ietf.org/license-info) in effect on the date of
 * publication of this document.  Please review these documents
 * carefully, as they describe your rights and restrictions with respect
 * to this document.  Code Components extracted from this document must
 * include Simplified BSD License text as described in Section 4.e of
 * the Trust Legal Provisions and are provided without warranty as
 * described in the Simplified BSD License.
 *
 * This document and the information contained herein are provided on an
 * "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
 * OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
 * THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
 * THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
 * WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
 */

#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;stddef.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;ctype.h&gt;
#include &lt;unistd.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;errno.h&gt;
#include &lt;openssl/sha.h&gt;

#define TPA_LABEL_VERSION   102
#define MAX_DOMAIN_NAME     256
#define MAX_FILE_NAME       1024

static char base32[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";
static char sign_on[] =
{"%s v%d.%02d Copyright (C) (2010)  The IETF Trust, Otis &amp; Black\n"};
char err_cmd[] =\
 "ERR: Command error with [%s]\n";
char use_txt[]=\
 "Usage: tpa-label [-i domain_input_file] [-o label_output_file][-v]\n";
char help_txt[]=\
 "The options are as follows:\n"\
 "-i  domain name input. Defaults to stdin. Removes trailing '.'\n"\
 "-o  TPA-Label output.  Defaults to stdout.\n"\
 "-v  Specifies Verbose Mode.\n\n";

static void usage(void);
/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

static void
usage(void)
{
    (void) fprintf(stderr, "\n%s%s", use_txt, help_txt);
    exit(1);
}
/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

int 
main (int argc, char * argv[])
{
    int  ret_val, in_mode, out_mode, verbose, done, i, j, k;
    char ch;
    unsigned int len;
    unsigned long long b_5;
    char in_fn[MAX_FILE_NAME], out_fn[MAX_FILE_NAME];
    unsigned char in_buf[MAX_DOMAIN_NAME + 2];
    unsigned char sha_res[20], tpa_label[33];
    FILE *in_file, *out_file;

    ret_val = in_mode = out_mode = verbose = done = 0;
    len = 0;

    while ((ch = getopt(argc, argv, "i:o:v")) != -1)
    {
        switch (ch) 
        {
            case 'i':
                in_mode = 1;          /* input from file */
                (void) strncpy(in_fn, optarg, sizeof(in_fn));
                in_fn[sizeof(in_fn) - 1] = '\0';
                break;
            case 'o':
                out_mode = 1;         /* out to file */
                (void) strncpy(out_fn, optarg, sizeof(out_fn));
                out_fn[sizeof(out_fn) - 1] = '\0';
                break;
            case 'v':
                verbose = 1;
                break;
            case '?':
            default:
                (void) usage();
                break;
        }
    };

    if (in_mode)
    {
        if ((in_file = fopen(in_fn, "r")) == NULL)
        {
            (void) fprintf(stderr,
                           "ERR: Error opening [%s] input file.\n",
                           in_fn);
            exit(2);
        }
    }
    else
    {
        in_file = stdin;
    }

    if (out_mode)
    {
        if ((out_file = fopen(out_fn, "w")) == NULL)
        {
            (void) fprintf(stderr, 
                           "ERR: Error opening [%s] output file.\n",
                           out_fn);
            exit(3);
        }
    }
    else
    {
        out_file = stdout;
    }

    if (out_mode &amp;&amp; verbose)
    {
        (void) printf(sign_on, "tpa-label utility",
                      TPA_LABEL_VERSION / 100,
                      TPA_LABEL_VERSION % 100);
    }

    for (i = 0; i &lt; MAX_DOMAIN_NAME &amp;&amp; !done; i++)
    {
        if ((ch = fgetc(in_file)) == EOF)
        {
            ch = 0;
        }
        else  if (ch == '\n' || ch == '\r')
        {
            ch = 0;
        }

        in_buf[i] = tolower(ch);

        if (ch == 0) 
        {
            len = i;         /* string length */
            done = 1;     
        }
    }

    if (!done)
    {
        (void) fprintf(stderr, "ERR: Domain name too long.\n");
        exit (4);
    }

    if (len &amp;&amp; in_buf[len - 1] == '.')    /* remove any trailing "." */
    {
        len--;
        in_buf[len] = 0;     /* replace trailing "." with 0 */
    }

    in_buf[len] = 0;         /* terminate string */  

    if (len &lt; 2)
    {
        (void) 
        fprintf(stderr,
                "ERR: Domain name [%s] too short with %d length.\n",
                in_buf,
                len);
        exit (5);
    }

    SHA1(in_buf, len, sha_res);

    if (verbose)
    {
        printf("Normalized Domain = [%s] %d, SHA-1 = ", in_buf, len);

        for (i = 0; i &lt; 20; i++)
        {
            printf("%02x", sha_res[i]);
        }
        printf("\nTPA-Label: 5 bit intervals left to right.\n");
    }

    /* process sha1 results 4 times by 40 bits (160 bits) */
    for (i = 0, j = 0; i &lt; 4 ; i++)         
    {
        b_5 =  (unsigned long long) sha_res[(i * 5)] &lt;&lt; 32;
        b_5 |= (unsigned long long) sha_res[(i * 5) + 1] &lt;&lt; 24;
        b_5 |= (unsigned long long) sha_res[(i * 5) + 2] &lt;&lt; 16;
        b_5 |= (unsigned long long) sha_res[(i * 5) + 3] &lt;&lt; 8;
        b_5 |= (unsigned long long) sha_res[(i * 5) + 4];

        if (verbose)
        {
            printf(" {%010llX}-&gt;", b_5);
        }

        for (k = 35; k &gt;= 0; k-= 5, j++)    /* convert 40 bits (5x8) */
        {
            tpa_label[j] = base32[(b_5 &gt;&gt; k) &amp; 0x1F];

            if (verbose)
            {
                printf(" %02X:%c", 
                       (unsigned int)(b_5 &gt;&gt; k) &amp; 0x1F,
                       tpa_label[j]);
            }
        }
        if (verbose)
        {
            printf ("\n");
        }
    }
    if (verbose)
    {
        printf("\n");
    }
    tpa_label[j] = 0;   /* terminate label string */
    fprintf(out_file, "_%s", tpa_label);
    printf("\n");

    /* close */
    if (out_mode)
    {
        if (fclose (out_file) != 0)
        {
            (void) fprintf(stderr,
                           "ERR: Unable to close %s output file.\n",
                           out_fn);
            ret_val = 6;
        }
    }
    if (in_mode)
    {
        if (fclose (in_file) != 0)
        {
            (void) fprintf(stderr,
                           "ERR: Unable to close %s input file.\n",
                           in_fn);
            ret_val = 7;
        }
    }
    return (ret_val);
 }
        </artwork>
      </figure>
    </section>
  </back>
</rfc>
