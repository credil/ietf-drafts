<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2804 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2804.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3265 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3265.xml">
<!ENTITY RFC4574 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4574.xml">
<!ENTITY RFC3840 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3840.xml">
<!ENTITY RFC3841 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3841.xml">
<!ENTITY RFC4508 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4508.xml">
<!ENTITY RFC4579 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4579.xml">
<!ENTITY RFC6086 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6086.xml">
<!ENTITY I-D.ietf-siprec-req SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-req.xml">
<!ENTITY I-D.ietf-siprec-architecture SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-architecture.xml">
<!ENTITY I-D.ram-siprec-metadata SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ram-siprec-metadata.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-portman-siprec-protocol-03" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="SIPREC Protocol">The SIP-based Media Recording Protocol (SIPREC)</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Leon Portman" initials="L.P." role="editor"
            surname="Portman">
      <organization>NICE Systems</organization>
      <address>
        <postal>
          <street>8 Hapnina</street>
          <city>Ra'anana</city>
          <code>43017</code>
          <country>Israel</country>
        </postal>
        <email>leon.portman@nice.com</email>
      </address>
    </author>

    <author fullname="Henry Lum" initials="H." surname="Lum">
      <organization>Genesys, Alcatel-Lucent</organization>
      <address>
        <postal>
          <street>1380 Rodick Road, Suite 200</street>
          <city>Markham</city>
		  <region>Ontario</region>
          <code>L3R4G5</code>
          <country>Canada</country>
        </postal>
        <email>henry.lum@genesyslab.com</email>
      </address>
    </author>

<author initials="A." surname="Johnston" fullname="Alan Johnston">
<organization>Avaya</organization>
 <address>
  <postal><street></street>
   <city>St. Louis</city><region>MO</region><code>63124</code> 
  </postal>
  <email>alan.b.johnston@gmail.com</email>
  </address>
</author>

<author initials="A." surname="Hutton" fullname="Andrew Hutton">
<organization>Siemens Enterprise Communications</organization>
<address>
<email> 
andrew.hutton@siemens-enterprise.com
</email>
</address>
</author>

    <date month="March" year="2011" />
    <area>RAI</area>
    <workgroup>SIPREC</workgroup>
    <keyword>siprec</keyword>
    <abstract>
	  <t>SIPREC Session Recording Protocol is used for establishing recording session and reporting of the metadata of the communication session.</t>
	  <t>This document specifies the SIPREC Protocol (SIPREC).  SIPREC is used between Session Recording Client (SRC) and Session Recording Server (SRS).</t>
    </abstract>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
      <t>Communication Session recording requires establishment of the recording session between communication system and recording system. In order to allow access to such recordings, information about the communication session (metadata) is also shared between SRC and SRS.</t>

      <t>The SIPREC Requirements <xref target="I-D.ietf-siprec-req"/> list a set of requirements that need to be met by session recording protocols.  The SIPREC protocol, which is specified in this document, meets these requirements.</t>

      <t>The SIPREC protocol uses SIP as the protocol for session establishment with special attention to reducing size of the required SIP messages.  In addition, it is designed for future extendability and protocol version management to ensure backward compatability.</t>

      <t>The remainder of this document is organized as follows: Section 2 defines the terminology used throughout this document, Section 3 discusses the scope of SIPREC (i.e., which tasks fall within the scope of SIPREC and which ones are performed using different mechanisms), Section 4 provides a non-normative overview of SIPREC operation, and subsequent sections provide the normative specification of SIPREC.</t>
	  
    </section>

	<section anchor="Definitions" title="Definitions">
	  <t>The core SIPREC defintions are taken from the requirements document <xref target="I-D.ietf-siprec-req"/>.</t>
	  <t><list style="hanging"><t>Session Recording Server (SRS): A Session Recording Server (SRS) is a SIP User Agent (UA) that is a specialized media server or collector that acts as the sink of the recorded media.  An SRS is a logical function that typically archives media for extended durations of time and provides interfaces for search and retrieval of the archived media.  An SRS is typically implemented as a multi-port device that is capable of receiving media from several sources simultaneously. An SRS is typically also the sink of the recorded session metadata.</t>
   
   <t hangText="Session Recording Client (SRC)">A Session Recording Client (SRC) is a SIP User Agent (UA) that acts as the source of the recorded media, sending it to the SRS.  An SRC is a logical function.  Its capabilities may be implemented across one or more physical devices.  In practice, an SRC could be a personal device (such as a SIP phone), a SIP Media Gateway (MG), a Session Border Controller (SBC) or a SIP Media Server (MS) integrated with an Application Server (AS).  This specification defines the term SRC such that all such SIP entities can be generically addressed under one definition.  The SRC itself or another entity working on its behalf (such as a SIP Application Server) may act as the source of the recording metadata.</t>
   
   <t hangText="Communication Session (CS)">A session created between two or more SIP User Agents (UAs) that is the target for recording.</t>
   
   <t hangText="Recording Session (RS)"> The SIP session created between an SRC and SRS for the purpose of recording a Communication Session.</t>
   <t hangText="Metadata">Information that describes recorded media and the CS to which they relate.</t>
   <t hangText="SIPREC">The set of SIP extensions that supports recording of Communication Sessions.</t>
   <t hangText="Pause during a Communication Session:"> The action of temporarily discontinuing the transmission and collection of RS media.</t>
   <t hangText="Resume during a Communication Session:">The action of recommencing the transmission and collection of RS media.</t>
   </list>
   </t>
   <t>Figure 1 shows the relationship between the defintions.</t>
   
   <figure><artwork>
<![CDATA[
  +-------------+                                      +-----------+
  |             |        Communication Session         |           |
  |     A       |<------------------------------------>|     B     |
  |             |                                      |           |
  +-------------+                                      +-----------+
  ..................................................................
  .                             Session                            .
  .                            Recording                           .
  .                             Client                             .
  ..................................................................
                                   |
                                   | Recording
                                   | Session
                                   |
                                   v
                            +------------+
                            |   Session  |
                            |  Recording |
                            |   Server   |
                            +------------+
							
	   Figure 1: Relationship between CS, SRC, SRS, and RS
]]>
   </artwork></figure>
	

	</section>
	
	<section title="Scope">
	    <t>The scope of the SIPREC protocol includes the establishment of the recording sessions and the reporting of the metadata.  The following items, which is not an exhaustive list, do not represent the SIPREC protcol itself and are considered out of the scope of the SIPREC protocol:</t>
		<t><list style="symbols">
		<t>Recording policies that determine whether the CS should be recorded</t>
		<t>Retention policies that determine how long a recording is stored</t>
		<t>Searching and accessing the recorded media and metadata</t>
		<t>Delivering recording session metadata through non-SIP mechanism</t>
		</list>
		</t>
	  </section>

	<section anchor="Overview" title="Overview of operations">
	   <t>This section is informative and provides a description of SIPREC operations.</t>
	   
	   <t>As mentioned in the architecture document <xref target="I-D.ietf-siprec-architecture"/>, there are a couple of types of call flows based on the location of the Session Recording Client. The following sample call flows provide a quick overview of the operations between the SRC and the SRS.</t>
	   
	<section title="Delivering recorded media">
	   
       <t>When the SRC is deployed as a B2BUA, the SRC can route call requests from UA(A) to UA(B). As a SIP B2BUA, the SRC has access to the media path between the user agents.  When the SRC is aware that it should be recording the conversation, the SRC may bridge the media between UA(A) and UA(B).  The SRC then establishes the Recording Session with the SRS and sends replicated media towards the SRS.</t>
	   
   	   <t>An endpoint can also be acting as the SRC, and the endpoint itself will be establishing the Recording Session to the SRS.  Since the endpoint has access to the media in the communication session, the endpoint can send replicated media towards the SRS.</t>
	   
	   <t>The following basic call flow shows the SRC establishing a recording session towards the SRS. The call flow is essentially identical when the SRC is a B2BUA or as the endpoint itself.</t>

	   
	   <figure><artwork>
<![CDATA[
UA A           SRC                    UA B                    SRS
 |(1)CS INVITE  |                       |                      |
 |------------->|                       |                      |
 |              |(2)CS INVITE           |                      |
 |              |---------------------->|                      |
 |              |               (3)OK   |                      |
 |              |<----------------------|                      |
 |        (4)OK |                       |                      |
 |<-------------|                       |                      |
 |              |(5)RS INVITE (CallId + Participants) with SDP |
 |              |--------------------------------------------->|
 |              |                       |       (6)OK with SDP |
 |              |<---------------------------------------------|
 |(7)CS RTP     |                       |                      |
 |=============>|======================>|                      |
 |<=============|<======================|                      |
 |              |(8)RS RTP              |                      |
 |              |=============================================>|
 |              |=============================================>|
 |(9)CS BYE     |                       |                      |
 |------------->|                       |                      |
 |              |(10)CS BYE             |                      |
 |              |---------------------->|                      |
 |              |(11)RS BYE             |                      |
 |              |--------------------------------------------->|
 |              |                       |                      |

         Figure 2: Basic Recording Call flow
]]>								 
	   </artwork></figure>  
	</section>
    <section title="Conference focus as an SRC">	
	   <t>A conference focus may also act as an SRC since it has access to all the media from each conference participant.  In this example, a user agent may REFER the conference focus to the SRS, and the SRC may choose to mix media streams from all participants as a single media stream towards the SRS.  In order to tell the conference focus to start a recording session to the SRS, the user agent can include the srs feature tag in the Refer-To header as per <xref target="RFC4508"/>.</t>
	   
	   <figure><artwork>
<![CDATA[
 UA A                 Focus                 UA B                SRS
   |                  (SRC)                  |                   |
   |                    |                    |                   |
   |      (already in a conference)          |                   |
   |<==================>|<==================>|                   |
   |(1)REFER sip:Conf-ID Refer-To:<SRS>;srs  |                   |
   |------------------->|                                        |
   |(2)202 Accepted     |                                        |
   |<-------------------|                                        |
   |  (3)NOTIFY (Trying)|                                        |
   |<-------------------|                                        |
   |(4)200 OK           |                                        |
   |------------------->|                                        |
   |                    |(5)INVITE Contact:Conf-ID;isfocus       |
   |                    |--------------------------------------->|
   |                    |                              (6)200 OK |
   |                    |<---------------------------------------|
   |                    | (7)RTP (mixed or unmixed)              |
   |                    |=======================================>|
   |     (8)NOTIFY (OK) |                                        |
   |<-------------------|                                        |
   |(9)200 OK           |                                        |
   |------------------->|                                        |

  Figure 3: Recording call flow - SRC as a conference focus
]]>	   
	   </artwork></figure>
	</section>
	
	<section title="Delivering recording metadata">
		<t>Certain metadata, such as the attributes of the recorded media stream, are already included in the SDP of the recording session.  This information is reused as part of the metadata.  The SRC may provide an initial metadata snapshot about recorded media streams in the initial INVITE content in the recording session.  Subsequent metadata updates can be represented as a stream of events in UPDATE or reINVITE requests sent by the SRC.  These metadata updates are normally incremental updates to the initial metadata snapshot to optimize on the size of updates, however, the SRC may also decide to send a new metadata snapshot anytime.</t>
		
		<t>The SRS also has the ability to sent a request to the SRC to request to receive a new metadata snapshot update when the SRS fails to understand the current stream of incremental updates for whatever reason (ie. SRS gets a syntax/semantic error in metadata update, the SRS crashes and restarts), and the SRS may attach a reason along with the snapshot request.  This request allows both SRC and SRS to restart the states with a new metadata snapshot so that further metadata incremental updates will be based on the latest metadata snapshot.  The metadata snapshot request will be provided as an INFO package <xref target="RFC6086"/> and sent as mid-dialog messages within the recording session by the SRS.</t>
		
	    <figure><artwork>
<![CDATA[
  SRC                                                   SRS
   |                                                     |
   |(1) INVITE (metadata snapshot)                       |
   |---------------------------------------------------->|
   |                                           (2)200 OK |
   |<----------------------------------------------------|
   |(3) ACK                                              |
   |---------------------------------------------------->|
   |(4) RTP                                              |
   |====================================================>|
   |(5) UPDATE (metadata update 1)                       |
   |---------------------------------------------------->|
   |                                          (6) 200 OK |
   |<----------------------------------------------------|
   |(7) UPDATE (metadata update 2)                       |
   |---------------------------------------------------->|
   |                                          (8) 200 OK |
   |<----------------------------------------------------|
   |                (9) INFO (metadata snapshot request) |
   |<----------------------------------------------------|
   |                                         (10) 200 OK |
   |---------------------------------------------------->|
   |(11) UPDATE (metadata snapshot 2)                    |
   |---------------------------------------------------->|
   |                                         (12) 200 OK |
   |<----------------------------------------------------|
   |(13) UPDATE (metadata update 1 based on snapshot 2)  |
   |---------------------------------------------------->|
   |                                         (14) 200 OK |
   |<----------------------------------------------------|
   
       Figure 4: Delivering metadata via SIP INFO
]]>								 
	   </artwork></figure>
	
		<t>In some cases session metadata can be conveyed through non-SIP mechanism such as HTTP or JTAPI.  These non-SIP mechanisms are considered out of the scope of the SIPREC protocol, however, it is envisoned that a link with a URI can be provided in the recording session INVITE message so that the SRS can access the session metadata via the URI provided that the SRS supports the type of URI.</t>
	</section>
	   
	</section>
	
	<section anchor="extensions" title="SIP Extensions for Recording Session">

       <t>The following sections describe SIP extensions for the Recording Session.</t>

	   <t>The From header must contain the identity of the SRC.  Participants information is not recorded in the From or To header; they are included in the metadata information.</t>
	   
	   <t>Note that a recording session does not have to have live within the scope of a single communication session. As outline in REQ-005 of <xref target="I-D.ietf-siprec-req"/>, the recording session can be established in the absence of a communication session.  In this case, the SRC must offer an SDP with zero m= lines.</t>
	   
	   <t>Recorded media from multiple communication sessions may be handled in a single recording session.  The SRC provides a reference of each recorded media stream to the metadata described in the next section.</t>

	   <t>The SRC must be able to accept re-INVITE from SRS with the updated SDP as part of the session timer mechanism.</t>

<section title="Callee Capabilities Extensions for SIP Recording">
<t>
This section discusses  how the callee capabilities defined in <xref target="RFC3840" /> can be extended for SIP call recording. 
</t><t>
SIP Callee Capabilities defines feature tags which are used to represent characteristics and capabilities of a UA.  From RFC 3840:
</t><t>
<list><t>
  "Capability and characteristic information about a UA is carried as parameters of
   the Contact header field.  These parameters can be used within
   REGISTER requests and responses, OPTIONS responses, and requests and
   responses that create dialogs (such as INVITE)."
</t></list>
</t><t>
Note that feature tags are also used in dialog modifying requests and responses such as re-INVITE and responses to a re-INVITE, and UPDATE.  The 'isfocus' feature tag, defined in <xref target="RFC4579" /> is similar semantically to this case: it indicates that the UA is acting as a SIP conference focus, and is performing a specific action (mixing) on the resulting media stream.  This information is available from OPTIONS queries, dialog package notifications, and the SIP registration event package.
</t><t>
We propose the definition of two new feature tags:  'src' and 'srs'.
</t>
<section title='src Feature Tag'>
<t>
The 'src' feature tag is used in Contact URIs by the Session Recording Client (SRC) related to recording sessions.  A Session Recording Server uses the presence of this feature tag in dialog creating and modifying requests and responses to confirm that the dialog being created is for the purpose of a Recording Session. In addition, a registrar could discover that a UA is an SRC based on the presence of this feature tag in a registration.  Other SIP Recording extensions and behaviors can be triggered by the presence of this feature tag.
</t><t>
Note that we could use a single feature tag, such as 'recording' used by either an SRC or SRS to identify that the session is a recording session.  However, due to the differences in functionality and behavior between an SRC and SRS, using only one feature tag for both is not ideal.  For instance, if a routing mistake resulted in a request from a SRC being routed back to another SRC, if only one feature tag were defined, they would not know right away about the error and could become confused.  With separate feature tags, they would realize the error immediately and terminate the session.  Also, call logs would clearly show the routing error.
</t>

</section>

<section title='srs Feature Tag'>
<t>
The 'srs' feature tag is used in Contact URIs by the Session Recording Server (SRS) related to recording sessions.  A Session Recording Client uses the presence of this feature tag in dialog creating and modifying requests and responses to confirm that the dialog being created is for the purpose of a Recording Session (REQ-30). In addition, a registrar could discover that a UA is an SRS based on the presence of this feature tag in a registration. Other SIP Recording extensions and behaviors can be triggered by the presence of this feature tag.
</t>
<t>
To ensure a recording session is redirected to an SRS, an SRC can utilize the SIP Caller Preferences extensions, defined in <xref target="RFC3841" />.  The presence of a Accept-Contact: *;sip.srs allows a UA to request that the INVITE be routed to an SRS.  Note that to be completely sure, the SRC would need to include a Require: prefs header field field in the request.
</t>
</section>
</section>

       <section title="SDP handling">
       <t>SRC can include one or more media streams to the SRS.  The SRS must respond with the same number of media descriptors in the SDP body of the 200 OK.</t>
	   
	   <t>The SRC should use a=sendonly attribute as the SRC does not expect to receive media from the SRS.  As SRS only receives RTP streams from SRS, the 200 OK response will normally contain SDP with a=recvonly attribute.</t>
	   
	   <t>Since the SRC may send recorded media of different participants (or even mixed streams) to the SRS, the SDP must provide a label on each media stream in order to identify the recorded stream with the rest of the metadata.  The a=label attribute <xref target="RFC4574"/> will be used to identify each recorded media stream, and the label name will be used as the reference for the metadata.  Note that a participant may have multiple streams (audio and video) and each stream is labeled separately.</t>
	   
    <figure><artwork>
	<![CDATA[
           v=0
           o=SRS 0 0 IN IP4 172.22.3.8
           s=SRS
           c=IN IP4 172.22.3.8
           t=0 0
           m=audio 12241 RTP/AVP 0 4 8
           a=sendonly
           a=label:1
           m=audio 12242 RTP/AVP 98
           a=rtpmap:98 H264/90000
           a=fmtp:98 ...
           a=sendonly
           a=label:2
           m=audio 12243 RTP/AVP 0 4 8
           a=sendonly
           a=label:3
           m=audio 12244 RTP/AVP 98
           a=rtpmap:98 H264/90000
           a=fmtp:98 ...
           a=sendonly
           a=label:4

    Figure 6: Sample SDP with audio and video streams
]]>
   </artwork></figure>
	   
	   <t>To remove a recorded media stream from the recording session, send a reINVITE and set the port to zero in the m= line.</t>
	   <t>To add a recorded media stream, send a reINVITE and add a new m= line.</t>
	   
       <t>The SRS may respond with a=inactive attribute as part of the SDP in the 200 OK response when the SRS is not ready to receive recorded media.  The SRS can send re-INVITE to update the SDP with a=recvonly when it is ready to receive media.</t>
	   
       <t>The following sequence diagram shows an example of SRS responds with SDP that contain a=inactive, and then later update media information update with re-INVITE.</t>

   <figure><artwork>
<![CDATA[
  SRC                                                   SRS
   |                                                     |
   |(1) INVITE (no offer)                                |
   |---------------------------------------------------->|
   |                         (2)200 OK with SDP inactive |
   |<----------------------------------------------------|
   |(3) ACK with SDP inactive                            |
   |---------------------------------------------------->|
   |                      ...                            |
   |                     (4) re-INVITE with SDP recvonly |
   |<----------------------------------------------------|
   |(5)200 OK with SDP sendonly                          |
   |---------------------------------------------------->|
   |                                  (6) ACK with SDP   |
   |<----------------------------------------------------|
   |(7) RTP                                              |
   |====================================================>|
   |                      ...                            |
   |(8) BYE                                              |
   |---------------------------------------------------->|
   |                                             (9) OK  |
   |<----------------------------------------------------|
    
	   Figure 7: SRS to offer with a=inactive
]]>
   </artwork></figure>

        </section>
		<section title="Metadata">

		<t>The format of the full metadata will be described as part of the mechanism in <xref target="I-D.ram-siprec-metadata"/>.</t>
		
		<t>As mentioned in the previous section, the SDP of the recording session is the metadata for all recorded media streams. The label attribute contains a reference to the rest of the metadata information.</t>
		
	    <t>For all basic metadata information such as communication session, participants, call identifiers and direction, they can be included in the initial INVITE request sent by the SRC. Metadata can be included as content in the INVITE or UPDATE request.  A new "disposition-type" of Content-Disposition is defined for this purpose and the value is "recording-session".</t>

        <t>The following SIP example for RS establishment between SRC and SRS with metadata as content.</t>
      
   <figure><artwork>
<![CDATA[
    INVITE sip:97753210@10.240.3.10:5060 SIP/2.0
    From: <sip:2000@10.226.240.3>;tag=35e195d2-947d-4585-946f-098392474
    To: <sip:Recorder@10.240.3.10>
    Call-ID: d253c800-b0d1ea39-4a7dd-3f0e20a@10.226.240.3
    CSeq: 101 INVITE
    Date: Thu, 26 Nov 2009 02:38:49 GMT
    Supported: timer
    Supported: replaces
    User-Agent: B2BUA
    Max-Forwards: 70
    Allow: INVITE,OPTIONS,INFO,BYE,CANCEL,ACK,PRACK,UPDATE,
      REFER,SUBSCRIBE,NOTIFY,PUBLISH
    Allow-Events: presence,kpml 
	Min-SE: 90
    Contact: <sip:2000@10.226.240.3:5060;transport=tcp>;isfocus;src
    Via: SIP/2.0/TCP 10.226.240.3:5060;branch=z9hG4bKdf6b622b648d9
    Session-Expires: 1800
    Content-Type: multipart/mixed;boundary=foobar
    Content-Length: [length]
    
    --foobar
    Content-Type: application/sdp
    
    v=0
    o=SRS 0 0 IN IP4 10.226.240.3
    c=IN IP4 10.226.240.3
    t=0 0
    m=audio 12241 RTP/AVP 0 4 8
    a=sendonly
    a=label:1
    
    --foobar
    Content-Type: application/rs-metadata
    Content-Disposition: recording-session
    
    [metadata content]

        Figure 8: Sample INVITE request for the recording session
]]>
   </artwork></figure>
   
        <t>Further updates to recording metadata can be deliverd as a sequence events reported in SIP UPDATE or reINVITE requests and the SRS must receive the sequence of events in order.  Since there can only be a single INVITE or UPDATE transaction happening at a time within a SIP dialog, using sequence number CSeq in the dialog can be a reliable way for the SRS to identify the receipt of the next metadata update.</t>
		
		<t>At any time during Recording Session, the SRC may send a new metadata snapshot in SIP UPDATE or reINVITE request.  All subsequent metadata updates will be based on the new metadata snapshot.</t>
		
       <section anchor="metadata_request" title="Requesting for metadata snapshot">
	   
	     <t>The SRS may send an INFO request to request for a metadata snapshot any time after the Recording Session has been established.  The INFO package is "recording-session-srs".  The format of the metadata snapshot request is described in <xref target="I-D.ram-siprec-metadata"/>.  This request allows the SRS to request for a metadata snapshot from the SRC, and is used in scenarios where the SRS is failing to process further metadata incremental updates.  Failure scenarios can include failure to parse metadata information (syntax error), failure to match metadata information with the current metadata snapshot (semantic error), or failure at the SRS.  The SRS should include the reason why a snapshot request is being made.</t>
	   
	     <t>When the SRC receives the INFO request for a metadata snapshot, the SRC should wait for any existing dialog modifying transactions to complete and then send a UPDATE request with a new metadata snapshot.  All subsequent metadata updates sent by the SRC will be based on the new metadata snapshot.</t>
	   
	   </section>
		
	   <section anchor="realtime_control" title="Recording Pause and Resume">
		 <t>To temporarily discontinue streaming and collection of recorded media from the SRC to the SRS, the SRC must send a reINVITE and set a=inactive for each recorded media stream to be paused.</t>
		 
		 <t>To resume streaming and collection of recorded media, the SRC must send a reINVITE and set a=sendonly for each recorded media stream to resume.</t>
		 
		 <t>Note that when a media stream in the CS is muted/unmuted, this information may conveyed in the metadata by the SRC.  The SRC should not modify the recorded media stream with a=inactive for mute since this operation is reserved for pausing the RS media.</t>
       </section>

   </section>
   </section>
   
   <section anchor="recording_aware_UA" title="SIP Extensions for Recording-aware User Agents">
     <t>The following sections describe SIP extensions for recording-aware UA.</t>

	 <section title="Recording awareness">
	   <t>A recording-aware UA MUST include the 'a=recording-aware' SDP attribute to indicate that the user agent can accept other recording SDP attributes listed in this section. This is a session level attribute.</t>
	   <t>If the offerer is recording-aware and the answerer is also recording-aware, the answer MUST contain the recording-aware attribute.</t>
	   <t>If the offerer is not recording-aware, the answerer MUST be prepared to provide recording indication through other existing mechanisms such as in-band media.</t>
	 </section>
	 
	 <section title="Providing recording indication">
	   <t>While there are existing mechanisms for providing an indication that a CS is being recorded, these mechanisms are usually delivered on the CS media streams such as playing an in-band tone or an announcement to the participants.  A new SDP attribute is introduced to allow a recording-aware UA to render recording indication at the user interface.</t>
	   
	   <t>The 'record' SDP attribute may appear at the session level or the media level, and may appear in either SDP offer or answer.  When the attribute is set at the session level, then the recording indication applies to all media streams within the session.  When the attribute is set at the media level, then the recording indication applies to the specified media stream only. The following is the ABNF of the 'record' attribute:</t>
	   
	   <t><list style="hanging">
	   <t>record-attr      = "a=record:" indication</t>
	   <t>indication       = "on" / "off" / "paused"</t>
	   </list>
	   </t>
	   
	   <t><list style="hanging">
	     <t hangText="on">Recording is in progress.</t>
	     <t hangText="off">No recording is in progress.</t>
		 <t hangText="paused">Recording is in progress by media is paused.</t>
	   </list></t>
	   
	 </section>
	 
	 <section anchor="record_request" title="Recording preference">
	   <t>A recording-aware UA involved in a CS may request the CS to be recorded or not recorded.  This indication of recording preference may be sent at session establishment time or during the session.</t>
	   
	   <t>A new SDP attribute "recordpref" is introduced. The SDP attribute may appear at the session level or the media level and can only appear in an SDP offer.  When the attribute is set at the session level, then the recording indication applies to all media streams within the session.  When the attribute is set at the media level, then the recording indication applies to the specified media stream only. The following is the ABNF of the recordpref attribute:</t>

	   <t><list style="hanging">
	   <t>recordpref-attr      = "a=recordpref:" pref</t>
	   <t>pref       = "record" / "norecord" / "pause" / "resume"</t>
	   </list>
	   </t>
	   
	   <t><list style="hanging">
	     <t hangText="record">Request for recording if it has not already been started.</t>
		 <t hangText="norecord">Request for no recording. If recording has already been started, then this preference indicates a request to stop recording.</t>
		 <t hangText="pause">Request to pause recording if recording is currently in progress.</t>
		 <t hangText="resume">Request to resume recording if recording is currently paused.</t>
	   </list></t>	   	   
	 </section>
	 
   </section>
   
   <section anchor="iana" title="IANA Considerations">
     <section title="New Content-Disposition Parameter Registrations">
	 <t>This document registers a new "disposition-type" value in Content-Disposition header: recording-session.</t>
	 
	 <t>recording-session   the body describes the metadata information about the recording session</t>
	 </section>
	 <section title="Media Type Registration">
	 <section title="Registration of MIME Type application/rs-metadata">
	 <t>This document registers the application/rs-metadata MIME media type in order to describe the recording session metadata. This media type is defined by the following information:</t>
	 <t>  Media type name: application</t>
	 <t>  Media subtype name: rs-metadata</t>
	 <t>  Required parameters: none</t>
	 <t>  Options parameters: none</t>
	 </section>
	 <section title="Registration of MIME Type application/rs-metadata-request">
	 <t>This document registers the application/rs-metadata-request MIME media type in order to describe a recording session metadata snapshot request. This media type is defined by the following information:</t>
	 <t>  Media type name: application</t>
	 <t>  Media subtype name: rs-metadata-request</t>
	 <t>  Required parameters: none</t>
	 <t>  Options parameters: none</t>	 
	 </section>
	 </section>
	 <section title="Info Package">
	 <t>This document registers a new INFO package for transpoting metadata requests from the SRS within a Recording Session.</t>
	 <t>Info Package Name: recording-session-srs</t>
	 <t>Reference: [RFCXXXX]</t>
	 </section>
	 <section title="SDP Attributes">
	 <t>This document registers the following new SDP attributes.</t>
	 <section title="'recording-aware' SDP Attribute">
     <t>Attribute name: recording-aware</t>
	 <t>Type of attribute: session level</t>
	 <t>Subject to charset: no</t>
	 <t>This attribute indicates that the user agent supports recording extensions. This is a property attribute which does not take a value.</t>
	 </section>
	 <section title="'record' SDP Attribute">
     <t>Attribute name: record</t>
	 <t>Long form attribute name: Recording Indication</t>
	 <t>Type of attribute: session level or media level</t>
	 <t>Subject to charset: no</t>
	 <t>This attribute provides the recording indication for the session or media stream.</t>
	 <t>Allowed attribute values: on, off, paused</t>
	 </section>
	 <section title="'recordpref' SDP Attribute">
     <t>Attribute name: recordpref</t>
	 <t>Long form attribute name: Recording Preference</t>
	 <t>Type of attribute: session level or media level</t>
	 <t>Subject to charset: no</t>
	 <t>This attribute provides the recording indication for the session or media stream.</t>
	 <t>Allowed attribute values: nopref, record, norecord, pause, resume</t>
	 </section>
	 </section>
   </section>

	<section anchor="Security" title="Security Considerations">
	<t>The recording session is fundamentally a standard SIP dialog <xref target="RFC3261"/>, therefore, the recording session can reuse any of the existing SIP security mechanism available for securing the recorded media as well as metadata.</t>
	
	   <section anchor="authentication" title="Authentication and Authorization">
	   <t>The recording session reuses the SIP mechanism to challenge requests that is based on HTTP authentication.  The mechanism relies on 401 and 407 SIP responses as well as other SIP header fields for carrying challenges and credentials.</t>
	   
	   <t>The SRS may have its own set of recording policies to authorize recording requests from the SRC. The use of recording policies is outside the scope of the SIPREC protocol.</t>
       </section>

	</section>

  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
        &RFC2119;

        &RFC2804;

	    &RFC3261;
		
		&RFC3265;
		
		&RFC4574;

		&RFC3840;

		&RFC3841;
		
		&RFC6086;

	    &I-D.ietf-siprec-req;
		
    </references>

    <references title="Informative References">
	  &I-D.ietf-siprec-architecture;
	
	  &I-D.ram-siprec-metadata;
	
      &RFC4508;
	
	  &RFC4579;

	  
    </references>
  </back>
</rfc>