<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-ietf-pcn-marking-behaviour-03"
     ipr="pre5378Trust200902">
  <front>
    <title abbrev="PCN metering and marking">Metering and marking behaviour of
    PCN-nodes</title>

    <author fullname="Philip Eardley " initials="Philip"
            surname="Eardley (Editor)">
      <organization>BT</organization>

      <address>
        <postal>
          <street>Adastral Park, Martlesham Heath</street>

          <city>Ipswich</city>

          <code>IP5 3RE</code>

          <country>UK</country>
        </postal>

        <email>philip.eardley@bt.com</email>
      </address>
    </author>

    <date day="8" month="May" year="2009" />

    <area>Transport Area</area>

    <workgroup>PCN Working Group</workgroup>

    <keyword>Sample</keyword>

    <keyword>Draft</keyword>

    <abstract>
      <t>The objective of Pre-Congestion Notification (PCN) is to protect the
      quality of service (QoS) of inelastic flows within a Diffserv domain, in
      a simple, scalable and robust fashion. This document specifies the two
      metering and marking behaviours of PCN-nodes. Threshold-metering and
      -marking marks all PCN-packets if the PCN traffic rate is greater than a
      configured rate ("PCN-threshold-rate"). Excess-traffic-metering and
      -marking marks a proportion of PCN-packets, such that the amount marked
      equals the traffic rate in excess of a configured rate
      ("PCN-excess-rate"). The level of marking allows PCN-boundary-nodes to
      make decisions about whether to admit or terminate PCN-flows.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>The objective of Pre-Congestion Notification (PCN) is to protect the
      quality of service (QoS) of inelastic flows within a Diffserv domain, in
      a simple, scalable and robust fashion. Two mechanisms are used:
      admission control, to decide whether to admit or block a new flow
      request, and (in abnormal circumstances) flow termination to decide
      whether to terminate some of the existing flows. To achieve this, the
      overall rate of PCN traffic is metered on every link in the domain, and
      PCN packets are appropriately marked when certain configured rates are
      exceeded. These configured rates are below the rate of the link thus
      providing notification to boundary nodes about overloads before any
      congestion occurs (hence "pre-congestion notification"). The level of
      marking allows boundary nodes to make decisions about whether to admit
      or terminate.</t>

      <t>This document standardises the two metering and marking behaviours of
      PCN-nodes. Their aim is to enable PCN-nodes to give an "early warning"
      of potential congestion before there is any significant build-up of
      PCN-packets in their queues. In summary, their objectives are:</t>

      <t><list style="symbols">
          <t>threshold-metering and -marking: its objective is to mark all
          PCN-packets (with a "threshold-mark") whenever the rate of
          PCN-packets is greater than its configured rate
          ("PCN-threshold-rate");</t>

          <t>excess traffic marking: whenever the rate of PCN-packets is
          greater than its configured rate ("PCN-excess-rate"), its objective
          is to mark PCN-packets (with an "excess-traffic-mark") at a rate
          equal to the difference between the bit rate of PCN-packets and the
          PCN-excess-rate.</t>
        </list></t>

      <t><xref target="RFC3168"></xref> defines a broadly RED-like default
      congestion marking behaviour, but allows alternatives to be defined;
      this document defines such an alternative.</t>

      <t>Section 2 below specifies the functions involved, which in outline
      (see Figure 1) are:</t>

      <t><list style="symbols">
          <t>Behaviour aggregate (BA) classification: decide whether an
          incoming packet is a PCN-packet or not.</t>

          <t>Dropping (optional): drop packets if the link is overloaded.</t>

          <t>Threshold-meter: determine whether the rate of PCN-packets is
          greater than its configured PCN-threshold-rate. The meter operates
          on all PCN-packets on the link, and not on individual flows.</t>

          <t>Excess-traffic-meter: measure by how much the rate of PCN-packets
          is greater than its configured PCN-excess-rate. The meter operates
          on all PCN-packets on the link, and not on individual flows.</t>

          <t>PCN-mark: actually mark the PCN-packets, if the meter functions
          indicate to do so.</t>
        </list></t>

      <t></t>

      <t><figure>
          <preamble></preamble>

          <artwork><![CDATA[                                                       
                                       +---------+   Result
                                    +->|Threshold|-------+
                                    |  |  Meter  |       | 
                                    |  +---------+       V   
         +----------+   +- - - - -+  |                +------+
         |   BA     |   |         |  |                |      |    Marked
Packet =>|Classifier|==>| Dropper |==?===============>|Marker|==> Packet
Stream   |          |   |         |  |                |      |    Stream
         +----------+   +- - - - -+  |                +------+
                                    |  +---------+       ^
                                    |  | Excess  |       |
                                    +->| Traffic |-------+ 
                                       |  Meter  |   Result
                                       +---------+         
                                            ]]></artwork>

          <postamble>Figure 1: Schematic of functions for PCN-metering and
          -marking</postamble>
        </figure></t>

      <t>Appendix A gives an example of algorithms that fulfil the
      specification of Section 2, and Appendix B provides some explanations of
      and comments on Section 2. Both the Appendices are informative.</t>

      <section title="Terminology">
        <t>In addition to the terminology defined in <xref
        target="I-D.ietf-pcn-architecture"></xref> and <xref
        target="RFC2474"></xref>, the following terms are defined:</t>

        <t><list style="symbols">
            <t>Competing-non-PCN-packet: a non PCN-packet that shares a link
            with PCN-packets and competes with them for its forwarding
            bandwidth. Competing-non-PCN-packets MUST NOT be PCN-marked (ie
            only PCN-packets can be PCN-marked). Note: In general it is not
            advised to have any competing-non-PCN-traffic.</t>

            <t>Metered-packet: a packet that is metered by the metering
            functions specified in Sections 2.3 and 2.4. A PCN-packet MUST be
            treated as a metered-packet (with the minor exception noted below
            in Section 2.4). A competing-non-PCN-packet MAY be treated as a
            metered-packet.</t>
          </list></t>
      </section>
    </section>

    <section title="Specified PCN-metering and -marking behaviours">
      <t>This section specifies the two PCN-metering and -marking behaviours.
      The descriptions are functional and are not intended to restrict the
      implementation. The informative Appendices supplement this section.</t>

      <section title="Behaviour aggregate classification function">
        <t>A PCN-node MUST classify a packet as a PCN-packet if the value of
        its DSCP and ECN fields correspond to a PCN-enabled codepoint, as
        defined in the encoding scheme applicable to the PCN-domain. Otherwise
        the packet MUST NOT be classified as a PCN-packet.</t>

        <t>A PCN-node MUST classify a packet as a competing-non-PCN-packet if
        it is not a PCN-packet and it competes with PCN-packets for its
        forwarding bandwidth on a link.</t>
      </section>

      <section title="Dropping function">
        <t>Note: if the PCN-node's queue overflows then naturally packets are
        dropped. This section describes additional action.</t>

        <t>On all links in the PCN-domain, dropping MAY be done by:</t>

        <t><list style="symbols">
            <t>metering all metered-packets to determine if the rate of
            metered-traffic is greater than its scheduling rate (ie determine
            if any packets are out-of-profile).</t>

            <t>if the rate of metered-traffic is too high, then drop
            metered-packets.</t>
          </list>If the PCN-node drops PCN-packets then:<list style="symbols">
            <t>PCN-packets that arrive at the PCN-node already
            excess-traffic-marked SHOULD be preferentially dropped;</t>

            <t>the PCN-node's excess-traffic-meter SHOULD NOT meter the
            PCN-packets that it drops.</t>
          </list></t>

        <t></t>
      </section>

      <section title="Threshold-meter function">
        <t>A PCN-node MUST implement a threshold-meter that has behaviour
        functionally equivalent to the following.</t>

        <t>The meter acts like a token bucket, which is sized in bits and has
        a configured bit rate, termed PCN-threshold-rate. The amount of tokens
        in the token bucket is termed Ttm. Tokens are added at the
        PCN-threshold-rate, to a maximum value BStm. Tokens are removed equal
        to the size in bits of the metered-packet, to a minimum Ttm=0.
        (Explanation of abbreviations: T is short for Tokens, BS for bucket
        size, and tm for threshold-meter.)</t>

        <t>The token bucket has a configured intermediate depth, termed
        threshold. If Ttm &lt; threshold, then the meter indicates to the
        marking function that the packet is to be threshold-marked; otherwise
        it does not.</t>
      </section>

      <section title="Excess-traffic-meter function">
        <t>A PCN-packet SHOULD NOT be metered (by this excess-traffic-meter
        function) in the following two cases:</t>

        <t><list style="symbols">
            <t>If the packet is already excess-traffic-marked on arrival at
            the PCN-node;</t>

            <t>If this PCN-node drops the packet.</t>
          </list></t>

        <t>Otherwise the PCN-packet MUST be treated as a metered-packet, that
        is it is metered by the excess-traffic-meter.</t>

        <t>A PCN-node MUST implement an excess-traffic-meter that has
        behaviour functionally equivalent to the following.</t>

        <t>The meter acts like a token bucket, which is sized in bits and has
        a configured bit rate, termed PCN-excess-rate. The amount of tokens in
        the token bucket is termed Tetm. Tokens are added at the
        PCN-excess-rate, to a maximum value BSetm. Tokens are removed equal to
        the size in bits of the metered-packet, to a minimum Tetm=0. If the
        token bucket is empty (Tetm = 0), then the meter indicates to the
        marking function that the packet is to be excess-traffic-marked.
        (Explanation of abbreviations: T is short for Tokens, BS for bucket
        size, and etm for excess-traffic-meter.)</t>

        <t>In addition to the above, if the token bucket is within an MTU of
        being empty, then the meter SHOULD indicate to the marking function
        that the packet is to be excess-traffic-marked; MTU means the maximum
        size of PCN-packets on the link ("packet size independent
        marking").</t>

        <t>Otherwise the meter MUST NOT indicate marking.</t>
      </section>

      <section title="Marking function">
        <t>A PCN-packet MUST be marked to reflect the metering results by
        setting its encoding state appropriately, as specified by the specific
        encoding scheme that applies in the PCN-domain. A consistent choice of
        encoding scheme MUST be made throughout a PCN-domain.</t>

        <t>A PCN-node MUST NOT:</t>

        <t><list style="symbols">
            <t>PCN-mark a packet that is not a PCN-packet;</t>

            <t>change a non PCN-packet into a PCN-packet;</t>

            <t>change a PCN-packet into a non PCN-packet.</t>
          </list></t>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document makes no request of IANA.</t>

      <t>Note to RFC Editor: this section may be removed on publication as an
      RFC.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Security considerations are discussed in detail in <xref
      target="I-D.ietf-pcn-architecture"></xref>.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>This document is the result of extensive collaboration within the PCN
      WG. Amongst the most active contributors to the development of the ideas
      specified in this document have been Jozef Babiarz, Bob Briscoe, Kwok-Ho
      Chan, Anna Charny, Philip Eardley, Georgios Karagannis, Michael Menth,
      Toby Moncaster, Daisuke Satoh, and Joy Zhang. Appendix A is based on
      text from Michael Menth.</t>

      <t>This document is a development of <xref
      target="I-D.briscoe-tsvwg-cl-phb"></xref>. Its authors are therefore
      contributors to this document: Bob Briscoe, Philip Eardley, Dave
      Songhurst, Francois Le Faucheur, Anna Charny, Vassilis Liatsos, Jozef
      Babiarz, Kwok-Ho Chan, Stephen Dudley, Georgios Karagiannis, Attila
      Bader, Lars Westberg.</t>

      <t>Thanks to those who've made comments on this draft: Michael Menth,
      Joe Babiarz, Fred Baker, Bob Briscoe, Ken Carlberg, Anna Charny,
      Ruediger Geib, Wei Gengyu, Fortune Huang, Christian Hublet, Ingemar
      Johansson, Georgios Karagiannis, Toby Moncaster, Dimitri Papadimitriou,
      Daisuke Satoh. Michael Menth, Joe Babiarz, Anna Charny reviewed a
      preliminary version of the prior individual internet draft.</t>
    </section>

    <section title="Changes (to be removed by RFC Editor)">
      <t></t>

      <section title="Changes to -03 from -02">
        <t>Updates to take account of last call comments as follows:</t>

        <t><list style="symbols">
            <t>renamed from "marking" to "metering and marking" (throughout) -
            the former was intended as shorthand for the latter, but this was
            found confusing</t>

            <t>added 'common capsule' summary of PCN to Introduction and
            removed extraneous material</t>

            <t>replaced the term 'traffic conditioning' by 'dropping'
            (throughout) - since the former has a wider meaning than just
            dropping.</t>

            <t>discussion of the case with baseline encoding where there are
            two PCN states - this is now done just once - in Section B.2.</t>

            <t>added in Section B.5 "The PCN-threshold-rate is configured at
            less than the rate allocated to the PCN-traffic class" and in B.6
            "The PCN-excess-rate is configured at less than (or possibly equal
            to) the rate allocated to the PCN-traffic class".</t>

            <t>configuring the PCN-excess-rate at greater than (or possibly
            equal to) the PCN-threshold-rate - this is now in one place, as
            advice is B5 &amp; B6.</t>

            <t>SB.1: "voice-admit" corrected with references to I-D
            ietf-tsvwg-admitted-realtime-dscp and RFC5127.</t>

            <t>"CL/SM edge behaviour" altered to the less obscure "controlled
            load edge behaviour" and a reference added.</t>

            <t>S2.3, 2.4 &amp; Appendix A: altered some of the abbreviations,
            for better consistency with approach of RFC2698. eg
            TBthreshold.fill =&gt; Ttm.</t>

            <t>the ACKs section improved</t>

            <t>other minor corrections and clarifications</t>
          </list></t>
      </section>

      <section title="Changes to -02 from -01">
        <t>Updates as follows:</t>

        <t><list style="symbols">
            <t>added notes (end of S1.1 &amp; 2.5) to clarify what
            "excess-traffic-marked" means when there is only one encoding for
            PCN-marking</t>

            <t>added explanations for in Section B.4 and B.6 about why various
            things are SHOULD or SHOULD NOT rather than MUST or MUST NOT.</t>

            <t>Deleted a couple of paragraphs about encoding states, as they
            are relevant to encoding documents rather than this document.</t>
          </list></t>
      </section>

      <section title="Changes to -01 from -00">
        <t>Updates as follows:</t>

        <t><list style="symbols">
            <t>corrected the term 'not PCN-marked' to 'not-marked'
            (throughout)</t>

            <t>re-phrased the definition of competing-non-PCN-packets</t>

            <t>corrected the definition of metered-packet</t>

            <t>delete most of Section 2.5 (marking function). The material
            deleted belongs as part of <xref
            target="I-D.ietf-pcn-baseline-encoding"></xref>; other encoding
            schemes would need to include similar material.</t>

            <t>deleted Appendix C (it was only a temporary archive of material
            concerning per domain behaviour and PCN-boundary-node
            operation)</t>

            <t>clarifications throughout</t>

            <t>made all references Informative</t>
          </list></t>
      </section>

      <section title="Changes to -00">
        <t>First version of WG draft, derived from
        draft-eardley-pcn-marking-behaviour-01, with the following
        changes:</t>

        <t><list style="symbols">
            <t>Removed material concerning per domain behaviour and
            PCN-boundary-node operation (temporarily archived to Appendix
            C)</t>

            <t>Removed mention of downgrading as an option for per-hop traffic
            conditioning. In fact, downgrading is no longer allowed because S
            2.6 now says "A PCN-node MUST NOT ...change a PCN-packet into a
            non PCN-packet".</t>

            <t>Traffic conditioning is now a MAY. Since in general flow
            termination (not traffic conditioning) is PCN's method for
            handling problems of too much traffic.</t>

            <t>Metered-packets: competing-non-PCN-packets now MAY be metered.
            Since it is recommended that the operator doesn't allow any
            competing-non-PCN-traffic, and (if there is) there are potentially
            other ways of coping.</t>

            <t>No changes (outside traffic conditioning &amp; metering of
            competing-non-PCN-traffic) to the Normative sections of the
            draft.</t>

            <t>Appendix B.1 added about competing-non-PCN-traffic. Recommended
            that there is no such traffic, but guidance given if there is.</t>
          </list></t>
      </section>
    </section>
  </middle>

  <back>
    <references title="Informative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.2474"?>

      <?rfc include="reference.RFC.2475"?>

      <?rfc include="reference.RFC.3168"?>

      <?rfc include="reference.RFC.5127"?>

      <?rfc include="reference.I-D.ietf-pcn-architecture" ?>

      <?rfc include="reference.I-D.ietf-pcn-baseline-encoding" ?>

      <?rfc include="reference.I-D.ietf-tsvwg-admitted-realtime-dscp" ?>

      <?rfc include="reference.I-D.briscoe-tsvwg-byte-pkt-mark" ?>

      <?rfc include="reference.I-D.briscoe-tsvwg-cl-architecture" ?>

      <?rfc include="reference.I-D.briscoe-tsvwg-cl-phb" ?>

      <?rfc include="reference.I-D.charny-pcn-comparison" ?>

      <?rfc include="reference.I-D.taylor-pcn-cl-edge-behaviour" ?>

      <reference anchor="Menth"
                 target="http://www3.informatik.uni-wuerzburg.de/staff/menth/Publications/Menth08-PCN-Overview.pdf">
        <front>
          <title>Menth</title>

          <author fullname="Menth, Michael; Lehrieder, Frank; Briscoe, Bob; Eardley, Philip; Moncaster, Toby; Babiarz, Jozef; Charny, Anna; Zhang, Xinyang (Joy);  Taylor, Tom; Chan, Kwok-Ho; Satoh, Daisuke; Geib, Ruediger; Karagiannis, Georgios. Accepted for publication in IEEE Communications Surveys and Tutorials, 2009"
                  surname=""></author>

          <date month="" year="2008" />
        </front>
      </reference>
    </references>

    <section title="Example algorithms">
      <t>Note: This Appendix is informative, not normative. It is an example
      of algorithms that implement Section 2 and is based on <xref
      target="I-D.charny-pcn-comparison"></xref> and <xref
      target="Menth"></xref>.</t>

      <t>There is no attempt to optimise the algorithms. It implements the
      metering and marking functions together. It is assumed that three
      encoding states are available (one for threshold-marked, one for
      excess-traffic-marked and one for not PCN-marked). It is assumed that
      all metered-packets are PCN-packets and that the link is never
      overloaded.</t>

      <section title="Threshold-metering and -marking">
        <t>A token bucket with the following parameters:<list style="symbols">
            <t>PCN-threshold-rate: token rate of token bucket
            (bits/second)</t>

            <t>BStm: depth of token bucket (bits)</t>

            <t>threshold: marking threshold of token bucket (bits)</t>

            <t>lastUpdate: time the token bucket was last updated
            (seconds)</t>

            <t>Ttm: amount of tokens in token bucket (bits)</t>
          </list></t>

        <t>A PCN-packet has the following parameters:<list style="symbols">
            <t>packet_size: the size of the PCN-packet (bits)</t>

            <t>packet_mark: the PCN encoding state of the packet</t>
          </list></t>

        <t>In addition there are the parameters:<list style="symbols">
            <t>now: the current time (seconds)</t>
          </list></t>

        <t>The following steps are performed when a PCN-packet arrives on a
        link:</t>

        <t><list style="symbols">
            <t>Ttm = min(BStm, Ttm + (now - lastUpdate) * PCN-threshold-rate);
            // add tokens to token bucket</t>

            <t>Ttm = max(0, Ttm - packet_size); // remove tokens from token
            bucket</t>

            <t>if ((Ttm &lt; threshold) AND (packet_mark !=
            excess-traffic-marked)) then packet_mark = threshold-marked; // do
            threshold marking, but don't re-mark packets that are already
            excess-traffic-marked</t>

            <t>lastUpdate = now</t>
          </list></t>
      </section>

      <section title="Excess-traffic-metering and -marking">
        <t>A token bucket with the following parameters:<list style="symbols">
            <t>TBexcess.PCN-excess-rate: token rate of token bucket
            (bits/second)</t>

            <t>BSetm: depth of TB in token bucket (bits)</t>

            <t>TBexcess.lastUpdate: time the token bucket was last updated
            (seconds)</t>

            <t>Tetm: amount of tokens in token bucket (bits)</t>
          </list></t>

        <t>A PCN-packet has the following parameters:<list style="symbols">
            <t>packet_size: the size of the PCN-packet (bits)</t>

            <t>packet_mark: the PCN encoding state of the packet</t>
          </list></t>

        <t>In addition there are the parameters:<list style="symbols">
            <t>now: the current time (seconds)</t>

            <t>MTU: the maximum transfer unit of the link (or the known
            maximum size of PCN-packets on the link) (bits)</t>
          </list></t>

        <t>The following steps are performed when a PCN-packet arrives on a
        link:</t>

        <t><list style="symbols">
            <t>Tetm = min(BSetm, Tetm + (now - TBexcess.lastUpdate) *
            TBexcess.PCN-excess-rate); // add tokens to token bucket</t>

            <t>if (packet_mark != excess-traffic-marked) then Tetm = max(0,
            Tetm - packet_size); // remove tokens from token bucket, but do
            not meter packets that are already excess-traffic-marked</t>

            <t>if (Tetm &lt; MTU) then packet_mark = excess-traffic-marked; //
            do (packet size independent) excess traffic marking</t>

            <t>lastUpdate = now</t>
          </list></t>
      </section>
    </section>

    <section title="Implementation notes">
      <t>Note: This Appendix is informative, not normative. It comments on
      Section 2.</t>

      <section title="Competing-non-PCN-traffic">
        <t>In general it is not advised to have any competing-non-PCN-traffic,
        essentially because the unpredictable amount of
        competing-non-PCN-traffic makes the PCN mechanisms less accurate and
        so reduces PCN's ability to protect the QoS of admitted PCN-flows
        <xref target="I-D.ietf-pcn-architecture"></xref>. But if there is
        competing-non-PCN-traffic, then there needs to be:</t>

        <t><list style="numbers">
            <t>a mechanism to limit it, for example:<list style="symbols">
                <t>limit the rate at which competing-non-PCN-traffic can be
                forwarded on each link in the PCN-domain. One method for
                achieving this is to queue competing-non-PCN-packets
                separately from PCN-packets, and to limit the scheduling rate
                of the former. Another method is to drop
                competing-non-PCN-packets in excess of some rate.</t>

                <t>police competing-non-PCN-traffic at the PCN-ingress-nodes.
                For example, as in the Diffserv architecture - although its
                static traffic conditioning agreements risk a focused overload
                of traffic from several PCN-ingress-nodes on one link.</t>

                <t>it is known by design that the level of
                competing-non-PCN-traffic is always very small - perhaps it
                consists of operator control messages only.</t>
              </list></t>

            <t>In general PCN's mechanisms should take account of
            competing-non-PCN-traffic, in order to improve the accuracy of the
            decision about whether to admit (or terminate) a PCN-flow. For
            example:<list style="symbols">
                <t>competing-non-PCN-traffic contributes to the PCN meters (ie
                competing-non-PCN-packets are treated as metered-packets).</t>

                <t>each PCN-node reduces, on its links, the PCN-threshold-rate
                and PCN-excess-rate, in order to allow 'headroom' for the
                competing-non-PCN-traffic; also limit the maximum forwarding
                rate of competing-non-PCN-traffic to be less than the
                'headroom'. In this case competing-non-PCN-packets are not
                treated as metered-packets.</t>
              </list></t>
          </list>It is left up to the operator to decide on appropriate
        action. Dropping is discussed further in Section B.4.</t>

        <t>One specific example of competing-non-PCN-traffic occurs if the
        PCN-compatible Diffserv codepoint is one of those that <xref
        target="I-D.ietf-tsvwg-admitted-realtime-dscp"></xref>) defines as
        suitable for use with admission control, and there is such non
        PCN-traffic in the PCN-domain. A similar example could occur for
        Diffserv codepoints of the Real-Time Treatment Aggregate <xref
        target="RFC5127"></xref>). In such cases PCN-traffic and
        competing-non-PCN-traffic are distinguished by different values of the
        ECN field <xref target="I-D.ietf-pcn-baseline-encoding"></xref>.</t>

        <t>Another example would occur if there is more than one
        PCN-compatible Diffserv codepoint in a PCN-domain. For instance,
        suppose there are two PCN-BAs treated at different priorities. Then as
        far as the lower priority PCN-BA is concerned, the higher priority
        PCN-traffic needs to be treated as competing-non-PCN-traffic.</t>
      </section>

      <section title="Scope">
        <t>It may be known, eg by the design of the network topology, that
        some links can never be pre-congested (even in unusual circumstances,
        eg after the failure of some links). There is then no need to deploy
        PCN behaviour on those links.</t>

        <t>The meters can be implemented on the ingoing or outgoing interface
        of a PCN-node. It may be that existing hardware can support only one
        meter per ingoing interface and one per outgoing interface. Then for
        instance threshold-metering could be run on all the ingoing interfaces
        and excess-traffic-metering on all the outgoing interfaces; note that
        the same choice must be made for all the links in a PCN-domain to
        ensure that the two metering behaviours are applied exactly once for
        all the links.</t>

        <t>The baseline encoding <xref
        target="I-D.ietf-pcn-baseline-encoding"></xref> specifies only two
        encoding states (PCN-marked and not-marked). In this case,
        "excess-traffic-marked" means a packet that is PCN-marked as a result
        of the excess-traffic-meter function, and "threshold-marked" means a
        packet that is PCN-marked as a result of the threshold-meter function.
        As far as terminology is concerned, this interpretation is consistent
        with that defined in <xref target="I-D.ietf-pcn-architecture"></xref>.
        Note that a deployment needs to make a consistent choice throughout
        the PCN-domain whether PCN-marked is interpreted as
        excess-traffic-marked or threshold-marked.</t>

        <t>Note that even if there are only two encoding states, it is still
        required that both the meters are implemented, in order to ease
        compatibility between equipment, and to remove a configuration option
        and associated complexity. Hardware with limited availability of token
        buckets could be configured to run only one of the meters, but it must
        be possible to enable either meter. Although in the scenario with two
        encoding states indications from one of the meters are ignored by the
        marking function, they may be logged or acted upon in some other way,
        for example by the management system or an explicit signalling
        protocol; such considerations are out of scope of this document.</t>
      </section>

      <section title="Behaviour aggregate classification">
        <t>Configuration of PCN-nodes will define what values of the DSCP and
        ECN fields indicate a PCN-packet in a particular PCN-domain.</t>

        <t>Configuration will also define what values of the DSCP and ECN
        fields indicate a competing-non-PCN-packet in a particular
        PCN-domain.</t>
      </section>

      <section title="Dropping">
        <t>The objective of the dropping function is to minimise the queueing
        delay suffered by metered-traffic at a PCN-node, since PCN-traffic
        (and perhaps competing-non-PCN-traffic) is expected to be inelastic
        traffic generated by real time applications. In practice it would be
        defined as exceeding a specific traffic profile, typically based on a
        token bucket.</t>

        <t>If there is no competing-non-PCN-traffic, then it is not expected
        that the dropping function is needed, since PCN's flow admission and
        termination mechanisms limit the amount of PCN-traffic. Even so, it
        still might be implemented as a back stop against misconfiguration of
        the PCN-domain, for instance.</t>

        <t>If there is competing-non-PCN-traffic, then the details of the
        dropping function will depend on how the router's implementation
        handles the two sorts of traffic (the discussion here is based on that
        in <xref target="I-D.ietf-tsvwg-admitted-realtime-dscp"></xref>):</t>

        <t><list style="symbols">
            <t>a common queue for PCN-traffic and competing-non-PCN-traffic,
            and a traffic conditioner for the competing-non-PCN-traffic;
            or</t>

            <t>separate queues. In this case the amount of
            competing-non-PCN-traffic can be limited by limiting the rate at
            which the scheduler (for the competing-non-PCN-traffic) forwards
            packets.</t>
          </list></t>

        <t>Note that only dropping of packets is allowed. Downgrading of
        packets to a lower priority BA is not allowed (see B.7), since it
        would lead to packet mis-ordering. Shaping ("the process of delaying
        packets" <xref target="RFC2475"></xref>) is not suitable if the
        traffic comes from real time applications.</t>

        <t>In general it is reasonable for competing-non-PCN-traffic to get
        harsher treatment than PCN-traffic (ie competing-non-PCN-packets are
        preferentially dropped), because PCN's flow admission and termination
        mechanisms are stronger than the mechanisms that are likely to be
        applied to the competing-non-PCN-traffic. The PCN mechanisms also mean
        that a dropper should not be needed for the PCN-traffic.</t>

        <t>Preferential dropping of excess-traffic-marked packets: Section 2.3
        specifies: "If the PCN-node drops PCN-packets then ... PCN-packets
        that arrive at the PCN-node already excess-traffic-marked SHOULD be
        preferentially dropped". In brief, the reason is that, with the
        "controlled load" edge behaviour <xref
        target="I-D.taylor-pcn-cl-edge-behaviour"></xref> this avoids
        over-termination in the event of multiple bottlenecks in the
        PCN-domain <xref target="I-D.charny-pcn-comparison"></xref>. A fuller
        explanation is as follows. The optimal dropping behaviour depends on
        the particular edge behaviour <xref target="Menth"></xref>. A single
        dropping behaviour is defined, as it is simpler to standardise,
        implement and operate. The standardised dropping behaviour is at least
        adequate for all edge behaviours (and good for some), whereas others
        are not (for example with tail dropping far too much traffic may be
        terminated with the "controlled load" edge behaviour, in the event of
        multiple bottlenecks in the PCN-domain <xref
        target="I-D.charny-pcn-comparison"></xref>). The dropping behaviour is
        defined as a &lsquo;SHOULD&rsquo;, rather than a &lsquo;MUST&rsquo;,
        in recognition that other dropping behaviour may be preferred in
        particular circumstances, for example: (1) with the "marked flow"
        termination edge behaviour, preferential dropping of unmarked packets
        may be better <xref target="Menth"></xref>; (2) tail dropping may make
        PCN marking behaviour easier to implement on current routers.</t>

        <t>Exactly what "preferentially dropped" means is left to the
        implementation. It is also left to the implementation what to do if
        there are no excess-traffic-marked PCN-packets available at a
        particular instant.</t>

        <t>Section 2.2 also specifies: "the PCN-node's excess-traffic-meter
        SHOULD NOT meter the PCN-packets that it drops." This avoids
        over-termination <xref target="Menth"></xref>. Effectively it means
        that the dropping function (if present) should be done before the
        meter functions - which is natural.</t>
      </section>

      <section title="Threshold-metering">
        <t>The description is in terms of a &lsquo;token bucket with
        threshold&rsquo; (which <xref
        target="I-D.briscoe-tsvwg-cl-architecture"></xref> views as a virtual
        queue). However the description is not intended to standardise
        implementation.</t>

        <t>The PCN-threshold-rate is configured at less than the rate
        allocated to the PCN-traffic class. Also, the PCN-threshold-rate is
        less than, or possibly equal to, the PCN-excess-rate.</t>

        <t>Section 2.3 defines: "If Ttm &lt; threshold, then the meter
        indicates to the marking function that the packet is to be
        threshold-marked; otherwise it does not." Note that a PCN-packet is
        marked without explicit additional bias for the packet's size.</t>

        <t>The behaviour must be functionally equivalent to the description in
        Section 2.3. "Functionally equivalent" means the observable 'black
        box' behaviour is the same or very similar, for example if either
        precisely the same set of packets is marked, or if the set is shifted
        by one packet. It is intended to allow implementation freedom over
        matters such as:<list style="symbols">
            <t>whether tokens are added to the token bucket at regular time
            intervals or only when a packet is processed.</t>

            <t>whether the new token bucket depth is calculated before or
            after it is decided whether to mark the packet. The effect of this
            is simply to shift the sequence of marks by one packet.</t>

            <t>when the token bucket is very nearly empty and a packet arrives
            larger than Ttm, then the precise change in Ttm is up to the
            implementation. For instance:<list style="symbols">
                <t>set Ttm = 0 and indicate threshold-mark to the Marking
                function.</t>

                <t>check whether Ttm &lt; threshold and if it is then indicate
                threshold-mark to the Marking function; then set Ttm = 0.</t>

                <t>leave Ttm unaltered and indicate threshold-mark to the
                Marking function.</t>
              </list></t>
          </list><list style="symbols">
            <t>similarly, when the token bucket is very nearly full and a
            packet arrives larger than (BStm - Ttm), then the precise change
            in Ttm is up to the implementation.</t>

            <t>Note that all packets, even if already marked, are metered by
            the threshold-meter function (unlike the excess-traffic-meter
            function), because all packets should contribute to the decision
            whether there is room for a new flow.</t>
          </list></t>
      </section>

      <section title="Excess-traffic-metering">
        <t>The description is in terms of a token bucket, however the
        implementation is not standardised.</t>

        <t>The PCN-excess-rate is configured at less than (or possibly equal
        to) the rate allocated to the PCN-traffic class. Also, the
        PCN-excess-rate is greater than, or possibly equal to, the
        PCN-threshold-rate.</t>

        <t>As in Section B.3, "functionally equivalent" allows some
        implementation flexibility when the token bucket is very nearly empty
        or very nearly full.</t>

        <t>Section 2.4 specifies: "A packet SHOULD NOT be metered (by this
        excess traffic meter function) ... If the packet is already
        excess-traffic-marked on arrival at the PCN-node". This avoids
        over-termination (with some edge behaviours) in the event that the
        PCN-traffic passes through multiple bottlenecks in the PCN-domain
        <xref target="I-D.charny-pcn-comparison"></xref>. Note that an
        implementation could determine whether the packet is already
        excess-traffic-marked as an integral part of its BA classification
        function. The behaviour is defined as a &lsquo;SHOULD NOT&rsquo;,
        rather than a &lsquo;MUST NOT&rsquo;, because it may be slightly
        harder to implement than a metering function that is blind to previous
        packet markings.</t>

        <t>Section 2.4 specifies: "A packet SHOULD NOT be metered (by this
        excess traffic meter function) ... If this PCN-node drops the packet."
        This avoids over-termination <xref target="Menth"></xref>. (A similar
        statement could also be made for the threshold meter function, but is
        irrelevant, as a link that is overloaded will already be substantially
        pre-congested and hence threshold-marking all packets.) It seems
        natural to perform the dropping function before the metering
        functions, although for some equipment it may be harder to implement;
        hence the behaviour is defined as a &lsquo;SHOULD NOT&rsquo;, rather
        than a &lsquo;MUST NOT&rsquo;.</t>

        <t>Packet size independent marking is specified as a SHOULD in Section
        2.4 ( "if the token bucket is within an MTU of being empty, then the
        meter SHOULD indicate to the Marking function that the packet is to be
        excess-traffic-marked; MTU means the maximum size of PCN-packets on
        the link".) Without it, large packets are more likely to be
        excess-traffic-marked than small packets and this means that, with
        some edge behaviours, flows with large packets are more likely to be
        terminated than flows with small packets <xref
        target="I-D.briscoe-tsvwg-byte-pkt-mark"></xref> <xref
        target="Menth"></xref>. The behaviour is a &lsquo;SHOULD&rsquo;,
        rather than a &lsquo;MUST&rsquo;, because packet size independent
        marking may be slightly harder for some equipment to implement, and
        the impact of not doing it is undesirable but moderate (sufficient
        traffic is terminated, but flows with large packets are more likely to
        be terminated).</t>

        <t>Note that BSetm is independent of BStm; Tetm is independent of Ttm
        (except in that a packet changes both); and the two configured rates
        (PCN-excess-rate and PCN-threshold-rate) are independent (except that
        PCN-excess-rate &gt;= PCN-threshold-rate).</t>
      </section>

      <section title="Marking">
        <t>Section 2.5 defines: "A PCN-node MUST NOT ...change a PCN-packet
        into a non PCN-packet". This means that a PCN-node is not allowed to
        downgrade a PCN-packet into a lower priority Diffserv BA (eg it is not
        allowed as an alternative to dropping, Section 2.2).</t>

        <t>Section 2.5 defines: "A PCN-node MUST NOT ...PCN-mark a packet that
        is not a PCN-packet". This means that in the scenario where
        competing-non-PCN-packets are treated as metered-packets, a meter may
        indicate a packet is to be PCN-marked, but the marking function knows
        it cannot be marked. It is left open to the implementation exactly
        what to do in this case; one simple possibility is to mark the next
        PCN-packet. Note that unless the PCN-packets are a large fraction of
        all the metered-packets then the PCN mechanisms may not work well.</t>

        <t>Although the metering functions are described separately from the
        marking function, they can be implemented in an integrated
        fashion.</t>
      </section>
    </section>
  </back>
</rfc>