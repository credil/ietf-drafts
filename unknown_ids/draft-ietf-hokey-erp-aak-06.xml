<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='http://xml.resource.org/authoring/rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd"[
<!ENTITY rfc2119 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc5296 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5296.xml">
<!ENTITY rfc3588 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3588.xml">
<!ENTITY rfc3748 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3748.xml">
<!ENTITY rfc5836 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5836.xml">
<!ENTITY rfc4962 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4962.xml">
<!ENTITY I-D.ietf-dime-local-keytran PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-dime-local-keytran.xml">
]>
<?rfc strict="yes"?>
<?rfc comments="no"?>
<?rfc inline="yes"?>
<?rfc editing="no"?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc rfcedstyle="yes"?>
<?rfc rfcprocack="no"?>
<?rfc tocindent="yes"?>
<rfc category="std" docName="draft-ietf-hokey-erp-aak-06" ipr="trust200902">
	<front>
		<title abbrev="ERP/AAK">EAP Re-authentication Protocol Extensions for Authenticated Anticipatory Keying (ERP/AAK)</title>

		<author fullname="Zhen Cao" initials="Z." surname="Cao">
			<organization>China Mobile</organization>
			<address>
				<postal>
					<street>53A Xibianmennei Ave., Xuanwu District</street>
					<city>Beijing</city>
					<region>Beijing</region>
					<code>100053</code>
					<country>P.R. China</country>
				</postal>
				<email>zehn.cao@gmail.com</email>
			</address>
		</author>

		<author fullname="Hui Deng" initials="H." surname="Deng">
			<organization>China Mobile</organization>
			<address>
				<postal>
					<street>53A Xibianmennei Ave., Xuanwu District</street>
					<city>Beijing</city>
					<region>Beijing</region>
					<code>100053</code>
					<country>P.R. China</country>
				</postal>
				<email>denghui02@gmail.com</email>
			</address>
		</author>		
		
		<author fullname="Yungui Wang" initials="Y." surname="Wang">
			<organization>Huawei Technologies Co., Ltd.</organization>
			<address>
				<postal>
					<street>Floor 10, HuiHong Mansion, No.91 BaiXia Rd.</street>
					<city>Nanjing</city>
					<region>Jiangsu</region>
					<code>210001</code>
					<country>P.R. China</country>
				</postal>
				<phone>+86 25 84565893</phone>
				<email>w52006@huawei.com</email>
			</address>
		</author>

		<author fullname="Qin Wu" initials="Q." surname="Wu">
			<organization>Huawei Technologies Co., Ltd.</organization>
			<address>
				<postal>
					<street>Floor 12, HuiHong Mansion, No.91 BaiXia Rd.</street>
					<city>Nanjing</city>
					<region>Jiangsu</region>
					<code>210001</code>
					<country>P.R. China</country>
				</postal>
				<phone>+86 25 84565892</phone>
				<email>bill.wu@huawei.com</email>
			</address>
		</author>

		<author role="editor" fullname="Glen Zorn" initials="G." surname="Zorn">
			<organization>Network Zen</organization>
			<address>
				<postal>
					<street>227/358 Thanon Sanphawut</street>
					<city>Bang Na</city>
					<region>Bangkok</region>
					<code>10260</code>
					<country>Thailand</country>
				</postal>
				<phone>+66 (0) 87-040-4617</phone>
				<email>glenzorn@gmail.com</email>
			</address>
		</author>

		<date year="2011"/>

		<abstract>
			<t>
				The Extensible Authentication Protocol (EAP) is a generic framework
				supporting multiple types of authentication methods.  
				<vspace blankLines="1"/>
				The EAP Re-authentication Protocol (ERP)
				specifies extensions to EAP and the EAP keying hierarchy to support
				an EAP method-independent protocol for efficient re-authentication
				between the peer and an EAP re-authentication server through any
				authenticator.  
				<vspace blankLines="1"/>
				Authenticated Anticipatory Keying (AAK) is a method by which cryptographic keying material 
				may be established upon one or more
				candidate attachment points (CAPs) prior to handover.
				AAK uses the AAA infrastructure for key transport.
				<vspace blankLines="1"/>
				This document specifies the extensions necessary to enable AAK support in ERP.
			</t>
		</abstract>
	</front>

	<middle>
		<section title="Introduction">
			<t>
				The Extensible Authentication Protocol (EAP) <xref target="RFC3748"/>
				is a generic framework
				supporting multiple types of authentication methods.  In systems
				where EAP is used for authentication, it is desirable to not repeat
				the entire EAP exchange with another authenticator.
				The EAP Re-authentication Protocol (ERP) <xref target="RFC5296"/>
				specifies extensions to EAP and the EAP keying hierarchy to support
				an EAP method-independent protocol for efficient re-authentication
				between the peer and an EAP re-authentication server through any
				authenticator.  The re-authentication server may be in the home
				network or in the local network to which the peer is connecting.
				<vspace blankLines="1"/>
				Authenticated Anticipatory Keying (AAK) <xref target="RFC5836"/>
				is a method by which cryptographic keying materials may be 
				established prior to handover upon one or more
				candidate attachment points (CAPs).  
				AAK utilizes the AAA infrastructure for key transport.
				<vspace blankLines="1"/>
				This document specifies the extensions necessary to enable AAK support in ERP.
			</t>
		</section>

		<section title="Terminology">
			<section title="Standards Language">
				<t>
					The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
					"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
					document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.
				</t>			
			</section>
			<section title="Acronyms">
				<t>
					The following acronyms are used in this document;
					see the references for more details.					
					<list style="hanging" hangIndent="4">
						<t hangText="AAA">
							Authentication, Authorization and Accounting <xref target="RFC3588"/>
						</t>
						<t hangText="CAP">
							Candidate Attachment Point <xref target="RFC5836"/>
						</t>
						<t hangText="EA">
							Abbreviation for "ERP/AAK"; used in figures
						</t>
						<t hangText="MH">
							Mobile Host
						</t>
						<t hangText="SAP">
							Serving Attachment Point <xref target="RFC5836"/>
						</t>					
					</list>
				</t>
			</section>
				

    </section>

    <section title="ERP/AAK Overview">
		<t>
			ERP/AAK is
			intended to allow the establishment of cryptographic keying
			materials on a single Candidate Attachment Points prior to the arrival of
			the MH at the Candidate Access Network (CAN). 
			<vspace blankLines="1"/>
            It is assumed that the peer has previously completed full EAP
			authentication and the peer or SAP knows the identities of neighboring attachment points.
			<xref target="fig_1"/>
			shows the general protocol exchange by which the keying material is established on
            the CAP. This document only discusses the case of distributing 
            the key to a single CAP. 
<figure align="center" anchor="fig_1" title="ERP/AAK Operation"><artwork><![CDATA[     
+------+         +-----+        +-----+          +-----------+
| Peer |         | SAP |        | CAP |          | EA Server |
+--+---+         +--+--+        +--+--+          +-----+-----+
   |                |              |                   |
1. | [EAP-Initiate/ |              |                   |
   | Re-auth-start  |              |                   |
   | (E-flag)       |              |                   |
   |<---------------|              |                   |
   |                |              |                   |
2. | EAP-Initiate/  |              |                   |
   | Re-auth        |              |                   |
   | (E-flag)       |              |                   |
   |--------------->|              |                   |
3. |                | AAA(EAP-Initiate/Re-auth(E-flag))| 
   |                |--------------------------------->|
   |                |              |         +---------+---------+
   |                |              |         | CA authorized &   |
4. |                |              |         | authenticated;    |
   |                |              |         | EA keying         |
   |                |              |         | materials derived |
   |                |              |         +---------+---------+
5. |                |              |                   |
   |                |              |     AAA(pMSK)     |
   |                |              |<----------------->|
   |                |              |                   |
6. |                | AAA (EAP-Finish/Re-auth(E-flag)) |
   |                |<---------------------------------|
7. | EAP-Finish/    |              |                   |
   | Re-auth(E-flag)|              |                   |
   |<---------------|              |                   |
   |                |              |                   |
]]></artwork></figure>

			ERP/AAK re-uses the packet format defined by ERP, but specifies a new flag to
			differentiate EAP early-authentication from EAP re-authentication. 
			The peer
			initiates ERP/AAK itself, or does so in response to an
			EAP-Initiate/Re-Auth-Start message from the SAP. 
			In
			this document, SAP support for ERP/AAK is assumed.  If either the peer or
			the SAP does not support ERP/AAK, it should fall back to full EAP
			authentication.
			<vspace blankLines="1"/>
			The SAP may send the identity of a candidate attachment point to the peer in the 
			EAP-Initiate/Re-auth-Start message.
			If the EAP-Initiate/Re-auth-Start packet is not supported by the peer, it is silently discarded.
			<vspace blankLines="1"/>      
			The peer sends an early-authentication request message 
			(EAP-Initiate/Re-auth with the ‘E’ flag set) containing the keyName-NAI, the
			CAP-Identifier, rIK and sequence number. The realm in the keyName-NAI
			field is used to locate the peer’s ERP/AAK server. The CAP-Identifier is used
			to identify the CAP. The rIK is used to protect the message. The
			sequence number is used for replay protection. 
			<vspace blankLines="1"/>      
			The SAP encapsulates the early-authentication message into a AAA
			message and sends it to the peer’s ERP/AAK server in the realm indicated in
			the keyName-NAI field.
			<vspace blankLines="1"/>      
			Upon receiving the message, the ERP/AAK server first checks its integrity and freshness,
			then verifies
			the identity of the peer by checking the username portion of the
			KeyName-NAI.
			Next, the server authenticates and authorizes the CAP specified in the CAP-Identifier TLV. 
			If any of the checks fail, the server sends an early-authentication finish message
			(EAP-Finish/Re-auth with E-flag set) with the Result flag set to '1'. 
			<vspace blankLines="1"/>      
			The ERP/AAK server transports the pMSK to the authenticated and authorized
			CAP via AAA as described in <xref target="AAA"/>.
			<vspace blankLines="1"/>      
			Finally, the ERP/AAK server sends the early-authentication finish message
			(EAP-Finish/Re-auth with E-flag set) containing the identity of the authorized CAP to
			the peer via the SAP.
		</t>
    </section>

    <section title="ERP/AAK Key Hierarchy">
		<t>
			As an optimization of ERP, ERP/AAK uses a key
			hierarchy similar to that of ERP. 
			The EMSK is used to derive the ERP/AAK
			pre-established Root Key (pRK). 
			Similarly, the ERP/AAK pre-established
			Integrity Key (pIK) and the pre-established Master Session Key (pMSK) are derived from
			the pRK. 
			The pMSK is established for the CAP when the peer early
			authenticates to the network. 
			The pIK is established for the peer to
			re-authenticate the network after handover. 
			The hierarchy relationship
			is illustrated in <xref target="KH1"/>, below.
			
<figure anchor="KH1" align="center"><artwork>
    DSRK    EMSK
     |       |
 +---+---+---+---+
 |       |       |
pRK     rRK     ...
</artwork></figure>

			The EMSK and DSRK both can be used to derive the pRK. 
			In general, the
			pRK is derived from the EMSK in case of the peer moving in the home AAA
			realm and derived from the DRSK in case of the peer moving in a
			visited realm. 
			The DSRK is delivered from the EAP server to the ERP/AAK
			server as specified in  <xref target="I-D.ietf-dime-local-keytran"></xref>. 
			If the peer has previously been
			authenticated by means of ERP or ERP/AAK, the DSRK SHOULD be
			directly re-used.

<figure anchor="KH2" align="center"><artwork>
         pRK
          |
 +--------+--------+
 |        |        |
pIK     pMSK      ...
</artwork></figure>

			The pRK is used to derive the pIK and pMSK for the CAP.
      </t>
    </section>

    <section title="Packet and TLV Extension">
		<t>
			This section describes the packet and TLV extensions for the ERP/AAK exchange.
		</t>

	<section title="EAP-Initiate/Re-auth-Start Packet Extension">
        <t>
			<xref target="StartPacket"/> 
			shows the changed parameters contained in the
			EAP-Initiate/Re-auth-Start packet defined in 
			<xref target="RFC5296">RFC 5296</xref>.
        </t>

<figure anchor="StartPacket" align="center"><artwork>   
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Code      |  Identifier   |            Length             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |E| Reserved    |     1 or more TVs or TLVs     ~
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork></figure>

        <t>Flags</t>

        <t> ‘E’ – The E flag is used to indicate early-authentication.</t>

        <t> Reserved: MUST be set to 0.</t>

        <t>TVs and TLVs</t>

        <t>
			CAP-Identifier: Carried in a TLV payload. The format is identical to that of a DiameterIdentity 
			<xref target="RFC3588"/>.
			It is used by the SAP to advertise the identity of the CAP to the peer.
			Exactly one CAP-Identifier TLV MAY be included in the
			EAP-Initiate/Re-auth-Start packet if the SAP has performed CAP
			discovery.
		</t>

    <t>
			If the EAP-Initiate/Re-auth-Start packet is not supported by the
			peer, it is discarded silently.
		</t>
	</section>

	<section title="EAP-Initiate/Re-auth Packet Extension" anchor="EIRaPE">
        <t>
			<xref target="ReauthPacket"/> 
			illustrates the changed parameters contained in the
			EAP-Initiate/Re-auth packet defined in 
			<xref target="RFC5296">RFC 5296</xref>.
		</t>

<figure anchor="ReauthPacket" align="center"><artwork>   
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Code      |  Identifier   |            Length             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |R|x|L|E|Resved |             SEQ               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                 1 or more TVs or TLVs                         ~
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Cryptosuite  |         Authentication Tag                     ~
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork></figure>

        <t>Flags</t>

        <t> 'x' – The x flag is reserved. It MUST be set to 0.</t>

        <t> 'E’ – The E flag is used to indicate early-authentication.</t>

        <t>The rest of the 4 bits (Resved) MUST be set to 0 and ignored on
        reception.</t>

        <t>SEQ</t>

        <t>A 16-bit sequence number is used for replay protection.</t>

        <t>TVs and TLVs</t>

        <t>
			keyName-NAI: As defined in <xref target="RFC5296">RFC 5296</xref>, this is
			carried in a TLV payload. The Type is 1. 
			The NAI is variable in
			length, not exceeding 253 octets. 
			The username part of the NAI is the EMSKname 
			used to identify the peer.
			The realm part of the NAI is the
			peer’s home domain name or the domain to which the peer is currently
			attached. 
			Exactly one keyName-NAI attribute SHALL be present in an
			EAP-Initiate/Re-auth packet.
		</t>

        <t>
			CAP-Identifier: Carried in a TLV payload. 
			It is used to indicate the FQDN of a CAP. 
		</t>

    <t>
			Sequence number: Carried in a TV payload. The Type is TBD
			(less than 128). It is used in the derivation of the pMSK for each CAP.
			 Each CAP-Identifier in the packet MUST be
			associated with a unique sequence number.
		</t>

        <t>Cryptosuite</t>

        <t>
			This field indicates the integrity algorithm used for ERP/AAK. Key
			lengths and output lengths are either indicated or obvious from
			the cryptosuite name. We specify some cryptosuites below:
			<list style="hanging">
				<t hangText="0">RESERVED</t>
				<t hangText="1">HMAC-SHA256-64</t>
				<t hangText="2">HMAC-SHA256-128</t>
				<t hangText="3">HMAC-SHA256-256</t>
			</list>
		</t>

        <t>
			HMAC-SHA256-128 is mandatory to implement and should be enabled in
			the default configuration. 
		</t>

        <t>Authentication Tag</t>

        <t>
			This field contains the integrity checksum over the ERP/AAK packet,
			excluding the authentication tag field itself. The length of the field
			is indicated by the Cryptosuite.
		</t>

        <t>
			If the EAP-Initiate/Re-auth packet is not supported by the SAP, it
			is discarded silently.
		</t>
	</section>

	<section title="EAP-Finish/Re-auth extension">
        <t>
			<xref target="FinishPacket"/> 
			shows the changed parameters contained in the
			EAP-Finish/Re-auth packet defined in <xref target="RFC5296"></xref>.

 <figure align="center" anchor="FinishPacket"><artwork>   
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Code      |  Identifier   |            Length             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |R|x|L|E|Resved |             SEQ               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                 1 or more TVs or TLVs                         ~
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Cryptosuite  |         Authentication Tag                     ~
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork></figure>
		</t>
		
        <t>Flags</t>

        <t>'x' – The x flag is reserved. It MUST be set to 0.</t>

        <t>‘E’ – The E flag is used to indicate early-authentication.</t>

        <t>The rest of the 4 bits (Resved) MUST be set to 0 and ignored on
        reception.</t>

        <t>SEQ</t>

        <t>A 16-bit sequence number is used for replay protection.</t>

        <t>TVs and TLVs</t>

        <t>
			keyName-NAI: As defined in <xref target="RFC5296">RFC 5296</xref>, this is
			carried in a TLV payload. The Type is 1. The NAI is variable in
			length, not exceeding 253 octets. The realm part of the NAI is the
			home domain name. Exactly one keyName-NAI attribute SHALL be present
			in an EAP-Finish/Re-auth packet.
		</t>

        <t>
			ERP/AAK-Key: Carried in a TLV payload for the key container. The
			type is TBD. 
			Exactly one ERP/AAK-key SHALL be present in an
			EAP-Finish/Re-auth packet.
			
<figure><artwork>
ERP/AAK-Key ::= 
     { sub-TLV: CAP-Identifier }
     { sub-TLV: pMSK-lifetime }
     { sub-TLV: pRK-lifetime }
     { sub-TLV: Cryptosuites }
</artwork></figure>
			<list style="hanging">
				<t hangText="CAP-Identifier">
					<vspace blankLines="0"/>
					Carried in a sub-TLV payload.  It is used to indicate the identifier of the candidate
					authenticator. There exactly one instance of the CAP-Identifier TLV MUST be present in
					the ERP/AAK-Key TLV.
				</t>

				<t hangText="pMSK-lifetime">
					<vspace blankLines="0"/>
					Carried in a sub-TLV payload. The Type is
					TBD. The value field is a 32-bit field and contains the lifetime
					of the pMSK in seconds. If the 'L' flag is set, the pMSK Lifetime
					attribute SHOULD be present.
				</t>

				<t hangText="pRK-lifetime">
					<vspace blankLines="0"/>
					Carried in a sub-TLV payload. The Type is
					TBD. The value field is a 32-bit field and contains the lifetime
					of the pRK in seconds. If the 'L' flag is set, the pRK Lifetime
					attribute SHOULD be present.
				</t>

				<t hangText="List of Cryptosuites">
					<vspace blankLines="0"/>
					Carried in a sub-TLV payload. The Type is
					5 <xref target="RFC5296"/>. 
					The value field contains a list of cryptosuites, each 
					1 octet in length. 
					The allowed cryptosuite values are as specified in <xref target="EIRaPE"/>,
					above.
					The server SHOULD include this attribute if the cryptosuite used in
					the EAP-Initiate/Re-auth message was not acceptable and the
					message is being rejected. The server MAY include this attribute
					in other cases. The server MAY use this attribute to signal to the
					peer about its cryptographic algorithm capabilities.
				</t>
			</list>
		</t>

        <t>Cryptosuite </t>

        <t>
			This field indicates the integrity algorithm and PRF used for ERP/AAK.
			Key lengths and output lengths are either indicated or obvious
			from the cryptosuite name.
		</t>

        <t>Authentication Tag</t>

        <t>
			This field contains the integrity checksum over the ERP/AAK packet,
			excluding the authentication tag field itself. The length of the field
			is indicated by the Cryptosuite.
		</t>
	</section>

	<section title="TV and TLV Attributes">
		<t>
			With the exception of the rRK Lifetime and rMSK Lifetime TV payloads, the attributes specified in 
			<xref target="RFC5296">Section 5.3.4 of </xref>
			also apply to this document. In this document, new attributes
			which may be present in the EAP-Initiate and EAP-Finish messages are
			defined as below:
			<list style="symbols">

				<t>Sequence number: This is a TV payload. The type is TBD.</t>

				<t>ERP/AAK-Key: This is a TLV payload. The type is TBD.</t>

				<t>
					pRK Lifetime: This is a TV payload. The type is
					TBD.
				</t>

				<t>
					pMSK Lifetime: This is a TV payload. The type 
					is TBD.
				</t>
	
				<t>
					List of Cryptosuites: This is a TLV payload. The type is TBD.
				</t>
          </list>
			</t>
      </section>
    </section>

	<section title="Lower Layer Considerations">
		<t>
			Similar to ERP, some lower layer specifications may need to be revised
			to support ERP/AAK; refer to of <xref target="RFC5296">Section 6</xref>
			for additional guidance.
		</t>
    </section>

    <section anchor="AAA" title="AAA Transport Considerations">
		<t>
			AAA transport of ERP/AAK messages is the same as AAA transport of the ERP
			message <xref target="RFC5296"></xref>. In addition, the
			document requires AAA transport of the ERP/AAK keying materials delivered
			by the ERP/AAK server to the CAP. 
			Hence, a new Diameter ERP/AAK application message
			should be specified to transport the keying
			materials.
		</t>
    </section>

    <section title="Security Considerations">
		<t>
		This section provides an analysis of the protocol in accordance with
   the AAA key management requirements specified in RFC 4962 <xref target="RFC4962"/>.
		</t>
		
		<t><list style="symbols">
		     <t>Cryptographic algorithm independence: ERP-AAK satisfies this requirement. 
		     The algorithm chosen by the peer is indicated in the EAP-Initiate/Re-auth message.
		     If the chosen algorithm is unacceptable, the EAP server returns an EAP-
         Finish/Re-auth message with Failure indication.
		     </t>
		     
		     <t>Strong, fresh session keys: 
		     ERP-AAK results in the derivation of strong, fresh keys that are
         unique for the given CAP.  An pMSK is always derived
         on-demand when the peer requires a key with a new
         CAP.  The derivation ensures that the compromise of
         one pMSK does not result in the compromise of a different pMSK
         at any time.
		     </t>
		     
		     <t>Limit key scope:
		     The scope of all the keys derived by ERP-AAK is well defined.  
		     The pRK is used to derive the pIK and pMSK for the CAP. 
		     Different sequence numbers for each CAP MUST be used to derive a unique pMSK. 
		     </t>
		     
		     <t>Replay detection mechanism:  
		     For replay protection of ERP-AAK messages, a sequence number
         associated with the pMSK is used.
		     </t>
		     
		     <t>Authenticate all parties: 
		     The EAP Re-auth Protocol provides mutual authentication of the
         peer and the server. The peer and SAP are authenticated via ERP. 
         The CAP is authenticated and trusted by the SAP. 
		     </t>
		     
		     <t>Peer and authenticator authorization:
		      The peer and authenticator demonstrate possession of the same 
		      key material without disclosing it, as part of the lower layer secure authentication protocol. 
		     </t>
		     
		     <t>Keying material confidentiality: 
		     The peer and the server derive the keys independently using
         parameters known to each entity.
		     </t>
		     
		     <t>Uniquely named keys:
		     All keys produced within the ERP context can be referred to
         uniquely as specified in this document.  
		     </t>
		     
		     <t>Prevent the domino effect:
		     Different sequence numbers for each CAP MUST be used to derive the unique
			   pMSK.  So the compromise of one pMSK does not hurt any other CAP. 
		     </t>
		     
		     <t>Bind key to its context: the pMSK are bound to 
		     the context in which the sequence numbers are transmitted. 
		     </t>
		     
		     <t>Confidentiality of identity: this is the same as with the ERP protocol 
		     <xref target="RFC5296"/>. 
		     </t>
		     
		     <t>Authorization restriction: 
		     All the keys derived are limited in lifetime by that of the
         parent key or by server policy.  Any domain-specific keys are
         further restricted to be used only in the domain for which the
         keys are derived.   Any other restrictions of session
         keys may be imposed by the specific lower layer and are out of
         scope for this specification.
		     </t>
		
		</list></t>
		
    </section>

    <section title="IANA Considerations">
    
		<t>
			IANA is requested to assign four TLV type values from the registry of EAP Initiate and Finish Attributes maintained at
			http://www.iana.org/assignments/eap-numbers/eap-numbers.xml.
			<vspace blankLines="0"/>
			New TLV types:
			<list style="symbols">
				<t>Sequence number</t>
				<t>ERP/AAK-Key</t>
				<t>pRK Lifetime</t>
				<t>pMSK Lifetime</t>
			</list>
		</t>
    </section>

  
    <section title="Acknowledgement">
		<t>
		In writing this document, we have received reviews from 
		many experts in the IETF, including Tom Taylor, Tena Zou, Tim Polk, Tan Zhang and Semyon Mizikovsky. 
		We apologize if we miss some of those who have helped us. 
		</t>
    </section>

  </middle>
	<back>
		<references title="Normative References">
			&rfc2119;
			&rfc5296;
		</references>
		<references title="Informative References">
			&rfc5836;
			&I-D.ietf-dime-local-keytran;
			&rfc3588;
			&rfc3748;
			&rfc4962;
		</references>
	</back>
</rfc>
