<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->

<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>

<?rfc symrefs="yes"?>

<?rfc sortrefs="no" ?>
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>


<rfc docName="draft-cai-marf-policy-instruction-operation-00" 
	category="std" 
	ipr="trust200902"
> 

<front>

<title abbrev="Anti-Spam Operation">
Anti-Spam Policy Instruction/Distribution Operation </title>

<author fullname="Yigang Cai" initials="Y." 
            surname="Cai">
      <organization>Alcatel-Lucent</organization>

      <address>
        <postal>

          <street>2000 Lucent Ln</street>

          <!-- Reorder these if your country does things differently -->

          <city>Naperville</city>

          <region>IL</region>

          <code>60563</code>

          <country>USA </country>
        </postal>

        <phone>+1 630 979 3303</phone>

        <email>Yigang.Cai@alcatel-lucent.com</email>

      </address>
    </author>


<author fullname="Gyan Shanker" initials="G." 
            surname="Shanker">
      <organization>Alcatel-Lucent</organization>

      <address>
        <postal>

          <street>2000 Lucent Ln</street>

          <!-- Reorder these if your country does things differently -->

          <city>Naperville</city>

          <region>IL</region>

          <code>60563</code>

          <country>USA </country>
        </postal>

        <phone>+1 630 979 4627</phone>

        <email>Gyan.Shanker@alcatel-lucent.com</email>

      </address>
    </author>

<author fullname="Sanjeev K. Singh" initials="S." 
            surname="Singh">
      <organization>Alcatel-Lucent</organization>

      <address>
        <postal>

          <street>6200 E. Broad St</street>

          <!-- Reorder these if your country does things differently -->

          <city>Columbus</city>

          <region>OH</region>

          <code>43213</code>

          <country>USA </country>
        </postal>

        <phone>+1 614 367 5825</phone>

        <email>Sanjeev.Singh@alcatel-lucent.com</email>

      </address>
    </author>


<author fullname="Moh Torabi" initials="M." 
            surname="Torabi">
      <organization>Alcatel-Lucent</organization>

      <address>
        <postal>

          <street>23812 Dasya Circle</street>

          <!-- Reorder these if your country does things differently -->

          <city>Monarch Beach</city>

          <region>CA</region>

          <code>92629</code>

          <country>USA </country>
        </postal>

        <phone>+1 949 636 2116</phone>

        <email>Moh.Torabi@alcatel-lucent.com</email>

      </address>
    </author>

 
<author fullname="Zachary Zeltsan" initials="Z." 
            surname="Zeltsan">
      <organization>Alcatel-Lucent</organization>

      <address>
        <postal>
          <street>600 Mountain Avenue</street>

          <!-- Reorder these if your country does things differently -->

          <city>Murray Hill</city>

          <region>NJ</region>

          <code></code>

          <country>USA </country>
        </postal>

        <phone>+1 908 582 2359</phone>

        <email>Zachary.Zeltsan@alcatel-lucent.com</email>

      </address>
    </author>


<date month="February" year="2011"/>

<area>Applications</area>
<workgroup>MARF WG</workgroup>
<keyword>I-D</keyword>
<keyword>Internet-Draft</keyword>

<abstract>
<t>This document defines an anti-spam policy instruction and distribution operation from Spam Reporting Server or 
Spam Reporting Client to Spam Reporting Client or Clients.
</t>
</abstract> 

</front>

<middle>

<!--
<section title="Terminology" >
<section title="Key Words">
<t>
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
interpreted as described in <xref target="RFC2119">RFC 2119</xref>. </t>


<t>Additional definition(s):
 <list style="hanging">
  <t hangText=""></t>
 </list>
</t>
</section>
</section>
-->
<section title="Introduction">



<t>As the SMS/MMS spam problem continues to expand and potential solutions evolve, mobile operators are developing 
their own SMS/MMS anti-spam application on SMSC/MMSC or message gateways.  Open Mobile Alliance (OMA) developed 
<xref target="OMA TS SpamRep">OMA Mobile Spam Reporting Technical Specification</xref>, which addresses the Spam Reporting Server and Clients 
requirements for SMS/MMS and other spam reporting. This OMA SpamRep specification is to be adopted by IETF MARF 
group. However, there is no centralized message spam analysis system which receives reports from individual 
message centers, and in return, instructs the message centers with filtering criteria and policy rules which 
are developed based on spam reporting as well as spam analysis at the spam reporting server. 

<vspace blankLines="1"/>

This document introduces a new operation of anti-spam policy instruction and distribution between a centralized 
spam reporting server and distributed spam reporting clients. Optionally, a spam reporting client could also act 
as an agent to distribute the received anti-spam policy instruction to other spam reporting clients in the network.
This document, thus, creates a framework for anti-spam policy instruction and distribution among the distributed 
spam reporting nodes in the network.

<vspace blankLines="1"/>
The spam policy instruction operation from the centralized spam reporting server will allow one or multiple spam 
reporting clients, which actually conduct spam filtering and detection, to:

<list style='symbols'>
<t>
have latest spam filtering criteria and policies instructed by the networks
</t>
	
<t>
receive spam filtering and detection algorithms and rules from other spam reporting
clients via the centralized spam reporting server
</t>

<t>
update and enhance existing local filtering algorithms and rule
</t>
<t>
prevent in advance from upcoming spam with new abuse contents and/or from new sources
</t>
<t>
optionally, further distribute the received policies to other spam reporting clients in its network
</t>
</list>
</t>


</section> <!-- Introduction -->
<section title="Definitions">

<section title="Notational Conventions">

<t>   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in <xref target="RFC 2119">RFC 2119</xref>.
</t>
</section> <!-- Notational Conventions -->


<section title="Definitions">
<t>
Spam Reporting Server - The functionalities of a spam reporting server includes receiving spam reports from 
spam reporting clients, conducting spam analysis, summarizing anti-spam criteria/policies/rules, and 
distribution of anti-spam criteria/policies/rules to the distributed spam reporting clients.

<vspace blankLines="1"/>

Spam Reporting Client - It is message center (SMSC, MMSC, email server, IM server, etc.) The functionalities 
of a spam reporting client includes detecting spam messages using local spam filtering criteria/rules, 
reporting spam messages to Spam Reporting Server, receiving the instruction of anti-spam policies/rules from 
Spam Reporting Server, and optionally receiving/forwarding the anti-spam policies/rules from/to other Spam 
Reporting Clients.
</t>
</section> <!-- Definitions -->
</section> <!-- Definitions -->



<section title="Anti-spam Policy Instruction/Distribution Procedures">
<t>
The procedures support both of unsolicited and solicited models of anti-spam policy instruction/distribution.
</t>

<t>
In unsolicited model, the spam reporting server shall initiate a request for spam policy instruction/distribution 
operation to one or more spam reporting clients which conduct spam message filtering and detection in the network. 
A spam reporting client may initiate a request for spam policy instruction/distribution operation to one or 
multiple other spam reporting clients in the network.
</t>
<t>
In solicited or on-demand model, a spam reporting client shall initiate a on-demand request for spam policy 
instruction/distribution operation to the spam reporting server. The spam reporting client shall indicate what 
filtering criteria/policy rules it current has, and what new policy rules it may expect and subscription time 
window.  The spam reporting server or spam report client that received the on-demand query request shall respond 
to the requesting entity with anti-spam policy instruction and/or appropriate result code. Optionally, 
asynchronous mechanism can be implemented where the anti-spam policy instruction is sent as a separate request 
after acknowledging the receipt of the query request from the client.
</t>
<t>
In both solicited and unsolicited models, the spam reporting clients who received the request of spam policy 
instruction/distribution operation shall respond to the requesting entity with corresponding result codes.
</t>

<section title="Operation Procedure for Unsolicited Policy Instruction/Distribution">
<t>
This procedure enables the push model for anti-spam policy instruction/distribution. Related procedures, described 
in section 3.2, provide control to subscriber/unsubscribe this push mechanism for specific spam reporting 
client(s) in the network. 
</t>
<t>
The spam reporting server shall initiate a request for spam policy instruction/distribution operation to one or 
more spam reporting clients which conduct spam message filtering and detection in the network. A spam reporting 
client shall initiate a request for spam policy instruction/distribution operation to one or multiple other spam 
reporting clients in the network.
</t>
<t>
The spam reporting clients who received the request of spam policy instruction/distribution operation shall 
respond to the requesting entity with corresponding result codes.
</t>
<!-- picture goes here-->
<figure  title="">
 <artwork><![CDATA[ 

     +-------------+                 +-------------+
     |             |   Request       |             |
     |             |<----------------|             |
     |   Client    |   Response      |   Server    |
     |             |---------------->|             |
     +-------------+                 +-------------+


     +-------------+   Request       +-------------+
     |             |<----------------|             |
     |             |   Response      |             |
     |   Client    |---------------->|   Client    |
     |             |                 |             |
     +-------------+                 +-------------+


]]></artwork>
</figure>
<section title="Server Procedure">
<t>
The procedures described below are performed by Spam Reporting Server.

<list style='numbers'>

<t>
Before sending the request to the clients, the server shall determine
<vspace blankLines="0"/>

<list style='symbols'>
<t>
which spam filtering criteria/policies/rules should be included in the operation
</t>

<t>
which clients should receive these spam filtering criteria/policies/rules
</t>
<t>
schedule (day and time) to send the request to client(s). The schedule can be provisioned statically or determined 
during run time.
</t>
</list> <!--symbols -->
</t>

<t>
The server shall assemble the request message, for anti-spam policy instruction/distribution, with message 
elements described in Section 4.1.1.
</t>
<t>
The server shall send the assembled request to identified spam reporting client(s) as per the selected schedule
</t>
<t>
The server shall receive the response from the client(s). The server shall determine whether to resend the 
request to the client(s) in case of an error result code received from client(s)
</t>
<t>
Re-attempt of distribution to a client shall be determined based on error code, client ID, and spam 
filtering criteria/policies/rules
</t>
<t>
Times and interval for re-attempt of distribution can be statically configured at the server or determined 
automatically
</t>
</list> <!--numbers -->
</t>
</section> <!-- sec. 3.1.1-->
<section title="Client Procedure">
<t>
The procedures described below are performed by Spam Reporting Client when receiving a request message for spam 
policy instruction/distribution operation from Spam Reporting Server or other Spam Reporting Clients.

<list style='numbers'>
<t>
The client shall parse the request and extract the message elements enclosed in the request
</t>
<t>
The client shall process the content of message elements and take appropriate action including one or 
more of the following:
<list style='symbols'>
<t>
Accept a part or all of the filtering criteria/policies/rules included in the request
</t>
<t>
Ignore a part or all of the filtering criteria/policies/rules included in the request
</t>
<t>
Update existing filtering criteria/policies/rules with the accepted ones from the request
</t>
<t>
Activate new filtering criteria/policies/rules immediately or at a later time as determined by the client 
</t>
</list> <!--symbols -->
</t>
<t>
The client shall send a response to the requesting entity with appropriate result codes (see Section 4.1.2)
</t>
</list> <!--numbers -->
When there is a need for the spam reporting client to forward the request for spam policy instruction/distribution 
operation to other spam reporting client(s) in the network, the spam reporting client shall follow the procedure 
outlined for the server in section 3.1 above.
</t>
</section> <!-- sec. 3.1.2-->
</section> <!-- sec. 3.1-->
<section title="Operation Procedure for Notification to Subscribe/Unsubscribe Anti-Spam Policy 
Instruction/Distribution">
<t>
This procedure enables control to enable/disable the push mechanism, described in section 3.1, selectively 
by specific spam reporting client(s) in the network.
</t>
<t>
The spam reporting client(s) may initiate a request to subscribe/unsubscribe receiving spam policy 
instruction/distribution requests from a spam analysis server or another spam reporting client.
</t>
<t>
The spam analysis server or spam reporting client that received the request to subscribe/unsubscribe 
anti-spam policy instruction shall respond to the requesting entity with corresponding result code.
</t>
<!-- picture goes here-->
<figure  title="">
 <artwork><![CDATA[ 
     

  +-------------+                 +-------------+
  |             |   Request       |             |
  |             |---------------->|             |
  |   Client    |   Response      |   Server    |
  |             |<----------------|             |
  +-------------+                 +-------------+


  +-------------+   Request       +-------------+
  |             |---------------->|             |
  |             |   Response      |             |
  |   Client    |<----------------|   Client    |
  |             |                 |             |
  +-------------+                 +-------------+

]]></artwork>
</figure>
<section title="Client Procedure">
<t>
The procedures described below are performed by a spam reporting client.
<list style='numbers'>
<t>
The client shall assemble the request message, to subscribe/unsubscribe anti-spam policy 
instruction/distribution, with message elements described in Section 4.2.1
</t>
<t>
The client shall send the assembled request to identified entities, i.e., the spam reporting server and/or other 
spam reporting client(s)
</t>
<t>
The client shall receive the response from the entities to which the request was sent. The client shall determine 
whether to resend the request in case of an error result code received.
</t>
<t>
Times and interval for re-attempt of notification to subscribe/unsubscribe anti-spam policy 
instruction/distribution can be statically configured at the client or determined automatically
</t>

</list> <!--numbers-->
When the spam reporting client is also capable of spam policy instruction/distribution to other spam reporting 
clients, the spam reporting client shall support the server procedure described in section 3.2.2 below.
</t>
</section> <!-- sec. 3.2.1-->
<section title="Server Procedure">
<t>
The procedures described below are performed by the spam reporting server when receiving a request message to 
subscribe/unsubscribe anti-spam policy instruction/distribution to the client. This procedure is also executed 
by a spam reporting client if it is capable of spam reporting policy instruction/distribution in which case the 
spam reporting client is fulfilling the server role for this operation.
<list style='numbers'>
<t>
The server shall parse the request and extract the message elements enclosed in the request
</t>
<t>
The server may extract existing policy IDs from the request as a base of appropriate actions. For example, if 
there is no new policy rule to be sent to the spam reporting client, the spam reporting server should send an 
appropriate result code (Section 6) to the spam reporting client; the spam reporting server may not send a policy 
instruction/distribution request to the spam reporting client in the period while no new policy rules applied, 
even the policy instruction/distribution status of the spam reporting client is recorded as subscribed
</t>
<t>
The server shall process the content of message elements and take appropriate action including one of the following:
<list style='symbols'>
<t>
Start anti-spam policy instruction/distribution to the client, which sent the request, at the next scheduled event 
for anti-spam policy instruction/distribution
</t>
<t>
Stop subsequent anti-spam policy instruction/distribution to the client that sent the request
</t>
</list> <!--symbols-->
</t>
<t>
The server shall send a response to the requesting entity with appropriate result codes (see Section 6)
</t>
</list> <!--numbers-->
</t>
</section>
</section> <!-- sec. 3.2-->
<section title="Operation Procedure for On-Demand of Anti-Spam Policy Instruction">
<t>
This procedure enables the on-demand pull model for anti-spam policy instruction/distribution.

<vspace blankLines="1"/>
The spam reporting client(s) may initiate a request to query spam policy instruction/distribution on-demand from a 
spam reporting server or another spam reporting client.

<vspace blankLines="1"/>
The spam reporting server or spam report client that received the on-demand query request shall respond to the 
requesting entity with anti-spam policy instruction and/or appropriate result code. Optionally, asynchronous 
mechanism can be implemented where the anti-spam policy instruction is sent as a separate request after 
acknowledging the receipt of the query request from the client.

<vspace blankLines="1"/>
The flow for the synchronous mechanism is depicted here.

<vspace blankLines="1"/>
<!-- picture goes here-->
<figure  title="">
 <artwork><![CDATA[ 
 
   +-------------+                 +-------------+
   |             |   Request       |             |
   |             |---------------->|             |
   |   Client    |   Response      |   Server    |
   |             |<----------------|             |
   +-------------+                 +-------------+


   +-------------+   Request       +-------------+
   |             |---------------->|             |
   |             |   Response      |             |
   |   Client    |<----------------|   Client    |
   |             |                 |             |
   +-------------+                 +-------------+

]]></artwork>
</figure>

<vspace blankLines="1"/>
The flow for the asynchronous mechanism includes the flow depicted above, except that the response is an 
acknowledgement of the query instead of policy instruction, followed by the anti-spam policy 
instruction/distribution flow depicted in section 3.1 above.
</t>
<section title="Client Procedure">
<t>
The procedures described below are performed by a spam reporting client.
<list style="numbers">
<t>
The client shall assemble the request message, to query anti-spam policy instruction, with message elements 
described in section 4.3.1.
</t>
<t>
The client shall send the request to identified entities, i.e., the spam reporting server and/or other spam 
reporting client(s)
</t>
<t>
The client shall receive the response from the entities to which the request was sent. The client shall determine 
whether to resend the request in case of an error result code received
</t>
<t>
Times and interval for re-attempt of the query request for anti-spam policy instruction can be statically 
configured at the client or determined automatically
</t>
</list> <!--list numbers-->
When the spam reporting client is also capable of spam policy instruction/distribution to other spam reporting 
clients, the spam reporting client shall support the server procedure described in section 3.3.2 below
</t>
</section> <!--sec 3.3.1-->
<section title="Server Procedure">
<t>
The procedures described below are performed by the spam reporting server when receiving a request message for 
query of anti-spam policy instruction from a client. This procedure is also executed by a spam reporting client 
if it is capable of spam reporting policy instruction/distribution in which case the spam reporting client is 
fulfilling the server role for this operation.
<list style="numbers">
<t>
The server shall parse the request and extract the message elements enclosed in the request
</t>
<t>
The server may extract existing policy IDs from the request as a base of appropriate actions. For example, if 
there is no new policy rule to be sent to the spam reporting client, the spam reporting server should send a 
response with an appropriate result code (Section 6) but without policy body to the spam reporting client
</t>
<t>
The server shall process the content of message elements and take appropriate action depending on whether the 
query mechanism is synchronous or asynchronous
<list style="symbols">
<t>
If the query mechanism is synchronous, the server shall assemble a response message enclosing the spam policy 
instruction and/or result code (see section 6) as specified in section 4.3.2.
</t>
<t>
If the query mechanism is asynchronous, the server shall assemble a response message containing the result code 
(see section 6) to acknowledge the query request
</t>
</list> <!-- symbols-->
</t>
<t>
The server shall send the assembled response to the requesting entity
</t>
</list> <!-- numbers -->
</t>
</section> <!-- sec. 3.3.2-->
</section> <!-- sec. 3.3-->
</section> <!-- sec. 3-->


<section title="Messages"> 
<t>
This section specifies the format of the request and response messages to support the operation procedures 
described in section 3 above.

</t>
<section title="Anti-Spam Policy Instruction/Distribution Messages">
<t>
There are two types of messages of anti-spam policy instruction/distribution operation:
<list style='symbols'>
<t>
Request message (sent by either Spam Reporting Server or Spam Reporting Clients)
</t>
<t>
Response message (sent by Spam Reporting Clients)
</t>
</list> <!--symbols-->
</t>
<section title="Request Message">
<t>
The request message of anti-spam policy instruction/distribution operation should contain following message 
elements:
<vspace blankLines="1"/>
Request:
<list style="hanging">
<t>Request ID </t>
<t>	Request timestamp</t>
<t>	Originating node address</t>
<t>	Terminating node address</t>
<t>	* Policy Body</t>
<t>	{</t>
<t>	Policy ID</t>
<t>	Network types</t>
<t>	* Protocol ID</t>
<t>	* Message Types</t>
<t>	Message attributes</t>
<t>	* Suspicious network domain</t>
<t>	* Suspicious address</t>
<t>	* Suspicious address type</t>
<t>	Spam type</t>
<t>	Language indicator</t>
<t>	Detection information</t>
<t>	{</t>
<t>	* Algorithm ID</t>
<t>	* Rule ID</t>
<t>	* Spam Keyword</t>
<t>	* Spam Pattern</t>
<t>	}</t>
<t>	Action information</t>
<t>	{</t>
<t>	Block with notification</t>
<t>	Block without notification</t>
<t>	Unblock and deliver</t>
<t>	Hold and quarantine </t>
<t>	}</t>
<t>	Privacy shield information</t>
<t>	Affective filtering start timestamp</t>
<t>	Affective filtering stop timestamp</t>
<t>	}</t>

</list>
* sign indicates the message element should be multiple occurrences.
</t>
</section> <!-- sec. 4.1.1-->
<section title="Response Message">
<t>
The response message of anti-spam policy instruction/distribution operation should contain following message 
elements:
<vspace blankLines="1"/>
Response:
<list style="hanging">

<t> Request ID </t>
<t> Request received timestamp </t>
<t> Response timestamp </t>
<t> Originating node address </t>
<t> Terminating node address </t>
<t> Result Code </t>
<t> * Policy Specific Result Code </t>
<t> { </t>
<t> Policy ID </t>
<t> Result Code </t>
<t> } </t>

</list>
* sign indicates the message element should be multiple occurrences.
</t>
</section> <!-- sec. 4.1.2-->
</section> <!-- sec. 4.1-->


<section title="Notification to Subscribe/Unsubscribe Anti-Spam Policy Instruction/Distribution">
<t>
There are two types of messages for operation for the notification to subscribe/unsubscribe anti-spam policy 
instruction/distribution.
<list style="symbols">
<t>
Request message (sent by spam reporting clients)
</t>
<t>
Response message (sent by spam analysis server or spam reporting client)
</t>
</list>
</t>
<section title="Request Message">
<t>
The request message for notification to subscribe/unsubscribe anti-spam policy instruction/distribution operation 
shall contain following message elements:
<vspace blankLines="1"/>
Request:
<list style="hanging">
<t> Request ID </t>
<t> Request timestamp </t>
<t> Originating node address </t>
<t> Terminating node address </t>
<t> Anti-Spam Policy Instruction Control </t>
<t> { </t>
<t> InstructionAction </t>
<t> *Existing Policy IDs </t>
<t> }     </t>

</list>
* sign indicates the message element should be multiple occurrences.
</t>
</section> <!-- sec. 4.2.1-->

<section title="Response Message">
<t>
The response message for the notification operation to start/stop anti-spam policy instruction/distribution should 
contain following message elements:
<vspace blankLines="1"/>
Response:
<list style="hanging">
<t>   Request ID </t>
<t>   Request received timestamp </t>
<t>   Response timestamp </t>
<t>   Originating node address </t>
<t>   Terminating node address </t>
<t>   Result Code </t>

</list>
</t>
</section> <!-- sec. 4.2.2-->
</section> <!-- sec. 4.2-->

<section title="On-Demand Query of Anti-Spam Policy Instruction">
<t>
There are two types of messages for operation to query anti-spam policy instruction/distribution.
<list style="symbols">
<t>
Request message (sent by spam reporting clients)
</t>
<t>
Response message (sent by spam analysis server or spam reporting client)
</t>
</list>
In addition when the asynchronous query mechanism is used, the request and response messages specified in 
section 4.1 shall be used for the asynchronous anti-spam policy instruction/distribution.
</t>
<section title="Request Message">
<t>
The request message for the operation to query of anti-spam policy instruction should contain following message 
elements:
<vspace blankLines="1"/>
Request:
<list style="hanging">

<t> Request ID </t>
<t> Request timestamp </t>
<t> Originating node address </t>
<t> Terminating node address </t>
<t> Anti-Spam Policy Instruction Control </t>
<t> { </t>
<t> InstructionAction </t>
<t> *Existing Policy IDs </t>
<t> }     </t>

</list>
* sign indicates the message element should be multiple occurrences.
</t>
</section> <!-- sec. 4.3.1-->

<section title="Response Message">
<t>
The response message for the notification operation to start/stop anti-spam policy instruction/distribution should 
contain following message elements:
<vspace blankLines="1"/>
Response:
<list style="hanging">

<t>   Request ID </t>
<t>   Request received timestamp </t>
<t>   Response timestamp </t>
<t>   Originating node address </t>
<t>   Terminating node address </t>
<t>   Result Code </t>
<t>   * Policy Body </t>
<t>   { </t>
<t>   Policy ID </t>
<t>   Network types </t>
<t>   * Protocol ID </t>
<t>   * Message Types </t>
<t>   Message attributes </t>
<t>   * Suspicious network domain </t>
<t>   * Suspicious address </t>
<t>   * Suspicious address type </t>
<t>   Spam type </t>
<t>   Language indicator </t>
<t>   Detection information </t>
<t>   { </t>
<t>   * Algorithm ID </t>
<t>   * Rule ID </t>
<t>   * Spam Keyword </t>
<t>   * Spam Pattern </t>
<t>   } </t>
<t>   Action information </t>
<t>   { </t>
<t>   Block with notification </t>
<t>   Block without notification </t>
<t>   Unblock and deliver </t>
<t>   Hold and quarantine  </t>
<t>   } </t>
<t>   Privacy shield information </t>
<t>   Affective filtering start timestamp </t>
<t>   Affective filtering stop timestamp </t>
<t>   } </t>

</list>
* sign indicates the message element should be multiple occurrences.
</t>
</section> <!-- sec. 4.3.2-->
</section> <!-- sec. 4.3-->


</section> <!-- sec. 4-->


<section title="Message Element Descriptions">
<t>
Message elements included in the request and response messages of anti-spam policy instruction/distribution 
operation are described in this sub-section. All message elements are optional except those that are indicated as 
mandatory.
</t>
<section title="Request ID">
<t>
Request ID is a mandatory element of type string and is the unique identifier for the request message. 
</t>
</section>


<section title="Request Timestamp ">
<t>
Request timestamp is a mandatory element of type Time and holds the time the request message was originated by the originating node.
</t>
</section>
<section title="Request Received Timestamp ">
<t>
Request received timestamp is a mandatory element of type Time and holds the time the request was received by the terminating node.
</t>
</section>
<section title="Response Timestamp ">
<t>
Response timestamp is a mandatory element and of type Time and holds the time the response was sent by the terminating node.
</t>
</section>
<section title="Originating Node Address">
<t>
Originating node address is a mandatory element of type String and includes the originator address. It should be the address of Spam 
Reporting Server or Spam Reporting Client.
</t>
</section>
<section title="Termination Node Address">
<t>
Terminating node address is a mandatory element of type String and includes the recipient address. It should be the address of Spam 
Reporting Server or Spam Reporting Client.
</t>
</section>
<section title="Policy Body">
<t>
Policy body is a mandatory element of type Group and includes the policy elements. 0 or more policies can be included in the policy 
body. At least one policy must be present in the anti-spam instruction/distribution request message.
</t>
</section>
<section title="Policy ID">
<t>
Policy ID is a mandatory element of type Integer and is the unique identifier for this policy.
</t>
</section>
<section title="Network Type">
<t>
Network type is of type Enumerated and is the indicator for the network types: GSM, UMTS, LTE, 3GPP, CDMA, other,
unknown, etc.
</t>
</section>
<section title="Protocol ID">
<t>
Protocol ID is of type Enumerated and is the indicator for the message protocol applicable for the policy: SMTP, 
SMPP, 3GPP MAP, 3GPP SIP, 3GPP2 SIP, ANSI SMDPP, etc. 
</t>
</section>
<section title="Message Type">
<t>
Message type is of type Enumerated and is the indicator for the message types: email, SMS, MMS, IM, etc. 
</t>
</section>
<section title="Message Attributes">
<t>
Message attribute is of type Data Structure and contains additional information about message applicable to the 
policy. The attributes depend on message types. Each message type has its own set of attributes. 
</t>
</section>
<section title="Suspicious Network Domain">
<t>
Suspicious network domain is of type String. It includes the domain name of the network which is considered 
suspicious or bad. 
</t>
</section>

<section title="Suspicious Address">
<t>
Suspicious address is of type String and includes the address which is considered suspicious or bad.
</t>
</section>

<section title="Suspicious Address Type">
<t>
Suspicious address type is of type String and is an indicator of type of suspicious address, IP address, mobile 
number (MSISDN, IMSI), email address, etc.
</t>
</section>
<section title="Spam Type ">
<t>
Spam type optional field is of type Enumerated and includes the spam types:
<list style="symbols">
<t> Spam </t>
<t> Phishing </t>
<t> Spoofing </t>
<t> Malware (e.g., virus/spyware) </t>
<t> Fake sender address </t>
<t> Miscategorized </t>
<t> Unauthorized sender/recipient </t>
<t> Suspicious network/domain </t>
<t> Message flooding  </t>
<t> Denial of service attack </t>
<t> Malware (e.g., virus/spyware) </t>
<t> Unauthorized message (violation of a security policy) </t>
<t> Invalid message format </t>
<t> Not Spam </t>
</list>
</t>
</section>
<section title="Language Indicator">
<t>
Message language indicator is of type Integer and is the indicator of the message language. 
</t>
</section>
<section title="Detection Information">
<t>
Detection information is of type Structure and contains the information on the algorithms or method used to 
screening/filter the spam messages:
<list style="symbols">
<t> Algorithm ID </t>
<t> Rule ID </t>
<t> Spam Keyword </t>
<t> White/black list </t>
<t> Spam Pattern Match </t>
<t> Volume threshold per sender match </t>
<t> Volume threshold per sending network/domain match </t>
<t> Others </t>
</list>
</t>
</section>

<section title="Action Information">
<t>
Action information is of type Enumerated and followings:
<list style="symbols">
<t> Block with notification  </t>
<t> Block without notification  </t>
<t> Unblock and delivering  </t>
<t> Hold and quarantine </t>
<t> Others </t>

</list>
</t>
</section>

<section title="Privacy Shield Information">
<t>
Privacy shield information is of type Structure and contains privacy shield and sharing instruction.
</t>
</section>
<section title="Affective Filtering Start Timestamp">
<t>
Affective filtering start timestamp is of type Time and holds the time the policies included in the request should 
start to affect.
</t>
</section>
<section title="Affective Filtering Stop Timestamp">
<t>
Affective filtering start timestamp is of type Time and holds the time the policies included in the request should 
stop to affect.
</t>
</section>
<section title="Result Code">
<t>
Result Code is a mandatory element of type Integer and holds processing return result from the receiving node (see details in Section 6).
</t>
</section>
<section title="Anti-Spam Policy Instruction Control">
<t>
Anti-Spam Policy Instruction Control is of type Grouped. It includes information on the action requested by the 
client and information on any existing policy IDs that the client already has.
</t>
</section>
<section title="InstructionAction">
<t>
ActionInstruction is of type enumerated and can have any of these values: SubscribeInstruction, 
UnsubscribeInstruction, ImmediateInstruction.
</t>
</section>
<section title="Existing Policy IDs">
<t>
Existing Policy IDs is list of policy IDs that the client already has. This is useful for SubscriberInstruction and 
ImmediateInstruction option.
</t>
</section>

</section>


<!--
<section title="Extensibility"><t>
Refer to <xref target="draft-ietf-marf-base"></xref>.
</t>
</section>
-->

<section title="Result Codes">
<t>
The receiving node shall include appropriate return code in the response message to the sending node for policy 
instruction/distribution operation. This section provides unexhausted result codes.
</t>
<section title="Normal Return Codes">
<t>
<list style="hanging">
<t> 200 OK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Receiving node accepted the request and there was no new policy to apply </t>
<t> 202 Accepted&nbsp;&nbsp;&nbsp;Receiving node accepted the request and there was no problem parsing the request </t>
<t> 212 Applied&nbsp;&nbsp;&nbsp;&nbsp;Received policies have been applied in the Spam Reporting Client for scheduled spam filtering and 
detection </t>
</list>
</t>
</section>

<section title="Error Return Codes">
<t>
<list>
<t> 400 Bad request&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The request format and content could not be understood </t>
<t> 401 Unauthorized&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The sending node is not authorized to send policy 
instruction/distribution request to the receiving node </t>
<t> 406 Not Acceptable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The policies received in the request are not acceptable </t>
<t> 409 Conflict&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The request is conflict with existing policy rules </t>
<t> 420 Unsupported Network Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Network type is not supported at receiving node </t>
<t> 421 Unsupported Spam Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Spam type is not supported at receiving node </t>
<t> 422 Unsupported Message Type &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Message type is not supported at receiving node </t>
<t> 480 Temporarily Unavailable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The receiving node is temporarily unavailable </t>
<t> 500 Internal System Error&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The receiving node has internal system error </t>
<t> 503 Service Unavailable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The receiving node is unavailable for the requested 
service </t>
</list>
</t>
</section>
</section>

<section title="Protocols ">
<t>
The request and response messages specified for the anti-spam policy instruction/distribution framework operations 
specified in this document shall be communicated via a transaction protocol. 
</t>
<t>
A sending node should initiate each transaction by sending an <xref target="RFC 2616">RFC 2616</xref> HTTP POST message to the URI of receiving 
node. The body of this HTTP request shall contain the request message content specified in section 4.
</t>
<t>
After receiving and processing the HTTP POST request, the receiving node shall respond with an <xref target="RFC 2616">RFC 2616</xref> HTTP 
response. The body of this HTTP response shall contain the response message content specified in section 4.
</t>
<t>
The XML schema for the request and response message content is to be specified following agreement on the message 
elements proposed in this document.
</t>

</section>

<section title="IANA Considerations"><t>
None.
</t>
</section>

  
<section title="Security Considerations">

<t>
TBD
</t>

</section> <!-- Security Considerations -->

<section title="Acknowledgements">
<t>
The authors thank Igor Faynberg for his invaluable help with preparing this document.
</t>
</section>

</middle>  

<back>


<references title="Normative References" >

<reference anchor="RFC 2119">
 <front>
  <title>Key words for use in RFCs to Indicate Requirement Levels</title>
  <author initials="S." surname="Bradner">
    <organization/></author>
  <date month="March" year="1997"/>
 </front>
 <seriesInfo name="RFC" value="2119"/>
 <format type="TXT" target="http://www.ietf.org/rfc/rfc2119.txt"/>
</reference>

<reference anchor="RFC 2616">
 <front>
  <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
  <author initials="R." surname="Fielding">
    <organization/></author>
  <author initials="J." surname="Gettys">
    <organization/></author>
  <author initials="J." surname="Mogul">
    <organization/></author>
  <author initials="H." surname="Frystyk">
    <organization/></author>
  <author initials="L." surname="Masinter">
    <organization/></author>
  <author initials="P." surname="Leach">
    <organization/></author>
  <author initials="T." surname="Berners-Lee">
    <organization/></author>
  <date month="June" year="1999"/>
 </front>
 <seriesInfo name="RFC" value="2616"/>
 <format type="TXT" target="http://www.ietf.org/rfc/rfc2616.txt"/>
</reference>


<reference anchor="RFC 5965">
 <front>
  <title>An Extensible Format for Email Feedback Reports</title>
  <author initials="Y." surname="Shafranovich">
    <organization/></author>
<author initials="J." surname="Levine">
    <organization/></author>
<author initials="M." surname="Kucherawy">
    <organization/></author>
  <date month="August" year="2010"/>
 </front>
<seriesInfo name="RFC" value="5965"/>
  <format type="TXT" target="http://www.ietf.org/rfc/rfc5965.txt"/>
</reference>

<reference anchor="OMA TS SpamRep">
 <front>
  <title>Mobile Spam Reporting Technical Specification</title>
  <author></author>
  <date month="October" year="2010"/>
 </front>
</reference>
<!--==========
===========-->

</references>
<!--
<references title="Informative References">


</references>
-->
</back>
</rfc>


