<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="6"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<rfc category="std" docName="draft-bhatia-pim-mpls-register-packets-00" ipr="trust200902">
<front>
	<title abbrev="replace-PIM-register-with-MPLS">Replacing PIM Register packets with MPLS encapsulation</title>
	<author fullname="Manav Bhatia" initials="M.B." surname="Bhatia">
		<organization>Alcatel-Lucent</organization>
		<address><postal><street></street>
		<city>Bangalore</city><code></code><region></region>
		<country>India</country></postal>
		<email>manav.bhatia@alcatel-lucent.com</email>
		</address>
	</author>

	<date day="11" month="February" year="2011"></date>
	<area>Routing Area</area>
	<workgroup>PIM Working Group</workgroup>

	<abstract>
	<t>In PIM-SM the designated router (DR) closest to the source keeps sending
	      PIM register packets till it receives an explicit Register-Stop message from the
         rendezvous point (RP) router. The process of encapsulating multicast data traffic
          to the RP, and the decapsulation done by RP are relatively expensive operations
          for a router to perform, depending upon whether or not the router has appropriate
          hardware support for these tasks.</t>

	<t> Since the PIM register messages are native IP packets and routed based on 
           IP forwarding tables no resource reservation mechanisms are available. All IP 
           packets will follow common paths that are defined by the traditional IGP's 
           algorithm and customizing the path for multicast applications is impossible.
	</t>
	<t> This document proposes using MPLS tunnel(s) to send traffic from the source to the
	       RP till the shortest path tree (SPT) from the RP to the source is established. Processing MPLS 
          packets is easy and is readily supported on most platforms.</t>
	</abstract>
</front>

<middle>
	<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",  
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
     document are to be interpreted as described in RFC2119<xref target="RFC2119"></xref>.</t>

	<t>When used in lower case, these words convey their typical use in common 
     language, and are not to be interpreted as described in RFC2119<xref target="RFC2119"></xref>.</t>

	<section title="Introduction">
		<t>PIM-SM <xref target="RFC4601"></xref>DR encapsulates all multicast packets that it receives directly    
	          from the source and sends these unicast to the RP for that group. The  
	           multicast  data traffic is encapsulated in PIM Register packets. These packets 
	            convey the source address, S, and the group address, G to the RP.</t>

	<t>The RP decapsulates the PIM Register packets and forwards them natively    
         down the RPT. Additionally, the RP joins the SPT by sending a (S,G) Join to 
            its RPF neighbor for the source and waits till it starts receiving multicast packets  
          natively directly from the source. Till this happens, the RP must extract the multicast  
          data traffic from every PIM Register packet it receives for the (S,G) pair that needs to be 
          forwarded down the RPT natively.</t>

	<t>Encapsulation and Decapsulation are expensive operations for routers and the latter, especially,
          as it entails a double lookup that many routers cannot do in hardware.  It is for this reason that  
        several off the shelf chips do not support decapsulating the PIM Register packets. Any router that cannot  
       decapsulate the PIM Register packet in hardware must send all this traffic to CPU, where its decapsulated, 
        and forwarded based on the multicast forwarding table. This increases the load on the CPU and also   
     makes the router susceptible for DoS attacks. Also, since Register packets are unicast, then can be easily spoofed 
          and an attacker can use this to attack the router and thus the network.</t>

	<t>This document attempts to solve the above problems by doing away with the PIM   
         Register packets. It instead proposes using an MPLS tunnel to send all multicast       
      data traffic till an SPT is formed. This eliminates the complexity of decapsulating   
         PIM register packets on the RP as it now only needs to pop off the MPLS labels before 
          forwarding the native packet down the RPT.</t>

	<t>The mechanism described in this draft is only applicable when both DR and the  
         RP are MPLS capable and exist in an environment where they can use    
       MPLS in data plane.</t>

	<t>Additionally there are other advantages in using MPLS as a transport mechanism over the  
          native IP that PIM register traditionally uses. Operators can set up resource reservation   
         along the entire path requesting a certain level of QoS for the multicast flow across the network.  
	 It simplifies operations by providing a common operational    
        framework for unicast and multicast traffic. The failover time is very less because of 
            MPLS FRR mechanisms - something that’s unachievable when using traditional IP.</t>

	<t>This document is only applicable to PIM-SM in the ASM (Any Source Multicast)  mode  
         and introduces no change to PIM-SSM (Source Specific Multicast). 
           This is because there is no concept of an RP in the latter.</t>
	</section>

	<section title="Mechanism">
		<t>The DR close to the source MUST set up an MPLS RSVP-TE tunnel
			<xref target="RFC3936"></xref> between itself and the RP. The operator can use various constraints
			 in setting up the tunnel.            
			This tunnel would be used for sending all multicast data traffic till the RP is able to   
         receive multicast traffic natively through the SPT.</t>

	<t>It is suggested that this tunnel be established ahead of time as soon as the   
          RP is configured so that there is no signaling involved when receiving data traffic 
           from the source. A discussion about the life of the tunnel is beyond the scope of this  
          draft and an operator could keep it for as long as there is traffic expected from the source.</t>

	<t>Implementations can either set up one RSVP-TE tunnel between the DR and the RP
            or multiple tunnels with different constraints per  multicast group, G.</t>

	<t>This draft introduces no changes in how the DR sends the Register packets. The 
           same rules apply as defined in<xref target="RFC4601"></xref>. The only thing that changes is 
          that the DR MUST send Register packets using the tunnel, instead of the regular  
         registration encapsulation that’s defined in <xref target="RFC4601"></xref>.</t>

	</section>
	<section anchor="NullProbes" title="Handling Null-Register Probes">

		<t>Implementations MAY use the RSVP-TE tunnel established    
         between the DR and the RP to send Null-Register Probes or can   
          continue sending them as specified in <xref target="RFC4601"></xref>.</t>
	</section>

	<section anchor="RegisterStops" title="Handling Register-Stop Messages">
		<t>Implementations should continue sending Register-Stop messages       
	      as described in <xref target="RFC4601"></xref>. While there is nothing that    
	         prevents routers from establishing a reverse MPLS RSVP-TE tunnel from the  
           RP to the DR that could be used for transporting these messages,  there     
          isn't too much that one would gain by doing that. It is thus suggested that
	             there should be no change in how the Register-Stop messages are sent.</t>
	</section>

	<section anchor="Security" title="Security Considerations">
		<t>This document does not introduce any new security concerns. In fact, it 
	             reduces the risk of an attacker spoofing PIM Register packets.</t>
	</section>

	<section anchor="ACK" title="Acknowledgements">
		<t>Thanks to Stig Venaas for all his comments and feedback that resulted in   
	          significant improvement of this document.</t>
	</section>

	<section anchor="IANA" title="IANA Considerations">
		<t>This document places no requests to IANA.</t>
	</section>

</middle>

<back>
	<references title="Normative References">
	<?rfc ?>
	<?rfc include='reference.RFC.2119'?>
	<?rfc include='reference.RFC.4601'?>
	</references>

 	<references title="Informative References">
	<?rfc ?>
	<?rfc include='reference.RFC.3936'?>
	</references>

	<section anchor="Appendix" title="Appendix">
		<t>As mentioned earlier, there is no change in the exchange that occurs between the
	            DR and the RP. This section just describes it in case someone would like to     
	        get more clarity on how the RSVP-TE tunnel is used.</t>

	<t>When the DR receives multicast traffic directly from the source for a multicast group  
	          it will not encapsulate this in a PIM Register packet. It will instead forward this traffic    
        over the MPLS tunnel that has been established between the DR and the RP. The    
       RP will receive this traffic over the RSVP-TE tunnel and will pop off the label, before 
          sending it natively over the RPT towards the listeners.</t>

	<t>When the RP joins the SPT by sending (S,G) Join to its RPF neighbor for the     
        source it will wait till it starts receiving packets natively before sending a     
        Register-Stop message. Meanwhile, it will continue using the traffic that arrives     
       on the RSVP-TE tunnel and will forward it natively on the RPT tree.</t>

	<t>Upon receiving the Register-Stop message, the DR MUST stop sending the multicast 
             data traffic over the RSVP-TE tunnel and should start a Register-Stop timer for the (S,G) pair.     
        The DR can periodically send a Null-Register to the RP over the tunnel.       
     The Null-Register message will be used to probe the RP to determine whether the   
         DR needs to start sending normal multicast data traffic over the tunnel to the RP for the (S,G) pair.</t>

	<t>The RP upon receiving a Null-Register needs to decide if it wants to send a
            Register-Stop message back to the DR based on whether its receiving traffic 
            natively or not. If the RP sends a Register-Stop, the Register-Stop timer on the DR is 
            reset before it expires, and the DR does not start sending data over the RSVP-TE tunnel again.</t>

	<t>If the Register-Stop is not sent and the DR's Register-Stop timer expires,  
	             the DR MUST start sending multicast data traffic over the MPLS tunnel to the RP  
             until it receives another Register-Stop.</t>
	</section>
</back>
</rfc>