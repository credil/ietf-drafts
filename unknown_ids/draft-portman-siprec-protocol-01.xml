<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2804 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2804.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3265 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3265.xml">
<!ENTITY RFC4574 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4574.xml">
<!ENTITY I-D.ietf-siprec-req SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-req.xml">
<!ENTITY I-D.ietf-siprec-architecture SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-architecture.xml">
<!ENTITY I-D.ram-siprec-metadata SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ram-siprec-metadata.xml">
<!ENTITY I-D.johnston-siprec-cc-rec SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.johnston-siprec-cc-rec.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-portman-siprec-protocol-01" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="SIPREC Protocol">The SIP-based Media Recording Protocol (SIPREC)</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Leon Portman" initials="L.P." role="editor"
            surname="Portman">
      <organization>NICE Systems</organization>
      <address>
        <postal>
          <street>8 Hapnina</street>
          <city>Ra'anana</city>
          <code>43017</code>
          <country>Israel</country>
        </postal>
        <email>leon.portman@nice.com</email>
      </address>
    </author>

    <author fullname="Henry Lum" initials="H.L." surname="Lum">
      <organization>Genesys, Alcatel-Lucent</organization>
      <address>
        <postal>
          <street>1380 Rodick Road, Suite 200</street>
          <city>Markham</city>
		  <region>Ontario</region>
          <code>L3R4G5</code>
          <country>Canada</country>
        </postal>
        <email>henry.lum@genesyslab.com</email>
      </address>
    </author>

    <date month="December" year="2010" />
    <area>Real-time</area>
    <workgroup>SIPREC</workgroup>
    <keyword>siprec</keyword>
    <abstract>
	  <t>SIPREC Session Recording Protocol is used for establishing recording session and reporting of the metadata of the communication session.</t>
	  <t>This document specifies the SIPREC Protocol (SIPREC).  SIPREC is used between Session Recording Client (SRC) and Session Recording Server (SRS).</t>
    </abstract>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
      <t>Communication Session recording requires establishment of the recording session between communication system and recording system. In order to allow access to such recordings, information about the communication session (metadata) is also shared between SRC and SRS.</t>

      <t>The SIPREC Requirements <xref target="I-D.ietf-siprec-req"/> list a set of requirements that need to be met by session recording protocols.  The SIPREC protocol, which is specified in this document, meets these requirements.</t>

      <t>The SIPREC protocol uses SIP as the protocol for session establishment with special attention to reducing size of the required SIP messages.  In addition, it is designed for future extendability and protocol version management to ensure backward compatability.</t>

      <t>The remainder of this document is organized as follows: Section 2 defines the terminology used throughout this document, Section 3 discusses the scope of SIPREC (i.e., which tasks fall within the scope of SIPREC and which ones are performed using different mechanisms), Section 4 provides a non-normative overview of SIPREC operation, and subsequent sections provide the normative specification of SIPREC.</t>
	  
    </section>

	<section anchor="Definitions" title="Definitions">
	  <t>The core SIPREC defintions are taken from the requirements document <xref target="I-D.ietf-siprec-req"/>.</t>
	  <t>[Henry's note: do we really need this section since this is just a copy and paste?]</t>
	  <t><list style="hanging"><t>Session Recording Server (SRS): A Session Recording Server (SRS) is a SIP User Agent (UA) that is a specialized media server or collector that acts as the sink of the recorded media.  An SRS is a logical function that typically archives media for extended durations of time and provides interfaces for search and retrieval of the archived media.  An SRS is typically implemented as a multi-port device that is capable of receiving media from several sources simultaneously. An SRS is typically also the sink of the recorded session metadata.</t>
   
   <t hangText="Session Recording Client (SRC)">A Session Recording Client (SRC) is a SIP User Agent (UA) that acts as the source of the recorded media, sending it to the SRS.  An SRC is a logical function.  Its capabilities may be implemented across one or more physical devices.  In practice, an SRC could be a personal device (such as a SIP phone), a SIP Media Gateway (MG), a Session Border Controller (SBC) or a SIP Media Server (MS) integrated with an Application Server (AS).  This specification defines the term SRC such that all such SIP entities can be generically addressed under one definition.  The SRC itself or another entity working on its behalf (such as a SIP Application Server) may act as the source of the recording metadata.</t>
   
   <t hangText="Communication Session (CS)">A session created between two or more SIP User Agents (UAs) that is the target for recording.</t>
   
   <t hangText="Recording Session (RS)"> The SIP session created between an SRC and SRS for the purpose of recording a Communication Session.</t>
   <t hangText="Metadata">Information that describes recorded media and the CS to which they relate.</t>
   <t hangText="SIPREC">The set of SIP extensions that supports recording of Communication Sessions.</t>
   <t hangText="Pause during a Communication Session:"> The action of temporarily discontinuing the transmission and collection of RS media.</t>
   <t hangText="Resume during a Communication Session:">The action of recommencing the transmission and collection of RS media.</t>
   </list>
   </t>
   <t>Figure 1 shows the relationship between the defintions.</t>
   
   <figure><artwork>
<![CDATA[
  +-------------+                                      +-----------+
  |             |        Communication Session         |           |
  |     A       |<------------------------------------>|     B     |
  |             |                                      |           |
  +-------------+                                      +-----------+
  ..................................................................
  .                             Session                            .
  .                            Recording                           .
  .                             Client                             .
  ..................................................................
                                   |
                                   | Recording
                                   | Session
                                   |
                                   v
                            +------------+
                            |   Session  |
                            |  Recording |
                            |   Server   |
                            +------------+
							
	   Figure 1: Relationship between CS, SRC, SRS, and RS
]]>
   </artwork></figure>
	

	</section>
	
	<section title="Scope">
	    <t>The scope of the SIPREC protocol includes the establishment of the recording sessions and the reporting of the metadata.  The following items, which is not an exhaustive list, do not represent the SIPREC protcol itself and are considered out of the scope of the SIPREC protcol:</t>
		<t><list style="symbols">
		<t>Recording policies that determine whether the CS should be recorded</t>
		<t>Retention policies that determine how long a recording is stored</t>
		<t>Searching and accessing the recorded media and metadata</t>
		<t>Delivering recording session metadata through non-SIP mechanism</t>
		</list>
		</t>
	  </section>

	<section anchor="Overview" title="Overview of operations">
	   <t>This section provides a description of SIPREC operations.</t>
	   
	   <t>As mentioned in the architecture document <xref target="I-D.ietf-siprec-architecture"/>, there are a couple of types of call flows based on the location of the Session Recording Client. The following sample call flows provide a quick overview of the operations between the SRC and the SRS.</t>
	   
	<section title="Delivering recorded media">
	   
       <t>When the SRC is deployed as a B2BUA, the SRC can route call requests from UA(A) to UA(B). As a SIP B2BUA, the SRC has access to the media path between the user agents.  When the SRC is aware that it should be recording the conversation, the SRC may bridge the media between UA(A) and UA(B).  The SRC then establishes the Recording Session with the SRS and sends replicated media towards the SRS.</t>
	   
	   <figure><artwork>
<![CDATA[
UA A           SRC                    UA B                    SRS
 |(1)CS INVITE  |                       |                      |
 |------------->|                       |                      |
 |              |(2)CS INVITE           |                      |
 |              |---------------------->|                      |
 |              |               (3)OK   |                      |
 |              |<----------------------|                      |
 |        (4)OK |                       |                      |
 |<-------------|                       |                      |
 |              |(5)RS INVITE (CallId + Participants) with SDP |
 |              |--------------------------------------------->|
 |              |                       |       (6)OK with SDP |
 |              |<---------------------------------------------|
 |(7)CS RTP     |                       |                      |
 |=============>|======================>|                      |
 |<=============|<======================|                      |
 |              |(8)RS RTP              |                      |
 |              |=============================================>|
 |              |=============================================>|
 |(9)CS BYE     |                       |                      |
 |------------->|                       |                      |
 |              |(10)CS BYE             |                      |
 |              |---------------------->|                      |
 |              |(11)RS BYE             |                      |
 |              |--------------------------------------------->|
 |              |                       |                      |

         Figure 3: Recording Call flow - SRC as a B2BUA
]]>								 
	   </artwork></figure>
	   
	   <t>When one of the endpoint is also acting as the SRC, the endpoint itself will be establishing the Recording Session to the SRS.  Since the endpoint has access to the media in the communication session, the endpoint can send replicated media towards the SRS.</t>
	   
	   <figure><artwork>
<![CDATA[
   UA A                   UA B                    SRS
   (SRC)                    |                      |
    |(1)CS INVITE           |                      |
    |---------------------->|                      |
    |               (2)OK   |                      |
    |<----------------------|                      |
    |(3)RS INVITE (CallId + Participants) with SDP |
    |--------------------------------------------->|
    |                       |       (4)OK with SDP |
    |----------------------------------------------|
    |(5)CS RTP              |                      |
    |======================>|                      |
    |<======================|                      |
    |(6)RS RTP              |                      |
    |=============================================>|
    |=============================================>|
    |(7)CS BYE              |                      |
    |---------------------->|                      |
    |(8)RS BYE              |                      |
    |--------------------------------------------->|
    |                       |                      |
   
            Figure 4: Recording Call flow - SRC as the endpoint
]]>								 
	   </artwork></figure>

	   <t>A conference focus may also act as an SRC since it has access to all the media from each conference participant.  In this example, a user agent may REFER the conference focus to the SRS, and the SRC may choose to mix media streams from all participants as a single media stream towards the SRS.</t>
	   
	   <figure><artwork>
<![CDATA[
 UA A                 Focus                 UA B                SRS
   |                  (SRC)                  |                   |
   |                    |                    |                   |
   |      (already in a conference)          |                   |
   |<==================>|<==================>|                   |
   |(1)REFER sip:Conf-ID Refer-To:SRS        |                   |
   |------------------->|                                        |
   |(2)202 Accepted     |                                        |
   |<-------------------|                                        |
   |  (3)NOTIFY (Trying)|                                        |
   |<-------------------|                                        |
   |(4)200 OK           |                                        |
   |------------------->|                                        |
   |                    |(5)INVITE Contact:Conf-ID;isfocus       |
   |                    |--------------------------------------->|
   |                    |                              (6)200 OK |
   |                    |<---------------------------------------|
   |                    | (7)RTP (mixed or unmixed)              |
   |                    |=======================================>|
   |     (8)NOTIFY (OK) |                                        |
   |<-------------------|                                        |
   |(9)200 OK           |                                        |
   |------------------->|                                        |

  Figure 5: Recording call flow - SRC as a conference focus
]]>	   
	   </artwork></figure>
	</section>
	
	<section title="Delivering recording metadata">
		<t>Certain metadata, such as the attributes of the recorded media stream, are already included in the SDP of the recording session.  This information is reused as part of the metadata.  The SRC may update or add additional metadata about recorded media streams in requests such as INVITE, reINVITE, and UPDATE in the Recording Session.  </t>
		
		<t>The rest of the metadata will be delivered as content.  Metadata can also be represented as a stream of events.  There are 4 ways to transport metadata events as outlined in the architecture document:</t>
		
		<t>SIP INVITE Content: for a simple call recording use case where no mid-dialog events are required to be delivered after the RS is established, the SIP INVITE may include content for all the metadata needed for the call.</t>
		
		<t>SIP INFO Package: metadata can be provided as an INFO package and sent as mid-dialog messages within the recording session.</t>
		
	    <figure><artwork>
<![CDATA[
   UA A                   UA B                    SRS
   (SRC)                    |                      |
    |(1)CS INVITE           |                      |
    |---------------------->|                      |
    |               (2)OK   |                      |
    |<----------------------|                      |
    |(3)RS INVITE (SDP)     |                      |
    |--------------------------------------------->|
    |                       |       (4)OK with SDP |
    |----------------------------------------------|
    |(5)CS RTP              |                      |
    |======================>|                      |
    |<======================|                      |
    |(6)RS RTP              |                      |
    |=============================================>|
    |=============================================>|
    |(7)RS INFO (metadata)  |                      |
    |--------------------------------------------->|
    |(8)CS BYE              |                      |
    |---------------------->|                      |
    |(9)RS BYE              |                      |
    |--------------------------------------------->|
    |                       |                      |
   
       Figure 6: Delivering metadata via SIP INFO
]]>								 
	   </artwork></figure>

		<t>Event Package: Metadata can also be conveyed from the SRC to the SRS using the SIP event notification mechanism <xref target="RFC3265"/>.  Using a subscription allows the SRC to deliver metadata to the SRS when the lifecycles of the CS and RS are different.  This also allows the SRC to deliver session metadata and recorded media separately, for example, an SRS that reports metadata for multiple recording sessions as a single subscription.</t>
		
		<t>[Henry's note: is it the responsibility of the SRS to find the URI of the SRC when sending the SUBSCRIBE request?]</t>		
		
	   <figure><artwork>
<![CDATA[
UA A           SRC                    UA B                    SRS
 |              |(1)SUBSCRIBE Event: rs-metadata               |
 |              |<---------------------------------------------|
 |              |                       |                (2)OK |
 |              |--------------------------------------------->|
 |              |(3)NOTIFY                                     |
 |              |--------------------------------------------->|
 |              |                       |                (4)OK |
 |              |<---------------------------------------------|
 |(5)CS INVITE  |                       |                      |
 |------------->|                       |                      |
 |              |(6)CS INVITE           |                      |
 |              |---------------------->|                      |
 |              |               (7)OK   |                      |
 |              |<----------------------|                      |
 |        (8)OK |                       |                      |
 |<-------------|                       |                      |
 |              |(9)RS INVITE (CallId + Participants) with SDP |
 |              |--------------------------------------------->|
 |              |                       |      (10)OK with SDP |
 |              |<---------------------------------------------|
 |(11)CS RTP    |                       |                      |
 |=============>|======================>|                      |
 |<=============|<======================|                      |
 |              |(12)RS RTP             |                      |
 |              |=============================================>|
 |              |=============================================>|
 |              |(13)NOTIFY (metadata)                         |
 |              |--------------------------------------------->|
 |              |                       |               (14)OK |
 |              |<---------------------------------------------|
 |(15)CS BYE    |                       |                      |
 |------------->|                       |                      |
 |              |(16)CS BYE             |                      |
 |              |---------------------->|                      |
 |              |(17)RS BYE             |                      |
 |              |--------------------------------------------->|
 |              |                       |                      |

         Figure 7: Delivering metadata via Events
]]>								 
	   </artwork></figure>		
	   
		<t>In some cases session metadata can be conveyed through non-SIP mechanism such as HTTP or JTAPI.  These non-SIP mechanisms are considered out of the scope of the SIPREC protocol, however, it is envisoned that a link with a URI can be provided in the recording session INVITE message so that the SRS can access the session metadata via the URI provided that the SRS supports the type of URI.</t>
	</section>
	   
	</section>
	
	<section anchor="extensions" title="SIP Extensions">
	   <t>The recording session is a SIP Session and negotiates recorded media streams sent from the SRC to the SRS.  In order to identify itself as a recording session, the SRC MUST include the src media feature tag <xref target="I-D.johnston-siprec-cc-rec"/> in the Contact header of the initial INVITE request.  When the SRS provides the response, the SRS MUST include the srs media feature tag in the Contact header.</t>
	      
	   <t>The From header MUST contain the identity of the SRC.  Participants information is not recorded in the From or To header; they are included in the metadata information.</t>
	   
	   <t>Note that a recording session does not have to have live within the scope of a single communication session. As outline in REQ-004 of <xref target="I-D.ietf-siprec-req"/>, the recording session can be established in the absence of a communication session.  In this case, the SRC MUST offer an SDP with zero m= lines.</t>
	   
	   <t>Recorded media from multiple communication sessions may be handled in a single recording session.  The SRC provides a reference of each recorded media stream to the metadata described in the next section.</t>

	   <t>The SRC MUST be able to accept re-INVITE from SRS with the updated SDP as part of the session timer mechanism.</t>

       <section title="SDP handling">
       <t>SRC can include one or more media streams to the SRS.  The SRS MUST respond with the same number of media descriptors in the SDP body of the 200 OK.</t>
	   
	   <t>The SRC should use a=sendonly attribute as the SRC does not expect to receive media from the SRS.  As SRS only receives RTP streams from SRS, the 200 OK response will normally contain SDP with a=recvonly attribute.</t>
	   
	   <t>Since the SRC may send recorded media of different participants (or even mixed streams) to the SRS, the SDP MUST provide a label on each media stream in order to identify the recorded stream with the rest of the metadata.  The a=label attribute <xref target="RFC4574"/> will be used to identify each recorded media stream, and the label name will be used as the reference for the metadata.  Note that a participant may have multiple streams (audio and video) and each stream is labeled separately.</t>
	   
	   <t>[Henry's note: I think the direction of media should be provided in the metadata as long as we have a label to reference it in the metadata?]</t>

    <figure><artwork>
	<![CDATA[
           v=0
           o=SRS 0 0 IN IP4 172.22.3.8
           s=SRS
           c=IN IP4 172.22.3.8
           t=0 0
           m=audio 12241 RTP/AVP 0 4 8
           a=sendonly
           a=label:1
           m=audio 12242 RTP/AVP 98
           a=rtpmap:98 H264/90000
           a=fmtp:98 ...
           a=sendonly
           a=label:2
           m=audio 12243 RTP/AVP 0 4 8
           a=sendonly
           a=label:3
           m=audio 12244 RTP/AVP 98
           a=rtpmap:98 H264/90000
           a=fmtp:98 ...
           a=sendonly
           a=label:4

    Figure 8: Sample SDP with audio and video streams
]]>
   </artwork></figure>
	   
	   <t>To remove a recorded media stream from the recording session, send a reINVITE and set the port to zero in the m= line.</t>
	   <t>To add a recorded media stream, send a reINVITE and add a new m= line.</t>
	   
       <t>The SRS may respond with a=inactive attribute as part of the SDP in the 200 OK response when the SRS is not ready to receive recorded media.  The SRS can send re-INVITE to update the SDP with a=recvonly when it is ready to receive media.</t>
	   
       <t>The following sequence diagram shows an example of SRS responds with SDP that contain a=inactive, and then later update media information update with re-INVITE.</t>

   <figure><artwork>
<![CDATA[
  SRC                                                   SRS
   |                                                     |
   |(1) INVITE (no offer)                                |
   |---------------------------------------------------->|
   |                         (2)200 OK with SDP inactive |
   |<----------------------------------------------------|
   |(3) ACK with SDP inactive                            |
   |---------------------------------------------------->|
   |                      ...                            |
   |                     (4) re-INVITE with SDP recvonly |
   |<----------------------------------------------------|
   |(5)200 OK with SDP sendonly                          |
   |---------------------------------------------------->|
   |                                  (6) ACK with SDP   |
   |<----------------------------------------------------|
   |(7) RTP                                              |
   |====================================================>|
   |                      ...                            |
   |(8) BYE                                              |
   |---------------------------------------------------->|
   |                                             (9) OK  |
   |<----------------------------------------------------|
    
	   Figure 9: SRS to offer with a=inactive
]]>
   </artwork></figure>

        </section>
		<section title="Metadata">

		<t>The format of the full metadata will be described as part of the mechanism in <xref target="I-D.ram-siprec-metadata"/>.</t>
		
		<t>As mentioned in the previous section, the SDP of the recording session is the metadata for all recorded media streams. The label attribute contains a reference to the rest of the metadata information.</t>
		
	    <t>For all basic metadata information such as communication session, participants, call identifiers and direction, they can be included in the initial INVITE request sent by the SRC. Metadata can be included as content in the INVITE request.  A new "dispoition-type" of Content-Disposition is defined for this purpose and the value is "recording-session".</t>

        <t>Recording metadata can also be a stream of events. The metaadata events can be reported using SIP SUBSCRIBE/NOTIFY mechanism.</t>
		
		<t>[Henry's note: should we support both INFO packages and Event packages assuming both effectively contains the same content for metadata?]</t>

        <t>The following SIP example for RS establishment between SRC and SRS with metadata as content.</t>
      
   <figure><artwork>
<![CDATA[
    INVITE sip:97753210@10.240.3.10:5060 SIP/2.0
    From: <sip:2000@10.226.240.3>;tag=35e195d2-947d-4585-946f-098392474
    To: <sip:Recorder@10.240.3.10>
    Call-ID: d253c800-b0d1ea39-4a7dd-3f0e20a@10.226.240.3
    CSeq: 101 INVITE
    Date: Thu, 26 Nov 2009 02:38:49 GMT
    Supported: timer
    Supported: replaces
    User-Agent: B2BUA
    Max-Forwards: 70
    Allow: INVITE,OPTIONS,INFO,BYE,CANCEL,ACK,PRACK,UPDATE,
      REFER,SUBSCRIBE,NOTIFY,PUBLISH
    Allow-Events: presence,kpml 
	Min-SE: 90
    Contact: <sip:2000@10.226.240.3:5060;transport=tcp>;isfocus;src
    Via: SIP/2.0/TCP 10.226.240.3:5060;branch=z9hG4bKdf6b622b648d9
    Session-Expires: 1800
    Content-Type: multipart/mixed;boundary=foobar
    Content-Length: [length]
    
    --foobar
    Content-Type: application/sdp
    
    v=0
    o=SRS 0 0 IN IP4 10.226.240.3
    c=IN IP4 10.226.240.3
    t=0 0
    m=audio 12241 RTP/AVP 0 4 8
    a=sendonly
    a=label:1
    
    --foobar
    Content-Type: application/rs-metadata
    Content-Disposition: recording-session
    
    [metadata content]

        Figure 10: Sample INVITE request for the recording session
]]>
   </artwork></figure>
   
		
		</section>
		
	   <section anchor="realtime_control" title="Recording Pause and Resume">
		 <t>To temporarily discontinue streaming of recorded media from the SRC to the SRS, the SRC MUST send a reINVITE and set a=inactive for each recorded media stream to be paused.</t>
		 
		 <t>To resume streaming of recorded media, the SRC must send a reINVITE and set a=sendonly for each recorded media stream to resume.</t>
		 
		 <t>[Henry's note: how do we tell the difference between pause/resume of recorded media and mute/unmute of the communication session?]</t>
       </section>

   </section>
   
   <section anchor="transport" title="Transport">
   <t>TBD</t>
   </section>
   
   <section anchor="failover" title="Failover and Recovery">
   <t>TBD</t>
   </section>
   
   <section anchor="error_handling" title="Error Handling">
   <t>TBD</t>
   </section>
   
   <section anchor="iana" title="IANA Considerations">
     <section title="New Content-Disposition Parameter Registrations">
	 <t>This document registers a new "disposition-type" value in Content-Disposition header: recording-session.</t>
	 
	 <t>recording-session   the body describes the metadata information about the recording session</t>
	 </section>
	 <section title="MIME Type">
	 <t>This document registers the [TBD] MIME media type in order to describe the recording session metadata. This media type is defined by the following information:</t>
	 <t>  Media type name: application</t>
	 <t>  Media subtype name: rs-metadata</t>
	 <t>  Required parameters: none</t>
	 <t>  Options parameters: none</t>
	 </section>
   </section>

	<section anchor="Security" title="Security Considerations">
	<t>The recording session is fundamentally a standard SIP dialog <xref target="RFC3261"/>, therefore, the recording session can reuse any of the existing SIP security mechanism available for securing the recorded media as well as metadata.</t>
	
	   <section anchor="authentication" title="Authentication and Authorization">
	   <t>The recording session reuses the SIP mechanism to challenge requests that is based on HTTP authentication.  The mechanism relies on 401 and 407 SIP responses as well as other SIP header fields for carrying challenges and credentials.</t>
	   
	   <t>The SRS may have its own set of recording policies to authorize recording requests from the SRC. The use of recording policies is outside the scope of the SIPREC protocol.</t>
       </section>

	</section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
        &RFC2119;

        &RFC2804;

	    &RFC3261;
		
		&RFC3265;
		
		&RFC4574;

	    &I-D.ietf-siprec-req;
		
    </references>

    <references title="Informative References">
	  &I-D.ietf-siprec-architecture;
	
	  &I-D.ram-siprec-metadata;
	  
	  &I-D.johnston-siprec-cc-rec;
	  
    </references>
  </back>
</rfc>