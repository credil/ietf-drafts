


Network Working Group                                              Y. Xu
Internet-Draft                                            Tsinghua Univ.
Intended status: Standards Track                                 P. Yang
Expires: January 8, 2009                                           Y. Ma
                                         Hitachi (China) R&D Corporation
                                                                 H. Deng
                                                            China Mobile
                                                                   K. Xu
                                                     Tsinghua University
                                                            July 7, 2008


                         IKE SA Synchronization
                        draft-xu-ike-sa-sync-00

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on January 8, 2009.












Xu, et al.               Expires January 8, 2009                [Page 1]

Internet-Draft                 IKE SA SYNC                     July 2008


Abstract

   It will take a long time to do security association syncronization
   among IKE/IPsec gateways possibly maintaining huge numbers of IKEv2/
   IPsec SAs.  The major reason is that the prcocedure of IKEv2 SA re-
   establishment will incur a time-consuming computation especially in
   the Diffie-Hellman exchange.  In this draft, a new IKE security
   associations synchronization solution is proposed to reduce the
   computation by directly transferring the indexed IKE SA from old
   gateway to new gateway, wherein the most expensive Diffie-Hellman
   calculation can be avoided.  Without some time-consuming IKEv2
   exchanges, the huge amount of IKE/IPsec SA synchronization procedures
   can be finished in a short time.


Table of Contents

   1.  Background . . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Application scenarios  . . . . . . . . . . . . . . . . . . . .  4
     2.1.  Scenario of failover . . . . . . . . . . . . . . . . . . .  4
     2.2.  Scenario of load-balance . . . . . . . . . . . . . . . . .  5
   3.  Details on Proposed solution . . . . . . . . . . . . . . . . .  6
     3.1.  Overview of the Proposed solution  . . . . . . . . . . . .  6
     3.2.  Key data structure . . . . . . . . . . . . . . . . . . . .  6
     3.3.  Consideration on Stub handling . . . . . . . . . . . . . .  7
     3.4.  Consideration on location of Stub  . . . . . . . . . . . .  8
     3.5.  When should Gateways download/update Stub  . . . . . . . .  9
     3.6.  Related new messages . . . . . . . . . . . . . . . . . . .  9
   4.  Modification on the base IKEv2 protocol  . . . . . . . . . . . 11
   5.  Security Considerations  . . . . . . . . . . . . . . . . . . . 12
   6.  Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . 13
   7.  Normative References . . . . . . . . . . . . . . . . . . . . . 14
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 15
   Intellectual Property and Copyright Statements . . . . . . . . . . 17

















Xu, et al.               Expires January 8, 2009                [Page 2]

Internet-Draft                 IKE SA SYNC                     July 2008


1.  Background

   IKEv2 protocol which has been defined by rfc4306[1] provides us a
   method to negotiate ipsec's key automatically between ipsec clients
   and gateway.  Before negotiating ipsec's key, they should negotiate
   IKE's SA first.  Usually, ipsec client sends IKE_INIT message to
   gateway with SAi1, KEi, Ni, then gateway chooses some proposal of
   SAi1 which come to the algorithm for encryption and decryption, also
   proposal for Diffie-Hellman, and then calculates the Diffie-Hellman,
   sends IKE_INIT respond message back to ipsec client.  At this time,
   the most important keyring can be generated.  After other IKE_AUTH
   exchange, each other has verified the identity.  IKE SA has
   completely been established.

       Initiator                          Responder
       -----------                        -----------
    HDR, SAi1, KEi, Ni      -->

                               < -- HDR, SAr1, KEr, Nr, [CERTREQ]

    HDR, SK {IDi, [CERT,]
    [CERTREQ,] [IDr,],AUTH,
    SAi2, TSi, TSr}         -->
                               < -- HDR, SK {IDr, [CERT,] AUTH,
                                    SAr2, TSi, TSr}


   Figure 1: IKE_INIT and IKE_AUTH exchanges

   But it seems too time consuming to establish an IKE SA in these first
   two exchanges, especially Diffie-Hellman computation, as we know it
   is too slow to compute, so it is a challenge to the new gateway when
   thousands of, even more, ipsec clients are transfered from old
   gateway to new the gateway.

















Xu, et al.               Expires January 8, 2009                [Page 3]

Internet-Draft                 IKE SA SYNC                     July 2008


2.  Application scenarios

2.1.  Scenario of failover


      IPsec                          old                    new/old
      client                         Gateway                gateway
       |                              |                        |
       |     IKE/IPsec SAs            |                        |
       |< ========================== >|                        |
       |                              |                        |
       |                              |                        |
       |                              O Fail of old GW         |
       |                              |                        |
       O detect the fail              |                        |
       | of old GW                    |                        |
       |                              |                        |
       |           new IKE init procedure                      |
       |< =================================================== >|
       |                              |                        |
       |           set up other child IPsec SAs                |
       |< =================================================== >|
       |                              |                        |


   Figure 2: failover scenarios

   In this scenario, ipsec clients has established IKE connections with
   old gateway, then for some reason, old gateway fails, after a short
   time, ipsec client knows old gateway has failed(how to know gateway
   fail is out of our scope), and reconnect to the old gateway or
   another new gateway.  It must be a rush hour, so many ipsec clients
   connect to the gateway in the same time, as we know, re-establish IKE
   security associations(SAs) is too slow to compute because of Diffie-
   Huffman(DH).  The problem statement and goals for a failover solution
   are described in [2].















Xu, et al.               Expires January 8, 2009                [Page 4]

Internet-Draft                 IKE SA SYNC                     July 2008


2.2.  Scenario of load-balance


      IPsec                          old                    new
      client                         Gateway                gateway
       |                              |                        |
       |     IKE/IPsec SAs            |                        |
       |< ========================== >|                        |
       |                              |                        |
       |                              |                        |
       |                              O overload of old GW     |
       |                              |                        |
       O detect the overload          |                        |
       | of old GW                    |                        |
       |                              |                        |
       |           new IKE init procedure                      |
       |< =================================================== >|
       |                              |                        |
       |           set up other child IPsec SAs                |
       |< =================================================== >|
       |                              |                        |


   Figure 3: load-balance scenarios

   In this scenario, after establishing IKE connections between ipsec
   clients and old gateway, old gateway may not fail, owing to traffic
   engineer or old gateway is over-loading, ipsec clients knows they
   should stop the connection with old gateway and establish the
   connection with new gateway(how to know new gateway is also out of
   our scope).  If many ipsec clients are transferd from old gateway to
   new gateway, as same as failover, it is a challenge to new gateway to
   establish IKE SA in the same time.


















Xu, et al.               Expires January 8, 2009                [Page 5]

Internet-Draft                 IKE SA SYNC                     July 2008


3.  Details on Proposed solution

3.1.  Overview of the Proposed solution

   In this section, we define a new data structure stub which has the
   most important information of IKE SA, and gateway can use this data
   structure to fast rebuild IKE SA.  We expand the IKE_INIT exchange,
   and add a payload called IKE_SA_SYN. because old gateway's IP address
   and SPI can index the unique stub of IKE SA, so we make them in SYN
   payload to index stub.

   Initiator                                    Responder
   -----------                                  --------------
   HDR, SAi1, KEi, Ni, [SYN]   --->
                                      < --      HDR, Nr

   Figure 4: IKE SA synchronization exchange

   Once ipsec client has to be transfer from old gateway to new gateway,
   it can send IKE_INIT which is extended a SYN payload as optional, the
   IKE SYN payload has some index informatin such as old gateway ip
   address and old gateway's SPI, if old/new gateway finds IKE_SA_SYN
   payload in the IKE_INIT message, it can fast re-establish IKE SA
   without DH computation and IKE_AUTH exchange, and IKE_INIT respond
   with olny Nr to ipsec client to tell it IKE_SA has been re-
   established.  If new gateway does not support IKE_SA_SYN or not find
   the proper stub, it can establish IKE SA by IKE_INIT and IKE_AUTH
   exchanges, or just drop the packet.

3.2.  Key data structure

   the stub data structure should conclude all these informations.  (We
   have referenced "ticket" proposal[3].)

      o  IDi, IDr.
      o  SPIi, SPIr.
      o  SAr (the accepted proposal).
      o  SK_d.
      o  shared secret.
      o  old gateway's ip address.

   We propose using c++ STL map data structure to store this stub
   message, use old gateway's ip address and SPI as key, and the other
   properties as value.  You also can use other data structure to hash
   old gateway's ip address and SPI to other properties.

   SAr have the encrypt and decrypt algorithm, and shared secrect is the
   DH exchange's result, we can calculate the IKE SA's keyring as rekey



Xu, et al.               Expires January 8, 2009                [Page 6]

Internet-Draft                 IKE SA SYNC                     July 2008


   process.  It will be very quick.

3.3.  Consideration on Stub handling

   1) generation

   When IKE SA has been established(after first two exchanges), the
   gateway extracts the stub from IKE SA and store it.

   2) propagation

   After extrcted from IKE SA, stubs should be updated to infrastructure
   such as stub bank(we will define next section) or other gateway.

   3) look-up

   As the old gateway's ip address and spi can index the unique stub.
   Such as map data structure, hash operation is very light-weighted,
   you can find it very fast.

   4) usage

   In some senarios, the ipsec clients want to synchrinazation IKE SA
   with a gateway.  Then the ipsec clients send IKE_INIT message with
   SYN payload to old/new gateway, gateway will get old gateway's IP
   address and SPI from IKE_SA SYN payload, and find the stub in local
   machine database (maybe download the stub from other gateway or stub
   bank before), then rebuild the IKE SA.  If IKE SA has been
   established, gateway sends IKE_INIT respond(only conclude HDR and Nr)
   to ipsec client. then create-child-sa exchanges, and so on.

   The following signaling shall be supported by IKE/IPsec gateways to
   communicate with Stub.

   o Update Stub:

   Gateway updates its stub to infrastructure once new stub has been
   established, and the infrastructure store them by gateway's IP
   address and SPI in a hash data structure.

   o GET Stub:

   Gateway receives IKE_SA SYN payload, then it send GET Stub to ask for
   some stubs, the infrastructure index the stubs.

   o Download Stub:

   After infrastructure finds the stubs, it pushs the stubs to gateway.



Xu, et al.               Expires January 8, 2009                [Page 7]

Internet-Draft                 IKE SA SYNC                     July 2008


3.4.  Consideration on location of Stub

   1.  Centralized infrastructure

    ipsec                  old/new                stub
    client                 gateway                bank
       ||                    ||   Update Stub      ||
       || HDR,SAi1,KEi,Ni,SYN||------------------->||
       ||------------------->||   GET Stub         ||
       ||< ------------------||------------------->||
       ||     HDR,Nr         ||   Download Stub    ||
       ||                    ||< ------------------||
       ||                    ||                    ||


   Figure 5: centralized structure

   This proposal has a centralized Stub Bank server, gateway doesn't
   need local stub database.

   a) After IKE connection has been established, old gateway update the
   stub to stub bank.

   b) Once transferring ipsec from old gateway to old/new gateway, ipsec
   client send IKE_INIT with SYN payload.

   c) When old/new gateway receives IKE_INIT with SYN payload, it ask
   Stub Bank for stub via GET Stub signaling.

   d) stub bank push proper stub to old/new gateway.

   old/new gateway find the proper stub and rebuild IKE SA, then send
   HDR, Nr to tell ipsec client that it has accepted the stub.

   2.  Distributed infrastructure

    ipsec                  old/new                Old GW
    client                 gateway                Stub
       ||                    ||                    ||
       || HDR,SAi1,KEi,Ni,SYN||    Update Stub     ||
       ||------------------->||< ------------------||
       ||< ------------------||                    ||
       ||     HDR,Nr         ||                    ||

   Figure 6: distributed structure

   This structure doesn't have centralized Stub Bank, and all gateway
   must have local stub database, if there is stub in local database, it



Xu, et al.               Expires January 8, 2009                [Page 8]

Internet-Draft                 IKE SA SYNC                     July 2008


   will find the stub in local database, otherwise, it will GET the stub
   from other gateway.

   a) After IKE connection has been established, old gateway update the
   stub to stub bank.

   b) Once transferring ipsec from old gateway to old/new gateway, ipsec
   client send IKE_INIT with SYN payload.

   c) old/new gateway find the proper stub and rebuild IKE SA, then send
   HDR, Nr to tell ipsec client that it has accepted the stub.

   Gateway has to store stubs in distributed structure, but it seems
   more simple than centralized structure.  Also, these two proposals
   can mix together, other gateway also can be Stub Bank.

3.5.  When should Gateways download/update Stub

   Because of the stub is not sensitive with time, we can assemble the
   stub messages to reduce the message number in update event.

   The single gateway can get many stubs at a time in download event.

   The gateway may also update the stubs in bundles whenever it was
   thought to be necessary

3.6.  Related new messages

   1)IKE_SA_SYN Payload format

                        1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Next Payload  |C|  RESERVED   |         Payload Length        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         GateWay's SPI                         |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         GateWay's IP Address                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   C bit is the direction of this message.

   2) Stub related signaling

   Header Format





Xu, et al.               Expires January 8, 2009                [Page 9]

Internet-Draft                 IKE SA SYNC                     July 2008


                        1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Next   Payload|       type   |         Payload Length         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                   type         number
                   update         01
                   get            10
                   download       11
                   reserved       00


                        1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | Next   Payload|   RESERVED   |         Payload Length         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                         PAYLOAD CONTENT                       |
   ~                                                               ~
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+






























Xu, et al.               Expires January 8, 2009               [Page 10]

Internet-Draft                 IKE SA SYNC                     July 2008


4.  Modification on the base IKEv2 protocol

   As our principle, The base IKEv2 protocol should be changed as little
   as possible.  In the proposal, three aspects require slight
   modification on IKEv2 protocol

   1) new IKE message: IKE_SA_SYN

   2) modification on the state machine

   As ipsec client, it can send IKE_INIT message with SYN payload as
   usual, and if it receives IKE_INIT respond only have Nr, it will
   calculate the new ike sa like rekey.  And set state to ike sa has
   been established.

   As gateway, once receives IKE_SA_SYN payload, will firstly find the
   proper stub, if find the stub, it will fast re-establish IKE SA, send
   IKE_INIT respond with Nr only to ipsec client, and set state to ike
   sa has been established.

   3) The gateway should support the Stub related functions like
   extract_stub, update_stub and get_stub





























Xu, et al.               Expires January 8, 2009               [Page 11]

Internet-Draft                 IKE SA SYNC                     July 2008


5.  Security Considerations

   the security framework of IKEv2 protocol will not be compromised in
   this solution.

   1) index is a light-weighted operation, and no stub, no response.

   2) The Gateway can use SAr1, KEi to verify the identity, such as ID
   property.  But it depends on the configuration of operators.

   3) Even if the index is right, ipsec client cannot rebuild IKE_SA,
   the communication can't last, after a little time, the IKE_SA in
   gateway will be deleted.






































Xu, et al.               Expires January 8, 2009               [Page 12]

Internet-Draft                 IKE SA SYNC                     July 2008


6.  Conclusion

   In this draft, a new solution is proposed to do IKE SA
   synchrinization for fast re-establishment of IKE SA.  It will remove
   the most time-consuming IKEv2 exchanges, which makes it much faster
   to transfer millions of ipsec clients from old gateway to old/new
   gateway.  And the proposal in this draft will only slightly modify
   the base IKEv2 protocol with a new logical IKE SA Stub in the
   network.










































Xu, et al.               Expires January 8, 2009               [Page 13]

Internet-Draft                 IKE SA SYNC                     July 2008


7.  Normative References

   [Narayanan06]
              Narayanan, V., "IPsec Gateway Failover and Redundancy
              Problem Statement and Goals",
              draft-vidya-ipsec-failover-ps-00.txt (work in progress),
              December  2006.

   [RFC4306]  Kaufman, C., "Internet Key Exchange (IKEv2) Protocol",
              RFC 4306, December 2005.

   [Sheffer07]
              Xie, Y., "Stateless Session Resumption for the IKE
              Protocol", draft-sheffer-ike-session-resumption-00.txt
              (work in progress), January 2007.




































Xu, et al.               Expires January 8, 2009               [Page 14]

Internet-Draft                 IKE SA SYNC                     July 2008


Authors' Addresses

   Yan Xu
   Tsinghua Univ.
   Department of Computer Science
   Tsinghua University
   Haidian District
   Beijing, 100088
   P.R. China

   Email: xydkl@163.com


   Peng Yang
   Hitachi (China) R&D Corporation
   301, North Wing, Tower C Raycom Infotech Park
   2 kexueyuan Nanlu
   Haidian District
   Beijing, 100080
   P.R. China

   Phone: +861082862918(ext.)328
   Email: pyang@hitachi.cn


   Yuanchen Ma
   Hitachi (China) R&D Corporation
   301, North Wing, Tower C Raycom Infotech Park
   2 kexueyuan Nanlu
   Haidian District
   Beijing, 100080
   P.R. China

   Phone: +861082862918(ext.)327
   Email: ycma@hitachi.cn


   Hui Deng
   China Mobile












Xu, et al.               Expires January 8, 2009               [Page 15]

Internet-Draft                 IKE SA SYNC                     July 2008


   Xu Ke
   Tsinghua University
   Department of Computer Science
   Tsinghua University
   Haidian District
   Beijing, 100088
   P.R. China

   Email: xuke@mail.tsinghua.edu.cn










































Xu, et al.               Expires January 8, 2009               [Page 16]

Internet-Draft                 IKE SA SYNC                     July 2008


Full Copyright Statement

   Copyright (C) The IETF Trust (2008).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.











Xu, et al.               Expires January 8, 2009               [Page 17]


