<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
          An alternate method (rfc include) is described in the references.
     -->
     
     <!ENTITY RFC4880 SYSTEM
     "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4880.xml">
     <!ENTITY RFC5081 SYSTEM
     "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5081.xml">
     <!ENTITY RFC4346 SYSTEM
     "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4346.xml">

     <!ENTITY RFC4366 SYSTEM
     "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4366.xml">
     <!ENTITY RFC2119 SYSTEM
     "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
     <!ENTITY RFC5280 SYSTEM
     "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
]>
     
<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<rfc obsoletes="rfc5081" category="info" ipr="full3978" docName="draft-mavrogiannopoulos-rfc5081bis-02">
   <front>
      <title abbrev="Using OpenPGP Keys">Using OpenPGP Keys for Transport Layer Security (TLS)
      Authentication</title>
      <author initials="N." surname="Mavrogiannopoulos" fullname="Nikos Mavrogiannopoulos">
         <organization>Independent</organization>
         <address>
            <postal>
               <street>Arkadias 8</street>
               <city>Halandri</city>
               <region>Attiki</region>
               <code>15234</code>
               <country>Greece</country>
            </postal>
            <email>nmav@gnutls.org</email>
            <uri>http://www.gnutls.org/</uri>
         </address>
      </author>
      <date month="August" year="2008"/>
      <area>Security</area>
<!--      <workgroup>TLS Working Group</workgroup> -->
      <keyword>OpenPGP</keyword>
      <keyword>Certificate type negotiation</keyword>
      <keyword>TLS</keyword>
      <keyword>Transport Layer Security</keyword>
      <abstract>
         <t>
	This memo proposes extensions to the Transport Layer Security (TLS) protocol to support
	the OpenPGP key format.  The extensions discussed here
	include a certificate type negotiation mechanism, and the required
	modifications to the TLS Handshake Protocol.  
         </t>
      </abstract>
   </front>

   <middle>
      <section anchor="intro" title="Introduction">
        <t>
The IETF has two sets of standards for public key certificates,
one set for use of X.509 certificates <xref target="RFC5280"/> and one for
OpenPGP certificates <xref target="RFC4880"/>. At the time of writing,
TLS <xref target="RFC4346"/> 
standards are defined to use only X.509 certificates. 
This document specifies a way to negotiate use of OpenPGP certificates for a TLS 
session, and specifies how to transport OpenPGP certificates via TLS. The 
proposed extensions are backward compatible with the current TLS 
specification, so that existing client and server implementations 
that make use of X.509 certificates are not affected.
         </t>
     </section>
         <section anchor="terms" title="Terminology">

         <t>
             The term "OpenPGP key" is used in this document as in the OpenPGP specification 
             <xref target="RFC4880"/>. We use the term "OpenPGP certificate" to refer to
             OpenPGP keys that are enabled for authentication. 
         </t>
         <t>
           This document uses the same notation and terminology used in the TLS Protocol specification
           <xref target="RFC4346"/>.
	 </t>
	 <t>
         The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
         NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
         "OPTIONAL" in this document are to be interpreted as described in
         <xref target="RFC2119"/>.
         </t>
      </section>


         <section anchor="hsmod" title="Changes to the Handshake Message Contents">
            <t>
	This section describes the changes to the TLS handshake message
	contents when OpenPGP certificates are to be used for authentication. 
            </t>

	      <section anchor="clihello" title="Client Hello">
               <t>
		   In order to indicate the support of multiple certificate types, clients MUST include an
                   extension of type "cert_type" to the extended client hello
                   message. The "cert_type" TLS extension is assigned the value of 9 from the TLS
                   ExtensionType registry. This value is used as the extension number 
                   for the extensions in both the client hello message and the server hello message. 
                   The hello extension mechanism is described in <xref target="RFC4366"/>.
              </t>

              <t>
		   This extension carries a list of supported certificate types the client can use, sorted
                   by client preference. This extension MUST be omitted if the client only supports X.509
                   certificates. The "extension_data" field of this extension contains a
                   CertificateTypeExtension structure.
            </t>
	    
	    <t>
              <figure>
               <artwork><![CDATA[
   enum { client, server } ClientOrServerExtension;

   enum { X.509(0), OpenPGP(1), (255) } CertificateType;

   struct {
      select(ClientOrServerExtension) {
         case client:
            CertificateType certificate_types<1..2^8-1>;
         case server:
            CertificateType certificate_type;
      }
   } CertificateTypeExtension;
	       ]]></artwork>
            </figure>
	    </t>
            
            <t>
                No new cipher suites are required to use OpenPGP certificates. 
                All existing cipher suites that support a compatible, with the key, key exchange method can be used in combination with OpenPGP certificates.
            </t>
    
        </section>
	      
              <section anchor="servhello" title="Server Hello">
                <t>
If the server receives a client hello that contains the "cert_type" extension and chooses a cipher suite that requires a certificate, then two outcomes are possible.  
The server MUST either select a certificate type from the certificate_types
field in the extended client hello or terminate the session with a fatal alert of type
"unsupported_certificate".
		</t>
		<t>
		   The certificate type selected by the server is encoded in a CertificateTypeExtension structure, 
		   which is included in the extended server hello message using an extension of type "cert_type". 
		   Servers that only support X.509 certificates MAY omit including the "cert_type" extension in the extended server hello. 
		</t>
		<t>
			It is perfectly legal for a server to ignore this message. In that case the normal TLS handshake should be used. Other certificate types than the default MUST NOT be used.
		</t>
              </section>
              
	      <section anchor="servcert" title="Server Certificate">
                <t>
		   The contents of the certificate message sent from server to client and vice versa are 
		   determined by the negotiated certificate type and the selected cipher suite's key exchange algorithm. 
		</t>
		<t>
		   If the OpenPGP certificate type is negotiated, then it is required to present an OpenPGP certificate in 
		   the certificate message. The certificate must contain a public key that matches the selected key exchange algorithm, as shown below.
		</t>
              <t>
	    <figure>
               <artwork>
   Key Exchange Algorithm  OpenPGP Certificate Type

   RSA                     RSA public key that can be used for
                           encryption.

   DHE_DSS                 DSS public key that can be used for
                           authentication.

   DHE_RSA                 RSA public key that can be used for
                           authentication.
	       </artwork>
	    </figure>
	       </t>
               <t>
		   An OpenPGP certificate appearing in the certificate message is sent using 
                   the binary OpenPGP format. The certificate MUST contain all the elements required by
                   Section 11.1 of <xref target="RFC4880"/>.
               </t>
               <t>
                   OpenPGP certificates to be transferred are placed in the
                   Certificate structure and tagged with the OpenPGPCertDescriptorType
                   "subkey_cert". Since those certificates might contain several subkeys
                   the subkey to be used for this session is explicitely
                   specified in the OpenPGPKeyID field, even if the
                   certificate has a single subkey. 
                   The peer once receiving this type has to either use the specified subkey
                   or terminate the session with a fatal alert of "unsupported_certificate". 
               </t>
               <t>
		   The option is also available to send an OpenPGP fingerprint, instead of sending the
                   entire certificate, by using the "subkey_cert_fingerprint" tag.
		   This tag uses the OpenPGPSubKeyFingerprint structure
		   and requires the subkey ID to be specified as well.
		   The peer shall respond with a "certificate_unobtainable" fatal alert if the certificate
                   with the given fingerprint cannot be found.  The "certificate_unobtainable" fatal alert
                   is defined in Section 4 of <xref target="RFC4366"/>.
               </t>
               <t>
                   The process of fingerprint generation is described in Section 12.2 of 
                   <xref target="RFC4880"/>. 
               </t>
               <t>
               	   The types "cert_fingerprint" and "cert" of OpenPGPCertDescriptorType
               	   that were defined in <xref target="RFC5081"/> are not
               	   used and are marked as obsolete by this document.
               </t>
               <t>
	    <figure>
               <artwork><![CDATA[
   enum {
        empty_cert (1), subkey_cert (2), subkey_cert_fingerprint (3), 
        (255)
   } OpenPGPCertDescriptorType;

   uint24 OpenPGPEmptyCert = 0;

   struct {
       opaque OpenPGPKeyID<1..8>;
       opaque OpenPGPCert<0..2^24-1>;
   } OpenPGPSubKeyCert;

   struct {
       opaque OpenPGPKeyID<1..8>;
       opaque OpenPGPCertFingerprint<16..20>;
   } OpenPGPSubKeyFingerprint;

   struct {
        OpenPGPCertDescriptorType descriptorType;
        select (descriptorType) {
             case empty_cert: OpenPGPEmptyCert;
             case subkey_cert: OpenPGPSubKeyCert;
             case subkey_cert_fingerprint: 
                 OpenPGPSubKeyCertFingerprint;
        }
   } Certificate;
	       ]]></artwork>
            </figure>
	       </t>
            </section>
              <section anchor="certreq" title="Certificate Request">
                <t>
		   The semantics of this message remain the same as in the TLS specification. 
                   However, if this message is sent, and the negotiated
                   certificate type is OpenPGP, the "certificate_authorities" list
                   MUST be empty.
               </t>
		</section>
		
              <section anchor="clicert" title="Client Certificate">
                <t>
  		   This message is only sent in response to the certificate request message.
		   The client certificate message is sent using the same formatting as
		   the server certificate message, and it is also required to present a certificate that
		   matches the negotiated certificate type. If OpenPGP certificates have been selected and no certificate is 
		   available from the client, then a certificate structure
  		   of type "empty_cert" that contains an OpenPGPEmptyCert value MUST be sent. 
		   The server SHOULD respond with a "handshake_failure" fatal alert if client authentication 
		   is required. 
		</t>
		</section>
		
		<section anchor="resthsk" title="Other Handshake Messages">
		<t>
		   All the other handshake messages are identical to the TLS specification.
		</t>
		</section>
	</section>
	

      <section anchor="security" title="Security Considerations">
          <t>
              All security considerations discussed in <xref target="RFC4346"/>, 
              <xref target="RFC4366"/>, and <xref target="RFC4880"/> apply to this document.
              Considerations about the use of the web of trust or identity
              and certificate verification
              procedure are outside the scope of this document. These are considered
              issues to be handled by the application layer protocols.
          </t>
          <t>
              The protocol for certificate type negotiation is
              identical in operation to ciphersuite negotiation of the <xref target="RFC4346"/> 
              specification with the addition of default values when the extension is 
              omitted. Since those omissions have a unique meaning and the same 
              protection is applied to the values as with ciphersuites, it is 
              believed that the security properties of this negotiation are the same 
              as with ciphersuite negotiation.
          </t>
          <t>
              When using OpenPGP fingerprints instead of the full certificates,
              the discussion in Section 6.3 of <xref target="RFC4366"/> for 
              "Client Certificate URLs" applies, especially when external servers are
              used to retrieve keys. However, a major difference is that although the "client_certificate_url"
              extension allows identifying certificates without including the certificate hashes, this
              is not possible in the protocol proposed here. 
              In this protocol, the certificates, when not sent, are always identified by their fingerprint, which 
              serves as a cryptographic hash of the certificate (see Section 12.2 of <xref target="RFC4880"/>).
          </t>
          <t>
              The information that is available to participating parties and 
              eavesdroppers (when confidentiality is not available through a previous 
              handshake) is the number and the 
              types of certificates they hold, plus the contents of certificates.
          </t>
      </section>

      <section anchor="IANA" title="IANA Considerations">
          <t>
              This document uses a registry originally defined in <xref target="RFC5081"/>
              and no new actions are required by IANA. 
          </t>
      </section>
      <section title="Acknowledgements">
        <t>
         This document was based on earlier work made by Will Price and Michael Elkins.
        </t>
      <t>
	 The author wishes to thank Werner Koch, David Taylor, Timo Schulz, Pasi Eronen, Jon Callas,
         Stephen Kent, Robert Sparks, and Hilarie Orman for their suggestions on improving this document.
      </t>
      </section>
   </middle>

   <back>
   	  <references title="Normative References">
   	  	<!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4346.xml"?-->
   	        &RFC4346;
   	  	<!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4880.xml"?-->
   	        &RFC4880;

   	  	<!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5081.xml"?-->
   	        &RFC5081;

   	  	<!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4366.xml"?-->
   	        &RFC4366;

   	  	<!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
   	        &RFC2119;
   	  </references>

   	  <references title="Informative References">
   	  	<!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml"?-->
   	        &RFC5280;
         
   	  </references>
   </back>
</rfc>


