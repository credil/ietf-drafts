<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<rfc category='info' ipr='trust200902' docName='draft-hammer-hostmeta-11'>

  <?rfc strict='yes' ?>
  <?rfc toc='yes' ?>
  <?rfc tocdepth='3' ?>
  <?rfc symrefs='yes' ?>
  <?rfc sortrefs='yes' ?>
  <?rfc compact='yes' ?>
  <?rfc subcompact='no' ?>

  <front>

    <title abbrev='host-meta'>Web Host Metadata</title>

    <author initials='E' surname='Hammer-Lahav' fullname='Eran Hammer-Lahav'>
      <organization>
        Yahoo!
      </organization>
      <address>
        <email>eran@hueniverse.com</email>
        <uri>http://hueniverse.com</uri>
      </address>
    </author>

    <date year='2010'/>

    <abstract>
      <t>
        This memo describes a method for locating host metadata as well as information about
        individual resources controlled by the host.
      </t>
    </abstract>

    <note title='Editorial Note (to be removed by RFC Editor)'>
      <t>
        Please discuss this draft on the
        <eref target='https://www.ietf.org/mailman/listinfo/apps-discuss'>apps-discuss@ietf.org</eref>
        mailing list.
      </t>
    </note>

  </front>

  <middle>
    <section title='Introduction'>
      <t>
        Web-based protocols often require the discovery of host policy or metadata, where "host" is
        not a single resource but the entity controlling the collection of resources identified by
        Uniform Resource Identifiers (URI) with a common URI host <xref target='RFC3986'/>.
      </t>
      <t>
        While web protocols have a wide range of metadata needs, they often use metadata that is
        concise, has simple syntax requirements, and can benefit from storing their metadata in a
        common location used by other related protocols.
      </t>
      <t>
        Because there is no URI or representation available to describe a host, many of the methods
        used for associating per-resource metadata (such as HTTP headers) are not available. This
        often leads to the overloading of the root HTTP resource (e.g. 'http://example.com/') with
        host metadata that is not specific or relevant to the root resource itself.
      </t>
      <t>
        This memo registers the well-known URI suffix <spanx style='verb'>host-meta</spanx> in
        the Well-Known URI Registry established by <xref target='RFC5785' />, and specifies a
        simple, general-purpose metadata document format for hosts, to be used by multiple
        web-based protocols.
      </t>
      <t>
        In addition, there are times when a host-wide scope for policy or metadata is too
        coarse-grained. host-meta provides two mechanisms for providing resource-specific
        information:

        <list style='symbols'>
          <t>
            Link Templates - links using a URI template instead of a fixed target URI, providing a
            way to define generic rules for generating resource-specific links by applying the
            individual resource URI to the template.
          </t>
          <t>
            Link-based Resource Descriptor Documents (LRDD, pronounced 'lard') - descriptor
            documents providing resource-specific information, typically information that cannot be
            expressed using link templates. LRDD documents are linked to using link templates
            with the <spanx style='verb'>lrdd</spanx> relation type.
          </t>
        </list>
      </t>

      <section title='Example'>
        <t>
          The following is a simple host-meta document including both host-wide and
          resource-specific information for the 'example.com' host:
        </t>
        <figure>
          <artwork>
            <![CDATA[
  <?xml version='1.0' encoding='UTF-8'?>
  <XRD xmlns='http://docs.oasis-open.org/ns/xri/xrd-1.0'>
        
    <!-- Host-wide Information -->
    
    <Property type='http://protocol.example.net/version'>1.0</Property>
        
    <Link rel='copyright'
     href='http://example.com/copyright' />
        
    <!-- Resource-specific Information -->
        
    <Link rel='hub'
     template='http://example.com/hub' />

    <Link rel='lrdd'
     type='application/xrd+xml'
     template='http://example.com/lrdd?uri={uri}' />
        
    <Link rel='author'
     template='http://example.com/author?q={uri}' />
     
  </XRD>
]]>
          </artwork>
        </figure>
        <t>
          The host-wide information which applies to host in its entirety provided by the document
          includes:

          <list style='symbols'>
            <t>
              A <spanx style='verb'>http://protocol.example.net/version</spanx> host property with
              a value of <spanx style='verb'>1.0</spanx>.
            </t>
            <t>
              A link to the host's copyright policy (<spanx style='verb'>copyright</spanx>).
            </t>
          </list>
        </t>
        <t>
          The resource-specific information provided by the document includes:

          <list style='symbols'>
            <t>
              A link template for receiving real-time updates (<spanx style='verb'>hub</spanx>)
              about individual resources. Since the template does not include a template variable,
              the target URI is identical for all resources.
            </t>
            <t>
              A LRDD document link template (<spanx style='verb'>lrdd</spanx>) for obtaining
              additional resource-specific information contained in a separate document for each
              individual resource.
            </t>
            <t>
              A link template for finding information about the author of individual resources
              (<spanx style='verb'>author</spanx>).
            </t>
          </list>
        </t>

        <section title='Processing Resource-Specific Information' anchor='resource_example'>
          <t>
            When looking for information about the an individual resource, for example, the resource
            identified by 'http://example.com/xy', the resource URI is applied to the
            templates found, producing the following links:
          </t>
          <figure>
            <artwork>
              <![CDATA[
  <Link rel='hub'
   href='http://example.com/hub' />
        
  <Link rel='lrdd'
   type='application/xrd+xml'
   href='http://example.com/lrdd?uri=http%3A%2F%2Fexample.com%2Fxy' />
        
  <Link rel='author'
   href='http://example.com/author?q=http%3A%2F%2Fexample.com%2Fxy' />
]]>
            </artwork>
          </figure>
          <t>
            The LRDD document for 'http://example.com/xy' is obtained using an HTTP
            <spanx style='verb'>GET</spanx> request:
          </t>
          <figure>
            <artwork>
              <![CDATA[
  <?xml version='1.0' encoding='UTF-8'?>
  <XRD xmlns='http://docs.oasis-open.org/ns/xri/xrd-1.0'>
  
    <Subject>http://example.com/xy</Subject>

    <Property type='http://spec.example.net/color'>red</Property>

    <Link rel='hub'
     href='http://example.com/another/hub' />
        
    <Link rel='author'
     href='http://example.com/john' />
  </XRD>
]]>
            </artwork>
          </figure>
          <t>
            Together, the information available about the individual resource (presented as an XRD
            document for illustration purposes) is:
          </t>
          <figure>
            <artwork>
              <![CDATA[
  <?xml version='1.0' encoding='UTF-8'?>
  <XRD xmlns='http://docs.oasis-open.org/ns/xri/xrd-1.0'>
  
    <Subject>http://example.com/xy</Subject>

    <Property type='http://spec.example.net/color'>red</Property>

    <Link rel='hub'
     href='http://example.com/hub' />

    <Link rel='hub'
     href='http://example.com/another/hub' />
        
    <Link rel='author'
     href='http://example.com/john' />
          
    <Link rel='author'
     href='http://example.com/author?q=http%3A%2F%2Fexample.com%2Fxy' />
     
  </XRD>
]]>
            </artwork>
          </figure>
          <t>
            Note that the order of links matters and is based on their original order in the
            host-meta and LRDD documents. For example, the <spanx style='verb'>hub</spanx> link
            obtained from the host-meta link template has a higher priority than the link found in
            the LRDD document because the host-meta link appears before the
            <spanx style='verb'>lrdd</spanx> link.
          </t>
          <t>
            On the other hand, the <spanx style='verb'>author</spanx> link found in the LRDD document
            has a higher priority than the link found in the host-meta document because it appears
            after the <spanx style='verb'>lrdd</spanx> link.
          </t>
        </section>
        
      </section>

      <section title='Notational Conventions'>
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
          "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in
          <xref target="RFC2119" />.
        </t>
        <t>
          This document uses the Augmented Backus-Naur Form (ABNF) notation of <xref target='RFC5234' />.
          Additionally, the following rules are included from <xref target='RFC3986' />: reserved,
          unreserved, and pct-encoded.
        </t>
      </section>

    </section>

    <section title='Obtaining host-meta Documents'>
      <t>
        The client obtains the host-meta document for a given host by making an
        HTTPS <xref target='RFC2818' /> GET request to the host's port 443 for the
        <spanx style='verb'>/.well-known/host-meta</spanx> path. If the request fails to produce a
        valid host-meta document, the client makes an HTTP <xref target='RFC2616' /> GET request
        to the host's port 80 for the <spanx style='verb'>/.well-known/host-meta</spanx> path.
      </t>
      <t>
        The server MUST support at least one but SHOULD support both ports. If both ports are
        supported, they MUST serve the same document. The client MAY attempt to obtain the host-meta
        document from either port, SHOULD attempt using port 443 first, and SHOULD attempt the
        other port if the first fails.
      </t>
      <figure>
        <preamble>
          For example, the following request is used to obtain the host-meta document for the
          'example.com' host:
        </preamble>
        <artwork>
          <![CDATA[
  GET /.well-known/host-meta HTTP/1.1
  Host: example.com
  ]]>
        </artwork>
      </figure>
      <t>
        If the server response indicates that the host-meta resource is located elsewhere (a 301,
        302, or 307 response status code), the client MUST try to obtain the resource from the
        location provided in the response. This means that the host-meta document for one host
        MAY be retrieved from another host. Likewise, if the resource is not available or does
        not exist (e.g. a 404 or 410 response status codes) at both ports, the client should infer
        that metadata is not available via this mechanism.
      </t>
    </section>

    <section title='The host-meta Document Format'>
      <t>
        The host-meta document uses the XRD 1.0 document format as defined by
        <xref target='OASIS.XRD-1.0' />, which provides a simple and extensible XML-based schema
        for describing resources. This memo defines additional processing rules needed to describe
        hosts. Documents MAY include any XRD element not explicitly excluded.
      </t>
      <t>
        The host-meta document root MUST be an <spanx style='verb'>XRD</spanx> element. The
        document SHOULD NOT include a <spanx style='verb'>Subject</spanx> element, as at this time
        no URI is available to identify hosts. The use of the <spanx style='verb'>Alias</spanx>
        element in host-meta is undefined and NOT RECOMMENDED.
      </t>
      <t>
        The subject (or "context resource" as defined by <xref target='I-D.nottingham-http-link-header' />)
        of the XRD <spanx style='verb'>Property</spanx> and <spanx style='verb'>Link</spanx>
        elements is the host described by the host-meta document. However, the subject of
        <spanx style='verb'>Link</spanx> elements with a <spanx style='verb'>template</spanx>
        attribute is the individual resource whose URI is applied to the link template as described
        in <xref target='Link element' />.
      </t>

      <section title="The 'Link' Element" anchor='Link element'>
        <t>
          The XRD <spanx style='verb'>Link</spanx> element, when used with the
          <spanx style='verb'>href</spanx> attribute, conveys a link relation between the host
          described by the document and a common target URI.
        </t>
        <figure>
          <preamble>
            For example, the following link declares a common copyright license for the entire
            scope:
          </preamble>
          <artwork>
            <![CDATA[
  <Link rel='copyright' href='http://example.com/copyright' />
]]>
          </artwork>
        </figure>
        <t>
          However, a <spanx style='verb'>Link</spanx> element with a
          <spanx style='verb'>template</spanx> attribute conveys a relation whose context is an
          individual resource within the host-meta document scope, and whose target is constructed
          by applying the context resource URI to the template. The template string MAY contain a URI
          string without any variables to represent a resource-level relation that is identical for
          every individual resource.
        </t>
        <figure>
          <preamble>
            For example, a blog with multiple authors can provide information about each article's
            author by providing an endpoint with a parameter set to the URI of each article. Each
            article has a unique author, but all share the same pattern of where that information
            is located:
          </preamble>
          <artwork>
            <![CDATA[
  <Link rel='author'
   template='http://example.com/author?article={uri}' />
  ]]>
          </artwork>
        </figure>

        <section title='Template Syntax' anchor='template_syntax'>
          <t>
            This memo defines a simple template syntax for URI transformation. A template is a
            string containing brace-enclosed ("{}") variable names marking the parts of the string
            that are to be substituted by the corresponding variable values.
          </t>
          <t>
            Before substituting template variables, any value character other than unreserved (as
            defined by <xref target='RFC3986' />) MUST be percent-encoded per
            <xref target='RFC3986' />.
          </t>
          <t>
            This memo defines a single variable - <spanx style='verb'>uri</spanx> - as the entire
            context resource URI. Protocols MAY define additional relation-specific variables and
            syntax rules, but SHOULD only do so for protocol-specific relation types, and MUST NOT
            change the meaning of the <spanx style='verb'>uri</spanx> variable. If a client is
            unable to successfully process a template (e.g. unknown variable names, unknown or
            incompatible syntax) the parent <spanx style='verb'>Link</spanx> element SHOULD be
            ignored.
          </t>
          <figure>
            <preamble>
              The template syntax ABNF:
            </preamble>
            <artwork>
              <![CDATA[
  URI-Template =  *( uri-char / variable )
  variable     =  "{" var-name "}"
  uri-char     =  ( reserved / unreserved / pct-encoded )
  var-name     =  %x75.72.69 / ( 1*var-char ) ; "uri" or other names
  var-char     =  ALPHA / DIGIT / "." / "_"
  ]]>
            </artwork>
          </figure>
          <figure>
            <preamble>
              For example:
            </preamble>
            <artwork>
              <![CDATA[
  Input:    http://example.com/r?f=1
  Template: http://example.org/?q={uri}
  Output:   http://example.org/?q=http%3A%2F%2Fexample.com%2Fr%3Ff%3D1
  ]]>
            </artwork>
          </figure>
        </section>

      </section>

    </section>

    <section title='Processing host-meta Documents'>
      <t>
        Once the host-meta document has been obtained, the client processes its content based on
        the type of information desired: host-wide or resource-specific.
      </t>
      <t>
        Clients usually look for a link with a specific relation type or other attributes. In
        such cases, the client does not need to process the entire host-meta document and all
        linked LRDD documents, but instead, process the various documents in their prescribed order
        until the desired information is found.
      </t>
      <t>
        Protocols using host-meta must indicate whether the information they seek is host-wide or
        resource-specific. For example, "obtain the first host-meta resource-specific link using
        the 'author' relation type". If both types are used for the same purpose (e.g. first look
        for resource-specific, then look for host-wide), the protocol must specify the processing
        order.
      </t>

      <section title='Host-Wide Information'>
        <t>
          When looking for host-wide information, the client MUST ignore any
          <spanx style='verb'>Link</spanx> elements with a <spanx style='verb'>template</spanx>
          attribute, as well as any link using the <spanx style='verb'>lrdd</spanx> relation type.
          All other elements are scoped as host-wide.
        </t>
      </section>

      <section title='Resource-Specific Information'>
        <t>
          Unlike host-wide information which is contained solely within the host-meta document,
          resource-specific information is obtained from host-meta link templates, as well as from
          linked LRDD documents.
        </t>
        <t>
          When looking for resource-specific information, the client constructs a resource
          descriptor by collecting and processing all the host-meta link templates. For each link
          template:

          <list style='numbers'>
            <t>
              The client applies the URI of the desired resource to the template, producing a
              resource-specific link.
            </t>
            <t>
              If the link's relation type is other than <spanx style='verb'>lrdd</spanx>, the
              client adds the link to the resource descriptor in order.
            </t>
            <t>
              If the link's relation type is <spanx style='verb'>lrdd</spanx>:

              <list style='format 3.%d'>
                <t>
                  If the link media type is other than <spanx style='verb'>application/xrd+xml</spanx>,
                  the link MUST be ignored.
                </t>
                <t>
                  If the link's media type is <spanx style='verb'>application/xrd+xml</spanx>, or
                  if the link does not specify a media type:

                  <list style='format 3.2.%d'>
                    <t>
                      The client obtains the LRDD document by following the scheme-specific rules
                      for the LRDD document URI. If the document URI scheme is
                      <spanx style='verb'>http</spanx> or <spanx style='verb'>https</spanx>, the
                      document is obtained via an HTTP <spanx style='verb'>GET</spanx> request to
                      the identified URI. If the HTTP response status code is 301, 302, or 307, the
                      client MUST follow the redirection response and repeat the request with the
                      provided location. The client MUST only process the document if it was
                      received with an HTTP 200 (OK) status code and is a valid XRD document per
                      <xref target='OASIS.XRD-1.0' />.
                    </t>
                    <t>
                      The client adds any link found in the LRDD document to the resource
                      descriptor in order, except for any link using the
                      <spanx style='verb'>lrdd</spanx> relation type. When adding links, the client
                      SHOULD retain any extension attributes and child elements if present (e.g.
                      &lt;Property&gt; or &lt;Title&gt; elements).
                    </t>
                    <t>
                      The client adds any resource properties found in the LRDD document to the
                      resource descriptor in order (e.g. &lt;Alias&gt; or &lt;Property&gt; child
                      elements of the LRDD document &lt;XRD&gt; root element).
                    </t>
                  </list>
                </t>
              </list>
            </t>
          </list>
        </t>
        <t>
          A detailed example is provided in <xref target='resource_example' />.
        </t>
      </section>

    </section>

    <section title='Security Considerations' anchor='Security'>
      <t>
        The metadata returned by the host-meta resource is presumed to be under the control of the
        appropriate authority and representative of all the resources described by it. If this
        resource is compromised or otherwise under the control of another party, it may represent a
        risk to the security of the server and data served by it, depending on what protocols use it.
      </t>
      <t>
        Protocols using host-meta templates SHOULD evaluate the construction of their templates as
        well as any protocol-specific variables or syntax to ensure that the templates cannot be
        abused by an attacker. For example, a client can be tricked into following a malicious link
        due to a poorly constructed template which produces unexpected results when its variable
        values contain unexpected characters.
      </t>
      <t>
        Protocols MAY restrict document retrieval to HTTPS based on their security needs.
        Protocols utilizing host-meta documents obtained via other methods not described in this
        memo SHOULD consider the security and authority risks associated with such methods.
      </t>
    </section>

    <section title='IANA Considerations'>

      <section title="The 'host-meta' Well-Known URI">
        <t>
          This memo registers the <spanx style='verb'>host-meta</spanx> well-known URI in the
          Well-Known URI Registry as defined by <xref target='RFC5785' />.

          <list style='hanging'>
            <t hangText='URI suffix:'>
              host-meta
            </t>
            <t hangText='Change controller:'>
              IETF
            </t>
            <t hangText='Specification document(s):'>
              [[ this document ]]
            </t>
            <t hangText='Related information:'>
              None
            </t>
          </list>
        </t>
      </section>

      <section title="The 'lrdd' Relation Type">
        <t>
          This specification registers the <spanx style='verb'>lrdd</spanx> relation type in the
          Link Relation Type Registry defined by <xref target='I-D.nottingham-http-link-header' />:

          <list style='hanging'>
            <t hangText='Relation Name:'>
              lrdd
            </t>
            <t hangText='Description:'>
              Used by the host-meta document processor to locate resource-specific information
              about individual resources. When used elsewhere (e.g. HTTP
              <spanx style='verb'>Link</spanx> header fields or HTML &lt;LINK&gt; elements), it
              operates as an include directive, identifying the location of additional links and
              other metadata. If present, the link's media type attribute MUST be set to
              <spanx style='verb'>application/xrd+xml</spanx>, and an
              <spanx style='verb'>application/xrd+xml</spanx> representation MUST be available.
              However, additional representations using other media types MAY be made available.
            </t>
            <t hangText='Reference:'>
              [[ This specification ]]
            </t>
          </list>
        </t>
      </section>

    </section>

    <appendix title='Acknowledgments'>
      <t>
        The author would like to acknowledge the contributions of everyone who
        provided feedback and use cases for this memo; in particular, Dirk Balfanz, DeWitt Clinton,
        Blaine Cook, Eve Maler, Breno de Medeiros, Brad Fitzpatrick, James Manger, Will Norris,
        Mark Nottingham, John Panzer, Drummond Reed, and Peter Saint-Andre.
      </t>
    </appendix>

    <appendix title='Document History'>
      <t>
        [[ to be removed by the RFC editor before publication as an RFC ]]
      </t>
      <t>
        -11
        
        <list style='symbols'>
          <t>
            Editorial clarifications.
          </t>
        </list>
      </t>
      <t>
        -10

        <list style='symbols'>
          <t>
            Integrated LRDD into the memo, dropping the multiple sources and using only host-meta
            for LRDD processing.
          </t>
        </list>
      </t>
      <t>
        -09

        <list style='symbols'>
          <t>
            Removed the &lt;hm:Host&gt; element due to lack of use cases (protocols with signature
            requirements can define their own way of declaring the document's subject for this
            purpose).
          </t>
          <t>
            Minor editorial changes.
          </t>
          <t>
            Changed following redirections to MUST.
          </t>
          <t>
            Updated references.
          </t>
        </list>
      </t>
      <t>
        -08

        <list style='symbols'>
          <t>
            Fixed typo.
          </t>
        </list>
      </t>
      <t>
        -07

        <list style='symbols'>
          <t>
            Minor editorial clarifications.
          </t>
          <t>
            Added XML schema for host-meta extension.
          </t>
          <t>
            Updated XRD reference to the latest draft (no normative changes).
          </t>
        </list>
      </t>
      <t>
        -06

        <list style='symbols'>
          <t>
            Updated well-known reference to RFC 5785.
          </t>
          <t>
            Minor editorial changes.
          </t>
          <t>
            Made HTTPS a higher priority (SHOULD) over HTTP.
          </t>
        </list>
      </t>
      <t>
        -05

        <list style='symbols'>
          <t>
            Adjusted syntax to the latest XRD schema.
          </t>
          <t>
            Added note about using a link template without variables.
          </t>
        </list>
      </t>
      <t>
        -04

        <list style='symbols'>
          <t>
            Corrected the &lt;hm:Host&gt; example.
          </t>
        </list>
      </t>
      <t>
        -03

        <list style='symbols'>
          <t>
            Changed scope to an entire host (per RFC 3986).
          </t>
          <t>
            Simplified template syntax to always percent-encode values and vocabulary to a single 'uri' variable.
          </t>
          <t>
            Changed document retrieval to always use HTTP(S).
          </t>
          <t>
            Added security consideration about the use of templates.
          </t>
          <t>
            Explicitly defined the root element to be 'XRD'.
          </t>
        </list>
      </t>
      <t>
        -02

        <list style='symbols'>
          <t>
            Changed Scope element syntax from attributes to URI-like string value.
          </t>
        </list>
      </t>
      <t>
        -01

        <list style='symbols'>
          <t>
            Editorial rewrite.
          </t>
          <t>
            Redefined scope as a scheme-authority pair.
          </t>
          <t>
            Added document structure section.
          </t>
        </list>
      </t>
      <t>
        -00

        <list style='symbols'>
          <t>
            Initial draft.
          </t>
        </list>
      </t>
    </appendix>

  </middle>

  <back>

    <references title='Normative References'>
      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'?>
      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.2616.xml'?>
      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.2818.xml'?>
      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml'?>
      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml'?>
      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.5785.xml'?>
      <?rfc include='http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-nottingham-http-link-header-10.xml'?>

      <reference anchor='OASIS.XRD-1.0' target='http://www.oasis-open.org/committees/download.php/37692/xrd-1.0-wd16.html'>
        <front>
          <title>Extensible Resource Descriptor (XRD) Version 1.0 (work in progress)</title>
          <author initials='E.H' surname='Hammer-Lahav' fullname='Eran'>
            <organization>Yahoo!</organization>
          </author>
          <author initials='W.N' surname='Norris' fullname='Will Norris'>
            <organization>Internet2</organization>
          </author>
        </front>
        <format type='HTML' target='http://www.oasis-open.org/committees/download.php/37692/xrd-1.0-wd16.html' />
      </reference>

    </references>

  </back>

</rfc>