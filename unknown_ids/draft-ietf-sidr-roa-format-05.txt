Secure Inter-Domain Routing (sidr)                          M. Lepinski
Internet Draft                                                  S. Kent
Expires: January 13, 2010                                       D. Kong
Intended Status: Proposed Standard                     BBN Technologies
                                                          July 13, 2009
                                      
             A Profile for Route Origin Authorizations (ROAs) 
                     draft-ietf-sidr-roa-format-05.txt 


Status of this Memo 

   This Internet-Draft is submitted to IETF in full conformance with the 
   provisions of BCP 78 and BCP 79. 

   Internet-Drafts are working documents of the Internet Engineering 
   Task Force (IETF), its areas, and its working groups.  Note that 
   other groups may also distribute working documents as Internet-
   Drafts. 

   Internet-Drafts are draft documents valid for a maximum of six months 
   and may be updated, replaced, or obsoleted by other documents at any 
   time.  It is inappropriate to use Internet-Drafts as reference 
   material or to cite them other than as "work in progress." 

   The list of current Internet-Drafts can be accessed at 
   http://www.ietf.org/ietf/1id-abstracts.txt 

   The list of Internet-Draft Shadow Directories can be accessed at 
   http://www.ietf.org/shadow.html 

   This Internet-Draft will expire on September 9, 2009. 

Copyright Notice 

   Copyright (c) 2009 IETF Trust and the persons identified as the 
   document authors.  All rights reserved. 

   This document is subject to BCP 78 and the IETF Trust's Legal 
   Provisions Relating to IETF Documents in effect on the date of 
   publication of this document (http://trustee.ietf.org/license-info). 
   Please review these documents carefully, as they describe your rights 
   and restrictions with respect to this document. 

Abstract 

   This document defines a standard profile for Route Origin 
   Authorizations (ROAs).  A ROA is a digitally signed object that 
   provides a means of verifying that an IP address block holder has 
 
 
 
Lepinski, Kent and Kong  Expires January 2010                  [Page 1] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

   authorized an Autonomous System (AS) to originate routes to that one 
   or more prefixes within the address block. 

Table of Contents 

    
   1. Introduction...................................................2 
   2. Basic Format...................................................3 
      2.1. Signed-Data Content Type..................................4 
         2.1.1. version..............................................4 
         2.1.2. digestAlgorithms.....................................4 
         2.1.3. encapContentInfo.....................................4 
            2.1.3.1. eContentType....................................4 
            2.1.3.2. eContent........................................5 
               2.1.3.2.1. version....................................5 
               2.1.3.2.2. asID.......................................5 
               2.1.3.2.3. ipAddrBlocks...............................5 
         2.1.4. certificates.........................................6 
         2.1.5. crls.................................................6 
         2.1.6. signerInfos..........................................7 
            2.1.6.1. version.........................................7 
            2.1.6.2. sid.............................................7 
            2.1.6.3. digestAlgorithm.................................7 
            2.1.6.4. signedAttrs.....................................7 
               2.1.6.4.1. ContentType Attribute......................8 
               2.1.6.4.2. MessageDigest Attribute....................8 
               2.1.6.4.3. SigningTime Attribute......................8 
               2.1.6.4.4. BinarySigningTimeAttribute.................9 
            2.1.6.5. signatureAlgorithm..............................9 
            2.1.6.6. signature.......................................9 
            2.1.6.7. unsignedAttrs..................................10 
   3. ROA Validation................................................10 
   4. Security Considerations.......................................11 
   5. IANA Considerations...........................................11 
   6. Acknowledgments...............................................12 
   7. References....................................................13 
      7.1. Normative References.....................................13 
      7.2. Informative References...................................13 
   Authors' Addresses...............................................14 
   Intellectual Property Statement..................................14 
   Disclaimer of Validity...........................................14 
   Copyright Statement..............................................14 
    
1. Introduction 

   The primary purpose of the Internet IP Address and AS Number Resource 
   Public Key Infrastructure (RPKI) system is to improve routing 
 
 
Lepinski, Kent and Kong  Expires January 2010                  [Page 2] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

   security.  As part of this system, a mechanism is needed to allow 
   entities to verify that an AS has been given permission by an IP 
   address block holder to advertise routes to one or more prefixes 
   within that block.  A ROA provides this function. 

   A ROA is a digitally signed object that makes use of Cryptographic 
   Message Syntax (CMS) [RFC3852] as a standard encapsulation format.  
   CMS was chosen to take advantage of existing open source software 
   available for processing messages in this format. 

1.1. Terminology 

   It is assumed that the reader is familiar with the terms and concepts 
   described in "Internet X.509 Public Key Infrastructure Certificate 
   and Certificate Revocation List (CRL) Profile" [RFC5280] and "X.509 
   Extensions for IP Addresses and AS Identifiers" [RFC3779]. 

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", 
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this 
   document are to be interpreted as described in RFC-2119 [RFC2119]. 

1.2. Note on Algorithms 

   Cryptographic Message Syntax is a general format capable of 
   accommodating a wide variety of signature and digest algorithms. This 
   specification takes no stand with regards to what signature and 
   digest algorithms are appropriate for use in a ROA. It is expected 
   that the certificate policy referenced in a resource certificate will 
   specify which cryptographic algorithms are allowed for signed objects 
   issued under that certificate. An example of a such a certificate 
   policy is available in [CP]. 

2. Basic Format 

   Using CMS syntax, a ROA is a type of signed-data object.  The general 
   format of a CMS object is: 

      ContentInfo ::= SEQUENCE { 
        contentType ContentType, 
        content [0] EXPLICIT ANY DEFINED BY contentType } 
    
      ContentType ::= OBJECT IDENTIFIER 
    
   As a ROA is a signed-data object, it uses the corresponding OID, 
   1.2.840.113549.1.7.2. [RFC3852] 


 
 
Lepinski, Kent and Kong  Expires January 2010                  [Page 3] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

2.1. Signed-Data Content Type 

   According to the CMS standard, the signed-data content type shall 
   have ASN.1 type SignedData: 

      SignedData ::= SEQUENCE { 
        version CMSVersion, 
        digestAlgorithms DigestAlgorithmIdentifiers, 
        encapContentInfo EncapsulatedContentInfo, 
        certificates [0] IMPLICIT CertificateSet OPTIONAL, 
        crls [1] IMPLICIT RevocationInfoChoices OPTIONAL, 
        signerInfos SignerInfos } 
    
      DigestAlgorithmIdentifiers ::= SET OF DigestAlgorithmIdentifier 
    
      SignerInfos ::= SET OF SignerInfo 
    

   Additionally, the SignerInfos set must contain only a single 
   SignerInfo object. 

2.1.1. version 

   The version is the syntax version number.  It MUST be 3, 
   corresponding to the signerInfo structure having version number 3.   

2.1.2. digestAlgorithms 

   The digestAlgorithms set MUST consist of algorithms consistent with 
   the certificate policy referenced in the resource certificate that 
   issued the ROA. 

2.1.3. encapContentInfo 

   encapContentInfo is the signed content, consisting of a content type 
   identifier and the content itself. 

      EncapsulatedContentInfo ::= SEQUENCE { 
        eContentType ContentType, 
        eContent [0] EXPLICIT OCTET STRING OPTIONAL } 
    
      ContentType ::= OBJECT IDENTIFIER 
    
2.1.3.1. eContentType 

   The ContentType for a ROA is defined as routeOriginAttestation and 
   has the numerical value of 1.2.840.113549.1.9.16.1.24. 
 
 
Lepinski, Kent and Kong  Expires January 2010                  [Page 4] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

      id-smime OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840) 
   rsadsi(113549) pkcs(1) pkcs9(9) 16 } 
    
      id-ct OBJECT INDENTIFIER ::= { id-smime 1 } 
    
      routeOriginAttestion OBJECT IDENTIFIER ::= { id-ct 24 } 
    
2.1.3.2. eContent 

   The content of a ROA identifies a single AS that has been authorized 
   by the address space holder to originate routes and a list of one or 
   more IP address prefixes that will be advertised.  If the address 
   space holder needs to authorize multiple ASes to advertise the same 
   set of address prefixes, the holder issues multiple ROAs, one per AS 
   number. A ROA is formally defined as: 

      RouteOriginAttestation ::= SEQUENCE { 
         version [0] INTEGER DEFAULT 0, 
         asID  ASID, 
         ipAddrBlocks SEQUENCE OF ROAIPAddressFamily } 
     
      ASID ::= INTEGER 
       
      ROAIPAddressFamily ::= SEQUENCE { 
         addressFamily OCTET STRING (SIZE (2..3)), 
         addresses SEQUENCE OF ROAIPAddress } 

    
      ROAIPAddress ::= SEQUENCE { 
         address IPAddress, 
         maxLength INTEGER OPTIONAL } 
    
      IPAddress ::= BIT STRING 

2.1.3.2.1. version 

   The version number of the RouteOriginAttestation MUST be 0. 

2.1.3.2.2. asID 

   The asID field contains the AS number that is authorized to originate 
   routes to the given IP address prefixes. 

2.1.3.2.3. ipAddrBlocks 

   The ipAddrBlocks field encodes the set of IP address prefixes to 
   which the AS is authorized to originate routes. Note that the syntax 
 
 
Lepinski, Kent and Kong  Expires January 2010                  [Page 5] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

   here is more restrictive than that used in the IP Address Delegation 
   extension defined in RFC 3779. That extension can represent arbitrary 
   address ranges, whereas ROAs need to represent only prefixes. 

   Within the ROAIPAddressFamily structure, addressFamily contains the 
   Address Family Identifier (AFI) of an IP address family. This 
   specification only supports IPv4 and IPv6. Therefore, addressFamily 
   MUST be either 0001 or 0002.  

   Within a ROAIPAddress structure, the addresses field represents 
   prefixes as a sequence of type IPAddress. (See [RFC3779] for more 
   details). If present, the maxLength must be an integer greater than 
   or equal to the length of the accompanying prefix and less than or 
   equal to the length (in bits) of an IP address in the address family 
   (32 for IPv4 and 128 for IPv6). When present, the maxLength specifies 
   the maximum length of IP address prefix that the AS is authorized to 
   advertise. (For example, if the IP Address prefix is 10.0/16 and the 
   maxLength is 24, the AS is authorized to advertise any more specific 
   prefix having length at most 24. That is, in this example, the AS 
   would be authorized to advertise 10.0/16, 10.0.128/20, or 
   10.0.255/24, but not 10.0.255.0/25.) When the maxLength is not 
   present, the AS is only authorized to advertise exactly the prefix 
   specified in the ROA. 

   Note that a valid ROA may contain an IP Address prefix (within a 
   ROAIPAddress element) that is encompassed by another IP Address 
   prefix (within a separate ROAIPAddress element). For example, a ROA 
   may contain the prefix 10.0/16 with maxLength 18, as well as the 
   prefix 10.0.0/24 with maxLength 24. (Such a ROA would authorize the 
   indicated AS to advertise any prefix beginning with 10.0 with length 
   at least 16 and no greater than 18, as well as the specific prefix 
   10.0.0/24.) Additionally, a ROA MAY contain two ROAIPAddress elements 
   where the IP Address prefix is identical in both cases. However, this 
   is NOT RECOMMENDED as in such a case the ROAIPAddress with the 
   shorter maxLength grants no additional privileges to the indicated AS 
   and thus can be omitted without changing the meaning of the ROA. 

2.1.4. certificates 

   The certificates field MUST be included and MUST contain only the end 
   entity certificate needed to validate this ROA.  

2.1.5. crls 

   The crls field MUST be omitted. 


 
 
Lepinski, Kent and Kong  Expires January 2010                  [Page 6] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

2.1.6. signerInfos 

   SignerInfo is defined under CMS as: 

      SignerInfo ::= SEQUENCE { 
        version CMSVersion, 
        sid SignerIdentifier, 
        digestAlgorithm DigestAlgorithmIdentifier, 
        signedAttrs [0] IMPLICIT SignedAttributes OPTIONAL, 
        signatureAlgorithm SignatureAlgorithmIdentifier, 
        signature SignatureValue, 
        unsignedAttrs [1] IMPLICIT UnsignedAttributes OPTIONAL } 
 
2.1.6.1. version 

   The version number MUST be 3, corresponding with the choice of 
   SubjectKeyIdentifier for the sid. 

2.1.6.2. sid 

   The sid is defined as: 

      SignerIdentifier ::= CHOICE { 
        issuerAndSerialNumber IssuerAndSerialNumber, 
        subjectKeyIdentifier [0] SubjectKeyIdentifier } 
    
   For a ROA, the sid MUST be a SubjectKeyIdentifier. 
    
2.1.6.3. digestAlgorithm 

   The digestAlgorithm MUST be consistent with the certificate policy 
   referenced in the resource certificate that issued the ROA. 

2.1.6.4. signedAttrs 

   The signedAttrs is defined as: 

         SignedAttributes ::= SET SIZE (1..MAX) OF Attribute 
 
         Attribute ::= SEQUENCE { 
           attrType OBJECT IDENTIFIER, 
           attrValues SET OF AttributeValue } 
    
         AttributeValue ::= ANY 
    


 
 
Lepinski, Kent and Kong  Expires January 2010                  [Page 7] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

   The signedAttr element MUST be present and MUST include the content-
   type and message-digest attributes. The signer MAY also include the 
   signing-time signed attribute, the binary-signing-time signed 
   attribute, or both signed attributes. Other signed attributes that 
   are deemed appropriate MAY also be included. The intent is to allow 
   additional signed attributes to be included if a future need is 
   identified. This does not cause an interoperability concern because 
   unrecognized signed attributes are ignored by the relying party. 

   The signedAttr MUST include only a single instance of any particular 
   attribute. Additionally, even though the syntax allows for a SET OF 
   AttributeValue, in a ROA the attrValues must consist of only a single 
   AttributeValue. 

2.1.6.4.1. ContentType Attribute 

   The ContentType attribute MUST be present. The attrType OID for the 
   ContentType attribute is 1.2.840.113549.1.9.3.  

   The attrValues for the ContentType attribute in a ROA MUST be 
   1.2.840.113549.1.9.16.1.24 (matching the eContentType in the 
   EncapsulatedContentInfo). 

2.1.6.4.2. MessageDigest Attribute 

   The MessageDigest Attribute MUST be present. The attrType OID for the 
   MessageDigest Attribute is 1.2.840.113549.1.9.4.  

   The attrValues for the MessageDigest attribute contains the output of 
   the digest algorithm applied to the content being signed, as 
   specified in Section 11.1 of RFC 3852. 

2.1.6.4.3. SigningTime Attribute 

   The SigningTime Attribute MAY be present. If it is present it MUST be 
   ignored by the relying party. The presence of absence of the 
   SigningTime attribute in no way affects the validation of the ROA (as 
   specified in Section 3). The attrType OID for the SigningTime 
   attribute is 1.2.840.113549.1.9.5. 

   The attrValues for the SigningTime attribute is defined as: 






 
 
Lepinski, Kent and Kong  Expires January 2010                  [Page 8] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

      SigningTime ::= Time 
    
      Time ::= CHOICE { 
           utcTime UTCTime, 
           generalizedTime GeneralizedTime } 
    

   The Time element specifies the time, based on the local system clock, 
   at which the digital signature was applied to the content. 

   The definition of Time matches the one specified in the 1997 version 
   of X.509. Additional information regarding the use of UTCTime and 
   GeneralizedTime can we found in [RFC3852]. 

2.1.6.4.4. BinarySigningTimeAttribute 

   The BinarySigningTime Attribute MAY be present. If it is present it 
   MUST be ignored by the relying party. The presence of absence of the 
   BinarySigningTime attribute in no way affects the validation of the 
   ROA (as specified in Section 3). The attrType OID for the SigningTime 
   attribute is 1.2.840.113549.1.9.16.2.46. 

   The attrValues for the SigningTime attribute is defined as: 

      BinarySigningTime ::= BinaryTime 
    
      BinaryTime ::= INTEGER (0..MAX) 
    

   The BinaryTime element specifies the time, based on the local system 
   clock, at which the digital signature was applied to the content. The 
   precise definition of the BinaryTime element can be found in 
   [RFC4049]. 

2.1.6.5. signatureAlgorithm 

   The signatureAlgorithm MUST be consistent with the certificate policy 
   referenced in the resource certificate that issued the ROA. 

2.1.6.6. signature 

   The signature value is defined as: 
    
      SignatureValue ::= OCTET STRING 
    
   The signature characteristics are defined by the digest and signature 
   algorithms. 
 
 
Lepinski, Kent and Kong  Expires January 2010                  [Page 9] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

2.1.6.7. unsignedAttrs 

   unsignedAttrs MUST be omitted. 

3. ROA Validation 

   Before a relying party can use a ROA to validate a routing 
   announcement, the relying party must first validate the ROA by 
   verifying that all of the following conditions hold. (Note that a 
   relying party may perform these checks in any order.) 

   1. The ROA syntax complies with this specification. In particular, 
      that each of the following is true: 

       a. The contentType of the CMS object is SignedData (OID 
          1.2.840.113549.1.7.2) 

       b. The version of the SignedData object is 3. 

       c. The certificates field in the SignedData object is present and 
          contains an EE certificate whose Subject Key Identifier (SKI) 
          matches the sid field of the SignerInfo object. 

       d. The crls field in the SignedData object is omitted. 

       e. The eContentType in the EncapsulatedContentInfo is 
          routeOriginAttestation (OID 1.2.840.113549.1.9.16.1.24) 

       f. The version of the RouteOriginAttestation is 0. 

       g. The addressFamily in the ROAIPAddressFamily is either IPv4 or 
          IPv6 (0001 and 0002, respectively). 

       h. The version of the SignerInfo is 3. 

       i. The signedAttrs field in the SignerInfo object is present and 
          contains both the ContentType attribute (OID 
          1.2.840.113549.1.9.3) and the MessageDigest attribute (OID 
          1.2.840.113549.1.9.4). 

       j. The unsignedAttrs field in the SignerInfo object is omitted.   






 
 
Lepinski, Kent and Kong  Expires January 2010                 [Page 10] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

   2. The public key of the end-entity certificate (contained within the 
      ROA) can be used to successfully verify the signature on the ROA. 
      (In particular, this means that the digestAlgorithm in the 
      SignedData and SignerInfo objects as well as the 
      signatureAlgorithm in the SignerInfo object are consistent with 
      the certificate policy referenced in the End-Entity certificate.) 

   3. The IP Address Delegation extension [RFC3779] is present in the EE 
      certificate (contained within the ROA) and each IP address 
      prefix(es) in ROA is contained within the set of IP addresses 
      specified by the EE certificate's IP address delegation extension.   

   4. The EE certificate (contained within the ROA) is a valid end-
      entity certificate in the resource PKI as specified by [RESCERT]. 
      (In particular, there exists a valid certification path from a 
      trust anchor to the EE certificate.) 

4. Security Considerations 

   There is no assumption of confidentiality for the data in a ROA; it 
   is anticipated that ROAs will be stored in repositories that are 
   accessible to all ISPs, and perhaps to all Internet users. There is 
   no explicit authentication associated with a ROA, since the PKI used 
   for ROA validation provides authorization but not authentication. 
   Although the ROA is a signed, application layer object, there is no 
   intent to convey non-repudiation via a ROA.  
    
   The purpose of a ROA is to convey authorization for an AS to 
   originate a route to the prefix(es) in the ROA. Thus the integrity of 
   a ROA must be established. The ROA makes use of the CMS signed 
   message format for integrity, and thus inherits the security 
   considerations associated with that data structure. The right of the 
   ROA signer to authorize the target AS to originate routes to the 
   prefix(es) is established through use of the address space and AS 
   number PKI described in [ARCH]. Specifically one must verify the 
   signature on the ROA using an X.509 certificate issued under this 
   PKI, and check that the prefix(es) in the ROA match those in the 
   address space extension in the certificate.  

5. IANA Considerations 

   None. 





 
 
Lepinski, Kent and Kong  Expires January 2010                 [Page 11] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

6. Acknowledgments 

   The authors wish to thank Charles Gardiner and Russ Housley for their 
   help and contributions. Additionally, the authors would like to thank 
   Danny McPherson for his thorough review and helpful comments. 










































 
 
Lepinski, Kent and Kong  Expires January 2010                 [Page 12] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

7. References 

7.1. Normative References 

   [RFC2119] Bradner, S., "Key words for use in RFCs to Indicate 
             Requirement Levels", BCP 14, RFC 2119, March 1997. 

   [RFC3852] Housley, R., "Cryptographic Message Syntax", RFC 3852, July 
             2004.    

   [RFC3779] Lynn, C., Kent, S., and Seo, K., "X.509 Extensions for IP 
             Addresses and AS Identifiers", RFC 3779, June 2004. 

    

7.2. Informative References 

   [ARCH]    Lepinski, M. and Kent, S., "An Infrastructure to Support 
             Secure Internet Routing," draft-ietf-sidr-arch-07, July 
             2009 (work in progress). 

   [CP]      Seo, K., et. al., "A Certificate Policy for the Resource 
             PKI," draft-ietf-sidr-cp-06, July 2009 (work in progress) 

   [RESCERT] Huston, G., Michaelson, G., and Loomans, R., "A Profile for 
             X.509 PKIX Resource Certificates," draft-ietf-sidr-res-
             certs-16.txt, February 2009 (work in progress). 

   [RFC4049] Housley, R., "BinaryTime: An Alternative Format for 
             Representing Time in ASN.1," RFC 4049, April 2005. 

    

    

    

    

    

    

    



 
 
Lepinski, Kent and Kong  Expires January 2010                 [Page 13] 

Internet-Draft     Route Origin Attestation Profile           July 2009 
    

Authors' Addresses 

   Matt Lepinski
   BBN Technologies
   10 Moulton Street
   Cambridge MA 02138
    
   Email: mlepinski@bbn.com
    
   Stephen Kent
   BBN Technologies
   10 Moulton Street
   Cambridge MA 02138
    
   Email: skent@bbn.com
    
   Derrick Kong
   BBN Technologies
   10 Moulton Street
   Cambridge MA 02138
       
   Email: dkong@bbn.com
    

    

 Pre-5378 Material Disclaimer 

   This document may contain material from IETF Documents or IETF 
   Contributions published or made publicly available before November 
   10, 2008. The person(s) controlling the copyright in some of this 
   material may not have granted the IETF Trust the right to allow 
   modifications of such material outside the IETF Standards Process. 
   Without obtaining an adequate license from the person(s) controlling 
   the copyright in such materials, this document may not be modified 
   outside the IETF Standards Process, and derivative works of it may 
   not be created outside the IETF Standards Process, except to format 
   it for publication as an RFC or to translate it into languages other 
   than English. 

 






 
 
Lepinski, Kent and Kong  Expires January 2010                 [Page 14] 

