<?xml version="1.0" encoding="US-ASCII"?>
<!-- comment -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes" ?>
<?rfc compact="yes" ?>
<?rfc sortrefs="no" ?>
<rfc category="info"
     docName="draft-ietf-rtcweb-use-cases-and-requirements-03.txt"
     ipr="trust200902" obsoletes="" submissionType="IETF" updates=""
     xml:lang="en">
  <front>
    <title abbrev="RTC-Web">Web Real-Time Communication Use-cases and
    Requirements</title>

    <author fullname="Christer Holmberg" initials="C.H." surname="Holmberg">
      <organization>Ericsson</organization>

      <address>
        <postal>
          <street>Hirsalantie 11</street>

          <code>02420</code>

          <city>Jorvas</city>

          <country>Finland</country>
        </postal>

        <email>christer.holmberg@ericsson.com</email>
      </address>
    </author>

    <author fullname="Stefan Hakansson" initials="S.H." surname="Hakansson">
      <organization>Ericsson</organization>

      <address>
        <postal>
          <street>Laboratoriegrand 11</street>

          <code>97128</code>

          <city>Lulea</city>

          <country>Sweden</country>
        </postal>

        <email>stefan.lk.hakansson@ericsson.com</email>
      </address>
    </author>

    <author fullname="Goran AP Eriksson" initials="G.E." surname="Eriksson">
      <organization>Ericsson</organization>

      <address>
        <postal>
          <street>Farogatan 6</street>

          <code>16480</code>

          <city>Stockholm</city>

          <country>Sweden</country>
        </postal>

        <email>goran.ap.eriksson@ericsson.com</email>
      </address>
    </author>

    <date year="2011" />

    <area>Transport</area>

    <workgroup>RTCWEB Working Group</workgroup>

    <keyword>browser</keyword>

    <keyword>websocket</keyword>

    <keyword>real-time</keyword>

    <abstract>
      <t>This document describes web based real-time communication use-cases.
      Based on the use-cases, the document also derives requirements related
      to the browser, and the API used by web applications to request and
      control media stream services provided by the browser.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction" toc="default">
      <t>This document presents a few use-case of web applications that are
      executed in a browser and use real-time communication capabilities.
      Based on the use-cases, the document derives requirements related to the
      browser and the API used by web applications in the browser.</t>

      <t>The requirements related to the browser are named "Fn" and are
      described in section <xref target="browser_reqs"></xref></t>

      <t>The requirements related to the API are named "An" and are described
      in the external document <xref target="webrtc_reqs"></xref></t>

      <t>The document focuses on requirements related to real-time media
      streams. Requirements related to privacy, signalling between the browser
      and web server etc are currently not considered.</t>
    </section>

    <section title="Conventions" toc="default">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in BCP 14, RFC 2119 <xref
      format="default" pageno="false" target="RFC2119"></xref>.</t>
    </section>

    <section title="Definitions" toc="default">
      <t>TBD</t>
    </section>

    <section title="Use-cases" toc="default">
      <section title="Introduction" toc="default">
        <t>This section describes web based real-time communication use-cases,
        from which requirements are later derived.</t>
      </section>

      <section title="Browser-to-browser use-cases" toc="default">
        <section title="Simple Video Communication Service" toc="default">
          <section title="Description" toc="default">
            <t>In the service the users have loaded, and logged into, a video
            communication web application into their browsers, provided by the
            same service provider. The web service publishes information about
            user login status, by pushing updates to the web application in
            the browsers. By selecting an online peer user, a 1-1 video
            communication session between the browsers of the peers is
            initiated. The invited user might accept or reject the
            session.</t>

            <t>When the session has been established, a self-view, as well as
            the video sent from the remote peer, are displayed. The users can
            change the sizes of the video displays during the session. The
            users can also pause sending of media (audio, video, or both), and
            mute incoming media.</t>

            <t>Any session participant can end the session at any time.</t>

            <t>The users are using communication devices of different makes,
            with different Operating Systems and Browsers from different
            vendors.</t>

            <t>One user has an unreliable internet connection. It sometimes
            has packet losses, and is sometimes goes down completely.</t>

            <t>One user is located behind a Network Address Translator
            (NAT).</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F10, F22, F25</t>

            <t>A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13</t>
          </section>
        </section>

        <section title="Simple Video Communication Service, NAT/FW that blocks UDP"
                 toc="default">
          <section title="Description" toc="default">
            <t>This use case is almost identical to the previos one. The
            difference is that one of the users is behind a NAT that blocks
            UDP traffic.</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F10, F22, F23, F25, F26</t>

            <t>A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13</t>
          </section>
        </section>

        <section title="Simple Video Communication Service, access change"
                 toc="default">
          <section title="Description" toc="default">
            <t>This use case is almost identical to "4.2.1 Simple Video
            Communication Service". The difference is that the user changes
            network access during the session:</t>

            <t>The communication device used byt one of the users have several
            network adapters (Ethernet, WiFi, Cellular). The communication
            device is access the internet using Ethernet, but the user has to
            start a trip during the session. The communication device
            automatically changes to use WiFi when the ethernet cable is
            removed and then moves to cellular access to the internet when
            moving out of WiFi coverage. The session continues even though the
            access method changes.</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F10, F22, F23, F25</t>

            <t>A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13</t>
          </section>
        </section>

        <section title="Simple Video Communication Service, QoS" toc="default">
          <section title="Description" toc="default">
            <t>This use case is almost identical to the previos one. The use
            of QoS capabilities is added:</t>

            <t>The user in the previous use case that starts a trip is behind
            a common residential router that supports prioritization of
            traffic. In addition, the user's provider of cellular access has
            QoS support enabled. The user is able to take advantage of the QoS
            support both when accessing via the residential router and when
            using cellular.</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F10, F21, F22, F23, F25</t>

            <t>A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13</t>
          </section>
        </section>

        <section title="Simple video communication service with inter-operator calling"
                 toc="default">
          <section title="Description">
            <t>Two users have logged into two different web applications,
            provided by different service providers.</t>

            <t>The service providers are interconnected by some means, but
            exchange no more information about the users than what can be
            carried using SIP.</t>

            <t>NOTE: More profiling of what this means may be needed.</t>

            <t>Each web service publishes information about user login status
            for users that have a relationship with the other user; how this
            is established is out of scope.</t>

            <t>The same functionality as in the "4.2.1 Simple Video
            Communication Service" is available.</t>

            <t>The same issues with connectivity apply.</t>
          </section>

          <section title="Derived requirements">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F10, F22, F24, F25</t>

            <t>A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13</t>
          </section>
        </section>

        <section title="Hockey Game Viewer" toc="default">
          <section title="Description" toc="default">
            <t>An ice-hockey club uses an application that enables talent
            scouts to, in real-time, show and discuss games and players with
            the club manager. The talent scouts use a mobile phone with two
            cameras, one front-facing and one rear facing.</t>

            <t>The club manager uses a desktop for viewing the game and
            discussing with the talent scout. The video stream captured by the
            front facing camera (that is capturing the game) of the mobile
            phone is shown in a big window on the desktop screen, while a
            thumbnail of the rear facing camera is overlaid.</t>

            <t>Most of the mobile phone screen is covered by a self view of
            the front facing camera. A thumbnail of the rear facing cameras
            view is overlaid.</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F10, F14</t>

            <t>A1, A2, A3, A4, A5, A7, A8, A9, A10, A11, A12, A13, A15</t>
          </section>
        </section>

        <section title="Multiparty video communication" toc="default">
          <section title="Description" toc="default">
            <t>In this use case the simple video communication service is
            extended by allowing multiparty sessions. No central server is
            involved - the browser of each participant sends and receives
            streams to and from all other session participants. The web
            application in the browser of each user is responsible for setting
            up streams to all receivers.</t>

            <t>The audio sent by each participant is a mono stream. However,
            in order to enhance intelligibility, the web application pans the
            audio from different participants differently when rendering the
            audio. This is done automatically, but users can change how the
            different participants are placed in the (virtual) room.</t>

            <t>Each video stream received is by default displayed in a
            thumbnail frame within the browser, but users can change the
            display size.</t>

            <t>Note: What this uses case adds in terms of requirements is
            capabilities to send streams to and receive streams from several
            peers concurrently, as well as the capabilities to render the
            video from all recevied streams and be able to spatialize and mix
            the audio from all received streams locally in the browser.</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F10, F11, F12, F13, F14,
            F22</t>

            <t>A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14,
            A15</t>
          </section>
        </section>

        <section title="Multiparty on-line game with voice communication"
                 toc="default">
          <section title="Description" toc="default">
            <t>In this use-case, the voice part of the multiparty video
            communication application is used in the context of an on-line
            game. The received voice audio media is rendered together with
            game sound objects. For example, the sound of a tank moving from
            left to right over the screen must be rendered and played to the
            user together with the voice media.</t>

            <t>Quick updates of the game state is required.</t>

            <t>Note: the difference regarding local audio processing compared
            to the "Multiparty video communication" use case is that other
            sound objects than the streams must be possible to be included in
            the spatialization and mixing. "Other sound objects" could for
            example a file with the sound of the tank, that file could be
            stored locally or remotely.</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F11, F12, F13, F15, F20</t>

            <t>A1, A2, A3, A4, A5, A7, A8, A9, A10, A11, A12, A13, A14, A15,
            A16</t>
          </section>
        </section>

        <section title="Distributed Music Band" toc="default">
          <section title="Description" toc="default">
            <t>In this use-case, a music band is playing music while the
            members are at different physical locations. No central server is
            used, instead all streams are set up in a mesh fashion.</t>

            <t>Discussion: This use case was briefly discussed at the Quebec
            webrtc meeting and it got support. So far the only concrete
            requirement (A17) derived is that the application must be able to
            ask the browser to treat the audio signal as audio (in contrast to
            speech). However, the use case should be further analysed to
            determine other requirements (could be e.g. on delay
            mic-&gt;speaker, level control of audio signals, etc.).</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F11, F12, F13</t>

            <t>A1, A2, A3, A4, A5, A7, A8, A9, A10, A11, A12, A13, A14, A15,
            A17</t>
          </section>
        </section>
      </section>

      <section title="Browser - GW/Server use cases" toc="default">
        <section title="Telephony terminal" toc="default">
          <section title="Description" toc="default">
            <t>A mobile telephony operator allows its customers to use a web
            browser to access their services. After a simple log in the user
            can place and receive calls in the same way as when using a normal
            mobile phone. When a call is received or placed, the identity will
            be shown in the same manner as when a mobile phone used.</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F10, F18</t>

            <t>A1, A2, A3, A4, A7, A8, A9, A10, A11, A12, A13</t>
          </section>
        </section>

        <section title="Fedex Call" toc="default">
          <section title="Description" toc="default">
            <t>Alice uses her web browser with a service something like Skype
            to be able to phone PSTN numbers. Alice calls 1-800-gofedex. Alice
            should be able to hear the initial prompts from the fedex IVR and
            when the IVR says press 1, there should be a way for Alice to
            navigate the IVR.</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F8, F9, F10, F18, F19</t>

            <t>A1, A2, A3, A4, A7, A8, A9, A10, A11, A12, A13</t>
          </section>
        </section>

        <section title="Video conferencing system with central server"
                 toc="default">
          <section title="Description" toc="default">
            <t>An organization uses a video communication system that supports
            the establishment of multiparty video sessions using a central
            conference server.</t>

            <t>The browsers of all participants send an audio stream (mono or
            stereo depending on the equipment of a participant) to the central
            server. The central server mixes the audio streams and sends
            towards the participants a mixed stereo audio stream.</t>

            <t>Each participant sends two video streams in a simulcast fashion
            towards the server, one low resolution and one high resolution. At
            each participant one high resolution video is displayed in a large
            window, while a number of low resolution videos are displayed in
            smaller windows. The server selects what video streams to be
            forwarded as main- and thumbnail videos, based on speech activity.
            As the video streams to display can change quite frequently (as
            the conversation flows) it is important that the delay from when a
            video stream is selected for display until the video can be
            displayed is short.</t>

            <t>The organization has an internal network set up with an
            aggressive firewall handling access to the internet. If users can
            not physically access the internal network, they can establish a
            Virtual Private Network (VPN).</t>

            <t>It is essential that the communication can not be
            eavesdropped.</t>

            <t>All participant are authenticated by the central server, and
            authorized to connect to the central server. The participants are
            identified to each other by the central server, and the
            participants do not have access to each others' credentials such
            as e-mail addresses or login IDs.</t>

            <t>Note: This use case adds requirements on support for fast
            stream switches F7, on encryption of media and on ability to
            traverse very restrictive FWs. It also introduces simulcast, but
            no concrete requirement is put for this.</t>
          </section>

          <section title="Derived Requirements" toc="default">
            <t>F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F14, F16, F17</t>

            <t>A1, A2, A3, A4, A5, A7, A8, A9, A10, A11, A12, A13, A15</t>
          </section>
        </section>
      </section>
    </section>

    <section title="Requirements" toc="default">
      <section title="General" toc="default">
        <t>This section contains the browser requirements, derived from the
        use-cases in section 4. For the API requirements refer to <xref
        target="webrtc_reqs"></xref>.</t>

        <t>NOTE: It is assumed that the user applications are executed on a
        browser. Whether the capabilities to implement specific browser
        requirements are implemented by the browser application, or are
        provided to the browser application by the underlying Operating System
        (OS), is outside the scope of this document.</t>
      </section>

      <section anchor="browser_reqs" title="Browser requirements"
               toc="default">
        <figure align="left" alt="" height="" suppress-title="false" title=""
                width="">
          <artwork align="left" alt="" height="" name="" type="" width=""
                   xml:space="preserve"><![CDATA[ 
						
REQ-ID  	DESCRIPTION                         
---------------------------------------------------------------
F1 		The browser MUST be able to use microphones and 
		cameras as input devices to generate streams.
----------------------------------------------------------------
F2 		The browser MUST be able to send streams to a 
		peer in presence of NATs.
----------------------------------------------------------------
F3 		Transmitted streams MUST be rate controlled.
----------------------------------------------------------------
F4 		The browser MUST be able to receive, process and
		render streams from peers. 	
----------------------------------------------------------------	
F5 		The browser MUST be able to render good quality 
		audio and video even in presence of reasonable 
		levels of jitter and packet losses.

		TBD: What is a reasonable level?
----------------------------------------------------------------
F6		The browser MUST be able to handle high loss and
		jitter levels in a graceful way.
----------------------------------------------------------------
F7		The browser MUST support fast stream switches.		
----------------------------------------------------------------
F8	 	The browser MUST detect when a stream from a 
		peer is not received any more 
----------------------------------------------------------------
F9		When there are both incoming and outgoing audio 
		streams, echo cancellation MUST be made available to 
		avoid disturbing echo during conversation. 	
		
		QUESTION: How much control should be left to the 
		web application? 
----------------------------------------------------------------
F10 		The browser MUST support synchronization of 
		audio and video.

	
		QUESTION: How much control should be left to the 
		web application?
----------------------------------------------------------------
F11		The browser MUST be able to transmit streams to 
		several peers concurrently.
----------------------------------------------------------------
F12		The browser MUST be able to receive streams from 
		multiple peers concurrently.
----------------------------------------------------------------	
F13		The browser MUST be able to pan, mix and render 
		several concurrent audio streams.
----------------------------------------------------------------
F14		The browser MUST be able to render several 
		concurrent video streams 
----------------------------------------------------------------
F15		The browser MUST be able to process and mix 
		sound objects (media that is retrieved from another 
		source than the established media stream(s) with the 
		peer(s) with audio streams). 
----------------------------------------------------------------
F16		Streams MUST be able to pass through restrictive 
		firewalls.
----------------------------------------------------------------
F17		It MUST be possible to protect streams from
		eavesdropping.
----------------------------------------------------------------
F18		The browser MUST support an audio media format 
		(codec) that is commonly supported by existing 
		telephony services.
		
		QUESTION: G.711?
----------------------------------------------------------------
F19		there should be a way to navigate
		the IVR
----------------------------------------------------------------
F20		The browser must be able to send short
		latency datagram traffic to a peer browser
----------------------------------------------------------------
F21		The browser MUST be able to take advantage of
		capabilities to prioritize voice and video
		appropriately.
----------------------------------------------------------------
F22		The browser SHOULD use encoding of streams
		suitable for the current rendering (e.g.
		video display size) and SHOULD change parameters
		if the rendering changes during the session
----------------------------------------------------------------
F23		It MUST be possible to move from one network
		interface to another one
----------------------------------------------------------------
F24		The browser MUST be able to initiate and accept a 
		media session where the data needed for establishment
		can be carried in SIP.
----------------------------------------------------------------
F25		The browser MUST support a baseline audio and
		video codec
----------------------------------------------------------------
F26		The browser MUST be able to send streams to a 
		peer in presence of NATs that block UDP traffic.
----------------------------------------------------------------
					]]></artwork>
        </figure>
      </section>
    </section>

    <section title="IANA Considerations" toc="default">
      <t>TBD</t>
    </section>

    <section anchor="sec-security" title="Security Considerations"
             toc="default">
      <section anchor="sec-security-int" title="Introduction" toc="default">
        <t>A malicious web application might use the browser to perform Denial
        Of Service (DOS) attacks on NAT infrastructure, or on peer devices.
        Also, a malicious web application might silently establish outgoing,
        and accept incoming, streams on an already established connection.</t>

        <t>Based on the identified security risks, this section will describe
        security considerations for the browser and web application.</t>
      </section>

      <section anchor="sec-security-browser" title="Browser Considerations"
               toc="default">
        <t>The browser is expected to provide mechanisms for getting user
        consent to use device resources such as camera and microphone.</t>

        <t>The browser is expected to provide mechanisms for informing the
        user that device resources such as camera and microphone are in use
        ("hot").</t>

        <t>The browser is expected to provide mechanisms for users to revise
        consent to use device resources such as camera and microphone.</t>

        <t>The browser is expected to provide mechanisms in order to assure
        that streams are the ones the recipient intended to receive.</t>

        <t>The browser is needs to ensure that media is not sent, and that
        received media is not rendered, until the associated stream
        establishment and handshake procedures with the remote peer have been
        successfully finished.</t>

        <t>The browser needs to ensure that the stream negotiation procedures
        are not seen as Denial Of Service (DOS) by other entities.</t>
      </section>

      <section anchor="sec-security-wepapp"
               title="Web Application Considerations" toc="default">
        <t>The web application is expected to ensure user consent in sending
        and receiving media streams.</t>
      </section>
    </section>

    <section title="Additional use cases">
      <t>Several additional use cases have been discusses. At this point these
      use cases are not included as requirement deriving use cases for
      different reasons (lack of documentation, overlap with existing use
      cases, lack of consensus). For completeness these additional use cases
      are listed below:<list style="numbers">
          <t>Use cases regarding different situations when being invited to a
          &ldquo;session&rdquo;, e.g. browser open, browser open but another
          tab active, browser open but active in session, browser closed,
          &hellip;. (Matthew Kaufman); discussed at webrtc meeting</t>

          <t>Different TURN provider scenarios (Cullen Jennings); discussed at
          the webrtc meeting</t>

          <t>E911 (Paul Beaumont)
          http://www.ietf.org/mail-archive/web/rtcweb/current/msg00525.html</t>

          <t>Local Recording and Remote recording (John): Discussed a _lot_ on
          the mail lists (rtcweb as well as public-webrtc late August 2011.
          Not concluded at time of writing.</t>

          <t>Emergency access for disabled (Bernard Aboba)
          http://www.ietf.org/mail-archive/web/rtcweb/current/msg00478.html</t>

          <t>Clue use cases (Roni Even)
          http://tools.ietf.org/html/draft-ietf-clue-telepresence-use-cases-01</t>

          <t>Rohan red cross (Cullen Jennings);
          http://www.ietf.org/mail-archive/web/rtcweb/current/msg00323.html</t>

          <t>Remote assistance (ala VNC or RDP) - User is helping another user
          on their computer with either view-only or view-with-control, either
          of just the browser of the the entire screen.
          http://www.ietf.org/mail-archive/web/rtcweb/current/msg00543.html</t>

          <t>Security camera/baby monitor usage
          http://www.ietf.org/mail-archive/web/rtcweb/current/msg00543.html</t>

          <t>Large multiparty session
          http://www.ietf.org/mail-archive/web/rtcweb/current/msg00530.html</t>
        </list></t>
    </section>

    <section anchor="sec-acks" title="Acknowledgements" toc="default">
      <t>Harald Alvestrand and Ted Hardie have provided comments and feedback
      on the draft.</t>

      <t>Harald Alvestrand and Cullen Jennings have provided additional
      use-cases.</t>

      <t>Thank You to everyone in the RTCWEB community that have provided
      comments, feedback and improvement proposals on the draft content.</t>
    </section>

    <section title="Change Log">
      <t>[RFC EDITOR NOTE: Please remove this section when publishing]</t>

      <t>Changes from draft-ietf-rtcweb-use-cases-and-requirements-02</t>

      <t><list style="symbols">
          <t>Removed desrciption/list of API requirements, instead</t>

          <t>Reference to W3C webrtc_reqs document for API requirements</t>
        </list></t>

      <t>Changes from draft-ietf-rtcweb-ucreqs-01</t>

      <t><list style="symbols">
          <t>Changed Intended status to Information</t>

          <t>Changed "Ipr" to "trust200902"</t>

          <t>Added use case "Simple video communication service, NAT/FW that
          blocks UDP", and derived new req F26</t>

          <t>Added use case "Distributed Music Band" and derived new req
          A17</t>

          <t>Added F24 as requirement derived from use case "Simple video
          communication service with inter-operator calling"</t>

          <t>Added section "Additional use cases"</t>

          <t>Added text about ID handling to multiparty with central server
          use case</t>

          <t>Re-phrased A1 slightly</t>
        </list></t>

      <t>Changes from draft-ietf-rtcweb-ucreqs-00</t>

      <t><list style="symbols">
          <t>- Reshuffled: Just two main groups of use cases (b2b and
          b2GW/Server); removed some specific use cases and added them instead
          as flavors to the base use case (Simple video communciation)</t>

          <t>- Changed the fromulation of F19</t>

          <t>- Removed the requirement on an API for DTMF</t>

          <t>- Removed "FX3: There SHOULD be a mapping of the minimum needed
          data for setting up connections into SIP, so that the restriction to
          SIP-carriable data can be verified. Not a rew on the browser but
          rather on a document"</t>

          <t>- (see
          http://www.ietf.org/mail-archive/web/rtcweb/current/msg00227.html
          for more details)</t>

          <t>-Added text on informing user of that mic/cam is being used and
          that it must be possible to revoce permission to use them in section
          7.</t>
        </list>Changes from draft-holmberg-rtcweb-ucreqs-01 <list
          style="symbols">
          <t>- Draft name changed to draft-ietf-rtcweb-ucreqs</t>

          <t>- Use-case grouping introduced</t>

          <t>- Additional use-cases added</t>

          <t>- Additional reqs added (derived from use cases): F19-F25,
          A16-A17</t>
        </list></t>

      <t>Changes from draft-holmberg-rtcweb-ucreqs-00 <list style="symbols">
          <t>- Mapping between use-cases and requirements added (Harald
          Alvestrand, 090311)</t>

          <t>- Additional security considerations text (Harald Alvestrand,
          090311)</t>

          <t>- Clarification that user applications are assumed to be executed
          by a browser (Ted Hardie, 080311)</t>

          <t>- Editorial corrections and clarifications</t>
        </list></t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>
    </references>

    <references title="Informative References">
      <reference anchor="webrtc_reqs">
        <front>
          <title>Webrt requirements,
          http://dev.w3.org/2011/webrtc/editor/webrtc_reqs.html</title>
        </front>

        <format octets="20000"
                target="http://dev.w3.org/2011/webrtc/editor/webrtc_reqs.html"
                type="HTML" />
      </reference>
    </references>
  </back>
</rfc>
