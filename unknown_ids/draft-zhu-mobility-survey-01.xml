<?xml version="1.0"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC '' 
     'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
]>

<!-- zzzz next line -->
<rfc category="info" ipr="trust200811" docName="draft-zhu-mobility-survey-01.txt">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc tocdepth="2"?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="no" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="yes" ?>
<!-- do not keep one blank line between list items -->

<front>
   <title abbrev="Mobility Survey">A Survey of Mobility Support In the Internet</title>
	<author initials="Z" surname="Zhu" fullname="Zhenkai Zhu">
		<organization>UCLA</organization>
		<address>
			<postal>
				<street>4805 Boelter Hall, UCLA</street>
				<city>Los Angeles</city> <region>CA</region> <code>90095</code>
				<country>US</country>
			</postal>
			<phone>+1 310 993 7128</phone>
			<email>zhenkai@cs.ucla.edu</email>
		</address>
	</author>
	<author initials="R" surname="Wakikawa" fullname="Ryuji Wakikawa">
	<organization>TOYOTA ITC</organization>
	<address>
	<postal>
		<street>465 Bernardo Avenue</street>
		<city>Mountain View</city> <region>CA</region> <code>94043</code>
		<country>US</country>
	</postal>
	<email>ryuji@jp.toyota-itc.com</email>
	</address>
	</author>
	<author initials="L" surname="Zhang" fullname="Lixia Zhang">
	<organization>UCLA</organization>
	<address>
		<postal>
		<street>3713 Boelter Hall, UCLA</street>
		<city>Los Angeles</city> <region>CA</region> <code>90095</code>
		<country>US</country>
		</postal>
		<phone>+1 310 825 2695</phone>
		<email>lixia@cs.ucla.edu</email>
	</address>
	</author>
   <date year="2009" />
   <area>Internet</area>
   <keyword>Mobility Support</keyword>

<abstract>
	<t>Over the last two decades many research efforts have been devoted to developing solutions for mobility support over the global Internet, which resulted in a variety of proposed solutions. In this draft we conducted a systematic survey of the previous efforts to gain an overall understanding on the solution space of mobility support. This draft reports our finding and identifies remaining issues in providing ubiquitous and efficient global scale mobility support.
	</t>
</abstract>
</front>


<middle>
<section title="Introduction">
   <t>This draft reports our findings from a historical survey of the Internet mobility research and standardization efforts since the early '90s.  Our survey was motivated by two factors.  First, supporting mobility over the Internet has been an active research area and has produced a variety of solutions; some of which have become the Internet standards. Yet new issues continue to arise and new solutions continue to be developed to address them, making one wonder how much more we are yet to discover about the problem space as well as the solution space.  The second motivation is the rapid growth in Internet access via mobile devices in recent years, which will inevitably lead to new Internet application development in coming years and further underscore the importance of Internet mobility support.  We believe that a historical review of all the proposed solutions so far can help us not only identify their commonalities and differences, but also shed insight on future efforts.
   </t>

   <t>In the rest of this document, we provide an overview of the mobility support solutions from the early works to the most recent proposals.  In the process we also discuss the essential components in mobility support, analyze the design space. Through sharing our understanding of the current stage of the art, we aim to initiate an open discussion about the general direction for future mobility support. 
   </t>
</section>

<section title="Terminology">
   <t>This document uses a number of terms to refer to the entities or functions that are required in mobility support. Readers are also encouraged to scan <xref target="RFC3753" /> before reading this document.
   </t>

   <t><list hangIndent="8" style="hanging">
   <t hangText="Identifier:">
   A stable piece of information that can be used to identify a mobile node. Anything could be used as an identifier as long as it remains unchanged when the mobile node roams around.</t>
   <vspace blankLines="1" />

   <t hangText="Locator:">
   The IP address that indicates the mobile node's current location. It could be the IP address of the mobile node itself, or the IP address of the network entity that is currently serving the mobile node.
</t>

   <vspace blankLines="1" />

   <t hangText="Mapping:">
   In this document, mapping specifically means the mapping between a mobile's identifier and it's Locator.
	</t>
   <vspace blankLines="1" />

   <t hangText="Rendezvous Point:">
   The place where the mapping is held. Some other functions such as data forwarding may also be placed on the rendevzvous point.</t>
   <vspace blankLines="1" />

   <t hangText="Global Mobility Management:">
   The mobility management in a global scale. It keeps the mobile's reachability during the mobile's long distance moving, either geographically or topologically.</t>
   <vspace blankLines="1" />

   <t hangText="Local Mobility Management:">
   The mobility management within a topologically local domain. It tries to keep the mobile's local movements transparent to the network entity that manages the mobile's mobility in a global scale. It also tries to improve the handoff performance.</t>
   <vspace blankLines="1" />

   <t hangText="Operator Controlled Mobility Management:">
   The mobile node does not get involved in mobility management. Instead, the network entities, which are controlled by the network operators, do all the mobility related signalling job on behalf of the mobile node.</t>
   <vspace blankLines="1" />

   <t hangText="User Controlled Mobility Management:">
   The mobile node participates in the mobility management. Typically, the mobile updates the mapping after it changes locations and refresh the mapping at a user-defined frequency.</t>
   </list></t>
</section>

<section title="Basic Components in Mobility Support Protocols">
   <t>The basic question in mobility support is how to make data reach a moving receiver (a mobile in short; here we do not distinguish between mobile nodes and mobile subnets). Whoever sending data to a mobile must be able to identity the receiver via a piece of stable information, where "stable" means that the information does not change as the mobile moves.  However if the sender's knowledge about the mobile does not change while the mobile moves, some means must exist to find the mobile's dynamically changing location by using that unchanged identifier of the mobile known to the sender. 
   </t>

   <t>The above intuitive reasoning leads to the following observation--mobility support essentially involves three basic components:</t>
	<t><list style="symbols">
		<t>a stable identifier for a mobile;</t>
		<t>a locator, which is usually an IP address; and</t>
		<t>a mapping between the two.</t>
	</list></t>

   <t>Although mobility support can be provided through multiple different
   ways, we show in the next section that different mobility support designs are merely different ways to choose mobile identifiers and different approaches to provide mapping between the identifiers and the mobiles' current IP addresses.
   </t>
</section>
	
<section title="Existing Mobility Support Protocols">
   <t>In this section, we review the existing mobility support protocols roughly in the time order, with a few exceptions where, for the sake of convenience, we grouped closely related protocols together. We briefly describe each design and point out how it implements the three basic mobility support components defined in the last section. 
   <figure anchor="timetable" title="A time table of mobility protocol development">
   <preamble><xref target="timetable"/> shows a list of mobility support protocols and the time they were first proposed.</preamble>
           <artwork><![CDATA[
        +----------------+-----+---------------+-----+
        | Protocol Name  |Year | Protocol Name |Year |
        +----------------+-----+---------------+-----+
        |    Columbia    |1991 |    TIMIP      |2001 |
        +----------------+-----+---------------+-----+
        |      Sony      |1991 |    M-SCTP     |2002 |
        +----------------+-----+---------------+-----+
        |      LSR       |1993 |     HIP       |2003 |
        +----------------+-----+---------------+-----+
        |  Mobile IP     |1996 |   Connexion   |2004 |
        +----------------+-----+---------------+-----+
        |     MSM-IP     |1997 |     ILNP      |2005 |
        +----------------+-----+---------------+-----+
        |  Cellular IP   |1998 |  Global HAHA  |2006 |
        +----------------+-----+---------------+-----+
        |      HMIP      |1998 |     PMIP      |2006 |
        +----------------+-----+---------------+-----+
        |     HAWAII     |1999 |  Mobile Me    |2007 |
        +----------------+-----+---------------+-----+
        |      NEMO      |2000 |    WINMO      |2008 |
        +----------------+-----+---------------+-----+
        |      E2E       |2000 | LISP-Mobility |2009 |
        +----------------+-----+---------------+-----+
          ]]> </artwork>
           <postamble></postamble>
       </figure>
   </t>

   <section title="Columbia Protocol">
	  <t>This protocol was originally designed to provide mobility support on a campus. A router called Mobile Support Station (MSS) is set up in each wireless cell, which serves as the default access router for all mobile nodes in that cell. A mobile node obtains an IP address from a special block of IP addresses and keeps it regardless of its current location. Each MSS keeps a list of mobile nodes that are currently in its cell.  When a correspondent node sends a packet to a mobile node, the packet is first routed to the MSS that is closest to the correspondent node. This MSS will deliver the packet directly to the mobile node if the mobile node happens to be in its cell, or otherwise sends a query message to all other MSSs on the campus to find out the current location of the mobile node. Each MSS in turn checks its tracking list of mobile nodes, and sends a reply if the target mobile node is on the list. The MSS which sends the query can now forward the packet to the MSS that serves the mobile node.
	  </t>

      <t>Here, the three basic components are:
      <list style="symbols">

		<t>Identifier: the mobile node's IP address from the special IP address block;
				
		</t>

		<t>Locator: the IP address of the serving MSS;
</t>

		<t>Mapping: the mapping between the identifier and locator is not established
		a prior, but discovered in reaction to packets through flooding.
</t>
 
		</list>
      </t>

	<figure anchor="ColumbiaApproach" title="Columbia Protocol">
    <preamble>An illustration of Columbia Approach is shown in <xref target="ColumbiaApproach"/>. </preamble>
           <artwork><![CDATA[
                    +---------+
                    |         |
            .------>|  MSS    |
            |       |         |
            |       +---------+
	    | query	
	    |		
         +--------+     query      +--------+
         |        | -------------->|        |
         |  MSS   | <------------- |  MSS   |
         |        |    reply       |        |
         +--------+ ==============>+--------+
	    /\		data	       ||
	    ||			       ||	
	    ||			       \/	
         +--------+                +---------+
         |        |                |         |
         |  CN    |                |  MN     |
         |        |                |         |
         +--------+                +---------+

	    ===>: data packets
	    --->: signaling packets
          ]]> </artwork>
           <postamble></postamble>
       </figure>
      </section>

      <section title="Sony Protocol">
	  <t>In this protocol, the IP header is modified to allow packets sent by a mobile to carry two IP addresses: a Virtual IP address and a conventional IP address. The mobile obtains its Virtual IP address from its home network, and the conventional IP address from its access router. Every time the mobile node changes its location, it sends a special packet containing the mapping between its Virtual IP address and conventional IP address to its home network, which stores the mapping. Routers in the middle as well as the correspondent hosts can also cache a set of mappings for mobile nodes.
	  </t>

	  <t>To deliver data to a mobile, the correspondent node uses the mobile's Virtual IP address as the destination IP address. If a router along the way from the correspondent node to the mobile's home network happens to have a mapping for mobile, it modifies the destination IP address field and forwards the packets to the mobile's current location; otherwise, the packet will flow to the mobile's home network, which then chnages the packet's destination address to the mobile's current location according to the mapping and delivers the packets to the mobile. Note that the destination IP address field can be modified again if the packet encounters a router with more recent mapping.</t>

	  <t>The three basic components are easy to identify:

		<list style="symbols">

			<t>Identifier: the mobile node's Virtual IP address;
</t>

			<t>Locator: the mobile node's conventional IP address;
</t>

			<t>Mapping: the binding between the mobile's Virtual IP address and
			conventional IP address, which is sent by the mobile to its home network and may also be cached in routers and correspondent host.
</t>

		</list>
	</t>

 	 <figure anchor="SonyApproach" title="Sony Protocol">
     <preamble><xref target="SonyApproach"/> shows how sony protocol works.</preamble>
           <artwork><![CDATA[
                                    ,---.       +-------+
                                   /     \      |  CN   |
                                  ( Router)<====|       |
      +---------+                //\     /      |       |
      |         |               //  `---'       +-------+
      |         |     ,---.    //
      |         |    /     \  //
      | Home    |<--- Router)//
      | Network |    \     / \\
      |         |     `---'\  \\
      |         |           \  \\,---.         +-------+
      |         |            \  /     \=======>|       |
      |         |             \( Router)<------+  MN   |
      |         |               \     /        |       |
      |         |                `---'         +-------+
      +---------+

		===>: data packets
		--->: location update message
          ]]> </artwork>
           <postamble></postamble>
       </figure>
      </section>


      <section title="LSR Protocol">
	  <t>In LSR each mobile has a designated router, called Mobile Router, that manages its mobility. Mobile Router assigns an IP address for each mobile it manages and announce reachability to those IP addresses. Another network entity required is Mobile Access Station (MAS) which connects to the mobile at its current location. The mobile node always reports the current serving MAS to its Mobile Router.    
	</t>


	  <t>If the correspondent node and the mobile node are attached to the same MAS,
	  then the MAS simply forwards packets between the two; otherwise, the packet sent by the correspondent node is routed to the Mobile Router who assinged the IP address to the mobile. The Mobile Router looks up the mappings to find the serving MAS of the mobile node, and inserts the loose source routing (LSR) option into the IP header of the packet with the IP address of the MAS on it. This way, the packet is redirect to the MAS which then delivers the packet to the mobile. After that, the mobile node reverses the LSR and replies to the correspondent node; the correspondent node, similarly, sends the subsequent packets directly through MAS (i.e. without going through the Mobile Router) by reversing the LSR.	</t>

 
	  <t>Let's identify the three basic components for this protocol:

		<list style="symbols">

		<t>Identifier: the mobile's IP address assigned by its Mobile Router;
</t>

		<t>Locator: the IP address of the serving MAS;
			</t>

		<t>Mapping: the mapping between the above two kept at the Mobile Router.</t>

		</list>
	</t>

	<figure anchor="LSRPic" title="LSR Protocol">
	<preamble> <xref target="LSRPic"/> shows the basic operation of LSR protocol. </preamble>
           <artwork><![CDATA[
                                   +---------+
                                   |         |
                ___________________|  CN     |
               |                   |         |
               |                   +---------+
               V                      /\
          +-------+                   ||
          |Mobile |                   ||
          |Router |                   ||
          |       |                   || Reversing LSR
          +---+---+                   ||
              |                       \/
              |                    +---------+      +----------+
              |  LSR Inserted      |         |<====>|          |
              +------------------->|  MAS    |      |  MN      |
                                   |         |----->|          |
                                   +---------+      +----------+

                     -->: first data packet
                     ==>: following data packets

          ]]> </artwork>
           <postamble></postamble>
       </figure>
	</section>

	 <section title="Mobile IP">
	 <t>IETF begun standard development in mobility support soon after the above three protocols. The first version of Mobile IP standard was developed in 1996. Later, IETF further made Mobile IPv4 <xref target="RFC3220" /> and Mobile IPv6 <xref target="RFC3775" /> standards in 2002 and 2004, respectively. 
	 </t>

     <t>Let's look at Mobile IPv6 first. Each mobile node has a Home Agent, from which it acquires its Home Address (HoA). Unlike LSP Protocol, the mobile node also obtains a Care-of Address (CoA) from its current access router. Whenever the mobile node changes its point of attachment and gets a new CoA, it sends a Binding Update message to notify the Home Agent about the new CoA. Conceptually Mobile IPv6 design looks similar to Sony Protocol, with the mobile's HoS corresponding to the Virtual Address in Sony, and the CoA corresponding to the Conventional IP address.
     </t>


    <t>The correspondent node uses the mobile's HoA as the destination IP address
	 when sending to a mobile.  The packets are forwarded to the Home Agent since Home Agent is announcing the reachability to the HoA. Home Agent then encapsulates the packets to mobile node's CoA according to the mapping. If the correspondent node supports Route Optimization, it will also keep the mapping between the mobile's HoA and CoA; the mobile will also update the correspondent node when it changes the CoA. Thus the correspondent node can encapsulate packets to the mobile directly, without going through the Home Agent.
	</t>


	 <t>The three basic components in Mobile IP are:
     <list style="symbols">
	 <t>Identifier: the mobile node's HoA;
			</t>

	 <t>Locator: the mobile node's CoA;
			</t>

	 <t>Mapping: the binding between HoA and CoA. Home Agent always holds the
			mapping; correspondent nodes may also store the mappings if they support Route Optimization.
</t>
	 </list>
	</t>


	 <figure anchor="mobileip" title="Mobile IPv6 without Route Optimization">
	 <preamble> <xref target="mobileip"/> illustrates the data path of Mobile IPv6 without Route Optimization. </preamble>
           <artwork><![CDATA[

                           +---+-----+
			   |HoA|DATA |
                           +---+-----+           +-------+
                          +----------------------| CN    |
                          | +------------------->|       |
                          | |                    +-------+
                          | |
                          V |
                       +--------+
                       | Home   |  Mapping: HoA <=> CoA
                       | Agent  |
                       |        |
                       +--------+
                         ||  /\
                         ||  ||                   +-------+
                         ||  +====================|       |
                         ||                       | MN    |
                         +=======================>|       |
                           +-----+---+---+        +-------+
                           |DATA |HoA|CoA|
			   +-----+---+---+


                                   ==>: Tunnel
                                   -->: regular IP
          ]]> </artwork>
           <postamble></postamble>
       </figure>
      </section>


	<section title="MSM-IP"> 
	<t>MSM-IP stands for Mobility Support using Multicast in IP. As one can see from its name, MSM-IP leverages IP multicast routing for mobility support. In IP multicast, a host can join a group regardless of to which network it attaches and receive packets sent to the group after its join.  Thus mobility is naturally supported if IP multicast is universally deployed. Note that MSM-IP does not address the issue of feasibility of supporting mobility through IP multicast, but rather it simply shows the possibility of using IP multicast to provide mobility support, once/if IP multicast is universally deployed.
	</t>

	<t>MSM-IP <xref target="MSM-IP" /> assigns each mobile node a unique multicast IP address. When the mobile node moves into a new network, it initiates a join to its own address, which makes the multicast router in that subnet join the multicast distribution tree. Whoever wants to communicate with the mobile node can just send the data to the mobile's multicast IP address.
	</t>


	<t>In order to make this approach deployable in wide-area networks, a hierarchical
 	location management service is also proposed. In the location server for each mobile node, the IP address of the multicast router that serves mobile node is stored. Thus, a new multicast router can always query the location server to find out how to join the multicast distribution tree. </t>


	<t>
Also note that, due to the nature of multicast routing, the mobile node
	can have the new multicast router join the group to cache packets in advance before it detaches the old one, resulting in smoother handoff. 
	</t>
	<t>The three basic components here are:
		<list style="symbols">
			<t>Identifier: the mobile node's multicast IP address;
			</t>
			<t>Locator: the IP address of the multicast router that is currently serving the mobile node;
			</t>

			<t>Mapping: the mapping between the above two; this mapping is stored in location server.
			</t>

		</list>
	</t>

      </section>

  

<section title="Cellular IP, HAWAII and TIMIP">
	<t>This is a group of protocols that share the common idea of setting up host route for each mobile in the local domain. They are all intended to work with Mobile IP as a local mobility management protocol. By describing them together we can more easily to show the differences by comparison.
	</t>


	<t>Cellular IP <xref target="CIP" /> handles the local mobility in a network
	consists of Cellular IP gateways, which are essentially special routers that integrate location tracking service with routing. A mobile reports the local gateway node's IP address as the regional CoA to its Home Agent, and retains its locally assigned IP address when it roams within the Cellular IP network. The network monitors the packets originated from mobile node and maintains a distributed, hop-by-hop reverse path which can be used to route packets back to the mobile node. It utilizes paging technique from cellular network to track the location of each mobile by sending dummy packets with a relatively low frequency to allow mobile nodes to update their location information.  When a packet from correspondent node arrives at the gateway, the gateway initiates a controlled flooding query if it does not know the exact location of the mobile.  Once the communication between the mobile and correspondent nodes starts going, a much more precise reverse path can be maintained.
	</t>
    <!-- exactly how it works?? -->

	<t>Similarly, HAWAII <xref target="HAWAII" /> also aims to provide efficient local mobility support but with two main differences from Cellular IP. First, HAWAII uses path setup update messages to establish and update host-based routing entries for the mobile nodes in selective routers within the domain, so that packets arriving at the domain border router can reach the mobile host with limited disruption. Second, unlike the controlled floodingin CIP, it uses IP multicast to page idle mobile nodes when they have incoming packets arrived at the border router and there are no routing entries available for these addresses.
	</t>

	<t>TIMIP <xref target="TIMIP" />, which stands for Terminal Independent Mobile IP, integrated together the design of Cellular IP and HAWAII. On one hand, it refreshes the routing paths with dummy packets if there is no traffic for the mobile node. On the other hand, handoff within a domain results in the changes of routing tables in the routers. Besides, the IP layer is coupled with layer 2 handoff mechanisms and special nodes can work as Mobile IP proxies for legacy nodes that do not support Mobile IP. Thus, as long as it roams within the domain, a legacy node has the same degree of mobility support as a Mobile IP capable node. 
	</t>


	<t>Given the similarity of the three protocols, the implementation of the three
	basic components in them are listed as below:

	<list style="symbols">
		<t>Identifier: the mobile node's IP address that are unchanged when it roams within the domain;
			</t>

		<t>Locator: the network node that gives network access to the mobile node;</t>
		<t>Mapping: no explicit mapping; host-based entries in local routers instead tracks the mobiles' locations.
			</t>
	</list>
	</t>
    </section>

 
     <section title="Hierarchical Mobile IP (HMIP)"> 
	<t>HMIP <xref target="RFC4140" /> is a simple extension to Mobile IP. It aims to improves the performance of MIP by handling mobility within a local region locally.  A level of hierarchy is added to Mobile IP in the following way. A Mobility Anchor Point (MAP) is responsible for handling the movement of a mobile in a local region. Simply speaking, MAP is the local Home Agent for the mobile node. The mobile node, if it supports HMIP, obtains a Regional CoA and registers it with its Home Agent as its current CoA; at the same time, the mobile also obtains a Local CoA from the subnet it attaches to. When roaming with the region, a mobile only updates the MAP with the mapping between its Regional CoA and Local CoA.  In this way, the handoff performance is usually better due to the shorter round-trip time between the mobile and the MAP as compared to the delay between the mobile and its HA. It also reduced the overhead of Mobile IP by reducing the frequency of sending updates to Home Agents.</t>

	<t>The basic components here are:

	<list style="symbols">

		<t>Identifier: the mobile node's HoA;
</t>

		<t>Locator: the mobile node's Local CoA;</t>

		<t>Mapping: the mapping between HoA and Local CoA, stored in MAP.
</t>

	</list>
	</t>

   </section>



    <section title="NEMO"> 
	<t>It is concervable to have a group of hosts moving together. Consider vehicles such as ships, trains, or airplanes which may host a network with multiple hosts attached to.  Because Mobile IP handles mobility per host, it is not efficient when handling such mobility scenarios.  NEMO <xref target="RFC3963"/>, as a backward compatible extension to Mobile IP, was introduced in 2000 to provide efficient support for network mobility. 
	</t>

	<t>NEMO introduces a new entity call Mobile Router (note that this is different from the "Mobile Router" in LSR protocol).  Every mobile network has at least one Mobile Router via which it can be reached.  Mobile Router is similar to a mobile node in original Mobile IP, but with additional functions. After establishing bidirectional tunnel with Home Agent, the Mobile Router will distribute its mobile network's pefixes (namely Mobile Prefixes) through the tunnel to Home Agent.  The Mobile Prefix of a mobile network is not leaked to its point of attachment (i.e. the access router never knows that it can reach the Mobile Prefixes via the Mobile Router).  The Home Agent in turn announces the reachability to the Mobile Prefix. Packets to and from mobile network flow through the bidirectional tunnel to their destinations.  Note that mobility is transparent to the nodes in the moving network.</t>


	<t>Hence, in this protocol, the basic components are:

		<list style="symbols">

			<t>Identifier: the Mobile Prefixes;
			</t>

			<t>Locator: the CoA of the Mobile Router;
			</t>

			<t>Mapping: the mapping between two, stored in the Home Agent.</t>

		</list>
	</t>

   </section>


    <section title="E2E and M-SCTP"> 
	<t>E2E (End-to-End communication) <xref target="E2E" />  gets the name from its end-to-end architecture, and is the first proposal that utilizes existing DNS service to track mobile node's current location. A mobile uses Dynamic DNS update to save its current IP address in DNS servers. To keep the ongoing TCP connection unaffected by mobility, a TCP Migrate option is introduced to allow both ends to replace the IP addresses and ports in TCP 4-tuple on the fly. Migration security is protected based on token and sequence number.
	</t>
    <!-- what token?? -->



	<t>Inspired by E2E, M-SCTP <xref target="M-SCTP" /> was proposed in 2002.
 	Similarly, it uses Dynamic DNS to track the mobile nodes and allows both ends to add/delete IP addresses used in SCTP associations during the move.
	</t>

	<t>The three components hence are:

		<list style="symbols">

			<t>Identifier: the domain name of the mobile node;
			</t>

			<t>Locator: the current IP address of the mobile node;
			</t>

			<t>Mapping: the DNS records kept in the Dynamic DNS server.
</t>

		</list>
	</t>

    </section>


   <section title="Host Identity Protocol"> 
	<t>Host Identify Protocol (HIP) <xref target="RFC5201" /> assigns to each host an identifier made of cryptographic keys, and adds a new Host Identity layer between transport and network layers.  Host Identities, which are essentially public keys, are used to identify the mobile nodes, and IP addresses are used only for routing purpose. For the convenience of reusing existing code, Host Identity Tag (HIT), a 128-bit hash value of the Host Identity, is used in transport and other upper layer protocols.

	</t>

	<t>HIP uses DNS as the rendezvous point which holds the mappings between host identifiers and IP addresses.  In addition, HIP also defined its own static infrastructure Rendezvous Servers, in expectation of better rendezvous service. Each mobile node has a designated Rendezvous Server (RVS), which tracks the current location of mobile node. When a correspondent node wants to communicate with mobile node, it queries DNS with mobile node's HIT to obtain the IP address of mobile node's RVS, and sends out the first packet (I1) of Base Exchange; Base Exchange is a four-packet handshake process for the purpose of establishing an IPSec Encapsulated Security Payload and Security Association pair. After receiving this first packet, RVS relays it to mobile node. Then mobile node and correspondent node can finish Base Exchange and start communication directly. If mobile node moves to a new address, it notifies correspondent node by sending HIP UPDATE with LOCATOR parameter indicating its new IP address.
	</t>
    <!-- doesn't the mobile need to notify RVA or DSN servers as well?? -->

	<t>The basic components here are:

		<list style="symbols">

			<t>Identifier: Host Identity or Host Identity tag of a mobile node;
</t>

			<t>Locator: the current IP address of the mobile node;
</t>

			<t>Mapping: the mapping between the two, either kept in Dynamic DNS server
			or in Rendezvous Server.
</t>

		</list>
	</t>

      </section>


    <section title="Connexion and WINMO">
	<t>Connexion <xref target="Boeing" /> was a mobility support service provided by Boeing that uses BGP to support network mobility. Every mobile network is assigned a /24 IP address prefix. When an airplane moves between its access points to Internet, it withdraws its prefix from the previously connected access point and  announces the prefix via the new access point.  As a result, the location change of the plane is effectively propagated to the rest of the world. However, if the number of moving networks becomes large, the amount of BGP updates will also increase propertionally, resulting in severe global routing dynamics.
	</t>

	<t>WINMO <xref target="WINMO" /> (which stands for Wide-Area IP Network Mobility) was introduced in 2008 to address the routing update overhead problem of Connexion.  Like Connexion, WINMO also assigns each mobile network a stable prefix. However, through two new approaches WINMO can reduce the BGP updates overhead for mobile networks by orders of magnitude lower than that of Connexion. First, WINMO uses various heuristics to reduce the propagation scope of routing updates caused by mobile movements. Consequently, not every router may know all the mobiles' current locations. Handling this issue led to the second, and more fundamental approach taken by WINMO: it adopts the basic idea from Mobile IP by assigning each mobile network a "home" in the following way. WINMO assigns each mobile network a prefix out of a small set of well defined Mobile Prefixes. These Mobile Prefixes are announced by a small set of Aggregation Routers which also keep track of the mobile networks current locations.  Therefore these Aggregation Routers play a similar role to Home Agents in Mobile IP, and can be counted on as last resort to reach mobile networks globally.
</t>


	<t>To prevent frequent iBGP routing updates due to the movement of mobile networks
	within an AS, WINMO also introduces a Home Agent for the Mobile Prefixes within an AS: only a designated BGP speaking router (DBR) acts as the origin of Mobile Prefixes; mobile networks always update their addresses of attachment points with DBR, which resembles the binding updates in Mobile IP.  Thus, packets destined to mobile networks are forwarded to DBR after they enter the border of an AS, and DBR will tunnel them to the current location of mobile networks.  A new BGP community attribute, named Packet State, is also defined to eliminate the triangle routing problem caused by DBR by informing the correspondent node of the mobile's CoA, an approach similar to Route Optimization in Mobile IP. 
	</t>


	<t>The basic components in Connexion are:

	<list style="symbols">
		<t>Identifier: the prefix of a moving network that does not change during movement;</t>

		<t>Locator: the current router that the mobile network connects to;</t>

		<t>Mapping: the mapping between the above two is implemented as BGP updates to
		track the location of the mobile network.
			</t>
	</list>
	</t>


	<t>The basic components in WINMO are:
	<list style="symbols">
		<t>Identifier: the Mobile Prefix  of a moving network;
			</t>

		<t>Locator: the point of attachment to the Internet;
			</t>
		<t>Mapping: mapping between the two, kept in Aggregation Routers and DBR.
			</t>
	</list>
	</t>
    </section>

    <section title="ILNP"> 
	<t>ILNP <xref target="ILNP" /> stands for Identifier/Locator Network Protocol. It splits IPv6 address into two parts: high-order 64 bits as a Locator field and low-order 64 bits as an Identifier field.  Locator is used for IP packet delivery, while Identifier identifies a host and is used by all upper layer protocols, same as HIT in HIP. During the movement, a mobile uses Dynamic DNS Update to update the binding between Locator and Identifier; it also sends the updated Locator to correspondent nodes using a new ICMP Locator Update message.
	</t>


	<t>The basic components in ILNP are clear:
	<list style="symbols">
		<t>Identifier: the low-order 64 bits of the mobile's IPv6 address;
</t>
		<t>Locator: the high-order 64 bits of the mobile's IPv6 address;</t>
		<t>Mapping: the mapping between the two, kept in Dynamic DNS server and correspondent node.
			</t>
	</list>
	</t>

    </section>

 
    <section title="Global HAHA">
	<t>Global HAHA <xref target="HAHA" />, first proposed in 2006, aims to eliminate the triangle routing problem in Mobile IP and NEMO by distributing multiple Home Agents globally. All the Home Agents join an IP anycast group and form an overlay network. The same home prefix is announced by all the Home Agents from different locations. Each mobile node can register with any Home Agent that is closest to it. A Home Agent H that accepts the binding request of a mobile node M becomes the primary Home Agent for M, and notifies all other Home Agents of the binding [M, H], so that the binding information databases for all the mobiles in all Home Agents are always synchronized.  When a mobile moves, it may switch its primary Home Agent to another one that becomes closest to the mobile.
	</t>

	<t>A correspondent node sends packets to a mobile's Home Address.  Because of anycast routing, the packets are delivered to the nearest Home Agent. This Home Agent then encapsulates the packets to the IP address of the primary Home Agent that is currently serving the mobile node, which will finally deliver the packets to mobile node after striping off the encapsulation headers. In the reverse direction, this approach works exactly the same as Mobile IP.  If the Home Agents are distributed widely, the triangle routing problem is naturally avoided without Route Optimization.
	</t>

	<t>Thus, the basic components in Global HAHA are:
	<list style="symbols">
		<t>Identifier: the HoA of the mobile node;
			</t>
		<t>Locator: the CoA of the mobile node (in the primary Home Agent); the IP address of primary Home Agent (in other Home Agents).
			</t>
		<t>Mapping: the mapping between the two.
			</t>
	</list>
	</t>

	<figure anchor="HAHAflow" >
	 <preamble>The data flow in Global HAHA is shown in <xref target="HAHAflow"/>. </preamble>
           <artwork><![CDATA[
              +------+             +------+     +-----+
              | HA   |_____________|  HA  |     |     |
              |      |             |      |     |  CN |
              +--+---+           .'+++----+     +-----+
                 |             .'   ||             /\
                 |           .'     ||             ||
                 |        .-'       ||             ||
                 |      .'          ||             ||
              +--+---+.'            ||             ||
              |      |<==============+             ||
              | HA   |==============================+
              +-++---+
                || /\
                \/ ||
               +---++-+           ===>: data flow
               |      |           ----: HA overlay network
               | MN   |
               +------+
          ]]> </artwork>
           <postamble></postamble>
       </figure>
      </section>

    <section title ="Proxy Mobile IP"> 
	<t>Proxy Mobile IP  <xref target="RFC5213" /> was proposed in 2006, largely to meet the interest of mobile network operators who desire to have tighter control on mobility support.  PMIP introduces two new types of network nodes, Local Mobility Anchor (LMA) and Mobile Access Gateway (MAG), which together can support mobility within an operator's network without any action taken by the mobile node. LMA serves as a local Home Agent and assigns a local Home Network Prefix for each mobile node.  MAGs monitor the attaching and leaving events of mobile node, and generates Proxy Binding Update to LMA on behalf of mobile node during handoff. After the success of binding, LMA updates mobile node's Proxy-CoA with the IP address of the MAG that is currently serving mobile node. The MAG then emulates mobile node's local Home Link by advertising mobile node's local Home Network Prefix in Router Advertisement. When roaming in the PMIP domain, mobile node always obtains its local Home Prefix, and believes that its on local Home Link.
	</t>

	<t>Here, the basic components are:
	<list style="symbols">

		<t>Identifier: the Home Network Prefix of a mobile node;
			</t>
		<t>Locator: the Proxy-CoA, which is the IP address of the current MAG;
			</t>
		<t>Mapping: the mapping between the two kept in LMA.
			</t>
	</list>
	</t>

    </section>


    <section title="Mobile Me"> 
	<t>Mobile Me <xref target="BTMM" /> is a pragmatic approach to mobility support and has been deployed since 2007 with Mac OS leopard release. Each user gets a MobileMe account, and Apple Inc. provides DNS service for all Mobile Me users.  A mobile uses secure DNS update to dynamically refresh its current location.  MobileMe assigns each host a special IPv6 address as the host identifier, which is stored in the DNS database as an AAAA RR. The host's current IP address is stored in a SRV <xref target="RFC2782" /> resource record, together with a transport port number needed for NAT traversal. Every node establishes long-lived query (llq) session with the DNS server, so that the DNS server can automatically notify each node when the answer to its previous query has changed. This approach avoids the need for frequent queries to get up-to-date location of mobile nodes.  A host uses its identifier (the IPv6 address) in transport protocols and applications, and uses UDP/IPv4 encapsulation to deliver data packets based on the SRV RR from DNS reply.  Note that the IPv6 address is only for identification purpose. In fact, it could be any form of identifier (e.g. HIT in HIP, domain name, etc.); MobileMe chose to IPv6 address so that its implementation can reuse existing code.
	</t>

	<t>Mobile ME has millions of subscribers, which is perhaps the first large-scale commercial host mobility support in Internet as of today. It is simple and easy to deploy.  However, the current applications use MobileMe service in a "stop-and-reconnect" fashsion.  It remains to be seen how well MobileMe can support continuous communications while hosts are on the move, for example as needed for voice calls.
	</t>

	<t>We can also list the basic components for Mobile Me:
	<list style="symbols">
		<t>Identifier: the IPv6 address of a mobile node;
			</t>
		<t>Locator: the IPv4 address (and port in the case of NAT) of a mobile node;</t>
		<t>Mapping: the mapping between them, kept in Dynamic DNS server.
			</t>
	</list>
	</t>
   
<figure anchor="Mobileme" >
    <preamble><xref target="Mobileme"/> shows an example communication scenario of Mobile Me. </preamble>
           <artwork><![CDATA[
                      +----------+      dynamic DNS update
              llq     |          |<------------------+
            +-------->|  DNS     |                   |
            |         |          | <------------+    |
            |         +----------+       llq    |    |
            |                                   |    |
            |                                   |    |
            V                                   V    |
        +-------+                 ,---.        +-----+-+
        |       |  UDP/IPv4      /     \       |       |
        | Mac1  |<=============>(  NAT  )<---->|  Mac2 |
        |       |    tunnel      \     /       |       |
        +-------+                 `---'        +-------+
          ]]> </artwork>
           <postamble></postamble>
       </figure>
    </section>


	<section title = "LISP-Mobility">

	<t>LISP-Mobility <xref target="LISP-Mobility"/> is a relatively new design, in which the
 	designer hopes to utilize LISP<xref target="LISP"/>, which is designed for routing scalability, to support mobility as well.  Conceptually, LISP may seem similar to some protocols we have mentioned so far, such as ILNP and Mobile IP. Light-weight Ingress Tunnel Router and Egress Tunnel Router are implemented on each mobile node, encapsulating/decapsulating the packets to and from the mobile node. Each mobile node is assigned a static Endpoint ID, which is used in upper layer protocols, as well as a pre-configed Map-Server.  <!-- I do not understand what you meant here -->
    When a mobile node roams into a network and obtains a new Routing Locator, it updates its Routing Locator set in the Map-Server and also in the Ingress Tunnel Routers or Proxy Tunnel Routers of the correspondent nodes.  Thus the correspondent node can always learn the location of the mobile node via the resolution of its Endpoint ID, and the data would always travel through the shortest path. Note that both Endpoint IDs and Routing Locators are essentially IP addresses.
	</t>


	<t>It is trivial to list the basic components in this protocol:
	<list style="symbols">
		<t>Identifier: the Endpoint ID of the mobile node;
			</t>
			<t>Locator: the Routing Locator the mobile node;
			</t>
			<t>Mapping: the mapping between them, kept in Map-Server or the Ingress Tunnel Router of the Correspondent.
			</t>
	</list>
	</t>
   </section>

  </section>

<section title = "Different Directions towards Mobility Support">
   <t>After studying various existing protocols, we identified several different directions for mobility support.</t>

   <section title = "Routing-based Approach v.s. Mapping-based Approach">
   <t>All existing mobility support designs can be broadly classified into two basic approaches.
The first one is to support mobility through dynamic routing. In such designs, a mobile keeps its IP address regardless of its location changes, thus the IP address can be used both to identify the mobile and to deliver packets to it. As a result, these designs do not need an explicit mapping function. Rather, the routing system must continuously keep track of mobile's movements and reflect their current positions in the network on the routing table, so that at any given moment packets carrying the (stable) receiver's IP address can be delivered to the right place. 
	</t>

	<t>Supporting mobility through dynamic routing is conceptually simple; it can also provide robust and efficient data delivery, assuming that the routing system can keep up with the mobile movements. However, because the whole network must be informed of every movement by every mobile, this approach is feasible only in small scale networks with a small number of mobiles; it does not scale well in large networks or for large number of mobiles.
	</t>

	<t>The second approach to mobility support is to provide a mapping between a mobile's stable identifier and its dynamically changing IP address. Instead of notifying the world on every movement, a mobile only needs to update a single binding location about its location changes. In this approach, if one level of indirection at IP layer is used, as in the case of Mobile IP, it has a potential side effect of introducing triangle routing; otherwise, if the two end nodes need to be aware of each other's movement, which means that both ends have to support the same mobility protocol.
	</t>

	<t>Yet there is the third case in which the protocols combine the above approaches, in the hope of keeping the pros and eliminating some cons of the two. WINMO is a typically protocol in this case. 
	</t>

  
<figure anchor="RvsM" >
   <preamble>In <xref target="RvsM"/> we show the classification of the existing protocols according to the above analysis. </preamble>
           <artwork><![CDATA[
                                   _.--------.
                               ,-''           `--.
                            ,-'                   `-.
                          ,'           +----+        `.
            ,-------.    /   +----+    |ILNP|  +----+  \
         ,+--------+ `-,'    |Sony|    +----+  |HMIP|   `.
       ,' |Columbia|  / `.   +----+            +----+     \
     ,'   +--------+ /    `.            +---+   +------+   \
    /               ;       \    +----+ |E2E|   |M-SCTP|    :
   / +---------+    ;+-----+ \   |NEMO| +---+   +------+    :
  ;  |Connexion|   ; |WINMO|  :  +----+          +---------+ :
  ;  +---------+   | +-----+  :           +---+  |Mobile Me| |
 ;    +-----+      |           :  +---+   |HIP|  +---------+ |
 |    |TIMIP|      | +------+  |  |LSR|   +---+              |
 :    +-----+      : |MSM-IP|  ;  +---+      +---------+     ;
  :   +------+      :+------+ ;    +----+    |Mobile IP|    ;
  :   |HAWAII|      :         ;    |PMIP|    +---------+    ;
   \  +------+       \       /     +----+ +-----------+    /
    \   +-----------+ \     /             |Global HAHA|   /
     `. |Cellular IP|  `. ,'              +-----------+ ,'
       `+-----------+   ,'    +-------------+          /
         `-.         ,-'  `.  |LISP-Mobility|        ,'
            `-------'       '-+-------------+     ,-'
                               `--.           _.-'
                                   `--------''
      Routing-based                 Mapping-based

          ]]> </artwork>

           <postamble></postamble>
       </figure>
	
	</section>


	<section title = "IP Layer Indirection v.s. Mobility Exposure">
	<t>One critical choice in mapping-based systems is the choice of rendezvous point, i.e. where to locate the mapping function and whether or not the rendezvous point provides other functions except storing mapping information. 
	</t>

	<t>Several mobility support designs provide the mapping function at IP layer, where both the identifier and the current location of a mobile are represented by IP addresses. In this approach, the IP address which is used as the mobile's identifier points to the rendezvous point that keeps track of the mobile's current location. Such designs offer an advantage of hiding the mobility from correspondent nodes through one level of indirection. When a correspondent node sends packets to an IP address which is a mobile's identifier, the packets will be delivered to the location where the mapping information of the mobile is kept (e.g. the Home Agent in Mobile IP), and later they will be forwarded to the mobile's current location via either encapsulation or destination address translation.
	</t>

	<t>Although this one level of indirection at IP layer makes mobility transparent, it has a potential side effect of introducing triangle routing: the path taken by the packets via the rendezvous point can be much longer than the direct path between the correspondent and the mobile's current location. Besides, as increasing number of mobile devices are connected to Internet (why hide mobility to them), some mobility solutions have opted to expose mobility to both ends and let them communicate directly. One common approach taken by these protocols is to use DNS for the mapping function to keep track of mobiles' current locations. Mobiles use dynamic DNS updates to keep their DNS servers updated with their current locations. This approach re-utilizes the DNS infrastructure, which is ubiquitous and quite reliable, and makes the mobility support protocol simple and easy to deploy. 
	</t>


	<figure anchor="IPLayerVSDNS" >
 	<preamble><xref target="IPLayerVSDNS"/> shows the two categories of mobility protocols according to their choices of rendezvous point. Note, however, protocols like Mobile IP can also expose mobility to the other end if Route Optimization is supported. </preamble>
           <artwork><![CDATA[
                    ,-------.
                 ,-'         `-.
               ,' +---------+   `.                   ,-----.
              /   |Mobile IP|     \               ,-'       `-.
            ,'    +---------+      `.            /   +----+    \
           ;                         :         ,'    |ILNP|     `.
           ; +----+                  :        ;      +----+       :
          /  |HMIP|   +-----------+   \       ;          +------+ :
         ;   +----+   |Global HAHA|    :     /   +---+   |M-SCTP|  \
         |            +-----------+    |    ;    |E2E|   +------+   :
         |   +---+                     |    |    +---+ +---------+  |
         |   |LSR|        +----+       |    |          |Mobile Me|  |
         :   +---+ +----+ |NEMO|       ;    |  +---+   +---------+  |
          \        |Sony| +----+      /     :  |HIP|                ;
           :       +----+            ;       \ +---+               /
           :                         ;        :   +-------------+ ;
            `.       +----+        ,'         :   |LISP-Mobility| ;
              \      |PMIP|       /            `. +-------------+'
               `.    +----+     ,'               \             /
                 '-.         ,-'                  `-.       ,-'
                    `-------'                        `-----'
		IP Layer Indirection		Mobility Exposure
          ]]> </artwork>


           <postamble></postamble>
       </figure>
	</section>


	<section title = "Operator-Controlled Approach v.s. User-controlled">

	<t>At the time when this draft was written, the largest global mobility support today is provided by cellular networks, using a service model that bundles together the device control, network access control and mobility support. The tremendous success of cellular market speaks loudly that the current cellular service model is a viable one, and is likely to continue for foreseeable future. As a result, there is a strong advocate in IETF that we continue the cellular way of handling mobility, i.e. the mobile do not necessarily need to participate in the mobility related signaling; instead, the network entities deployed by the operators will take care of any signaling process of mobility support. A typical example is Proxy Mobile IP, in which LMA work together with MAGs, assuring that the mobile always obtains its Home Prefixes as long as it roams within the domain.
	</t>


	<t>The main reason for this approach is perhaps backward compatibility. By not requiring the participation of mobiles in control signaling process, it avoids any changes to the mobile nodes, which essentially means that the mobile nodes can stay simple and all the legacy nodes can obtain the same level of mobility services as the most fancy mobile devices. According the the claim of 3G vendors and operators, this is a key aspect as they learn from their deployment experience.
	</t>


	<t>On the contrary, most mobility support protocols so far focus on mobility support only. And the mobile nodes typically need to update their locations by themselves to the rendezvous points chosen by the user. In these protocols, only the node implementing them can benefit from mobility support. However, the users get more flexibility and freedom, e.g. they can choose whatever mobility services available as long as their software support that protocol, and they can also tune the parameters to get the services that are most suitable to them.
	</t>
	<t>Which one is better? No one knows. We expect them to co-exist as they do today. However, as the technology advances and the hand-hold devices becomes more and more powerful, the latter approach seems to be a much simpler way to move forward with.
	</t>
	</section>


	<section title = "Local and Global Scale Mobility">

	<t>The works done on mobility management can also be divided according to their scale into two categories: local mobility management and global mobility management. </t>

	<t>Global mobility management is typically supposed to support mobility of unlimited number of nodes in a geographically as well as topologically large area. Consequentially, it pays a lot of attentions to the scalability issues. For the availability concern, it also tries to avoid failure of single point. 
	</t>


	<t>Local mobility management on the other hand is designed to work together with
	global mobility management, and thus focuses more on performance issues, such as shorten handoff delay, reduce handoff loss, short local data path and etc. Since it is typically used in a small scale with no-so-large number of mobile nodes, sometimes the designers can use some fine-tune mechanisms that are not scale with large network (such as host route) to improvement performance. As a side effect of local mobility management, the number of location updates sent by mobile nodes to their global rendezvous points is substantially reduced. Thus, the existence of local mobility management also contribute to the scalability of global mobility management.
	</t>


	<t>One problem of the local mobility management is that it often requires many
	infrastructure support, such as MAGs in PMIP, or MAPs in HMIP. These kind of local devices are essentially required in all small domains, which can be a huge investment. 
	</t>


	<t>
Neverthe less, the mobility managements in two scale make it possible for
	designers to design protocols that fit into specific user requirements; it also enables the gradual deployment of local enhancement while not losing the ability of global roaming. The co-existence of the two seems to be a right choice in the foreseeable future.
	</t>

	<figure anchor="LocalVsGlobal" >
 	<preamble><xref target="LocalVsGlobal"/> shows the classification of the studied protocols according to their serving scale. </preamble>
           <artwork><![CDATA[
                                   _.------------.
           ,-------.          _.-''               `---.
        ,-+--------+`-.   ,-''  +---+    +---------+   `--.
      ,'  |Columbia|   `,'      |HIP|    |Mobile IP|       `.
    ,'    +--------+  ,' `.     +---+    +---------+         `.
   /      +----+     /     \                                   \
  /       |PMIP|   ,'+-----+\    +---+    +------+    +----+    `.
 ;        +----+  ;  |WINMO| :   |E2E|    |MSM-IP|    |NEMO|      :
 ;+----+          ;  +-----+ :   +---+    +------+    +----+      :
; |HMIP| +-----+ ;            :                                    :
| +----+ |TIMIP| +-----------+|   +------+     +---+               |
:        +-----+ |Global HAHA|;   |M-SCTP|     |LSR|    +----+     ;
 :  +-----------++-----------+    +------+     +---+    |ILNP|    ;
 :  |Cellular IP| :          ;           +---------+    +----+    ;
  \ +-----------+  `.       /   +----+   |Mobile Me|            ,'
   \       +------+  \     /    |Sony|   +---------+           /
    `.     |HAWAII|   `. ,'     +----+ +---------+           ,'
      `.   +------+    ,'.             |Connexion|         ,'
        `-.         ,-'   `--.         +---------+     _.-'
           `-------'          `---.               _.-''
                                   `------------''
   Local Mobility Management     Global Mobility Management
          ]]> </artwork>



           <postamble></postamble>
       </figure>
	</section>


</section>

	<section title = "Discussions">
	<t>
In last section we discussed the different directions towards mobility support. We now turn our attention to identify both new opportunities and remaining open issues in providing global scale mobility support for unlimited number of online mobility devices. We are not trying to identify the solutions to these issues, but rather, the goal is to share our opinions and to initiate an open discussion.
</t>


	<section title = "Backward Compatibility">
	<t>The Internet has been running for more than two decades, and the scale of the Internet gets so large that it is impossible to upgrade the whole system over night. As a result, it is not possible for a mobility support system designer to overlook this problem: how important the backward compatibility is?
	</t>

	<t>As one can expect, different designers have different opinions. </t>

	<t>Some assume that the other end is by a large chance also mobility capable (as of today, more people are accessing the Internet via mobile devices than a desktop), and thus do not provide backward compatibility at all; but as a tradeoff, the system design becomes much simpler and the data path is always the shortest one. The examples of protocols fall into this categories could be HIP, Mobile Me and etc.
	</t>

	<t>Some take a more conservative approach. They do not want to lose the ability of communicating with legacy nodes during the movement, and they also do not want the rest of the world (meaning, the static nodes) to be bothered by the mobility of mobile nodes. Thus they add a level of indirection at IP layer, and hide the mobility of the mobile nodes. The mobile node thus can benefit from mobility support even when communicating with legacy node. And when the other end also supports mobility, it is also possible to achieve the shortest data path, but with additional complexity. The Mobile IP related protocols fall into this category.
	</t>

	<t>Others want to cater to the inertness of the Internet (and the users) and keep everything status quo, at least from the users' point of view. And thus they take backward compatibility more serious and hide the mobility completely, even for the mobile node itself. Proxy Mobile IP represents this approach.
	</t>


	<t>We all know that backward compatibility is important in system design. But how important is that? How much effort should we make for this issue? At least for now, the answer is not clear yet.
	</t>

	</section>


	<section title = "Undisrupted TCP Connection">
	<t>TCP is the most widely used transport layer protocol in the Internet, and the majority of the data traffic today is TCP traffic. In order for the users to benefit from the mobility support, it is of vital importance to keep the established TCP connections undisrupted during the mobile's movement.
	</t>
	<t>Basically there are three approaches to do this: 1) make the mobile node keep its IP address regardless of its point of attachment to the Internet; 2) add a level of indirection and use a static IP address in the TCP pseudo header; 3) modify the TCP protocol.
	</t>
	<t>The routing-based protocols typically make the mobile node keep a stable IP address and thus the first approach is the right one for them. Proxy Mobile IP, however, also takes the first approach. No overhead or complexity is introduced in order to maintain TCP connections in this approach.
	</t>
	<t>A large number of protocols take the second approach. This approach could be achieved via a forwarding agent, as in the case of Mobile IP; or the two end nodes can directly set up a tunnel and use a stable IP address in TCP pseudo headers, as in the case of Mobile Me. In order to maintain the TCP connections undisrupted via this approach, an extra IP header is appended to every data packets, and the possible forwarding agent also introduce problems such as single point of failure, triangle routing, bottleneck of bandwidth and processing power, etc.</t>

	<t>A few protocols also take the third approach. In this approach, the TCP protocol itself is modified, either to 1) put an identifier rather than an IP address as connection id or to 2) allow the TCP connections to change the IP address of both ends. HIP, ILNP uses designated ID in TCP layer (they can be in the format of IP address though), while E2E allows using dynamically changing IP addresses. This approach faces the difficulty of changing the TCP protocol itself, which will introduce serious backward compatibility problem.
	</t> 
	<t>What is the best choice for the future? Although it seems that most people favor the second approach, whether or not it is the right direction is still uncertain.
	</t>

	</section>
	
<!---
	<section title = "Good Enough Performance">
	</section>
-->


	<section title = "Interconnecting Heterogeneous Mobility Support Systems">
	<t>As our survey suggests, multiple solutions of mobility support are already running today, and it is almost for sure that the mobility support systems in the future are going to be heterogeneous. However, as of today, the inter-operation between different protocols is still problematic. For example, when a mobile node supporting Mobile IP only wants to communicate with another mobile with only HIP support, both of them can not benefit from mobility support.
	</t>

	<t>This situation reminds us the days before IP were adopted. In that time, the hosts in different networks are not able to communicate with each other. It is the IP that merged the networks and created the Internet, where each host can freely communicate with any other host. Is it necessary to introduce something like IP to the mobility support in the future? Is it possible to design an architecture, so that it glues all the mobility support systems together? We believe the answer to both questions is yes.
	</t>
	<t>The basic idea for the solution is simple, as the famous quote says: "Every problem in Computer Science can be solved by adding a level of indirection. However, the devil is in the details and we still need to figure that out.
	</t>

	</section>


	<section title = "Flat-id Based Routing">
	<t>Up until now, all our discussions are based on an implication that the underlying global routing systems is not fundamentally changed, that is, the location of the mobile node is always indicated by an IP address. However, recently there are a lot of works that challenge this "classic" idea. Flat-id based routing schemes <xref target = "VRR"/> <xref target ="ROFL"/><xref target ="VIR"/> are especially popular. 
	</t>

	<t>With flat-id based routing, mobility as well as multihoming are naturally incorporated. And most of these protocols are mathematically elegant. However, although the notion of flat-id space has been widely adopted in peer-to-peer network, it seems that the Internet is not going to undertake such revolutionary changes (from hierarchical IP Address based routing to flat-id based routing) in the foreseeable future due to the inertness of the extremely huge system and also the backward compatibility problem.
	</t>

	<t>Nevertheless, whether or not flat-id based routing will be a good solution to the mobility support problem, or perhaps more generally, the routing problem is not determined yet.
	</t>

	</section>
</section>
	
</middle>


<back>
	<references>
		<reference anchor="Sony">
			<front>
				<title>A Network Architecture Providing Host Migration Transparency</title>
				<author initials="F." surname="Teraoka" fullname="F. Teraoka">
				</author>
				<author initials="Y." surname="Yokote" fullname="Y. Yokote">
				</author>
				<author initials="M." surname="Tokro" fullname="M. Tokro">
				</author>
				<date year="1991" />
			</front>
			<seriesInfo name="ACM" value="SIGCOMM CCR" />
		</reference>

		<reference anchor="MSA">
			<front>
				<title>IP-based Protocols for Mobile Internetworking</title>
				<author initials="J." surname="Ioannidis" fullname="J. Ioannidis">
				</author>
				<author initials="D." surname="Duchamp" fullname="D. Duchamp">
				</author>
				<author initials="G.Q." surname="Maguire" fullname="G.Q. Maguire">
				</author>
				<date year="1991" />
			</front>
			<seriesInfo name="ACM" value="SIGCOMM CCR" />			
		</reference>

		<reference anchor="LISP-Mobility">
			<front>
				<title>LISP Mobility Architecture</title>
				<author initials="D." surname="Farinacci" fullname="J. Farinacci">
				</author>
				<author initials="V." surname="Fuller" fullname="V. Fuller">
				</author>
				<author initials="D." surname="Lewis" fullname="D. Lewis">
				</author>
				<author initials="D." surname="Meyer" fullname="D. Meyer">
				</author>
				<date Month = "July" year="2009" />
			</front>
			<seriesInfo name="Internet-Draft" value="draft-meyer-lisp-mn-00.txt" />			
		</reference>
		<reference anchor="LISP">
			<front>
				<title>Locator/ID Separation Protocol (LISP)</title>
				<author initials="D." surname="Farinacci" fullname="J. Farinacci">
				</author>
				<author initials="V." surname="Fuller" fullname="V. Fuller">
				</author>
				<author initials="D." surname="Lewis" fullname="D. Lewis">
				</author>
				<author initials="D." surname="Meyer" fullname="D. Meyer">
				</author>
				<date Month = "March" year="2009" />
			</front>
			<seriesInfo name="Internet-Draft" value="draft-farinacci-lisp-12.txt" />			
		</reference>
		<reference anchor="LSR">
			<front>
				<title>A Mobile Networking System Based on Internet Protocol (IP)</title>
				<author initials="P." surname="Bhagwat" fullname="P. Bhagwat">
				</author>
				<author initials="C." surname="Perkins" fullname="C. Perkins">
				</author>
				<date year="1993" />
			</front>
			<seriesInfo name="Mobile and Location-Independent Computing" value="Symposium" />			
		</reference>

		<reference anchor="RFC2002">
			<front>
				<title>IP Mobility Support</title>
				<author initials="C." surname="Perkins" fullname="C. Perkins">
				</author>
				<date month="October" year="1996" />
			</front>
			<seriesInfo name="RFC" value="2002" />			
		</reference>
			
		<reference anchor="MSM-IP">
			<front>
				<title>A New Multicast-based Architecture for Internet Host Mobility</title>
				<author initials="J." surname="Mysore" fullname="J. Mysore">
				</author>
				<author initials="V." surname="Bharghavan" fullname="V. Bharghavan">
				</author>
				<date year="1997" />
			</front>
			<seriesInfo name="ACM" value="Mobicom" />			
		</reference>
		
		<reference anchor="I-TCP">
			<front>
				<title>I-TCP: Indirect TCP for Mobile Hosts</title>
				<author initials="A." surname="Bakre" fullname="A. Bakre">
				</author>
				<author initials="B.R." surname="Badrinath" fullname="B.R. Badrinath">
				</author>
				<date year="1995" />
			</front>
			<seriesInfo name="Proceedings of the 15th International Conference on" value="Distributed Computing System" />			
		</reference>

		<reference anchor="MSOCKS">
			<front>
				<title>MSOCKS: An Architecture for Transport Layer Mobility</title>
				<author initials="P." surname="Ferguson" fullname="P. Ferguson">
				</author>
				<author initials="D." surname="Senie" fullname="D. Senie">
				</author>
				<date year="1998" />
			</front>
			<seriesInfo name="IEEE" value="INFOCOM" />			
		</reference>

		<reference anchor="CIP">
			<front>
				<title>Cellular IP: A New Approach to Internet Host Mobility</title>
				<author initials="A." surname="Valko" fullname="A. Valko">
				</author>
				<date year="1999" />
			</front>
			<seriesInfo name="ACM" value="SIGCOMM" />			
		</reference>

		<reference anchor="E2E">
			<front>
				<title>An End-to-End Approach to Host Mobility</title>
				<author initials="A." surname="Snoeren" fullname="A. Snoeren">
				</author>
				<author initials="H." surname="Balakrishnan" fullname="H. Balakrishnan">
				</author>
				<date year="2000" />
			</front>
			<seriesInfo name="ACM" value="Mobicom" />			
		</reference>

		<reference anchor="RFC2782">
			<front>
				<title>A DNS RR for Specifying the Location of Services (DNS SRV)</title>
				<author initials="A." surname="Gulbrandsen" fullname="A. Gulbrandsen">
				</author>
				<author initials="P." surname="Vixie" fullname="P. Vixie">
				</author>
				<author initials="L." surname="Esibov" fullname="L. Esibov">
				</author>
				<date Month="Feburary" year="2000" />
			</front>
			<seriesInfo name="RFC" value="2782" />			
		</reference>

		<reference anchor="RFC3007">
			<front>
				<title>Secure Domain Name System (DNS) Dynamic Update</title>
				<author initials="B." surname="Willington" fullname="B. Willington">
				</author>
				<date Month="November" year="2000" />
			</front>
			<seriesInfo name="RFC" value="3007" />			
		</reference>

		<reference anchor="TIMIP">
			<front>
				<title>Terminal Independent Mobility For IP</title>
				<author initials="A." surname="Grilo" fullname="A. Grilo">
				</author>
				<author initials="P." surname="Estrela" fullname="P. Estrela">
				</author>
				<author initials="M." surname="Nunes" fullname="M. Nunes">
				</author>
				<date year="2001" />
			</front>
			<seriesInfo name="IEEE" value="Communications Magazine" />			
		</reference>

		<reference anchor="HAWAII">
			<front>
				<title>HAWAII: A Domain-based Approach for Supporting Mobility in Wide-are Wireless Networks</title>
				<author initials="R." surname="Ramjee" fullname="R. Ramjee">
				</author>
				<author initials="K." surname="Varadhan" fullname="K. Varadhan">
				</author>
				<author initials="L." surname="Salgarelli" fullname="L. Salgarelli">
				</author>
				<date year="2002" />
			</front>
			<seriesInfo name="IEEE/ACM Transcations" value="on Networking" />			
		</reference>
		<reference anchor="VRR">
			<front>
				<title>Virtual Ring Routing: Network Routing Inspired by DHTs</title>
				<author initials="M." surname="Caesar" fullname="Matthew Caesar">
				</author>
				<author initials="M." surname="Castro" fullname="Miguel Castro">
				</author>
				<author initials="E.B." surname="Nightingale" fullname="Edmund B. Nightngale">
				</author>
				<author initials="G." surname="O'Shea" fullname="Greg O'Shea">
				</author>
				<author initials="A." surname="Rowstron" fullname="Antony Rowstron">
				</author>
				<date year="2006" />
			</front>
			<seriesInfo name="ACM " value="Sigcomm" />			
		</reference>

		<reference anchor="ROFL">
			<front>
				<title>ROFL: Routing on Flat Labels</title>
				<author initials="M." surname="Caesar" fullname="Matthew Caesar">
				</author>
				<author initials="T." surname="Condie" fullname="Tyson Condie">
				</author>
				<author initials="J." surname="Kannan" fullname="J. Kannan">
				</author>
				<author initials="K." surname="Lakshminarayanan" fullname="K. Lakshminarayanan">
				</author>
				<author initials="I." surname="Stoica" fullname="Ion Stoica">
				</author>
				<author initials="S." surname="Shenker" fullname="Scott Shenker">
				</author>
				<date year="2006" />
			</front>
			<seriesInfo name="ACM " value="Sigcomm" />			
		</reference>
		<reference anchor="VIR">
			<front>
				<title>Virtual Id Routing</title>
				<author initials="G." surname="Lu" fullname="G. Lu">
				</author>
				<author initials="S." surname="Jain" fullname="S. Jain">
				</author>
				<author initials="S." surname="Chen" fullname="S. Chen">
				</author>
				<author initials="Z." surname="Zhang" fullname="Z. Zhang">
				</author>
				<date year="2008" />
			</front>
			<seriesInfo name="ACM " value="MobiArch" />			
		</reference>
		<reference anchor="M-SCTP">
			<front>
				<title>M-SCTP: Design and Prototypical Implementaion of An End-to-End Mobility Concept</title>
				<author initials="W." surname="Xing" fullname="W. Xing">
				</author>
				<author initials="H." surname="Karl" fullname="H. Karl">
				</author>
				<author initials="A." surname="Wolisz" fullname="A. Wolisz">
				</author>
				<date year="2002" />
			</front>
			<seriesInfo name="5th Intl. Workshop" value="on the Internet Challenge" />			
		</reference>

		<reference anchor="RFC3220">
			<front>
				<title>IP Mobility Support for IPv4</title>
				<author initials="C." surname="Perkins" fullname="C. Perkins">
				</author>
				<date Month="January" year="2002" />
			</front>
			<seriesInfo name="RFC" value="3220" />			
		</reference>

		<reference anchor="RFC5201">
			<front>
				<title>Host Identity Protocol</title>
				<author initials="P." surname="Nikander" fullname="P. Nikander">
				</author>
				<author initials="R." surname="Moskowitz" fullname="R. Moskowitz">
				</author>
				<author initials="P." surname="Jokela" fullname="P. Jokela">
				</author>
				<author initials="T." surname="Henderson" fullname="T. Henderson">
				</author>
				<date  Month="April" year="2008" />
			</front>
			<seriesInfo name="RFC" value="5201" />			
		</reference>

		<reference anchor="RFC4140">
			<front>
				<title>Hierarchical Mobile IPv6 Mobility Management (HMIPv6)</title>
				<author initials="H." surname="Soliman" fullname="H. Soliman">
				</author>
				<author initials="C." surname="Castelluccia" fullname="C. Castelluccia">
				</author>
				<author initials="K.E." surname="Malki" fullname="K.E. Malki">
				</author>
				<author initials="L." surname="Bellier" fullname="L. Bellier">
				</author>
				<date Month="August" year="2005" />
			</front>
			<seriesInfo name="RFC" value="4140" />	
		</reference>
		<reference anchor="RFC3753">
			<front>
				<title>Mobility Related Terminology</title>
				<author initials="J." surname="Manner" fullname="J. Manner">
				</author>
				<author initials="M." surname="Kojo" fullname="M. Kojo">
				</author>
			</front>
		</reference>
		<reference anchor="RFC3775">
			<front>
				<title>IP Mobility Support in IPv6</title>
				<author initials="D." surname="Johnson" fullname="D. Johnson">
				</author>
				<author initials="C." surname="Perkins" fullname="C. Perkins">
				</author>
				<author initials="J." surname="Arkko" fullname="J. Arkko">
				</author>
				<date Month="June" year="2004" />
			</front>
			<seriesInfo name="RFC" value="3775" />	
		</reference>

		<reference anchor="ILNP">
			<front>
				<title>An Overive of the Identifier-Locator Network Protocol</title>
				<author initials="R." surname="Atkinson" fullname="R. Atkinson">
				</author>
				<date  year="2005" />
			</front>
			<seriesInfo name="Research" value="Note" />	
		</reference>

		<reference anchor="RFC3963">
			<front>
				<title>Network Mobility (NEMO) Basic Support Protocol</title>
				<author initials="V." surname="Devarapalli" fullname="V. Devarapalli">
				</author>
				<author initials="R." surname="Wakikawa" fullname="R. Wakikawa">
				</author>
				<author initials="A." surname="Peterson" fullname="A. Peterson">
				</author>
				<author initials="P." surname="Thubert" fullname="P. Thubert">
				</author>
				<date  Month="January"year="2005" />
			</front>
			<seriesInfo name="RFC" value="3963" />	
		</reference>

		<reference anchor="Boeing">
			<front>
				<title>A Border Gateway Protocol 4 (BGP-4)</title>
				<author initials="L.D." surname="Andrew" fullname="L.D. Andrew">
				</author>
				<date  year="2006" />
			</front>
			<seriesInfo name="Boeing" value="White Paper" />	
		</reference>

		<reference anchor="HAHA">
			<front>
				<title>Migrating Home Agents Towards Internet-scale Mobility Deployment</title>
				<author initials="R." surname="Wakikawa" fullname="R. Wakikakwa">
				</author>
				<author initials="G." surname="Valadon" fullname="G. Valadon">
				</author>
				<author initials="J." surname="Murai" fullname="J. Murai">
				</author>
				<date  year="2006" />
			</front>
			<seriesInfo name="ACM" value="CoNEXT" />	
		</reference>

		<reference anchor="WINMO">
			<front>
				<title>Wide-Area IP Network Mobility</title>
				<author initials="X." surname="Hu" fullname="X. Hu">
				</author>
				<author initials="L." surname="Li" fullname="L. Li">
				</author>
				<author initials="Z." surname="Mao" fullname="Z. Mao">
				</author>
				<author initials="Y." surname="Yang" fullname="Y. Yang">
				</author>
				<date  year="2008" />
			</front>
			<seriesInfo name="IEEE" value="INFOCOM" />	
		</reference>

		<reference anchor="RFC5213">
			<front>
				<title>Proxy Mobile IPv6</title>
				<author initials="S." surname="Gundavelli" fullname="S. Gundavelli">
				</author>
				<author initials="K." surname="Leung" fullname="K. Leung">
				</author>
				<author initials="V." surname="Devarapalli" fullname="Y. Devarapalli">
				</author>
				<author initials="K." surname="Chowdhury" fullname="K. Chowdhury">
				</author>
				<author initials="B." surname="Patil" fullname="B. Patil">
				</author>
				<date  Month="August" year="2008" />
			</front>
			<seriesInfo name="RFC" value="5213" />	
		</reference>

		<reference anchor="BTMM">
			<front>
				<title>Understanding Apple's Back to My Mac Service</title>
				<author initials="R." surname="Nakamoto" fullname="R. Nakamoto">
				</author>
				<author initials="Z." surname="Zhu" fullname="Z. Zhu">
				</author>
				<author initials="D." surname="Lau" fullname="D. Lau">
				</author>
				<author initials="B." surname="Allen" fullname="B. Allen">
				</author>
				<date Month="June" year="2009" />
			</front>
			<seriesInfo name="UCLA" value="CS217 Project" />	
		</reference>

	</references>
</back>
</rfc>
