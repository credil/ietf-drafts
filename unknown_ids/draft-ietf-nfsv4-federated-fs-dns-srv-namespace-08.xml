<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v5 rel. 3 U (http://www.xmlspy.com)
     by Daniel M Kohn (private) -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
]>

<rfc category="std" docName="draft-ietf-nfsv4-federated-fs-dns-srv-namespace-08.txt" ipr="pre5378Trust200902">


<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc tocompact="yes" ?>
<?rfc tocdepth="3" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<!-- these two save paper: start new paragraphs from the same page etc. -->
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>


    <front>
        <title abbrev="NFSv4 Global Name Space with DNS SRV">
		Using DNS SRV to Specify a Global File Name Space with NFS version 4
	  </title>
        <author initials='C' surname="Everhart" fullname='Craig Everhart'>
            <organization>
		NetApp
		</organization>
		<address>
		<postal>
			<street>800 Cranberry Woods Drive, Ste. 300</street>
			<city>Cranberry Township</city> <region>PA</region>
			<code>16066</code>
			<country>US</country>
		</postal>
		<phone>+1 724 741 5101</phone>
		<email>everhart@netapp.com</email>
		</address>
        </author>
	  <author initials="W.A." surname="Adamson" fullname='W.A. (Andy) Adamson'>
		<organization>NetApp</organization>
		<address>
		<postal>
			<street>495 East Java Drive</street>
			<city>Sunnyvale</city> <region>CA</region>
			<code>94089</code>
			<country>US</country>
		</postal>
		<phone>+1 734 665 1204</phone>
		<email>andros@netapp.com</email>
		</address>
	  </author>
	  <author initials='J' surname="Zhang" fullname='Jiaying Zhang'>
		<organization>Google</organization>
		<address>
		<postal>
			<street>604 Arizona Avenue</street>
			<city>Santa Monica</city> <region>CA</region>
			<code>90401</code>
			<country>US</country>
		</postal>
		<phone>+1 310 309 6884</phone>
		<email>jiayingz@google.com</email>
		</address>
	  </author>

        <date month="September" year="2011"/>
        <abstract><t>
The NFS version 4 protocol provides a natural way for a collection of NFS file servers to collaborate
in providing an organization-wide file name space.  The DNS SRV RR allows a simple and appropriate 
way for an organization to publish the root of its name space, even to clients that might not be
intimately associated with such an organization.  The DNS SRV RR can be used to join these
organization-wide file name spaces together to allow construction of a global, uniform NFS version 4
file name space.
</t></abstract>
    </front>

    <middle>
        <section title="Requirements notation">
            <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
            "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
            and "OPTIONAL" in this document are to be interpreted as
            described in <xref target="RFC2119"/>.</t>
        </section>

	  <section title="Background">
		<t>
The NFS Version 4 protocol <xref target="RFC3530" /> introduced the fs_locations attribute.  
Its use was elaborated further in the NFS Version 4 Minor Version 1 protocol <xref target="RFC5661" />,
which also defined an extended version of the attribute as fs_locations_info.
With the advent of these attributes, NFS servers can
cooperate to build a file name space that crosses server boundaries.
The fs_locations and fs_locations_info attributes are used as referrals, so that a file
server may indicate to its client that the file name tree beneath
a given name in the server is not present on itself, but is represented by a filesystem in some other
set of servers.  The mechanism
is general, allowing servers to describe any filesystem as being reachable by requests to any of a
set of servers.
Thus, starting with a single NFS Version 4 server, using these referrals, an NFS Version 4 client
might be able to see a large name space associated with a collection of interrelated NFS Version 4 file servers.  An organization could use this
capability to construct a uniform file name space for itself.
</t><t>
An organization might wish to publish the starting point for this name space to its clients.  In many
cases, the organization will want to publish this starting point to a broader set of possible clients.
At the same time, it is useful to require clients to know only the smallest amount
of information in order to locate the appropriate name space.
Simultaneously, that required
information should be constant through the life of an organization if the clients are not to require
reconfiguration as administrative events change, for instance, a server's name or address.
		</t>
	  </section>

	  <section title="Proposed Use of SRV Resource Record in DNS">
<t>
Providing an organization's published filesystem name space is a service, and it is appropriate
to use the DNS <xref target="RFC1034" /><xref target="RFC1035" /> to locate it.  
As with the AFSDB resource record type <xref target="RFC1183" />, the client need only utter the
(relatively) constant domain name for an organization in order to locate its filesystem name space service.
Once a client uses the DNS to locate one or more servers for the root of the organization's name space,
it can use the standard NFS Version 4 mechanisms to navigate the remainder of the NFS servers for that
organization.  The use of this proposed mechanism results in a useful cross-organizational name space,
just as in AFS <xref target="AFS" /> and DCE/DFS <xref target="DFS" /> before it.  A client need
know only the name of the organization
in order to locate the filesystem name space published by that organization.
</t><t>
<figure>
<preamble>
We propose the use of the DNS SRV resource record type [RFC2782] to fulfill this function.  The
format of the DNS SRV record is as follows:
</preamble>
<artwork>
   _Service._Proto.Name TTL Class SRV Priority Weight Port Target
</artwork>
<postamble>
In our case, we use a Service name of "_nfs4._domainroot" and a conventional Protocol of "_tcp".
The Target fields 
give the domain names of the NFS Version 4 servers that export filesystems for the domain's root.
An NFS Version 4 client
SHOULD interpret any of the exported root filesystems as the filesystem published by the organization
with the given domain name.
</postamble> </figure>
</t><t>
In order to allow the NFSv4 servers so given to export a variety of filesystems, those file servers
SHOULD export the given domain's root filesystems at "/.domainroot-{Name}" within
their pseudo-filesystems, where the "{Name}" is the name of the organization as used in the SRV RR.
</t><t>
<figure>
<preamble>
As an example, suppose a client wished to locate the root of the filesystem published by organization example.net.  The
DNS servers for the domain could publish records like
</preamble><artwork>
   $ORIGIN example.net.
   _nfs4._domainroot._tcp IN SRV 0 0 2049 nfs1tr.example.net.
   _nfs4._domainroot._tcp IN SRV 1 0 2049 nfs2ex.example.net.
</artwork><postamble>
The result domain names nfs1tr.example.net and nfs2ex.example.net indicate NFS Version 4 file servers that
export the root of the published name space for the example.net domain.  In accordance with RFC 2782 <xref target="RFC2782" />,
these records are to be interpreted using the Priority and Weight field values, selecting an appropriate
file server with which to begin a network conversation.  The two file servers would export filesystems
that would be found at "/.domainroot-example.net" in their pseudo-filesystems, which clients would mount.
Clients then carry out subsequent accesses in accordance with the ordinary NFS Version 4 protocol.
</postamble></figure>
</t><t>
We use a composite Service name (built from "_nfs4" and "_domainroot") so that other filesystem
protocols could make use of the same "_domainroot" abstraction.
</t>
	  </section>

	  <section title="Integration with Use of NFS Version 4">
<t>
We expect that NFSv4 clients will implement a special directory, analogous to an Automounter <xref target="AMD" />
directory, the entries in which are domain names that have recently been traversed.  When an application attempts to
traverse a new name in that special directory, the NFSv4 client consults DNS to obtain the SRV data for the given name,
and if successful, it mounts the indicated filesystem(s) in that name in the special directory.
The goal is that NFSv4 applications will be able to lookup an organization's domain name in the special directory,
and the NFSv4 client will be able to discover the filesystem that that organization publishes.
Entries in the special directory will be domain names, and they will each appear to the application as a directory name
pointing to the root directory of the filesystem published by the organization responsible for that domain name.
</t><t>
This functionality does not require or use any list of organizations that are known to provide file service,
such as was required with the "root.afs" functionality in AFS.
</t><t>
This DNS SRV record evaluation could, in principle, be done either in the NFSv4 client or in an NFSv4 server.  In either
case, the result would appear the same to applications on the NFSv4 client.  This is discussed further in section 5 of this document.
</t>
		<section title="Globally-useful names: conventional mount point">
<t>
<figure>
<preamble>
For the inter-organizational name space to be a global name space, it is useful for its mount point
in local systems to be uniform as well.
On POSIX machines, the name /nfs4/ SHOULD be used so that names on one machine will
be directly usable on any machine.  Thus, the example.net published filesystem would be accessible as
</preamble><artwork>
	/nfs4/example.net/
</artwork><postamble>
on any POSIX client.  Using this convention, "/nfs4/" is the name of the special directory that is populated with
domain names, leading to file servers and filesystems that capture the results of SRV record lookups.
</postamble></figure>
</t>
		</section>

		<section title="Mount options">
<t>
SRV records are necessarily less complete than the information in the existing NFS Version 4 attributes fs_locations
<xref target="RFC3530" /> or fs_locations_info <xref target="RFC5661" />.
For the rootpath field of fs_location, or the fli_fs_root of fs_locations_info, we use the "/.domainroot-{Name}" string.  Thus,
the servers listed as targets for the SRV resource records should export the root of the organization's published
filesystem as the directory "/.domainroot-{Name}" (for the given organization Name) in its exported namespace.
For example, for organization "example.net", the directory "/.domainroot-example.net" should be used.
</t><t>
As for the other attributes in fs_locations_info, the recommended approach is for a client to make its first possible
contact with any of the referred-to servers, obtain the fs_locations_info structure from that server, and use the
information from that obtained structure as the basis for its judgment of whether it would be better to use a
different server representative from the set of servers for that filesystem.
</t><t>
The process of mounting an organization's name space should permit the use
of what is likely to impose the lowest cost on the server.  Thus, the NFS client SHOULD NOT insist
on using a writable copy of the filesystem if read-only copies exist, or a zero-age copy rather than a
copy that may be a little older.  We presume that the organization's file name space can be navigated
to provide access to higher-cost properties such as writability or currency as necessary, but that the default
use when navigating to the base information for an organization ought to be as low-overhead as possible.
</t><t>
Because of the possible distinction between read-only and read-write versions of a filesystem, 
organizations SHOULD also publish the location of a writable instance of their root filesystems, and that
NFSv4 clients SHOULD mount that filesystem under the organizational domain name preceded by a period (".").
Therefore, when names beginning with a period are looked up under the NFSv4 client's special directory,
the SRV RR looked up in DNS uses a Service name of "_nfs4._write._domainroot", and the indicated server
(or servers) SHOULD export the writable instance at "/.domainroot-write-{Name}" for a domain name Name.
</t><t>
<figure>
<preamble>
Extending the opening example, suppose a client wished to locate the read-only and read-write roots of
the filesystem published by organization example.net.  Suppose a read-write instance were hosted on
server nfs1tr.example.net, and read-only instances were on that server and also on server
nfs2ex.example.net.  The DNS servers for the domain would publish records like
</preamble><artwork>
   $ORIGIN example.net.
   _nfs4._domainroot._tcp IN SRV 0 0 2049 nfs1tr.example.net.
   _nfs4._domainroot._tcp IN SRV 1 0 2049 nfs2ex.example.net.
   _nfs4._write._domainroot._tcp IN SRV 0 0 2049 nfs1tr.example.net.
</artwork><postamble>
The nfs1tr.example.net server would export filesystems at both "/.domainroot-example.net" (the read-only instance)
and "/.domainroot-write-example.net" (the read-write instance).  The nfs2ex.example.net server need
export only the "/.domainroot-example.net" name for its read-only instance.
</postamble></figure>
</t><t>
<figure><preamble>
The read-write version of the filesystem would be mounted (upon use) under ".example.net" in the special
directory, and a read-only version would be mounted under "example.net".  Thus,
</preamble><artwork>
	/nfs4/example.net/users
</artwork></figure>
might be a directory in a read-only instance of the root filesystem of the organization "example.net", while
<figure><artwork>
	/nfs4/.example.net/users
</artwork><postamble>
would be a writable form of that same directory.  A small benefit of following this convention is that
names with the period prefix are treated as "hidden" in many operating systems, so that the visible name
remains the lowest-overhead name.
</postamble></figure>
</t>
		</section>
	  <section title="Filesystem integration issues">
<t>
The result of the DNS search SHOULD appear as a (pseudo-)directory in the client name space.
A further refinement is advisable, and SHOULD be deployed: that only fully-qualified domain names appear as directories.  That is, in many
environments, DNS names may be abbreviated from their fully-qualified form.  In such circumstances, multiple names might be given to
filesystem code that all resolve to the same DNS SRV RRs.  The abbreviated form SHOULD be represented in the client's name space cache
as a symbolic link, pointing to the fully-qualified name, case-canonicalized when appropriate.  This will allow pathnames obtained with,
say, getcwd() to include the DNS name that is most likely to be usable
outside the scope of any particular DNS abbreviation convention.
</t>
	  </section>
	  </section>

	  <section title="Where is this integration carried out?">
<t>
Another consideration is what agent should be responsible for interpreting the SRV records.  It could be done 
just as well by the NFS client or by the NFS server, though we expect that most clients will include this function themselves.  
Using something like Automounter <xref target="AMD" /> technology, the client would be responsible
for interpreting names under a particular directory, discovering the appropriate filesystem to mount, and mounting
it in the appropriate place in the client name space before returning control to the application doing a lookup.
Alternatively, one could imagine the existence of an NFS version 4 server that awaited similar domain-name lookups,
then consulted the SRV records in DNS to determine the servers for the indicated published filesystem, and then returned
that information as an NFS Version 4 referral.
In either case, the result of the DNS lookup should be cached (obeying TTL) so
that the result could be returned more quickly the next time.
</t><t>
NFS clients compliant to this standard MUST implement this functionality.  While we recognize that it would be possible to configure clients
so that they relied on a specially-configured server to do their SRV lookups for them, we feel that such a requirement would impose unusual
dependencies and vulnerabilities for the deployers of such clients.
</t>
	  </section>

        <section title="Security Considerations">
<t>
This functionality introduces a new reliance of NFSv4 on the integrity of DNS.
Spoofed SRV records in DNS could cause the NFSv4 client to connect to the file servers
of an attacker, not the file servers of an organization.
This is similar to attacks that can be made on the base NFSv4 protocol, if server names
are given in fs_location attributes: the client can be made to connect to the
file servers of an attacker, not the file servers intended to be the target for
the fs_location attributes.
</t><t>
If DNSSEC <xref target="RFC4033" /> is available, it SHOULD be used to avoid both such attacks.
Domain-based service principal names are a mechanism that also apply in this case, and it would
be prudent to use them.  They provide a mapping from the domain name that the user specified to
names of security principals used on the NFSv4 servers that are indicated as the targets
in the SRV records (as providing file service for the root filesystems).
</t><t>
With domain-based service principal names, the idea is that one wants to authenticate 
{nfs, domainname, host.fqdn}, not simply {nfs, host.fqdn}, when the
server is a domain's root file server obtained through a DNS SRV RR lookup that may or may not have
been secure.
The domain administrator can thus ensure that only domain root NFSv4 servers have
credentials for such domain-based service principal names.
</t><t><figure><preamble>
Domain-based service principal names are defined in RFCs 5178 <xref target="RFC5178" /> and
5179 <xref target="RFC5179" />.  To make use of RFC 5178's domain-based names, the syntax for "domain-based-name"
MUST be used with a service of "nfs", a domain matching the name of the organization whose root filesystem
is being sought, and a hostname given in the target of the DNS SRV resource record.  Thus, in the example above,
two file servers (nfs1tr.example.net and nfs2ex.example.net) are located as hosting the root filesystem for
the organization example.net.  To communicate with, for instance, the second of the given file servers,
GSS-API is used with the name-type of GSS_C_NT_DOMAINBASED_SERVICE
defined in RFC 5178 and with a symbolic name of
</preamble><artwork>
	nfs@example.net@nfs2ex.example.net
</artwork><postamble>
in order to verify that the named server (nfs2ex.example.net) is authorized to provide the root filesystem
for the example.net organization.
</postamble></figure>
</t>

        </section>
        <section title="IANA Considerations">
<t>
None.
</t>

        </section>
    </middle>

    <back>

<references title="Normative References">

  <reference anchor='RFC2119'>
      <front>
      <title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
      <author initials='S.' surname='Bradner' fullname='Scott Bradner'>
      <organization>Harvard University</organization>
      <address>
      <postal>
      <street>1350 Mass. Ave.</street>
      <street>Cambridge</street>
      <street>MA 02138</street></postal>
      <phone>- +1 617 495 3864</phone>
      <email>sob@harvard.edu</email></address></author>
      <date year='1997' month='March' />
      </front>
    </reference>

    <reference anchor="RFC3530">
	  <front>
      <title>Network File System (NFS) version 4 Protocol</title>
	  <author initials="S." surname="Shepler" fullname="S. Shepler">
        <organization>Sun Microsystems, Inc.</organization>
      </author>
	  <author initials="B." surname="Callaghan" fullname="B. Callaghan">
        <organization>Sun Microsystems, Inc.</organization>
      </author>
	  <author initials="D." surname="Robinson" fullname="D. Robinson">
        <organization>Sun Microsystems, Inc.</organization>
      </author>
	  <author initials="R." surname="Thurlow" fullname="R. Thurlow">
        <organization>Sun Microsystems, Inc.</organization>
      </author>
	  <author initials="C." surname="Beame" fullname="C. Beame">
        <organization>Hummingbird, Ltd.</organization>
      </author>
	  <author initials="M." surname="Eisler" fullname="M. Eisler">
        <organization>Network Appliance, Inc.</organization>
      </author>
	  <author initials="D." surname="Noveck" fullname="D. Noveck">
        <organization>Network Appliance, Inc.</organization>
      </author>
      <date year="2003" month="April" />
      </front>
      <seriesInfo name="RFC" value="3530"/>
      <format type="TXT" octets="600988" 
       target="ftp://ftp.isi.edu/in-notes/rfc3530.txt"/>
    </reference>

    <reference anchor="RFC5661">
	  <front>
      <title>Network File System (NFS) Version 4 Minor Version 1 Protocol</title>
	  <author initials="S." surname="Shepler" fullname="S. Shepler">
        <organization>Storspeed, Inc.</organization>
      </author>
	  <author initials="M." surname="Eisler" fullname="M. Eisler">
        <organization>Network Appliance, Inc.</organization>
      </author>
	  <author initials="D." surname="Noveck, Editors" fullname="D. Noveck">
        <organization>Network Appliance, Inc.</organization>
      </author>
      <date year="2010" month="January" />
      </front>
      <seriesInfo name="RFC" value="5661"/>
      <format type="TXT" octets="600988" 
       target="http://www.rfc-editor.org/rfc/rfc5661.txt"/>
    </reference>

  <reference anchor="RFC1034">
	<front>
		<title>Domain Names - Concepts and Facilities</title>
		<author initials="P.V." surname="Mockapetris" fullname="Paul Mockapetris">
		<organization />
		</author>
		<date month="November" year="1987" />
	</front>
	<seriesInfo name="RFC" value="1034" />
	<format type="TXT" octets="129180"
	 target="http://www.ietf.org/rfc/rfc1034.txt" />
  </reference>

  <reference anchor="RFC1035">
	<front>
		<title>Domain Names - Implementation and Specification</title>
		<author initials="P.V." surname="Mockapetris" fullname="Paul Mockapetris">
		<organization />
		</author>
		<date month="November" year="1987" />
	</front>
	<seriesInfo name="RFC" value="1035" />
	<format type="TXT" octets="125626"
	 target="http://www.ietf.org/rfc/rfc1034.txt" />
  </reference>

  <reference anchor="RFC2782">
	<front>
		<title>A DNS RR for specifying the location of services (DNS SRV)</title>
		<author initials="A." surname="Gulbrandsen" fullname="Arnt Gulbrandsen">
			<organization>Troll Technologies</organization>
		</author>
		<author initials="P." surname="Vixie" fullname="Paul Vixie">
			<organization>Internet Software Consortium</organization>
		</author>
		<author initials="L." surname="Esibov" fullname="Levon Esibov">
			<organization>Microsoft Corporation</organization>
		</author>
		<date month="February" year="2000" />
	</front>
	<seriesInfo name="RFC" value="2782" />
	<format type="TXT" octets="24013"
	 target="http://www.ietf.org/rfc/rfc2782.txt" />
  </reference>

  <reference anchor="RFC4033">
	<front>
		<title>DNS Security Introduction and Requirements</title>
		<author initials="R." surname="Arends" fullname="Roy Arends">
			<organization>Telematica Institut</organization>
		</author>
		<author initials="R." surname="Austein" fullname="Rob Austein">
			<organization abbrev="ISC">Internet Systems Consortium</organization>
		</author>
		<author initials="M." surname="Larson" fullname="Matt Larson">
			<organization abbrev="VeriSign">VeriSign, Inc.</organization>
		</author>
		<author initials="D." surname="Massey" fullname="Dan Massey">
			<organization>Colorado State University</organization>
		</author>
		<author initials="S." surname="Rose" fullname="Scott Rose">
			<organization abbrev="NIST">National Institute for Standards and Technology</organization>
		</author>
		<date month="March" year="2005" />
	</front>
	<seriesInfo name="RFC" value="4033" />
	<format type="TXT" octets="52445"
	 target="http://www.ietf.org/rfc/rfc4033.txt" />
  </reference>

  <reference anchor="RFC5178">
	<front>
		<title>Generic Security Service Application Program Interface (GSS-API) Internationalization and Domain-Based Service Names and Name Type</title>
		<author initials="N." surname="Williams" fullname="Nicolas Williams">
			<organization>Sun</organization>
		</author>
		<author initials="A." surname="Melnikov" fullname="Alexey Melnikov">
			<organization>Isode Ltd.</organization>
		</author>
		<date month="May" year="2008" />
	</front>
	<seriesInfo name="RFC" value="5178" />
	<format type="TXT" octets="17262"
	 target="http://www.ietf.org/rfc/rfc5178.txt" />
  </reference>

  <reference anchor="RFC5179">
	<front>
		<title>Generic Security Service Application Program Interface (GSS-API) Domain-Based Service Names Mapping for the Kerberos V GSS Mechanism</title>
		<author initials="N." surname="Williams" fullname="Nicolas Williams">
			<organization>Sun</organization>
		</author>
		<date month="May" year="2008" />
	</front>
	<seriesInfo name="RFC" value="5179" />
	<format type="TXT" octets="8017"
	 target="http://www.ietf.org/rfc/rfc5179.txt" />
  </reference>

</references>
 

<references title="Informative References">

  <reference anchor="DFS">
	<front>
		<title>DEcorum File System Architectural Overview</title>
		<author initials="M.L." surname="Kazar" fullname="Michael L. Kazar">
			<organization>Transarc Corporation</organization>
		</author>
		<author initials="B.W." surname="Leverett" fullname="Bruce W. Leverett">
			<organization>Transarc Corporation</organization>
		</author>
		<author initials="O.T." surname="Anderson" fullname="Owen T. Anderson">
			<organization>Transarc Corporation</organization>
		</author>
		<author initials="V." surname="Apostolides" fullname="Vasilis Apostolides">
			<organization>Transarc Corporation</organization>
		</author>
		<author initials="B.A." surname="Bottos" fullname="Beth A. Bottos">
			<organization>Transarc Corporation</organization>
		</author>
		<author initials="S." surname="Chutani" fullname="Sailesh Chutani">
			<organization>Transarc Corporation</organization>
		</author>
		<author initials="C.F." surname="Everhart" fullname="Craig F. Everhart">
			<organization>Transarc Corporation</organization>
		</author>
		<author initials="W.A." surname="Mason" fullname="W. Anthony Mason">
			<organization>Transarc Corporation</organization>
		</author>
		<author initials="S.-T." surname="Tu" fullname="Shu-Tsui Tu">
			<organization>Transarc Corporation</organization>
		</author>
		<author initials="E.R." surname="Zayas" fullname="Edward R. Zayas">
			<organization>Transarc Corporation</organization>
		</author>
		<date month="June" year="1990" />
	</front>
     <seriesInfo name="Proc. USENIX Summer Conf." value="Anaheim, Calif." />
  </reference>

  <reference anchor="AMD"
		 target="http://docs.freebsd.org/info/amdref/amdref.pdf">
	<front>
	  <title>Amd: The 4.4 BSD Automounter Reference Manual</title>
	  <author initials="J.-S." surname="Pendry" fullname="Jan-Simon Pendry">
		<organization>Imperial College of Science, London</organization>
	  </author>
	  <author initials="N." surname="Williams" fullname="Nick Williams">
		<organization>Imperial College of Science, London</organization>
	  </author>
	  <date month="March" year="1991" />
	</front>
  </reference>

  <reference anchor="RFC1183">
	<front>
      <title>New DNS RR Definitions</title>
	<author initials="C.F." surname="Everhart" fullname="Craig F. Everhart">
		<organization abbrev="Transarc">Transarc Corporation</organization>
	</author>
	<author initials="L.A." surname="Mamakos" fullname="Louis A. Mamakos">
		<organization abbrev="UMD">University of Maryland</organization>
	</author>
	<author initials="R." surname="Ullmann" fullname="Robert Ullmann">
		<organization abbrev="Prime">Prime Computer, Inc.</organization>
	</author>
	<author initials="P." surname="Mockapetris" fullname="Paul Mockapetris">
		<organization abbrev="ISI">USC Information Sciences Institute</organization>
	</author>
	<date month="October" year="1990" />
	</front>
	<seriesInfo name="RFC" value="1183" />
	<format type="TXT" octets="23788" target="http://www.ietf.org/rfc/rfc1183.txt" />
  </reference>

  <reference anchor="AFS">
	<front>
		<title>An Overview of the Andrew File System"</title>
		<author initials="J.H." surname="Howard" fullname="John H. Howard">
		  <organization abbrev="CMU ITC">"Carnegie Mellon University, Information Technology Center"</organization>
		</author>
		<date month="February" year="1988" />
	</front>
	<seriesInfo name="Proc. USENIX Winter Tech. Conf." value="Dallas" />
  </reference>

</references>

    </back>

</rfc>

