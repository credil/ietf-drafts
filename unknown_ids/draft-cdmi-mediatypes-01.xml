<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" []>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" docName="draft-cdmi-mediatypes-01" ipr="trust200902">

  <!-- ***** FRONT MATTER ***** -->

  <front>

    <title abbrev="CDMI Media Types">Cloud Data Management Interface (CDMI) Media Types</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Krishna Sankar" initials="K" role="editor"
            surname="Sankar">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>170 W.Tasman Drive</street>

          <!-- Reorder these if your country does things differently -->

          <city>San Jose</city>

          <region>CA</region>

          <code>95134</code>

          <country>USA</country>
        </postal>

        <phone>(408) 853 8475</phone>

        <email>ksankar@cisco.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>
	<author fullname="Arnold Jones" initials="A"
            surname="Jones">
      <organization>SNIA</organization>

      <address>
        <postal>
          <street>4410 ArrowsWest Drive </street>

          <!-- Reorder these if your country does things differently -->

          <city>Colorado Springs</city>

          <region>CO</region>

          <code>80907</code>

          <country>USA</country>
        </postal>

        <phone>(407) 574 7273</phone>

        <email>arnold.jones@snia.org</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>
    <date month="September" year="2010" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>CDMI Media Type</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document describes several Internet media types defined for the Cloud Data Management Interface (CDMI) by the Storage Networking Industry Association (SNIA). The media types are:</t>
                   <t>
		<list style="symbols">
          <t>application/cdmi-domain</t>
          <t>application/cdmi-capability</t>
          <t>application/cdmi-container</t>
          <t>application/cdmi-object and</t>
          <t>application/cdmi-queue</t></list></t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The Cloud Data Management Interface (CDMI) <xref target='CDMI-1'/> developed by the Storage Networking Industry Association (SNIA) is the functional interface that applications will use to create, retrieve, update and delete data elements from the cloud. As part of this interface the client will be able to discover the capabilities of the cloud storage offering and use this interface to manage containers and the data that is placed in them. In addition, metadata can be set on containers and their contained data elements through this interface.</t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section title="Cloud Data Management Domain and its Relevance">
      <t>A storage cloud is a storage service hosted either on-premise or off-premise, definitely across a network. An important part of the cloud model, in general, is the concept of a pool of resources that is drawn from, on demand, in small increments (smaller than what one would typically purchase by buying equipment). 	By abstracting data storage behind a set of service interfaces and delivering it on demand, a wide range of actual offerings and implementations are possible. The only type of storage that is excluded from this definition is that which is delivered, not based on demand, but on fixed capacity increments.</t>
		<t> The CDMI defines a set of functional interfaces (data paths) and management interfaces (control paths) to create, retrieve, update, and delete data
		elements from a storage cloud. Another important concept in this standard is that of metadata. When managing large amounts of data with differing requirements, metadata is a convenient mechanism to express those requirements in such a way that underlying data services can differentiate their treatment of the data to meet those requirements. CDMI also defines an extensible metadata system for storage clouds.</t>
		<t>As part of the CDMI interface, the client will be able to discover the capabilities of the cloud storage offering and to use this interface to manage containers and the data that is placed in them. In addition, data system metadata can be set on containers and their contained data elements through this interface.</t>
		<t> The hierarchy that CDMI defines is as follows:
			<list style="symbols">
				<t> The basic element of storage is an object</t>
				<t> Objects are stored in a container hierarchy</t>
				<t> CDMI also defines an object, called a queue, which has special properties for in-order, first in, first-out
				creation and fetching of queue objects, similar to a container of data objects.</t>
				<t> A cloud offering can also support domains, which allow administrative ownership to be associated with stored objects. Domains can also be
				hierarchical, allowing for corporate domains with multiple children domains for departments or individuals. The domain concept is also used to map ACLs to principals as well as to aggregate usage data that is used to bill, meter, and monitor cloud usage. (Note: The CDMI "domain" defined here is not a DNS domain name as specified in RFCs 1023 and 1024.)</t>
	          <t>Finally, a capabilities resource and associated URI allows a client to discover the capabilities of the
				offering and its implementation of CDMI.</t></list></t>
    </section>

    <section title="Processing Guidelines">
      	<t>In this section we summarize the processing of each media type. In this document we provide only the essential information. The CDMI specification <xref target='CDMI-1'/>  which has more details and appropriate examples, is the final authority on the processing aspects.</t>
    	<section title="Type : application/cdmi-object">
      		<t>A CDMI object is the basic storage element in a CDMI system and are analogous to files within a filesystem. The object is represented in the CDMI interface in JSON <xref target='JSON-1'/> format. <xref target="RFC4627">RFC 4627</xref> defines the JSON format. Each data object has a set of well-defined fields that include a single value and optional metadata. The implementations are free to store the data in any form they choose, but the application/cdmi-object should be represented in the CDMI interface as defined in section 8 of the CDMI specification.</t>
    	</section>
    	<section title="Type : application/cdmi-container">
      		<t>Container objects are the fundamental grouping of stored data within CDMI and is analogous to directories within a filesystem. Each container has zero or more child objects and a set of well-defined fields that include standardized and optional metadata. The implementations are free to represent the container in amy form they choose, but the application/cdmi-container should be represented in the CDMI interface as defined in section 9 of the CDMI specification.</t>
    	</section>
    	<section title="Type : application/cdmi-domain">
      		<t>Domain objects represent the concept of administrative ownership of stored data within a CDMI storage system. A CDMI offering may include a hierarchy of domains that provide access to domain-related information within a CDMI context. This domain hierarchy is a series of CDMI objects that correspond to parent and child domains, with each domain corresponding to logical groupings of objects that are to be managed together. Section 10 of the CDMI specification details the information content, representation and processing on domain objects</t>
    	</section>
    	<section title="Type : application/cdmi-capability">
      		<t>Capability objects are a special class of container object that allow a CDMI client to discover what subset of the CDMI standard is implemented by a CDMI provider. For each URI in a CDMI system, the set of interactions that the system is capable of performing against that URI are described by the presence of named "capabilities". Each capability present for a given URI indicates what functionality the cloud storage system will allow against that URI. Capabilities are always static. Section 12 of the CDMI specification details the representation and processing of capability objects</t>
    	</section>
    	<section title="Type : application/cdmi-queue">
      		<t>Queues are a special class of container object and are used to provide first-in, first-out access when storing and retrieving data. A queue writer PUTs objects to the queue, and a queue reader GETs objects from the queue, acknowledging the receipt of the last object that it received. Queuing provides a simple mechanism for one or more writers to send data to a single reader in a reliable way. If supported by the cloud storage system, cloud clients create the queue objects by using the same mechanism used to create data objects. Section 11 of the CDMI specification details the operations and processing of queue objects</t>
    	</section>
    </section>

	<section title="Transport Considerations">
  		<t>The CDMI uses HTTP (RFC 2616) transport and does not make sense outside the HTTP realm. We do not expect the CDMI to use other transports like SMTP (RFC2821) or raw TCP (RFC 793) protocols.</t>
	</section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The authors wish to acknowledge the guidance and wisdom from Mark Carlson, Peter Saint-Andre, comments from Patrick Faltstrom and the SNIA CDMI cloud twg for all the insightful discussions and ideas.</t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes a request to IANA to register the following media types :
		<list style="symbols">
          <t>application/cdmi-domain</t>
          <t>application/cdmi-capability</t>
          <t>application/cdmi-container</t>
          <t>application/cdmi-object and</t>
          <t>application/cdmi-queue</t></list></t>
		
	  <section title="Media Type application/cdmi-capability">
		<t>Type name: application</t>
	   <t>Subtype name: cdmi-capability</t>
	   <t>Required parameters: none</t>
	   <t>Optional parameters: none</t>
	   <t>Encoding considerations: The "charset" MIME parameter, if present,
	      MUST be set to "UTF-8", as defined in <xref target='RFC3629'/>. The primary transport is HTTP and a base64 encoding is appropriate when transporting such objects over other transports like email.</t>
	   <t>Security considerations: See Section 7 of draft-cdmi-mediatypes-01</t>
	   <t>Interoperability considerations: none</t>
	   <t>Published specification: draft-cdmi-mediatypes-01</t>
	   <t>Applications that use this media type: Implementations of the Cloud Data
	      Management Interface (CDMI) defined by the Storage Networking Industry
	      Association (SNIA)</t>
	   <t>Additional information:
		<list>
	     <t>Magic number(s): none</t>
	     <t>File extension(s): none</t>
	     <t>Macintosh file type code(s): none</t>
	    </list>
	   </t>
	   <t>Person and email address to contact for further information:
	      Arnold Jones arnold.jones@snia.org</t>
	   <t>Intended usage: COMMON</t>
	   <t>Restrictions on usage: none</t>
	   <t>Author: SNIA Cloud Storage Initiative cloudtwg@snia.org</t>
       <t>Change controller: SNIA Cloud Storage Initiative cloudtwg@snia.org</t>	   
	  </section>

	  <section title="Media Type application/cdmi-container">
	  	<t>Type name: application</t>
	   <t>Subtype name: cdmi-container</t>
	   <t>Required parameters: none</t>
	   <t>Optional parameters: none</t>
	   <t>Encoding considerations: The "charset" MIME parameter, if present,
	      MUST be set to "UTF-8", as defined in <xref target='RFC3629'/>. The primary transport is HTTP and a base64 encoding is appropriate when transporting such objects over other transports like email.</t>
	   <t>Security considerations: See Section 7 of draft-cdmi-mediatypes-01</t>
	   <t>Interoperability considerations: none</t>
	   <t>Published specification: draft-cdmi-mediatypes-01</t>
	   <t>Applications that use this media type: Implementations of the Cloud Data
	      Management Interface (CDMI) defined by the Storage Networking Industry
	      Association (SNIA)</t>
	   <t>Additional information:
		<list>
	     <t>Magic number(s): none</t>
	     <t>File extension(s): none</t>
	     <t>Macintosh file type code(s): none</t>
	    </list>
	   </t>
	   <t>Person and email address to contact for further information:
	      Arnold Jones arnold.jones@snia.org</t>
	   <t>Intended usage: COMMON</t>
	   <t>Restrictions on usage: none</t>
	   <t>Author: SNIA Cloud Storage Initiative cloudtwg@snia.org</t>
       <t>Change controller: SNIA Cloud Storage Initiative cloudtwg@snia.org</t>	   
	</section>

	  <section title="Media Type application/cdmi-domain">
		<t>Type name: application</t>
	   <t>Subtype name: cdmi-domain</t>
	   <t>Required parameters: none</t>
	   <t>Optional parameters: none</t>
	   <t>Encoding considerations: The "charset" MIME parameter, if present,
	      MUST be set to "UTF-8", as defined in <xref target='RFC3629'/>. The primary transport is HTTP and a base64 encoding is appropriate when transporting such objects over other transports like email.</t>
	   <t>Security considerations: See Section 7 of draft-cdmi-mediatypes-01</t>
	   <t>Interoperability considerations: none</t>
	   <t>Published specification: draft-cdmi-mediatypes-01</t>
	   <t>Applications that use this media type: Implementations of the Cloud Data
	      Management Interface (CDMI) defined by the Storage Networking Industry
	      Association (SNIA)</t>
	   <t>Additional information:
		<list>
	     <t>Magic number(s): none</t>
	     <t>File extension(s): none</t>
	     <t>Macintosh file type code(s): none</t>
	    </list>
	   </t>
	   <t>Person and email address to contact for further information:
	      Arnold Jones arnold.jones@snia.org</t>
	   <t>Intended usage: COMMON</t>
	   <t>Restrictions on usage: none</t>
	   <t>Author: SNIA Cloud Storage Initiative cloudtwg@snia.org</t>
       <t>Change controller: SNIA Cloud Storage Initiative cloudtwg@snia.org</t>	   
	  </section>

	  <section title="Media Type application/cdmi-object">
	  	<t>Type name: application</t>
	   <t>Subtype name: cdmi-object</t>
	   <t>Required parameters: none</t>
	   <t>Optional parameters: none</t>
	   <t>Encoding considerations: The "charset" MIME parameter, if present,
	      MUST be set to "UTF-8", as defined in <xref target='RFC3629'/>. The primary transport is HTTP and a base64 encoding is appropriate when transporting such objects over other transports like email.</t>
	   <t>Security considerations: See Section 7 of draft-cdmi-mediatypes-01</t>
	   <t>Interoperability considerations: none</t>
	   <t>Published specification: draft-cdmi-mediatypes-01</t>
	   <t>Applications that use this media type: Implementations of the Cloud Data
	      Management Interface (CDMI) defined by the Storage Networking Industry
	      Association (SNIA)</t>
	   <t>Additional information:
		<list>
	     <t>Magic number(s): none</t>
	     <t>File extension(s): none</t>
	     <t>Macintosh file type code(s): none</t>
	    </list>
	   </t>
	   <t>Person and email address to contact for further information:
	      Arnold Jones arnold.jones@snia.org</t>
	   <t>Intended usage: COMMON</t>
	   <t>Restrictions on usage: none</t>
	   <t>Author: SNIA Cloud Storage Initiative cloudtwg@snia.org</t>
       <t>Change controller: SNIA Cloud Storage Initiative cloudtwg@snia.org</t>	   
	</section>

	  <section title="Media Type application/cdmi-queue">
	 	<t>Type name: application</t>
	   <t>Subtype name: cdmi-queue</t>
	   <t>Required parameters: none</t>
	   <t>Optional parameters: none</t>
	   <t>Encoding considerations: The "charset" MIME parameter, if present,
	      MUST be set to "UTF-8", as defined in <xref target='RFC3629'/>. The primary transport is HTTP and a base64 encoding is appropriate when transporting such objects over other transports like email.</t>
	   <t>Security considerations: See Section 7 of draft-cdmi-mediatypes-01</t>
	   <t>Interoperability considerations: none</t>
	   <t>Published specification: draft-cdmi-mediatypes-01</t>
	   <t>Applications that use this media type: Implementations of the Cloud Data
	      Management Interface (CDMI) defined by the Storage Networking Industry
	      Association (SNIA)</t>
	   <t>Additional information:
		<list>
	     <t>Magic number(s): none</t>
	     <t>File extension(s): none</t>
	     <t>Macintosh file type code(s): none</t>
	    </list>
	   </t>
	   <t>Person and email address to contact for further information:
	      Arnold Jones arnold.jones@snia.org</t>
	   <t>Intended usage: COMMON</t>
	   <t>Restrictions on usage: none</t>
	   <t>Author: SNIA Cloud Storage Initiative cloudtwg@snia.org</t>
       <t>Change controller: SNIA Cloud Storage Initiative cloudtwg@snia.org</t>	   
	 </section>

    </section>

    <section anchor="Security" title="Security Considerations">
      <t>This section was developed with <xref target="RFC3552">RFC 3552</xref> as guide. CDMI is an application interface and the relevant security considerations include confidentiality, integrity, access control and audit. Transport and end point security artifacts like DDoS are orthogonal and domains like non-repudiation are left to the application that employs this interface</t>
    	<section title="Confidentiality and Integrity">
      		<t>The Confidentiality and integrity of the CDMI exchanges are determined by the application that uses the interface.CDMI does not contain any specific mechanisms and relies on transport mechanisms like https <xref target='RFC2818'/> for confidentiality and integrity of the messages across the network</t>
    	</section>
    	<section title="Access Control">
      		<t>The access control of the CDMI end point URLs are beyond this specification. If required applications should use appropriate URL authentication and authorization techniques.</t>
			<t> For fine grained control of the CDMI objects, the CDMI specification contains the Access Control Lists (ACL) and Access Control Entries (ACE). These are described fully i section 16.1 of the CDMI specification</t>
    	</section>
    	<section title="Audit">
      		<t>The CDMI specification has a set of metadata fields as explained in Section 16.3 to facilitate the access and other audit markers. The CDMI metadata system is extensible and the implementations can add more metadata as required by the security posture of the domain.</t>
    	</section>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
    
<reference anchor='RFC2119'>
<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>

<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='http://www.rfc-editor.org/rfc/rfc2119.txt' />
<format type='HTML' octets='17491' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>

<reference anchor='RFC3629'>
<front>
<title>UTF-8, a transformation format of ISO 10646</title>
<author initials='F.' surname='Yergeau' fullname='F. Yergeau'>
<organization /></author>
<date year='2003' month='November' />
<abstract>
<t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems.  The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo.  UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values.  This memo obsoletes and replaces RFC 2279.</t></abstract></front>

<seriesInfo name='STD' value='63' />
<seriesInfo name='RFC' value='3629' />
<format type='TXT' octets='33856' target='http://www.rfc-editor.org/rfc/rfc3629.txt' />
</reference>


<reference anchor='RFC4627'>
<front>
<title>The application/json Media Type for JavaScript Object Notation (JSON)</title>
<author initials='D.' surname='Crockford' fullname='D. Crockford'>
<organization /></author>
<date year='2006' month='July' />
<abstract>
<t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.  This memo provides information for the Internet community.</t></abstract></front>
<seriesInfo name='RFC' value='4627' />
<format type='TXT' octets='16319' target='http://www.rfc-editor.org/rfc/rfc4627.txt' />
</reference>

      <reference anchor="CDMI-1"
	             target="http://www.snia.org/tech_activities/standards/curr_standards/cdmi">
        <!-- the following is the minimum to make xml2rfc happy -->

        <front>
          <title>Cloud data management Interface Version 1.0</title>

          <author>
            <organization>SNIA</organization>
          </author>

          <date year="2010" />
        </front>
      </reference>

      <reference anchor="JSON-1"
	             target="http://www.json.org/">
        <!-- the following is the minimum to make xml2rfc happy -->

        <front>
          <title>JavaScript Object Notation</title>
          <author>
            <organization>json.org</organization>
          </author>
          <date year="2006" />
        </front>
      </reference>
    </references>

    <references title="Informative References">
      

<reference anchor='RFC3552'>
<front>
<title>Guidelines for Writing RFC Text on Security Considerations</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'>
<organization /></author>
<author initials='B.' surname='Korver' fullname='B. Korver'>
<organization /></author>
<date year='2003' month='July' />
<abstract>
<t>All RFCs are required to have a Security Considerations section.  Historically, such sections have been relatively weak.  This document provides guidelines to RFC authors on how to write a good Security Considerations section.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract></front>

<seriesInfo name='BCP' value='72' />
<seriesInfo name='RFC' value='3552' />
<format type='TXT' octets='110393' target='http://www.rfc-editor.org/rfc/rfc3552.txt' />
</reference>

<reference anchor='RFC2818'>
<front>
<title>HTTP Over TLS</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'>
<organization /></author>
<date year='2000' month='May' />
<abstract>
<t>This memo describes how to use Transport Layer Security (TLS) to secure Hypertext Transfer Protocol (HTTP) connections over the Internet.  This memo provides information for the Internet community.</t></abstract></front>

<seriesInfo name='RFC' value='2818' />
<format type='TXT' octets='15170' target='http://www.rfc-editor.org/rfc/rfc2818.txt' />
</reference>

    </references>

    <!-- Change Log

v00 2006-03-15  EBD   Initial version

v01 2006-04-03  EBD   Moved PI location back to position 1 -
                      v3.1 of XMLmind is better with them at this location.
v02 2007-03-07  AH    removed extraneous nested_list attribute,
                      other minor corrections
v03 2007-03-09  EBD   Added comments on null IANA sections and fixed heading capitalization.
                      Modified comments around figure to reflect non-implementation of
                      figure indent control.  Put in reference using anchor="DOMINATION".
                      Fixed up the date specification comments to reflect current truth.
v04 2007-03-09 AH     Major changes: shortened discussion of PIs,
                      added discussion of rfc include.
v05 2007-03-10 EBD    Added preamble to C program example to tell about ABNF and alternative 
                      images. Removed meta-characters from comments (causes problems).  -->
  </back>
</rfc>
