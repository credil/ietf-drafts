<?xml version = '1.0'?>
<?rfc rfcedstyle='yes'?>
<?rfc rfcprocack='yes'?>
<?rfc toc='yes'?>
<?rfc symrefs='yes'?>
<!DOCTYPE rfc SYSTEM "../xml2rfc-1.35pre1/rfc2629.dtd" [
      <!ENTITY rfc2119     PUBLIC '' '../rfc-bib/reference.RFC.2119.xml'>
      <!ENTITY rfc3958     PUBLIC '' '../rfc-bib/reference.RFC.3958.xml'>
      <!ENTITY rfc4282     PUBLIC '' '../rfc-bib/reference.RFC.4282.xml'>
      <!ENTITY radius-dtls PUBLIC '' '../i-d-bib/reference.I-D.draft-dekok-radext-dtls-01.xml'>
      <!ENTITY radius-tls  PUBLIC '' '../i-d-bib/reference.I-D.draft-ietf-radext-radsec-06.xml'>
    ]>
<rfc ipr='trust200902' docName='draft-ietf-radext-dynamic-discovery-02'
category='exp'>
  <front>
	  <title abbrev="RADIUS Peer Discovery" >NAI-based Dynamic Peer
Discovery for RADIUS over TLS and DTLS</title>
    <author fullname="Stefan Winter" initials="S." surname="Winter" >
	<organization abbrev="RESTENA" >
		  Fondation RESTENA
	</organization>
	<address>
		<postal>
			<street>6, rue Richard Coudenhove-Kalergi</street>
			<city>Luxembourg</city>
			<code>1359</code>
			<country>LUXEMBOURG</country>
		</postal>
		<phone>+352 424409 1</phone>
		<facsimile>+352 422473</facsimile>
		<email>stefan.winter@restena.lu</email>
		<uri>http://www.restena.lu.</uri>
	</address>
    </author>
    <author fullname="Mike McCauley" initials="M." surname="McCauley" >
	    <organization abbrev="OSC" >
		    Open Systems Consultants
	    </organization>
	    <address>
		    <postal>
			    <street>9 Bulbul Place</street>
			    <city>Currumbin Waters</city>
			    <code>QLD 4223</code>
			    <country>AUSTRALIA</country>
		    </postal>
		    <phone>+61 7 5598 7474</phone>
		    <facsimile>+61 7 5598 7070</facsimile>
		    <email>mikem@open.com.au</email>
		    <uri>http://www.open.com.au.</uri>
	    </address>
    </author>
    <date day="05" month="March" year="2010" />
    <area>Operations and Management Area</area>
    <workgroup>RADIUS Extensions Working Group</workgroup>
    <keyword>RADIUS</keyword>
    <keyword>AAA</keyword>
    <keyword>Security</keyword>
    <keyword>Reliability</keyword>
    <keyword>DNS</keyword>
    <abstract>
	    <t>This document specifies a means to find authoritative AAA servers
for a given NAI realm. It can be used in conjunction with RADIUS over TLS and
RADIUS over DTLS.</t>
    </abstract>
  </front>
  <middle>
    <section title="Introduction" anchor="intro">
	<section title="Requirements Language" anchor="reqlang">
		<t>In this document, several words are used to signify the
requirements of the specification.  The key words "MUST", "MUST NOT",
"REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY",
and "OPTIONAL" in this document are to be interpreted as described in RFC 2119.
<xref target="RFC2119" /></t>
	</section>
	<section title="Terminology" anchor="terms">
		<t>RADIUS/TLS Client: a RADIUS/TLS <xref target="I-D.ietf-radext-radsec" />
instance which initiates a new connection.</t>
		<t>RADIUS/TLS Server: a RADIUS/TLS <xref target="I-D.ietf-radext-radsec" />
instance which listens on a RADIUS/TLS port and accepts new connections</t>
		<t>RADIUS/TLS node: a RADIUS/TLS client or server</t>
	</section>
    </section>
    <section title="DNS-based NAPTR/SRV Peer Discovery" anchor="dns">
    <section title="Applicability" anchor="applicability">
	    <t>
		    Dynamic server discovery as defined in this document is only
applicable for AAA transactions where a AAA server receives a request with a NAI
realm for which no home AAA server is known. I.e. where static server
configuration does not contain a known home authentication server, or where the
server configuration explicitly states that the realm destination is to be
looked up dynamically. Furthermore, it is only applicable for new user sessions,
i.e. for the initial Access-Request. Subsequent messages concerning this
session, for example Access-Challenges, Access-Accepts, Accounting Messages or
Change-of-Authorisation messages use the previously-established communication
channel between client and server.
	    </t>
	    </section>
	    <section title="DNS RR definition" anchor="rr-def">
	    <t>
		    DNS definitions of RADIUS/TLS servers can be either S-NAPTR
records (see <xref target="RFC3958" />) or SRV records. When both are defined, the resolution algorithm prefers
S-NAPTR results (see section <xref target="algo" /> below). </t>
<t>This specification defines two S-NAPTR service
tag: a general-purpose tag "nai-roaming" and a special-purpose tag "eduroam" for the eduroam roaming consortium.
This specification defines two S-NAPTR protocol tags: "radius.tls" for RADIUS
over TLS <xref target="I-D.ietf-radext-radsec" /> and "radius.dtls" for RADIUS over DTLS 
<xref target="I-D.dekok-radext-dtls" />.</t>

<t>This specification defines the SRV prefix "_radiustls._tcp" for RADIUS over TLS <xref target="I-D.ietf-radext-radsec" />
and "_radiustls._udp" for RADIUS over DTLS <xref target="I-D.dekok-radext-dtls" />. It is
expected that in most cases, the label used for the records is the DNS
representation (punycode) of the literal realm name for which the server is the
AAA server.</t>
	    <t>
		    However, arbitrary other labels may be used if, for example,
a roaming consortium uses realm names which are not associated to DNS names or
special-purpose consortia where a globally valid discovery is not a use case.
Such other labels require a consortium-wide agreement about the transformation
from realm name to lookup label.
	    </t>
	    <t>Examples:
		    <list style="letters">
			    <t>A general-purpose AAA server for realm
example.com might have DNS entries as follows:
			    <list style="empty">
				    <t>example.com. IN NAPTR 50 50 "s"
"nai-roaming:radius.tls" "" _radiustls._tcp.foobar.example.com.</t>
				    <t>_radiustls._tcp.example.com. IN SRV 0 10
2083 radsec.example.com.</t>
			    </list>
			    </t>
			    <t>The consortium "foo" provides roaming services for
its members only. The realms used are of the form enterprise-name.example. The
consortium operates a special purpose DNS server for the (private) TLD
"example" which all AAA servers use to resolve realm names. "Bad, Inc." is
part of the consortium. On the consortium's DNS server, realm
bad.example might have the following DNS entries:
				    <list style="empty">
					    <t>bad.example IN NAPTR 50
50 "a" "nai-roaming:radius.dtls" "" "very.bad.example"</t>
				    </list>
			    </t>
			    <t>the eduroam consortium uses realms based on DNS,
but provides its services to a closed community only. However, a AAA domain
participating in eduroam may also want to expose AAA services to other,
general-purpose, applications (on the same or other AAA servers). Due to that,
the eduroam consortium uses the service tag "eduroam" and eduroam AAA
servers use this tag to look up other eduroam servers. An eduroam participant example.org which also
provides general-purpose AAA on a different server uses the general "nai-roaming" tag:
				    <list style="empty">
					    <t>example.org. IN NAPTR 50
50 "s" "eduroam:radius.tls" "" _radiustls._tcp.eduroam.example.org.</t>
					    <t>example.org. IN NAPTR 50 50 "s"
"nai-roaming:radius.tls" "" _radiustls._tcp.aaa.example.org</t>
					    <t>_radiustls._tcp.eduroam.example.org.
IN SRV 0 10 2083 aaa-eduroam.example.org.</t>
					    <t>_radiustls._tcp.aaa.example.org. IN SRV 0
10 2083 aaa-default.example.org.</t>
				    </list>
			    </t>
		    </list>
	    </t>
    </section>

    <section title="Realm to AAA server resolution algorithm" anchor="algo">
	    <t>Input I to the algorithm is a User-Name in the form of a NAI as
defined in <xref target="RFC4282" /> as extracted from the User-Name attribute
in an Access-Request. Output O of the algorithm is a set of hostname:port and an
associated order/preference; the set can be empty.</t>
	    <t>
		    Note well: The attribute User-Name does not necessarily
contain well-formed NAIs and may not even contain well-formed UTF-8 strings.
This document describes server discovery only for well-formed NAIs in UTF-8
encoding. The result of all other possible contents of User-Name is unspecified;
this includes, but is not limited to:
		    <list>
		      <t>Usage of separators other than @</t>
		      <t>Usage of multiple @ separators</t>
		      <t>Encoding of User-Name in local encodings</t>
		    </list>
	    </t>
	    <t>The algorithm to determine the AAA server to contact is as
follows:
		    <list style="numbers">
			    <t>Determine P = (position of first "@" character)
in I.</t>
			    <t>generate R = (substring from P+1 to end of I)</t>
			    <t>Optional: modify R according to agreed consortium
procedures</t>
			    <t>Using the host's name resolution library, perform
a NAPTR query for R. If no result, continue at step 9. If name resolution returns with error, O = { }. Terminate.</t>
			    <t>Extract NAPTR records with service tag "nai-roaming" (replace with other service tags where applicable).</t>
			    <t>If no result, continue at step 9.</t>
			    <t>Evaluate NAPTR result(s) for desired protocol tag, perform subsequent lookup
steps until lookup yields one or more hostnames. O = (set of {Order/Preference,
hostname:port} for all lookup results).</t>
			    <t>Terminate.</t>
			    <t>Generate R' = (prefix R with "_radiustls._tcp." or "_radiustls._udp")</t>
			    <t>Using the host's name resolution library, perform
SRV lookup with R' as label.</t>
			    <t>If name resolution returns with error, O = { }.
Terminate.</t>
			    <t>If no result, O = {}; terminate.</t>
			    <t>Perform subsequent lookup steps until lookup
yields one or more hostnames. O = (set of {Order/Preference, hostname} for all
hostnames). Terminate.</t>
		    </list>
	    </t>
	    <t>
	    Example: Assume a user from the Technical University of Munich,
Germany, has a RADIUS User-Name of "foobar@tu-m[U+00FC]nchen.example". If DNS
contains the following records:
	    <list style="empty">
		    <t>xn--tu-mnchen-t9a.example. IN NAPTR 50 50 "s"
"nai-roaming:radius.tls" "" _radiustls._tcp.xn--tu-mnchen-t9a.example.</t>
		    <t>xn--tu-mnchen-t9a.example. IN NAPTR 50 50 "s"
"fooservice:bar.dccp" "" _abc._def.xn--tu-mnchen-t9a.example.</t>
		    <t>_radiustls._tcp.xn--tu-mnchen-t9a.example. IN SRV 0 10 2083
radsec.xn--tu-mnchen-t9a.example.</t>
		    <t>_radiustls._tcp.xn--tu-mnchen-t9a.example. IN SRV 0 20 2083
backup.xn--tu-mnchen-t9a.example.</t>
		    <t>radsec.xn--tu-mnchen-t9a.example. IN AAAA
2001:0DB8::202:44ff:fe0a:f704</t>
		    <t>radsec.xn--tu-mnchen-t9a.example. IN A    192.0.2.3</t>
		    <t>backup.xn--tu-mnchen-t9a.example. IN A    192.0.2.7</t>
	    </list>
		    Then the algorithm executes as follows, with I =
"foobar@tu-m[U+00FC]nchen.example", and no consortium name mangling in use:
		    <list style="numbers">
			    <t>P = 7</t>
			    <t>R = "tu-m[U+00FC]nchen.example"</t>
			    <t>NOOP</t>
			    <t>Query result: ( 50 50 "s" "nai-roaming:radius.tls" "" _radiustls._tcp.xn--tu-mnchen-t9a.example. ; 50 50 "s"
"fooservice:bar.dccp" "" _abc._def.xn--tu-mnchen-t9a.example. )</t>
			    <t>Result: 50 50 "s" "nai-roaming:radius.tls" "" _radiustls._tcp.xn--tu-mnchen-t9a.example.</t>
			    <t>NOOP</t>
			    <t>O =
{(10,radsec.xn--tu-mnchen-t9a.example.:2083),(20,backup.xn--tu-mnchen-t9a.
example.:2083)}</t>
			    <t>Terminate.</t>
			    <t>(not executed)</t>
			    <t>(not executed)</t>
			    <t>(not executed)</t>
			    <t>(not executed)</t>
                            <t>(not executed)</t>
		    </list>
		    
		    The implementation will then attempt to connect to two
servers, with preference to radsec.xn--tu-mnchen-t9a.example.:2083, using either
the AAAA or A addresses depending on the host configuration and its IP stack's
capabilities.</t>
    </section>
</section>
    <section title="Security Considerations" anchor="sec">
    <t>
	    When using DNS without security, the replies to NAPTR, SRV and
A/AAAA requests as described in section <xref target="dns" /> can not be
trusted. RADIUS transports have an out-of-DNS-band means to verify that the
discovery attempt led to the intended target (TLS/DTLS: ceritifcate verification
or TLS shared secret ciphers; UDP/TCP: the RADIUS shared secret) and are safe
from DNS-based redirection attacks. [Note: assuming here that a hypothetical
RADIUS/UDP SRV discovery will NOT deliver the shared secret in the DNS
response!]
    </t>
    <t>
	    The discovery process is always susceptible to bidding down attacks
if a realm has SRV records for RADIUS/UDP and/or RADIUS/TCP as well as for
RADIUS/TLS and/or RADIUS/DTLS. While the SRV query will expose both transports,
an attacker in the routing path might suppress the subsequent A/AAAA results for
the TLS or DTLS peer and trick the initiating peer into using the weakly
protected UDP or TCP transports. The use of DNSSEC can not fully mitigate this
attack, since it does not provide a means to detect packet suppression. The only
way to disable such bidding down attacks is by intiating connections only to the
peer(s) which match or exceed a configured minimum security level. All
implementations SHOULD provide a means to configure the administratively desired
minimum security level.
    </t>
    </section>
    <section title="IANA Considerations" anchor="iana">
	    <t>
		    This document requests IANA registration of the following S-NAPTR parameters:
		    <list style="symbols">
		      <t>Application Service Tags
			<list style="symbols">
			   <t>nai-roaming</t>
			   <t>eduroam</t>
			</list>
		      </t>
		      <t>Application Protocol Tags
			<list style="symbols">
			   <t>radius.tls</t>
			   <t>radius.dtls</t>
			</list>
		      </t>
		    </list>
	    </t>    
    </section>
</middle>
<back>
	<references title="Normative References">
		&rfc2119;
		&rfc3958;
		&rfc4282;
		&radius-dtls;
		&radius-tls;
	</references>
<!--	<references title="Informative References">
	<reference anchor="radiator-manual"
target="http://www.open.com.au/radiator/ref.html">
		<front>
			<title>Radiator Radius Server - Installation and
Reference Manual</title>
			<author>
				<organization abbrev="OSC">Open System
Consultants</organization>
			</author>
			<date year="2006"/>
		</front>
		<format type="TXT"
target="http://www.open.com.au/radiator/ref.html"/>
	</reference>
</references> -->
</back>
</rfc>
