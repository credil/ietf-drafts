<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY netconf PUBLIC '' 
        'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-netconf-4741bis.xml'>
    <!ENTITY sshconn PUBLIC '' 
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4254.xml'>
    <!ENTITY sshtrans PUBLIC '' 
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4253.xml'>
    <!ENTITY sshauth PUBLIC '' 
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4252.xml'>
    <!ENTITY sshnum PUBLIC '' 
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4250.xml'>
    <!ENTITY rfc2119 PUBLIC '' 
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
    <!ENTITY rfc2629 PUBLIC '' 
        'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml'>
]>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="6"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc ipr="trust200902" obsoletes="4742" category="std"  docName="draft-ietf-netconf-rfc4742bis-04.txt">
    <front>
    <title abbrev="NETCONF over SSH">Using the NETCONF Configuration Protocol over Secure Shell (SSH)</title>
    <author initials="M." surname="Wasserman" fullname="Margaret Wasserman">
        <organization>Painless Security, LLC</organization>
        <address>
        <postal>
            <street>356 Abbott Street</street>
            <city>North Andover</city> <region>MA</region>
            <code>01845</code>
            <country>USA</country>
        </postal>
        <phone>+1 781 405-7464</phone>
        <email>mrw@painless-security.com</email>
        <uri>http://www.painless-security.com</uri>
        </address>
    </author>
    <author fullname="Ted Goddard" initials="T." surname="Goddard">
        <organization>ICEsoft Technologies, Inc.</organization>
        <address>
        <postal>
            <street>Suite 300, 1717 10th St. NW</street>
            <city>Calgary</city> <region>AB</region>
            <code>T2M 4S2</code>
            <country>Canada</country>
        </postal>
        <phone>+1 403 663-3322</phone>
        <email>ted.goddard@icesoft.com</email>
        <uri>http://www.icesoft.com</uri>
        </address>
    </author>

    <date month="October" year="2010" />

    <area>Operations and Management</area>
    <workgroup>Network Working Group</workgroup>
    <keyword>I-D</keyword>
    <keyword>Internet-Draft</keyword>
    <keyword>XML</keyword>
    <keyword>Extensible Markup Language</keyword>
    <keyword>configuration</keyword>
    <keyword>xmlconf</keyword>
    <keyword>netconf</keyword>

<abstract>
<t>
This document describes a method for invoking and running the NETCONF
protocol within a Secure Shell (SSH) session as an SSH subsystem.
</t>
</abstract>
    </front>

    <middle>
    <section title="Introduction">
<t>
The NETCONF protocol <xref target="I-D.ietf-netconf-4741bis"/> is an
XML-based protocol used to manage the configuration of networking
equipment.  NETCONF is defined to be session-layer and transport
independent, allowing mappings to be defined for multiple
session-layer or transport protocols.  This document defines how
NETCONF can be used within a Secure Shell (SSH) session, using the SSH
connection protocol <xref target="RFC4254"/> over the SSH transport
protocol <xref target="RFC4253"/>.  This mapping will allow NETCONF to be
executed from a secure shell session by a user or application.
</t>
<t>
Although this document gives specific examples of how NETCONF messages
are sent over an SSH connection, use of this transport is not
restricted to the messages shown in the examples below.  This
transport can be used for any NETCONF message.
</t>
    </section>
    <section title="Requirements Terminology">
<t>
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in RFC 2119 <xref
target="RFC2119"/>.
</t>
    </section>
    <section title="Starting NETCONF over SSH">
<t>
To run NETCONF over SSH, the SSH client will first establish an SSH
transport connection using the SSH transport protocol, and the
SSH client and SSH server will exchange keys for message integrity and
encryption.  The SSH client will then invoke the "ssh-userauth" service 
to authenticate the user, as described in the SSH authentication 
protocol <xref target="RFC4252"/>. Once the user 
has been successfully authenticated, the SSH client will invoke the 
"ssh-connection" service, also known as the SSH connection
protocol.
</t>
<t>
How the NETCONF Server extracts the SSH user name from the SSH layer
is implementation-dependent.
</t>
<t>
After the ssh-connection service is established, the SSH client will open
a channel of type "session", which will result in an SSH session.
</t>
<t>
Once the SSH session has been established, the NETCONF client will
invoke NETCONF as an SSH subsystem called "netconf".  Subsystem
support is a feature of SSH version 2 (SSHv2) and is not included in
SSHv1.  Running NETCONF as an SSH subsystem avoids the need for the
script to recognize shell prompts or skip over extraneous information,
such as a system message that is sent at shell start-up.
</t>
<t>
In order to allow NETCONF traffic to be easily identified and filtered
by firewalls and other network devices, NETCONF servers MUST default
to providing access to the "netconf" SSH subsystem only when the SSH
session is established using the IANA-assigned TCP port 830.
Servers SHOULD be configurable to allow access to the netconf SSH
subsystem over other ports.
</t>
<t>
A user (or application) could use the following command line to invoke
NETCONF as an SSH subsystem on the IANA-assigned port:
</t>
<figure>
<artwork>
<![CDATA[ 
[user@client]$ ssh -s server.example.org -p 830 netconf]]>
</artwork>
</figure>
<t>
Note that the -s option causes the command ("netconf") to be invoked
as an SSH subsystem.
</t>
        <section title="Capabilities Exchange">
<t>
The NETCONF server MUST indicate its capabilities by sending an XML
document containing a &lt;hello&gt; element as soon as the NETCONF session
is established.  The NETCONF client can parse this message to
determine which NETCONF capabilities are supported by the NETCONF
server.
</t>
<t>
The NETCONF client must also send an XML document containing a
&lt;hello&gt; element to indicate the NETCONF client's capabilities to the
NETCONF server.  The document containing the &lt;hello&gt; element
MUST be the first XML document that the NETCONF client sends after the NETCONF
session is established.  
</t>
<t>
The following example shows a capability exchange.  Data sent by the
NETCONF client are marked with &quot;C:&quot; and data sent by the NETCONF
server are marked with &quot;S:&quot;.
</t>
<figure>
<artwork>
<![CDATA[ 
S: <?xml version="1.0" encoding="UTF-8"?>
S: <hello xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
S:   <capabilities>
S:     <capability>
S:       urn:ietf:params:xml:ns:netconf:base:1.0
S:     </capability>
S:     <capability>
S:       urn:ietf:params:ns:netconf:capability:startup:1.0
S:     </capability>
S:   </capabilities>
S:   <session-id>4<session-id>
S: </hello>
S: ]]>]]>]]>
<![CDATA[ 
C: <?xml version="1.0" encoding="UTF-8"?>
C: <hello xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
C:   <capabilities>
C:     <capability>
C:       urn:ietf:params:xml:ns:netconf:base:1.0
C:     </capability>
C:   </capabilities>
C: </hello>
C: ]]>]]>]]>
</artwork>
</figure>
<t>
Although the example shows the NETCONF server sending a &lt;hello&gt;
message followed by the NETCONF client's &lt;hello&gt; message, both
sides will send the message as soon as the NETCONF subsystem is
initialized, perhaps simultaneously.
</t>
<t>
As the previous example illustrates, a special character sequence,
]]>]]>, MUST be sent by both the NETCONF client and the NETCONF server
after each XML document in the NETCONF exchange.  This character
sequence MUST NOT appear in an XML document.
</t>
        </section>
    </section>
    <section title="Using NETCONF over SSH">
<t>
A NETCONF over SSH session consists of a NETCONF client and NETCONF server 
exchanging complete XML documents.  Once the session has been
established and capabilities have been exchanged, the
NETCONF client will send complete XML documents containing
&lt;rpc&gt; elements to the server, and the NETCONF server will respond with complete XML
documents containing &lt;rpc-reply&gt; elements.
</t>
<t>
To continue the example given above, a NETCONF over SSH session to
retrieve a set of configuration information might look like this:
</t>
<figure>
<artwork> 
<![CDATA[ 
C: <?xml version="1.0" encoding="UTF-8"?>
C: <rpc message-id="105" 
C: xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
C:   <get-config>
C:     <source><running/></source>
C:     <config xmlns="http://example.com/schema/1.2/config">
C:      <users/>
C:     </config>
C:   </get-config>
C: </rpc>
C: ]]>]]>]]>
<![CDATA[ 
S: <?xml version="1.0" encoding="UTF-8"?>
S: <rpc-reply message-id="105" 
S: xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
S:   <config xmlns="http://example.com/schema/1.2/config">
S:     <users>
S:       <user><name>root</name><type>superuser</type></user>
S:       <user><name>fred</name><type>admin</type></user>
S:       <user><name>barney</name><type>admin</type></user>
S:     </users>
S:   </config>
S: </rpc-reply>
S: ]]>]]>]]>
</artwork>
</figure>
    </section>
    <section title="Exiting the NETCONF Subsystem">
<t>
Exiting NETCONF is accomplished using the &lt;close-session&gt; operation.
A NETCONF server will process NETCONF messages from the NETCONF client
in the order in which they are received.  When the NETCONF server
processes a &lt;close-session&gt; operation, the NETCONF server SHALL
respond and close the SSH session channel.  The NETCONF server MUST
NOT process any NETCONF messages received after the &lt;close-session&gt;
operation.
</t>
<t>
To continue the example used in previous sections, an existing
NETCONF subsystem session could be closed as follows:
</t> 
<figure>
<artwork>
<![CDATA[ 
C: <?xml version="1.0" encoding="UTF-8"?>
C: <rpc message-id="106" 
C: xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
C:   <close-session/>
C: </rpc>
C: ]]>]]>]]>
<![CDATA[ 
S: <?xml version="1.0" encoding="UTF-8"?>
S: <rpc-reply id="106" 
S: xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
S:   <ok/>
S: </rpc-reply>
S: ]]>]]>]]>
</artwork>
</figure>
    </section>
    <section title="Security Considerations">
<t>
NETCONF is used to access configuration and state information and to
modify configuration information, so the ability to access this
protocol should be limited to users and systems that are authorized to
view the NETCONF server's configuration and state or to modify the
NETCONF server's configuration.
</t>
<t>
The identity of the SSH server MUST be verified and authenticated by the
SSH client according to local policy before password-based authentication
data or any configuration or state data is sent to or received from
the SSH server.  The identity of the SSH client MUST also be verified and
authenticated by the SSH server according to local policy to ensure that
the incoming SSH client request is legitimate before any configuration or
state data is sent to or received from the SSH client.  Neither side
should establish a NETCONF over SSH connection with an unknown,
unexpected or incorrect identity on the opposite side.
</t>
<t>
Configuration or state data may include sensitive information, such as
usernames or security keys.  So, NETCONF should only be used over
communications channels that provide strong encryption for data
privacy. This document defines a NETCONF over SSH mapping which
provides for support of strong encryption and authentication.
</t>
<t>
This document requires that SSH servers default to allowing access to
the "netconf" SSH subsystem only when using a specific TCP port
assigned by IANA for this purpose.  This will allow NETCONF over SSH
traffic to be easily identified and filtered by firewalls and other
network nodes.  However, it will also allow NETCONF over SSH traffic
to be more easily identified by attackers.
</t>
<t>
This document also recommends that SSH servers be configurable to allow
access to the "netconf" SSH subsystem over other ports.  Use of that
configuration option without corresponding changes to firewall or
network device configuration may unintentionally result in the ability
for nodes outside of the firewall or other administrative boundary
to gain access to "netconf" SSH subsystem.
</t>
<t>
RFC 4742 assumes that the EOM sequence cannot appear in any XML
document, which turned out to be mistaken. The EOM sequence can cause
operational problems and open space for attacks if sent deliberately
in an XML document. It is however believed that the associated threat
is not very high.  This document keeps using the EOM sequence to avoid
incompatibility with existing implementations. Implementations of SSH
transport must exercise extra care and make sure the EOM sequence is
not present in an XML document.
</t>
    </section>
    <section title="IANA Considerations">
<t>
Based on the previous version of this document, RFC 4742, IANA
assigned port 830 as the default port for NETCONF over SSH sessions.
</t>
<t>
IANA has also assigned "netconf" as an SSH Subsystem Name, as defined 
in <xref target="RFC4250"/>, as follows:
</t>
<t>
<figure>
<artwork>
<![CDATA[ 
           Subsystem Name                  Reference
           --------------                  ---------
	   netconf                         RFC 4742
]]>
</artwork>
</figure>
</t>
<t>
IANA is requested to update these allocations to reference this document
when it is published as an RFC.
</t>
    </section>
    <section title="Acknowledgements">
<t>
This document was written using the xml2rfc tool described in RFC 2629
<xref target="RFC2629"/>.
</t>
<t>
Extensive input was received from the other members of the NETCONF
design team, including: Andy Bierman, Weijing Chen, Rob Enns, Wes
Hardaker, David Harrington, Eliot Lear, Simon Leinen, Phil Shafer,
Juergen Schoenwaelder and Steve Waldbusser.  The following people have
also reviewed this document and provided valuable input: Olafur
Gudmundsson, Sam Hartman, Scott Hollenbeck, Bill Sommerfeld, Bert
Wijnen, Balazs Lengyel and Martin Bjorklund.
</t>
    </section>
    <section title="Change Log">
<t>
[RFC Editor:  Please remove this section before publication as an RFC.]
</t>
      <section title="Changes from RFC4742bis-02 to RFC4742-bis-03">
	<list style="symbols">
	  <t>Shortened text about EOM sequence.</t>
	  <t>Added text to Security Considerations about EOM issues.</t>
	</list>
      </section>
      <section title="Changes from RFC4742bis-02 to RFC4742-bis-03">
	<list style="symbols">
	  <t>Added intended status and "obsoletes" to headers.</t>
	  <t>Very minor editorial changes.</t>
	</list>
      </section>
      <section title="Changes from RFC4742bis-01 to RFC4742-bis-02">
	<list style="symbols">
	  <t>Removed unneeded wording about client/server, made 
             unnecessary by previous changes.</t>
	  <t>Stated that how a server extracts the SSH user name is
             implementation-dependent.</t>
	  <t>Further fixes to  operation/message/data wording.</t>
	</list>
      </section>
      <section title="Changes from RFC4742bis-00 to RFC4742-bis-01">
	<list style="symbols">
	  <t>Changed use of client/server, manager/agent to SSH client/server
	    and NETCONF client/server. </t>
	  <t>Consistently used term operation, instead of command or 
	    message.</t>
	  <t>Clarified some sections based on review feedback.</t>
	  <t>Fixed several typos.</t>
	</list>
      </section>
      <section title="Changes from RFC4742 to RFC4742bis-00">
	<list style="symbols">
	  <t>Integrated previously-approved errata from 
	    http://rfc-editor.org/errata_search.php?rfc=4742</t>
	  <t>Removed text requiring implementations to skip to an
	    XML start directive at the beginning of a session.</t>
	  <t>Made it clear the ]]>]]> is illegal in XML documents
            only outside of comments.</t>
	</list>
      </section>
    </section>

    </middle>
        
    <back>
    <references title="Normative References">
        &netconf;
        &sshconn;
        &sshtrans;
        &sshauth;
	&rfc2119;
	&sshnum;
    </references>

    <references title="Informative References">
        &rfc2629;
    </references>
    </back>
</rfc>

