<?xml version='1.0' ?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'>
<rfc ipr='full3978' docName='draft-wolf-ecrit-lost-servicelistboundary-00' >
    <?rfc toc='yes' ?>
    <?rfc tocompact='no' ?>
    <?rfc compact='yes' ?>
    <?rfc subcompact='yes' ?>
    <front> 
      <title abbrev='serviceListBoundary'>
		Location-to-Service Translation Protocol (LoST) Extension: ServiceListBoundary
      </title>

      <author initials='K. H.' surname='Wolf' fullname='Karl Heinz Wolf'>
        <organization abbrev='nic.at'>
          nic.at GmbH
        </organization>
        <address>
          <postal>
            <street>Karlsplatz 1/2/9</street>
            <city>Wien</city>
            <code>A-1010</code>
            <country>Austria</country>
          </postal>
          <phone>+43 1 5056416 37</phone>
          <email>karlheinz.wolf@nic.at</email>
          <uri>http://www.nic.at/</uri>
        </address>
      </author>

      


      <date month='May' year='2008' day='28'/>
      <area>RAI</area>
      <workgroup>ECRIT</workgroup>
      <keyword>LoST</keyword>
      <keyword>listservicesbylocation</keyword>
      
      <abstract>

	<t>
	<xref target='I-D.ietf-ecrit-lost'>LoST</xref> is able to map service identifiers and location information to service contact URIs. If a LoST client wants to discover available services for a particular location, it will perform a &lt;listServicesByLocation&gt; query to the LoST server. However, the response from the LoST server does not give information about the geographical region, for which the returned service list is valid. Therefore this document proposes a ServiceListBoundary, in addition to the ServiceBoundary (which indicates the region a specific service URL is valid).
	</t>

      </abstract>
    </front>


    <middle>

      <section anchor='intro' title='Introduction'>
        <t>
Location based service providers as well as Public Safety Answering Points only serve a specific geographic region. Therefore the LoST protocol defines the ServiceBoundary, which indicates the service region for a specific service URL.
However, not all services are available everywhere. Clients can discover available services for a particular location by the &lt;listServicesByLocation&gt; query. The LoST server returns a list of services that are available at this particular location. But the server does not inform the client, for which geographical region the returned service list is valid. This may lead to the situation where a client initially discovered all available services by the &lt;listServicesByLocation&gt; query, and then moves to a different location while refreshing the service mappings, but does not notice the availability of another service.
The following imaginary example illustrates the problem for emergency calling:
</t><t>
The client is powered-up, does location determination (resulting in location A) and performs an initial &lt;listServicesByLocation&gt; query with location A requesting urn:services:sos.
</t><t>
The LoST server returns the following services list:
</t>

<artwork align="left"><![CDATA[
urn:service:sos.police
urn:service:sos.ambulance
urn:service:sos.fire
]]></artwork>

<t>
The client does the initial LoST mapping and discovers the dialstrings for these services. Then the client moves, refreshing the service mappings when necessary as told by the ServiceBoundary. However, when arriving in location B (close to a mountain), service:sos:mountainrescue is available (which is not available in location A). Nevertheless, the client does not detect this, because only the initially learned services (police, ambulance, fire) are refreshed. Consequently the dialstring for the mountainrescue is not known by the client, and the emergency call to the mountainrescue will certainly fail.
</t><t>
Note that the ServiceBoundary (service region for an individual service) cannot be considered as an indicator for the region a specific service list is valid for. The service list may even change within the ServiceBoundary of another service. For example, the ambulance mapping is valid for a whole state, but for a part of the state there is an additional mountain rescue service.

</t> <t>

Consequently, there are two ways to tackle this issue:

</t>

  <list style='symbols'>
    <t>clients continuously ask for the service list (although it may not have changed)</t>
    <t>an additional boundary indicating the region, a specific service list is valid for (in the style of the ServiceBoundary)
    </t>
  </list>

 <t>
Since the LoST protocol has the ServiceBoundary concept in order to avoid that clients continuously try to refresh the mapping of a specific service, a ServiceListBoundary would provide a similar mechanism for service lists.
</t>


      </section>


      <section anchor='terminology' title='Terminology'>
	<t>
	The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
	"SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in 
	this document are to be interpreted as described in
	<xref target='RFC2119'>RFC 2119</xref>.
	</t>
      </section>


<section anchor='ext' title='LoST Extensions'>

  <t>This chapter describes the necessary modifications to the LoST protocol in order to support the proposed ServiceListBoundary in a similar way as the ServiceBoundary.
  </t>

	<section anchor='extListServiceByLocation' title='Extensions to &lt;ListServiceByLocation&gt;'>

<t>
The query &lt;ListServicesByLocation&gt; may contain an additional serviceListBoundary attribute to request the boundary for the service list returned, either by value or by reference.
</t>

<artwork align="left"><![CDATA[
   <?xml version="1.0" encoding="UTF-8"?>
   <listServicesByLocation
     xmlns="urn:ietf:params:xml:ns:lost1"
     xmlns:gml="http://www.opengis.net/gml"
     serviceListBoundary="value"
     recursive="true">
     <location id="mylocation" profile="geodetic-2d">
       <gml:Point srsName="urn:ogc:def:crs:EPSG::4326">
         <gml:pos>48.1454 16.3774</gml:pos>
       </gml:Point>
     </location>
     <service>urn:service:sos</service>
   </listServicesByLocation>
]]></artwork>


<t>
A possible response is shown below:
</t>

<artwork align="left"><![CDATA[
   <?xml version="1.0" encoding="UTF-8"?>
   <listServicesByLocationResponse
    xmlns="urn:ietf:params:xml:ns:lost1">
    <serviceList expires="2010-01-01T00:00:00Z">
     urn:service:sos.ambulance
     urn:service:sos.fire
     urn:service:sos.gas
     urn:service:sos.mountain
     urn:service:sos.poison
     urn:service:sos.police
    </serviceList>
    <path>
     <via source="resolver.example"/>
     <via source="authoritative.example"/>
    </path>
    <locationUsed id="mylocation"/>
    <serviceListBoundary
      profile="civic">
      <civicAddress
        xmlns="urn:ietf:params:xml:ns:pidf:geopriv10:civicAddr">
        <country>AT</country>
        <A1>Lower Austria</A1>
      </civicAddress>
    </serviceListBoundary>
   </listServicesByLocationResponse>

]]></artwork>

<t>
This exemplary response indicates that the service list is valid for Lower Austria. The &lt;listServicesByLocation&gt; request has to be repeated only when moving out of Lower Austria. However, the mappings of the services itself may have other service boundaries. Additionally, the expires attribute indicates the absolute time when this service list becomes invalid.
</t>
<t>The boundary can also be requested by reference when setting the attribute serviceListBoundary to "reference". Then the response contains a serviceListBoundaryReference element:

</t>

<artwork align="left"><![CDATA[
       <serviceListBoundaryReference
         source="authoritative.example"
         key="123567890123567890123567890" />

]]></artwork>


	</section>    

	<section anchor='extgetServiceListBoundary' title='Retrieving the serviceList Boundary via getServiceListBoundary'>

<t>In order to retrieve the boundary for a specific service list, the client issues a &lt;getServiceListBoundary&gt; request, similar to the &lt;getServiceBoundary&gt; request.
</t>
<t>An example is shown below:
</t>

<artwork align="left"><![CDATA[
   <?xml version="1.0" encoding="UTF-8"?>
   <getServiceListBoundary xmlns="urn:ietf:params:xml:ns:lost1"
       key="123567890123567890123567890"/>

]]></artwork>

<t>
The LoST server response is shown below:
</t>

<artwork align="left"><![CDATA[
   <?xml version="1.0" encoding="UTF-8"?>
   <getServiceListBoundaryResponse
     xmlns="urn:ietf:params:xml:ns:lost1">
     <serviceBoundary profile="civic" expires="2010-01-01T00:00:00Z">
       <civicAddress
         xmlns="urn:ietf:params:xml:ns:pidf:geopriv10:civicAddr">
         <country>US</country>
         <A1>New York</A1>
         <A3>New York</A3>
       </civicAddress>
     </serviceBoundary>
     <path>
       <via source="resolver.example"/>
       <via source="authoritative.example"/>
     </path>
   </getServiceListBoundaryResponse>

]]></artwork>



	</section>

	<section anchor='extserviceListBoundary' title='Service List Boundary'>
<t>
The service list boundary indicates a region within which all &lt;listServicesByLocation&gt; queries with the same service identifiers result in the same serviceList. A service list boundary may consist of geometric shapes (both in civic and geodetic location format), and may be non-contiguous, like the service boundary.

</t><t>

The mapping of the specific services within the service list boundary may be different at different locations.

</t>
<t>
There is no need to include boundary information to a &lt;listServiceResponse&gt;. &lt;ListServices&gt; requests are purely for diagnostic purposes and do not contain location information at all, so no boundary information is reasonable.
</t>

</section>
</section>


    <section anchor='security' title='Security & Privacy Considerations'>
        <t>
        Security considerations are discussed in <xref target='I-D.ietf-ecrit-lost'></xref>.
      	</t>
    </section>

    <section anchor='iana' title='IANA Considerations'>
        <t>
        TODO. 
        </t>
    </section>

  </middle>
  
  <back>
    <references title='Normative References'>

      <?rfc include="reference.I-D.draft-ietf-ecrit-lost-09.xml" ?>
      <?rfc include="reference.RFC.2119" ?>
      
    </references>

  </back>
  
</rfc>

