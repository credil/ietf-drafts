<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc3761 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3761.xml'>
<!ENTITY rfc2119 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
<!ENTITY rfc3958 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3958.xml'>
<!ENTITY rfc3401 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3401.xml'>
<!ENTITY rfc3403 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3403.xml'>
<!ENTITY rfc3404 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3404.xml'>
<!ENTITY rfc1035 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml'>
<!ENTITY rfc4592 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4592.xml'>
<!ENTITY rfc4848 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4848.xml'>
<!ENTITY rfc2929 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2929.xml'>
<!ENTITY rfc3986 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml'>
<!ENTITY rfc2782 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2782.xml'>
<!ENTITY rfc5395 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5395.xml'>
<!ENTITY rfc5507 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5507.xml'>

]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc compact="yes"?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>

<!-- Expand crefs and put them inline -->
<?rfc comments='yes' ?>
<?rfc inline='yes' ?>  

<rfc docName="draft-faltstrom-uri-04.txt" ipr="trust200902" category="std" updates="3404, 3959">
	<front>
		<title abbrev="URI Resource Record">
			The Uniform Resource Identifier (URI) DNS Resource Record
		</title>
		<author fullname="Patrik Faltstrom" initials="P." surname="Faltstrom">
			<organization abbrev="Cisco">Cisco Systems</organization>
			<address>
				<email>paf@cisco.com</email>
			</address>
		</author>
		<author fullname="Olaf Kolkman" initials="O." surname="Kolkman">
			<organization abbrev="NLNet">NLnet Labs</organization>
			<address>
				<email>olaf@NLnetLabs.nl</email>
			</address>
		</author>
		<date month="May" year="2009"/>
		<area>Operations</area>
		<keyword>DNS</keyword>
		<keyword>RFC</keyword>
		<keyword>I-D</keyword>
		<keyword>Internet-Draft</keyword>
		<abstract>
			<t>
				This document defines a new DNS resource record, called the Uniform
				Resource Identifier (URI) RR, for publishing mappings from hostnames
				to URIs.
			</t>
		</abstract>
	</front>
	<middle>
		<section anchor="intro" title="Introduction">
			<t>
				This document explains the use of the Domain Name System (DNS) for
				the storage of URIs, and how to resolve hostnames to such URIs that can be
				used by various applications. For resolution the application need to
				know both the hostname and the protocol that the URI is to be used
				for. The protocol is registered by IANA.
			</t>
			<t>
				Currently, looking up URIs given a hostname uses the <xref
        target="RFC3401">DDDS</xref> application framework with the DNS as a
        database as specified in <xref target="RFC3404">RFC 3404</xref>. This
        has a number of implications such as the
        inability to select what NAPTR records that match the query are
        interesting. The RRSet returned will always consist of all URIs
        "connected" with the domain in question.
			</t>
			<t>
				The URI resource record specified in this document enables
        the querying party to select which ones of the NAPTR records one
        is interested in. This because data in the service field of the NAPTR
        record is included in the owner part of the URI resource record type.
			</t>
			<t>
				Querying for URI resource records is not replacing querying for NAPTR
        resource records (or use of <xref target="RFC3958">S-NAPTR</xref>). Instead,
        the URI resource record type provides a complementary mechanism to use
        when one already knows what service field is interesting. With it, one
        can directly query for the specific subset of the otherwise possibly
        large RRSet given back when querying for NAPTR resource records.
			</t>
			<t>
				This document updates RFC 3958 and RFC 3404 by adding the flag "D" to
        the list of defined terminal flags in section 2.2.3 of RFC 3958 and
        4.3 of RFC 3404.
			</t>
			<t>
				The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in BCP 14, <xref
        target="RFC2119">RFC 2119</xref>.
	   	</t>
		</section>
		<section title="Applicability Statement">
			<t>
				In general, it is expected that URI records will be used by clients
				for applications where the relevant protocol to be used is known,
				but, for example, an extra abstraction is needed in order to separate
				a domain name from a point of service (as addressed by the URI).  One
				example of such a situation is when an organisation has many domain
				names, but only one official web page.
			</t>
			<t>
				Applications MUST know the specific service fields to prepend the
				hostname with.  Using repetitive queries for URI records MUST NOT be
				a replacement for querying for NAPTR records according to the NAPTR (DDDS) or
				S-NAPTR algorithms.  NAPTR records serve the purpose to discover the various services
				and URIs for looking up access points for a given service.  Those are
				two very different kinds of needs.
			</t>
		</section>
		<section title="DNS considerations">
			<t>
				Using prefix labels, such as underscored service tags, prevents the
        use of wildcards, as
        constructs as _s2._s1.*.example.net. are not possible in the DNS,
        see <xref target="RFC4592">RFC 4592</xref>. Besides, underscored
        service tags used for the URI RR (based on the NAPTR service
        descriptions) may have slightly different semantics than service tags
        used for underscored prefix labels that are used in combination with
        other (yet unspecified) RR types. This may cause subtle management
        problems when delegation structure that has developed within the
        context of URI RRs is also to be used for other RR types. Since the
        service labels might be overloaded, applications should carefully check
        that the application level protocol is indeed the protocol they
        expect.
			</t>
			<t>
				Subtle management issues may also arise when the delegations from
        service to sub service label involves several parties and different
        stake holders.
			</t>
		</section>
		<section anchor="format" title="The format of the URI RR">
			<t>
				This is the presentation format of the URI RR:
			</t>
			<figure>
				<artwork>
					<![CDATA[
    Ownername TTL Class URI Priority Weight Target
					]]>
				</artwork>
			</figure>
			<t>
			  The URI RR does not cause any kind of Additional Section processing.
			</t>
			<section title="Ownername, class and type">
		    <t>
		      The URI ownername is subject to special conventions.
		    </t>
		    <t>
		      Just like the <xref target="RFC2782">SRV RR</xref> the URI RR has service information
          encoded in its ownername. In order to encode the service for a
          specific owner name one uses service parameters. Valid service
          parameters used are those used for SRV resource records, or registered by IANA for
          Enumservice Registrations. The Enumservice Registration parameters
          are reversed (subtype(s) before type), prepended with an underscore
          (_) and prepended to the owner name in separate labels. The
          underscore is prepended to the service parameters to avoid
          collisions with DNS labels that occur in nature, and the order is
          reversed to make it possible to do delegations, if needed, to
          different zones (and therefore providers of DNS).
		    </t>
		    <t> 
		      For example, suppose we are looking for the URI for a service
		      with Service Parameter "A:B:C" for host example.com.. Then we
		      would query for (QNAME,QTYPE)=("_C._B._A.example.com","URI")
		    </t>   
		    <t>
		      The type number for the URI record is TBD1 (to be assigned by IANA).
		   	</t>
		   	<t>
		     	The URI resource record is class independent.
		   	</t>
		   	<t>
		     	The URI RR has no special TTL requirements.
		   	</t>
			</section>
			<section title="Priority">
				<t>
					The priority of the target URI in this RR.  Its range is 0-65535.
					A client MUST attempt to contact the URI with the lowest-numbered
					priority it can reach; URIs with the same priority SHOULD be tried in
					the order defined by the weight field.
				</t>
			</section>
			<section title="Weight">
				<t>
					A server selection mechanism.  The weight field specifies a relative
					weight for entries with the same priority.  Larger weights SHOULD be
					given a proportionately higher probability of being selected.  The
					range of this number is 0-65535.
				</t>
			</section>
			<section title="Target">
				<t>
					The URI of the target, enclosed in double-quote characters ('"').
					Resolution of the URI is according to the definitions for the
					Scheme of the URI.
				</t>
        <t>
          The URI is encoded as one or more &lt;character-string&gt; <xref
          target="RFC1035">RFC1035 section 3.3</xref>.
        </t>
			</section>
		  <section anchor="wireformat" title="URI RDATA Wire Format">
				<t>
	      	The RDATA for a URI RR consists of a 2 octet Priority field,
	      	a two octet Weight field, and a variable length target field.
				</t>
		    <t>
					Priority and Weight are unsigned integers in network byte order.
				</t>
				<t>
					The Target field contains the URI (without the enclosing double-
					quote characters used in the presentation format), encoded as a
					sequence of one or more &lt;character-string&gt; (as specified in section
					3.3 of <xref target="RFC1035">RFC 1035</xref>), where all but the last &lt;character-string&gt;
					are filled up to the maximum length of 255 octets.
		    </t>
				<figure>
				  <artwork>
				    <![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Priority             |          Weight               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/                                                               /
/                             Target                            /
/                                                               /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
				    ]]>
				  </artwork>
				</figure>
			</section>
		</section>
		<section title="Definition of the flag 'D' for NAPTR records">
		  <t>
		    This document specifies the flag "D" for use as a flag in NAPTR
        records. The flag indicate a terminal NAPTR record because it denotes
        the end of the DDDS/NAPTR processing rules. In the case of a "D" flag,
        the Replacement field in the NAPTR record, prepended with the service
        flags, is used as the Owner of a DNS query for URI records, and normal
        URI processing as defined in this document is applied.
		  </t>
			<t>
			  The replacement field MUST NOT include any of the service parameters.
        Those are to be prepended (together with underscore) as described in
        other places in this document.
			</t>
			<t>
			  The Regexp field in the NAPTR record MUST be empty when the 'D' flag
        is in use.
			</t>
		</section>
		<section title="Examples">
			<section title="Homepage at one domain, but two domains in use">
				<t>
					An organisation has the domain names example.com and example.net,
          but the official URI http://www.example.com/. Given the service type
          "web" and subtype "http" (from the IANA registry), the following
          URI Resource Records could be made available in the respective
          zones (example.com and example.net):
				</t>
				<figure>
					<artwork>
						<![CDATA[
$ORIGIN example.com.
_http._web    IN URI 10 1 "http://www.example.com/"

$ORIGIN example.net.
_http._web    IN URI 10 1 "http://www.example.com/"
						]]>
					</artwork>
				</figure>
			</section>
		</section>
		<section title="Relation to U-NAPTR">
			<t>
				The URI Resource Record Type is not a replacement for the U-NAPTR. It
        is instead an extension and more powerful second step in the
        resolution than the SRV record. As such, it could be referred to as
        the target in a terminal rule in any of the NAPTR specifications.
			</t>
			<t>
			  If one knows exactly what service type one is looking for, one can do a
        direct lookup of the URI record without first looking up the NAPTR. In
        the example below, if one where looking for EM:protA service in the
        example.com domain, one could look for the URI Resource Record Type
        with the owner _protA._EM.example.com directly.
			</t>
			<t>
				Example from U-NAPTR (URI resolution is not included):
			</t>
			<figure>
				<artwork>
					<![CDATA[
$ORIGIN example.com.
  IN NAPTR 200 10 "u" "EM:protA"  (      ; service
  "!.*!prota://someisp.example.com!"     ; regexp
  ""                              )      ; replacement
					]]>
				</artwork>
			</figure>
			<t>
				With URI records, and the use of the new flag 'D':
			</t>
			<figure>
				<artwork>
					<![CDATA[
$ORIGIN example.com.
  IN NAPTR 200 10 "D" "EM:protA"  (      ; service
  ""                                     ; regexp
  "example.com."                  )      ; replacement
_protA._EM IN URI "prota://somehost.example.com/"
        ]]>
				</artwork>
			</figure>
		</section>
		<section title="IANA Considerations">
			<section title="Registration of the URI Resource Record Type">
				<t>
					IANA has assigned Resource Record Type TBD1 for the URI Resource
          Record Type and added the line depicted below to the registry named
          Resource Record (RR) TYPEs and QTYPEs as defined in BCP 42 <xref
          target="RFC5395">RFC 5395</xref> and located at
          http://www.iana.org/assignments/dns-parameters.
				</t>
				<figure>
					<artwork>
						<![CDATA[
TYPE         Value and meaning                              Reference
-----------  ---------------------------------------------  ---------
URI          TBD1 a URI for a service (per the owner name)  [RFCXXXX]
            ]]>
					</artwork>
				</figure>
			</section>
			<section title="Registration of services">
				<t>
					No new registry is needed for the registration of services as
					the Enumservice Registrations registry is used also for the URI
					resource record type.
				</t>
			</section>
		</section>
		<section title="Security Considerations">
			<t>
				The authors do not believe this resource record cause any new security problems.
				Deployment must though be done in a proper way as misconfiguration of this
				resource record might make it impossible to reach the service that was originally
				intended to be accessed.
			</t>
			<t>
				For example, if the URI in the resource record type has errors in it, applications
				using the URI resource record type for resolution should behave similarly as if the
				user typed (or copy and pasted) the URI. At least it must be clear to the user that
				the error is not due to any error from his side.
			</t>
			<t>
				One SHOULD not include userinfo (see User Information, Section 3.2.1, in
				<xref target="RFC3986">RFC 3986</xref>)
				in a URI that is used in a URI resource
				record as DNS data must be viewed as publicly available information.
			</t>
		</section>
		<section title="Acknowledgements">
			<t>
			  Ideas on how to split the two different kind of queries "What services
        exists for this domain name" and "What is the URI for this service"
        came from Scott Bradner and Lawrence Conroy. Other people that have
        contributed to this document include Leslie Daigle, Olafur Gudmundsson,
        Ted Hardie, Peter Koch and Penn Pfautz.
			</t>
		</section>
		<appendix title="RRTYPE Allocation Request">
			<t>
			  <list style='hanging' hangIndent='5'>
				  <t hangText="A.">
					  Submission Date:
					  <vspace blankLines='1' />
					  May 23, 2009
						<vspace blankLines='1' />
				  </t>
				  <t hangText = "B.">
			      Submission Type:
						<vspace blankLines='1' />
			      [X] New RRTYPE
					  <vspace blankLines='0' />
				    [ ] Modification to existing RRTYPE
						<vspace blankLines='1' />
          </t>
			    <t hangText="C.">
				    Contact Information for submitter:
					  <vspace blankLines='1' />
			      Name: Patrik Faltstrom
					  <vspace blankLines='0' />
			      Email Address: paf@cisco.com
					  <vspace blankLines='0' />
			      International telephone number: +46-8-6859131
					  <vspace blankLines='0' />
			      Other contact handles:
						<vspace blankLines='0' />
			      (Note: This information will be publicly posted.)
						<vspace blankLines='1' />
          </t>
			    <t hangText="D.">
				    Motivation for the new RRTYPE application?
					  <vspace blankLines='1' />
					  There is no easy way to get from a domain name to a URI. Some
						mechanisms exists via use of the <xref target="RFC3403">NAPTR</xref>
						resource record. That implies quite complicated rules that are
						simplified via the <xref target="RFC3958">S-NAPTR</xref> specification.
						But, the ability to directly look up a URI still exists. This specification
						uses a prefix based naming mechanism originated in the definition of
						the <xref target="RFC2782">SRV</xref> resource record, and the RDATA is
						a URI, encoded as one text field.
					  <vspace blankLines='1' />
						See also <xref target="intro">above</xref>.
						<vspace blankLines='1' />
					</t>
					<t hangText="E.">
						Description of the proposed RR type.
					  <vspace blankLines='1' />
						The format of the URI resource record is as follows:
						<figure>
						  <artwork>
							  <![CDATA[
     Ownername TTL Class URI Priority Weight Target
							  ]]>
							</artwork>
						</figure>
						The URI RR has service information
						encoded in its ownername.  In order to encode the service for a
						specific owner name one uses service parameters.  Valid service
						parameters used are either Enumservice Registrations registered by IANA,
						or prefixes used for the SRV resource record.
					  <vspace blankLines='1' />
						The wire format of the RDATA is as follows:
						<figure>
						  <artwork>
							  <![CDATA[
                          1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Priority             |          Weight               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     /                                                               /
     /                             Target                            /
     /                                                               /
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
								]]>
							</artwork>
						</figure>
					    <vspace blankLines='1' />
					  </t>
					<t hangText="F.">
            What existing RRTYPE or RRTYPEs come closest to filling that
						need and why are they unsatisfactory?
					  <vspace blankLines='1' />
						The RRTYPE that come closest is the NAPTR resource record. It is
						for example used in the DDDS and S-NAPTR algorithms. The main problem
						with the NAPTR is that selection of what record (or records) one is
						interested in is based on data stored in the RDATA portion of the NAPTR
						resource record. This, as explained in <xref target="RFC5507">RFC 5507</xref>,
						is not optimal for DNS lookups. Further, most applications using NAPTR
						resource records uses regular expression based rewrite rules for creation
						of the URI, and that has shown be complicated to implement.
					  <vspace blankLines='1' />
						The second closest RRTYPE is the SRV record that given a prefixed based
						naming just like is suggested for the URI resource record, one get back
						a port number and domain name. This can also be used for creation of a
						URI, but, only URIs without path components.
					  <vspace blankLines='1' />
					</t>
					<t hangText="G.">
            What mnemonic is requested for the new RRTYPE (optional)?
					  <vspace blankLines='1' />
						URI
					  <vspace blankLines='1' />
					</t>
					<t hangText="H.">
            Does the requested RRTYPE make use of any existing IANA
			      Registry or require the creation of a new IANA sub-registry in
			      DNS Parameters?
					  <vspace blankLines='1' />
						Yes, partially.
					  <vspace blankLines='1' />
						One of the mechanisms to select a service is to use the Enumservice
						Registry managed by IANA. Another is to use services and protocols used
						for SRV records.
					  <vspace blankLines='1' />
					</t>
					<t hangText="I.">
			      Does the proposal require/expect any changes in DNS
			      servers/resolvers that prevent the new type from being
			      processed as an unknown RRTYPE (see [RFC3597])?
					  <vspace blankLines='1' />
					  No
					  <vspace blankLines='1' />
					</t>
					<t hangText="J.">
						Comments:
					  <vspace blankLines='1' />
					  None
					  <vspace blankLines='1' />
					</t>
				</list>
			</t>
		</appendix>
	</middle>
		<back>
			<references title='Normative References'>
				&rfc2119;
				&rfc3958;
				&rfc1035;
				&rfc5395;

				<reference anchor="E164">
					<front>
						<title>The International Public Telecommunication Number Plan</title>
						<author>
							<organization>ITU-T</organization>
						</author>
						<date month="May" year="1997"/>
					</front>
					<seriesInfo name="Recommendation" value="E.164"/>
				</reference>

			</references>
			<references title='Non-normative references'>
				&rfc3401;
				&rfc3986;
				&rfc3404;
				&rfc3403;
				&rfc4592;
				&rfc4848;
				&rfc2782;
				&rfc5507;
			</references>
		</back>
	</rfc>
