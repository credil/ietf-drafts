<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-garcia-simple-poke-00" ipr="full3978">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="POKE">Attention Request (POKE) for Instant Messaging</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Gustavo Garcia" initials="G. G."
            surname="Garcia">
      <organization>Telefonica I+D</organization>
      <address>
        <postal>
          <street>Emilio Vargas</street>
          <city>Madrid</city>
          <region>Madrid</region>
          <code></code>
          <country>Spain</country>
        </postal>

        <phone>+34 913129826</phone>
        <email>ggb@tid.es</email>
      </address>
    </author>
    <author fullname="Jose-Luis Martin" initials="J. M."
            surname="Martin">
      <organization>Telefonica I+D</organization>
      <address>
        <postal>
          <street>Parque Tecnologico de Boecillo</street>
          <city>Boecillo</city>
          <region>Valladolid</region>
          <code></code>
          <country>Spain</country>
        </postal>

        <phone>+34 983367902</phone>
        <email>jlmp@tid.es</email>
      </address>
    </author>

    <date />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
   in the current day and month for you. If the year is not the current one, it is 
   necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
   purpose of calculating the expiry date).  With drafts it is normally sufficient to 
   specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>Real-Time Applications &amp; Infrastructure</area>

    <workgroup>SIMPLE</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
   If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>POKE Attention</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document specifies a message content type and XML format to request attention from a targeted user. This feature is usually known as poke, nudge or buzz in existing messaging platforms.  Its primary use is as an additional instant messaging capability that can be sent in the middle of a instant messaging session or in a standalone message at any time.  This message also allows the sender to indicate the preferred realization of the attention request: vibrator, light, tone, media or text.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Some existing messaging platforms include the capability to send a message to a user requesting his attention (e.g. XMPP <xref
        target="XEP-0224" />).  This feature is usually known as poke, nudge or buzz, and in desktop applications the notification is usually implemented using a combination of sound and the vibration of chat windows.</t>
      <t>This document describes the XML message format and procedures to send this attention request.</t>

    <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119" />.</t>
    </section>  

  </section>

  <section title="Overview" anchor="overview">
    <t>The poke message can be used inside an instant messaging session (for example a MSRP session) or as a standalone message (for example in a SIP MESSAGE).  In session mode, the poke message is sent as part of the messaging stream and its usage is negotiated just like any other media type in that stream, with details depending on the session mode protocol.</t>
    <t>In the poke message the sender can include the preference for the realization of the attention request in the receiving side: vibrator, light, tone, media or text.  This is just an indication and the final decission of the realization is in the receiver depending on the terminal capabilities and the user configuration.</t>
    <t>A poke message can include more than one realization to define complex patterns (e.g. light + vibrator).  The receiver SHOULD start all the realizations (from the beginning and following the order in the XML document) in parallel until it finds one marked as "waitForPrevious".   When that mark is found the receiver SHOULD wait until the end of all the previous realization before starting this realization and next ones.  There is also a special realization called silence that can be used to specify a pause in the sequence and create more complex patterns.</t>
    <t>The vibrator realization could be implemented using a mechanical vibration or software vibration of the user interface.  The parameters of this realization are the duration, frequency and intensity</t>
    <t>The light realization could be implemented changing the bright of the main display of the device or switching on additional lights in the device.  The parameters of this realization are the duration, lightSource, color and intensity</t>
    <t>The media indication could be implemented playing the media file referenced in the uri parameter, which depending on the content type could be an image, sound or video.</t>
    <t>The tone realization could be implemented generating and playing the tone specified using the parameters duration, frequency and intensity.</t>
    <t>The text realization could be implemented showing the text to the user.  The parameters of this realization are the duration and text.</t>
    <t>The silence realization includes only the duration parameter.</t>
    <t>If the receiver of the poke message do not support a realization (e.g. light) it SHOULD use a default indication (e.g. vibration).  If the receiver do not support a parameter of the realization (e.g. ligthSource=cameraFlash) it SHOULD use a default value for that parameter.</t>
  </section>

  <section title="Message Content" anchor="message">
       <t>We briefly describe the message content to summarize the discussion above.  This description is non-normative.  The schema (<xref target="schema"/>) should be consulted for the normative message format.</t>
       <t>The root of the message is the poke element.  This root element contains a sequence of elements describing the pokes realizations (vibrator, light, tone, media, text and silence) and their associated parameters.  Each realization element has a "waitForPrevious" attribute.</t>
       <t>The duration attribute is indicated in milliseconds, the frequency is specified in herzs, and the intensity is defined in a 0 to 100 range. In the light element, lightSource specifies the preferred light, flashing allows to request light flickering, and color specifies the preferred color as RGB value in hexadecimal notation ('#' immediately followed by six hexadecimal characters encoding the RGB components as #rrggbb).</t>
    </section>

    <section anchor="Examples" title="Examples">
<t> This is the simplest possible poke:</t>
    <figure>
        <artwork><![CDATA[
    <?xml version="1.0" encoding="UTF-8"?>
    <poke xmlns="urn:ietf:params:xml:ns:im-poke"/>
    ]]></artwork>
        </figure>
      <t>A poke requesting to show a text after executing a sequence of lights and tones in parallel:</t>
    <figure>
        <artwork><![CDATA[
    <?xml version="1.0" encoding="UTF-8"?>
    <poke xmlns="urn:ietf:params:xml:ns:im-poke">
      <light duration="500" flashing="true"/>
      <tone duration="500" frequency="660"/>
      <light duration="500" flashing="true" waitForPrevious="true"/>
      <tone duration="500" frequency="660"/>
      <light duration="500" flashing="true" waitForPrevious="true"/>
      <tone duration="500" frequency="660"/>
      <text duration="2000" waitForPrevious="true">
        Joe is poking you!
      </text>
    </poke>
    ]]></artwork>
        </figure>
      <t>A poke requesting to execute a sequence of vibrations:</t>
    <figure>
        <artwork><![CDATA[
    <?xml version="1.0" encoding="UTF-8"?>
    <poke xmlns="urn:ietf:params:xml:ns:im-poke">
      <vibration duration="500" frequency="30"/>
      <silence duration="250"/>
      <vibration duration="500" frequency="30" waitForPrevious="true"/>
    </poke>
    ]]></artwork>
        </figure>
    </section>

    <section anchor="schema" title="XML Document Format">
      <t>
      <figure>
        <artwork><![CDATA[
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
  targetNamespace="urn:ietf:params:xml:ns:im-poke"
  elementFormDefault="qualified" 
  attributeFormDefault="unqualified">
  <xs:element name="poke">
    <xs:complexType>
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element name="vibration">
          <xs:complexType>
            <xs:attribute name="waitForPrevious" type="xs:boolean" 
              use="optional" default="false"/>
            <xs:attribute name="duration" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:long">
                  <xs:minInclusive value="0"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="frequency" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:int">
                  <xs:minInclusive value="0"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="intensity" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:int">
                  <xs:minInclusive value="0"/>
                  <xs:maxInclusive value="100"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="light">
          <xs:complexType>
            <xs:attribute name="waitForPrevious" type="xs:boolean" 
              use="optional" default="false"/>
            <xs:attribute name="duration" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:long">
                  <xs:minInclusive value="0"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="intensity" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:int">
                  <xs:minInclusive value="0"/>
                  <xs:maxInclusive value="100"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="color" type="xs:string" use="optional"/>
            <xs:attribute name="lightSource" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="default"/>
                  <xs:enumeration value="primaryDisplay"/>
                  <xs:enumeration value="secondaryDisplay"/>
                  <xs:enumeration value="cameraFlash"/>
                  <xs:enumeration value="keypad"/>
                  <xs:enumeration value="otherById"/>
                  <xs:enumeration value=""/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="lightSourceId" type="xs:string" 
              use="optional"/>
            <xs:attribute name="flashing" type="xs:boolean" 
              use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="media">
          <xs:complexType>
            <xs:all>
              <xs:element name="uri">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:anyURI">
                      <xs:attribute name="contentType" type="xs:string" 
                        use="optional"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:all>
            <xs:attribute name="waitForPrevious" type="xs:boolean" 
              use="optional" default="false"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="tone">
          <xs:complexType>
            <xs:attribute name="waitForPrevious" type="xs:boolean" 
              use="optional" default="false"/>
            <xs:attribute name="duration" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:long">
                  <xs:minInclusive value="0"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="frequency" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:int">
                  <xs:minInclusive value="0"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="intensity" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:int">
                  <xs:minInclusive value="0"/>
                  <xs:maxInclusive value="100"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="text">
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:string">
                <xs:attribute name="waitForPrevious" type="xs:boolean" 
                  use="optional" default="false"/>
                <xs:attribute name="duration" use="optional">
                  <xs:simpleType>
                    <xs:restriction base="xs:long">
                      <xs:minInclusive value="0"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="silence">
          <xs:complexType>
            <xs:attribute name="duration" type="xs:long" 
              use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
        ]]></artwork>
        </figure>
      </t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>The poke message is a specialized type of instant messaging, all the security considerations for the instant messages also applies to pokes memssages.</t>
      <t>Duration of pokes and pokes rate MUST be controlled and limited in the receiving side to minify the effect of malicious nodes sending pokes too long or too often (the limit is an implementor decission).</t>
      <t>Poke messages of media type include a url to the media content that can pose a security risk.  It is RECOMMENDED to access the information in the uri element only if it can verify the authenticity of the element that originated the message and trust that element, to avoid accessing dangerous or inapropiate contents. </t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <section anchor="Content-TypeRegistration" title="Content-Type Registration for 'application/im-poke+xml'">
        <t><figure>
        <artwork><![CDATA[
   To: ietf-types@iana.org
   Subject: Registration of MIME media type application/
      im-poke+xml
   MIME media type name: application
   MIME subtype name: im-poke+xml
   Required parameters: (none)
   Optional parameters: charset; Indicates the character encoding of
      enclosed XML.  Default is UTF-8.
   Encoding considerations: Uses XML, which can employ 8-bit characters,
      depending on the character encoding used.  See [RFC3023],
      section 3.2.
   Security considerations: This content type is designed to carry
      information about current user activity, which may be considered
      private information.  Appropriate precautions should be adopted to
      limit disclosure of this information.
   Interoperability considerations: This content type provides a common
      format for sending attention requests.
   Published specification: RFC XXXX
   Applications which use this media type: Instant messaging systems.
   Additional information: none
   Person & email address to contact for further information: Gustavo 
      Garcia, ggb@tid.es
   Intended usage: LIMITED USE
   Author/Change controller: This specification is a work item of the
      IETF SIMPLE working group, with the mailing list address
      simple@ietf.org.
   Other information: This media type is a specialization of
      application/xml [RFC3023], and many of the considerations
      described there also apply to application/im-poke+xml.
    ]]></artwork>
        </figure>
        </t>
      </section>
      <section anchor="URNRegistration" title="URN Sub-Namespace Registration for  'urn:ietf:params:xml:ns:im-poke'">
        <t><figure>
        <artwork><![CDATA[
   URI: urn:ietf:params:xml:ns:im-poke
   Description: This is the XML namespace for XML elements defined by
      [RFC XXXX] to describe attention request by an instant messaging
      client using the application/im-poke+xml content type.
   Registrant Contact: IETF, SIMPLE working group, simple@ietf.org,
      Gustavo Garcia, ggb@tid.es
   XML:

    BEGIN
      <?xml version="1.0"?>
      <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.0//EN"
      "http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd">
      <html xmlns="http://www.w3.org/1999/xhtml">
      <head>
           <meta http-equiv="content-type"
           content="text/html;charset=iso-8859-1"/>
           <title>Attention Request (POKE) for Instant Messaging</title>
      </head>
      <body>
          <h1>Namespace for SIMPLE poke extension</h1>
          <h2>urn:ietf:params:xml:ns:im-poke</h2>
          <p>See <a href="[URL of published RFC]">[RFCXXXX]</a>.</p>
       </body>
       </html>
    END
    ]]></artwork>
        </figure>
        </t>
      </section>
      <section anchor="SchemaRegistration" title="Schema registration">
        <t>This section registers a new XML schema per the procedures in <xref target="RFC3688"/>.</t>
        <t><figure>
        <artwork><![CDATA[
   URI: urn:ietf:params:xml:schema:im-poke
   Registrant Contact: IETF, SIMPLE working group, (simple@ietf.org),
      Gustavo Garcia (ggb@tid.es).
    ]]></artwork>
        </figure>
        </t>
        <t>The XML for this schema can be found as the sole content of <xref target="schema"/>.</t>
      </section>
    </section>

  <section anchor="Acknowledgements" title="Acknowledgements">
  <t>We would like to acknowledge the valuable ideas and support given by Guido Garcia and the useful comments received from Jose Luis Urien.</t>
  </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.3023.xml"?>
      <?rfc include="reference.RFC.3688.xml"?>
    </references>
    <references title="Informative References">
    <reference anchor="XEP-0224">
        <front>
          <title>XEP-0224: Attention</title>
          <author initials="A." surname="Monitzer">
            <organization></organization>
          </author>
          <date month="august" year="2008" />
        </front>
      </reference>
    </references>
  </back>
</rfc>

