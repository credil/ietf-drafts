<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

  <!ENTITY RFC1035 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml">
  <!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
  <!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
  <!ENTITY RFC5280 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
  <!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
  <!ENTITY RFC3642 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3642.xml">
  <!ENTITY RFC4033 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml">
  <!ENTITY RFC4055 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4055.xml">
  <!ENTITY RFC4648 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4648.xml">
  <!ENTITY RFC5395 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5395.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" docName="draft-hallambaker-digesturi-00" ipr="trust200902">

  <front>
    <title abbrev="The DIGEST URI Scheme">The DIGEST URI Scheme</title>
    <author fullname="Phillip Hallam-Baker" initials="P. M." surname="Hallam-Baker">
      <organization>Comodo Group Inc.</organization>
      <address>
        <email>philliph@comodo.com</email>
      </address>
    </author>
    <author fullname="Rob Stradling" initials="R. N." surname="Stradling">
      <organization>Comodo CA Ltd.</organization>
      <address>
        <email>rob.stradling@comodo.com</email>
      </address>
    </author>
    
    <date day="27" month="September" year="2011" />

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>Cryptography</keyword>
    <keyword>URI</keyword>


    <abstract>
      <t>
        A URI scheme for referencing static data abjects by means of a 
        cryptographic digest mechanism is specified. The format is designed 
        to resist content type substitution attacks and supports a
        choice of digest algorithms.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Definitions">
      <section title="Requirements Language">
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
          "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
          document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.
        </t>
      </section>
      <section title="Defined Terms">
        <t>The following terms are used in this document:</t>
        <t>
          <list style="hanging">
            <t hangText="Abstract Syntax Notation One (ASN.1)">
              A notation for describing abstract types and values,
              as specified in <xref target="X.680">X.680</xref>.
            </t>

          </list>
        </t>
      </section>
    </section>

    <section title="The DIGEST URI Type.">
      <t>
        Provides a strong reference to a static data object.
      </t>
      <t>
        Does not provide a means of resolution.
      </t>
      <t>
        Allows an authenticated data source to provide an authenticated 
        reference to a static data object.
      </t>
      <t>
        Intended applications include creating references from
      </t>
      <t>
        <list>
          <t>
            Web pages delivered over HTTP/TLS
          </t>
          <t>
            DNS resource records signed using DNSSEC
          </t>
          <t>
            Data values embedded in certificates, CRLs, OCSP tokens 
            and other signed data objects.
          </t>
        </list>
      </t>
      <section title="The DIGEST URI TYPE">
        <t>
          The DIGEST URI Type has the following format:
        </t>
        <t>
          DIGEST:&lt; Base64 (Object Digest Value Specifier) &gt;
        </t>
      </section>
      <section title="Use in binary formats.">
        <t>
          The URI encoding of the Object Digest Value Specifier
          is compatible with ASCII encoding formats and MAY be used in
          any situation where a URI is specified.
        </t>
        <t>
          In a binary format such as an ASN.1 signed object, a
          direct encoding of the data without the BASE64 encoding 
          MAY be more convenient. 
        </t>
      </section>
    </section>

    <section title="Object Digest Value Specifier">
      <t>
        An Object Digest is an ASN.1 structure with three components:
      </t>
      <t>
        <list>
          <t>An ASN.1 Object Identifier specifying the object type of the referenced object</t>
          <t>An ASN.1 Object Identifier specifying the digest algorithm.</t>
          <t>Either:
            <list>

              <t>An ASCII MIME Content type specifier.</t>

              <t>
                An ASN.1 <xref target="X.690">DER</xref> encoded data
                field containing the digest value of the referenced
                object processed using the specified digest algorithm.
              </t>
            </list>
          </t>
        </list>
      </t>
      <t>
        The ASN.1 structure is defined by the following schema:
      </t>
      <figure>
        <artwork>
<![CDATA[DIGESTURI DEFINITIONS ::=

BEGIN

 ObjectDigestIdentifier ::= SEQUENCE {
   CHOICE {
     OIDtype        OBJECT IDENTIFIER,
     MIMEtype       IA5String
     }
   digestAlgorithm  OBJECT IDENTIFIER,
   digest           OCTET STRING
 }

END]]>
        </artwork>
      </figure>


      <t>
        The Object Digest Identifier construction is designed to facilitate
        implementation in applications that already require ASN.1 handling
        mechanisms (i.e. most cryptographic applications) without causing an
        undue coding burden in cases where ASN.1 code is not already supported.
        Appendix C provides all the necessary information to create a fully
        compliant Object Digest Identifier implementation.
      </t>
      <section title="Example: CA Certificate A">
        <t>
          The ODI of CA Certificate A (specified in Appendix B.1)
          is calculated as follows:
        </t>
        <t>
          <list>
            <t>
              ASN.1 Sequence tag: <spanx style="verb">3032</spanx>
            </t>
            <t>
              ASN.1 OID id-at-cACertificate (2.5.4.37): <spanx style="verb">0603550425</spanx>
            </t>
            <t>
              ASN.1 OID sha256 (2.16.840.1.101.3.4.2.1): <spanx style="verb">0609608648016503040201</spanx>
            </t>
            <t>
              SHA-256 Digest Value: <spanx style="verb">042017cc980f6a84fb15e5da3f32afea62360f4ca29627feed68739a13062defe804</spanx>
            </t>
          </list>
        </t>
        <t>
          The DIGEST URI is 
          DIGEST:MDIGA1UEJQYJYIZIAWUDBAIBBCAXzJgPaoT7FeXaPzKv6mI2D0yilif+7WhzmhMGLe/oBA==.
        </t>
      </section>
      <section title="Example: Text File">
        <t>
          The Digest URI of the text file "Hello World" is computed as follows:
        </t>
        <t>
          <list>
            <t>
              ASN.1 Sequence tag  <spanx style="verb">3039</spanx>
            </t>
            <t>
              ASN.1 IA5String 'text/plain'  <spanx style="verb">160A746578742f706c61696e</spanx>
            </t>
            <t>
              ASN.1 OID 'SHA-256' <spanx style="verb">0609608648016503040201</spanx>
            </t>
            <t>
              SHA-256 Digest Value <spanx style="verb">a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e</spanx>
            </t>
          </list>
        </t>
        <t>
          The DIGEST URI is
          DIGEST:MDkWCnRleHQvcGxhaW4GCWCGSAFlAwQCAaWRptQL9CBASgEXM8+3sZDWLGW/C82jK1eyd9mtnxRu.
        </t>
      </section>

    </section>






    <section title="Security Considerations">
      <section title="Integrity">
        <t>
          No secret information is required to
          generate a DIGEST URI. Therefore
          a DIGEST URI only provides a proof of integrity for the
          referenced object and the proof of integrity provided is 
          only as good as the proof of integrity for the DIGEST URI 
          value.
        </t>

      </section>

      <section title="Confidentiality">
        <t>
          Disclosure of a DIGEST URI value does not necessarily 
          entail disclosure of the referenced object but may enable
          an attacker to determine the contents of the referenced object
          by reference to a search engine or other data repository.
        </t>
      </section>
      <section title="Weak Digest Algorithm">
        <t>
          [The digest algorithm MUST be strong]
        </t>
        <t>
          [For most use cases collision resistance is a requirement]
        </t>
      </section>   
      
    </section>

    <section title="IANA Considerations">

      <t>
        [Assign the DIGEST URI type.]
      </t>
    </section>

  </middle>



  <back>
    <references title="Normative References">
      <!--&RFC1035;-->
      &RFC2119;

      <!--&RFC4033;-->
      &RFC4055;
      &RFC5280;
      <!--&RFC5395;-->
      <reference anchor="X.509">
        <front>
          <title>
            ITU-T Recommendation X.509 (11/2008): Information
            technology - Open systems interconnection - The
            Directory: Public-key and attribute certificate
            frameworks
          </title>
          <author>
            <organization>
              International Telecommunication Union
            </organization>
          </author>
          <date month="November" year="2008"/>
        </front>
        <seriesInfo name="ITU-T Recommendation" value="X.509"/>
        <format type="HTML" target="http://www.itu.int/itu-t/recommendations/rec.aspx?rec=X.509"/>
      </reference>
      <reference anchor="X.680">
        <front>
          <title>
            ITU-T Recommendation X.680 (11/2008): Information
            technology - Abstract Syntax Notation One (ASN.1):
            Specification of basic notation
          </title>
          <author>
            <organization>
              International Telecommunication Union
            </organization>
          </author>
          <date month="November" year="2008"/>
        </front>
        <seriesInfo name="ITU-T Recommendation" value="X.680"/>
        <format type="HTML" target="http://www.itu.int/itu-t/recommendations/rec.aspx?rec=X.680"/>
      </reference>
      <reference anchor="X.690">
        <front>
          <title>
            ITU-T Recommendation X.690 (11/2008): Information
            technology - Abstract Syntax Notation One (ASN.1):
            Specification of Basic Encoding Rules (BER),
            Canonical Encoding Rules (CER) and Distinguished
            Encoding Rules (DER)
          </title>
          <author>
            <organization>
              International Telecommunication Union
            </organization>
          </author>
          <date month="November" year="2008"/>
        </front>
        <seriesInfo name="ITU-T Recommendation" value="X.690"/>
        <format type="HTML" target="http://www.itu.int/itu-t/recommendations/rec.aspx?rec=X.690"/>
      </reference>
    </references>
    <references title="Non Normative References">
      &RFC3642;
      &RFC4648;
      <reference anchor="NIST-ALGS">
        <front>
          <title>Cryptographic Algorithm Registration</title>
          <author>
            <organization abbrev="NIST">
              National Institute of Standards and Technology
            </organization>
          </author>
          <date day="11" month="March" year="2009"/>
        </front>
        <format type="HTML" target="http://csrc.nist.gov/groups/ST/crypto_apps_infra/csor/algorithms.html"/>
      </reference>
    </references>


    <section title="Example Certificates">
      <t>
        The following certificates are used in the examples.
      </t>
      <section title="CA Certificate A">
        <t>
          CA Certificate A is a self signed certificate signed with a 2048
          bit RSA key:
        </t>
        <figure>
          <artwork>
<![CDATA[-----BEGIN CERTIFICATE-----
MIIDATCCAeugAwIBAgIBATALBgkqhkiG9w0BAQUwKDERMA8GA1UEChMIQWNtZSBJ
bmMxEzARBgNVBAMTCkV4YW1wbGUgQ0EwHhcNMTAxMTExMTgxMjAzWhcNMjAxMTA4
MTgxMjAzWjAoMREwDwYDVQQKEwhBY21lIEluYzETMBEGA1UEAxMKRXhhbXBsZSBD
QTCCAR8wCwYJKoZIhvcNAQEBA4IBDgAwggEJAoIBALHvos3yEe0ugR6Ae2rPATXA
pBYGK6BMzGTLkXCg6MZaG9CZpfleZTZ/EgIKBwRJlIXvWdKwjMZ7GBByT+fdMDZp
7zkx64UZ4+CJm98NRjdugxovl8HhscIBXnhCHERgamp0U/f8Ho5W8eAxYLZ1XcIG
mB7mVknvolaN9EqlEmYn+qHexGJPlpWFmR4NKhVAATE6B1a9z5PCmoOgW9p0Vqic
SJ6CdAHKaa7JZS+sqNQDx57H8Q6R9lh52XXmJVVficxBp2K7C+Wvht45t68FG6f1
sXWuWDRYc6iUmOxZbzDDvIoFU0pAXESTdMOWvXKI8ZUaYBoZ7/YnSSTaseiW86sC
AwEAAaM9MDswDgYDVR0PAQEBBAQDAgAEMA8GA1UdEwEBAQQFMAMBAQEwGAYDVR0g
BBEwDzANBgsrBgEEAYKUTYUaATALBgkqhkiG9w0BAQUDggEBAGcNiaQXdyiI9Y5e
Ps+XEYdKiWYvmSnRIfbUZuQWaQpPcj5cHzMe91CUZipGDNJYXwqWhIUtQAAGmtrq
ZGa4F9Yh0cPFAHBXPHXKGeM1hMtAR7Mv9kHu4DFIhb822O0n4DdBIit8FNas5t/5
CbM6crDpWB5hjAsD37U+GZGvTJmag059VWjnjv90NcfCQ6YJ6AA5VKnmrV695VnL
dSPaN9VS5RN6heJqU9tcbqPkAEP3MuJtd1QxB8Q34f9e1kTYXxc/dBJK1RQ0F4nc
Jc4NbJzakvFq+QcbzEqkhDMiXvjDV0JJt+GkFZrsREi6IgQY4DQHPv65OIvbr3uW
329dd+g=
-----END CERTIFICATE-----]]>
          </artwork>
        </figure>
        <t>
          In binary form, the certificate data is:
        </t>
        <figure>
          <artwork>
<![CDATA[0000  30 82 03 01 30 82 01 eb  a0 03 02 01 02 02 01 01
0010  30 0b 06 09 2a 86 48 86  f7 0d 01 01 05 30 28 31
0020  11 30 0f 06 03 55 04 0a  13 08 41 63 6d 65 20 49
0030  6e 63 31 13 30 11 06 03  55 04 03 13 0a 45 78 61
0040  6d 70 6c 65 20 43 41 30  1e 17 0d 31 30 31 31 31
0050  31 31 38 31 32 30 33 5a  17 0d 32 30 31 31 30 38
0060  31 38 31 32 30 33 5a 30  28 31 11 30 0f 06 03 55
0070  04 0a 13 08 41 63 6d 65  20 49 6e 63 31 13 30 11
0080  06 03 55 04 03 13 0a 45  78 61 6d 70 6c 65 20 43
0090  41 30 82 01 1f 30 0b 06  09 2a 86 48 86 f7 0d 01
00a0  01 01 03 82 01 0e 00 30  82 01 09 02 82 01 00 b1
00b0  ef a2 cd f2 11 ed 2e 81  1e 80 7b 6a cf 01 35 c0
00c0  a4 16 06 2b a0 4c cc 64  cb 91 70 a0 e8 c6 5a 1b
00d0  d0 99 a5 f9 5e 65 36 7f  12 02 0a 07 04 49 94 85
00e0  ef 59 d2 b0 8c c6 7b 18  10 72 4f e7 dd 30 36 69
00f0  ef 39 31 eb 85 19 e3 e0  89 9b df 0d 46 37 6e 83
0100  1a 2f 97 c1 e1 b1 c2 01  5e 78 42 1c 44 60 6a 6a
0110  74 53 f7 fc 1e 8e 56 f1  e0 31 60 b6 75 5d c2 06
0120  98 1e e6 56 49 ef a2 56  8d f4 4a a5 12 66 27 fa
0130  a1 de c4 62 4f 96 95 85  99 1e 0d 2a 15 40 01 31
0140  3a 07 56 bd cf 93 c2 9a  83 a0 5b da 74 56 a8 9c
0150  48 9e 82 74 01 ca 69 ae  c9 65 2f ac a8 d4 03 c7
0160  9e c7 f1 0e 91 f6 58 79  d9 75 e6 25 55 5f 89 cc
0170  41 a7 62 bb 0b e5 af 86  de 39 b7 af 05 1b a7 f5
0180  b1 75 ae 58 34 58 73 a8  94 98 ec 59 6f 30 c3 bc
0190  8a 05 53 4a 40 5c 44 93  74 c3 96 bd 72 88 f1 95
01a0  1a 60 1a 19 ef f6 27 49  24 da b1 e8 96 f3 ab 02
01b0  03 01 00 01 a3 3d 30 3b  30 0e 06 03 55 1d 0f 01
01c0  01 01 04 04 03 02 00 04  30 0f 06 03 55 1d 13 01
01d0  01 01 04 05 30 03 01 01  01 30 18 06 03 55 1d 20
01e0  04 11 30 0f 30 0d 06 0b  2b 06 01 04 01 82 94 4d
01f0  85 1a 01 30 0b 06 09 2a  86 48 86 f7 0d 01 01 05
0200  03 82 01 01 00 67 0d 89  a4 17 77 28 88 f5 8e 5e
0210  3e cf 97 11 87 4a 89 66  2f 99 29 d1 21 f6 d4 66
0220  e4 16 69 0a 4f 72 3e 5c  1f 33 1e f7 50 94 66 2a
0230  46 0c d2 58 5f 0a 96 84  85 2d 40 00 06 9a da ea
0240  64 66 b8 17 d6 21 d1 c3  c5 00 70 57 3c 75 ca 19
0250  e3 35 84 cb 40 47 b3 2f  f6 41 ee e0 31 48 85 bf
0260  36 d8 ed 27 e0 37 41 22  2b 7c 14 d6 ac e6 df f9
0270  09 b3 3a 72 b0 e9 58 1e  61 8c 0b 03 df b5 3e 19
0280  91 af 4c 99 9a 83 4e 7d  55 68 e7 8e ff 74 35 c7
0290  c2 43 a6 09 e8 00 39 54  a9 e6 ad 5e bd e5 59 cb
02a0  75 23 da 37 d5 52 e5 13  7a 85 e2 6a 53 db 5c 6e
02b0  a3 e4 00 43 f7 32 e2 6d  77 54 31 07 c4 37 e1 ff
02c0  5e d6 44 d8 5f 17 3f 74  12 4a d5 14 34 17 89 dc
02d0  25 ce 0d 6c 9c da 92 f1  6a f9 07 1b cc 4a a4 84
02e0  33 22 5e f8 c3 57 42 49  b7 e1 a4 15 9a ec 44 48
02f0  ba 22 04 18 e0 34 07 3e  fe b9 38 8b db af 7b 96
0300  df 6f 5d 77 e8]]>
          </artwork>
        </figure>
        <t>
          The SHA-256 digest of the certificate data is:
        </t>
        <figure>
          <artwork>
<![CDATA[17cc980f6a84fb15e5da3f32afea62360f4ca29627feed68739a13062defe804]]>
          </artwork>
        </figure>
      </section>
    </section>

    <section title="ASN.1 Values (Non-Normative)">
      <t>
        Although the Object Digest Identifier form employs ASN.1 DER encoding
        only a small subset of ASN.1 features are used and a full ASN.1 stack
        is not necessary.
      </t>
      <t>
        This appendix provides sufficient information to implement an Object
        Digest Identifier constructor or parser.
      </t>
      <section title="DER Sequence Encoding">
        <t>
          In DER encoding, the enclosing SEQUENCE will always be
          represented by the type identifier x30 followed by the length
          specifier. Since the total length of the following data fields
          will almost certainly be less than 127 bytes, the single byte
          encoding mechanism in which bit 7 is clear and the length
          value is encoded in the lower 7 bits will be required.
        </t>
      </section>
      <section title="Object Identifiers for Certificate Types">
        <t>
          OIDs have been defined in connection with the X.500 directory for
          user certificates, certification authority certificates, revocations
          of certification authority, and revocations of user certificates.
          The following table lists the OIDs, their DER encoding, and their
          type identifier and length-prefixed hex format for use in Object
          Digest Identifiers.
        </t>

        <figure>
          <artwork>
<![CDATA[id-at  OBJECT IDENTIFIER  ::=  { joint-iso-itu-t(2) ds(5) 4 }

id-at-userCertificate  OBJECT IDENTIFIER  ::=  { id-at 36 }    
                                                 -- 06 03 55 04 24
  id-at-cACertificate  OBJECT IDENTIFIER  ::=  { id-at 37 }    
                                                 -- 06 03 55 04 25
 TBS-PUBLIC-KEY-VALUE  OBJECT IDENTIFIER  ::=  { ??? }         
                                                 -- 06 xx xx xx xx]]>
          </artwork>
        </figure>
      </section>
      <section title="Object Identifiers for Digest Algorithms">
        <t>
          OIDs have been assigned by NIST for the SHA-2 digest algorithms
          <xref target="NIST-ALGS"/> <xref target="RFC4055"/>
          Use of the SHA-1 digest algorithm is not recommended due to
          concerns for the security of the algorithm.
        </t>

        <figure>
          <artwork>
<![CDATA[hashAlgs  OBJECT IDENTIFIER  ::=  { joint-iso-itu-t(2) 
              country(16) us(840) organization(1) gov(101) csor(3) 
              nistAlgorithm(4) 2 }

id-sha256  OBJECT IDENTIFIER  ::=  { hashAlgs 1 }    
                                     -- 06 09 60 86 48 01 65 03 04 02 01
id-sha384  OBJECT IDENTIFIER  ::=  { hashAlgs 2 }    
                                     -- 06 09 60 86 48 01 65 03 04 02 02
id-sha512  OBJECT IDENTIFIER  ::=  { hashAlgs 3 }    
                                     -- 06 09 60 86 48 01 65 03 04 02 03
id-sha224  OBJECT IDENTIFIER  ::=  { hashAlgs 4 }    
                                     -- 06 09 60 86 48 01 65 03 04 02 04]]>
          </artwork>
        </figure>
      </section>
      <section title="DER Data Encoding Prefixes">
        <t>
          The rules of ASN.1 encoding state that every data value is preceded
          by a data type identifier and a length identifier. In the case of
          an Object Digest Identifier the data type identifier is always
          OCTET STRING (04) and the length for all currently defined digest algorithms
          will be less than 128 bytes (1024 bits) and thus use the single
          byte encoding form in which bit 7 is set to 0 and the lower 7 bits
          specify the length.
        </t>
        <t>
          The length prefixes for commonly used digest lengths in
          hexadecimal notation are thus:
        </t>
        <t>
          <list style="hanging">
            <t hangText="160 bits">04 14</t>
            <t hangText="224 bits">04 1C</t>
            <t hangText="256 bits">04 20</t>
            <t hangText="384 bits">04 30</t>
            <t hangText="512 bits">04 40</t>
          </list>
        </t>
      </section>

    </section>



  </back>
</rfc>
