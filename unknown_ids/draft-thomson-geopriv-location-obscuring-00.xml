<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="info" ipr="trust200902">
  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title abbrev="Obscuring Location">A Process for Obscuring Location</title>
    <author initials="M." surname="Thomson" fullname="Martin Thomson">
      <organization>Andrew Corporation</organization>
      <address>
        <postal>
          <street>Andrew Building (39)</street>
          <street>Wollongong University Campus</street>
          <street>Northfields Avenue</street>
          <city>Wollongong</city>
          <region>NSW</region>
          <code>2522</code>
          <country>AU</country>
        </postal>
        <phone>+61 2 4221 2915</phone>
        <email>martin.thomson@andrew.com</email>
      </address>
    </author>

    <date month="October" year="2010" />

    <area>RAI</area>

    <workgroup>GEOPRIV</workgroup>

    <keyword>geopriv, geolocation, privacy, obscure, location, fuzz</keyword>

    <abstract>
      <t>A method for obscuring location information is described.  Both static and changing location information can be obscured.  A single distance measure is input to the process; this parameter controls the precision of location information that can be extracted by a recipient.
      </t>
    </abstract>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>A method for obscuring location information is described.  This method obscures location information such that it can be provided to recipients without revealing the location of the subject to within the desired distance.
      </t>

      <t>Obscuring location has applications for protecting privacy, as described in <xref target="I-D.ietf-geopriv-policy"/>.
      </t>

      <t>This method uses a single configuration parameter as input: an <spanx style="emph">obscuring distance</spanx>.
      </t>

      <t>A location recipient (or recipient) is the entity that is given location about a target entity.  The goal is to ensure that the recipient is unable to recover location information with better accuracy than is desired.  Despite this obscuring the recipient should still be able to use the reported locations.
      </t>

      <t>The obscuring process takes a series of <spanx style="emph">known locations</spanx>, which might have greater accuracy than the recipient is permitted to receive.  The obscuring process produces a series of <spanx style="emph">reported locations</spanx>.
      </t>
    </section>

    <section anchor="characteristics" title="Method Characteristics and Applicability">
      <t>The method described here is intended to provide limited protection for location information.  The method has the following characteristics:

      <list style="hanging">
        <t hangText="Simple:">It might be possible to define a more complete solution for obscuring location information that is more configurable.  However, a more configurable option would also demand greater involvement from users so that they would be able to specify a configuration that meets their goals.  This method is designed to be easy to understand, which increases the chances that a user is able to successfully choose an appropriate configuration.  The method has just one input parameter: the obscuring distance.
        </t>

        <t hangText="Irreversible:">Obscuring is intended to be irreversible.  Information is lost by applying the process.  Multiple applications of this process to the same input location is could reduce information more than a single application of the process with the largest obscuring distance.
        </t>

        <t hangText="Increases Uncertainty:">A recipient does not need to treat obscured location information any differently to location information that contains uncertainty.  The uncertainty of the reported location is increased so that the reported location includes the known location.  Thus, the information that is reported is correct, though the accuracy might be reduced.  This document relies on a definition of uncertainty for location described in more detail in <xref target="I-D.thomson-geopriv-uncertainty"/>.
        </t>

        <t hangText="Two Dimensions:">The method described in this document operates in two dimensions only.  Many of the principles might be applicable in a higher number of dimensions, though no effort has been made to validate their integrity.  A three-dimensional location can be reduced to a two-dimensional form for use in this algorithm.  This is not contrary to the goal of reducing the amount of information provided.
        </t>

        <t hangText="Time Invariant:">The method described in this document does not use time.  Only the location is protected, not the time that the location was determined.  An entity performing obscuring does not need to consider time in applying this method.  The time from the known location is included in the reported location.
        </t>

        <t hangText="Obscuring Distance Not Secret:">No attempt is made to retain any secrecy of the obscuring distance.  It is assumed that a recipient is able to learn this value over time.
        </t>
      </list>
      </t>
    </section>

    <section anchor="static" title="Obscuring Static Locations">
      <t>The basic location obscuring case involves an isolated instance of location information.
      </t>

      <t>It might be appropriate to apply just this section in protecting the privacy of a single location.   A recipient must be unable to acquire multiple location instances for the same entity if this is the only form of obscuring used.
      </t>

      <section anchor="point" title="Known Point Locations">
        <t>A known point location can be obscured by adding a randomized offset vector to the location.  The size of the offset vector is randomly selected so that the reported location could be anywhere within the obscuring distance of the known location, see <xref target="rvector"/>.
        </t>

        <t>The uncertainty of the reported location is set to the obscuring distance.  This ensures that the reported uncertainty region encloses the known location.
        <list style="hanging"><t hangText="Note:">It's not sufficient to increase the uncertainty region so that it minimally includes the known location.  Doing this reveals that the known location is at the boundary of the reported uncertainty region.
        </t></list>
        </t>
      </section>

      <section title="Known Locations with Uncertainty">
        <t>A known location with uncertainty is reduced to a circular uncertainty region (see <xref target="I-D.thomson-geopriv-uncertainty"/>, Section 4.2).  An irregularly shaped uncertainty region is difficult to evaluate against the scalar obscuring distance, and it might inadvertently reveal more information than intended.
        </t>

        <t>A known location with uncertainty greater than the obscuring radius does not require additional obscuring.  The radius of the circular uncertainty region is compared to the obscuring distance to determine if further obscuring is necessary.  A location with sufficient uncertainty can be directly reported.
        </t>

        <t>Randomization is needed if the known location contains insufficient uncertainty.  As for a point location, an offset vector is added and the uncertainty increased to the obscuring distance.  A smaller offset vector is necessary where the known location has uncertainty - this vector need only be of a size up to the obscuring distance, less the existing uncertainty.
        </t>

        <t>The reported uncertainty is increased so that the reported location contains an uncertainty radius of at least the obscuring distance.  An uncertainty in a known location cannot be recovered by a recipient of an obscured location unless it is larger than the obscuring distance.
        </t>
      </section>

      <section anchor="rvector" title="Selecting a Offset Vector">
        <t>To select a random offset vector of up to a given size, select two evenly distributed random numbers.  The first is used to select a random angle, the second to select a random distance.
        </t>

        <t>Assuming a <spanx style="verb">random()</spanx> function produces a number distributed between 0 (inclusive) and 1 (exclusive), the angle and distance can be produced by the following:
        </t>
        <figure><artwork><![CDATA[
      angle =  random() * 2 * pi
      distance =  sqrt(random()) * size
   or
      distance =  (1 - |random() - random()|) * size
]]></artwork></figure>
        <t>...where <spanx style="verb">sqrt(x)</spanx> takes the square root of <spanx style="verb">x</spanx> and <spanx style="verb">|</spanx> takes the absolute value of the enclosed.   <spanx style="verb">size</spanx> is the desired size of the random vector, which could be the obscuring distance less any existing uncertainty.
        </t>

        <t>A recipient that is able to learn the state of the random number generator could use this to determine the known location from a reported location.  A <xref target="RFC4086">secure random number generator</xref> provides an assurance that recovering the state of the random number generator is made more difficult.
        </t>
      </section>

      <section anchor="multiplestatic" title="Multiple Reported Locations">
        <t>Multiple applications of this algorithm produce different results.  The intersection of multiple reported locations can be used to recover a better estimate of the known location.  This recovered estimate has less uncertainty than the obscuring distance, which is not desirable.
        </t>

        <t>Multiple reported locations for the same known location MUST NOT be produced.  An entity that is responsible for obscuring location might achieve this by storing the reported location with the obscured location.
        </t>

        <t>It is possible to implement obscuring for a static location without retaining state.  Seeding a pseudo-random number generator with data that is not available to the recipient can ensure that the same result is produced from the same input.  Taking a hash of the known location combined with a secret key ensures that this seed cannot be easily determined by a recipient.  A hash function that includes the values shown in <xref target="noise2d"/> is sufficient for this task.
        </t>
      </section>
    </section>

    <section anchor="dynamic" title="Obscuring Changing Locations">
      <t>Applications that use the location of a target over time, such as <xref target="RFC4079">presence</xref> require additional steps to ensure that the location a recipient acquires does not reveal more information than desired.
      </t>

      <t>The first consideration is the frequency of updates.  As the target moves, the known location changes.  A continuous stream of reported locations could give a recipient sufficient information to determine the known location with low uncertainty in a fashion close to that described in <xref target="multiplestatic"/>.
      </t>

      <t><list style="hanging"><t hangText="Note:">It is not necessary to ensure that a recipient always has accurate location information.  Early proposed algorithms wrongly assumed that the reported location was required to cover the known location at all times.  Even in the absence of obscuring, changes in location result in a recipient having outdated information.  The only necessary constraint is that the location be accurate at the time that it is reported (or the time associated with that report).
      </t></list></t>

      <section anchor="trigger" title="Update Conditions">
        <t>To limit the amount of information provided to a recipient, new reported locations are not generated in response to all changes in the known location.  The trigger for creating a new reported location can be defined.
        </t>

        <t>Any trigger condition needs to be constructed in a way that does not reveal information.  At the point that a new reported location is provided to a recipient, the fact that the trigger conditions are met at that point in time provides the recipient with significant information that could - if the trigger conditions were poorly defined - reveal significant information.
        </t>

        <t>The goal is to provide a new reported location when the known location moves by approximately the obscuring distance.  This limits the information that a recipient has available with similar accuracy to each individual location.
        </t>

        <section anchor="bad-trigger" title="Bad Triggers">
          <t>One potential trigger is the movement of the target outside of the reported uncertainty region.  At the point that a new reported location is generated, a recipient knows that the target is a) at the boundary of the last uncertainty region, and b) somewhere in the new uncertainty region.  The intersection of these two regions produces an area that is significantly smaller than desired.
          </t>

          <figure anchor="overlap" title="Trigger on Leaving the Reported Location">
            <artwork><![CDATA[
                                  New Reported
                                    Location
           ..--"""--..   ..--"""--..   /
        .-'           /=\.          `-.
      ,'            ,'   \\            `.
     /             /       \\            \
    /             /         \\            \
   |             |           ||            |
   |             |           ||            |
   |             |           ||            |
    \             \         //            /
     `.            `.     // \          .'
       `._           `._//    \      _.'
      /   `--..___..--' `--..__\..--'
   Last Reported                \
     Location               Recovered Location
                              Along Border
]]></artwork>
          </figure>

          <t>Similarly, information is revealed if the trigger is movement based on the known location.  A new reported location might be produced when the known location moves more than the obscuring distance from the known location from the last report.
          <list style="empty">
            <t>That is, when a new location is reported, the corresponding known location is saved.  A new reported location is determined when the current known location is more than the obscuring distance from the saved location.
            </t>
          </list>
          If the recipient is able to assume that the target is moving in a straight line, the speed of the target is revealed.
          </t>
        </section>

        <section anchor="hidden-trigger" title="Hidden Trigger">
          <t>To limit the information that is revealed at the point that a new reported location is provided, the trigger conditions can be based on information that is not available to the recipient.
          </t>

          <t>Applying randomization to the trigger reduces the ability of a recipient to make assertions about the significance of a new reported location.
          </t>

          <t>A hidden trigger is established using the following process:
          <list style="symbols">
            <t>When a new reported location is generated:
            <list style="numbers">
              <t>The centroid of the known location is determined.</t>
              <t>A <xref target="rvector">random offset vector</xref> of a maximum size of half the obscuring distance is determined.</t>
              <t>The offset vector is added to the centroid and this value is saved as a trigger point.
              </t>
            </list>
            </t>
            <t>When the known location changes:
            <list style="numbers">
              <t>The centroid of the (new) known location is determined.</t>
              <t>If this centroid is further than the obscuring distance from the saved trigger point, a new reported location is generated.
              </t>
            </list>
            </t>
          </list>
          </t>

          <t>Each new reported location is randomized using the process described in <xref target="static"/>.
          </t>

          <t>This algorithm ensures that the centroid of the known location moves between 0.5 and 1.5 times the obscuring distance before a new reported location is produced.  As a consequence, the uncertainty in the distance moved is equal to the obscuring distance.
          </t>
        </section>
      </section>

      <section anchor="consecutive" title="Consecutive Reported Locations">
        <t>The obscuring method has a weakness that is as a direct consequence of the triggering conditions.  These conditions grant a recipient this information:
        <list style="empty"><t>For any two consecutive reported locations there is a pair of points that are less than 1.5 times the obscuring distance apart, with one point in the area described by each reported location.  The first point is the known location at the time of the first reported location; the second point is the known location at the time of the second reported location.
        </t></list>
        </t>

        <t>At the time that a location is reported, the recipient can use this knowledge to determine that the current location of the target is at the intersection of the new reported location and a circle with a radius of 2.5 times the obscuring distance, centered on the last reported location, as shown in <xref target="biggap"/>
        </t>

        <figure anchor="biggap" title="Consecutive Reported Locations">
          <artwork><![CDATA[
                   Known location .
                   is in overlap   \
      Last                    \     \             New
          ,.--"--..            \     \   ,.--"--..
       ,-'         `-.          \    |,-'         `-.
      /               \          \_  +               \
     |                 |            /|                |
     |        o        |<---------->||       o        |
     |         \       | --> 1.5OD  \|                |
      \         \     /              +               /
       `.        \  ,'               |`.           ,'
         `-..___,.+'                 ;  `-..___,.-'
                   \                /
     |<------>|<----\->|<------>|<-/---->|<------>|<--...
          OD      OD \     OD     / OD       OD
                      \         ,'
                 2.5OD \       /
                        \   _,'
                        _\/'         OD = obscuring
                     _,,-'                distance
]]></artwork>
        </figure>

        <t>Two consecutive reported locations can have their centers up to 3.5 times the obscuring distance apart; making the closest points on each uncertainty region up to 1.5 times the obscuring distance apart.  When consecutive reported locations are maximally distant, a recipient can recover the location of the target almost perfectly.
        </t>

        <t>This relies on the recipient being able to determine the obscuring distance.  As identified, the obscuring distance is not protected.
        </t>

        <section anchor="smoothing" title="Reducing Variation between Offset Vectors">
          <t>This shortcoming can be addressed by reducing the difference between the random offset vector added to consecutive reported locations.  The extreme case shown in <xref target="biggap"/> only arises because the absolute difference between the randomization vector used for in consecutive reported locations is twice the obscuring distance.  The problem occurs when the difference between consecutive know locations approachs 1.5 times the obscuring distance in combination with this large difference between randomization vectors.
          </t>

          <t>Reducing the amount that a offset vector can change between consecutive reported locations reduces.  If the difference between offset vectors is constrained then the effect of this problem is reduced.
          </t>

          <t>Using the same offset vector for all reported locations removes the problem entirely.  However, using the same offset vector increases the chances of that vector being discovered.  For instance, if the target is following a road, reported locations that have a fixed offset from the known location will reveal the shape of the road.  From this it is trivial to learn the offset vector and hence all presence and past locations can be recovered.
          </t>

          <t>Each time a location is randomized, the offset vector used can be the combination of a new random offset vector and the offset  vector that was last used.  The proportion of old and new vectors determines the trade-off between the probability that a recipient is able to learn a more accurate location with the probability that a recipient is able to learn the offset.
          </t>
        </section>

        <section anchor="smoothingamt" title="Trade-off in Reducing Variation">
          <t>A small amount of randomness at each stage makes it difficult to learn the offset vector.  A number reported locations are required to learn the offset vector.  Therefore, as long as the offset vector is able to change significantly over a number of reported locations, the goal is achieved,   Thus, the offset vector need only change a small amount for each consecutive reported location.  This need only make it difficult to learn the vector and to make learning the vector less useful if it is revealed.
          </t>

          <t>In turn a smaller change in the offset vector maximizes the worst case area.  If the absolute difference in offset vectors is half the obscuring distance, then there is no gap between consecutive reported locations and in the worst case the recipient is able to determine the known location to be within 77 percent of the desired area.  This varies based on <spanx style="verb">p(diff)</spanx>, as follows:
          </t>
          <figure><artwork><![CDATA[
   a(diff) = ((1.5 + diff)^2 - 5.25) / (2*(1.5 + diff))
   p(diff) = acos(a(diff)) + 6.25 * acos((1.5 + diff - a(diff)) / 2.5)
             - (1.5 + diff) * sqrt(1 - a(diff)^2)
]]></artwork></figure>
          <t>...where <spanx style="verb">acos(x)</spanx> returns the inverse cosine of <spanx style="verb">x</spanx>.  This only produces a result where <spanx style="verb">diff</spanx> is less than 2.
          </t>

          <t>To create a offset vector that is no more than <spanx style="verb">diff</spanx> times the oscuring distance different to the previous vector, create a new random offset vector and take the weighted average of the two as follows:
          </t>
          <figure><artwork><![CDATA[
   o[new] =  (o[prev] * (2 - diff) + o[random] * diff) / 2
]]></artwork></figure>
          <t>...where <spanx style="verb">o[new]</spanx> is the new ofset vector, <spanx style="verb">o[prev]</spanx> is the new previous vector, and <spanx style="verb">o[random]</spanx> is a completely random vector of the same magnitude.
          </t>
        </section>
      </section>

      <section title="Returning to the Same Location">
        <t>A moving target might return to the same location several times.  The method described thus far produces a different reported location each time.  With some inferences, a recipient that is able to observe location over time could intersect reported locations to recover
        </t>

        <t>Furthermore, if known locations are not available before and after leaving the location that is frequently visited, only that location is obscured.  The known location could be readily extracted.
        </t>

        <section anchor="posstability" title="Positional Stability">
          <t>The key to addressing this flaw is to have the randomization of offset vectors based on the known location.  If the same known location produced a reported location that was equal or very close to it each time that the location was obscured, this would address the problem.
          </t>

          <t>It might be possible to take the coordinates of the known location and pass them through a cryptographic hash function along with a secret key. The result bits would be sufficiently random to produce an offset vector.  This would ensure that the exact same location would produce the same random vector.
          </t>

          <t>The drawback of this sort of method is that the location is obscured inconsistently when even the slightest difference occurs.  Imprecision in the location determination method used produces variations in the known location.
          </t>

          <t>The goal is to ensure that two known locations in close proximity produce a constant (or almost constant) random vector.  It is also desirable that the random vector change as the locations change.  This has the consequence of reducing the difference in randomness between consecutive reported locations, provided that the random values do not vary significantly over a distance of 1.5 times the obscuring distance.
          </t>

          <t>It might be desirable if the random vectors changed over a longer distance, as <xref target="smoothing"/> demonstrates.  If the offset vector changed over a period of approximately 4 times the randomization distance, the vector would change by no more than about 3/4 of the offset distance.
          </t>

          <t>An approach similar to that described in <xref target="PERLIN"/> is used to achieve a continuously varying random field.  In this, randomness is constrained to a grid of points with interpolation used to determine values for intervening points.
          </t>
        </section>

        <section anchor="grid" title="Selecting a Grid">

          <t>In selecting an appropriate grid with two dimensions, the curvature of the surface of the Earth presents a challenge.  The simplest approach might be to select an origin at latitude 0, longitude 0.  Grid points could be placed at increments based on a constant ratio between latitude and longitude and distance; for example, 9e-6 degrees per meter assumes a spherical planet of 6366197 meter radius, which is slightly smaller than the semi-major axis of the ellipsoid used in most Earth models.
          </t>

          <t>Grid intervals can be set to between 4 and 10 times the obscuring distance to ensure that consecutive reported locations have continuously varying offset vectors.  In <spanx style="verb">n</spanx> dimensions, for a given multiple of <spanx style="verb">m</spanx>, the offset vector changes by a factor of:
          </t>
          <figure><artwork><![CDATA[
   change = (1 - (m - 1.5 * 2^((3 - n)/2)) / m)^n
]]></artwork></figure>

          <t>For a two-dimensional grid with a multiple of <spanx style="verb">m</spanx>, the following equations identify the latitude and longitude of the four nearest grid points to a given location:
          </t>
          <figure><artwork><![CDATA[
   grid =  m * obscuring distance * 9e-6

   latitude[low] =  floor(latitude / grid) * grid
   latitude[high] =  latitude[low] + grid

   longitude[low] =  floor(longitude / grid) * grid
   longitude[high] =  longitude[low] + grid
]]></artwork></figure>
          <t>...where <spanx style="verb">floor(x)</spanx> produces the nearest whole integer that is more negative than <spanx style="verb">x</spanx>.
          </t>

          <t>The shortcoming of a grid of this nature is that changes in longitude are more rapid as locations get closer to the poles.  At approximately 60 degrees of latitude (North or South), grid intervals on the East-West direction are twice as frequent as desired.  For this reason, larger intervals between grid points might be chosen for longitudes.
          </t>

          <t>Selecting a local tangent plane removes the effect of the curvature of the Earth, but introduces the problem of selecting an appropriate tangent plane as locations change.
          </t>

          <t><list style="empty"><t>In three dimensions, conversion to Earth-centered, Earth-fixed Cartesian coordinates renders this problem moot.</t></list></t>
        </section>

        <section anchor="noise2d" title="Random Grid">
          <t>At each of the points on the grid, a random offset vector is produced using the method described in <xref target="rvector"/>.  The resulting offset vectors are interpolated as shown in <xref target="interp"/>.
          </t>

          <t>Rather than use a random number generator, the random number should be produced using a cryptographic hash function.  The input to this hash should include:
          <list style="symbols">
            <t>a secret sequence that is only known by the entity that performs the obscuring,
            </t>
            <t>the identity of the target,
            </t>
            <t>each individual coordinate of the grid point, and
            </t>
            <t>as necessary, an identifier for the purposes of the random number: angle, distance, and (optionally) a second distance, depending on the method used to generate the random offset vector.
            </t>
          </list>
          The inclusion of a secret ensures that a recipient is unable to construct the offset vector.  This secret is persistent so that later applications of the obscuring formula do not produce a different offset vector for the same location.
          </t>

          <t><xref target="rvector"/> requires that two or three random numbers are produced.  The additional identifier produces additional randomness where multiple random (or pseudo-random) numbers are required.
          </t>

          <t>Using a hash in this fashion ensures that each target gets a different set of random offset vectors and that the same grid point coordinates produce the same result.
          </t>

          <t>Though ordering need only be consistent between consequent applications of the obscuring algorithm, the following might be used:
          </t>
          <figure><artwork><![CDATA[
   random_bits = H(secret key + target identity + identifier
                   + grid coordinate + grid coordinate + ...)
]]></artwork></figure>
          <t>...where <spanx style="verb">+</spanx> implies concatenation, including a delimiter as necessary (that is, where elements are of variable length).
          </t>

          <t>One consequence of this approach is that changes to the obscuring distance result in the noise pattern being completely changed.  This can result in the same known location producing a significantly different reported location before and after the change.
          </t>
        </section>

        <section anchor="interpolation" title="Interpolation of Random Offsets">
          <t>Once a grid of random offset vectors is established, an offset vector is calculated based on the centroid of the known location.  <xref target="interp"/> shows a point at <spanx style="verb">(x,y)</spanx> and the values that are used in the interpolation process.
          </t>
          <figure anchor="interp" title="Grid Interpolation">
            <artwork><![CDATA[
         |                              |
    - ---o------------------------------o---
        /|          ^                  /|
 (x1,y2) |          |           (x2,y2) |
         |          | (y2-y)            |
         |    (x,y) |                   |
         |        \ v                   |
         |<-(x-x1)->X<------(x2-x)----->|
         |          ^                   |
         |          | (y-y1)            |
         |          v                   |
    - ---o------------------------------o---
        /|                             /|
 (x1,y1) |                      (x2,y1) |
]]></artwork>
          </figure>

          <t>The offset vector at the identified point is produced by taking the weighted average of the offset vectors.  Two weighted averages are taken between pairs of adjacent grid points along the same axis, then the weighted average of the two resulting vectors is taken along the other axis.
          </t>

          <t>The following equations produce an interpolated offset vector for any point in this grid cell:
          </t>
          <figure><artwork><![CDATA[
   w1 = (o[x1,y1] * (x2-x) + o[x2,y1] * (x-x1)) / (x2-x1)
   w2 = (o[x1,y1] * (x2-x) + o[x2,y1] * (x-x1)) / (x2-x1)
   offset = (w1 * (y2-y) + w2 * (y-y1)) / (y2-y1)
]]></artwork></figure>
          <t>...where <spanx style="verb">o[x1,y1]</spanx> is the random offset vector at the grid point <spanx style="verb">(x1,y1)</spanx>.
          </t>
        </section>

        <section anchor="wonky" title="The Wonky Grid">
          <t>To address the concerns caused by the curvature of the Earth, a modified grid-like structure can be used.  It is not strictly necessary that the grid be absolutely grid-like in structure.  Therefore, it's possible that different grid intervals could be selected.
          </t>

          <t>This structure uses a different interval for points at different latitudes, at the selected low latitude:
          </t>
          <figure><artwork><![CDATA[
   grid[llat] =  grid / cos(latitude[low])
   longitude[low,llat] =  floor(longitude / grid[llat]) * grid[llat]
   longitude[high,llat] =  longitude[low,llat] + grid[llat]
]]></artwork></figure>
          <t>...and at the high latitude:
          </t>
          <figure><artwork><![CDATA[
   grid[hlat] = grid / cos(latitude[high])
   longitude[low,hlat] = floor(longitude / grid[hlat]) * grid[hlat]
   longitude[high,hlat] = longitude[low,hlat] + grid[hlat]
]]></artwork></figure>
          <t>...where <spanx style="verb">cos(x)</spanx> produces the cosine of <spanx style="verb">x</spanx>.
          </t>

          <t>This produces fewer grid points for latitudes that are further from the Equator.  At the poles (and above), a single offset vector is sufficient.
          </t>

          <t>Interpolation of these points uses four distinct points, as shown in <xref target="wonkyinterp"/>.
          </t>

          <figure anchor="wonkyinterp" title="Wonky Grid Interpolation">
            <artwork><![CDATA[
                           (x-x1_2)        (x2_2-x)
                         |<-------->|<----------------->|
                         |          |                   |
                    - ---o------------------------------o--- -
                        /|          |         ^         |\
               (x1_2,y2) :          |         |         : (x2_2,y2)
                                    |         | (y2-y)
                             (x,y)  '         |
                                  \           v
                                    X   - ------
                                              ^
            :                       .   :     | (y-y1)
            |                       |   |     v
       - ---o---------------------------o--------------- -
           /|                       |   |\
  (x1_1,y1) |<--------------------->|<->| (x2_1,y1)
                    (x-x1_1)       (x2_1-x)
]]></artwork>
          </figure>

          <t>Interpolation uses the amended equations:
          </t>
          <figure><artwork><![CDATA[
   w1 = (o[x1_1,y1] * (x2_1-x) + o[x2_1,y1] * (x-x1_1)) / (x2_1-x1_1)
   w2 = (o[x1_2,y2] * (x2_2-x) + o[x2_2,y2] * (x-x1_2)) / (x2_2-x1_2)
   offset = (w1 * (y2-y) + w2 * (y-y1)) / (y2-y1)
]]></artwork>
          </figure>
        </section>

        <section title="Temporal Interpolation">
          <t>[MT: This is a little speculative, but I thought it interesting.  This might need to go.]</t>
          <t>It is also possible to create an additional dimension upon which to interpolate the offset vector.  This would allow the offset vector to change gradually over time as well as with respect to space.
          </t>

          <t>This might be done to allow the obscuring entity to change the secret key that it maintains.
          </t>
        </section>

        <section title="Triggering with Positional Stability">
          <t>The concept of a trigger is less crucial in protecting the privacy of the location when the positional stability method is used.  As long as the trigger for providing a new reported location to a recipient is based on something other than direct movement, the actual location of the target is protected.
          </t>

          <t>The advantage of retaining a specific trigger for provided new reported location is that it reduces the information provided to a recipient.  Providing updates at a higher rate provide a recipient with additional information that could be used to recover the offset.
          </t>

          <t>No specific changes are required for the triggering process, though this does require that some state be maintained by the entity that performs obscuring.  [TBD: work out how to avoid this - should be relatively easy to trigger based on a similar process as is used to construct the grid.]
          </t>

          <t>The alternative is to place a limit on the rate that new reported locations are reported to recipients.  The drawback to this approach is that as the speed of the target varies, the effectiveness of this approach varies.  At a slow speed (relative to the obscuring distance), this could still produce more updates than are desirable.
          </t>
        </section>
      </section>
    </section>

    <section anchor="examples" title="Examples">
      <t>[TBD: worked examples and reference implementation.]</t>
    </section>

    <section anchor="ack" title="Acknowledgements">
      <t>Thanks go to Robert Sparks for identifying key shortcomings in the original attempts.   Richard Barnes, Jorge Cuellar, Warren Kumari, and Hannes Tschofenig variously provided input, feedback, criticisms and insightful ideas.
      </t>
    </section>

    <section anchor="iana" title="IANA Considerations">
      <t>This document has no IANA actions.</t>
      <t>[RFC Editor: please remove this section prior to publication.]</t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>This entire document is about security.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Informative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4079.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4086.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-geopriv-arch"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-geopriv-policy"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.thomson-geopriv-uncertainty"?>
      <reference anchor="PERLIN">
        <front>
          <title>
            An Image Synthesizer
          </title>
          <author initials="K" surname="Perlin" fullname="Ken Perlin">
            <organization/>
          </author>
          <date year="1985" month="July"/>
        </front>
        <seriesInfo name="ACM SIGGRAPH Computer Graphics" value="v.19 n.3, p.287-296"/>
      </reference>
    </references>

  </back>
</rfc>
