<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<!DOCTYPE rfc SYSTEM 'rfcXXXX.dtd'>

<rfc category='info' ipr='trust200902'
     docName='draft-ietf-avtext-mixer-to-client-audio-level-00'>

<?rfc toc='yes' ?>
<?rfc symrefs='yes' ?>
<?rfc sortrefs='yes'?>
<?rfc iprnotified='no' ?>
<?rfc strict='yes' ?>
<?rfc compact='yes' ?>
  <front>

    <title abbrev='Mixer-to-client Audio Level Indication'>
      A Real-Time Transport Protocol (RTP) Header Extension for Mixer-to-Client
      Audio Level Indication
    </title>

    <author initials='E.' surname='Ivov' fullname='Emil Ivov' role="editor">
      <organization abbrev='SIP Communicator'>SIP Communicator</organization>
      <address>
        <postal>
          <street></street>
          <city>Strasbourg</city>
          <code>67000</code>
          <country>France</country>
        </postal>
        <email>emcho@sip-communicator.org</email>
      </address>
    </author>
    <author initials='E.' surname='Marocco'
            fullname='Enrico Marocco' role="editor">
      <organization>Telecom Italia</organization>
      <address>
        <postal>
          <street>Via G. Reiss Romoli, 274</street>
          <city>Turin</city>
          <code>10148</code>
          <country>Italy</country>
        </postal>
        <email>enrico.marocco@telecomitalia.it</email>
      </address>
    </author>
    <author initials='J.' surname='Lennox' fullname='Jonathan Lennox'>
      <organization>Vidyo, Inc.</organization>
      <address>
        <postal>
          <street>433 Hackensack Avenue</street>
          <street>Seventh Floor</street>
          <city>Hackensack,</city>
          <code>NJ  07601</code>
          <country>US</country>
        </postal>
        <email>jonathan@vidyo.com</email>
      </address>
    </author>

    <date />

    <abstract>
      <t>
        This document describes a mechanism for RTP-level mixers in
        audio conferences to deliver information about the audio level
        of the individual participants. Such audio level indicators are
        transported in the same RTP packets as the audio data they
        pertain to.
      </t>
    </abstract>
  </front>

  <middle>
    <section title='Introduction'>
      <t>
        The Framework for Conferencing with the Session Initiation
        Protocol (SIP) defined in
        <xref target="RFC4353">RFC 4353</xref>
        presents an overall architecture for multi-party conferencing.
        Among others, the framework borrows from
        <xref target="RFC3550">RTP</xref>
        and extends the concept of a mixer entity "responsible for
        combining the media streams that make up a conference, and
        generating one or more output streams that are delivered to
        recipients". Every participant would hence receive, in a flat
        single stream, media originating from all the others.
      </t>
      <t>
        Using such centralized mixer-based architectures simplifies
        support for conference calls on the client side since they would
        hardly differ from one-to-one conversations. However, the
        method also introduces a few limitations. The flat nature of
        the streams that a mixer would output and send to participants
        makes it difficult for users to identify the original source of
        what they are hearing.
      </t>
      <t>
        Mechanisms that allow the mixer to send to participants cues on
        current speakers  (e.g. the CSRC fields in
        <xref target='RFC3550'>RTP</xref>) only work for speaking/silent
        binary indications. There are, however, a number of use cases
        where one would require more detailed information. Possible
        examples include the presence of background
        chat/noise/music/typing, someone breathing noisily in their
        microphone, or other cases where identifying the source of the
        disturbance would make it easy to remove it (e.g. by sending a
        private IM to the concerned party asking them to mute their
        microphone). A more advanced scenario could involve an intense
        discussion between multiple participants that the user does not
        personally know. Audio level information would help better
        recognize the speakers by associating with them complex (but
        still human readable) characteristics like loudness and speed
        for example.
      </t>
      <t>
        One way of presenting such information in a user friendly
        manner would be for a conferencing client to attach audio level
        indicators to the corresponding participant related components
        in the user interface as displayed in
        <xref target='figure-conference-ui' />.
      </t>
      <figure title="Displaying detailed speaker information to the
        user by including audio level for every participant."
              anchor="figure-conference-ui">
        <artwork>
<![CDATA[
                      ________________________
                     |                        |
                     |  00:42 |  Weekly Call  |
                     |________________________|
                     |                        |
                     |                        |
                     | Alice |======    | (S) |
                     |                        |
                     | Bob   |=         |     |
                     |                        |
                     | Carol |          | (M) |
                     |                        |
                     | Dave  |===       |     |
                     |                        |
                     |________________________|
]]>
        </artwork>
        <postamble>
        </postamble>
      </figure>
      <t>
        Implementing a user interface like the above requires analysis
        of the media sent from other participants. In a conventional
        audio conference this is only possible for the mixer since all
        other conference participants are generally receiving a single,
        flat audio stream and have therefore no immediate way of
        determining individual audio levels.
      </t>
      <t>
        This document specifies an RTP extension header that allows such
        mixers to deliver audio level information to conference
        participants by including it directly in the RTP packets
        transporting the corresponding audio data.
      </t>
    </section>
    <section title="Terminology">
      <t>
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
        NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
        "OPTIONAL" in this document are to be interpreted as described
        in <xref target="RFC2119">RFC 2119</xref>.
      </t>
    </section>
    <section title='Protocol Operation'>
      <t>
        According to <xref target='RFC3550'>RFC 3550</xref> a mixer
        is expected to include in outgoing RTP packets a list of
        identifiers (CSRC IDs) indicating the sources that contributed
        to the resulting stream. The presence of such CSRC IDs allows an
        RTP client to determine, in a binary way, the active speaker(s)
        in any given moment. RTCP also provides a basic mechanism to map
        the CSRC IDs to user identities through the CNAME field. More
        advanced mechanisms, may exist depending on the signaling
        protocol used to establish and control a conference. In the case
        of the <xref target="RFC3261">Session Initiation Protocol</xref>
        for example, the <xref target="RFC4575"> Event Package for
        Conference State</xref> defines a &lt;src-id&gt; tag which binds
        CSRC IDs to media streams and SIP URIs.
      </t>
      <t>
        This document describes an RTP header extension that allows
        mixers to indicate the audio-level of every conference
        participant (CSRC) in addition to simply indicating their
        on/off status. This new header extension is based on the
        <xref target="RFC5285"> "General Mechanism for RTP Header
        Extensions"</xref>.
       </t>
       <t>
        Each instance of this header contains a list of one-octet
        audio levels expressed in -dBov, with values from 0 to 127
        representing 0 to -127 dBov(see <xref target='hdr-fmt'/> and
        <xref target='level-enc'/>).
      </t>
      <t>
        Every audio level value pertains to the CSRC identifier
        located at the corresponding position in the CSRC list. In other
        words, the first value would indicate the audio level of the
        conference participant represented by the first CSRC identifier
        in that packet and so forth. The number and order of these
        values MUST therefore match the number and order of the CSRC
        IDs present in the same packet.
       </t>
       <t>
        When encoding audio level information, a mixer SHOULD include in
        a packet information that corresponds to the audio data being
        transported in that same packet. It is important that these
        values follow the actual stream as closely as possible.
        Therefore a mixer SHOULD also calculate the values after the
        original contributing stream has undergone possible processing
        such as level normalization, and noise reduction for example.
       </t>
       <t>
        Note that in some cases a mixer may be sending an RTP audio
        stream that only contains audio level information and no actual
        audio. Updating a (web) interface conference module may be one
        reason for this to happen.
       </t>
       <t>
        It may sometimes happen that a conference involves more than a
        single mixer. In such cases each of the mixers MAY choose to
        relay the CSRC list and audio-level information they receive
        from peer mixers (as long as the total CSRC count remains below
        16). Given that the maximum audio level is not precisely defined
        by this specification, it is likely that in such situations
        average audio levels would be perceptibly different for the
        participants located behind the different mixers.
       </t>
    </section>
    <section title='Header Format' anchor='hdr-fmt'>
      <t>
        The audio level indicators are delivered to the receivers
        in-band using the <xref target='RFC5285'>"General Mechanism for
        RTP Header Extensions"</xref>.  The payload of this extension
        is an ordered sequence of 8-bit audio level indicators encoded
        as per <xref target="level-enc"/>.

        <figure title="Audio level indicators extension format"
                anchor="figure:hdr-fmt">
          <preamble>
          </preamble>
          <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  ID   |  len  |0|  level 1    |0|  level 2    |0|  level 3   ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
          </artwork>
        </figure>
        The 4-bit len field is the number minus one of data bytes (i.e.
        audio level values) transported in this header extension element
        following the one-byte header. Therefore, the value zero in this
        field indicates that one byte of data follows. A value of 15 is
        not allowed by this specification and it MUST NOT be used as the
        RTP header can carry a maximum of 15 CSRC IDs. The maximum value
        allowed is therefore 14 indicating a following sequence of 15
        audio level values.
      </t>
      <t>
        Note that use of the two-byte header defined in
        <xref target='RFC5285'> RFC 5285</xref> follows the same rules
        the only change being the length of the ID and len fields.
      </t>
    </section>
    <section title='Audio level encoding' anchor='level-enc'>
    <t>
        Audio level indicators are encoded in the same manner as audio
        noise level in the <xref target="RFC3389">RTP Payload Comfort
        Noise specification</xref> and audio level in the
        <xref target="I-D.lennox-avt-rtp-audio-level-exthdr">RTP
        Extension Header for Client-to-mixer Audio Level
        Notification</xref> specification. The magnitude of the audio
        level is packed into the least significant bits of one
        audio-level byte with the most significant bit unused and
        always set to 0 as shown below in
        <xref target="figure:level-enc"/>.

        <figure title="Audio Level Encoding" anchor="figure:level-enc">
        <artwork>
<![CDATA[
                        0 1 2 3 4 5 6 7
                       +-+-+-+-+-+-+-+-+
                       |0|   level     |
                       +-+-+-+-+-+-+-+-+
]]>
        </artwork>
        <postamble>

        </postamble>
      </figure>
      </t>
      <t>
        The audio level is expressed in -dBov, with values from 0 to 127
        representing 0 to -127 dBov. dBov is the level, in decibels,
        relative to the overload point of the system, i.e. the
        maximum-amplitude signal that can be handled by the system
        without clipping. (Note: Representation relative to the overload
        point of a system is particularly useful for digital
        implementations, since one does not need to know the relative
        calibration of the analog circuitry.)
        For example, in the case of u-law (audio/pcmu) audio
        <xref target="ITU.G.711"/>, the 0 dBov reference would be a
        square wave with values +/- 8031. (This translates to 6.18 dBm0,
        relative to u-law's dBm0 definition in Table 6 of G.711.)
      </t>
    </section>
    <section title='Signaling Information' anchor='sig-info'>
      <t>
        The URI for declaring the audio level header extension in an SDP
        extmap attribute and mapping it to a local extension header
        identifier is "urn:ietf:params:rtp-hdrext:csrc-audio-level".
        There is no additional setup information needed for this
        extension (i.e. no extensionattributes).
      </t>
      <t>
        An example attribute line in the SDP, for a conference might be:
      </t>
      <figure>
        <artwork>
        a=extmap:7 urn:ietf:params:rtp-hdrext:csrc-audio-level
        </artwork>
      </figure>
      <t>
        The above mapping will most often be provided per media stream
        (in the media-level section(s) of SDP, i.e., after an "m=" line)
        or globally if there is more than one stream containing audio
        level indicators in a session.
      </t>
      <t>
        Presence of the above attribute in the SDP description of a
        media stream indicates that some or all RTP packets in that
        stream would contain the audio level information RTP extension
        header.
      </t>
      <t>
        Conferencing clients that support audio level indicators and
        have no mixing capabilities SHOULD always include the
        direction parameter in the "extmap" attribute setting it to
        "recvonly".  Conference focus entities with mixing
        capabilities MAY omit the direction or set it to "sendrecv" in
        SDP offers. Such entities SHOULD set it to "sendonly" in SDP
        answers to offers with a "recvonly" parameter and to
        "sendrecv" when answering other "sendrecv" offers.
      </t>
      <t>
        The following <xref target='client-focus'/> and <xref
        target='focus-focus'/> show two example offer/answer exchanges
        between a conferencing client and a focus, and between two
        conference focus entities.
      </t>
      <figure anchor="client-focus">
        <artwork>
  v=0
  o=alice 2890844526 2890844526 IN IP6 host.example.com
  c=IN IP6 host.example.com
  t=0 0
  m=audio 49170 RTP/AVP 0 4
  a=rtpmap:0 PCMU/8000
  a=rtpmap:4 G723/8000
  a=extmap:1/recvonly urn:ietf:params:rtp-hdrext:csrc-audio-level

  v=0
  i=A Seminar on the session description protocol
  o=conf-focus 2890844730 2890844730 IN IP6 focus.example.net
  c=IN IP6 focus.example.net
  t=0 0
  m=audio 52543 RTP/AVP 0
  a=rtpmap:0 PCMU/8000
  a=extmap:1/sendonly urn:ietf:params:rtp-hdrext:csrc-audio-level
        </artwork>
        <postamble>
          A client-initiated example SDP offer/answer exchange
          negotiating an audio stream with one-way flow of of audio
          level information.
        </postamble>
      </figure>
      <figure anchor="focus-focus">
        <artwork>
  v=0
  i=Un seminaire sur le protocole de description des sessions
  o=fr-focus 2890844730 2890844730 IN IP6 focus.fr.example.net
  c=IN IP6 focus.fr.example.net
  t=0 0
  m=audio 49170 RTP/AVP 0
  a=rtpmap:0 PCMU/8000
  a=extmap:1/sendrecv urn:ietf:params:rtp-hdrext:csrc-audio-level

  v=0
  i=A Seminar on the session description protocol
  o=us-focus 2890844526 2890844526 IN IP6 focus.us.example.net
  c=IN IP6 focus.us.example.net
  t=0 0
  m=audio 52543 RTP/AVP 0
  a=rtpmap:0 PCMU/8000
  a=extmap:1/sendrecv urn:ietf:params:rtp-hdrext:csrc-audio-level
        </artwork>
        <postamble>
          An example SDP offer/answer exchange between two conference
          focus entities with mixing capabilities negotiating an audio
          stream with bidirectional flwo of audio level information.
        </postamble>
      </figure>
    </section>
    <section title='Security Considerations'>
      <t>
        <list style='numbers'>
          <t>
            This document defines a means of attributing audio level
            to a particular participant in a conference. An attacker may
            try to modify the content of RTP packets in a way that would
            make audio activity from one participant appear as coming
            from another.
          </t>
          <t>
            Furthermore, the fact that audio level values would not be
            protected even in an SRTP session may be of concern in some
            cases where the activity of a particular participant in a
            conference is confidential.
          </t>
          <t>
            Both of the above are concerns that stem from the design of
            the RTP protocol itself and they would probably also apply
            when using CSRC identifiers the way they were specified in
            <xref target="RFC3550">RFC 3550</xref>. It is therefore
            important that according to the needs of a particular
            scenario, implementors and deployers consider use of a lower
            level security and authentication mechanism.
          </t>
        </list>
      </t>
    </section>
    <section title='IANA Considerations'>
      <t>
        This document defines a new extension URI that, if approved,
        would need to be added to the RTP Compact Header Extensions
        sub-registry of the Real-Time Transport Protocol (RTP)
        Parameters registry, according to the following data:
      </t>
      <figure>
        <artwork>
        Extension URI: urn:ietf:params:rtp-hdrext:csrc-audio-level
        Description:   Mixer-to-client audio level indicators
        Contact:       emcho@sip-communicator.org
        Reference:     RFC XXXX
        </artwork>
      </figure>
    </section>
    <section title='Open Issues'>
      <t>
        At the time of writing of this document the authors have no
        clear view on how and if the following list of issues should
        be address here:
        <list style='numbers'>
          <t>
            Audio levels in video streams. This specification allows
            use of audio level values in "silent" audio streams that
            don't otherwise carry any payload thus allowing their
            delivery within systems where the various focus/mixer
            components communicate with each other as conference
            participants. The same train of thought may very well
            justify audio level transport in video streams.
          </t>
          <t>
            It has been suggested to reference <xref target="ITU.P56.1993">ITU
            P.56</xref> for level measurement.  This needs to be investigated.
          </t>
        </list>
      </t>
    </section>
    <section title="Acknowledgments">
        <t>
          Roni Even, Ingemar Johansson, Michael Ramalho and several
          others provided helpful feedback over the dispatch mailing
          list.
        </t>
        <t>
          SIP Communicator's participation in this specification is
          funded by the NLnet Foundation.
        </t>
    </section>
    <section title='Appendix: Design choices'>
      <t>
        During discussions on the subject of audio levels the decision
        to transport audio levels in RTP packets, rather than another
        protocol was questioned several times which is why the authors
        find it worth explaining here. The following subsections
        describe alternative mechanisms for delivering audio levels and
        the reasons why authors decided not to use them.
      </t>
      <section title='SIP event package for conference state'>
        <t>
          <xref target="RFC4575">RFC 4575</xref> defines a conference
          event package for tightly coupled conferences using the
          Session Initiation Protocol (SIP) events framework. It
          allows for the delivery of various conference related
          details such as conference descriptions, participant count
          and identity. The document also provides a way of indicating
          who the speakers are at any given moment by specifying a
          mechanism for mapping conference participants to RTP
          SSRC/CSRC identifiers. All these details are dispatched in
          an asynchronous manner using the SIP events framework, or,
          in other words, through NOTIFY SIP requests following an
          initial SUBSCRIBE from a participant.
        </t>
        <t>
          Contrary to "plain" active speaker infomation, where
          significant changes only occur once every several seconds,
          audio level in human speech is obviously a very time sensitive
          characteristic  which would require frequent updates (i.e.
          approximately once every 50-100 ms). In order for the update
          of the user interface to appear "natural" to the user, audio
          level information would probably have to be delivered for
          every one or two RTP packets. Using
          <xref target="RFC4575">RFC 4575</xref> or SIP in general for
          this would generate traffic on the (often low-bandwidth)
          signalling path comparable to, if not exceeding, the media
          itself. It may also prove relatively hard for client
          developers to synchronize the information they receive from
          SIP messages with the one they obtain from the media flows.
        </t>
        <t>
          It is probably also worth mentioning that the use of
          <xref target="RFC4575">RFC 4575</xref> for such a feature
          would make the mechanism incompatible with non-SIP signaling
          protocols like, for example,
          <xref target='RFC3920'>XMPP</xref> and its Jingle extensions.
        </t>
      </section>
      <section title='The RTP Control Protocol (RTCP)'>
        <t>
          Similar to using SIP, delivering audio levels through RTCP
          would cause bandidth and synchronization issues. Furthermore
          the <xref target="RFC3550">RTP specification</xref> explicitly
          recommends that the fraction of the session bandwidth added
          for RTCP be fixed at 5% which could not be sufficient for
          the transport of audio level indicators.
        </t>
      </section>
      <section title='Encoding levels in the payload'>
        <t>
          Given the content specific nature of audio levels, it has been
          suggested that audio level information be encoded and
          transmitted as part of the payload. While this is indeed a
          feasible approach, implementing it would require a substantial
          effort. In order to implement support for such a feature,
          client developers would need to explicitly handle it in all
          individual codec modules of their application. Compared to RTP
          extensions, the mechanism would therefore represent a
          substantial additional effort without offering any meaningful
          advantages.
        </t>
      </section>
    </section>
  </middle>
  <back>
    <references title='Normative References'>
      <?rfc include="reference.RFC.2119"?>
      <?rfc include="reference.RFC.3550"?>
      <?rfc include="reference.RFC.5285"?>

    </references>
    <references title='Informative References'>
      <?rfc include="reference.I-D.lennox-avt-rtp-audio-level-exthdr"?>
      <?rfc include="reference.RFC.3261"?>
      <?rfc include="reference.RFC.3551"?>
      <?rfc include="reference.RFC.3920"?>
      <?rfc include="reference.RFC.4353"?>
      <?rfc include="reference.RFC.4575"?>
      <?rfc include="reference.RFC.3389"?>
      <reference anchor="ITU.G.711">
        <front>
        <title>Pulse Code Modulation (PCM) of Voice Frequencies</title>
        <author>
          <organization>
            International Telecommunications Union
          </organization>
        </author>
        <date month="November" year="1988" />
        </front>
        <seriesInfo name="ITU-T" value="Recommendation G.711" />
      </reference>
      <reference anchor="ITU.P56.1993">
        <front>
        <title>Objective Measurement of Active Speech Level</title>
        <author>
          <organization>
            International Telecommunications Union
          </organization>
        </author>
        <date month="March" year="1988" />
        </front>
        <seriesInfo name="ITU-T" value="Recommendation P.56" />
      </reference>
    </references>
  </back>
</rfc>
