<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc compact="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>

<rfc category="std" docName="draft-weber-iri-guidelines-00" ipr="trust200902">

  <front>
    <title abbrev="IRI Guidelines">Guidelines for Implementers of Internationalized Resource Identifiers (IRIs)</title>

    <author initials="C." surname="Weber" fullname="Chris Weber">
      <organization>Casaba Security</organization>
      <address>
        <postal>
          <street>16625 Redmond Wa, Suite M348</street>
          <city>Redmond</city>
          <region>WA</region>
          <code>98052</code>
          <country>USA</country>
        </postal>
        <email>chris@lookout.net</email>
      </address>
    </author>

    <date month="July" day="3" year="2011"/>

    <area>Applications</area>
    <keyword>Internet-Draft</keyword>
    <keyword>Uniform Resource Identifiers</keyword>
    <keyword>Internationalized Resource Identifiers</keyword>
    <keyword>internationalization</keyword>

    <abstract>
      <t>Some members of the implementation community have expressed confusion about the rules and algorithms for processing Internationalized Resource Identifiers (IRIs). This document aims to clarify these matters and improve interoperability around IRI processing by summarizing the steps required to prepare and parse arbitrary Unicode strings as Internationalized Resource Identifiers.  Further goals of this document are to define limited scheme-specific rules around IRI processing and to define the steps required for producing the canonical form of an IRI.</t>
    </abstract>
  </front>

  <middle>

    <section title="Introduction" anchor="introduction">
      <t>Internationalized Resource Identifiers (IRIs) extend the Uniform Resource Identifier (URI) specification [RFC3986] by opening up various components such as the authority, path, query, and fragment to the character space available in Unicode/ISO 10646.  Arbitrary Unicode strings may be prepared and parsed into IRI sub-components which map directly to the same URI sub-components.</t>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target='RFC2119'/>.</t>
    </section>
    
    <section title="Terminology" anchor="terminology">
      <t>This section defines the terminology used in this document.</t>
      <t>reference-string
	      <vspace/>
	      The original and unprocessed input string being considered as an IRI reference.
      </t>
      <t>pre-processed-reference-string
	      <vspace/>
	      The reference-string that has been through the pre-processing steps.
      </t>
    </section>

    <section title="Sources" anchor="sources">
      <t>This document makes reference to the following sources of information about the parsing of IRIs:</t>
      <t>
        <list style='hanging'>
          <t hangText='1:'>Internationalized Resource Identifiers (IRIs) as specified in http://tools.ietf.org/html/draft-ietf-iri-3987bis-05 <xref target='1'/></t>
          <t hangText='2:'>Parsing URLs for Fun and Profit, http://tools.ietf.org/html/draft-abarth-url-01 <xref target='2'/></t>
          <t hangText='3:'>HTML Living Standard: URLs, http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#urls <xref target='3'/></t>
          <t hangText='4:'>Change proposal for ISSUE-56, http://lists.w3.org/Archives/Public/public-html/2010Jul/0036.html <xref target='4'/></t>
          <t hangText='5:'>URIs, URLs, and URNs: Clarifications and Recommendations 1.0, http://www.w3.org/TR/uri-clarification/ <xref target='5'/></t>
          <t hangText='6:'>HTML CHANGE PROPOSAL; change definition of URL to normative reference to IRIBIS, http://lists.w3.org/Archives/Public/public-html/2010Feb/0882.html <xref target='6'/></t>
          <t hangText='7:'>BIDI URL Display, https://docs.google.com/document/d/1c8-svx7og0qBUfGBobw7LYfOcNeDVPYbNVMNpSqYCFo/edit?hl=en <xref target='7'/></t>
        </list>
      </t>
    </section>
    
    <section title="Pre-processing Arbitrary Unicode Strings" anchor="pre-process">
      <t>This section describes the pre-processing steps required to prepare an arbitrary Unicode reference-string for later parsing into IRI sub-components.</t>
      <t>
        <list style='numbers'>
          <!-- STEP 1 -->
          <t>
            Remove leading and trailing instances of whitespace (U+0020), CR (U+000A), LF (U+000D), and TAB (U+0009) characters from the string.
            <vspace/>
            Reference: Section 7.2 of <xref target='1'/> for details.
          </t>
          <!-- STEP 2 -->
          <t>
            If more than one reference is allowed, split the string into substrings on blocks of contiguous whitespace.  Each of one of these substrings is an independent reference-string and will be processed individually.  If more than one reference is not allowed, either remove blocks of contiguous whitespace or replace them with a single percent-encoded U+0020 SPACE, written as "%20", depending on what is required for the current context.
            <vspace/>
            Reference: Mentioned in <xref target='4'/>.
          </t>
          <!-- STEP 3 -->
          <t>
            If the current string is not already in the UTF-8 encoding, transcode the string to the UTF-8 encoding.
            <vspace/>
            Reference: Section 3.1 of <xref target='1'/>.
            <vspace/>
            TODO SHOULD transcode to UTF-8, MAY transcode to another Unicode encoding such as UTF-16?
          </t>
          <!-- STEP 4 -->
          <t>Replace each entity references with its corresponding character.</t>
          <!-- STEP 5 -->
          <t>
            Normalize the Unicode-encoded string using Unicode Normalization Form C <xref target='8'/>.
            <vspace/>
            Reference: Section 3.1 of <xref target='1'/>.
          </t>
        </list>
      </t>
      <t>This is the pre-processed-reference-string ready for parsing.</t>
    </section>

    <section title="Parsing Unicode Strings into IRI Components" anchor="parsing">
      <t>With an arbitrary IRI string that has been through pre-processing, referred to as the "pre-processed-reference-string", this section describes the subsequent process of parsing the string into its five major IRI sub-components using rules defined by 3896 (using an algorithm equivalent to RFC3986 Appendix B) but with updated ABNF of 3987.  These rules are summarized here.           
      <vspace/>
      Reference: Section 3.2 of <xref target='1'/>.
      </t> 
      <section title="Identify the scheme" anchor="scheme">
      <t>If the current string does not contain a ":" U+003A then the string does not contain a scheme and the pre-processed-reference-string may be handled as a relative reference.  </t>
      <t>
        <list style="symbols">
          <t>Continue to "Identify the path"</t>
          <t>Abort further scheme processing</t>
        </list>
      </t>
      <t>If the first character of the string is not an ALPHA then this is not a valid scheme and the pre-processed-reference-string may be handled as a relative reference.</t>
      <t>	
    	<list style="symbols">
          <t>Continue to "Identify the path"</t>
          <t>Abort further scheme processing</t>
        </list>
      </t>
      <t>Consume all characters up to but not including the first occurrence of ":" U+003A.  If the consumed substring contains any characters other than ( ALPHA / DIGIT / "+" / "-" / "." ) then it is not a valid scheme and the pre-processed-reference-string may be handled as a relative reference.</t>
      <t>	
    	<list style="symbols">
          <t>Continue to "Identify the path"</t>
          <t>Abort further scheme processing</t>
        </list>
      </t>
      <t>The consumed substring at this point is the scheme.  Skip over the ":" U+003A character.  Continue parsing the remaining string as an authority part.</t>
      </section>
      
      <section title="Identify the authority" anchor="authority">
        <t>
        The URI authority component may contain userinfo, a host, and a port.  If the current string does not begin with the two characters "//" U+002F U+002F then the string is not an authority and may be handled as a path sub-component.  
        </t>
		<t>
			<list style="symbols">
			  <t>Continue to "Identify the path"</t>
			  <t>Abort further authority processing</t>
			</list>
		</t>
		<t>
        <vspace/>
        Consume up to the first occurrence of any one of the authority's terminating characters "/" U+002F, "?" U+003F, "#" U+0023, or the end of the string.  This is the authority, also known as the iauthority under IRI RFC3987.  Continue further parsing of the authority to identify the userinfo, host, and port parts.
        </t>
        <section title="Identify the userinfo" anchor="userinfo">
		<t>The userinfo may come in the form of a username and password rendered as "user:password".  The userinfo part may be parsed according to the rules of RFC3986 Section 3.2.1 with the updated ABNF for iuserinfo in RFC3987. </t>
		<t>If the authority does not contain a "@" U+0040 then the string does not contain a userinfo part and the authority may be parsed for a host and port part.  </t>
		<t>
			<list style="symbols">
			<t>Continue to "Identify the host"</t>
			<t>Abort further userinfo processing</t>
			</list>
		</t>
        <t>From the beginning of the authority, consume each character up to but not including the first occurrence of "@" U+0040.  This is the userinfo.</t>
        <t>Split the userinfo on the first occurrence of ":" U+003A if it exists.  The part before the ":" is the username and the part after is the password.  The ":" being split on is not included in either result.</t>
        <t>If a ":" U+003A does not exist in the userinfo, then the userinfo may be treated as a username.</t>
        <t>Skip over the first occurrence of "@" U+0040 following the userinfo, and continue parsing the remaining authority to identify the host.</t>
        </section>
		<section title="Identify the host" anchor="host">
        <t>The host part of authority may contain an IP-literal, IPv4address, or a reg-name according to the ABNF rules of RFC3986 updated to support Unicode characters in the ireg-name as described in RFC3987.  Consume all characters up to but not including the last ":" U+003A character or the end of authority.  </t>
        <t>If this substring is determined to be an IP-literal or IPv4address, then the consumed characters are the host. </t>
        <t>
			<list style="symbols">
			<t>If the authority did contain a ":" then continue parsing the remaining authority including the ":" character according to the "Identify the port" section</t>
			<t>Abort further host processing</t>
			</list>
		</t>
        <t>
        Else the substring is determined to be an ireg-name according to the ABNF naming convention from RFC3987. This is the host.  
        </t>
        <t>
			<list style="symbols">
			<t>If the authority did contain a ":" then the remaining authority including the ":" character will be processed according to the "Identify the port".</t>
			<t>Continue processing the host</t>
			</list>
		</t>
        <t>
		The host SHOULD be processed according to the rules of IDNA2008, but MAY be processed according to UTS46 or IDNA2003.  If the host is in DNS Internet dot-notaion then it's labels SHOULD be converted to punycode.  This is the host.
		<vspace/>
		TODO: Error handling.  Mention leaving the host name in pure Unicode form for intranet/local name scenarios that don't use DNS, e.g. WINS?
        </t>
        </section>
        <section title="Identify the port" anchor="port">
        <t>Further processing SHOULD skip the first occurrence of ":" U+003A and consume the remaining characters.  If these characters are not *DIGIT then the port is invalid.</t>
        <t>
	        <list style="symbols">
	          <t>Continue to "Identify the path"</t>
	          <t>Abort further scheme processing</t>
	        </list>
      	</t>
      	<t>Else this is the port.</t>
        </section>
      </section>
      
      <section title="Identify the path" anchor="path">
        <t>Consume the remaining pre-processed-reference-string up to but not including the first occurrence of a terminating character "?" U+003F, "#" U+0023, or the end of the string.</t>
		<t>Percent-encode all characters present from the ucschar list.</t>
	    <t>If the path contains any characters not allowed by the ABNF of RFC3987 Section 2.2 or Section 7.2 then replace those characters with their percent-encoding. </t>
	    <t>This is the path.</t>
	    <t>If the terminating character was "?" then process the remaining string including the leading "?" according to "Identify the query".</t>
	    <t>If the terminating character was "#" then process the remaining string including the leading "#" according to "Identify the fragment".</t>
	    <t>TODO: Handling of special characters "/" and "\".</t>
      </section>
      
      <section title="Identify the query" anchor="query">
		<t>Consume the remaining string starting with the leading "?" and up to but not including the first occurrence of "#" or the end of the string.</t>
		<t>Percent-encode all characters present from the ucschar list.</t>
		<t>If the path contains any characters not allowed by the ABNF of RFC3987 Section 2.2 or the lists in Section 7.2 then replace those characters with their percent-encoding. </t>
		<t>This is the query component.</t>
	    <t>If the terminating character was "#" then process the remaining string including the leading "#" according to "Identify the fragment".</t>
	    <t>TODO: Handling of special characters "&amp;", "?", "=", and "/"</t>
      </section>
      
      <section title="Identify the fragment" anchor="fragment">
        <t>Consume the remaining string starting with the leading "#" and to the end of the string.  </t>
		<t>Percent-encode all characters present from the ucschar list.</t>
		<t>This is the fragment.</t>
	    <t>TODO: Handling of special characters "?" and "/"</t>
      </section>

    </section>
    
    
    <section title="Scheme-Specific Processing" anchor="scheme-specific">
    <t>TODO Apply limited scheme-specific rules.</t>
    <section title="http " anchor="http-specific">
    	<t>
		(NOTE: Taken directly from RFC3987) For compatibility with existing deployed HTTP infrastructure, the following special case applies for schemes "http" and "https" and IRIs whose origin has a document charset other than one which is UCS-based (e.g., UTF-8 or UTF-16).  In such a case, the "query" component of an IRI is mapped into a URI by using the document charset rather than UTF-8 as the binary representation before pct-encoding.  This mapping is not applied for any other scheme or component.		
		<vspace/>
		Reference: Section 3.5 of <xref target='1'/>.
		<vspace/>
    	</t>
    </section>
    <section title="javascript " anchor="javascript-specific">
    </section>
    <section title="mailto " anchor="mailto-specific">
    </section>
    <section title="file " anchor="file-specific">
    </section>
    <section title="ftp " anchor="ftp-specific">
    </section>
    <section title="data " anchor="data-specific">
    </section>
    </section>
    
    <section title="IRI Canonicalization" anchor="canonicalization">
      <t>To follow.</t>
  		<t>
        <!-- TODO -->
        [NOTE: Call out Special Case here or earlier? The U+005C should be either percent-encoded or converted to U+002F.
        Of course, folks who want to name such files will want to use the escaped form of \ in order for their site to work in other browsers.
        </t>
        <section title="Producing a valid URI from an IRI" anchor="uri">
      	<t>
            Percent-encode IRI components (this is done for the sake of interoperability).  For each character which is not allowed anywhere in a valid URI, apply the following steps.
            <vspace/>
            Reference: Section 3.5 of <xref target='1'/>.
            <list style='symbols'>
              <t>
              Action: Convert to UTF-8, i.e., convert the character to a sequence of one or more octets using UTF-8 [RFC3629].
              <vspace/>
              [TODO: Necessary after above?)
              </t>
              <t>
                Action: Percent-encode, i.e., convert each octet of this sequence to %HH, where HH is the hexadecimal notation of the octet value.
              </t>
            </list>
		</t>
		</section>
    </section>

    <section title="Security Considerations" anchor="security">
      <t>To follow.</t>
    </section>

    <section title="IANA Considerations" anchor="iana">
      <t>This document has no actions for the IANA.</t>
    </section>

    <section title="Acknowledgements" anchor="acks">
      <t>Thanks to Adam Barth, Martin Duerst, and Julian Reschke for their feedback.</t>
    </section>

  </middle>

  <back>

    <references title="Informative References">

<reference anchor='1' target="http://trac.tools.ietf.org/html/draft-ietf-iri-3987bis-05">
<front>
<title>Internationalized Resource Identifiers (IRIs)</title>
<author initials='M' surname='Duerst' fullname='Martin Duerst'>
    <organization />
</author>
<author initials='M' surname='Suignard' fullname='Michel Suignard'>
    <organization />
</author>
<author initials='L' surname='Masinter' fullname='Larry Masinter'>
    <organization />
</author>
<date month='March' day='29' year='2011' />
<abstract><t>This document defines the Internationalized Resource Identifier (IRI) protocol element, as an extension of the Uniform Resource Identifier (URI).  An IRI is a sequence of characters from the Universal Character Set (Unicode/ISO 10646).  Grammar and processing rules are given for IRIs and related syntactic forms.  In addition, this document provides named additional rule sets for processing otherwise invalid IRIs, in a way that supports other specifications that wish to mandate common behavior for 'error' handling.  In particular, rules used in some XML languages (LEIRI) and web applications are given.  Defining IRI as new protocol element (rather than updating or extending the definition of URI) allows independent orderly transitions: other protocols and languages that use URIs must explicitly choose to allow IRIs.  Guidelines are provided for the use and deployment of IRIs and related protocol elements when revising protocols, formats, and software components that currently deal only with URIs.  RFC Editor: Please remove the next paragraph before publication.  This document is intended to update RFC 3987 and move towards IETF Draft Standard.  For discussion and comments on this draft, please join the IETF IRI WG by subscribing to the mailing list public-iri@w3.org.  For a list of open issues, please see the issue tracker of the WG at http://trac.tools.ietf.org/wg/iri/trac/report/1. For a list of individual edits, please see the change history at http://trac.tools.ietf.org/wg/iri/trac/log/draft-ietf-iri-3987bis.</t></abstract>
</front>
<seriesInfo name='Internet-Draft' value='draft-ietf-iri-3987bis-05' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-iri-3987bis-05.txt' />
</reference>

<reference anchor='2' target="http://tools.ietf.org/html/draft-abarth-url-01">
<front>
<title>How Browsers Process URLs</title>
<author initials='A' surname='Barth' fullname='Adam Barth'>
    <organization />
</author>
<date month='April' day='23' year='2011' />
<abstract><t>This document contains a precise specification of how browsers process URLs.  The behavior specified in this document might or might not match any particular browser, but browsers might be well-served by adopting the behavior defined herein.Editorial Note (To be removed by RFC Editor)  If you have suggestions for improving this document, please send email to &lt;mailto:public-iri@w3.org>.  Further Working Group information is available from &lt;https://tools.ietf.org/wg/iri/>.</t></abstract>
</front>
<seriesInfo name='Internet-Draft' value='draft-abarth-url-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-abarth-url-01.txt' />
</reference>

<reference anchor='3' target='http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#urls'>
<front>
<title>HTML Living Standard: URLs</title>
<author initials='I.' surname='Hickson' fullname='Ian Hickson'>
    <organization>Google</organization>
</author>
<date year='2011'/>
</front>
<seriesInfo name='WHATWG' value='?' />
<format type='HTML' target='http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#urls'/>
</reference>

<reference anchor='4' target='http://lists.w3.org/Archives/Public/public-html/2010Jul/0036.html'>
<front>
<title>Change proposal for ISSUE-56</title>
<author initials='R.' surname='Fielding' fullname='Roy Fielding'>
    <organization/>
</author>
<date day='14' month='July' year='2010'/>
</front>
<format type='HTML' target='http://lists.w3.org/Archives/Public/public-html/2010Jul/0036.html'/>
</reference>

<reference anchor='5' target='http://www.w3.org/TR/uri-clarification/'>
<front>
<title>URIs, URLs, and URNs: Clarifications and Recommendations 1.0</title>
<author fullname='URI Planning Interest Group'>
    <organization>W3C</organization>
</author>
<date day='21' month='September' year='2001'/>
</front>
<seriesInfo name='W3C Note' value='21 September 2001' />
<format type='HTML' target='http://www.w3.org/TR/uri-clarification/'/>
</reference>

<reference anchor='6' target='http://lists.w3.org/Archives/Public/public-html/2010Feb/0882.html'>
<front>
<title>HTML CHANGE PROPOSAL; change definition of URL to normative reference to IRIBIS</title>
<author initials='L.' surname='Masinter' fullname='Larry Masinter'>
    <organization></organization>
</author>
<date day='6' month='February' year='2010'/>
</front>
<format type='HTML' target='http://lists.w3.org/Archives/Public/public-html/2010Feb/0882.html'/>
</reference>

<reference anchor='7' target='https://docs.google.com/document/d/1c8-svx7og0qBUfGBobw7LYfOcNeDVPYbNVMNpSqYCFo/edit?hl=en'>
<front>
<title>Revision of UBA for improved display of URL/IRIs</title>
<author initials='M.' surname='Davis' fullname='Mark Davis'>
    <organization>Google</organization>
</author>
<date day='5' month='May' year='2011'/>
</front>
<format type='HTML' target='https://docs.google.com/document/d/1c8-svx7og0qBUfGBobw7LYfOcNeDVPYbNVMNpSqYCFo/edit?hl=en'/>
</reference>

<reference anchor='8' target='http://www.unicode.org/unicode/reports/tr15/tr15-23.html'>
<front>
<title>URLs</title>
<author initials='M.' surname='Davis' fullname='Mark Davis'></author>
<author initials='M.' surname='Duerst' fullname='Martin Duerst'>
    <organization>Google</organization>
</author>
<date day='17' month='April' year='2003'/>
</front>
<format type='HTML' target='http://www.unicode.org/unicode/reports/tr15/tr15-23.html'/>
</reference>


    </references>


    <references title="Normative References">
    
    
<reference anchor='RFC3986' target="http://tools.ietf.org/html/rfc3986">
<front>
<title>Uniform Resource Identifier (URI)</title>
<author initials='T' surname='Berners-Lee' fullname='Tim Berners-Lee'>
    <organization />
</author>
<author initials='R' surname='Fielding' fullname='Roy Fielding'>
    <organization />
</author>
<author initials='L' surname='Masinter' fullname='Larry Masinter'>
    <organization />
</author>
<date month='January' day='01' year='2005' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of
   characters that identifies an abstract or physical resource.  This
   specification defines the generic URI syntax and a process for
   resolving URI references that might be in relative form, along with
   guidelines and security considerations for the use of URIs on the
   Internet.  The URI syntax defines a grammar that is a superset of all
   valid URIs, allowing an implementation to parse the common components
   of a URI reference without knowing the scheme-specific requirements
   of every possible identifier.  This specification does not define a
   generative grammar for URIs; that task is performed by the individual
   specifications of each URI scheme.
</t></abstract>
</front>
<seriesInfo name='Internet-Standard' value='rfc3986' />
<format type='HTML'
        target='http://tools.ietf.org/html/rfc3986' />
</reference>


<reference anchor='RFC3629' target="http://www.ietf.org/rfc/rfc3629.txt">
<front>
<title>UTF-8, a transformation format of ISO 10646</title>
<author initials='F' surname='Yergeau' fullname='Francois Yergeau'>
    <organization />
</author>
<date month='November' day='01' year='2003' />
<abstract><t>   ISO/IEC 10646-1 defines a large character set called the Universal
   Character Set (UCS) which encompasses most of the world's writing
   systems.  The originally proposed encodings of the UCS, however, were
   not compatible with many current applications and protocols, and this
   has led to the development of UTF-8, the object of this memo.  UTF-8
   has the characteristic of preserving the full US-ASCII range,
   providing compatibility with file systems, parsers and other software
   that rely on US-ASCII values but are transparent to other values.
   This memo obsoletes and replaces RFC 2279.
</t></abstract>
</front>
<seriesInfo name='Internet-Standard' value='rfc3629' />
<format type='TXT'
        target='http://www.ietf.org/rfc/rfc3629.txt' />
</reference>
    
    <reference anchor="RFC2119">
<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass.  Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date month='March' year='1997' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:
<list>
<t>
      The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL
      NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;MAY&quot;, and
      &quot;OPTIONAL&quot; in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>
<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='ftp://ftp.isi.edu/in-notes/rfc2119.txt' />
<format type='HTML' octets='14486' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5661' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>


    </references>
    
  </back>
</rfc>
