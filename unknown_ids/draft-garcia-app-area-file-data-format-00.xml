<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc compact="yes" ?>
<?rfc sortrefs="no" ?>
<?rfc symrefs="yes" ?>
<rfc ipr="full3978" category="std">


  <front>
    <title abbrev="XML Data Format for Files">
      An Extensible Data Format (XML) for Describing Files
    </title>
    <author initials="M" surname="Garcia-Martin" fullname="Miguel A. Garcia-Martin">
      <organization>Nokia Siemens Networks</organization>
      <address>
	<postal>
	  <street>P.O.Box 22</street>
	  <city>Nokia Siemens Networks</city> <region>FIN</region><code>02022</code>
	  <country>Finland</country>
	</postal>
	<email>miguel.garcia@nsn.com</email>
      </address>
    </author>
    
    <author initials="M" surname="Matuszewski" fullname="Marcin Matuszewski">
      <organization>Nokia</organization>
      <address>
	<postal>
	  <street>P.O.Box 407</street>
	  <city>NOKIA GROUP</city> <region>FIN</region><code>00045</code>
	  <country>Finland</country>
	</postal>
	<email>marcin.matuszewski@nokia.com</email>
      </address>
    </author>
    
    <date day="9" month="November" year="2007" />
    <area>Applications</area>
    <keyword>file</keyword>
    <keyword>format</keyword>
    <keyword>XML</keyword>
    <abstract>
      <t>
	This document defines an Extensible Data Format (XML) for
	describing files.
      </t>
    </abstract>
  </front>
  <middle>
    
    <section title="Introduction">
      <t>
	In the recent times there is a growing interest for defining a
	standard format for describing files and its associated
	meta-data. This is the case, for example, of the <xref
	target="I-D.garcia-sipping-file-sharing-framework">Session
	Initiation Protocol (SIP) file sharing framework </xref>,
	which describes a usage of SIP for publishing file
	metadata. Other usages, for example, based on the <xref
	target="RFC2616">HyperText Transfer Protocol (HTTP) </xref>
	have been also discussed, and it is expected that the growing
	usage of XML in IETF protocols will increase the demand for
	this format.
      </t>
      <t>
	This document creates a generic XML document format
	for describing files and their associated meta-data. The
	document format is extensible, so future needs can be
	addressed thorough extensions. It is expected that
	applications that need to describe files use this format as
	their standard format.
      </t>
    </section>

    <section title="Terminology">
      <t>
	The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
	NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
	"OPTIONAL" in this document are to be interpreted as described
	in BCP 14, <xref target="RFC2119">RFC 2119</xref> and indicate
	requirement levels for compliant implementations.
      </t>
    </section>
    

  <section title="The 'file-metadata' XML Document" anchor="file-metadata-document">
    <t>
      A 'file-metadata' document is an <xref
      target="W3C.REC-xml-20001006">XML document </xref> that MUST be
      well-formed and SHOULD be valid. A 'file-metadata' document MUST be
      based on XML 1.0 and MUST be encoded using <xref
      target="RFC3629">UTF-8 </xref>.  This specification makes use of
      XML namespaces for identifying 'file-metadata' documents.  The
      namespace URI for elements defined by this specification is a
      <xref target="RFC2141"> URN </xref>, using the namespace
      identifier 'ietf'.  This URN is:
    </t>
    <t>
      <list style='hanging'>
	<t>
	  urn:ietf:params:xml:ns:file
	</t>
      </list>
    </t>
    <t>
      The 'file-metadata' documents are identified with the MIME type
      "application/file+xml" and are instances of the XML schema
      defined in <xref target="schema" />.
    </t>

    <t>
      The XML schema that defines the constrains of the 'file-metadata'
      document provides support for full and partial 'file-metadata'
      documents, so that applications that can accommodate
      differentiated versions of XML documents can use partial content
      to signal a change in one or more files. The XML schema
      contains provisions for two root elements, namely
      &lt;file-set&gt; and &lt;patch&gt;, of which only one MUST
      be present in a valid 'file-metadata' document. The
      &lt;file-set&gt; element is used to describe a full
      'file-metadata' document, i.e., one containing a full state of the
      available files. A full 'file-metadata' document MUST be used in
      any initial publication or initial notification. On the
      contrary, the &lt;patch&gt; element is used to describe a
      partial 'file-metadata' document. The &lt;patch&gt; element contains
      a number of patch operations that, once applied to a previous
      version of a full 'file-metadata' document, create an updated full
      document. 
    </t>
    <t>
      <list style="hanging">
	<t>
	  The XML schema rules require that only one root element is
	  present in an XML document. Therefore, a 'file-metadata'
	  document compliant with the XML schema definition contains
	  either a &lt;file-set&gt; root element or a &lt;patch&gt;
	  root element, but not both.
	</t>
      </list>
    </t>
    <t>
      Due to the duality of a 'file-metadata' document, depending on
      whether it contains a full or a partial 'file-metadata'
      document, we describe separately each of them in <xref
      target="full-file-metadata-document"/> and <xref
      target="partial-file-metadata-document"/>, respectively.
    </t>

    <section title="Full 'file-metadata' document"
	     anchor="full-file-metadata-document">
      <t>
	A full 'file-metadata' document begins with the root element
	tag &lt;file-set&gt; that describes a collection of files. The
	&lt;file-set&gt; element contains a mandatory 'version'
	attribute.  When 'file-metadata' documents are used with
	protocols that provide the notion of a session, such as <xref
	target="RFC3261">SIP </xref>, an initial appearance of a
	'file-metadata' document in a session selects an initial value
	for the 'version' attribute of the &lt;file-set&gt;
	element. Subsequent 'file-metadata' documents within the same
	session MUST increment the value of the 'version' attribute by
	one, no matter whether they are full or partial, and add it
	either to the &lt;file-set&gt; or &lt;patch&gt; element, as
	appropriate. As a consequence, the counter of the 'version'
	attribute is shared between &lt;file-set&gt; and &lt;patch&gt;
	elements.
      </t>

      <!-- It seems that the 'version' attribute should only be
           mandatory in notifications. In publications there isn't a
           need for 'version', because the ETags do the same thing. We
           shouldn't have two overlapping mechanisms that achieve the
           same thing -->

      <t>
	The &lt;file-set&gt; element consists of one or more child
	&lt;file&gt; elements. The &lt;file-set&gt; element MAY
	contain a &lt;timestamp&gt; element, a &lt;note&gt; element,
	and MAY contain other elements and attributes from different
	namespaces for the purposes of extensibility; elements or
	attributes from unknown namespaces MUST be ignored.
      </t>
      <t>
	Each &lt;file&gt; element represents the description data of a
	file. It includes an 'id' attribute that contains a unique
	identifier. The value of the 'id' attribute MUST be unique
	within the 'file-metadata' document.
      </t>
      <t>
	The &lt;timestamp&lt; element contains a string indicating
	when the document has been last updated. The value of this
	element MUST follow the <xref target="RFC3339">IMPP datetime
	format</xref>. Timestamps that contain 'T' or 'Z' MUST use the
	capitalized forms. It is recommended that file metadata
	documents contain a &lt;timestamp&gt; element to indicate the
	age of the document.
      </t>
      <t>
	The &lt;note&gt; element contains a string value, which is
	usually used for a human readable comment.  A &lt;note&gt;
	element MAY appear as a child element of &lt;file-set&gt;
	element.
      </t>
      <t>
	The &lt;file&gt; element consists of one &lt;identity&gt;
	element and one or more &lt;instance&gt; elements. The
	&lt;file&gt; element MAY also contain other elements and
	attributes from different namespaces for the purposes of
	extensibility; elements or attributes from unknown namespaces
	MUST be ignored.
      </t>
      <t>
	The &lt;identity&gt; element groups a number of elements that
	represent the invariant data of the file, i.e., file metadata
	that is common across different instances of the file. For
	example, the &lt;identity&gt; element provides a description
	for the hash or size of a file. On the contrary, data that is
	specific to the location of the file are grouped in the
	&lt;instance&gt; element. This can include a Uniform
	Resource Identifier (URI) of the user who hosts the file or a
	human readable description of the file.
      </t>
      <t>
	The &lt;identity&gt; element contains an 'id' attribute whose
	value MUST be unique within the XML document. 
      </t>
      <t>
	The &lt;identity&gt; element contains zero or one &lt;urn&gt;,
	&lt;mime-type&gt;, &lt;size&gt;, and &lt;sha1&gt;
	elements. The &lt;identity&gt; element MAY also contain other
	elements and attributes from different namespaces for the
	purposes of extensibility; elements or attributes from unknown
	namespaces MUST be ignored.
      </t>
      <t>
	The &lt;urn&gt; element contains a persistent,
	location-independent, resource identifier expressed as a <xref
	target="RFC2141"> Uniform Resource Name (URN) </xref> that is
	allocated to the file and uniquely identifies it. If
	present, the value of the &lt;urn&gt; element MUST be
	formatted according to the URN syntax specified in <xref
	target="RFC2141">RFC 2141 </xref>.
      </t>
      <t>
	The &lt;mime-type&gt; element contains the Multipurpose
	Internet Mail Extensions (MIME) type of the file. If
	present, the value of the &lt;mime-type&gt; element SHOULD
	contain an IANA registered MIME media type expressed as
	type/subtype format.
      </t>
      <t>
	The &lt;size&gt; element contains the file size in
	octets.
      </t>
      <t>
	The &lt;sha1&gt; element contains the results of a hashing
	operation on the file. The hashing operation MUST be
	computed using the <xref target="RFC3174"> US Secure Hash
	Algorithm 1 (SHA1) </xref> and MUST be expressed in
	hexadecimal format.
      </t>
      <t>
	One or more &lt;instance&gt; elements can be included in the
	&lt;file&gt; element. Each &lt;instance&gt; element
	provides information that is related to a particular instance
	of the file, rather than the file itself.
      </t>

      <t>
	Each &lt;instance&gt; element contains an 'id' attribute whose
	value MUST be unique within the XML document. The
	&lt;instance&gt; element also contains one or more &lt;uri&gt;
	and &lt;urn&gt; elements, and zero or one &lt;user-uri&gt;,
	&lt;user-gruu&gt;, &lt;name&gt;, &lt;description&gt;
	&lt;iconptr&gt;, &lt;creation-date&gt;,
	&lt;modification-date&gt;, &lt;read-date&gt; and
	&lt;keywords&gt; elements. Additionally, the &lt;instance&gt;
	element MAY contain other elements and attributes from
	different namespaces for the purposes of extensibility;
	elements or attributes from unknown namespaces MUST be
	ignored.
      </t>
      <t>
	The &lt;uri&gt; element contains either a location-dependent,
	typically protocol-specific file identifier expressed as a
	<xref target="RFC3986"> Uniform Resource Identifier (URI)
	</xref>. The &lt;uri&gt; element can be, for example, an HTTP
	or FTP URI. 
      </t>
      <t>
	The &lt;user-uri&gt; provides a container for a URI that
	resolves to the URI f the user where the file
	is available. For example, this can be a SIP or SIPS URI.
	This might be useful when it is not possible to provide a URI
	(in the &lt;uri&gt; element) that resolves to the file itself,
	but instead, there is a URI that resolves to the user that
	hosts the file. 
      </t>
      <t>
	The &lt;user-gruu&gt; provides a SIP <xref
	target="I-D.ietf-sip-gruu">Globally Routable User Agent URI
	(GRUU) </xref> that points to the SIP instance in the User
	Agent where the file is available. This element completes the
	&lt;user-uri&gt; by providing an pointer to the SIP instance
	that is hosting the file.
      </t>
      <t>
	The &lt;name&gt; element contains the file name.
      </t> 
      <t>
	The &lt;description&gt; element contains a human readable text
	describing the file.
      </t>
      <t>
	The &lt;iconptr&gt; element contains a URI that points to an
	icon that represents the file. This is typically
	applicable to image or video files.
      </t>
      <t>
	The &lt;creation-date&gt; element indicates the date and time
	at which the file was created.
      </t>
      <t>
	The &lt;modification-date&gt; element indicates the date and
	time at which the file was last modified.
      </t>
      <t>
	The &lt;read-date&gt; element indicates the date and time at
	which the file was last read.
      </t>
      <t>
	The &lt;keywords&gt; element is a container of keywords
	associated to the file. Its main purpose is to assist
	indexing and search engines. The &lt;keywords&gt; element
	contains one or more &lt;keyword&gt; elements (notice the
	singular form of the child elements). The &lt;keywords&gt;
	element MAY contain other attributes from different namespaces
	for the purposes of extensibility; attributes from unknown
	namespaces MUST be ignored.
      </t>
      <t>
	Each &lt;keyword&gt; element contains one word that represents
	a keyword associated to the file. A &lt;keyword&gt;
	element SHOULD NOT contain any white spaces. If several
	keywords are to be included, each one should be included in a
	separate &lt;keyword&gt; element.
      </t>
    </section>

    <section title="Partial 'file-metadata' document: patch operations"
	     anchor="partial-file-metadata-document">

      <t>
	A partial 'file-metadata' document begins with the root
	element tag &lt;patch&gt; that describes a collection of <xref
	target="I-D.ietf-simple-xml-patch-ops"> XML patch operations
	</xref> that are to be applied to a previous version of a full
	'file-metadata' document. The &lt;patch&gt; element contains a
	mandatory 'version' attribute whose counter is shared with the
	'version' attribute of the &lt;file-set&gt; element. Each new
	partial 'file-metadata' document MUST increment the 'version'
	attribute value by one, with respect the previously sent
	version. The value of the 'version' attribute can be used to
	ensure consistent updates as the recipient of the document can
	use the 'version' number to properly order received documents
	and to ensure that updates have not been lost.
      </t>
      <t>
	The &lt;patch&gt; element consists of one or more child
	&lt;add&gt;, &lt;replace&gt;, or &lt;remove&gt; elements whose
	type definitions are included from the <xref
	target="I-D.ietf-simple-xml-patch-ops">XML Patch Operations
	</xref> identified with the namespace
	"urn:ietf:params:xml:schema:xml-patch-ops".
      </t>
      <t>
	The &lt;patch&gt; element MAY contain other elements and
	attributes from different namespaces for the purposes of
	extensibility; elements or attributes from unknown namespaces
	MUST be ignored.
      </t>
      <t>
	The &lt;add&gt; element is used to add new content to the
	'file-metadata' document. The details of the &lt;add&gt;
	element are discussed in the <xref
	target="I-D.ietf-simple-xml-patch-ops">XML Patch Operations
	</xref>.
      </t>
      <t>
	The &lt;replace&gt; element is used to update content in the
	'file-metadata' document. The details of the &lt;replace&gt;
	element are discussed in the <xref
	target="I-D.ietf-simple-xml-patch-ops">XML Patch Operations
	</xref>.
      </t>
      <t>
	The &lt;remove&gt; element is used to remove content from the
	'file-metadata' document. The details of the &lt;remove&gt;
	element are discussed in the <xref
	target="I-D.ietf-simple-xml-patch-ops">XML Patch Operations
	</xref>.
      </t>
      <t>
	Once all the patch operations have been applied to the
	previous full 'file-metadata' document, a new full
	'file-metadata' document is created with the same 'version'
	attribute value, letting a subsequent partial 'file-metadata'
	document operate on the last full document.
      </t>
    </section>



    <section title="XML Schema" anchor="schema">

      <t>
	Implementations according to this specification MUST comply to
	the following XML schema that defines the constraints of the
	'file-metadata' document:
      </t>
      
      <figure title="'file-metadata' document XML schema"
	      anchor="fig-schema">
<artwork>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
   &lt;xs:schema targetNamespace="urn:ietf:params:xml:ns:file"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns="urn:ietf:params:xml:ns:file"
      elementFormDefault="qualified"
      attributeFormDefault="unqualified"&gt;

    &lt;xs:import namespace="http://www.w3.org/XML/1998/namespace"
            schemaLocation="http://www.w3.org/2001/xml.xsd"/&gt;

    &lt;xs:annotation&gt;
      &lt;xs:documentation xml:lang="en"&gt;
        XML Schema Definition to provide information about
        available files at a host.
      &lt;/xs:documentation&gt;
    &lt;/xs:annotation&gt;

    &lt;!-- include xml-patch-ops type definitions --&gt;
    &lt;xs:include
      schemaLocation="urn:ietf:params:xml:schema:xml-patch-ops"/&gt;

    &lt;xs:element name="file-set" type="file-setType"/&gt;
    &lt;xs:element name="patch" type="patchType"/&gt;

    &lt;xs:complexType name="file-setType"&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element name="file" type="fileType"
                        maxOccurs="unbounded"/&gt;
        &lt;xs:element name="timestamp" type="xs:dateTime" 
                        minOccurs="0"/&gt;
        &lt;xs:element name="note" type="note" minOccurs="0"
            maxOccurs="unbounded"/&gt;
        &lt;xs:any namespace="##other" processContents="lax"
                   minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;/xs:sequence&gt;
      &lt;xs:attribute name="version" type="xs:unsignedInt"
                       use="required"/&gt;
      &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="fileType"&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element name="identity" type="identityType" /&gt;
        &lt;xs:element name="instance" type="instanceType"
                       maxOccurs="unbounded" /&gt;

        &lt;xs:any namespace="##other" processContents="lax"
                   minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;/xs:sequence&gt;
      &lt;xs:attribute name="id" type="xs:ID" use="required"/&gt;
      &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="identityType"&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element name="urn" type="xs:anyURI" minOccurs="0"/&gt;
        &lt;xs:element name="mime-type" type="xs:string" minOccurs="0"/&gt;
        &lt;xs:element name="size" type="xs:nonNegativeInteger"
                       minOccurs="0"/&gt;
        &lt;xs:element name="sha1" type="xs:hexBinary" minOccurs="0"/&gt;
        &lt;xs:any namespace="##other" processContents="lax"
                   minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;/xs:sequence&gt;
      &lt;xs:attribute name="id" type="xs:ID" use="required"/&gt;
      &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="instanceType"&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element name="name" type="xs:string" minOccurs="0"/&gt;
        &lt;xs:element name="description" type="xs:string" 
                       minOccurs="0"/&gt;
        &lt;xs:element name="uri" type="xs:anyURI" minOccurs="0"
                       maxOccurs="unbounded"/&gt;
        &lt;xs:element name="user-uri" type="xs:anyURI" minOccurs="0"/&gt;
        &lt;xs:element name="user-gruu" type="xs:anyURI" minOccurs="0"/&gt;
        &lt;xs:element name="iconptr" type="xs:anyURI"
                       minOccurs="0"/&gt;
        &lt;xs:element name="creation-date" type="xs:dateTime"
                       minOccurs="0"/&gt;
        &lt;xs:element name="modification-date" type="xs:dateTime"
                       minOccurs="0"/&gt;
        &lt;xs:element name="read-date" type="xs:dateTime"
                       minOccurs="0"/&gt;
        &lt;xs:element name="keywords" type="keywordsType"
                       minOccurs="0"/&gt;
        &lt;xs:any namespace="##other" processContents="lax"
                   minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;/xs:sequence&gt;
      &lt;xs:attribute name="id" type="xs:ID" use="required"/&gt;
      &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="keywordsType"&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element name="keyword" type="xs:token"
                       maxOccurs="unbounded" /&gt;
        &lt;xs:any namespace="##other" processContents="lax"
                   minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;/xs:sequence&gt;
      &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="patchType"&gt;
      &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
          &lt;xs:element name="add" type="add"/&gt;
          &lt;xs:element name="replace" type="replace"/&gt;
          &lt;xs:element name="remove" type="remove"/&gt;
      &lt;/xs:choice&gt;
      &lt;xs:attribute name="version" type="xs:unsignedInt"/&gt;
    &lt;/xs:complexType&gt;

    &lt;xs:complexType name="note"&gt;
      &lt;xs:simpleContent&gt;
        &lt;xs:extension base="xs:string"&gt;
          &lt;xs:attribute ref="xml:lang"/>&gt;
        &lt;/xs:extension&gt;
      &lt;/xs:simpleContent&gt;
    &lt;/xs:complexType&gt;

   &lt;/xs:schema&gt;
</artwork></figure>

    </section>

    <section title="Examples" anchor="sec-example">
      <section title="Example of a full 'file-document' document">
	<t>
	  <xref target="fig-example-full-1"/> is an example of a
	  'file-metadata' document.
	</t>

        <figure title="Example of a full 'file-metadata' document" anchor="fig-example-full-1"><artwork>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
   &lt;file-set xmlns="urn:ietf:params:xml:ns:file"
          version="123"&gt;
     &lt;file id="id38sh12jd"&gt;

       &lt;identity id="id9d8c9"&gt;
         &lt;mime-type&gt;image/jpeg&lt;/mime-type&gt;
         &lt;size&gt;230432&lt;/size&gt;
         &lt;sha1&gt;72245FE8653DDAF371362F86D471913EE4A2CE2E&lt;/sha1&gt;
       &lt;/identity&gt;

       &lt;instance id="idc989c00"&gt;
         &lt;name&gt;coolpic.jpg&lt;/name&gt;
         &lt;description&gt;
             This is my latest cool picture from my summer vacation
         &lt;/description&gt;
         &lt;user-uri&gt;sip:miguel.an.garcia@example.com&lt;/user-uri&gt;
         &lt;user-gruu&gt;
           sip:miguel.an.garcia@example.com;
                gr=urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6
         &lt;/user-gruu&gt;
         &lt;iconptr&gt;http://www.example.com/coolpic-icon.jpg&lt;/iconptr&gt;
         &lt;creation-date&gt;2006-05-09T09:30:47+03:00&lt;/creation-date&gt;
         &lt;modification-date&gt;
             2006-05-09T10:24:34+03:00
         &lt;/modification-date&gt;
         &lt;read-date&gt;2006-05-10T14:24:32+03:00&lt;/read-date&gt;
         &lt;keywords&gt;
           &lt;keyword&gt;summer&lt;/keyword&gt;
           &lt;keyword&gt;vacation&lt;/keyword&gt;
         &lt;/keywords&gt;
       &lt;/instance&gt;
     &lt;/file&gt;

     &lt;timestamp&gt;2007-11-12T09:55:28Z&lt;/timestamp&gt;
     &lt;note xml:lang="en"&gt;There is only one available file&lt;/note&gt;

   &lt;/file-set&gt;
        </artwork></figure>

	<t>
	  The example in <xref target="fig-example-full-1" /> shows a
	  full 'file-metadata' document. The example contains the
	  description of a single file: an image file. The source of
	  the information provides description of the file (an
	  &lt;file&gt; element) that contains the static data of the
	  file included in the &lt;identity&gt; element and the
	  variable data (that depends on the actual instance of the
	  file) in the &lt;instance&gt; element. The &lt;identity&gt;
	  element contains a number of characteristics of the file
	  that would not change across different instances, such as
	  the MIME type, the size, and the hash of the file. On the
	  contrary, the &lt;instance&gt; element contains the data
	  related to the particular instance of the file, such as the
	  name assigned by the user to the file, a human readable
	  description, the GRUU that points to the SIP User Agent
	  where the file is stored, the creation, modification, and
	  read dates, etc. Last, a &lt;timestamp&gt; and a
	  &lt;note&gt; elements indicate the date and time when the
	  XML document was created and a human readable note.
	</t>

      </section>

      <section title="Example of a partial 'file-metadata' document" anchor="file-metadata-example-partial-1">
	<t>
	  <xref target="fig-example-partial-1" /> is an example
	  of a partial 'file-metadata' document.
	</t>

	<figure title="Example of a partial 'file-metadata' document" anchor="fig-example-partial-1"><artwork>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
  &lt;patch xmlns="urn:ietf:params:xml:ns:file" 
               version="124"&gt;
     &lt;add sel="file-set"&gt;
       &lt;file id="b390d92"&gt;

         &lt;identity id="mm8b8d"&gt;
           &lt;mime-type&gt;message/msrp&lt;/mime-type&gt;
         &lt;/identity&gt;

         &lt;instance id="hhdu23"&gt;
           &lt;name&gt;IETFers chat room&lt;/name&gt;
           &lt;description&gt;
                Dedicated chat room for IETF discussions
           &lt;/description&gt;
           &lt;user-gruu&gt;
               sip:miguel.an.garcia@example.com;
                 gr=urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6
           &lt;/user-gruu&gt;
           &lt;user-uri&gt;sip:miguel.an.garcia@example.com&lt;/user-uri&gt;
         &lt;/instance&gt;
       &lt;/file&gt;
     &lt;/add&gt;

     &lt;replace sel="file-set/timestamp"&gt;
        &lt;timestamp&gt;2007-11-12T11:00:00Z&lt;/timestamp&gt;
     &lt;/replace&gt;

     &lt;replace sel="file-set/note"&gt;
        &lt;note xml:lange="en"&gt;Now I have two available files&lt;/note&gt;
     &lt;/replace&gt;
  &lt;/patch&gt;

        </artwork></figure>

	<t>
	  The example in <xref target="fig-example-partial-1" /> shows
	  an example of a partial 'file-metadata' document. The
	  document contains the patch operations that adds one more
	  new file to the existing list of files, so the result of
	  applying the patch to the initial file metadata document of
	  <xref target="fig-example-full-1" /> results in a document
	  that contains the description of two files.
	</t>
	<t>
	  The 'version' attribute of
	  the &lt;patch&gt; element is incremented by one with respect
	  the 'version' attribute of the &lt;file-set&gt; element of
	  the full 'file-metadata' document in <xref
	  target="fig-example-full-1" />. The document replaces the
	  previous &lt;timestamp&gt; and &lt;note&gt; elements with
	  new values.
	</t>
      </section>


      <section title="Example of a full 'file-metadata' document" anchor="file-example-full-2">
	<t>
	  <xref target="fig-example-full-2" /> is an example of a
	  full 'file-metadata' document.
	</t>

	<figure title="Example of a full 'file-metadata' document" anchor="fig-example-full-2"><artwork>
   &lt;?xml version="1.0" encoding="UTF-8"?&gt;
   &lt;file-set xmlns="urn:ietf:params:xml:ns:file" 
          version="312"&gt;
     &lt;file id="nkcdn0"&gt;

       &lt;identity id="aa77d7"&gt;
         &lt;mime-type&gt;audio/3gpp&lt;/mime-type&gt;
         &lt;size&gt;34987&lt;/size&gt;
         &lt;sha1&gt;E05DA01A590E31F6E3100AD7BEC39C63464A1CD0&lt;/sha1&gt;
       &lt;/identity&gt;

      &lt;instance id="idea1dof"&gt; 
         &lt;name&gt;recording-1.3gp&lt;/name&gt;
         &lt;description&gt;
             Bob's speech at a conference
         &lt;/description&gt;
         &lt;user-uri&gt;sip:miguel.an.garcia@example.com&lt;/user-uri&gt;
         &lt;user-gruu&gt;
           sip:miguel.an.garcia@example.com;
                 gr=urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6
         &lt;/user-gruu&gt;
         &lt;creation-date&gt;2006-05-01T01:30:47+03:00&lt;/creation-date&gt;
         &lt;modification-date&gt;
             2006-05-02T02:24:34+03:00
         &lt;/modification-date&gt;
         &lt;read-date&gt;2006-05-03T03:24:32+03:00&lt;/read-date&gt;
         &lt;keywords&gt;
           &lt;keyword&gt;Bob&lt;/keyword&gt;
           &lt;keyword&gt;speech&lt;/keyword&gt;
         &lt;/keywords&gt;
       &lt;/instance&gt; 

       &lt;instance id="kxf-312"&gt; 
         &lt;name&gt;bob-speech.3gp&lt;/name&gt;
         &lt;description&gt;
             Bob talking about nanotechnology
         &lt;/description&gt;
         &lt;user-uri&gt;sip:alice@example.com&lt;/user-uri&gt;
         &lt;user-gruu&gt;
           sip:alice@example.com;
                 gr=urn:uuid:f81d4fae-7dec-11d0-4de9-00a2ac4e398a
         &lt;/user-gruu&gt;
         &lt;creation-date&gt;2006-05-01T01:30:47+03:00&lt;/creation-date&gt;
         &lt;modification-date&gt;
             2006-05-02T02:24:34+03:00
         &lt;/modification-date&gt;
         &lt;read-date&gt;2006-05-24T05:12:07+02:00&lt;/read-date&gt;
         &lt;keywords&gt;
           &lt;keyword&gt;Bob&lt;/keyword&gt;
           &lt;keyword&gt;nanotechnology&lt;/keyword&gt;
         &lt;/keywords&gt;
       &lt;/instance&gt; 
     &lt;/file&gt;

   &lt;timestamp&gt;2007-11-12T14:01:02Z&lt;/timestamp&gt;
   &lt;note&gt;There is a single file available at two endpoints&lt;/note&gt;

   &lt;/file-set&gt;
        </artwork></figure>

	<t>
	  The example in <xref target="fig-example-full-2" /> shows an
	  example of a full 'file-metadata' document. The document
	  describes a single audio file, which is available at two
	  difference hosts, thus, the 'file-metadata' document starts
	  with a &lt;file-set&gt; element that contains the
	  description of the file in the &lt;file&gt; element. The
	  &lt;file&gt; element contains an &lt;identity&gt; element
	  and two &lt;instance&gt; elements. The &lt;identity&gt;
	  element contains descriptive invariant data of the
	  file. Each of the &lt;instance&gt; elements contains data
	  related to the particular instance where the file is
	  available.
	</t>
      </section>

      <section title="Example of a partial 'file-metadata' document" anchor="file-example-partial-2">
	<t>
	  <xref target="fig-example-partial-2" /> is an example
	  of a partial 'file-metadata' document.
	</t>

	<figure title="Example of a partial 'file-metadata' document" anchor="fig-example-partial-2"><artwork>
   &lt;?xml version="1.0" encoding="UTF-8"?&gt;
   &lt;patch xmlns="urn:ietf:params:xml:ns:file" 
          version="313"&gt;
 
     &lt;add sel="file-set/file[@id='nkcdn0']"&gt;
       &lt;instance id="ak6v3d"&gt;
         &lt;name&gt;nanotalk.3gp&lt;/name&gt;
         &lt;description&gt;
              Nanotechnology speech
         &lt;/description&gt;
         &lt;user-gruu&gt;
             sip:bob@example.com;
                 gr=urn:uuid:f81d4fae-7dec-11d0-5d3a-bbc333431122
         &lt;/user-gruu&gt;
         &lt;user-uri&gt;sip:bob@example.com&lt;/user-uri&gt;
       &lt;/instance&gt;
     &lt;/add&gt;

     &lt;replace sel="id('idea1dof')/read-date/text()"
         &gt;2006-06-07T17:26:04+03:00&lt;/replace&gt;
     &lt;replace sel="file-set/timestamp"&gt;
         &lt;timestamp&gt;2007-11-12T18:02:02Z&lt;/timestamp&gt;
     &lt;/replace&gt;

     &lt;replace sel="file-set/note"&gt;
         &lt;note xml:lange="en"&lt;Three instances of the same file&lt;/note&gt;
     &lt;/replace&gt;
  &lt;/patch&gt;
        </artwork></figure>

	<t>
	  <xref target="fig-example-partial-2" /> contains a
	  number of XML patch operations to be applied to the full
	  'file-metadata' document included in <xref
	  target="fig-example-full-2" />. The document in <xref
	  target="fig-example-partial-2" /> starts with a
	  &lt;patch&gt; root element, indicating that it is a partial
	  'file-metadata' document. The 'version' attribute is incremented
	  by one with respect the 'version' attribute of the
	  &lt;file-set&gt; element of the full 'file-metadata' document of
	  <xref target="fig-example-full-2" />.
	</t>
	<t>
	  The document contains an &lt;add&gt; element that first
	  selects the &lt;file&gt; element whose 'id' attribute is set
	  to "nkcdn0". Then it appends, at the end of the existing child
	  elements, a new &lt;instance&gt; element that describes the
	  availability of the same file at a different endpoint.
	</t>
	<t>
	  The first &lt;replace&gt; element selects the
	  &lt;read-date&gt; element of the &lt;instance&gt; whose 'id'
	  attribute is set to "idea1dof" and replaces the value with a
	  new date and time. Then, the following &lt;replace&gt;
	  elements replace the &lt;timestamp&gt; and &lt;note&gt;
	  elements, respectively.
	</t>
	<t>
	  <list style="hanging">
	    <t>
	      Note: the 'sel' attribute of the &lt;replace&gt; element
	      in <xref target="fig-example-partial-2" /> is split
	      in two lines due to formatting restrictions. It will
	      appear as a single line in XML documents.
	    </t>
	</list>
	</t>
      </section>
    </section>
  </section>




<section title="Security Considerations" anchor="security">
<t>
TBD
</t>
</section>

<section title="IANA Considerations" anchor="iana">

<t>
TBD
</t>

<!-- Need to register the XML schema and namespace -->

</section>
</middle>
<back>

  <references title="Normative References">
    <reference anchor='RFC2119'>
       <front> 
         <title abbrev='RFC Key Words'>Key words for use in RFCs to
          Indicate Requirement Levels</title> 
         <author initials='S.' surname='Bradner' fullname='Scott
               Bradner'> 
            <organization>Harvard University</organization> 
            <address> 
              <postal>
                 <street>1350 Mass. Ave.</street> 
                 <street>Cambridge</street>
                 <street>MA 02138</street>
              </postal> 
              <phone>- +1 617 495 3864</phone>
              <email>sob@harvard.edu</email>
            </address>
         </author> 
         <date year='1997' month='March' /> 
         <area>General</area>
         <keyword>keyword</keyword> 
       </front>
       <seriesInfo name='BCP' value='14' /> 
       <seriesInfo name='RFC' value='2119' /> 
       <format type='TXT' octets='4723'
         target='ftp://ftp.isi.edu/in-notes/rfc2119.txt' /> 
       <format type='HTML' octets='14486'
               target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
       <format type='XML' octets='5661'
               target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
    </reference>



    <?rfc include="reference.RFC.2141"?>
    <?rfc include="reference.RFC.3174"?>
    <?rfc include="reference.RFC.3339"?>
    <?rfc include="reference.RFC.3629"?>
    <?rfc include="reference.RFC.3986"?>
    <?rfc include="reference.W3C.REC-xml-20001006"?>
    <?rfc include="reference.I-D.ietf-simple-xml-patch-ops"?>


  </references>

  <references title="Informative References">

    <?rfc include="reference.RFC.2616"?>
    <?rfc include="reference.RFC.3261"?>
    <?rfc include="reference.I-D.ietf-sip-gruu"?>
    <?rfc include="reference.I-D.garcia-sipping-file-sharing-framework"?>
  </references>
</back>

</rfc>

<!-- LocalWords: xref CDATA XML 
 -->
