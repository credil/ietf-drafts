<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'> 
<!ENTITY RFC2212 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2212.xml'>
<!ENTITY RFC3393 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3393.xml'>
<!ENTITY RFC2475 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2475.xml'>
<!ENTITY RFC3564 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3564.xml'>
<!ENTITY RFC4124 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4124.xml'>
<!ENTITY RFC2210 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2210.xml'>
<!ENTITY RFC2215 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2215.xml'>
<!ENTITY RFC3181 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3181.xml'>
<!ENTITY RFC4412 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4412.xml'>
<!ENTITY RFC3290 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3290.xml'>
<!ENTITY RFC3140 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3140.xml'>
<!ENTITY RFC2474 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2474.xml'>
<!ENTITY RFC3588 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3588.xml'>
<!ENTITY RFC2597 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2597.xml'>
<!ENTITY I-D.ietf-nsis-qspec PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-nsis-qspec.xml'>
<!ENTITY RFC5226 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml'>
<!ENTITY I-D.ietf-tsvwg-emergency-rsvp PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-tsvwg-emergency-rsvp.xml'>
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="no" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="yes" ?>

<rfc ipr="full3978" category="std" docName="draft-ietf-dime-qos-parameters-05.txt">
   <front>
      <title abbrev="QoS Parameters">Quality of Service Parameters for Usage with the AAA Framework</title>

      <author role="editor" initials="J" surname="Korhonen" fullname="Jouni Korhonen">
         <organization>TeliaSonera</organization>
         <address>
                <postal>
                    <street>Teollisuuskatu 13</street>
                    <city>Sonera</city>
                    <code>FIN-00051</code>
                    <country>Finland</country>
                </postal>
                <email>jouni.korhonen@teliasonera.com</email>
            </address>
      </author>
      <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
         <organization>Nokia Siemens Networks</organization>
         <address>
            <postal>
               <street>Linnoitustie 6</street>
               <city>Espoo</city>
               <code>02600</code>
               <country>Finland</country>
            </postal>
            <phone>+358 (50) 4871445</phone>
            <email>Hannes.Tschofenig@gmx.net</email>
            <uri>http://www.tschofenig.priv.at</uri>
         </address>
      </author>
      <date year="2008"/>
      <area>Operations and Management</area>
      <workgroup>Diameter Maintenance and Extensions (DIME)</workgroup>
      <keyword>Internet-Draft</keyword>
      <keyword>Diameter</keyword>
      <keyword>QoS Parameters</keyword>
      <abstract>
         <t> This document defines a number of Quality of Service (QoS) parameters that can be
            reused for conveying QoS information within RADIUS and Diameter. </t>
         <t>The payloads used to carry these QoS parameters are opaque for the AAA client and the
            AAA server itself and interpreted by the respective Resource Management Function. </t>
      </abstract>
   </front>
   <middle>
      <!-- ====================================================================== -->
      <section anchor="introduction" title="Introduction">
         <t> This document defines a number of Quality of Service (QoS) parameters that can be
            reused for conveying QoS information within RADIUS and Diameter. </t>
         <t> The subsequent section give an overview of the parameters defined by this document. </t>
         <section title="Traffic Model Parameter">
            <t> The Traffic Model (TMOD) parameter is a container consisting of four
                  sub-parameters:<list style="symbols">
                  <t>rate (r)</t>
                  <t>bucket size (b)</t>
                  <t>peak rate (p)</t>
                  <t>minimum policed unit (m)</t>
               </list>
            </t>
            <t>The TMOD parameter is a mathematically complete way to describe the traffic source.
               If, for example, TMOD is set to specify bandwidth only, then set r = peak rate = p, b
               = large, m = large. As another example if TMOD is set for TCP traffic, then set r =
               average rate, b = large, p = large. </t>
         </section>

         <section title="Constraints Parameters">
            <t> &lt;Path Latency&gt;, &lt;Path Jitter&gt;, &lt;Path PLR&gt;,
               and &lt;Path PER&gt; are QoS parameters describing the desired path latency,
               path jitter and path bit error rate respectively. </t>
            <t>The &lt;Path Latency&gt; parameter refers to the accumulated latency of the
               packet forwarding process associated with each QoS aware node along the path, where
               the latency is defined to be the mean packet delay added by each such node. This
               delay results from speed-of-light propagation delay, from packet processing
               limitations, or both. The mean delay reflects the variable queuing delay that may be
               present. The purpose of this parameter is to provide a minimum path latency for use
               with services which provide estimates or bounds on additional path delay <xref
                  target="RFC2212"/>.</t>
            <t>The &lt;Path Jitter&gt; parameter refers to the accumulated jitter of the
               packet forwarding process associated with each QoS aware node along the path, where
               the jitter is defined to be the nominal jitter added by each such node. IP packet
               jitter, or delay variation, is defined in Section 3.4 of RFC 3393 <xref
                  target="RFC3393"/>, (Type-P-One-way-ipdv), and where the selection function
               includes the packet with minimum delay such that the distribution is equivalent to
               2-point delay variation in <xref target="Y.1540"/>. The suggested evaluation interval
               is 1 minute. This jitter results from packet processing limitations, and includes any
               variable queuing delay which may be present. The purpose of this parameter is to
               provide a nominal path jitter for use with services that provide estimates or bounds
               on additional path delay <xref target="RFC2212"/>. </t>
            <t> The procedures for collecting path jitter information are outside the scope of this
               document. </t>
            <t> The &lt;Path PLR&gt; parameter refers to the accumulated packet loss rate
               (PLR) of the packet forwarding process associated with each QoS aware node along the
               path where the PLR is defined to be the PLR added by each such node. </t>
            <t>The &lt;Path PER&gt; parameter refers to the accumulated packet error rate
               (PER) of the packet forwarding process associated with each QoS aware node, where the
               PER is defined to be the PER added by each such node. </t>
            <t> The &lt;Slack Term&gt; parameter refers to the difference between desired
               delay and delay obtained by using bandwidth reservation, and which is used to reduce
               the resource reservation for a flow <xref target="RFC2212"/>. </t>
            <t> The &lt;Preemption Priority&gt; parameter refers to the priority of the new
               flow compared with the &lt;Defending Priority&gt; of previously admitted
               flows. Once a flow is admitted, the preemption priority becomes irrelevant. The
               &lt;Defending Priority&gt; parameter is used to compare with the preemption
               priority of new flows. For any specific flow, its preemption priority MUST always be
               less than or equal to the defending priority. &lt;Admission Priority&gt; and
               &lt;RPH Priority&gt; provide an essential way to differentiate flows for
               emergency services, ETS, E911, etc., and assign them a higher admission priority than
               normal priority flows and best-effort priority flows. </t>
         </section>
         <section title="Traffic Handling Directives">
            <t>The &lt;Excess Treatment&lt; parameter describes how a QoS aware node will
               process excess traffic, that is, out-of-profile traffic. Excess traffic MAY be
               dropped, shaped and/or remarked. </t>
         </section>
         <section title="Traffic Classes">
            <t> Resource reservations might refer to a packet processing with a particular DiffServ
               per-hop behavior (PHB) <xref target="RFC2475"/> or to a particular QoS class, e.g.,
               Y.1541 QoS class or DiffServ-aware MPLS traffic engineering (DSTE) class type <xref
                  target="RFC3564"/>, <xref target="RFC4124"/>. </t>
         </section>
      </section>
      <!-- ====================================================================== -->
      <section anchor="terms" title="Terminology and Abbreviations">
         <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD
            NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as
            described in RFC2119 <xref target="RFC2119"/>. </t>
      </section>
      <!-- ====================================================================== -->
      <section anchor="attributes" title="AVP Definition">
         <section title="TMOD-1 AVP">
            <t>The TMOD-1 AVP is obtained from <xref target="RFC2210"/> and <xref target="RFC2215"
               />. The structure of the AVP is as follows: <figure>
                  <artwork><![CDATA[
                    TMOD-1  ::= < AVP Header: TBD >
                                { TMOD-Rate-1 }
                                { TMOD-Size-1 }
                                { Peak-Data-Rate-1 }
                                { Minimum-Policed-Unit-1 }
                   ]]></artwork>
               </figure>
            </t>

            <section title="TMOD-Rate-1 AVP">
               <t> The TMOD-Rate-1 AVP (AVP Code TBD) is of type Float32 and contains the rate
               (r).</t>
            </section>

            <section title="TMOD-Size-1 AVP">
               <t> The TMOD-Size-1 AVP (AVP Code TBD) is of type Float32 and contains the bucket
                  size (b).</t>
            </section>

            <section title="Peak-Data-Rate-1 AVP">
               <t> The Peak-Data-Rate-1 AVP (AVP Code TBD) is of type Float32 and contains the peak
                  rate (p). </t>
            </section>

            <section title="Minimum-Policed-Unit-1 AVP">
               <t> The Minimum-Policed-Unit-1 AVP (AVP Code TBD) is of type Unsigned32 and contains
                  the minimum policed unit (m). </t>
            </section>

            <t>The values r, b, and p are represented as IEEE floating point values and the sign bit
               MUST be zero (all values MUST be non-negative). Exponents less than 127 (i.e., 0) are
               prohibited. Exponents greater than 162 (i.e., positive 35) are discouraged, except
               for specifying a peak rate of infinity. Infinity is represented with an exponent of
               all ones (255) and a sign bit and mantissa of all zeroes. </t>
         </section>
         <section title="TMOD-2 AVP">
            <t> A description of the semantic of the parameter values can be found in <xref
                  target="RFC2215"/>. The TMOD-2 AVP is useful in a DiffServ environment. The coding
               for the TMOD-2 AVP is as follows: <figure>
                  <artwork><![CDATA[
                    TMOD-2  ::= < AVP Header: TBD >
                                { TMOD-Rate-2 }
                                { TMOD-Size-2 }
                                { Peak-Data-Rate-2 }
                                { Minimum-Policed-Unit-2 }
                   ]]></artwork>
               </figure></t>

            <section title="TMOD-Rate-2 AVP">
               <t> The TMOD-Rate-2 AVP (AVP Code TBD) is of type Float32 and contains the rate
               (r).</t>
            </section>

            <section title="TMOD-Size-2 AVP">
               <t> The TMOD-Size-2 AVP (AVP Code TBD) is of type Float32 and contains the bucket
                  size (b).</t>
            </section>

            <section title="Peak-Data-Rate-2 AVP">
               <t> The Peak-Data-Rate-2 AVP (AVP Code TBD) is of type Float32 and contains the peak
                  rate (p). </t>
            </section>

            <section title="Minimum-Policed-Unit-2 AVP">
               <t> The Minimum-Policed-Unit-2 AVP (AVP Code TBD) is of type Unsigned32 and contains
                  the minimum policed unit (m). </t>
            </section>

            <t>The values r, b, and p are represented as IEEE floating point values and the sign bit
               MUST be zero (all values MUST be non-negative). </t>
            <t> Exponents less than 127 (i.e., 0) are prohibited. Exponents greater than 162 (i.e.,
               positive 35) are discouraged, except for specifying a peak rate of infinity. Infinity
               is represented with an exponent of all ones (255) and a sign bit and mantissa of all
               zeroes. </t>
         </section>
         <section title="Path-Latency AVP">
            <t> The semantic of the parameter values can be found in <xref target="RFC2210"/> and
                  <xref target="RFC2215"/>. The Path-Latency AVP (AVP Code TBD) is of type
               Integer32.</t>

            <t>The composition rule for the path latency is summation with a clamp of (2**32 - 1) on
               the maximum value. The latencies are average values reported in units of one
               microsecond. A system with resolution less than one microsecond MUST set unused
               digits to zero. The total latency added across all QoS aware nodes along the path can
               range as high as (2**32)-2. </t>
         </section>

         <section title="Path-Jitter AVP">
            <t>The coding for the Path-Jitter AVP is as follows: <figure>
                  <artwork><![CDATA[
                    Path-Jitter  ::= < AVP Header: TBD >
                                     { Path-Jitter-STAT1 }
                                     { Path-Jitter-STAT2 }
                                     { Path-Jitter-STAT3 }
                                     { Path-Jitter-STAT4 }
                   ]]></artwork>
               </figure></t>

            <section title="Path-Jitter-STAT1 AVP">
               <t> The Path-Jitter-STAT1 AVP (AVP Code TBD) is of type Integer32 and contains the
                  variance. </t>
            </section>

            <section title="Path-Jitter-STAT2 AVP">
               <t> The Path-Jitter-STAT2 AVP (AVP Code TBD) is of type Integer32 and contains the
                  99.9%-ile. </t>
            </section>

            <section title="Path-Jitter-STAT3 AVP">
               <t> The Path-Jitter-STAT3 AVP (AVP Code TBD) is of type Integer32 and contains the
                  minimum latency. </t>
            </section>

            <section title="Path-Jitter-STAT4 AVP">
               <t> The Path-Jitter-STAT4 AVP (AVP Code TBD) is of type Integer32 and is reserved for
                  future use. </t>
            </section>

            <t> The Path-Jitter AVP is the combination of four statistics describing the jitter
               distribution with a clamp of (2**32 - 1) on the maximum of each value. The jitter
               STATs are reported in units of one microsecond. </t>
         </section>
         <section title="Path-PLR AVP">
            <t> The Path-PLR AVP (AVP Code TBD) is of type Float32 and contains the path packet loss
               ratio. The PLRs are reported in units of 10^-11. A system with resolution less than
               one microsecond MUST set unused digits to zero. The total PLR added across all QoS
               aware nodes can range as high as 10^-1. </t>
         </section>

         <section title="Path-PER AVP">
            <t> The Path-PER AVP (AVP Code TBD) is of type Float32 and contains the path packet
               error ratio. The PERs are reported in units of 10^-11. A system with resolution less
               than one microsecond MUST set unused digits to zero. The total PER added across all
               QoS aware nodes can range as high as 10^-1. </t>
         </section>

         <section title="Slack-Term AVP">
            <t>The Slack-Term AVP (AVP Code TBD) is of type Integer32 and its semantic can be found
               in <xref target="RFC2212"/> and <xref target="RFC2215"/>. The Slack-Term AVP contains
               values measured in microseconds and its value can range from 0 to (2**32)-1
               microseconds. </t>
         </section>
         <section title="Priority AVP">
            <t>The Priority AVP is a grouped AVP consisting of two AVPs, the Preemption-Priority and
               the Defending-Priority AVP. A description of the semantic can be found in <xref
                  target="RFC3181"/>. </t>

            <t>
               <figure>
                  <artwork><![CDATA[
                    Priority  ::= < AVP Header: TBD >
                                  { Preemption-Priority }
                                  { Defending-Priority }
                   ]]></artwork>
               </figure>
            </t>

            <section title="Preemption-Priority AVP">
               <t> The Preemption-Priority AVP (AVP Code TBD) is of type Unsigned32 and it indicates
                  the priority of the new flow compared with the defending priority of previously
                  admitted flows. Higher values represent higher priority. </t>
            </section>

            <section title="Defending-Priority AVP">
               <t> The Defending-Priority AVP (AVP Code TBD) is of type Unsigned32. Once a flow is
                  admitted, the preemption priority becomes irrelevant. Instead, its defending
                  priority is used to compare with the preemption priority of new flows.</t>
            </section>

         </section>

         <section title="Admission-Priority AVP">
            <t>The Admission-Priority AVP (AVP Code TBD) is of type Unsigned32. </t>
            <t>The admission control priority of the flow, in terms of access to network bandwidth
               in order to provide higher probability of call completion to selected flows. Higher
               values represent higher priority. A given admission priority is encoded in this
               information element using the same value as when encoded in the Admission-Priority
               AVP defined in Section 6.2.9 of <xref target="I-D.ietf-nsis-qspec"/>, or in the
               Admission Priority parameter defined in Section 3.1 of <xref
                  target="I-D.ietf-tsvwg-emergency-rsvp"/>. In other words, a given value inside the
               Admission-Priority AVP, inside the <xref target="I-D.ietf-nsis-qspec"/> admission
               priority parameter or inside the <xref target="I-D.ietf-tsvwg-emergency-rsvp"/>
               admission priority parameter, refers to the same admission priority. </t>
         </section>

         <section title="ALRP AVP">
            <t>The Application-Level Resource Priority (ALRP) AVP is a grouped AVP consisting of two
               AVPs, the ALRP-Namespace and the ALRP-Priority AVP.</t>

            <t> A description of the semantic of the parameter values can be found in <xref
                  target="RFC4412"/> and in <xref target="I-D.ietf-tsvwg-emergency-rsvp"/>. The
               coding for parameter is as follows: </t>

            <t>
               <figure>
                  <artwork><![CDATA[
                    ALRP  ::= < AVP Header: TBD >
                              { ALRP-Namespace }
                              { ALRP-Priority }
                   ]]></artwork>
               </figure>
            </t>

            <section title="ALRP-Namespace AVP">
               <t> The ALRP-Namespace AVP (AVP Code TBD) is of type Unsigned32. </t>
            </section>

            <section title="ALRP-Priority AVP">
               <t> The Path-Jitter-STAT4 AVP (AVP Code TBD) is of type Unsigned32. </t>
            </section>

            <t>
               <xref target="RFC4412"/> defines a resource priority header and established the
               initial registry; that registry was later extended by <xref
                  target="I-D.ietf-tsvwg-emergency-rsvp"/>.</t>
         </section>

         <section title="Excess-Treatment AVP">
            <t>The Excess-Treatment AVP is a grouped AVP consisting of two AVPs, the Treatment and
               the Remark-Value AVP.</t>
            <t>The coding for the Excess-Treatment AVP is as follows: </t>

            <t>
               <figure>
                  <artwork><![CDATA[
                    Excess-Treatment  ::= < AVP Header: TBD >
                                          { Excess-Treatment-Value }
                                          [ Remark-Value ]
                   ]]></artwork>
               </figure>
            </t>

            <section title="Excess-Treatment-Value AVP">
               <t> The Excess-Treatment-Value AVP (AVP Code TBD) is of type Enumerated and indicates
                  how a QoS aware node should process out-of-profile traffic. The following values
                  are currently defined: </t>
               <t>
                  <figure>
                     <artwork><![CDATA[
   0: drop
   1: shape
   2: remark
   3: no metering or policing is permitted
       ]]></artwork>
                  </figure>
               </t>
               <t>The default treatment in case that none is specified is that there are no
                  guarantees to excess traffic, i.e., a QoS aware node can do what it finds
                  suitable.</t>
               <t> When the treatment is set to 'drop', all marked traffic MUST be dropped by a QoS
                  aware node. </t>
               <t> When the treatment is set to 'shape', it is expected that QoS parameters conveyed
                  as part of QoS-Desired are used to reshape the traffic (for example a TMOD
                  parameter indicated as QoS desired). When the shaping causes unbounded queue
                  growth at the shaper traffic can be dropped. </t>
               <t> When the treatment is set to 'remark', the excess treatment parameter MUST carry
                  the remark value. For example, packets may be remarked to drop remarked to pertain
                  to a particular QoS class. In the latter case, remarking relates to a
                  DiffServ-type model, where packets arrive marked as belonging to a certain QoS
                  class, and when they are identified as excess, they should then be remarked to a
                  different QoS Class. The Remark-Value AVP carries the information used for
                  re-marking.</t>
               <t> If 'no metering or policing is permitted' is indicated, the QoS aware node should
                  accept the treatment set by the sender with special care so that excess traffic
                  should not cause a problem. To request the Null Meter <xref target="RFC3290"/> is
                  especially strong, and should be used with caution. </t>
            </section>

            <section title="Remark-Value AVP">
               <t> The Remark-Value AVP (AVP Code TBD) is of type Unsigned32 and contains the DSCP
                  value the excess traffic should be remarked to. </t>
            </section>

            <section title="PHB-Class AVP">
               <t> The PHB-Class AVP (AVP Code TBD) is of type OctetString and is two octets long. A
                  description of the semantic of the parameter values can be found in <xref
                     target="RFC3140"/>. The coding for the values is as follows: </t>
               <t>
                  <figure>
                     <artwork><![CDATA[
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | DSCP      |0 0 0 0 0 0 0 0 0 0|            (Reserved)         |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
       ]]></artwork>
                  </figure>
               </t>
               <t> As prescribed in <xref target="RFC3140"/>, the encoding for a single PHB is the
                  recommended DSCP value for that PHB, left-justified in the 16 bit field, with bits
                  6 through 15 set to zero. </t>
               <t> The encoding for a set of PHBs is the numerically smallest of the set of
                  encodings for the various PHBs in the set, with bit 14 set to 1. (Thus for the
                  AF1x PHBs, the encoding is that of the AF11 PHB, with bit 14 set to 1.) </t>
               <t>
                  <figure>
                     <artwork><![CDATA[             
    0                   1          
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   | DSCP      |0 0 0 0 0 0 0 0 X 0|
   +---+---+---+---+---+---+---+---+
             ]]></artwork>
                  </figure>
               </t>
               <t> PHBs not defined by standards action, i.e., experimental or local use PHBs as
                  allowed by <xref target="RFC2474"/>. In this case an arbitrary 12 bit PHB
                  identification code, assigned by the IANA, is placed left-justified in the 16 bit
                  field. Bit 15 is set to 1, and bit 14 is zero for a single PHB or 1 for a set of
                  PHBs. Bits 12 and 13 are zero. </t>
               <t>
                  <figure>
                     <artwork><![CDATA[ 
    0                   1          
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |      PHD ID CODE      |0 0 X 0|
   +---+---+---+---+---+---+---+---+
             ]]></artwork>
                  </figure>
               </t>

               <t> Bits 12 and 13 are reserved either for expansion of the PHB identification code,
                  or for other use, at some point in the future. </t>
               <t> In both cases, when a single PHBID is used to identify a set of PHBs (i.e., bit
                  14 is set to 1), that set of PHBs MUST constitute a PHB Scheduling Class (i.e.,
                  use of PHBs from the set MUST NOT cause intra-microflow traffic reordering when
                  different PHBs from the set are applied to traffic in the same microflow). The set
                  of AF1x PHBs <xref target="RFC2597"/> is an example of a PHB Scheduling Class.
                  Sets of PHBs that do not constitute a PHB Scheduling Class can be identified by
                  using more than one PHBID. </t>
               <t> The registries needed to use <xref target="RFC3140"/> already exist. Hence, no
                  new registry needs to be created for this purpose. </t>
            </section>

            <section title="DSTE-Class-Type AVP">
               <t>The DSTE-Class-Type AVP (AVP Code TBD) is of type Unsigned32. A description of the
                  semantic of the parameter values can be found in <xref target="RFC4124"/>. </t>
               <t> Currently, the values of alues currently allowed are 0, 1, 2, 3, 4, 5, 6, 7.</t>
            </section>

            <section title="Y.1541-QoS-Class AVP">
               <t>The Y.1541-QoS-Class AVP (AVP Code TBD) is of type Unsigned32. A description of
                  the semantic of the parameter values can be found in <xref target="Y.1541"/>. </t>
               <t> Currently, the allowed values of the Y.1541 QoS class are 0, 1, 2, 3, 4, 5, 6, 7.</t>
               <t>
                  <list style="hanging">
                     <t hangText="Class 0:"><vspace blankLines="1"/> Mean delay &lt;= 100 ms,
                        delay variation &lt;= 50 ms, loss ratio &lt;= 10^-3. Real-time,
                        highly interactive applications, sensitive to jitter. Application examples
                        include VoIP, Video Teleconference. <vspace blankLines="1"/></t>
                     <t hangText="Class 1:"><vspace blankLines="1"/> Mean delay &lt;= 400 ms,
                        delay variation &lt;= 50 ms, loss ratio &lt;= 10^-3. Real-time,
                        interactive applications, sensitive to jitter. Application examples include
                        VoIP, Video Teleconference. <vspace blankLines="1"/></t>
                     <t hangText="Class 2:"><vspace blankLines="1"/> Mean delay &lt;= 100 ms,
                        delay variation unspecified, loss ratio &lt;= 10^-3. Highly interactive
                        transaction data. Application examples include signaling.<vspace
                           blankLines="1"/></t>
                     <t hangText="Class 3:"><vspace blankLines="1"/> Mean delay &lt;= 400 ms,
                        delay variation unspecified, loss ratio &lt;= 10^-3. Interactive
                        transaction data. Application examples include signaling.<vspace
                           blankLines="1"/></t>
                     <t hangText="Class 4:"><vspace blankLines="1"/> Mean delay &lt;= 1 sec,
                        delay variation unspecified, loss ratio &lt;= 10^-3. Low Loss Only
                        applications. Application examples include short transactions, bulk data,
                        video streaming.<vspace blankLines="1"/>
                     </t>
                     <t hangText="Class 5:"><vspace blankLines="1"/> Mean delay unspecified, delay
                        variation unspecified, loss ratio unspecified. Unspecified applications.
                        Application examples include traditional applications of default IP
                           networks.<vspace blankLines="1"/>
                     </t>
                     <t hangText="Class 6:"><vspace blankLines="1"/> Mean delay &lt;= 100 ms,
                        delay variation &lt;= 50 ms, loss ratio &lt;= 10^-5. Applications
                        that are highly sensitive to loss, such as television transport,
                        high-capacity TCP transfers, and TDM circuit emulation.<vspace
                           blankLines="1"/>
                     </t>
                     <t hangText="Class 7:"><vspace blankLines="1"/> Mean delay &lt;= 400 ms,
                        delay variation &lt;= 50 ms, loss ratio &lt;= 10^-5. Applications
                        that are highly sensitive to loss, such as television transport,
                        high-capacity TCP transfers, and TDM circuit emulation. </t>
                  </list>
               </t>
            </section>
         </section>
      </section>

      <!-- ====================================================================== -->

      <section title="Extensibility">
         <t>This document is designed with extensibility in mind given that different organizations
            and groups are used to define their own Quality of Service parameters. This document
            provides an initial QoS profile with common set of QoS parameters. Ideally, these
            parameters should be used whenever possible but there are cases where additional
            parameters might be needed, or where the parameters specified in this document are used
            with a different semantic. In this case it is advisable to define a new QoS profile that
            may consist of new parameters in addition to parameters defined in this document or an
            entirely different set of parameters.</t>

         <t>To enable the definition of new QoS profiles a 8 octet registry is defined field that is
            represented by a 4-octet vendor and 4-octet specifier field. A QoS profile groups
            together a bunch of QoS parameters for usage in a specific environment. The vendor field
            indicates the type as either standards-specified or vendor-specific. If the four octets
            of the vendor field are 0x00000000, then the value is standards-specified and the
            registry is maintained by IANA, and any other value represents a vendor-specific Object
            Identifier (OID). IANA created registry is split into two value ranges; one range uses
            the "Standards Action" and the second range uses "Specification Required" allocation
            policy. The latter range is meant to be used by organizations outside the IETF.</t>
      </section>

      <!-- ====================================================================== -->

      <section title="IANA Considerations">
         <t> This section defines the registries and initial codepoint assignments, in accordance
            with BCP 26 RFC 2434 <xref target="RFC5226"/>. It also defines the procedural
            requirements to be followed by IANA in allocating new codepoints.</t>

         <t>IANA is requested to create the following registries listed in the subsections below.</t>

         <section title="QoS Profile">
            <t>The QoS Profile refers to a 64 bit long field that is represented by a 4-octet vendor
               and 4-octet specifier field. The vendor field indicates the type as either
               standards-specified or vendor-specific. If the four octets of the vendor field are
               0x00000000, then the value is standards-specified and the registry is maintained by
               IANA, and any other value represents a vendor-specific Object Identifier (OID). </t>
            <t>The specifier field indicates the actual QoS profile. The vendor field 0x00000000 is
               reserved to indicate that the values in the specifier field are maintained by IANA.
               This document requests IANA to create such a registry and to allocate the value zero
               (0) for the QoS profile defined in this document.</t>
            <t> For any other vendor field, the specifier field is maintained by the vendor. </t>
            <t>For the IANA maintained QoS profiles the following allocation policy is defined:<list
                  style="empty">
                  <t>1 to 511: Standards Action </t>
                  <t>512 to 4095: Specification Required</t>
               </list>
            </t>
            <t>Standards action is required to depreciate, delete, or modify existing QoS profile
               values in the range of 0-511 and a specification is required to depreciate, delete,
               or modify existing QoS profile values in the range of 512-4095.</t>
         </section>

         <section title="AVP Allocations">
            <t>This specification assigns the values TBD1 to TBD2 from the AVP Code namespace
               defined in <xref target="RFC3588"/>. See <xref target="attributes"/> for the
               assignment of the namespace in this specification. </t>
         </section>

         <section title="Excess-Treatment AVP">

            <t>The following values are allocated by this specification:<list style="empty">
                  <t> Excess Treatment Value 0: drop</t>
                  <t> Excess Treatment Value 1: shape</t>
                  <t> Excess Treatment Value 2: remark</t>
                  <t> Excess Treatment Value 3: no metering or policing is permitted</t>
                  <t> Excess Treatment Values 4-63: Standards Action</t>
                  <t> Excess Treatment Value 64-2^32-1: Reserved</t>
               </list>
            </t>
         </section>
         <section title="DSTE-Class-Type AVP">
            <t>The following values are allocated by this specification:<list style="empty">
                  <t> DSTE Class Type Value 0: DSTE Class Type 0</t>
                  <t> DSTE Class Type Value 1: DSTE Class Type 1</t>
                  <t> DSTE Class Type Value 2: DSTE Class Type 2</t>
                  <t> DSTE Class Type Value 3: DSTE Class Type 3</t>
                  <t> DSTE Class Type Value 4: DSTE Class Type 4</t>
                  <t> DSTE Class Type Value 5: DSTE Class Type 5</t>
                  <t> DSTE Class Type Value 6: DSTE Class Type 6</t>
                  <t> DSTE Class Type Value 7: DSTE Class Type 7</t>
                  <t> DSTE Class Type Values 8-63: Standards Action</t>
                  <t>DSTE Class Type Values 64-2^32-1: Reserved</t>
               </list>
            </t>
         </section>
         <section title="Y.1541-QoS-Class AVP">
            <t>The following values are allocated by this specification:<list style="empty">
                  <t>Y.1541 QoS Class Value 0: Y.1541 QoS Class 0</t>
                  <t> Y.1541 QoS Class Value 1: Y.1541 QoS Class 1</t>
                  <t> Y.1541 QoS Class Value 2: Y.1541 QoS Class 2</t>
                  <t> Y.1541 QoS Class Value 3: Y.1541 QoS Class 3</t>
                  <t> Y.1541 QoS Class Value 4: Y.1541 QoS Class 4</t>
                  <t> Y.1541 QoS Class Value 5: Y.1541 QoS Class 5</t>
                  <t> Y.1541 QoS Class Value 6: Y.1541 QoS Class 6</t>
                  <t> Y.1541 QoS Class Value 7: Y.1541 QoS Class 7</t>
                  <t> Y.1541 QoS Class Values 8-63: Standards Action</t>
                  <t> Y.1541 QoS Class Values 64-2^32-1: Reserved</t>
               </list>
            </t>
         </section>

         <t>The values in the ALRP-Namespace and ALRP-Priority AV{ inside the ALRP AVP take their
            values from the registry created by <xref target="RFC4412"/> and extended with <xref
               target="I-D.ietf-tsvwg-emergency-rsvp"/> No additional actions are required by IANA
            by this specification.</t>

      </section>

      <!-- ====================================================================== -->
      <section title="Security Considerations">
         <t>This document does not raise any security concerns as it only defines QoS
         parameters.</t>
      </section>
      <!-- ====================================================================== -->
      <section title="Acknowledgements">
         <t>The authors would like to thank the NSIS QSPEC <xref target="I-D.ietf-nsis-qspec"/>
            authors (Cornelia Kappler, Jerry Ash, Attila Bader, Dave Oran), the NSIS working group
            chairs (John Loughney and Martin Stiemerling) and the former Transport Area Directors
            (Allison Mankin, Jon Peterson) for their help. </t>
         <t>We would like to thank Francois Le Faucheur, John Loughney, Martin Stiemerling, Dave
            Oran, An Nguyen, Ken Carlberg, James Polk, Lars Eggert, and Magnus Westerlund for their
            help with resolving problems regarding the Admission Priority and the ALRP parameter.
         </t>
      </section>
      <!-- ====================================================================== -->
   </middle>
   <back>
      <references title="Normative References"> &RFC2119; &RFC2212; &RFC3393;
          &RFC4124; &RFC2210; &RFC2215; &RFC3181;
         &RFC4412;  &RFC3140; &RFC2474; &RFC2597; &RFC3588;
            <reference anchor="Y.1541">
            <front>
               <title>Network Performance Objectives for IP-Based Services</title>
               <author fullname="ITU-T Recommendation Y.1541" initials="" surname="">
                  <organization/>
                  <address>
                            <email/>
                        </address>
               </author>
               <date year="2006"/>
            </front>
            <seriesInfo name="" value=""/>
            <format type="" target=""/>
         </reference>
         <reference anchor="Y.1571">
            <front>
               <title>Admission Control Priority Levels in Next Generation Networks</title>
               <author fullname="ITU-T Recommendation Y.1571" initials="" surname="">
                  <organization/>
                  <address>
                            <email/>
                        </address>
               </author>
               <date month="July" year="2006"/>
            </front>
            <seriesInfo name="" value=""/>
            <format type="" target=""/>
         </reference> &I-D.ietf-tsvwg-emergency-rsvp; </references>

      <references title="Informative References"> &RFC3564;  &RFC2475; &RFC3290; &RFC5226; &I-D.ietf-nsis-qspec; <reference
            anchor="Y.1540">
            <front>
               <title>Internet Protocol Data Communication Service - IP Packet Transfer and
                  Availability Performance Parameters</title>
               <author fullname="ITU-T Recommendation Y.1540" initials="" surname="">
                  <organization/>
                  <address>
                            <email/>
                        </address>
               </author>
               <date year="2002" month="December"/>
            </front>
            <seriesInfo name="" value=""/>
            <format type="" target=""/>
         </reference>
      </references>
   </back>
</rfc>
