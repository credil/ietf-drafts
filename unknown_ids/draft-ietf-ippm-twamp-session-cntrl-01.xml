<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-ietf-ippm-twamp-session-cntrl-01"
     ipr="pre5378Trust200902">
  <front>
    <title abbrev="TWAMP Session Control">Individual Session Control Feature
    for TWAMP</title>

    <author fullname="Al Morton" initials="A." surname="Morton">
      <organization>AT&amp;T Labs</organization>

      <address>
        <postal>
          <street>200 Laurel Avenue South</street>

          <city>Middletown,</city>

          <region>NJ</region>

          <code>07748</code>

          <country>USA</country>
        </postal>

        <phone>+1 732 420 1571</phone>

        <facsimile>+1 732 368 1192</facsimile>

        <email>acmorton@att.com</email>

        <uri>http://home.comcast.net/~acmacm/</uri>
      </address>
    </author>

    <author fullname="Murtaza Chiba" initials="M." surname="Chiba">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>170 W. Tasman Drive</street>

          <city>San Jose</city>

          <region></region>

          <code>95134</code>

          <country>USA</country>
        </postal>

        <phone>+1 800 553 NETS</phone>

        <facsimile>+1</facsimile>

        <email>mchiba@cisco.com</email>

        <uri></uri>
      </address>
    </author>

    <date day="6" month="March" year="2009" />

    <abstract>
      <t>The IETF has completed its work on the core specification of TWAMP -
      the Two-Way Active Measurement Protocol. This memo describes a new
      feature for TWAMP, that gives the controlling host the ability to start
      and stop one or more individual test sessions using Session Identifiers.
      The base capability of the TWAMP protocol requires all test sessions
      previously requested and accepted to start and stop at the same
      time.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>The IETF has completed its work on the core specification of TWAMP -
      the Two-Way Active Measurement Protocol <xref target="RFC5357"></xref>.
      TWAMP is an extension of the One-way Active Measurement Protocol, OWAMP
      <xref target="RFC4656"></xref>. The TWAMP specification gathered wide
      review as it approached completion, and the by-products were several
      recommendations for new features in TWAMP. There are a growing number of
      TWAMP implementations at present, and wide-spread usage is expected.
      There are even devices that are designed to test implementations for
      protocol compliance.</t>

      <t>This memo describes a new feature for TWAMP. TWAMP (and OWAMP) start
      all previously requested and accepted test sessions at once. This
      feature allows the Control-Client to control individual test sessions on
      the basis of their Session Identifier (SID). This feature permits a
      short duration TWAMP test to start (and/or stop) during a longer test.
      This feature permits a specific diagnostic test to begin if intermediate
      results indicate that the test is warranted, for example.</t>

      <t>This feature requires a Mode bit position assignment and the
      assignment of two new TWAMP command numbers (for the augmented Start and
      Stop commands). This feature also specifies a new Stop-ACK Server
      response, to complete the symmetry of the session stopping process in
      the same way as the Start-ACK response.</t>

      <t>Implementers of this feature may also wish to implement the "Reflect
      Octets" feature, described in <xref
      target="I-D.ietf-ippm-twamp-reflect-octets"></xref>. This feature allows
      a Control-Client to insert a locally-specified request number into the
      Request-TW-Session command (in octets originally designated MBZ=Must Be
      Zero), and a compliant Server will return the request number in its
      reply (Accept message).</t>

      <t>This memo is intended to be an update to the TWAMP RFC.</t>

      <t>Throughout this memo, the bits marked MBZ (Must Be Zero) MUST be set
      to zero by senders and MUST be ignored by receivers.</t>
    </section>

    <section title="Purpose and Scope">
      <t>The purpose of this memo is to describe an additional function and
      feature for TWAMP <xref target="RFC5357"></xref>. The feature needs a
      clear description so it can be discussed and (hopefully) adopted in the
      IP Performance Metrics Charter.</t>

      <t>The scope of the memo is currently limited to specifications of the
      following features:</t>

      <t><list style="numbers">
          <t>Extension of the modes of operation through assignment of a new
          value in the Mode field to communicate feature capability and
          use,</t>

          <t>the definitions of augmented start session and stop session
          commands (with corresponding acknowledgements), and</t>

          <t>the definition of related procedures for TWAMP entities.</t>
        </list>The motivation for this feature is the ability to start and
      stop individual test sessions at will, using a single TWAMP-control
      connection.</t>
    </section>

    <section title="TWAMP Control Extensions">
      <t>TWAMP-Control protocol is a derivative of the OWAMP-Control protocol,
      and provides two-way measurement capability. TWAMP <xref
      target="RFC5357"></xref> uses the Modes Field to identify and select
      specific communication capabilities, and this field is a recognized
      extension mechanism. The following sections describe one such
      extension.</t>

      <section title="Connection Setup with Individual Session Control">
        <t>TWAMP-Control connection establishment follows the procedure
        defined in section 3.1 of <xref target="RFC4656"></xref> OWAMP. The
        Individual Session Control mode requires one new bit position (and
        value) to identify the ability of the Server/Session-Reflector to
        start and stop specific sessions (according to their Session
        Identifier, or SID). This new feature requires an additional TWAMP
        mode bit assignment as follows:</t>

        <t><figure>
            <preamble></preamble>

            <artwork><![CDATA[Value  Description             Reference/Explanation
0      Reserved
1      Unauthenticated         RFC4656, Section 3.1
2      Authenticated           RFC4656, Section 3.1
4      Encrypted               RFC4656, Section 3.1
8      Unauth. TEST protocol,  draft-...-more-twamp (3)
       Auth. CONTROL 
--------------------------------------------------------
zzz    Individual Session      this memo, bit position (Z)
       Control

]]></artwork>

            <postamble></postamble>
          </figure></t>

        <t>In the original OWAMP mode field, setting bit positions 0, 1 or 2
        indicated the security mode of the Control protocol, and the Test
        protocol inherited the same mode (see section 4 of <xref
        target="RFC4656"></xref>). In the <xref
        target="I-D.ietf-ippm-more-twamp"></xref> memo, bit position (3)
        allows a different security mode in the Test protocol and uses the
        unauthenticated test packet format.</t>

        <t>If the Server sets the new bit position (bit position Z) in the
        Server Greeting message to indicate its capabilities, then the Server
        and Session-Reflector MUST comply with the requirements of this memo
        to control sessions on an individual basis if desired.</t>

        <t>If the Control-Client intends to control sessions on an individual
        basis (according to the requirements in this memo), it MUST set the
        mode bit (Z, corresponding to the new mode) in the Setup Response
        message. This means that:<list style="numbers">
            <t>The Control-Client and the Server MUST use the start and stop
            commands intended for individual session control and the
            corresponding acknowledgements, as defined in the sections that
            follow.</t>

            <t>The Control-Client and the Server MUST NOT use the start and
            stop commands (2 and 3) and the acknowledgement defined in <xref
            target="RFC5357"></xref>.</t>
          </list></t>

        <t>The Control-Client MUST also set one mode bit to indicate the
        chosen security mode (currently bits 0, 1, 2, or 3), consistent with
        the modes offered by the Server. The Control-Client MAY also set Modes
        bit Z with other features and bit positions (such as the reflect
        octets feature).</t>

        <t>If the Control-Client has selected the Reflect Octets feature <xref
        target="I-D.ietf-ippm-twamp-reflect-octets"></xref> in combination
        with the Individual Session Control feature (after the Server
        identified its capability), AND utilizes the feature to insert a
        locally-specified request number in the Request-TW-Session command,
        THEN the Control Client MAY send more than one Request-TW-Session
        command to a given Server without waiting for the corresponding
        Accept-Session message. In such a case the Access-Session response
        reflects the locally-specified request number. Note that when the
        Reflect Octets feature is being used all Request-TW-Session command
        and Accept-Session responses MUST include the locally-specified
        request number.</t>
      </section>

      <section title="Start-N-Sessions Command with Individual Session Control">
        <t>Having</t>

        <t><list style="symbols">
            <t>initiated Individual Session Control mode in the Setup
            Response,</t>

            <t>requested one or more test sessions, and</t>

            <t>received affirmative Accept-Session response(s),</t>
          </list>a TWAMP Client MAY start the execution of one or more test
        sessions by sending a Start-N-Sessions message to the Server (note
        that "N" indicates that this command is applicable to one or more
        sessions, and does not change with the number of sessions identified
        in the command).</t>

        <t>The format of the Start-N-Sessions message is as follows:</t>

        <t><figure>
            <preamble></preamble>

            <artwork><![CDATA[ 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|      7        |                                               |
+-+-+-+-+-+-+-+-+                                               +
|                        MBZ (11 octets)                        |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     Number of Sessions                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|                                                               |
|                   First  SID (16 octets)                      |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|                                                               |
.                remaining  SIDs (16 octets each)               .
.                                                               .
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|                                                               |
|                       HMAC (16 octets)                        |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B]]></artwork>

            <postamble></postamble>
          </figure></t>

        <t>The Command Number value of 7 indicates that this is a
        Start-N-Sessions command. The Control-Client MUST compose this
        command, and the Server MUST interpret this command, according to the
        field descriptions below.</t>

        <t>The Number of Sessions field indicates the count of sessions that
        this Start command applies to, and must be one or greater. The number
        of SID fields that follow MUST be equal to the value in the Number of
        Sessions field (otherwise, the command MUST NOT be affirmed with a
        zero Accept field in the Start-N-Ack response).</t>

        <t>All SID fields are constructed as defined in the last paragraph of
        OWAMP section 3.5 <xref target="RFC4656"></xref> (and referenced in
        TWAMP). Note that the SID is assigned by the Server during the session
        request exchange.</t>

        <t>The message is terminated with a single block HMAC, as illustrated
        above.</t>

        <t>The Server MUST respond with one or more Start-N-Ack messages
        (which SHOULD be sent as quickly as possible). Start-N-Ack messages
        SHALL have the format defined in the next session.</t>

        <t>&lt;&lt;&lt;&lt;&lt; Comment: Al thinks we don't need the
        limitation below now, unless it refers to the EXISTING Start-Sessions
        command. The real question is, Do we require (MUST) the use of the -N-
        commands in Indiv.Sess.Cntrl mode, or allow both types??? I'm leaning
        toward -N- commands ONLY. &gt;&gt;&gt;&gt; The Control Client MUST NOT
        send a subsequent Start Sessions command until an outstanding message
        is acknowledged with a Start-Ack message.</t>

        <t>When using Individual Session Control mode and its Start-N-Ack
        command as described in the next section, multiple Start-N-Sessions
        commands MAY be sent without waiting for acknowledgement, and the
        Start-N-sessions commands MAY arrive in any order.</t>
      </section>

      <section title="Start-N-Ack Command with Individual Session Control">
        <t>The Server responds to the Start-N-Sessions command (for one or
        more specific sessions referenced by their SIDs) with one or more
        Start-N-Ack commands with Accept fields corresponding to one or more
        of the SIDs. This allows for the possibility that a Server cannot
        immediately start one or more the sessions referenced in a particular
        Start-N-Sessions command, but can start one or more of the
        sessions.</t>

        <t>The format of the message is as follows.</t>

        <t><figure>
            <preamble></preamble>

            <artwork><![CDATA[0                   1                   2                   3 
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|      8        |     Accept    |            MBZ                | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        MBZ (8 octets)                         | 
|                                                               | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
|                      Number of Sessions                       | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B 
|                                                               |
|                   First  SID (16 octets)                      |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|                                                               |
.                remaining  SIDs (16 octets each)               .
.                                                               .
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|                                                               | 
|                       HMAC (16 octets)                        | 
|                                                               | 
|                                                               | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>

            <postamble></postamble>
          </figure></t>

        <t>The Command Number value of 8 indicates that this is a Start-N-Ack
        message. The Server MUST compose this command, and the Control-Client
        MUST interpret this command, according to the field descriptions
        below.</t>

        <t>The Accept Field values are defined in OWAMP section 3.3 <xref
        target="RFC4656"></xref>.</t>

        <t>The Number of Sessions field indicates the count of sessions that
        this Start-N-Ack command applies to, and must be one or greater. The
        number of SID fields that follow MUST be equal to the value in the
        Number of Sessions field.</t>

        <t>All SID fields are constructed as defined in the last paragraph of
        OWAMP section 3.5 <xref target="RFC4656"></xref> (and referenced in
        TWAMP). Note that the SID is assigned by the Server during the session
        request exchange.</t>

        <t>The message is terminated with a single block HMAC, as illustrated
        above.</t>

        <t>Note that the SIDs for all Sessions with the same 'Accept' code can
        be acknowledged using the same Start-N-Ack message.</t>

        <t>For example, say that the Server receives a Start-N-Sessions
        command for SIDs 1, 2, 3, and 4. The Server determines that the
        resources for SID=3 are temporarily unavailable. The Server responds
        with two Start-N-Ack commands with fields as follows:</t>

        <t>Accept = 0 Number of Sessions = 3 SIDs 1, 2, 4</t>

        <t>Accept = 5 Number of Sessions = 1 SID 3</t>
      </section>

      <section title="Stop-N-Sessions Command with Individual Session Control">
        <t>The Stop-N-Sessions command can only be issued by the
        Control-Client. The command MUST contain at least one SID.</t>

        <t>The TWAMP Stop-N-Sessions command for use in Individual Session
        Control mode is formatted as follows:</t>

        <t><figure>
            <preamble></preamble>

            <artwork><![CDATA[ 0                   1                   2                   3 
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|      9        |                                               |
+-+-+-+-+-+-+-+-+                                               +
|                        MBZ (11 octets)                        |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     Number of Sessions                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B 
|                                                               |
|                   First  SID (16 octets)                      |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|                                                               |
.                remaining  SIDs (16 octets each)               .
.                                                               .
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|                                                               | 
|                       HMAC (16 octets)                        | 
|                                                               | 
|                                                               | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
]]></artwork>

            <postamble></postamble>
          </figure></t>

        <t>The Command Number value of 9 indicates that this is a
        Stop-N-Sessions command. The Control-Client MUST compose this command,
        and the Server MUST interpret this command, according to the field
        descriptions below.</t>

        <t>The Number of sessions field indicates the count of sessions that
        this Stop-N-Sessions command applies to. The SID is as defined in
        OWAMP (and TWAMP) section 3.5 <xref target="RFC4656"></xref> and the
        value must be one or greater. The number of SID fields that follow
        MUST be equal to the value in the Number of Sessions field.</t>

        <t>The message is terminated with a single block HMAC, as illustrated
        above.</t>

        <t>The Server MUST respond with one or more Stop-N-Ack messages (which
        SHOULD be sent as quickly as possible). Stop-N-Ack messages SHALL have
        the format defined in the next session.</t>
      </section>

      <section title="Stop-N-Ack Command with Individual Session Control">
        <t>In response to the Stop-N-Sessions command (for one or more
        specific sessions referenced by their SIDs), the Server MUST reply
        with one or more Stop-N-Ack commands with Accept fields corresponding
        to one or more of the SIDs. This allows for the possibility that a
        Server cannot immediately stop one or more the sessions referenced in
        a particular Stop-N-Sessions command, but can stop one or more of the
        sessions.</t>

        <t>The format for the Stop-N-Ack command is as follows:</t>

        <t><figure>
            <preamble></preamble>

            <artwork><![CDATA[0                   1                   2                   3 
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|      10       |     Accept    |            MBZ                | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        MBZ (8 octets)                         | 
|                                                               | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
|                      Number of Sessions                       | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B 
|                                                               |
|                   First  SID (16 octets)                      |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|                                                               |
.                remaining  SIDs (16 octets each)               .
.                                                               .
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+B
|                                                               | 
|                       HMAC (16 octets)                        | 
|                                                               | 
|                                                               | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>

            <postamble></postamble>
          </figure></t>

        <t>The Command Number value of 10 indicates that this is a Stop-N-Ack
        message. The Server MUST compose this command, and the Control-Client
        MUST interpret this command, according to the field descriptions
        below.</t>

        <t>The Accept Field values are defined in OWAMP section 3.3 <xref
        target="RFC4656"></xref>.</t>

        <t>The Number of Sessions field indicates the count of sessions that
        this Stop-N-Ack command applies to, and must be one or greater. The
        number of SID fields that follow MUST be equal to the value in the
        Number of Sessions field.</t>

        <t>All SID fields are constructed as defined in the last paragraph of
        OWAMP section 3.5 <xref target="RFC4656"></xref> (and referenced in
        TWAMP). Note that the SID is assigned by the Server during the session
        request exchange.</t>

        <t>The message is terminated with a single block HMAC, as illustrated
        above.</t>

        <t>Note that the SIDs for all Sessions with the same 'Accept' code can
        be acknowledged using the same Stop-N-Ack message.</t>
      </section>

      <section title="SERVWAIT Timeout Operation">
        <t>Section 3.1 of <xref target="RFC5357"></xref> describes the
        operation of the optional SERVWAIT timer. In normal TWAMP operation,
        the Server suspends monitoring the SERVWAIT timer while test sessions
        are in progress. When the Individual Session Control feature is
        utilized, this suspension is extended to cover the time when ANY test
        session is in progress.</t>

        <t>Thus, the Server SHALL suspend monitoring control connection
        activity after receiving any Start-N-Sessions command, and after
        receiving a Stop-N-Sessions command for all corresponding SIDs (and no
        test sessions are in-progress), OR when REFWAIT expires on ALL test
        sessions initiated by a TWAMP-Control connection, then the SERVWAIT
        monitoring SHALL resume (as though a Stop-N-Sessions command had been
        received). An implementation which supports the SERVWAIT timeout
        option SHOULD also implement the REFWAIT timeout option.</t>

        <t>The diagram below illustrates the operation of timers SERVWAIT and
        REFWAIT.</t>

        <t><figure>
            <preamble></preamble>

            <artwork><![CDATA[  SERVWAIT                   REFWAIT                  SERVWAIT
+-+-+-+-+-+-+-+-+                                   +-+-+-+-+-+-+
(no sessions
 in-progress)
                 +-+-+-+-+-+-+-+-+-+-+-+ 
                         SID="1"   
              
                                +-+-+-+-+
                                 SID="2" 

                                  +-+-+-+-+-+-+-+-+
                                        SID="3"

>>>>>>>>>> Time >>>>>>>>>>>>>>>>>>> Time >>>>>>>>>>>>>>>> Time >>>>>
]]></artwork>

            <postamble></postamble>
          </figure></t>
      </section>

      <section title="Additional considerations">
        <t>The value of the Modes field sent by the Server (in the Server
        Greeting message) is the bit-wise OR of the mode values that it is
        willing to support during this session.</t>

        <t>If this feature is adopted, the last ???? bits of the Modes 32-bit
        field are used. A Control-Client MAY ignore other bit positions
        greater than 2 in the Modes Field, or it MAY support other features
        that are communicated in these bit positions. (The unassigned bits are
        available for future protocol extensions.)</t>

        <t>Other ways in which TWAMP extends OWAMP are described in <xref
        target="RFC5357"></xref>.</t>
      </section>
    </section>

    <section title="TWAMP Test with Individual Session Control">
      <t>The TWAMP test protocol is similar to the OWAMP <xref
      target="RFC4656"></xref> test protocol with the exception that the
      Session-Reflector transmits test packets to the Session-Sender in
      response to each test packet it receives. TWAMP <xref
      target="RFC5357"></xref> defines two different test packet formats, one
      for packets transmitted by the Session-Sender and one for packets
      transmitted by the Session-Reflector. As with OWAMP-Test protocol there
      are three security modes: unauthenticated, authenticated, and encrypted.
      Unauthenticated mode has one test packet format, while authenticated and
      encrypted modes use another (common) format.</t>

      <section title="Sender Behavior">
        <t>The individual session control feature requires that the sender
        MUST manage test sessions according to their SID. Otherwise, the
        sender behavior is as described in section 4.1 of <xref
        target="RFC5357"></xref>.</t>
      </section>

      <section title="Reflector Behavior">
        <t>The TWAMP Reflector follows the procedures and guidelines in
        section 4.2 of <xref target="RFC5357"></xref>, with the following
        additional functions required by this feature:</t>

        <t><list style="symbols">
            <t>The Session-Reflector MUST manage all test sessions accepted
            according to their SID.</t>

            <t>Upon receipt of a TWAMP-Control Stop-N-Sessions command
            referencing a specific session/SID, the Session-Reflector MUST
            ignore TWAMP-Test packets (in the same session/SID) that arrive at
            the current time plus the Timeout (in the Request-TW-Session
            command and assuming subsequent acknowledgement). The
            Session-Reflector MUST NOT generate a test packet to the
            Session-Sender for packets that are ignored.</t>

            <t>If the RECOMMENDED REFWAIT timer is implemented, it SHOULD be
            enforced when any test session is in-progress (started and not
            stopped).</t>
          </list></t>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>The security considerations that apply to any active measurement of
      live networks are relevant here as well. See the security considerations
      in<xref target="RFC4656"></xref> and <xref target="RFC5357"></xref>.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo requests assignment of one mode bit position/value to the
      IANA registry for the TWAMP Mode field, and describes behavior when the
      new mode is used. This field is a recognized extension mechanism for
      TWAMP.</t>

      <t>This memo also requests assignment of four command numbers in the
      TWAMP-Control Command Number registry, and describes the use of the new
      commands. The command number field is a recognized extension mechanism
      for TWAMP.</t>

      <section title="Registry Specification">
        <t>IANA has created a TWAMP-Modes registry (as requested in <xref
        target="I-D.ietf-ippm-more-twamp"></xref>). TWAMP-Modes are specified
        in TWAMP Server Greeting messages and Set-up Response messages, as
        described in section 3.1 of <xref target="RFC5357"></xref>, consistent
        with section 3.1 of <xref target="RFC4656"></xref>, and extended by
        this memo. Modes are indicated by setting bits in the 32-bit Modes
        field. Thus, this registry can contain a total of 32 possible
        values.</t>

        <t>IANA has also created a TWAMP-Control Command Number registry.
        TWAMP-Control commands are specified by the first octet in
        TWAMP-Control messages as specified in section 3.5 of <xref
        target="RFC5357"></xref>, and augmented by this memo. This registry
        may contain 256 possible values.</t>
      </section>

      <section title="Registry Management">
        <t>Because the TWAMP-Control Command Number registry can contain only
        256 values and TWAMP-Modes can only contain thirty-two values, and
        because TWAMP is an IETF protocol, these registries must be updated
        only by "IETF Consensus" as specified in <xref
        target="RFC2434"></xref>(an RFC documenting registry use that is
        approved by the IESG). Management of these registries is described in
        section 8.2 of <xref target="RFC5357"></xref> and <xref
        target="I-D.ietf-ippm-more-twamp"></xref>.</t>

        <t>This memo proposes assignment of values 7, 8, 9 and 10 in the
        Command number Registry, and the next available bit position
        (indicated by "Z") and corresponding value (indicated by "zzz") in
        section 3.1 above. Note that these values should be replaced by IANA
        or the RFC Editor when assigned.</t>
      </section>

      <section title="Experimental Numbers">
        <t>One experimental value has been assigned in the TWAMP-Control
        Command Number registry.</t>

        <t>No additional experimental values are assigned in the TWAMP-Modes
        registry.</t>
      </section>

      <section title="Registry Contents">
        <t>TWAMP-Control Command Number Registry<figure>
            <preamble></preamble>

            <artwork><![CDATA[Value  Description             Semantics Definition 
 0      Reserved 
 1      Forbidden 
 2      Start-Sessions          RFC4656, Section 3.7 
 3      Stop-Sessions           RFC4656, Section 3.8 
 4      Reserved            
 5      Request-TW-Session      RFC5357, Section 3.5 
 6      Experimentation         RFC5357, Section 8.3
------------------------------------------------------------------
 7      Start-N-Sessions        this memo, Section 3.2 
 8      Start-N-Ack             this memo, Section 3.3
 9      Stop-N-Sessions         this memo, Section 3.4 
10      Stop-N-Ack              this memo, Section 3.5

]]></artwork>

            <postamble></postamble>
          </figure></t>

        <t>TWAMP-Modes Registry<figure>
            <preamble></preamble>

            <artwork><![CDATA[Value  Description             Reference/Explanation
0      Reserved
1      Unauthenticated         RFC4656, Section 3.1
2      Authenticated           RFC4656, Section 3.1
4      Encrypted               RFC4656, Section 3.1
8      Unauth. TEST protocol,  draft-...-more-twamp (3)
       Auth. CONTROL 
--------------------------------------------------------
zzz    Individual Session       this memo, Section 3.1
       Control                  bit position (Z)]]></artwork>

            <postamble></postamble>
          </figure></t>
      </section>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The author would like to thank anyone who provides valuable comments
      on this feature.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include='reference.RFC.4656'?>

      <?rfc include='reference.RFC.5357'?>

      <?rfc include='reference.RFC.2434'?>

      <?rfc include='reference.I-D.ietf-ippm-more-twamp'?>

      <?rfc include='reference.I-D.ietf-ippm-twamp-reflect-octets'?>

      <?rfc ?>

      <?rfc ?>
    </references>

    <references title="Informative References">
      <?rfc ?>

      <reference anchor="x">
        <front>
          <title></title>

          <author fullname="" surname="">
            <organization></organization>
          </author>

          <date month="" year="" />
        </front>
      </reference>
    </references>
  </back>
</rfc>