<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes" ?>
<rfc category="info" docName="draft-niccolini-sipclf-ipfix-02"
     ipr="trust200902">
  <front>
   <title abbrev="IPFIX for SIPCLF">
     Advantages of using an IPFIX File Format for SIPCLF
   </title>

   <author fullname="Saverio Niccolini" initials="S.." surname="Niccolini">
    <organization abbrev="NEC">
      NEC Laboratories Europe, NEC Europe Ltd.
    </organization>
      <address>
        <postal>
          <street>Kurfuersten-Anlage 36</street>
          <city>Heidelberg</city>
          <code>69115</code>
          <country>Germany</country>
        </postal>
        <phone>+49 (0) 6221 4342 118</phone>
        <email>niccolini@nw.neclab.eu</email>
        <uri>http://www.nw.neclab.eu</uri>
      </address>
    </author>
    <author fullname="Benoit Claise" initials="B." surname="Claise">
      <organization>Cisco Systems Inc.</organization>
      <address>
        <postal>
          <street>De Kleetlaan 6a b1</street>
          <city>Diegem</city>
          <region></region>
          <code>1813</code>
          <country>Belgium</country>
        </postal>
        <phone>+32 2 704 5622</phone>
        <facsimile></facsimile>
        <email>bclaise@cisco.com</email>
        <uri></uri>
      </address>
    </author>
    
    <author initials="B." surname="Trammell" fullname="Brian Trammell">
      <organization abbrev="Hitachi Europe">
        Hitachi Europe 
      </organization>
      <address>
        <postal>
          <street>c/o ETH Zurich</street>
          <street>Gloriastrasse 35</street>
          <city>8092 Zurich</city>
          <country>Switzerland</country>
        </postal>
        <phone>+41 44 632 70 13</phone>
        <email>brian.trammell@hitachi-eu.com</email>
      </address>
    </author>
    
    <author initials="H." surname="Kaplan" fullname="Hadriel Kaplan">
      <organization abbrev="ACME Packet">ACME Packet</organization>
      <address>
        <postal>
          <street>71 Third Ave.</street>
          <city>Burlington</city>
          <region>MA</region>
          <code>01803</code>
          <country>USA</country>
        </postal>
        <phone></phone>
        <email>hkaplan@acmepacket.com</email>
      </address>
    </author>

    <date month="April" year="2010" />

    <abstract>
      <t>
        The SIPCLF WG is currently trying to identify file format(s) suitable
        for its scope as defined in the current charter. The group
        has so far received proposals for a text format and an indexed-text 
        format that are going to be soon combined. Several people
        believe that IPFIX could be a valid alternative to these
        two proposals for several reasons detailed in this document.
      </t>
      <t>
        This document discusses the main advantages related to the 
        usage of IPFIX file format for SIPCLF. Additionally it 
        gives preliminary indications on the basic set of information 
        elements that would need to be defined by the SIPCLF WG.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
        The SIPCLF WG is chartered to produce a format suitable for 
        logging at any SIP element. The charter explicitly addresses the
        need to search, merge and summarize log records from one or 
        more possibly diverse elements as well as the need to correlate
        messages from multiple elements. An additional consideration
        to be taken into account when defining the file format is
        the extensibility of SIP.
        The SIPCLF WG is chartered to identify the fields to appear in
        a log record and provide one or more formats for encoding those 
        fields. Specifying the mechanics of exchanging, transporting, 
        and storing SIP Common Log Format records is explicitly out
        of scope.
      </t>
      <t>
        This document tries to detail why a file format based on IPFIX
        would make sense for SIPCLF, trying to highlight the main
        advantages correlated to it. The intention of the authors is
        to consider both the needs of finding an easy solution today, 
        as well as one that is also ready to accommodate future requirements 
        asily.
      </t>
    </section>

    <section anchor="why-IPFIX" title="Why IPFIX makes sense for SIPCLF">
      <t>
        These are the main advantages in favor of IPFIX:
        <list style="symbols">

          <t> The IPFIX Information Model. The primary advantage of IPFIX is
          that it already contains an Information Model, initially based on
          <xref target="RFC5102"></xref> and updated with IANA
          http://www.iana.org/assignments/ipfix/ipfix.xhtml. The PSAMP
          protocol <xref target="RFC5476"></xref> also uses the IPFIX protocol
          and therefore the same IANA IPFIX registry. Note that, referring to
          “On the Difference between Information Models and Data Models” <xref
          target="RFC3444"></xref>, one could argue whether the IANA IPFIX
          registry is an information model or a data model. </t>

          <t> IPFIX has a self-describing syntax model that allows the
          definition of a common set of "standard" fields to be recorded in
          the SIPCLF record. Specifically, a standard-defined IPFIX record
          template can be agreed upon and published, which contains the common
          SIP fields the group wishes to record. </t>

          <t> Both SIP extensibility and vendor-specific requirements (e.g.,
          vendor X want to record proprietary info A/B/C, vendor Y want to
          record D/E/F info) indicate that more will be needed on top of the
          "standard" subset (in addition to the fact that the "standard set"
          will undoubtedly grow over time, too). This will drive the need for
          a way to type-indicate that vendor-proprietary and future spec info
          in the file, which the IPFIX format already supports. </t>

          <t> There are a number of applicable tools that already parse IPFIX
          today from routers/data-boxes. The ability to reuse these tools for
          SIPCLF scopes would avoid re-inventing the wheel for SIP. </t>

          <t> The requirements that lead to the definition of a file format
          today will soon be augmented by additional requirements that lead to
          the definition of a protocol mechanism to export the log record to
          collectors, then filtering controls/config., etc., which IPFIX has
          already defined in the past. </t>

          <t> IPFIX supports both binary and ascii record field values. If, at
          some point in time, SIPCLF needs to support encoding the entire SIP
          Message, a binary-capable encoding is necessary since SIP Messages
          can contain binary bodies (e.g., ISUP, QSIG). </t>

          <t> IPFIX records support length encoding, thereby enabling a parser
          to skip past record fields or entire records without parsing their
          contents. </t>

        </list>

      </t>
      <t>
        These points suggest that, even if today file format has 
        potentially not much overlap with the IPFIX one now, there are 
        advantages in choosing IPFIX file format from the beginning
        of SIPCLF design. This solution will allow quicker adoption
        in the beginning (thanks to the tools parsing IPFIX that 
        are already available and can be reused right away) and
        avoid sub-optimality (e.g., proxy translating formats 
        between each other) in the future.
      </t>
    
      <section anchor="future" title="Thinking about the future">
        <t>
          Thinking about the future (even if the charter doesn’t address 
          these points), there are high chances that:

          <list style="symbols">

            <t> The SIPCLF file format will have to include information
            elements that are already defined in the IANA IPFIX registry,
            combining SIP related information elements with flow related
            information elements. For example, simply an IP address (refer to
            <xref target="IPFIX-example"></xref>). </t>

            <t> The SIPCLF file format will have to include proprietary
            information elements, as multiple vendors will have to distinguish
            from each other. IPFIX offers the ability to have proprietary
            information elements, called Enterprise-Specific Information
            Elements in <xref target="RFC5101"></xref>. In the future, </t>

            <t> In the future, the information contained the SIPCLF file
            format will have to be transferred (pushed or pulled) in order to
            do some correlation. While a file can transferred with any
            protocol, such as FTP, TFTP, RCP, etc., using the IPFIX protocols
            offers some advantages: for example, a push mechanism and a single
            collection protocol for the performance management product,
            avoiding additional costly correlation tools for the integration
            of IPFIX information elements with SIPCLF file format. When the
            charter mentions “Furthermore, these log records can also be used
            to train anomaly detection systems and feed events into a security
            event management system.”, most tools in the market depend one way
            or the other on NetFlow version 9 <xref target="RFC3954"></xref>,
            which is the basis protocol for IPFIX. </t>

          </list>
        </t>
      </section>
      
    </section>

    <section anchor="IPFIX-file" title="IPFIX File Format">
      <t>
        A draft on using IPFIX for SIPCLF does not need to completely
        detail a file format - the "file format" is already defined
        in <xref target="RFC5655"></xref> and the SIPCLF one would
        be based on that. The advantage of this file format is that
        it was already designed to facilitate interoperability and 
        reusability among a wide variety of storage, processing, and
        analysis tools.
      </t>
    </section>

    <section anchor="IM-IE" title="Information Model and Information Elements for SIPCLF">
      <t>
        As defined in <xref target="RFC3444"></xref> the main purpose of
        an Information Model is to model managed objects at a conceptual
        level, independent of any specific implementations or protocols 
        used to transport the data.
      </t>
      <t>
        This draft does not yet attempt to formally define information 
        elements for SIPCLF. Below you can find initial reasoning about 
        the "standard set" needed for logging SIP events.
      </t>
      <t>
        Main information for SIPCLF log record is largely already
        defined in other documents, e.g., in <xref target="RFC3261"></xref>.
      </t>
      <t>
        There are fundamentally two options depending on how detailed 
        the information elements needs to be.
        The first possible option is to keep the information elements 
        coarse grained, e.g., for each SIP message that is logged, a 
        Status-Line or Request-Line, an ordered list of pairs of where 
        each pair has a header-name and a header-value, and finally 
        zero or one message-bodies. Additional information could be
        about where the message was coming from and going to from the 
        transport layer as well as a timestamp.
        The second option is to have fine grained definition of information
        elements, e.g., defining SIP to and from tags as elements themselves
        (the list could be extended to include Call-Id, CSeq, Max-Forwards,
        Via, Contact, etc.). This draft does not favor one option or
        another as they both have pros and cons; the authors just want
        to point out that the definition of such information elements
        is going to be quite straightforward once the SIPCLF WG has
        agreed on the level of detail and complexity that SIPCLF log record
        requires (an example of these fields is available here 
        <xref target="I-D.gurbani-sipclf-problem-statement"></xref>.
      </t>
      <t>
        The authors wish to point out that there have been already attempts
        to define IPFIX information elements for when using IPFIX for SIP 
        previously. This has been discussed already in the IPFIX WG based
        on an expired draft (draft-huici-ipfix-sipfix-00), the  paper that 
        was linked with that draft is referenced here <xref target="IM.sipfix"></xref>. 
        This solution clearly goes beyond what is the current chartered 
        scope of SIPCLF WG but it is an useful reference with concrete 
        examples on how the information elements that could be defined
        (excluding the information elements for the media plane that are
        out of scope for the SIPCLF WG).
      </t>
    </section>

    <section anchor="IPFIX-example" title="IPFIX file format for SIPCLF: an example visualized">

      <t>This section is meant to give a short example of how an IPFIX file
      format would look like in the case of SIPCLF in order to increase
      understanding of what IPFIX would mean for SIPCLF. The SIPCLF fields
      used for defining the information elements (IEs) are meant for example
      purposes only and are taken from available references of the SIPCLF WG
      <xref target="I-D.gurbani-sipclf-problem-statement"></xref>.</t>

      <t>The information elements used by this example are shown in the table
      below; new Information Elements necessary for SIPCLF that are not yet
      registered with IANA are provisionally located within the number space
      assigned to  Private 
      Enterprise Number (PEN) (here registered within the private enterprise
      number 35566, which is controlled by one of the authors of the draft).</t>

      <texttable> 
        <ttcol align="left">Name</ttcol> 
        <ttcol align="left">PEN/Number</ttcol> 
        <ttcol align="left">Type</ttcol>
        <ttcol align="left">Description</ttcol>

        <c>observationTimeSeconds</c><c>322</c><c>dateTimeSeconds</c>
        <c>Log timestamp in seconds since the UNIX epoch.</c>

        <c>sourceIPv4Address</c><c>8</c><c>ipv4Address</c>
        <c>IPv4 address of the upstream client.</c>

        <c>sourceIPv6Address</c><c>27</c><c>ipv6Address</c>
        <c>IPv6 address of the upstream client.</c>

        <c>sipAuthUsername</c><c>35566/401</c><c>string</c>
        <c>The user name by which the user has been authenticated.</c>

        <c>sipMethod</c><c>35566/402</c><c>unsigned8 (identifier)</c>
        <c>A code representing the SIP method, taken from the IPFIX sipMethod registry, to be created.</c>

        <c>sipRequestURI</c><c>35566/403</c><c>string</c>
        <c>The Request URI, including any parameters.</c>

        <c>sipFromURI</c><c>35566/404</c><c>string</c>
        <c>The From URI.</c>

        <c>sipFromTag</c><c>35566/405</c><c>string</c>
        <c>The From tag.</c>

        <c>sipToURI</c><c>35566/406</c><c>string</c>
        <c>The To URI.</c>

        <c>sipFromTag</c><c>35566/407</c><c>string</c>
        <c>The To tag.</c>

        <c>sipCallId</c><c>35566/408</c><c>string</c>
        <c>The SIP Call-ID header field value.</c>

        <c>sipResponseStatus</c><c>35566/409</c><c>unsigned16</c>
        <c>The SIP response code returned upstream</c>

        <c>sipServerTransaction</c><c>35566/410</c><c>string</c>
        <c>The transaction identifier associated with the server transaction.</c>

        <c>sipClientTransaction</c><c>35566/411</c><c>string</c>
        <c>The transaction identifier associated with the server transaction.</c>
        </texttable>

<t>Note: the current example does not include a L4 port number.</t>

<!-- Not appropriate. This tool is unreleased, and there is no reference as yet
to this simple template schema -->

<t>The information model in a form to be parsed by a tool processing
the IPFIX/SIPCLF would look like the following (in squared brackets you
can see the number of bytes for the field):</t>

      <figure title="Information Model" anchor="sipclf-fim">
        <artwork><![CDATA[
sipAuthUsername(35566/401)<string>[65535]
sipMethod(35566/402)<unsigned8>[1]
sipRequestURI(35566/403)<string>[65535]
sipFromURI(35566/404)<string>[65535]
sipFromTag(35566/405)<string>[65535]
sipToURI(35566/406)<string>[65535]
sipToTag(35566/407)<string>[65535]
sipCallId(35566/408)<string>[65535]
sipResponseStatus(35566/409)<unsigned16>[2]
sipServerTransaction(35566/410)<string>[65535]
sipClientTransaction(35566/411)<string>[65535]
        ]]></artwork>
      </figure>

<t>A request record is then described by the following template:</t>

      <texttable> 
        <ttcol align="left">Name</ttcol> 
        <ttcol align="left">PEN/Number</ttcol> 
        <ttcol align="left">Len</ttcol>
        <ttcol align="left">Present?</ttcol>

        <c>observationTimeSeconds</c><c>322</c><c>4</c><c>always</c>

        <c>sourceIPv4Address</c><c>8</c><c>4</c><c>v4 only</c>

        <c>sourceIPv6Address</c><c>27</c><c>16</c><c>v6 only</c>

        <c>sipMethod</c><c>35566/402</c><c>1</c><c>always</c>

        <c>sipAuthUsername</c><c>35566/401</c><c>variable</c><c>if authenticated</c>

        <c>sipRequestURI</c><c>35566/403</c><c>variable</c><c>always</c>

        <c>sipFromURI</c><c>35566/404</c><c>variable</c><c>always</c>

        <c>sipFromTag</c><c>35566/405</c><c>variable</c><c>always</c>

        <c>sipToURI</c><c>35566/406</c><c>variable</c><c>always</c>

        <c>sipCallId</c><c>35566/408</c><c>variable</c><c>always</c>
        
        <c>sipServerTransaction</c><c>35566/410</c> 
        <c>variable</c><c>always</c>

        <c>sipClientTransaction</c><c>35566/411</c>
        <c>variable</c><c>always</c>
    </texttable>

<t>and a response record by the following template:</t>

      <texttable> 
        <ttcol align="left">Name</ttcol> 
        <ttcol align="left">Num</ttcol> 
        <ttcol align="left">Len</ttcol>

        <c>observationTimeSeconds</c><c>322</c><c>4</c>

        <c>sipMethod</c><c>35566/402</c><c>1</c>

        <c>sipResponseStatus</c><c>35566/409</c><c>1</c>

        <c>sipServerTransaction</c><c>35566/410</c><c>variable</c>

        <c>sipClientTransaction</c><c>35566/411</c><c>variable</c>

        <c>sipToURI</c><c>35566/406</c><c>variable</c>

        <c>sipToTag</c><c>35566/407</c><c>variable</c>

      </texttable>

<t>A SIPCLF IPFIX file then consists of an IPFIX Message containing the
template definitions above, followed by multiple IPFIX Messages containing the
records in Data Sets corresponding to those template definitions, as in the
figure below:</t>

      <figure title="File Example Structure" anchor="ex-structure">
        <artwork><![CDATA[
          +=================================================+
          | IPFIX Message                       seq. 0      |
          | +---------------------------------------------+ |
          | | Message Header (16 bytes)                   | |
          | +---------------------------------------------+ |
          | | Template Set (ID 2)                  5 recs | |
          | |   SIPCLF IPv4 request tmpl          ID 256  | |
          | |   SIPCLF IPv4 auth request tmpl     ID 257  | |
          | |   SIPCLF IPv6 request tmpl          ID 258  | |
          | |   SIPCLF IPv6 auth request tmpl     ID 259  | |
          | |   SIPCLF response tmpl              ID 260  | |
          | +---------------------------------------------+ |
          +=================================================+
          | IPFIX Message                       seq. 0      |
          | +---------------------------------------------+ |
          | | Message Header (16 bytes)                   | |
          | +---------------------------------------------+ |
          | | Data Set (ID 256)                    1 rec  | |
          | |  contains an unauthenticated IPv4 request   | |
          | +---------------------------------------------+ |
          | | Data Set (ID 260)                    1 rec  | |
          | |  contains a response                        | |
          | +---------------------------------------------+ |
          | | Data Set (ID 259)                    2 recs | |
          | |  contains authenticated IPv6 requests       | |
          | +---------------------------------------------+ |
          | | Data Set (ID 260)                    1 rec  | |
          | |  contains a response                        | |
          | +---------------------------------------------+ |
          +=================================================+
          | IPFIX Message                       seq. 5      |
          |                    . . .                        |
        ]]></artwork>
      </figure>

<t>Within each data set is one or more records, packed and encoded according
to the template. Fixed length fields appear in place without additional
framing or length prefixing. Variable length fields use length prefixing.
Values 0-254 bytes long can be represented using a single-byte length prefix,
0x00 - 0xFE. Values 0-65516 bytes long can be represented using a three-byte
length prefix, 0xFF followed by the length in network byte order. All SIPCLF
variable-length fields are strings, and all IPFIX strings are encoded using
UTF8.</t>

<t>[Note that the placement of data set and message boundaries are implementation
dependent; some implementations may group and emit records by template, some
may have only one record per data set or data set per message. If SIPCLF
requires strict ordering of records by time, this can be specified, but is not
mandatory IPFIX or IPFIX File behavior.]</t>

      <section anchor="tool" title="A tool producing an IPFIX file format for SIPCLF">

        <t>This section describes visually how the input for the tool (that
        was written by one of the authors of this draft, and will shortly see
        open-source release) that produces an IPFIX file format for SIPCLF
        would look like and what would its binary output be. For this purpose
        we took examples from <xref target="RFC3665"></xref>.</t>

        <t><xref target="IPFIX-example"></xref> showed the compact definition
        of the information model that the tool producing the IPFIX file format
        for SIPCLF uses (see <xref target="sipclf-fim"></xref>.</t>

        <t>The additional input to the tool is shown in <xref
        target="sipclf-in"></xref>; it includes two templates (one for a
        request and one for a response) and two examples of records (one for a
        request, one for a response). Both record examples were extracted by
        messages included in Section 3.1 of <xref
        target="RFC3665"></xref>.</t>

        <figure title="Input file" anchor="sipclf-in">
        <artwork><![CDATA[
       template(1234)
       observationTimeSeconds
       sourceIPv4Address
       sipMethod
       sipAuthUsername
       sipRequestURI
       sipFromURI
       sipFromTag
       sipToURI
       sipCallId
       sipServerTransaction
       sipClientTransaction
          
       template(4321)
       observationTimeSeconds
       sourceIPv4Address
       sipResponseStatus
       sipServerTransaction
       sipClientTransaction
       sipToURI
       sipToTag
          
       _ipfix_tid: 1234
       observationTimeSeconds: 2010-04-01 01:10:12 +0000
       sourceIPv4Address: 192.168.0.1
       sipMethod: 1
       sipAuthUsername: bob
       sipRequestURI: sip:bob@biloxi.example.com
       sipFromURI: Alice <sip:alice@atlanta.example.com>
       sipFromTag: 9fxced76sl
       sipToURI: Bob <sip:bob@biloxi.example.com>
       sipCallId: 3848276298220188511@atlanta.example.com
       sipServerTransaction: 123
       sipClientTransaction: ABC
          
       _ipfix_tid: 4321
       observationTimeSeconds: 2010-04-01 01:10:14 +0000
       sourceIPv4Address: 192.168.0.2
       sipResponseStatus: 180
       sipServerTransaction: 123
       sipClientTransaction: ABC
       sipToURI: Bob <sip:bob@biloxi.example.com>
       sipToTag: 8321234356
        ]]></artwork>
      </figure>
      
      <t>The binary output (IPFIX file) of the tool is reported in <xref target="sipclf-base64"></xref>
      (base-64 encoded).</t>
      
      <figure title="Output file (base64 encoded)" anchor="sipclf-base64">
        <artwork><![CDATA[
AAoBjEvEHxUAAAAAAArJ/gACAIwE0gALAUIABAAIAASBkgABAACK7oGR//8A
AIrugZP//wAAiu6BlP//AACK7oGV//8AAIrugZb//wAAiu6BmP//AACK7oGa
//8AAIrugZv//wAAiu4Q4QAHAUIABAAIAASBmQACAACK7oGa//8AAIrugZv/
/wAAiu6Blv//AACK7oGX//8AAIruBNIArkuz8nTAqAABAQNib2Iac2lwOmJv
YkBiaWxveGkuZXhhbXBsZS5jb20lQWxpY2UgPHNpcDphbGljZUBhdGxhbnRh
LmV4YW1wbGUuY29tPgo5ZnhjZWQ3NnNsIEJvYiA8c2lwOmJvYkBiaWxveGku
ZXhhbXBsZS5jb20+JzM4NDgyNzYyOTgyMjAxODg1MTFAYXRsYW50YS5leGFt
cGxlLmNvbQMxMjMDQUJDEOEAQkuz8nbAqAACALQDMTIzA0FCQyBCb2IgPHNp
cDpib2JAYmlsb3hpLmV4YW1wbGUuY29tPgo4MzIxMjM0MzU2
        ]]></artwork>
      </figure>
      
      <t><xref target="sipclf-out"></xref> shows a debug dump, which is meant to illustrate the information 
      that would be available at an IPFIX/SIPCLF collector.</t>
      
      <figure title="Dump file" anchor="sipclf-out">
        <artwork><![CDATA[
----- template 707070/1234 -----
observationTimeSeconds(322)<dateTimeSeconds>[4]
sourceIPv4Address(8)<ipv4Address>[4]
sipMethod(35566/402)<unsigned8>[1]
sipAuthUsername(35566/401)<string>[65535]
sipRequestURI(35566/403)<string>[65535]
sipFromURI(35566/404)<string>[65535]
sipFromTag(35566/405)<string>[65535]
sipToURI(35566/406)<string>[65535]
sipCallId(35566/408)<string>[65535]
sipServerTransaction(35566/410)<string>[65535]
sipClientTransaction(35566/411)<string>[65535]
----- template 707070/4321 -----
observationTimeSeconds(322)<dateTimeSeconds>[4]
sourceIPv4Address(8)<ipv4Address>[4]
sipResponseStatus(35566/409)<unsigned16>[2]
sipServerTransaction(35566/410)<string>[65535]
sipClientTransaction(35566/411)<string>[65535]
sipToURI(35566/406)<string>[65535]
sipToTag(35566/407)<string>[65535]
----- record 707070/1234 -----
observationTimeSeconds => 2010-04-01 03:10:12 +0200
sourceIPv4Address => 192.168.0.1
sipMethod => 1
sipAuthUsername => bob
sipRequestURI => sip:bob@biloxi.example.com
sipFromURI => Alice <sip:alice@atlanta.example.com>
sipFromTag => 9fxced76sl
sipToURI => Bob <sip:bob@biloxi.example.com>
sipCallId => 3848276298220188511@atlanta.example.com
sipServerTransaction => 123
sipClientTransaction => ABC
----- record 707070/4321 -----
observationTimeSeconds => 2010-04-01 03:10:14 +0200
sourceIPv4Address => 192.168.0.2
sipResponseStatus => 180
sipServerTransaction => 123
sipClientTransaction => ABC
sipToURI => Bob <sip:bob@biloxi.example.com>
sipToTag => 8321234356
        ]]></artwork>
      </figure>
        
      </section>
      
    </section>
    
    <section anchor="summary" title="Summary">
      <t>
        Quoted from Dave Harrington on the mailing list: “IPFIX already provides
        a protocol and a data modeling language. In addition, <xref target="RFC5655"></xref>
        specifies a file format for storing data that has been received in the ipfix file format.
        The IPFIX File format is designed to facilitate interoperability and reusability among 
        a wide variety of flow storage, processing, and analysis tools.”, let us ask the question
        differently: why would we have yet another data modeling language? 
      </t>
    </section>

    <section title="Security Considerations">
      <t>
        To be worked out.
      </t>
    </section>

    <section title="IANA Considerations">
      <t>
        None.
      </t>
    </section>

    <section title="Acknowledgments">
      <t>
        Cullen Jennings and many others provided insightful
        discussions, specific comments and much needed corrections.
        Nico d'Heureuse helped with the RFC 3665 examples.
      </t>
    </section>
    
    <section title="Future improvements of the draft">
      <t>
        Improvements are still needed in this draft in order to better highlight the synergies between SIP and IPFIX.
        Additionally authors are planning to further work on:
        <list style="symbols">
          <t>an example showing how to store a whole bunch of records to highlight the low overhead of the chosen approach;</t>
          <t>an example showing translation to the apache-like format;</t>
          <t>an analysis of space efficiency</t>
          <t>adding references to the actual tool used which will be released soon</t>
        </list>
      </t>
    </section>
  </middle>

  <back>
    <references title="Informative References">
    
    <?rfc include="reference.I-D.gurbani-sipclf-problem-statement" ?>
    <?rfc include="reference.RFC.3665" ?>
    <?rfc include="reference.RFC.3954" ?>
    <?rfc include="reference.RFC.5101" ?>
    <?rfc include="reference.RFC.5102" ?>
    <?rfc include="reference.RFC.5476" ?>
    
    <reference anchor="RFC3261">
        <front>
          <title>
            SIP: Session Initiation Protocol
          </title>

          <author fullname="J. Rosenberg" initials="J." surname="Rosenberg">
            <organization>dynamicsoft</organization>
          </author>

          <author fullname="H. Schulzrinne" initials="H." surname="Schulzrinne">
            <organization>Columbia University</organization>
          </author>
          
          <author fullname="G. Camarillo" initials="G." surname="Camarillo">
            <organization>Ericsson</organization>
          </author>

          <author fullname="A. Johnston" initials="A." surname="Johnston">
            <organization>WorldCom</organization>
          </author>

          <author fullname="J. Peterson" initials="J." surname="Peterson">
            <organization>Neustar</organization>
          </author>

          <author fullname="R. Sparks" initials="R." surname="Sparks">
            <organization>dynamicsoft</organization>
          </author>

          <author fullname="M. Handley" initials="M." surname="Handley">
            <organization>ICIR</organization>
          </author>

          <author fullname="E. Schooler" initials="E." surname="Schooler">
            <organization>AT&T</organization>
          </author>

          <date month="June" year="2002" />

          <abstract>
            <t>This document describes Session Initiation Protocol (SIP), an
            application-layer control (signaling) protocol for creating,
            modifying, and terminating sessions with one or more participants.
            These sessions include Internet telephone calls, multimedia
            distribution, and multimedia conferences.
            SIP invitations used to create sessions carry session descriptions
            that allow participants to agree on a set of compatible media types.
            SIP makes use of elements called proxy servers to help route requests
            to the user's current location, authenticate and authorize users for
            services, implement provider call-routing policies, and provide
            features to users.  SIP also provides a registration function that
            allows users to upload their current locations for use by proxy
            servers.  SIP runs on top of several different transport protocols.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3261" />

        <format octets="147175"
                target="ftp://ftp.isi.edu/in-notes/rfc3261.txt" type="TXT" />
      </reference>
      
      <reference anchor="RFC3444">
        <front>
          <title>
            On the Difference between Information Models and Data Models
          </title>

          <author fullname="A. Pras" initials="A." surname="Pras">
            <organization>University of Twente</organization>
          </author>

          <author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder">
            <organization>University of Osnabrueck</organization>
          </author>

          <date month="January" year="2003" />

          <abstract>
            <t>There has been ongoing confusion about the differences between
            Information Models and Data Models for defining managed objects in
            network management.  This document explains the differences between
            these terms by analyzing how existing network management model
            specifications (from the IETF and other bodies such as the
            International Telecommunication Union (ITU) or the Distributed
            Management Task Force (DMTF)) fit into the universe of Information
            Models and Data Models.
            This memo documents the main results of the 8th workshop of the
            Network Management Research Group (NMRG) of the Internet Research
            Task Force (IRTF) hosted by the University of Texas at Austin.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3444" />

        <format octets="147175"
                target="ftp://ftp.isi.edu/in-notes/rfc3444.txt" type="TXT" />
      </reference>
      
      <reference anchor="RFC5655">
        <front>
          <title>
            Specification of the IP Flow Information Export (IPFIX) File Format
          </title>

          <author fullname="B. Trammell" initials="B." surname="Trammel">
            <organization>Hitachi Europe</organization>
          </author>

          <author fullname="E. Boschi" initials="E." surname="Boschi">
            <organization>Hitachi Europe</organization>
          </author>

          <author fullname="L. Mark" initials="L." surname="Mark">
            <organization>Fraunhofer IFAM</organization>
          </author>

          <author fullname="T. Zseby" initials="T." surname="Zseby">
            <organization>Fraunhofer FOKUS</organization>
          </author>

          <author fullname="A. Wagner" initials="A." surname="Wagner">
            <organization>ETH Zurich</organization>
          </author>

          <date month="October" year="2009" />

          <abstract>
            <t>This document describes a file format for the storage of flow 
            data based upon the IP Flow Information Export (IPFIX) protocol.
            It proposes a set of requirements for flat-file, binary flow data 
            file formats, then specifies the IPFIX File format to meet these
            requirements based upon IPFIX Messages.  This IPFIX File format is
            designed to facilitate interoperability and reusability among a wide
            variety of flow storage, processing, and analysis tools.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="5655" />

        <format octets="147175"
                target="ftp://ftp.isi.edu/in-notes/rfc5655.txt" type="TXT" />
      </reference>
      
      <reference anchor="IM.sipfix">
        <front>
          <title>
            SIPFIX: A Scheme For Distributed SIP Monitoring
          </title>

          <author fullname="S. Anderson" initials="S." surname="Anderson">
            <organization>University of Goettingen</organization>
          </author>

          <author fullname="S. Niccolini" initials="S." surname="Niccolini">
            <organization>NEC Laboratories Europe, NEC Europe Ltd.</organization>
          </author>

          <author fullname="D. Hogrefe" initials="D." surname="Hogrefe">
            <organization>University of Goettingen</organization>
          </author>
        </front>
        
        <seriesInfo name="" value="Proceedings of IEEE IM 2009, June 2009" />
      </reference>

    </references>
  </back>
</rfc>




