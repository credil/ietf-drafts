<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc strict="yes"?>
<?rfc symrefs="yes"?>
<?rfc linkmailto="no"?>
<rfc category="exp" ipr="full3978" docName="draft-ietf-eai-dsn-02.txt"
     updates="3461,3464,3798">
<front>
<title abbrev="International Message Notifications">
 International Delivery and Disposition Notifications
</title>
<?rfc include="author.cnewman"?>
<author initials="A." surname="Melnikov" fullname="Alexey Melnikov" role="editor">
	<organization>Isode Ltd</organization>
	<address>
		<postal>
			<street>5 Castle Business Village</street>
			<street>36 Station Road</street>
			<city>Hampton</city>
			<region>Middlesex</region>
			<code>TW12 2BX</code>
			<country>UK</country>
		</postal>
		<email>Alexey.Melnikov@isode.com</email>
	</address>
</author>
<date year="2007" />
<area>Applications</area>
<keyword>I-D</keyword>
<keyword>Internet-Draft</keyword>
<keyword>EAI</keyword>
<keyword>DSN</keyword>
<abstract><t>
Delivery status notifications (DSNs) are critical to the correct
operation of an email system.  However, the existing draft standard is
presently limited to US-ASCII text in the machine readable portions of
the protocol.  This specification adds a new address type for
international email addresses so an original recipient address with
non-US-ASCII characters can be correctly preserved even after
downgrading.  This also provides updated content return media types for
delivery status notifications and message disposition notifications to
support use of the new address type.
</t>

<t>
This document experimentally extends RFC 3461, RFC 3464 and RFC 3798.
</t></abstract>
</front>
<middle>
<section title="Introduction">
<t>When an email message is transmitted using the <xref target='I-D.ietf-eai-smtpext'>UTF8SMTP</xref> extension and <xref target='I-D.ietf-eai-utf8headers'>Internationalized Email Headers</xref>, it is sometimes necessary to return that message or generate a <xref target="RFC3798">Message Disposition Notification</xref> (MDN).  As a message sent to multiple recipients can generate a status and disposition notification for each recipient, it is helpful if a client can correlate these returns based on the recipient address it provided, thus preservation of the original recipient is important.  This specification describes how to preserve the original recipient and updates the MDN and DSN formats to support the new address types.</t>
</section>

<section title="Conventions Used in this Document">
<t>The key words "MUST", "MUST NOT", "SHOULD", "SHOULD NOT", and "MAY"
in this document are to be interpreted as defined in
<xref target="RFC2119">"Key words for use in RFCs to Indicate
Requirement Levels"</xref>.</t>

<t>The formal syntax use the <xref target="RFC4234">Augmented
Backus-Naur Form (ABNF)</xref> notation including the core rules
defined in Appendix B of RFC 4234 and the rules in section 4 of RFC 3629.</t>
</section>

<section title="UTF-8 Address Type" anchor="utf8addr">
<t><xref target="RFC3464">An Extensible Message Format for Delivery Status Notifications</xref> defines the concept of an address type.  The address format introduced in <xref target="I-D.ietf-eai-utf8headers">Internationalized Email Headers</xref> is a new address type.  The syntax for the new address type in the context of status notifications follows:</t>
<t>An <xref target='RFC2821'>SMTP</xref> server which advertises both the <xref target='I-D.ietf-eai-smtpext'>UTF8SMTP extension</xref> and the <xref target='RFC3461'>DSN extension</xref> MUST accept a utf-8 address type in the ORCPT parameter including 8-bit UTF-8 characters.  This address type also includes a 7-bit encoding suitable for use in a message/delivery-status body part or an ORCPT parameter sent to an SMTP server which does not advertise UTF8SMTP.</t>

<t>This address type has 3 forms:
utf-8-addr-xtext, utf-8-addr-unitext and utf-8-address. The first 2 forms are
7-bit safe.
</t>

<t>The utf-8-address form is only suitable for use in newly defined protocols
capable of native representation of 8-bit characters. I.e. the utf-8-address
form MUST NOT be used in the ORCPT parameter when the SMTP
server doesn't advertise support for UTF8SMTP or the SMTP server supports
UTF8SMTP, but the address contains US-ASCII characters not permitted in
the ORCPT parameter (e.g. the ORCPT parameter forbids SP and =); or in a
7-bit transport environment including a message/delivery-status
Original-Recipient or Final-Recipient field.
The utf-8-addr-xtext form (see below) MUST be used instead in the former case,
the utf-8-addr-unitext form MUST be used in the latter case.

The utf-8-address form MAY be used in the ORCPT parameter when the SMTP
server also advertises support for UTF8SMTP and the address doesn't contains
any US-ASCII characters not permitted in the ORCPT parameter. It SHOULD be used
in a message/utf-8-delivery-status Original-Recipient or Final-Recipient
DSN field; or in an <xref target="RFC3798">Original-Recipient header field</xref>
if the message is a UTF-8 header message.
<cref>Is 'UTF-8 header message' clear enough?</cref>
</t>

<t>In addition, the utf-8-addr-unitext form can be used anywhere where
the utf-8-address form is allowed.</t>

<t>When using in the ORCPT parameter, the utf-8 address type requires that
US-ASCII CTLs, SP, \, + and = be encoded using xtext encoding as described
in <xref target='RFC3461'/>. This is described by the utf-8-addr-xtext form
in the ABNF below.
Unicode characters MAY be included in a utf-8 address type using a
"\x{HEXPOINT}" syntax, where HEXPOINT is 2 to 6 hexadecimal digits.
When sending data to a UTF8SMTP capable server, native
UTF-8 characters SHOULD be used instead of the QMIDCHAR and QHIGHCHAR
encodings described below.  When sending data to an SMTP server which
does not advertise UTF8SMTP, then the QMIDCHAR and QHIGHCHAR
encodings MUST be used instead of UTF-8.</t>

<t>When the ORCPT parameter is placed in a message/utf-8-delivery-status
Original-Recipient field, the utf-8-addr-xtext form of the utf-8 address type SHOULD be
converted to the 'utf-8-address' form (see the ABNF below) by removing
all xtext encoding first (which will result in the 'utf-8-addr-unitext' form),
followed by removal of the 'unitext' encoding.
<cref>Might need more details to explain what unitext encoding is.</cref>
However, if an address is labeled with the utf-8 address type but
does not conform to utf-8 syntax, then it MUST be copied into the
message/utf-8-delivery-status field without alteration.</t>

<t>The ability to encode characters with the EmbeddedUnicodeChar
encodings should be viewed as a transitional mechanism.  It is hoped
that as systems lacking support for UTF8SMTP become less common over
time, these encodings can eventually be phased out.</t>
	
<figure><artwork type="ABNF">
utf-8-type-addr     = "utf-8;" utf-8-enc-addr

utf-8-address       = uMailbox [ *WSP "&lt;" Mailbox "&gt;" ]
  ; 'uMailbox' is defined in [I-D.ietf-eai-smtpext].
  ; 'Mailbox' is defined in [RFC2821].

utf-8-enc-addr      = utf-8-addr-xtext /
                      utf-8-addr-unitext /
                      utf-8-address

///Add comment about which where each type is used

utf-8-addr-xtext    = xtext
                  ; xtext is defined in [RFC3461].
                  ; When xtext encoding is removed,
                  ; the syntax MUST conform to
                  ; 'utf-8-addr-unitext'.

utf-8-addr-unitext  = 1*(QUCHAR / EmbeddedUnicodeChar)
                    ; MUST follow 'utf-8-address' ABNF when
                    ; dequoted

QUCHAR              = %x21-2a / %x2c-3c / %x3e-5b / %x5d-7e /
                      UTF8-2 / UTF8-3 / UTF8-4
                    ; Printable except CTLs, SP, '\', '+' and '='

EmbeddedUnicodeChar =   %x5C.78 "{" HEXPOINT "}"
                    ; starts with "\x"
					
HEXPOINT = "5C" / (HEXDIG8 HEXDIG) /    ; 2 digit forms
           ( NZHEXDIG 2(HEXDIG) ) /     ; 3 digit forms		   
           ( NZDHEXDIG 3(HEXDIG) ) /
           ( "D" %x30-37 2(HEXDIG) ) / 
                    ; 4 digit forms excluding surrogate
           ( NZHEXDIG 4(HEXDIG) ) /     ; 5 digit forms
		   ( "10" 4*HEXDIG )            ; 6 digit forms
           ; represents either "\" or a Unicode code point outside the
           ; US-ASCII repertoire

HEXDIG8             = %x38-39 / "A" / "B" / "C" / "D" / "E" / "F"
                    ; HEXDIG excluding 0-7
NZHEXDIG            = %x31-39 / "A" / "B" / "C" / "D" / "E" / "F"
                    ; HEXDIG excluding "0"
NZDHEXDIG           = %x31-39 / "A" / "B" / "C" / "E" / "F"
                    ; HEXDIG excluding "0" and "D"
</artwork></figure>

</section>

<section title="UTF-8 Delivery Status Notifications" anchor="eai-dsn-format">
<t>A traditional <xref target="RFC3464">delivery status notification</xref> comes in a three-part <xref target="RFC3462">multipart/report</xref> container, where the first part is human readable text describing the error, the second part is a 7-bit-only message/delivery-status and the optional third part is used for content (message/rfc822) or header (text/rfc822-headers) return.  An SMTP server which advertises both UTF8SMTP and DSN SHOULD return an undeliverable UTF8SMTP message without downgrading it (assuming the return SMTP server supports UTF8SMTP).  As the present DSN format does not permit this, three new media types are needed.</t>

<t>The first type, message/utf-8-delivery-status has the syntax of
message/delivery-status with three modifications.  First, the charset
for message/utf-8-delivery-status is UTF-8 and thus any field MAY
contain UTF-8 characters when appropriate (see the ABNF below).
In particular, the Diagnostic-Code field MAY contain UTF-8 as described in
<xref target='I-D.ietf-eai-smtpext'>UTF8SMTP</xref>;
the Diagnostic-Code field SHOULD be in i-default language <xref target='LANGTAGS'/>.
Second, systems generating a message/utf-8-delivery-status
body part SHOULD use the utf-8-address form of the utf-8 address type for
all addresses containing characters outside the US-ASCII repertoire.
These systems SHOULD up-convert the utf-8-addr-xtext or the utf-8-addr-unitext
form of a utf-8 address type in the ORCPT parameter to the utf-8-address form
of a utf-8 address type in the Original-Recipient field.
Third, a new optional field called Localized-Diagnostic is added.
Each instance includes a language tag <xref target='LANGTAGS'/> and contains text in the
specified language. This is equivalent to the text part of the Diagnostic-Code
field. All instances of Localized-Diagnostic MUST use different language tags.
The ABNF for message/utf-8-delivery-status is specified below:
</t>

<figure><artwork type="ABNF">
utf-8-delivery-status-content = per-message-fields
                      1*( CRLF utf-8-per-recipient-fields )
     ; "per-message-fields" remains unchanged from the definition
	 ; in RFC 3464, except for the "extension-field"
	 ; which is updated below.

 utf-8-per-recipient-fields =
      [ original-recipient-field CRLF ]
      final-recipient-field CRLF
      action-field CRLF
      status-field CRLF
      [ remote-mta-field CRLF ]
      [ diagnostic-code-field CRLF
        *(localized-diagnostic-text-field CRLF) ]
      [ last-attempt-date-field CRLF ]
      [ will-retry-until-field CRLF ]
      *( extension-field CRLF )
  ; All fields except for "original-recipient-field",
  ; "final-recipient-field", "diagnostic-code-field"
  ; and "extension-field" remain unchanged from
  ; the definition in RFC 3464.

generic-address =/ utf-8-enc-addr
  ; Only allowed with the "utf-8" address-type.
  ; 
  ; This indirectly updates "original-recipient-field"
  ; and "final-recipient-field"

diagnostic-code-field =
     "Diagnostic-Code" ":" diagnostic-type ";" *text
	  
localized-diagnostic-text-field =
     "Localized-Diagnostic" ":" Language-Tag ";" *utf8-text
  ; "Language-Tag" is a language tag as defined in [LANGTAGS].

extension-field =/ extension-field-name ":" *utf8-text

utf8-text = %d1-9 /      ; Any Unicode character except for NUL,
            %d11 /       ; CR and LF, encoded in UTF-8
            %d12 /
            %d14-127 /
            UTFMB

UTFMB   = UTF2 / UTF3 / UTF4
</artwork></figure>

<t>The second type, used for content return, is message/utf-8 which is similar to message/rfc822,
except it contains a message with UTF-8 headers.  This media type is described in <xref target="I-D.ietf-eai-utf8headers"/>.</t>

<t>The third type, used for header return, is message/utf-8-headers and contains only the UTF-8 headers of a message (all lines prior to the first blank line in a UTF8SMTP message).  Unlike message/utf-8, this body part provides no difficulties for present infrastructure.</t>
<t>All three new types will typically use the "8bit" Content-Transfer-Encoding (in the event all content is 7-bit, the equivalent traditional types for delivery status notifications are advised for greater backwards compatibility).  While <xref target="RFC2046">MIME</xref> advises against the use of 8-bit in new message subtypes intended for the email infrastructure, that advice does not apply to these new types which are intended primarily for use by newer systems with full support for 8-bit MIME and UTF-8 headers.</t>
</section>

<section title="UTF-8 Message Disposition Notifications">
	
<!--cref:
failure-field, error-field and warning-field can be localized in the future.
I don't feel brave enough to do this now :-).
-->
<t><xref target="RFC3798">Message Disposition Notifications</xref> have a similar design
and structure to DSNs.  As a result, they use the same basic return format.
When generating a MDN for a UTF-8 header message, content or header return
is the same as for DSNs.  The second part of the multipart/report uses a new media type,
message/utf-8-disposition-notification, which has the syntax of
message/disposition-notification with two modifications.  First, the charset
for message/utf-8-disposition-notification is UTF-8 and thus any field MAY
contain UTF-8 characters when appropriate (see the ABNF below).
(In particular, the failure-field, the error-field and the warning-field
MAY contain UTF-8. These fields SHOULD be in i-default language <xref target='LANGTAGS'/>.)
Second, systems generating a message/utf-8-disposition-notification
body part (typically a mail user agent) SHOULD use the utf-8 address type
for all addresses containing characters outside the US-ASCII repertoire.
</t>
	
<t>The MDN specification also defines the Original-Recipient header field
which is added with a copy of the contents of ORCPT at delivery time.
When generating an Original-Recipient header field, a delivery agent
writing a UTF-8 header message in native format SHOULD convert the
utf-8-addr-xtext or the utf-8-addr-unitext form of a utf-8 address type
in the ORCPT parameter to the corresponding utf-8-address form.</t>

<t>The MDN specification also defines the Disposition-Notification-To header which is an address header and thus follows the same 8-bit rules as other address headers such as "From" and "To" when used in a UTF-8 header message.</t>

<figure><artwork type="ABNF">	
  ; ABNF for "original-recipient-header", "original-recipient-field"
  ; and "final-recipient-field" from RFC 3798 is implicitly updated
  ; as they use the updated "generic-address" as defined in
  ; section 4 of this document.

failure-field = "Failure" ":" *utf8-text
  ; "utf8-text" is defined in section 4 of this document.

error-field = "Error" ":" *utf8-text
  ; "utf8-text" is defined in section 4 of this document.

warning-field = "Warning" ":" *utf8-text
  ; "utf8-text" is defined in section 4 of this document.
</artwork></figure>

</section>

<?rfc needLines="10"?>
<section title="IANA Considerations">
<t>This specification does not create any new IANA registries.  However the following items are registered as a result of this document:</t>
<section title="UTF-8 Mail Address Type Registration">
<t>The mail address type registry was created by RFC 3464.  The registration template response follows:</t>
<t>(a) The proposed address-type name.</t>
<t>UTF-8</t>
<t>(b) The syntax for mailbox addresses of this type, specified using BNF, regular expressions, ASN.1, or other non-ambiguous language.</t>
<t>See <xref target="utf8addr" />.</t>
	
<t>(c) If addresses of this type are not composed entirely of graphic characters from the US-ASCII repertoire, a specification for how they are to be encoded as graphic US-ASCII characters in a DSN Original-Recipient or Final-Recipient DSN field.</t>

<t>This address type has 3 forms (as defined in <xref target="utf8addr"/>):
utf-8-addr-xtext, utf-8-addr-unitext and utf-8-address. The first 2 forms are
7-bit safe.
</t>

<t>
The utf-8-address form MUST NOT be used in the ORCPT parameter when the SMTP
server doesn't advertise support for UTF8SMTP or the SMTP server supports
UTF8SMTP, but the address contains US-ASCII characters not permitted in
the ORCPT parameter (e.g. the ORCPT parameter forbids SP and =); or in a
7-bit transport environment including a message/delivery-status
Original-Recipient or Final-Recipient field.
The utf-8-addr-xtext form MUST be used instead in the former case,
the utf-8-addr-unitext form MUST be used in the latter case.

The utf-8-address form MAY be used in the ORCPT parameter when the SMTP
server also advertises support for UTF8SMTP and the address doesn't contains
any US-ASCII characters not permitted in the ORCPT parameter; in a
message/utf-8-delivery-status Original-Recipient or Final-Recipient
DSN field; or an <xref target="RFC3798">Original-Recipient header field</xref>
if the message is a UTF-8 header message.
<cref>Is 'UTF-8 header message' clear enough?</cref>
</t>

<t>In addition, the utf-8-addr-unitext form can be used anywhere where
the utf-8-address form is allowed.</t>

</section>
<section title="Update to 'smtp' Diagnostic Type Registration">
<t>The mail diagnostic type registry was created by RFC 3464.  The registration for the 'smtp' diagnostic type should be updated to reference RFC &rfc.number; in addition to RFC 3464.</t>
<t>When the 'smtp' diagnostic type is used in the context of a message/delivery-status body part, it remains as presently defined.  When the 'smtp' diagnostic type is used in the context of a message/utf-8-delivery-status body part, the codes remain the same, but the text portion MAY contain UTF-8 characters.</t>
</section>
<section title="message/utf-8-headers">
<t><list style="hanging">
<t hangText="Type name:">message</t>
<t hangText="Subtype name:">utf-8-headers</t>
<t hangText="Required parameters:">none</t>
<t hangText="Optional parameters:">none</t>
<t hangText="Encoding considerations:">This media type contains <xref target="I-D.ietf-eai-utf8headers">Internationalized Email Headers</xref> with no message body.  Whenever possible, the 8-bit content transfer encoding SHOULD be used.  When this media type passes through a 7-bit-only SMTP infrastructure it MAY be encoded with the base64 or quoted-printable content transfer encoding.</t>
<t hangText="Security considerations:">See <xref target="seccons" /></t>
<t hangText="Interoperability considerations:">It is important this media type is not converted to a charset other than UTF-8.  As a result, implementations MUST NOT include a charset parameter with this media type.  Although it might be possible to downconvert this media type to the text/rfc822-header media type, such conversion is discouraged as it loses information.</t>
<t hangText="Published specification:">RFC &rfc.number;</t>
<t hangText="Applications that use this media type:">UTF8SMTP servers and email clients that support multipart/report generation or parsing.</t>
<t hangText="Additional information:"></t>
<t hangText="Magic number(s):">none</t>
<t hangText="File extension(s):">In the event this is saved to a file, the extension ".u8hdr" is suggested.</t>
<t hangText="Macintosh file type code(s):">The 'TEXT' type code is suggested as files of this type are typically used for diagnostic purposes and suitable for analysis in a UTF-8 aware text editor.  A uniform type identifier (UTI) of "public.utf8-email-message-header" is suggested.  This type conforms to "public.utf8-plain-text" and "public.plain-text".</t>
<t hangText="Person &amp; email address to contact for further information:">See the Author's address section of this document.</t>
<t hangText="Intended usage:">COMMON</t>
<t hangText="Restrictions on usage:">This media type contains textual data in the UTF-8 charset.  It typically contains octets with the 8th bit set.  As a result a transfer encoding is required when a 7-bit transport is used.</t>
<t hangText="Author:">See Author's Address section of this document.</t>
<t hangText="Change controller:">IETF Standards Process</t>
</list></t>
</section>
<section title="message/utf-8-delivery-status">
<t><list style="hanging">
<t hangText="Type name:">message</t>
<t hangText="Subtype name:">utf-8-delivery-status</t>
<t hangText="Required parameters:">none</t>
<t hangText="Optional parameters:">none</t>
<t hangText="Encoding considerations:">This media type contains delivery status notification attributes in the UTF-8 charset.  The 8-bit content transfer encoding MUST be used with this content-type, unless it is sent over a 7-bit transport environment in which case quoted-printable or base64 may be necessary.</t>
<t hangText="Security considerations:">See <xref target="seccons" /></t>
<t hangText="Interoperability considerations:">This media type provides functionality similar to the message/delivery-status content type for email message return information.  Clients of the previous format will need to be upgraded to interpret the new format, however the new media type makes it simple to identify the difference.</t>
<t hangText="Published specification:">RFC &rfc.number;</t>
<t hangText="Applications that use this media type:">SMTP servers and email clients that support delivery status notification generation or parsing.</t>
<t hangText="Additional information:"></t>
<t hangText="Magic number(s):">none</t>
<t hangText="File extension(s):">The extension ".u8dsn" is suggested.</t>
<t hangText="Macintosh file type code(s):">A uniform type identifier (UTI) of "public.utf8-email-message-delivery-status" is suggested.  This type conforms to "public.utf8-plain-text".</t>
<t hangText="Person &amp; email address to contact for further information:">See the Author's address section of this document.</t>
<t hangText="Intended usage:">COMMON</t>
<t hangText="Restrictions on usage:">This is expected to be the second part of a multipart/report.</t>
<t hangText="Author:">See Author's Address section of this document.</t>
<t hangText="Change controller:">IETF Standards Process</t>
</list></t>
</section>
<section title="message/utf-8-disposition-notification">
<t><list style="hanging">
<t hangText="Type name:">message</t>
<t hangText="Subtype name:">utf-8-disposition-notification</t>
<t hangText="Required parameters:">none</t>
<t hangText="Optional parameters:">none</t>
<t hangText="Encoding considerations:">This media type contains disposition notification attributes in the UTF-8 charset.  The 8-bit content transfer encoding MUST be used with this content-type, unless it is sent over a 7-bit transport environment in which case quoted-printable or base64 may be necessary.</t>
<t hangText="Security considerations:">See <xref target="seccons" /></t>
<t hangText="Interoperability considerations:">This media type provides functionality similar to the message/disposition-notification content type for email message disposition information.  Clients of the previous format will need to be upgraded to interpret the new format, however the new media type makes it simple to identify the difference.</t>
<t hangText="Published specification:">RFC &rfc.number;</t>
<t hangText="Applications that use this media type:">Email clients or servers that support message disposition notification generation or parsing.</t>
<t hangText="Additional information:"></t>
<t hangText="Magic number(s):">none</t>
<t hangText="File extension(s):">The extension ".u8mdn" is suggested.</t>
<t hangText="Macintosh file type code(s):">A uniform type identifier (UTI) of "public.utf8-email-message-disposition-notification" is suggested.  This type conforms to "public.utf8-plain-text".</t>
<t hangText="Person &amp; email address to contact for further information:">See the Author's address section of this document.</t>
<t hangText="Intended usage:">COMMON</t>
<t hangText="Restrictions on usage:">This is expected to be the second part of a multipart/report.</t>
<t hangText="Author:">See Author's Address section of this document.</t>
<t hangText="Change controller:">IETF Standards Process</t>
</list></t>
</section>
</section>

<section title="Security Considerations" anchor="seccons">
<t>Automated use of report types without authentication presents several security issues.  Forging negative reports presents the opportunity for denial-of-service attacks when the reports are used for automated maintenance of directories or mailing lists.  Forging positive reports may cause the sender to incorrectly believe a message was delivered when it was not.</t>
<t>Malicious users can generate report structures designed to trigger coding flaws in report parsers.  Report parsers need to use secure coding techniques to avoid the risk of buffer overflow or denial-of-service attacks against parser coding mistakes.  Code reviews of such parsers are also recommended.</t> 
<t>Malicious users of the email system regularly send messages with forged envelope return paths and these messages trigger delivery status reports that result in a large amount of unwanted traffic on the Internet.  Many users choose to ignore delivery status notifications because they are usually the result of "blowback" from forged messages and thus never notice when messages they sent go undelivered.  As a result, support for correlation of delivery status and message disposition notification messages with sent-messages has become a critical feature of mail clients and possibly mail stores if the email infrastructure is to remain reliable.  In the short term, simply correlating message-IDs may be sufficient to distinguish true status notifications from those resulting from forged originator addresses.  But in the longer term, including cryptographic signature material that can securely associate the status notification with the original message is advisable.</t>
<t>As this specification permits UTF-8 in additional fields, the security considerations of <xref target="RFC3629">UTF-8</xref> apply.</t>
</section>

</middle>
<back>
<references title="Normative References">
<?rfc include="reference.RFC.2119"?> <!-- Keywords -->
<?rfc include="reference.RFC.2821"?> <!-- SMTP -->
<?rfc include="reference.RFC.3461"?> <!-- SMTP DSN -->
<?rfc include="reference.RFC.3462"?> <!-- multipart/report -->
<?rfc include="reference.RFC.3464"?> <!-- DSN format -->
<?rfc include="reference.RFC.3629"?> <!-- UTF-8 -->
<?rfc include="reference.RFC.3798"?> <!-- MDN format -->
<?rfc include="reference.RFC.4234"?> <!-- ABNF -->
<reference anchor='I-D.ietf-eai-utf8headers'>
 <front>
  <title>Internationalized Email Headers</title>
  <author initials='A.' surname='Yang' fullname='Abel Yang'>
   <organization>TWNIC</organization>
  </author>
  <date month='April' day='26' year='2007'/>
 </front>
 <seriesInfo name='Internet-Draft' value='draft-ietf-eai-utf8headers-05' />
 <format type='TXT' target='http://www.ietf.org/internet-drafts/draft-ietf-eai-utf8headers-05.txt' />
</reference>
<reference anchor='I-D.ietf-eai-smtpext'>
 <front>
  <title>SMTP extension for internationalized email address</title>
  <author initials='J' surname='Yao' fullname='Jiankang YAO'>
   <organization>CNNIC</organization>
  </author>
  <author initials='W' surname='Mao' fullname='Wei MAO'>
   <organization>CNNIC</organization>
  </author>
  <date month='April' day='9' year='2007' />
 </front>
 <seriesInfo name='Internet-Draft' value='draft-ietf-eai-smtpext-05' />
 <format type='TXT' target='http://www.ietf.org/internet-drafts/draft-ietf-eai-smtpext-05.txt' />
</reference>
<reference anchor='I-D.ietf-eai-downgrade'>
 <front>
  <title>Downgrading mechanism for Email Address Internationalization (EAI)</title>
  <author initials='Y' surname='Yoneya' fullname='Yoshiro Yoneya'>
    <organization>JPRS</organization>
  </author>
  <author initials='K' surname='Fujiwara' fullname='Kazunori Fujiwara'>
    <organization>JPRS</organization>
  </author>
  <date month='Mar' day='5' year='2007' />
 </front>

 <seriesInfo name='Internet-Draft' value='draft-ietf-eai-downgrade-03'/>
 <format type='TXT' target='http://www.ietf.org/internet-drafts/draft-ietf-eai-downgrade-03.txt'/>
</reference>
<reference anchor="LANGTAGS">
	<front>
	  <title>Tags for Identifying Languages</title>
	  <author initials="A." surname="Phillips" fullname="A. Phillips">
		<organization/>
	  </author>
	  <author initials="M." surname="Davis" fullname="M. Davis">
		<organization/>
	  </author>
	  <date month="September" year="2006" />
	</front>
	<seriesInfo name="RFC" value="4646" />
</reference>

</references>
<references title="Informative References">
<?rfc include="reference.RFC.2045"?> <!-- MIME bodies -->
<?rfc include="reference.RFC.2046"?> <!-- MIME types -->
<?rfc include="reference.RFC.3501"?> <!-- Binary SMTP -->
</references>
<section title="Acknowledgements">
<t>Many thanks for input provided by Pete Resnick, James Galvin, Ned Freed, John Klensin and members of the EAI WG to help solidify this proposal.</t>
</section>
<section title="Open Issues">
<t>Suggestion to change the utf-8-addr format from \-encoded Unicode to \-encoded UTF-8 as used in URIs.</t>
<t>Use a single syntax for I18N addresses in ORCPT/DSN instead of two (Chris)</t>
<t>Potential issue: an SMTP server can't deliver an EAI DSN to the next hop - need to use a 7bit encoding, downgrade or discard? Need to describe choices.</t>
<t>Tracker issue #1485: UTF8HDR 4.6/DSN: Choice of body part for transport of UTF8SMTP messages</t>
<t>Tracker issue #1483: SMTPEXT 2.7: Non-ASCII in response texts</t>
</section>
<section title="Changes from -01">
<t>Cleaned up and tightened ABNF, in particular HEXPOINT.</t>
<t>Extended DSN report syntax to allow for localized version of diagnostic-code-field.</t>
<t>Added ABNF for the EAI DSN and EAI MDN.</t>
</section>
<section title="Changes from -00">
<t>Added paragraph about use of 8bit Content-Transfer-Encoding for new message sub-types.</t>
<t>Updated the list of open issues.</t>
<t>Clarified that this document is targeted to become an Experimental RFC.</t>
<t>Made the EAI downgrade document a normative reference.</t>
<!--t>Added explanation of why using base64/quoted-printable on message/utf-8 should be Ok as per RFC 2046.</t-->
<!--t>Clarify that EAI downconversion is an alternative to base64/quoted-printable encoding of message/utf-8.</t-->
<t>Updated ABNF for utf-8-address.</t>
</section>
</back>
</rfc>
