<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY RFC3279 SYSTEM
"bibxml/reference.RFC.3279.xml"
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.3279.xml"
>
  <!ENTITY RFC3370 SYSTEM
"bibxml/reference.RFC.3370.xml">
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.3370.xml">
  <!ENTITY RFC3851 SYSTEM
"bibxml/reference.RFC.3851.xml">
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.3851.xml">
  <!ENTITY RFC4055 SYSTEM
"bibxml/reference.RFC.4055.xml">
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.4055.xml">
  <!ENTITY RFC4262 SYSTEM
"bibxml/reference.RFC.4262.xml">
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.4262.xml">
  <!ENTITY RFC5912 SYSTEM
"bibxml/reference.RFC.5912.xml">
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5912.xml">
  <!ENTITY ID-OCSP-Agility SYSTEM
"bibxml3/reference.I-D.draft-ietf-pkix-ocspagility-08.xml"
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-pkix-ocspagility.xml">

  <!ENTITY ASN-2008 SYSTEM "ForDraft/pubkeys-2008.incl">
  <!ENTITY RSA-PUBKEY SYSTEM "ForDraft/pubkeys-rsa.incl">
  <!ENTITY PUBKEY-RSA-OAEP SYSTEM "ForDraft/pubkeys-rsa-oaep.incl">
  <!ENTITY PUBKEY-RSA-PSS SYSTEM "ForDraft/pubkeys-rsa-pss.incl">
  <!ENTITY PUBKEY-DSA SYSTEM "ForDraft/pubkeys-dsa.incl">
  <!ENTITY PUBKEY-ECC SYSTEM "ForDraft/pubkeys-ecc.incl">
  <!ENTITY PUBKEY-SIG-RSA-PSS SYSTEM "ForDraft/pubkeys-sig-rsa-pss.incl">
]>

<?rfc strict="yes"?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<rfc category="info" docName="draft-ietf-pkix-pubkey-caps-00"
ipr="trust200902">
  <front>
    <title abbrev="PubKey Caps">S/MIME Capabilities for Public Key
Definitions</title>
    <author fullname="Jim Schaad" initials="J." surname="Schaad">
      <organization>Soaring Hawk Consulting</organization>
      <address>
        <email>jimsch@augustcellars.com</email>
      </address>
    </author>
    <date/>

    <abstract>
      <t>
        This document defines a set of S/MIME Capability types for ASN.1
        encoding for the current set of public keys define in the PKIX
        working group.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>In the process of dealing with the OCSP agility issues in <xref
target="I-D.ietf-pkix-ocspagility"/> it was noted that we really wanted to
describe some information to be used in selecting a public key, but we did
not currently have any way of doing so at the current time.  This document
fills that hole by defining a set of S/MIME Capability types for a small set
of public key representations. </t>
      <section title="Notation">
        <t>The main body of the text is written using snippets of ASN.1 that
are extracted from the ASN.1 2008 module in <xref target="ASN.2008"/>.  This
is because I am a strong advocate of moving the current versions of ASN.1 as
they can contain meta-data which is not representable in the 1988 version of
ASN.1.  In keeping with the current policy of the PKIX working group, the
1988 module is still to be considered the normative module in the event of a
conflict between the contents of the two modules.</t>
        <t>When reading this document, it is assumed that you will have a
degree of familiarity with tthe basic object module that is presented in
section 3 of RFC 5912 (<xref target="RFC5912"/>).  We use the SMIME-CAPS
object in this document, it assoicates two fields together in a single
object.
<figure><artwork>
SMIME-CAPS ::= CLASS {
    &id         OBJECT IDENTIFIER UNIQUE,
    &Type       OPTIONAL
}
WITH SYNTAX { [TYPE &Type] IDENTIFIED BY &id }
</artwork></figure>

  These fields are:
          <list style="hanging">
            <t hangText="&amp;id"> contains an object identifier.  When
placed in an objet set, this element is tagged so that no two elements can
be placed in the set that have the same value in the &amp;id field.</t>
            <t hangText="&amp;Type"> optionally contains an ASN.1 type
identifier.  If the field &amp;Type is not defined then the optional
parameters field of the AlgorithmIdentifier type would be omitted.</t>
          </list>
        </t>
        <t>The class also has a specialized syntax for how to define an
object in this class.  The all upper case fields TYPE IDENTIFIER and BY are
syntaxtic sugar to make it easier to read and identify what pieces are
manditory and which are optional.</t>
        <t>One of the things that can be done is to reference the fields of
an object while defining other objects.  This means that if an object call
foo has a field name &amp;value, the same value can be directly referenced
as foo.&amp;value.  This means that we would automatically get any updates
to values or types and we do not need to do any replication of the data.</t>
      </section>
    </section>

    <section title="RSA Public Keys">
      <t>There are currently three different public key object identifiers
for RSA public keys.  These are RSA, RSA-OCSP and RSA-PSS.
      </t>
      <section title="Generic RSA Public Keys">
        <t>Almost all RSA keys that are contained in certificates today use
the generic RSA public key format and identifier.  This allows for the
public key to be used both for key transport and for signature validation
(assuming it is compatible with the bits in the key usage extension).  The
only reason for using one of more specific public key identifiers is if the
user wants to restrict the usage of the RSA public key with a specific
algorithm.</t>
        <t>For the generic RSA public key, the S/MIME capibility that is
advertised is a request for a specific key size to be used.  This would
normally be used for dealing with a request on the key to be used for a
signature that the client would then verify.  In general the user would
provide a specific key when a key transport algorithm is being
considered.</t>
        <t>The ASN.1 that is used for the generic RSA public key is defined
as below:</t>
        &RSA-PUBKEY;
        <t>From the above we can see that:
          <list style="symbols">
            <t>We use the same object identifer as the public key to
identify the S/MIME capability field.</t>
            <t>We define a new type RSAKeyCapabilities that is used as the
type field for the S/MIME capability.</t>
          </list>
        </t>

        <t>For the structure RSAKeyCapabilities, the fields are used as
follows:
          <list style="hanging">
            <t hangText="minKeySize"> contains the minimum length of the RSA
modulus to be used.</t>
            <t hangText="maxKeySize"> contains the maximum length of the RSA
modules that should be used.  If this field is absent then no maximum length
is requested/expected.</t>
          </list>
        </t>
      </section>

      <section title="RSASSA-PSS Signature Public Keys">
        <t>While most of the time one will use the generic RSA public key
identifier in a certificate, the RSA SSA-PSS identifier can be used if the
owner of the key desires to restrict the usage of the key to just this
algorithm.</t>
        <t>The ASN.1 that is used for the RSA SSA-PSS public key is defined
below:</t>
        &PUBKEY-RSA-PSS;
        <t>From the above we can see that:
          <list style="symbols">
            <t>We use the same object identifier as the public key to
identify the S/MIME capability field.</t>
            <t>We use the same type for the S/MIME capability as is used
above for the generic RSA public key.</t>
          </list>
        </t>
      </section>
    </section>

    <section title="Diffie-Hellman Keys">
      <t>There is current two Diffie-Hellman public key object identifiers.
These are DH and DSA.</t>
      <section title="Diffie-Hellman Signature Public Key">
        <t>This public key type is used for the validation of DSA signatures.</t>
        <t>The ASN.1 that is used for DSA keys is defined below:</t>
        &PUBKEY-DSA;
        <t>From the above we can see that:
          <list style="symbols">
            <t>We use the same object identifer as the public key to identify the S/MIME capability field.</t>
            <t>We define a new type DSAKeyCapabilities that is used as the type field for the S/MIME capability.</t>
          </list>
        </t>
        <t>For the structure DSAKeyCapabilities, the fields are used as follows:
          <list style="hanging">
            <t hangText="keySizes"> is used when only a key size is needed to be specified and not a specific group.  It is expected that ths would be the most commonly used of the two options.  In key sizes the fields are used as follows:
              <list style="hanging">
                <t hangText="minKeySize"> contains the minimum length of the DSA modulus to be used.</t>
                <t hangText="maxKeySize"> contains the maximum length of the DSA modules that should be used.  If this field is absent then no maximum length
is requested/expected.</t>
              </list>
            </t>
            <t hangText="keyParams"> contains the exact set of DSA for the key used to sign the message.</t>
          </list>
        </t>
        <t>NOTE: In the original discussions the option keyParams would not have existed in this structure, and they may not exist in a future version of the structure.  The issue is that we really only need to have the key size fields, but there seems to be a mis-match between this structure and that used for ECC where we don't specify anything about key sizes, but do specify the exact group to be used.  We should probably have a discussion about rationalizing these together.</t>
      </section>
    </section>

    <section title="Elliptical Curve Keys">
      <t>There are currently three Eliptical Curve public key object
identifiers.  These are EC, EC-DH and EC-MQV</t>
      <section title="Generic Elliptical Curve Keys">
        <t>All most all ECC keys  that are contained in certificates today use the generic ECC public key format and identifier.  This allows for the public key to be used both for key agreement and for signature validation (assuming the appropriate bits are in the certificate).  The only reason for using one of the more specific public key identifier is if the user wants to restrict the usage of the ECC public key with a specific algorithm.</t>
        <t>For the generic ECC public key, the S/MIME capability that is advertized is a request for a specific group to be used. </t>
        <t>The ASN.1 that is used for the generic ECC public key is defined as below:</t>
        &PUBKEY-ECC;
        <t>From the above we can see that:
          <list style="symbols">
            <t>We use the same object identifier as the public key to identify the S/MIME capability field.</t>
            <t>We use the same data type for the S/MIME capability as is used for the public key.</t>
          </list>
        </t>
      </section>
    </section>

    <section title="RSASSA-PSS Signature Algorithm Capability">
      <t>This document defines a new S/MIME Capability for the RSA-SSA-PSS signature algorithm.  THere already exists one in <xref target="RFC4055"/> where the parameters field is not used.</t>
      <t>When the S/MIME group defined a S/MIME Capability for the RSA-SSA-PSS signature algorithm, it was done so in the context of how S/MIME defines and uses S/MIME Capabilities.  When placed in an S/MIME message <xref target="RFC3851"/> or in a certificate <xref target="RFC4262"/> it is always placed in a sequence of capabilities.  This meant that one can place the identifier for RSA-SSA-PSS in the sequence along with the identifier for MD5, SHA-1 and SHA-256.  The assumption was then made that one could compute the matrix of all answers and the publisher would support all elements in the matrix.  This has the possiblity that the publisher could accendently publish a point in the matrix that is not actually supported.</t>
      <t>In this situation, there is only a single item that is published.  This means that we need to publish all of the assoicated information along with the identifier for the signature algorrithm in a single entity.  For this reason we now define a new parameter type to be used as the S/MIME capaiblity type which contains a hash identifier and a mask identifier.  The actual ASN.1 used for this is as follows:</t>
      &PUBKEY-SIG-RSA-PSS;
      <t>From the above we can see that:
        <list style="symbols">
          <t>We use the same object identifier as the public key to identify the S/MIME capability field.</t>
          <t>We define a new type RsaSsa-Pss-sig-caps which contains the information that needs to defined to describe a specific instance of the signature algorithm.</t>
        </list>
      </t>

      <t>For the type RsaSsa-Pss-sig-caps, the fields are used as follows:
        <list style="hanging">
          <t hangText="hashAlg"> contains the S/MIME capability for the hash algorithm we are declaring we support with the RSA-SSA-PSS signature algorithm.</t>
          <t hangText="maskAlg"> contains the S/MIME capability for the mask algorithm we are declaring we support with the RSA-SSA-PSS signature algorithm.</t>
          <t hangText="trailerField"> specifies which trailer field algorithm is being supported.  This MUST be the value 1.</t>
        </list>
      </t>

      <t>NOTE:  In at least one iteration of the design we used a sequence of hash identifiers and a sequence of masking functions and again made the assumption that entire matrix would be supported.  This has been removed at this point since the original intent of S/MIME capabilities is that one should be able to do a binary comparison of the DER encoding of the field and determine a specific capability was published.   We could return back to using the sequence if we wanted to lose the ability to do a binary compare but needed to shorten the encodings.  This does not currently appear to be an issue at this point.</t>
    </section>

    <section title="Security Considerations">
      <t>To Be Supplied.</t>
    </section>

    <section title="IANA Considerations">
      <t>This document has no IANA considerations.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &RFC3279;
      &RFC3370;
      &RFC4055;
      &RFC5912;
    </references>
    <references title="Informative References">
      &ID-OCSP-Agility;
      &RFC3851;
      &RFC4262;
    </references>

    <section title="2008 ASN.1 Module" anchor="ASN.2008">
      &ASN-2008;
    </section>

    <section title="Future Work">
      <t>A future revision of <xref target="RFC5912"/> should be done at
some point which expands the definition of the PUBLIC-KEY class and allows
for an S/MIME Capability to be included in the class defintion.  This would
encourage people to think about this as an issue when defining new public
key structures in the future.</t>
    </section>
  </back>
</rfc>

