<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
     <!ENTITY RFC4430 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4430.xml'>
     <!ENTITY RFC4306 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4306.xml'>
     <!ENTITY RFC4072 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4072.xml'>
     <!ENTITY RFC5247 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5247.xml'>

     <!ENTITY I-D.aboba-pppext-eapgss PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.aboba-pppext-eapgss.xml'>
     <!ENTITY I-D.arkko-eap-service-identity-auth PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.arkko-eap-service-identity-auth.xml'>
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="no"?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc sortrefs="no" ?>

<rfc ipr="pre5378Trust200902" docName="draft-eronen-ipsec-ikev2-eap-auth-06.txt">
<front>
  <title abbrev="Extension for EAP in IKEv2">An Extension for EAP-Only Authentication in IKEv2</title>
        <author initials="P." surname="Eronen" fullname="Pasi Eronen">
            <organization abbrev="Nokia">Nokia Research Center</organization>
            <address>
                <postal>
                    <street>P.O. Box 407</street>
                    <city>FIN-00045 Nokia Group</city>
                    <country>Finland</country>
                </postal>
                <email>pasi.eronen@nokia.com</email>
            </address>
        </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization>Nokia Siemens Networks</organization>
      <address>
    <postal>
     <street>Linnoitustie 6</street>
     <city>Espoo</city>
     <code>02600</code>
     <country>Finland</country>
    </postal>
    <phone>+358 (50) 4871445</phone>
    <email>Hannes.Tschofenig@gmx.net</email>
    <uri>http://www.tschofenig.priv.at</uri>
   </address>
    </author>
    <author initials="Y." surname="Sheffer" fullname="Yaron Sheffer">
      <organization abbrev="Check Point">Check Point Software Technologies Ltd.</organization>
      <address>
        <postal>
          <street>5 Hasolelim St.</street>
          <city>Tel Aviv</city>
          <code>67897</code>
          <country>Israel</country>
        </postal>
        <email>yaronf@checkpoint.com</email>
      </address>
    </author>
        <date year="2009"/>
        <area>Security</area>

        <keyword>Internet-Draft</keyword>

  <abstract>

  <t>IKEv2 specifies that EAP authentication must be used together
  with public key signature based responder authentication. This
  is necessary with old EAP methods that provide only unilateral
  authentication using, e.g., one-time passwords or token cards.</t>

  <t>This document specifies how EAP methods that provide mutual
  authentication and key agreement can be used to provide extensible
  responder authentication for IKEv2 based on methods other than
  public key signatures.</t>

  </abstract>
</front>

<middle>

<!-- ====================================================================== -->

<section anchor="introduction" title="Introduction">

  <t>The Extensible Authentication Protocol (EAP), defined in <xref
  target="RFC4072"/>, is an authentication framework which
  supports multiple authentication mechanisms. Today, EAP has been
  implemented at end hosts and routers that connect via switched
  circuits or dial-up lines using PPP <xref target="RFC1661"/>, IEEE
  802 wired switches <xref target="IEEE8021X"/>, and IEEE 802.11
  wireless access points <xref target="IEEE80211i"/>.</t>

  <t>One of the advantages of the EAP architecture is its
  flexibility. EAP is used to select a specific authentication
  mechanism, typically after the authenticator requests more
  information in order to determine the specific authentication method
  to be used. Rather than requiring the authenticator (e.g., wireless
  LAN access point) to be updated to support each new authentication
  method, EAP permits the use of a backend authentication server which
  may implement some or all authentication methods.</t>

  <t>IKEv2 <xref target="RFC4306"/> is a component of
  IPsec used for performing mutual authentication and establishing and
  maintaining security associations for IPsec ESP and AH. In addition
  to supporting authentication using public key signatures and shared
  secrets, IKEv2 also supports EAP authentication.</t>

  <t>IKEv2 provides EAP authentication since it was recognized that
  public key signatures and shared secrets are not flexible enough to
  meet the requirements of many deployment scenarios.  By using EAP,
  IKEv2 can leverage existing authentication infrastructure and
  credential databases, since EAP allows users to choose a method
  suitable for existing credentials, and also makes separation of the
  IKEv2 responder (VPN gateway) from the EAP authentication endpoint
  (backend AAA server) easier.</t>

  <t>Some older EAP methods are designed for unilateral authentication
  only (that is, EAP peer to EAP server). These methods are used in
  conjunction with IKEv2 public key based authentication of the
  responder to the initiator. It is expected that this approach is
  especially useful for "road warrior" VPN gateways that use, for
  instance, one-time passwords or token cards to authenticate the
  clients.</t>

  <t>However, most newer EAP methods, such as those typically used
  with IEEE 802.11i wireless LANs, provide mutual authentication and
  key agreement. Currently, IKEv2 specifies that these EAP
  methods must also be used together with public key signature based
  responder authentication.</t>

  <t>In some environments, requiring the deployment of PKI for just
  this purpose can be counterproductive. Deploying new infrastructure
  can be expensive, and it may weaken security by creating new
  vulnerabilities. Mutually authenticating EAP methods alone can
  provide a sufficient level of security in many circumstances, and
  indeed, IEEE 802.11i uses EAP without any PKI for authenticating
  the WLAN access points.</t>

  <t>This document specifies how EAP methods that offer mutual
  authentication and key agreement can be used to provide responder
  authentication in IKEv2 completely based on EAP.</t>

<section anchor="terminology" title="Terminology">

  <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
  NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"
  in this document are to be interpreted as described in <xref
  target="RFC2119"/>.</t>

</section>

</section>

<!-- ====================================================================== -->

<section anchor="scenarios" title="Scenarios">

  <t>In this section we describe two scenarios for extensible
  authentication within IKEv2. These scenarios are intended to be
  illustrative examples rather than specifying how things should be
  done.</t>

  <t><xref target="co-located"/> shows a configuration where the EAP
  and the IKEv2 endpoints are co-located. Authenticating the IKEv2
  responder using both EAP and public key signatures is redundant.
  Offering EAP based authentication has the advantage that multiple
  different authentication and key exchange protocols are available
  with EAP with different security properties (such as strong password
  based protocols, protocols offering user identity confidentiality
  and many more). As an example it is possible to use GSS-API support
  within EAP <xref target="I-D.aboba-pppext-eapgss"/> to support
  Kerberos based authentication which effectively replaces the need
  for KINK <xref target="RFC4430"/>.</t>

<figure title="EAP and IKEv2 endpoints are co-located" anchor="co-located">
<artwork><![CDATA[
       +------+-----+                            +------------+
  O    |   IKEv2    |                            |   IKEv2    |
 /|\   | Initiator  |<---////////////////////--->| Responder  |
 / \   +------------+          IKEv2             +------------+
 User  |  EAP Peer  |          Exchange          | EAP Server |
       +------------+                            +------------+
]]></artwork>
</figure>

  <t><xref target="corporate-network"/> shows a typical corporate
  network access scenario. The initiator (client) interacts with the
  responder (VPN gateway) in the corporate network. The EAP exchange
  within IKE runs between the client and the home AAA server. As a
  result of a successful EAP authentication protocol run, session keys
  are established and sent from the AAA server to the VPN gateway, and
  then used to authenticate the IKEv2 SA with AUTH payloads.</t>

  <t>The protocol used between the VPN gateway and AAA server could
  be, for instance, Diameter <xref target="RFC4072"/> or
  RADIUS <xref target="RFC3579"/>. See <xref target='security'/>
  for related security considerations.</t>

<figure title="Corporate Network Access" anchor="corporate-network">
<artwork><![CDATA[
                             +-------------------------------+
                             |       Corporate network       |
                             |                               |
                        +-----------+            +--------+  |
                        |   IKEv2   |     AAA    |  Home  |  |
  IKEv2      +////----->+ Responder +<---------->+  AAA   |  |
  Exchange   /          | (VPN GW)  |  (RADIUS/  | Server |  |
             /          +-----------+  Diameter) +--------+  |
             /               |        carrying EAP           |
             |               |                               |
             |               +-------------------------------+
             v
      +------+-----+
  o   |   IKEv2    |
 /|\  | Initiator  |
 / \  | VPN client |
User  +------------+
]]></artwork>
</figure>

</section>

<!-- ====================================================================== -->

<section anchor="solution" title="Solution">

  <t>IKEv2 specifies that when the EAP method establishes a shared
  secret key, that key is used by both the initiator and responder to
  generate an AUTH payload (thus authenticating the IKEv2 SA set up by
  messages 1 and 2).</t>

  <t>When used together with public key responder authentication, the
  responder is in effect authenticated using two different methods:
  the public key signature AUTH payload in message 4, and the
  EAP-based AUTH payload later.</t>

  <t>If the initiator does not wish to use public key based responder
  authentication, it includes an EAP_ONLY_AUTHENTICATION notification
  payload (type TBD-BY-IANA) in message 3. The SPI size field is
  set to zero, and there is no additional data associated with
  this notification.</t>

  <t>If the responder supports this notification, it omits the
  public key based AUTH payload and CERT payloads from message 4.</t>

  <t>If the responder does not support the EAP_ONLY_AUTHENTICATION
  notification, it ignores the notification payload, and includes the
  AUTH payload in message 4. In this case the initiator can, based on
  its local policy, choose to either ignore the AUTH payload, or verify
  it and any associated certificates as usual.</t>

  <t>Both the initiator and responder MUST verify that the EAP method
  actually used provided mutual authentication and established a
  shared secret key. The AUTH payloads sent after EAP Success MUST use
  the EAP-generated key, and MUST NOT use SK_pi or SK_pr.</t>

  <t>An IKEv2 message exchange with this modification is shown below:</t>

<figure>
<artwork><![CDATA[

   Initiator                   Responder
  -----------                 -----------
   HDR, SAi1, KEi, Ni,
        [N(NAT_DETECTION_SOURCE_IP),
         N(NAT_DETECTION_DESTINATION_IP)]  -->

                         <--   HDR, SAr1, KEr, Nr, [CERTREQ],
                                    [N(NAT_DETECTION_SOURCE_IP),
                                     N(NAT_DETECTION_DESTINATION_IP)]

   HDR, SK { IDi, [IDr], SAi2, TSi, TSr,
             N(EAP_ONLY_AUTHENTICATION),
             [CP(CFG_REQUEST)] }  -->

                         <--   HDR, SK { IDr, EAP(Request) }

   HDR, SK { EAP(Response) }  -->

                         <--   HDR, SK { EAP(Request) }

   HDR, SK { EAP(Response) }  -->

                         <--   HDR, SK { EAP(Success) }

   HDR, SK { AUTH }  -->

                         <--   HDR, SK { AUTH, SAr2, TSi, TSr,
                                         [CP(CFG_REPLY] }

]]></artwork></figure>

   <t>The NAT detection and Configuration payloads are shown for
   informative purposes only; they do not change how EAP
   authentication works.</t>

</section>

<!--

<section title="Discussion">

  <t>Currently it seems that options 1-3 have approximately
  the same security properties. The last option has somewhat weaker
  security, since it does not provide PFS against e.g., compromise of
  an AAA proxy (however, we have not analyzed option 4 in detail).</t>

  <t>It seems that the approach where (1) the initiator uses a NOTIFY
  payload to signal the responder that it does not require the AUTH
  payload, and (2) if the responder includes it anyway, the initiator
  ignores it, might be a good choice. However, more discussion is
  required before deciding.</t>

</section>

-->

<!-- ====================================================================== -->

<section anchor="iana" title="IANA considerations">

  <t>This document defines a new IKEv2 Notification Payload type,
  EAP_ONLY_AUTHENTICATION, described in <xref target='solution'/>.
  This payload must be assigned a new type number from the
  "status types" range.</t>

  <t>This document does not define any new namespaces to be managed by
  IANA.</t>

</section>

<!-- ====================================================================== -->

<section anchor="security" title="Security Considerations">

  <t>Security considerations applicable to all EAP methods are
  discussed in <xref target='RFC3748'/>. The EAP Key
  Management Framework <xref target='RFC5247'/> deals with
  issues that arise when EAP is used as a part of a larger system.</t>

<section title="Authentication of IKEv2 SA">

  <t>It is important to note that the IKEv2 SA is not authenticated by
  just running an EAP conversation: the crucial step is the AUTH
  payload based on the EAP-generated key. Thus, EAP methods that do
  not provide mutual authentication or establish a shared secret key
  MUST NOT be used with the modifications presented in this
  document.</t>

</section>

<section title="Authentication with separated IKEv2 responder/EAP server">

  <t>As described in <xref target="scenarios"/>, the EAP conversation
  can terminate either at the IKEv2 responder or at a backend AAA
  server.</t>

  <t>If the EAP method is terminated at the IKEv2 responder then no key
  transport via the AAA infrastructure is required. Pre-shared secret
  and public key based authentication offered by IKEv2 is then
  replaced by a wider range of authentication and key exchange
  methods.</t>

  <t>However, typically EAP will be used with a backend AAA server.
  See <xref target='RFC5247'/> for a more complete
  discussion of the related security issues; here we provide only a
  short summary.</t>

  <t>When a backend server is used, there are actually two
  authentication exchanges: the EAP method between the client and the
  AAA server, and another authentication between the AAA server and
  IKEv2 gateway. The AAA server authenticates the client using the selected EAP method,
  and they establish a session key. The AAA server then sends
  this key to the IKEv2 gateway over a connection authenticated using,
  e.g., IPsec or TLS.</t>

  <t>Some EAP methods do not have any concept of pass-through
  authenticator (e.g., NAS or IKEv2 gateway) identity, and these two
  authentications remain quite independent of each other. That is,
  after the client has verified the AUTH payload sent by the IKEv2
  gateway, it knows that it is talking to SOME gateway trusted by the
  home AAA server, but not which one. The situation is somewhat
  similar if a single cryptographic hardware accelerator, containing a
  single private key, would be shared between multiple IKEv2 gateways
  (perhaps in some kind of cluster configuration). In particular, if
  one of the gateways is compromised, it can impersonate any of the
  other gateways towards the user (until the compromise is discovered
  and access rights revoked).</t>

  <t>In some environments it is not desirable to trust the IKEv2
  gateways this much (also known as the "Lying NAS Problem").  EAP
  methods that provide what is called "connection binding" or "channel
  binding" transport some identity or identities of the gateway (or
  WLAN access point/NAS) inside the EAP method.  Then the AAA server
  can check that it is indeed sending the key to the gateway expected
  by the client. A potential solution is described in <xref target="I-D.arkko-eap-service-identity-auth"/>.</t>

  <t>In some deployment configurations, AAA proxies may be present
  between the IKEv2 gateway and the backend AAA server. These AAA
  proxies MUST be trusted for secure operation, and therefore SHOULD
  be avoided when possible; see <xref target='RFC4072'/> and
  <xref target='RFC5247'/> for more discussion.</t>

</section>

<section title="Protection of EAP payloads">

  <t>Although the EAP payloads are encrypted and integrity protected
  with SK_e/SK_a, this does not provide any protection against
  active attackers. Until the AUTH payload has been received
  and verified, a man-in-the-middle can change the KEi/KEr payloads
  and eavesdrop or modify the EAP payloads.</t>

  <t>In IEEE 802.11i wireless LANs, the EAP payloads are neither encrypted nor
  integrity protected (by the link layer), so EAP methods are
  typically designed to take that into account.</t>

  <t>In particular, EAP methods that are vulnerable to dictionary
  attacks when used in WLANs are still vulnerable (to active
  attackers) when run inside IKEv2.</t>

</section>

<section title="User identity confidentiality">

  <t>IKEv2 provides confidentiality for the initiator identity against
  passive eavesdroppers, but not against active attackers. The
  initiator announces its identity first (in message #3), before the
  responder has been authenticated. The usage of EAP in IKEv2 does not
  change this situation, since the ID payload in message #3 is used
  instead of the EAP Identity Request/Response exchange. This is
  somewhat unfortunate since when EAP is used with public key
  authentication of the responder, it would be possible to provide
  active user identity confidentiality for the initiator. </t>

  <t>IKEv2 protects the responder's identity even against active
  attacks. This property cannot be provided when using EAP. If public
  key responder authentication is used in addition to EAP, the
  responder reveals its identity before authenticating the
  initiator. If only EAP is used (as proposed in this document), the
  situation depends on the EAP method used (in some EAP methods, the
  server reveals its identity first).</t>

  <t>Hence, if active user identity confidentiality for the initiator
  is required then EAP methods that offer this functionality have to
  be used (see <xref target='RFC3748'/>, Section
  7.3).</t>

</section>

</section>

<!-- ====================================================================== -->

<section title="Acknowledgments">

  <t>This document borrows some text from <xref
  target="RFC3748"/>, <xref
  target="RFC4306"/>, and <xref
  target="RFC4072"/>. We would also like to thank Hugo Krawczyk
  for interesting discussions about this topic.</t>

</section>

</middle>

<!-- ====================================================================== -->

<back>
<references title="Normative References">

<reference anchor="RFC3748">
  <front>
  <title>Extensible Authentication Protocol (EAP)</title>
  <author initials="B" surname="Aboba"><organization /></author>
  <author initials="L" surname="Blunk"><organization /></author>
  <author initials="J" surname="Vollbrecht"><organization /></author>
  <author initials="J" surname="Carlson"><organization /></author>
  <author initials="H" surname="Levkowetz"><organization /></author>
  <date year="2004" month="June"/>
  </front>
  <seriesInfo name="RFC" value="3748"/>
</reference>

<reference anchor="RFC2119">
  <front>
  <title>Key words for use in RFCs to Indicate Requirement Levels</title>
  <author initials="S." surname="Bradner" fullname="Scott Bradner">
  <organization>Harvard University</organization>
  </author>
  <date month="March" year="1997"/>
  </front>
  <seriesInfo name="RFC" value="2119"/>
  <format type="TXT" octets="4723" target="ftp://ftp.isi.edu/in-notes/rfc2119.txt"/>
</reference>
&RFC4306;
&RFC4072;

</references>

<references title="Informative References">

<reference anchor="RFC3579">
  <front>
  <title>RADIUS (Remote Authentication Dial In User Service) Support For
  Extensible Authentication Protocol (EAP)</title>
  <author initials="B." surname="Aboba" fullname="B. Aboba">
  <organization/>
  </author>
  <author initials="P." surname="Calhoun" fullname="P. Calhoun">
  <organization/>
  </author>
  <date month="September" year="2003"/>
  </front>
  <seriesInfo name="RFC" value="3579"/>
  <format type="TXT" octets="104469" target="ftp://ftp.isi.edu/in-notes/rfc3579.txt"/>
</reference>

&I-D.aboba-pppext-eapgss;

&RFC5247;

<reference anchor="IEEE8021X">
  <front>
  <title>Local and Metropolitan Area Networks: Port-Based Network Access Control</title>
  <author><organization>Institute of Electrical and Electronics Engineers</organization></author>
  <date year="2001"/>
  </front>
  <seriesInfo name="IEEE Standard" value="802.1X-2001"/>
</reference>

<reference anchor="IEEE80211">
  <front>
  <title>Information technology - Telecommunications and information exchange
  between systems - Local and metropolitan area networks - Specific
  Requirements Part 11: Wireless LAN Medium Access Control (MAC) and Physical
  Layer (PHY) Specifications</title>
  <author><organization>Institute of Electrical and Electronics Engineers</organization></author>
  <date year="1999"/>
  </front>
  <seriesInfo name="IEEE Standard" value="802.11-1999"/>
</reference>

<reference anchor="IEEE80211i">
  <front>
  <title>IEEE Standard for Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 11: Wireless Medium Access Control (MAC) and Physical Layer (PHY) specifications: Amendment 6: Medium Access Control (MAC) Security Enhancements</title>
  <author><organization>Institute of Electrical and Electronics Engineers</organization></author>
  <date month="July" year="2004"/>
  </front>
  <seriesInfo name="IEEE Standard" value="802.11i-2004"/>
</reference>


<reference anchor="RFC2865">
  <front>
  <title>Remote Authentication Dial In User Service (RADIUS)</title>
  <author initials="C." surname="Rigney" fullname="C. Rigney">
  <organization/>
  </author>
  <author initials="S." surname="Willens" fullname="S. Willens">
  <organization/>
  </author>
  <author initials="A." surname="Rubens" fullname="A. Rubens">
  <organization/>
  </author>
  <author initials="W." surname="Simpson" fullname="W. Simpson">
  <organization/>
  </author>
  <date month="June" year="2000"/>
  </front>
  <seriesInfo name="RFC" value="2865"/>
  <format type="TXT" octets="146456" target="ftp://ftp.isi.edu/in-notes/rfc2865.txt"/>
</reference>

<reference anchor="RFC1661">
  <front>
  <title abbrev="Point-to-Point Protocol">The Point-to-Point Protocol (PPP)</title>
  <author initials="W." surname="Simpson" fullname="William Allen Simpson">
  <organization>Daydreamer, Computer Systems Consulting Services</organization>
  </author>
  <date month="July" year="1994"/>
  </front>
  <seriesInfo name="STD" value="51"/>
  <seriesInfo name="RFC" value="1661"/>
  <format type="TXT" octets="103026" target="ftp://ftp.isi.edu/in-notes/rfc1661.txt"/>
</reference>
&RFC4430;
&I-D.arkko-eap-service-identity-auth;


</references>
<section anchor="alternatives" title="Alternative Approaches">
  <t>In this section we list alternatives which have been considered during the work on this document. We concluded that the solution presented in <xref target="solution" /> seems to fit better into IKEv2.</t>

<section anchor="ignore" title="Ignore AUTH payload at the initiator">

  <t>With this approach, the initiator simply ignores the AUTH
  payload in message #4 (but obviously must check the second AUTH
  payload later!).  The main advantage of this approach is that no
  protocol modifications are required and no signature verification
  is required.</t>

  <t>The initiator could signal to the responder
  (using a notification payload) that it did not verify the first
  AUTH payload.</t>

</section>

<section anchor="unauth" title="Unauthenticated public keys in AUTH payload (message 4)">

  <t>Another solution approach suggests the use of unauthenticated
  public keys in the public key signature AUTH payload (for message
  4).</t>

  <t>That is, the initiator verifies the signature in the AUTH
  payload, but does not verify that the public key indeed belongs to
  the intended party (using certificates)--since it doesn't have a PKI
  that would allow this. This could be used with X.509 certificates
  (the initiator ignores all other fields of the certificate except
  the public key), or "Raw RSA Key" CERT payloads.</t>

  <t>This approach has the advantage that initiators that wish to
  perform certificate-based responder authentication (in addition to
  EAP) may do so, without requiring the responder to handle these
  cases separately.</t>

  <t>If using RSA, the overhead of signature verification is quite
  small, compared to g^xy calculation.</t>

</section>



<section title="Using EAP derived session keys for IKEv2">

  <t>It has been proposed that when using an EAP method that provides
  mutual authentication and key agreement, the IKEv2 Diffie-Hellman
  exchange could also be omitted. This would mean that the session
  keys for IPsec SAs established later would rely only on EAP-provided
  keys.</t>

  <t>It seems the only benefit of this approach is saving some
  computation time (g^xy calculation). This approach
  requires designing a completely new protocol (which would not
  resemble IKEv2 anymore) we do not believe that it should be
  considered. Nevertheless, we include it for completeness.</t>

</section>

</section>
</back>
</rfc>
