<?xml version="1.0" encoding="UTF-8"?>


<rfc category="info" ipr="trust200811" docName="draft-ietf-sipcore-presence-scaling-requirements-02.txt">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes" ?>

<front> <title abbrev='Scaling Requirements for Presence'>Scaling Requirements for Presence in SIP/SIMPLE</title>

    <author initials="A." surname="Houri" fullname="Avshalom Houri"> 
<organization>IBM</organization> <address> <postal> <street>3 Pekris Street, Science Park 
</street> <city>Rehovot</city> <region></region> <code></code> 
<country>Israel</country> </postal> <email>avshalom@il.ibm.com</email> 
</address> </author>

    <author initials="S." surname="Parameswar" fullname="Sriram Parameswar"> 
<organization>Microsoft Corporation</organization> <address> <postal> 
<street>One Microsoft Way</street> <city>Redmond</city> <region>WA</region> 
<code>98052</code> <country>USA</country> </postal> 
<email>Sriram.Parameswar@microsoft.com</email> </address> </author>

 <author initials="E." surname="Aoki" fullname="Edwin Aoki">
<organization>AOL  LLC</organization>
<address> <postal> <street>401 Ellis St.</street> 
<city>Mountain View</city> <region>CA</region> <code>94043</code> 
<country>USA</country> </postal> <email>aoki@aol.net</email> </address> 
 </author>

    <author initials="V." surname="Singh" fullname="Vishal Singh"> 
<organization abbrev="Columbia U.">Columbia University</organization> <address> 
<postal> <street>Department of Computer Science</street> <street>450 Computer 
Science Building</street> <city>New York</city> <region>NY</region> 
<code>10027</code> <country>US</country> </postal> 
<email>vs2140@cs.columbia.edu</email> 
<uri>http://www.cs.columbia.edu/~vs2140</uri> </address> </author>

    <author initials="H." surname="Schulzrinne" fullname="Henning Schulzrinne"> 
<organization abbrev="Columbia U.">Columbia University</organization> <address> 
<postal> <street>Department of Computer Science</street> <street>450 Computer 
Science Building</street> <city>New York</city> <region>NY</region> 
<code>10027</code> <country>US</country> </postal> <phone>+1 212 939 
7004</phone> <email>hgs+ecrit@cs.columbia.edu</email> 
<uri>http://www.cs.columbia.edu/~hgs</uri> </address> </author>


    <date month="September" year="2009"/> <area>Real Time</area> 
<workgroup>SIPPING WG</workgroup> <keyword>I-D</keyword> <keyword>Internet-
Draft</keyword> <keyword>SIMPLE</keyword> <keyword>problem statement</keyword>

<abstract>

<t>The document lists requirements for optimizations of SIP/SIMPLE. These 
optimizations should reduce the load on the network and the presence servers due 
to inter-domain presence subscriptions. The need for the requirements is based 
on a separate document that provides scaling analysis for inter-domain presence over 
SIP/SIMPLE.</t>

</abstract>

</front>

<middle>

<section title="Requirements notation">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", 
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document 
are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>

<section title="Introduction">

<t>The document lists requirements for optimizations of SIP/SIMPLE. 
See <xref target="I-D.ietf-simple-simple"/> for the list of RFCs and drafts that 
are considered as part of SIP/SIMPLE. These optimizations should 
reduce the load on the network and the presence servers due to inter-domain presence 
subscriptions. The need for the requirements is based on a separate scaling analysis 
document <xref target="I-D.ietf-simple-interdomain-scaling-analysis" />.</t>

<t>The scaling analysis document shows that  
the following aspects of SIP/SIMPLE can be optimized: the 
number of bytes sent between two federating domains, the number of 
messages processed, and the amount of state  
managed by the presence server.</t>

<t>For example, for two peering networks that have a total of 20 million users,
we calculated that approximately 19 billion messages per 8 hours work day are exchanged
between the networks for the presence service.</t>

<t>For very large session peering (150 million subscriptions), we calculated 
that the presence server needs to manage approximately a terabyte of state.</t>

<t>It may be that very large systems require the deployment of significant resources,  
but we should consider the following:</t>

<t><list style="symbols">

<t>The scaling analysis document makes  
moderate assumptions about the number of presence status changes per hour and the
the size of the presence document.<vspace blankLines='1' /></t>

<t>Even when applying all optimizations for presence as described by drafts and RFCs, 
we still calculated around 10 billion messages per 8 hours work day for a total of 20 
million federating users. This is better than the base case, but not enough given the moderate 
assumptions and given that, when presence is deployed in a 
mass market, the number of federating users will be much larger than 20 million.</t>

</list></t>

</section>

<section title="Requirements">

<t>This section lists the requirements for a solution that optimizes the 
inter-domain presence loads. The requirements are based on the presence scaling 
draft <xref target="I-D.ietf-simple-interdomain-scaling-analysis" />.</t>

<section title="Backward Compatibility Requirements">

<t><list style="symbols">

<t>REQ-001: The solution SHOULD NOT deprecate existing protocol mechanisms 
defined in SIP/SIMPLE.<vspace blankLines='1' /></t>

<t>REQ-002: Existing SIP/SIMPLE clients SHOULD be able to communicate with 
clients and servers that implement new presence scaling features. 
<vspace blankLines='1' /></t>

<t>REQ-003: The solution SHOULD NOT constrain any existing RFC functional 
requirements for presence.<vspace blankLines='1' /></t>

<t>REQ-004: The solution MUST NOT constrain any existing RFC security 
requirements for presence.<vspace blankLines='1' /></t>

<t>REQ-005: Systems that do not use the new additions to the protocol SHOULD 
operate at the same level as they do today.<vspace blankLines='1' /></t>
</list></t>

</section>

<section title="Policy, Privacy, Permissions Requirements">

<t><list style="symbols">

<t>REQ-006: The solution SHOULD NOT limit the ability of presentities to present 
    different views of presence to different watchers.<vspace blankLines='1' /></t>

<t>REQ-007: The solution SHOULD NOT restrict the ability of a presentity to obtain 
    its list of watchers.<vspace blankLines='1' /></t>

<t>REQ-008: The solution MUST NOT create any new privacy holes or make any 
existing ones worse.<vspace blankLines='1' /></t>

</list></t>

</section>


<section title="Scalability Requirements">

<t><list style="symbols">

    <t>REQ-009: Presence systems (intra- or inter-domain) SHOULD scale in linear 
    proportion to the number of watchers and presentities in the system.<vspace 
    blankLines='1' /></t>

    <t>REQ-010: The solution SHOULD NOT require a significant increase in the 
    size of maintained state, compared to the current state size required by 
    SIP/SIMPLE.<vspace blankLines='1' /></t>

    <t>REQ-011: The solution MUST allow presence systems to scale. Note: we view 
    scalability on the order of tens of millions of users in each peer 
    domain.<vspace blankLines='1' /></t>

    <t>REQ-012: The solution MUST support a
    high percentage of watcher/presentity intersections between the domains and 
    it MUST support various intersection models such as either small or large 
    percentage of users from each domain subscribing to users from the other 
    domain. <vspace blankLines='1' /></t>

    <t>REQ-013: Protocol changes MUST NOT prohibit optimizations in deployment 
    models where there is a high number of inter-domain subscriptions.<vspace blankLines='1' /></t>

    <t>REQ-014: New functionalities and extensions to the presence protocol 
    SHOULD consider scalability with respect to the number of messages, 
    state size, and management and processing load.<vspace blankLines='1' /></t>

    </list></t>
    
</section>

<section title="Topology Requirements">

    <t><list style="symbols">

    <t>REQ-015: The solution SHOULD allow for arbitrary federation topologies 
    including direct and indirect peering.<vspace blankLines='1' /></t>


    </list></t>
    
</section>

</section>


<section title="Considerations for Possible Optimizations ">

<t>This section discusses the possible paths for optimization. 
One of the most important considerations is whether SIP, 
which was designed more as an end-to-end protocol, needs to be optimized for  
direct interactions between presence servers.</t>

<t>It is very possible that the issues described here are 
inherent to presence systems in general and not specific to SIP/SIMPLE. 
Organizations need to be prepared to invest substantial resources in the form of 
networks and hardware in order to create sizable systems. However, it is 
apparent that additional protocol optimizations are possible and further IETF work is 
needed in order to provide better scalability of large presence 
systems.</t>

<t>We should remember that SIP was originally designed for end-to-end 
session creation and that the number and size of messages are of secondary importance 
for an end-to-end session negotiation protocol. For large scale and especially for very 
large scale presence, the number of messages and the size of each 
message are of extreme importance. Care must be taken to address 
scalability during the initial phase of protocol design;  
shoehorning scalability at a later phase will be doomed to failure.</t>

<t>We should also consider whether using the same protocol between clients and 
servers and between servers is a good choice. It may be that, between inter-domain servers or 
even intra-domain servers (such as between RLSes  <xref target="RFC4662" 
/> and presence servers), there needs to be a different protocol 
that is optimized for the load and that can make assumptions about the network 
(using only TCP, for example. In <xref target="I-D.ietf-simple-interdomain-scaling-analysis" />, see the section 
that calculates the number of bytes and messages for an imaginary, optimized 
SIP).</t>

<t>When a presence server connects to another server using current 
SIP/SIMPLE, there is an extreme number of redundant messages 
due to SIP's support of both TCP and UDP and due 
to privacy controls that cause the sending of multiple presence documents for the same presentity. 
A server-to-server protocol will have to address 
these issues. Some initial work to address these issues can be found in: <xref target="I-D.ietf-simple-view-sharing"/>
and <xref target="I-D.ietf-simple-intradomain-federation"/>
and in other (still individual) drafts.</t>

<t>Another issue related to protocol design is whether NOTIFY 
messages should not be considered as media just like audio, video, and even text 
messaging. The SUBSCRIBE method may be extended to negotiate the route and other 
parameters of the NOTIFY messages, similar to the way the INVITE method  
negotiates media parameters. This way, the load can be shifted to 
specialized NOTIFY "relays" and taken off the control path of SIP. One of the 
possible ideas (Marc Willekens) is to use SIP for client/server 
NOTIFY but use a more optimized and controllable protocol for the 
server-to-server interface. Another possibility is to use the MSRP <xref 
target="RFC4975"/>, <xref target="RFC4976"/> protocol for the notifications.</t> 
    
</section>

    <section title="Security Considerations">

    <t>This document discusses the scalability requirements for the existing 
    SIP/SIMPLE protocol and model. Many of the above-mentioned changes to the protocol 
    will have security implications.</t>

    <t>For example, a potential protocol change that may have security 
    implications is the single sending of a presence document between domains in 
    order to reduce the number of messages and network load. This possible 
    optimization will delegate privacy protection from one domain to the other, 
    and this delegated protection should be addressed during design.</t>

    <t>An important part of work on the requirements and optimizations will be to ensure 
    that all the security aspects are covered.</t>

   </section>

		 <section title="IANA Considerations">
		 		 <t>This document has no IANA actions.</t>
		 </section>

 <section title="Changes from Previous Versions">

<section title="Changes in version 01">

<t>Editorial language changes.</t>

</section>

</section>
		 
    <section title="Acknowledgments">

    <t>We would like to thank Jonathan Rosenberg, Ben Campbell, Markus Isomaki 
    Piotr Boni, David Viamonte, Aki Niemi, Marc Willekens, and Gonzalo Camarillo 
    for their ideas and input. Special thanks to Jean-Francois Mule, Vijay K. 
    Gurbani and Hisham Khartabil for their a detailed review. Very sprecial 
    thanks A. Jean Mahoney for reviewing this draft.</t>

   </section>


   </middle>

    <back>
		 		 		 <references title="Normative References">
		 		 		 		 <?rfc include="reference.RFC.2119" ?>
		 		 		 </references>
    		 <references title="Informational References">
        <?rfc include="reference.RFC.4662" ?>
        <?rfc include="reference.RFC.4975" ?>
        <?rfc include="reference.RFC.4976" ?>
     		 		 <?rfc include="reference.I-D.ietf-simple-simple" ?>
    		 		 <?rfc include="reference.I-D.ietf-simple-interdomain-scaling-analysis" ?>
        <?rfc include="reference.I-D.ietf-simple-view-sharing" ?>
        <?rfc include="reference.I-D.ietf-simple-intradomain-federation" ?>
		 		 		 </references>
    </back>
</rfc>
