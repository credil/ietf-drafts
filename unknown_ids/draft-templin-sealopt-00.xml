<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc strict='yes'?>
<?rfc iprnotified='no'?>
<rfc category="info" docName="draft-templin-sealopt-00.txt" ipr="trust200902">
  <front>
    <title abbrev="SEAL">The SEAL IPv6 Extension Header</title>

    <author fullname="Fred L. Templin" initials="F. L." role="editor"
            surname="Templin">
      <organization>Boeing Research &amp; Technology</organization>

      <address>
        <postal>
          <street>P.O. Box 3707</street>

          <city>Seattle</city>

          <region>WA</region>

          <code>98124</code>

          <country>USA</country>
        </postal>

        <email>fltemplin@acm.org</email>
      </address>
    </author>

    <date day="10" month="January" year="2012" />

    <keyword>I-D</keyword>

    <keyword>Internet-Draft</keyword>

    <abstract>
      <t>The Subnetwork Encapsulation and Adaptation Layer (SEAL) provides a
      mid-layer header designed for the encapsulation of an inner network
      layer packet within outer network layer headers. SEAL also supports a
      transport mode of operation, where the inner payload corresponds to an
      ordinary transport layer payload. However, SEAL can also provide benefit
      when used as an IPv6 extension header. Namely, the SEAL header when used
      as an extension header contains a digital signature or nonce inserted by
      the source. The source can thereafter use the digital signature/nonce to
      verify that any ICMPv6 messages received actually came from a router on
      the path.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The Subnetwork Encapsulation and Adaptation Layer (SEAL) <xref
      target="I-D.templin-intarea-seal"></xref> provides a mid-layer
      encapsulation designed for the encapsulation of an inner network layer
      packet within outer network layer headers. SEAL also supports a
      transport mode of operation, where the encapsulated payload corresponds
      to an ordinary transport layer protocol payload. It is in essence a
      close analogy of the GRE encapsulation format <xref
      target="RFC1701"></xref>.</t>

      <t>However, SEAL can also provide benefit when used as an IPv6 extension
      header <xref target="RFC2460"></xref>. Namely, the SEAL header when used
      as an IPv6 extension header contains a digital signature or nonce
      inserted by the source. The source can thereafter use the digital
      signature/nonce to verify that any ICMPv6 messages <xref
      target="RFC4443"></xref> received actually came from a router on the
      path.</t>
    </section>

    <section title="SEAL IPv6 Extension Header">
      <t>The SEAL IPv6 extension header can be inserted in either a "short
      form" or a "long form". In short form, the header includes a
      signature/nonce chosen by the source. In long form the header also
      includes an Identification value used for anti-replay sequencing. The
      short form is formatted as shown in <xref target="min1"></xref>:</t>

      <t><figure anchor="min1"
          title="SEAL IPv6 Extension Header Format - Short Form">
          <artwork><![CDATA[    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  Next Header  |Hdr Ext Len = 1|    SEAL Header (format TBD)   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                       Signature / Nonce                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
        </figure><list style="hanging">
          <t hangText="Next Header (8)">an 8-bit field that encodes the next
          header Internet Protocol number the same as for the IPv4 protocol
          and IPv6 next header fields.</t>

          <t hangText="Next Header Length  (8)">an 8-bit length of the
          extension header measured in 8-byte words. Set to 1 in short format,
          and set to 2 in long format.</t>

          <t hangText="SEAL Header (16)"><vspace />a 16-bit field that
          controls the operation of SEAL. Format TBD.</t>

          <t hangText="Signature/Nonce"><vspace />a 32-bit signature or nonce.
          When used as a digital signature, covers the leading 128 bytes of
          the packet beginning with the SEAL extension header (or up to the
          end of the packet). The value 128 is chosen so that at least the
          SEAL header as well as the inner packet network and transport layer
          headers are covered by the signature.</t>
        </list>The long form is formatted as shown in <xref
      target="min2"></xref><figure anchor="min2"
          title="SEAL IPv6 Extension Header Format - Long Form">
          <artwork><![CDATA[    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  Next Header  |Hdr Ext Len = 2|    SEAL Header (format TBD)   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                        Signature/Nonce                        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                        Identification                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                          Reserved                             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork>
        </figure></t>

      <t><list style="hanging">
          <t hangText="Identification (32)"><vspace />a 32-bit per-packet
          identification field. Set to a monotonically-incrementing 32-bit
          value for each SEAL packet transmitted, beginning with 0.</t>

          <t hangText="Reserved (32)"><vspace />a 32-bit reserved field.</t>
        </list></t>

      <t>The IPv6 source inserts a SEAL extension header when it needs to
      ensure that any resulting ICMPv6 error messages came from a router on
      the path and not from an off-path attacker. When the source receives an
      ICMPv6 error message, it verifies that the signature/nonce value is
      correct. When a signature is used, the source calculates the signature
      based on a secret hashing algorithm of its choosing. The source should
      choose a hashing algorithm that would make it extremely difficult for an
      off-path attacker to guess.</t>
    </section>

    <section title="IANA Considerations">
      <t>The IANA is instructed to allocate an IPv6 extension header for
      SEAL.</t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>The SEAL extension header can be used to verify that ICMPv6 messages
      were delivered by an on-path router and not an off-path attacker. The
      signature may also be used for other authenticating purposes, e.g., if
      the destination shares a symmetric secret key with the source then the
      destination can verify that messages actually came from the source. The
      packet identification field can also be used for anti-replay
      sequencing.</t>
    </section>

    <section anchor="acknowledge" title="Acknowledgments">
      <t>TBD.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc ?>

      <?rfc ?>

      <?rfc include="reference.RFC.4443"?>

      <?rfc include="reference.I-D.templin-intarea-seal"?>

      <?rfc ?>

      <?rfc ?>

      <?rfc include="reference.RFC.2460"?>
    </references>

    <references title="Informative References">
      <?rfc ?>

      <?rfc ?>

      <?rfc ?>

      <?rfc ?>

      <?rfc include="reference.RFC.1701"?>
    </references>
  </back>
</rfc>
