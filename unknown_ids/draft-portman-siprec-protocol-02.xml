<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2804 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2804.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3265 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3265.xml">
<!ENTITY RFC4574 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4574.xml">
<!ENTITY RFC3840 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3840.xml">
<!ENTITY RFC3841 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3841.xml">
<!ENTITY RFC4508 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4508.xml">
<!ENTITY RFC4579 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4579.xml">
<!ENTITY I-D.ietf-siprec-req SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-req.xml">
<!ENTITY I-D.ietf-siprec-architecture SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-architecture.xml">
<!ENTITY I-D.ram-siprec-metadata SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ram-siprec-metadata.xml">
<!ENTITY I-D.ietf-sipcore-info-events SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-sipcore-info-events.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-portman-siprec-protocol-02" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="SIPREC Protocol">The SIP-based Media Recording Protocol (SIPREC)</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Leon Portman" initials="L.P." role="editor"
            surname="Portman">
      <organization>NICE Systems</organization>
      <address>
        <postal>
          <street>8 Hapnina</street>
          <city>Ra'anana</city>
          <code>43017</code>
          <country>Israel</country>
        </postal>
        <email>leon.portman@nice.com</email>
      </address>
    </author>

    <author fullname="Henry Lum" initials="H." surname="Lum">
      <organization>Genesys, Alcatel-Lucent</organization>
      <address>
        <postal>
          <street>1380 Rodick Road, Suite 200</street>
          <city>Markham</city>
		  <region>Ontario</region>
          <code>L3R4G5</code>
          <country>Canada</country>
        </postal>
        <email>henry.lum@genesyslab.com</email>
      </address>
    </author>

<author initials="A." surname="Johnston" fullname="Alan Johnston">
<organization>Avaya</organization>
 <address>
  <postal><street></street>
   <city>St. Louis</city><region>MO</region><code>63124</code> 
  </postal>
  <email>alan.b.johnston@gmail.com</email>
  </address>
</author>

<author initials="A." surname="Hutton" fullname="Andrew Hutton">
<organization>Siemens Enterprise Communications</organization>
<address>
<email> 
andrew.hutton@siemens-enterprise.com
</email>
</address>
</author>

    <date month="January" year="2011" />
    <area>RAI</area>
    <workgroup>SIPREC</workgroup>
    <keyword>siprec</keyword>
    <abstract>
	  <t>SIPREC Session Recording Protocol is used for establishing recording session and reporting of the metadata of the communication session.</t>
	  <t>This document specifies the SIPREC Protocol (SIPREC).  SIPREC is used between Session Recording Client (SRC) and Session Recording Server (SRS).</t>
    </abstract>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
	  <t>Communication session recording requires establishment of a recording session (RS) between a session recording client (SRC) and session recording server (SRS). The overall architecture for media recording is described in the architecture draft <xref target="I-D.ietf-siprec-architecture"/></t>
	  
	  <t>The SIPREC Requirements <xref target="I-D.ietf-siprec-req"/> list a set of requirements that need to be met by session recording protocols.  SIP is chosen to be the protocol to establish the recording session to deliver recorded media to the session recording server.  Additional SIP extensions are specified in this document to meet some of the requirements outlined in the requirements draft.</t>
	  
	  <t>In order to describe the recorded media and the communication sessions involved, a metadata model is described in <xref target="I-D.ram-siprec-metadata"/> to deliver additional information shared between SRC and SRS.</t>
	  
    </section>

	<section anchor="Definitions" title="Definitions">
	  <t>The core SIPREC definitions are taken from the requirements document <xref target="I-D.ietf-siprec-req"/>.</t>
	  <t>
	  <list style="hanging">
	  <t hangText="Session Recording Server (SRS)">A Session Recording Server (SRS) is a SIP User Agent (UA) that is a specialized media server or collector that acts as the sink of the recorded media.  An SRS is a logical function that typically archives media for extended durations of time and provides interfaces for search and retrieval of the archived media.  An SRS is typically implemented as a multi-port device that is capable of receiving media from several sources simultaneously. An SRS is typically also the sink of the recorded session metadata.</t>
   
      <t hangText="Session Recording Client (SRC)">A Session Recording Client (SRC) is a SIP User Agent (UA) that acts as the source of the recorded media, sending it to the SRS.  An SRC is a logical function.  Its capabilities may be implemented across one or more physical devices.  In practice, an SRC could be a personal device (such as a SIP phone), a SIP Media Gateway (MG), a Session Border Controller (SBC) or a SIP Media Server (MS) integrated with an Application Server (AS).  This specification defines the term SRC such that all such SIP entities can be generically addressed under one definition.  The SRC itself or another entity working on its behalf (such as a SIP Application Server) may act as the source of the recording metadata.</t>
   
      <t hangText="Communication Session (CS)">A session created between two or more SIP User Agents (UAs) that is the target for recording.</t>
   
      <t hangText="Recording Session (RS)"> The SIP session created between an SRC and SRS for the purpose of recording a Communication Session.</t>
   <t>Figure 1 pictorially represents the relationship between a Recording Session and Communication Session.</t>
   </list>
   <figure><artwork>
<![CDATA[
  +-------------+                                      +-----------+
  |             |        Communication Session         |           |
  |     A       |<------------------------------------>|     B     |
  |             |                                      |           |
  +-------------+                                      +-----------+
  ..................................................................
  .                             Session                            .
  .                            Recording                           .
  .                             Client                             .
  ..................................................................
                                   |
                                   | Recording
                                   | Session
                                   |
                                   v
                            +------------+
                            |   Session  |
                            |  Recording |
                            |   Server   |
                            +------------+
							
	   Figure 1: Relationship between CS, SRC, SRS, and RS
]]>
   </artwork></figure>
   <list style="hanging">
	   <t hangText="Metadata">Information that describes recorded media and the CS to which they relate.</t>
   <t hangText="Pause during a Communication Session:"> The action of temporarily discontinuing the transmission and collection of RS media.</t>
   <t hangText="Resume during a Communication Session:">The action of recommencing the transmission and collection of RS media.</t>

      </list>
      </t>

	</section>
	
	<section title="Scope">
	    <t>The scope of the SIPREC protocol includes the establishment of the recording sessions and the reporting of the metadata, and extensions to the communication sessions.</t>
		
		<t>The following items, which is not an exhaustive list, do not represent the SIPREC protcol itself and are considered out of the scope of the SIPREC protcol:</t>
		<t><list style="symbols">
		<t>Recording policies that determine whether the CS should be recorded</t>
		<t>Retention policies that determine how long a recording is stored</t>
		<t>Searching and accessing the recorded media and metadata</t>
		<t>Delivering recording session metadata through non-SIP mechanism</t>
		</list>
		</t>
	  </section>

	<section anchor="Overview" title="Overview of operations">
	   <t>This section is informative and provides a description of SIPREC operations.</t>
	   
	   <t>As mentioned in the architecture document <xref target="I-D.ietf-siprec-architecture"/>, there are a couple of types of call flows based on the location of the Session Recording Client. The following sample call flows provide a quick overview of the operations between the SRC and the SRS.</t>
	   
	<section title="Delivering recorded media">
	   
       <t>When the SRC is deployed as a B2BUA, the SRC can route call requests from UA(A) to UA(B). As a SIP B2BUA, the SRC has access to the SDP and therefore can manipulate the media path between the user agents.  When the SRC is aware that it should be recording the conversation, the SRC may bridge the media between UA(A) and UA(B).  The SRC then establishes the Recording Session with the SRS and sends replicated media towards the SRS.</t>
	   
   	   <t>An endpoint can act as the SRC, and in this case may establish the Recording Session to the SRS.  Since the endpoint has access to the media in the communication session, the endpoint can send replicated media towards the SRS.</t>
	   
	   <t>The following basic call flow shows the SRC establishing a recording session towards the SRS. The call flow is essentially identical when the SRC is a B2BUA or as the endpoint itself.</t>

	   
	   <figure><artwork>
<![CDATA[
UA A           B2BUA                   UA B                   SRS
 |             (SRC)                    |                      |
 |(1)CS INVITE  |                       |                      |
 |------------->|                       |                      |
 |              |(2)CS INVITE           |                      |
 |              |---------------------->|                      |
 |              |               (3)OK   |                      |
 |              |<----------------------|                      |
 |        (4)OK |                       |                      |
 |<-------------|                       |                      |
 |              |(5)RS INVITE (CallId + Participants) with SDP |
 |              |--------------------------------------------->|
 |              |                       |       (6)OK with SDP |
 |              |<---------------------------------------------|
 |(7)CS RTP     |                       |                      |
 |=============>|======================>|                      |
 |<=============|<======================|                      |
 |              |(8)RS RTP              |                      |
 |              |=============================================>|
 |              |=============================================>|
 |(9)CS BYE     |                       |                      |
 |------------->|                       |                      |
 |              |(10)CS BYE             |                      |
 |              |---------------------->|                      |
 |              |(11)RS BYE             |                      |
 |              |--------------------------------------------->|
 |              |                       |                      |

         Figure 2: Basic Recording Call flow
]]>								 
	   </artwork></figure>  
	   
	   <t>A conference focus may also act as an SRC since it has access to all the media from each conference participant.  In this example, a user agent may REFER the conference focus to the SRS, and the SRC may choose to mix media streams from all participants as a single media stream towards the SRS.  In order to tell the conference focus to start a recording session to the SRS, the user agent can include the srs feature tag in the Refer-To header as per <xref target="RFC4508"/>.</t>
	   
	   <figure><artwork>
<![CDATA[
 UA A                 Focus                 UA B                SRS
   |                  (SRC)                  |                   |
   |                    |                    |                   |
   |      (already in a conference)          |                   |
   |<==================>|<==================>|                   |
   |(1)REFER sip:Conf-ID Refer-To:<SRS>;srs  |                   |
   |------------------->|                                        |
   |(2)202 Accepted     |                                        |
   |<-------------------|                                        |
   |  (3)NOTIFY (Trying)|                                        |
   |<-------------------|                                        |
   |(4)200 OK           |                                        |
   |------------------->|                                        |
   |                    |(5)INVITE Contact:Conf-ID;isfocus       |
   |                    |--------------------------------------->|
   |                    |                              (6)200 OK |
   |                    |<---------------------------------------|
   |                    | (7)RTP (mixed or unmixed)              |
   |                    |=======================================>|
   |     (8)NOTIFY (OK) |                                        |
   |<-------------------|                                        |
   |(9)200 OK           |                                        |
   |------------------->|                                        |

  Figure 3: Recording call flow - SRC as a conference focus
]]>	   
	   </artwork></figure>
	</section>
	
	<section title="Delivering recording metadata">
		<t>Certain metadata, such as the attributes of the recorded media stream, are already included in the SDP of the recording session.  This information is reused as part of the metadata.  The SRC may update or add additional metadata about recorded media streams in requests such as INVITE, reINVITE, and UPDATE in the Recording Session.  </t>
		
		<t>The rest of the metadata will be delivered as content.  Metadata can also be represented as a stream of events.  There are 4 ways to transport metadata events as outlined in the architecture document:</t>
		
		<t>SIP INVITE Content: for a simple call recording use case where no mid-dialog events are required to be delivered after the RS is established, the SIP INVITE may include content for all the metadata needed for the call.</t>
		
		<t>SIP INFO Package: metadata can be provided as an INFO package <xref target="I-D.ietf-sipcore-info-events"/> and sent as mid-dialog messages within the recording session.</t>
		
	    <figure><artwork>
<![CDATA[
   UA A                   UA B                    SRS
   (SRC)                    |                      |
    |(1)CS INVITE           |                      |
    |---------------------->|                      |
    |               (2)OK   |                      |
    |<----------------------|                      |
    |(3)RS INVITE (SDP)     |                      |
    |--------------------------------------------->|
    |                       |       (4)OK with SDP |
    |----------------------------------------------|
    |(5)CS RTP              |                      |
    |======================>|                      |
    |<======================|                      |
    |(6)RS RTP              |                      |
    |=============================================>|
    |=============================================>|
    |(7)RS INFO (metadata)  |                      |
    |--------------------------------------------->|
    |(8)CS BYE              |                      |
    |---------------------->|                      |
    |(9)RS BYE              |                      |
    |--------------------------------------------->|
    |                       |                      |
   
       Figure 4: Delivering metadata via SIP INFO
]]>								 
	   </artwork></figure>
	   
	    <t>[OPEN ISSUE: is Event Package desired?]</t>
		<t>Event Package: Metadata can also be conveyed from the SRC to the SRS using the SIP event notification mechanism <xref target="RFC3265"/>.  Using a subscription allows the SRC to deliver metadata to the SRS when the lifecycles of the CS and RS are different.  This also allows the SRC to deliver session metadata and recorded media separately, for example, an SRS that reports metadata for multiple recording sessions as a single subscription.</t>
			
		<t>Non-SIP transport: In some cases session metadata can be conveyed through non-SIP mechanism such as HTTP or JTAPI.  These non-SIP mechanisms are considered out of the scope of the SIPREC protocol, however, it is envisioned that a link with a URI can be provided in the recording session INVITE message so that the SRS can access the session metadata via the URI provided that the SRS supports the type of URI.</t>
	</section>
	   
	</section>
	
	<section anchor="extensions" title="SIP Extensions">

  <t>The following sections describe SIP extensions for the recording protocol.</t>

	   <t>The From header must contain the identity of the SRC.  Participants information is not recorded in the From or To header; they are included in the metadata information.</t>
	   
	   <t>Note that a recording session does not have to have live within the scope of a single communication session. As outline in REQ-005 of <xref target="I-D.ietf-siprec-req"/>, the recording session can be established in the absence of a communication session.  In this case, the SRC must offer an SDP with zero m= lines.</t>
	   
	   <t>Recorded media from multiple communication sessions may be handled in a single recording session.  The SRC provides a reference of each recorded media stream to the metadata described in the next section.</t>

	   <t>The SRC must be able to accept re-INVITE from SRS with the updated SDP as part of the session timer mechanism.</t>

<section title="Callee Capabilities Extensions for SIP Recording">
<t>
This section discusses  how the callee capabilities defined in <xref target="RFC3840" /> can be extended for SIP call recording. 
</t><t>
SIP Callee Capabilities defines feature tags which are used to represent characteristics and capabilities of a UA.  From RFC 3840:
</t><t>
<list><t>
  "Capability and characteristic information about a UA is carried as parameters of
   the Contact header field.  These parameters can be used within
   REGISTER requests and responses, OPTIONS responses, and requests and
   responses that create dialogs (such as INVITE)."
</t></list>
</t><t>
Note that feature tags are also used in dialog modifying requests and responses such as re-INVITE and responses to a re-INVITE, and UPDATE.  The 'isfocus' feature tag, defined in <xref target="RFC4579" /> is similar semantically to this case: it indicates that the UA is acting as a SIP conference focus, and is performing a specific action (mixing) on the resulting media stream.  This information is available from OPTIONS queries, dialog package notifications, and the SIP registration event package.
</t><t>
We propose the definition of two new feature tags:  'src' and 'srs'.
</t>
<section title='src Feature Tag'>
<t>
The 'src' feature tag is used in Contact URIs by the Session Recording Client (SRC) related to recording sessions.  A Session Recording Server uses the presence of this feature tag in dialog creating and modifying requests and responses to confirm that the dialog being created is for the purpose of a Recording Session. In addition, a registrar could discover that a UA is an SRC based on the presence of this feature tag in a registration.  Other SIP Recording extensions and behaviors can be triggered by the presence of this feature tag.
</t><t>
Note that we could use a single feature tag, such as 'recording' used by either an SRC or SRS to identify that the session is a recording session.  However, due to the differences in functionality and behavior between an SRC and SRS, using only one feature tag for both is not ideal.  For instance, if a routing mistake resulted in a request from a SRC being routed back to another SRC, if only one feature tag were defined, they would not know right away about the error and could become confused.  With separate feature tags, they would realize the error immediately and terminate the session.  Also, call logs would clearly show the routing error.
</t>

</section>

<section title='srs Feature Tag'>
<t>
The 'srs' feature tag is used in Contact URIs by the Session Recording Server (SRS) related to recording sessions.  A Session Recording Client uses the presence of this feature tag in dialog creating and modifying requests and responses to confirm that the dialog being created is for the purpose of a Recording Session (REQ-30). In addition, a registrar could discover that a UA is an SRS based on the presence of this feature tag in a registration. Other SIP Recording extensions and behaviors can be triggered by the presence of this feature tag.
</t>
<t>
To ensure a recording session is redirected to an SRS, an SRC can utilize the SIP Caller Preferences extensions, defined in <xref target="RFC3841" />.  The presence of a Accept-Contact: *;sip.srs allows a UA to request that the INVITE be routed to an SRS.  Note that to be completely sure, the SRC would need to include a Require: prefs header field field in the request.
</t>
</section>
</section>

       <section title="SDP handling">
       <t>SRC can include one or more media streams to the SRS.  The SRS must respond with the same number of media descriptors in the SDP body of the 200 OK.</t>
	   
	   <t>The SRC should use a=sendonly attribute as the SRC does not expect to receive media from the SRS.  As SRS only receives RTP streams from SRS, the 200 OK response will normally contain SDP with a=recvonly attribute.</t>
	   
	   <t>Since the SRC may send recorded media of different participants (or even mixed streams) to the SRS, the SDP must provide a label on each media stream in order to identify the recorded stream with the rest of the metadata.  The a=label attribute <xref target="RFC4574"/> will be used to identify each recorded media stream, and the label name will be used as the reference for the metadata.  Note that a participant may have multiple streams (audio and video) and each stream is labeled separately.</t>
	   
    <figure><artwork>
	<![CDATA[
           v=0
           o=SRS 0 0 IN IP4 172.22.3.8
           s=SRS
           c=IN IP4 172.22.3.8
           t=0 0
           m=audio 12241 RTP/AVP 0 4 8
           a=sendonly
           a=label:1
           m=audio 12242 RTP/AVP 98
           a=rtpmap:98 H264/90000
           a=fmtp:98 ...
           a=sendonly
           a=label:2
           m=audio 12243 RTP/AVP 0 4 8
           a=sendonly
           a=label:3
           m=audio 12244 RTP/AVP 98
           a=rtpmap:98 H264/90000
           a=fmtp:98 ...
           a=sendonly
           a=label:4

    Figure 6: Sample SDP with audio and video streams
]]>
   </artwork></figure>
	   
	   <t>To remove a recorded media stream from the recording session, send a reINVITE and set the port to zero in the m= line.</t>
	   <t>To add a recorded media stream, send a reINVITE and add a new m= line.</t>
	   
       <t>The SRS may respond with a=inactive attribute as part of the SDP in the 200 OK response when the SRS is not ready to receive recorded media.  The SRS can send re-INVITE to update the SDP with a=recvonly when it is ready to receive media.</t>
	   
       <t>The following sequence diagram shows an example of SRS responds with SDP that contain a=inactive, and then later update media information update with re-INVITE.</t>

   <figure><artwork>
<![CDATA[
  SRC                                                   SRS
   |                                                     |
   |(1) INVITE (no offer)                                |
   |---------------------------------------------------->|
   |                         (2)200 OK with SDP inactive |
   |<----------------------------------------------------|
   |(3) ACK with SDP inactive                            |
   |---------------------------------------------------->|
   |                      ...                            |
   |                     (4) re-INVITE with SDP recvonly |
   |<----------------------------------------------------|
   |(5)200 OK with SDP sendonly                          |
   |---------------------------------------------------->|
   |                                  (6) ACK with SDP   |
   |<----------------------------------------------------|
   |(7) RTP                                              |
   |====================================================>|
   |                      ...                            |
   |(8) BYE                                              |
   |---------------------------------------------------->|
   |                                             (9) OK  |
   |<----------------------------------------------------|
    
	   Figure 7: SRS to offer with a=inactive
]]>
   </artwork></figure>

        </section>
		<section title="Metadata">
		<t>The format of the full metadata will be described as part of the mechanism in <xref target="I-D.ram-siprec-metadata"/>.</t>
		
		<t>As mentioned in the previous section, the SDP of the recording session is the metadata for all recorded media streams. The label attribute contains a reference to the rest of the metadata information.</t>
		
	    <t>For all basic metadata information such as communication session, participants, call identifiers and direction, they can be included in the initial INVITE request sent by the SRC. Metadata can be included as content in the INVITE request.  A new "disposition-type" of Content-Disposition is defined for this purpose and the value is "recording-session".  There is a single payload type "application/rs-metadata" defined for recording metadata.</t>

        <t>The following SIP example for RS establishment between SRC and SRS with metadata as content.</t>
   <figure><artwork>
<![CDATA[
    INVITE sip:97753210@10.240.3.10:5060 SIP/2.0
    From: <sip:2000@10.226.240.3>;tag=35e195d2-947d-4585-946f-098392474
    To: <sip:Recorder@10.240.3.10>
    Call-ID: d253c800-b0d1ea39-4a7dd-3f0e20a@10.226.240.3
    CSeq: 101 INVITE
    Date: Thu, 26 Nov 2009 02:38:49 GMT
    Supported: timer
    Supported: replaces
    User-Agent: B2BUA
    Max-Forwards: 70
    Allow: INVITE,OPTIONS,INFO,BYE,CANCEL,ACK,PRACK,UPDATE,
      REFER,SUBSCRIBE,NOTIFY,PUBLISH
    Allow-Events: presence,kpml 
	Min-SE: 90
    Contact: <sip:2000@10.226.240.3:5060;transport=tcp>;isfocus;src
    Via: SIP/2.0/TCP 10.226.240.3:5060;branch=z9hG4bKdf6b622b648d9
    Session-Expires: 1800
    Content-Type: multipart/mixed;boundary=foobar
    Content-Length: [length]
    
    --foobar
    Content-Type: application/sdp
    
    v=0
    o=SRS 0 0 IN IP4 10.226.240.3
    c=IN IP4 10.226.240.3
    t=0 0
    m=audio 12241 RTP/AVP 0 4 8
    a=sendonly
    a=label:1
    
    --foobar
    Content-Type: application/rs-metadata
    Content-Disposition: recording-session
    
    [metadata content]

        Figure 8: Sample INVITE request for the recording session
]]>
   </artwork></figure>
      
        <section title="Delivering Metadata as a stream of events">
        <t>Recording metadata can delivered as a stream of events.  For this case, the metadata events is reported as SIP INFO messages within the recording session.  INFO Package is chosen as the mechanism because the metadata events does not always have to be associated with changes to the recorded media that requires the use of a reINVITE.  For example, when a new participant is joined to a recorded conference and the SRS is receiving the recorded media as a mixed audio stream, then there is no need to send a reINVITE update the recorded media; an INFO message with the necessary metadata to describe the new participant is sufficient information for the SRS.</t>
		
		<t>The Info Package name is "recording-session".  This name is used in both the Info-Package header as well as the Recv-Info header fields.</t>
		
		<t>The SRS must set the Recv-Info header to indicate that it is willing to receive INFO requests for Info Package recording-session.  The SRC is not required to set the Recv-Info header since it does not expect to receive any Info Package from the SRS.</t>
		
		<t>There is only a single payload type "application/rs-metadata" defined for the Info Package.  Similar to the metadata format for INVITE requests, the metadata format is defined in <xref target="I-D.ram-siprec-metadata"/>.</t>
		
		<t>This Info Package does not impose any rate limit or throttling mechansim for the stream of metadata events.  A recording session is not expect to emit a high rate of metadata events, however, there are scenarios where there can be short bursts metadata events generated.  For example, when a scheduled conference is being recorded, there can be a burst of participants joining the conference at the scheduled time and hence a burst of metadata update to the communication session.</t>
		
		<section title="Example - indication for which the SRS is willing to receive INFO Package">
		<t>The SRC initiates a recording session and indicates that it is the SRC.</t>
		   <figure><artwork>
<![CDATA[
    INVITE sip:srs@example.com SIP/2.0
    Via: SIP/2.0/TCP src12.example.com;branch=z9hG4bKdf6b622b648d9
    From: <sip:src@example.com>;tag=35e195d2
    To: <sip:srs@example.com>
    Call-ID: d253c800-b0d1ea39-4a7dd-3f0e20a@10.226.240.3
    CSeq: 101 INVITE
    Contact: <sip:src12.example.com>;src
    Content-Type: multipart/mixed;boundary=foobar
    Content-Length: ...
    
    ...
]]>
   </artwork></figure>
   
   <t>The SRS sends a 200 OK response and indicate that it is willing to receive metadata Info Package</t>
		
   <figure><artwork>
<![CDATA[
    SIP/2.0 200 OK
    Via: SIP/2.0/TCP src12.example.com;branch=z9hG4bKdf6b622b648d9
    From: <sip:src@example.com>;tag=35e195d2
    To: <sip:srs@example.com>;tag=12345678
    Call-ID: d253c800-b0d1ea39-4a7dd-3f0e20a@10.226.240.3
    CSeq: 101 INVITE
    Contact: <sip:srs07.example.com>;srs
    Recv-Info: recording-session
    Content-Type: application/sdp
    Content-Length: ...
    
    ...
]]>
	</artwork></figure>
	<t>After the recording session is established, the SRC sends an INFO request to the SRS to indicate participant changes to the communication session.</t>
   <figure><artwork>
<![CDATA[
    INFO sip:srs07.example.com SIP/2.0
    Via: SIP/2.0/TCP src12.example.com;branch=z9hG4bKdf6b622abcd
    From: <sip:src@example.com>;tag=35e195d2
    To: <sip:srs@example.com>;tag=12345678
    Call-ID: d253c800-b0d1ea39-4a7dd-3f0e20a@10.226.240.3
    CSeq: 102 INFO
    Contact: <sip:src12.example.com>;src
    Info-Package: recording-session
    Content-Type: application/rs-metadata
    Content-Disposition: Info-Package
    Content-Length: ...
    
    [metadata content]
]]>
   </artwork></figure>

		</section>
		
		</section>
		

   </section>

	   <section anchor="realtime_control" title="Recording Pause and Resume">
		 <t>To temporarily discontinue streaming and collection of recorded media from the SRC to the SRS, the SRC must send a reINVITE and set a=inactive for each recorded media stream to be paused.</t>
		 
		 <t>To resume streaming and collection of recorded media, the SRC must send a reINVITE and set a=sendonly for each recorded media stream to resume.</t>
		 
		 <t>Note that when a media stream in the CS is muted/unmuted, this information may conveyed in the metadata by the SRC.  The SRC should not modify the recorded media stream with a=inactive for mute since this operation is reserved for pausing the RS media.</t>
       </section>

   </section>
   
   <section anchor="transport" title="Transport">
   <t>TBD</t>
   </section>
   
   <section anchor="failover" title="Failover and Recovery">
   <t>TBD</t>
   </section>
   
   <section anchor="error_handling" title="Error Handling">
   <t>For handling errors with session establishment of the recording session, error handling of a standard SIP dialog applies.</t>
   
   <t>For handling errors with the metadata content such as syntactic or semantic errors, it is possible to introduce another Info content as a response to each metadata content sent by the SRS in order to allow the SRS to posivitively or negatively acknowledge each metadata content. [TBD - need to sync with metadata draft]</t>
   </section>
   
   <section anchor="iana" title="IANA Considerations">
     <section title="New Content-Disposition Parameter Registrations">
	 <t>This document registers a new "disposition-type" value in Content-Disposition header: recording-session.</t>
	 
	 <t>recording-session   the body describes the metadata information about the recording session</t>
	 </section>
	 <section title="MIME Type">
	 <t>This document registers the application/rs-metadata MIME media type in order to describe the recording session metadata. This media type is defined by the following information:</t>
	 <t>  Media type name: application</t>
	 <t>  Media subtype name: rs-metadata</t>
	 <t>  Required parameters: none</t>
	 <t>  Options parameters: none</t>
	 </section>
	 <section title="Info Package">
	 <t>This document registers a new INFO package for transpoting recording session metadata.</t>
	 <t>Info Package Name: recording-session</t>
	 <t>Reference: [RFCXXXX]</t>
	 </section>
   </section>

	<section anchor="Security" title="Security Considerations">
	<t>The recording session is fundamentally a standard SIP dialog <xref target="RFC3261"/>, therefore, the recording session can reuse any of the existing SIP security mechanism available for securing the recorded media as well as metadata.</t>
	
	   <section anchor="authentication" title="Authentication and Authorization">
	   <t>The recording session reuses the SIP mechanism to challenge requests that is based on HTTP authentication.  The mechanism relies on 401 and 407 SIP responses as well as other SIP header fields for carrying challenges and credentials.</t>
	   
	   <t>The SRS may have its own set of recording policies to authorize recording requests from the SRC. The use of recording policies is outside the scope of the SIPREC protocol.</t>
       </section>
	   
	   <section title="Privacy of metadata">
	   <t>Since metadata is transported as content in SIP messages such as INVITE and INFO Packages, the requests can be routed through SIP proxies between the SRC and SRS. If the metadata content is considered private, then the SRC and SRS will need to use end-to-end encryption such as S/MIME in addition to hop-by-hop security (SIP/TLS) to prevent access by proxies or B2BUAs.</t>
	   </section>

	</section>

  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
        &RFC2119;

        &RFC2804;

	    &RFC3261;
		
		&RFC3265;
		
		&RFC4574;

		&RFC3840;

		&RFC3841;

	    &I-D.ietf-siprec-req;
		
    </references>

    <references title="Informative References">
	  &I-D.ietf-siprec-architecture;
	
	  &I-D.ram-siprec-metadata;
	  
	  &I-D.ietf-sipcore-info-events;
	
      &RFC4508;
	
	  &RFC4579;

	  
    </references>
  </back>
</rfc>