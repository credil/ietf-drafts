<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt'?>
<?rfc toc='yes'?>
<?rfc tocompact='yes'?>
<?rfc tocdepth='6'?>
<?rfc symrefs='yes'?>
<?rfc compact='yes'?>
<rfc ipr="pre5378Trust200902" category="std" docName="draft-ietf-rohc-ikev2-extensions-hcoipsec-11">
	<front>
		<title abbrev="IKEv2 Extensions to Support ROHCoIPsec">IKEv2 Extensions to Support Robust Header Compression over IPsec</title>
		<date month="February" year="2010"/>
		<author initials="E." surname="Ertekin" fullname="Emre Ertekin">
			<organization>Booz Allen Hamilton</organization>
			<address>
				<postal>
					<street>5220 Pacific Concourse Drive, Suite 200</street>
					<city>Los Angeles</city>
					<region>CA</region>
					<code>90045</code>
					<country>US</country>
				</postal>
				<email>ertekin_emre@bah.com</email>
			</address>
		</author>
		<author initials="C." surname="Christou" fullname="Chris Christou">
			<organization>Booz Allen Hamilton</organization>
			<address>
				<postal>
					<street>13200 Woodland Park Dr.</street>
					<city>Herndon</city>
					<region>VA</region>
					<code>20171</code>
					<country>US</country>
				</postal>
				<email>christou_chris@bah.com</email>
			</address>
		</author>
		<author initials="R." surname="Jasani" fullname="Rohan Jasani">
			<organization>Booz Allen Hamilton</organization>
			<address>
				<postal>
					<street>13200 Woodland Park Dr.</street>
					<city>Herndon</city>
					<region>VA</region>
					<code>20171</code>
					<country>US</country>
				</postal>
				<email>ro@breakcheck.com</email>
			</address>
		</author>
		<author initials="T." surname="Kivinen" fullname="Tero Kivinen">
			<organization>Safenet, Inc.</organization>
			<address>
				<postal>
					<street>Fredrikinkatu 47</street>
					<city>HELSINKI</city>
					<country>FI</country>
				</postal>
				<email>kivinen@iki.fi</email>
			</address>
		</author>
		<author initials="C." surname="Bormann" fullname="Carsten Bormann">
			<organization>Universitaet Bremen TZI</organization>
			<address>
				<postal>
					<street>Postfach 330440</street>
					<city>Bremen  D-28334</city>
					<country>Germany</country>
				</postal>
				<email>cabo@tzi.org</email>
			</address>
		</author>
		<abstract>
			<t>In order to integrate Robust Header Compression (ROHC) with IPsec, a mechanism is needed to signal ROHC channel parameters between end-points.  Internet Key Exchange (IKE) is a mechanism which can be leveraged to exchange these parameters.  This document specifies extensions to IKEv2 that will allow ROHC and its associated channel parameters to be signaled for IPsec security associations (SAs).</t>
		</abstract>
	</front>
	<middle>
		<section title="Introduction">
			<t>Increased packet header overhead due to IPsec [IPSEC] can result in the inefficient utilization of bandwidth.  Coupling ROHC [ROHC] with IPsec offers an efficient way to transfer protected IP traffic.</t>
                  	<t>ROHCoIPsec [ROHCOIPSEC] requires configuration parameters to be initialized at the compressor and decompressor.  Current specifications for hop-by-hop ROHC negotiate these parameters through a link-layer protocol such as Point-to-Point Protocol (PPP) (i.e. ROHC over PPP [ROHC-PPP]). Since key exchange protocols (e.g.  IKEv2 [IKEV2]) can be used to dynamically establish parameters between IPsec peers, this document defines extensions to IKEv2 to signal ROHC parameters for ROHCoIPsec.</t>
		</section>
            <section title="Terminology">
                  <t>   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [BRA97].</t>
	    </section>
		<section title="ROHC Channel Initialization for ROHCoIPsec">
			<t>The following subsections define extensions to IKEv2 which enables an initiator and a responder to signal parameters required to establish a ROHC channel for a ROHCoIPsec session.</t>			
			<section title="ROHC_SUPPORTED Notify Message">
			    <t>ROHC channel parameters MUST be signaled separately for each ROHC-enabled IPsec SA. Specifically, a new Notify message type MUST be included in the IKE_AUTH and CREATE_CHILD_SA exchanges whenever a new ROHC-enabled IPsec SA is created, or an existing one is rekeyed.</t>
 				<t>The Notify payload sent by the initiator MUST contain the channel parameters for the ROHC session.  These parameters indicate the capabilities of the ROHC decompressor at the initiator.  Upon receipt of the initiator's request, the responder will either ignore the payload (if it doesn't support ROHC or the proposed parameters) or respond with a Notify payload that contains its own ROHC channel parameters.</t>
				<t>Note that only one Notify payload is used to convey ROHC parameters.  If multiple Notify payloads containing ROHC parameters are received, all but the first such Notify payload MUST be dropped.   If the initiator does not receive a Notify Payload with the responder's ROHC channel parameters, ROHC MUST NOT be enabled on the Child SA. </t>
				<t>A new Notify Message Type value, denoted ROHC_SUPPORTED, indicates that the Notify payload is conveying ROHC channel parameters (Section 4).</t>
				<t>The Notify Payload (defined in RFC 4306 [IKEV2]) is illustrated in Figure 1.</t>
 				<figure title="" suppress-title="false" align="center" alt="" width="" height=""><artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height="">
					<![CDATA[
                        1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ! Next Payload  !C!  RESERVED   !         Payload Length        !
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   !  Protocol ID  !   SPI Size    !      Notify Message Type      !
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   !                                                               !
   ~                Security Parameter Index (SPI)                 ~
   !                                                               !
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   !                                                               !
   ~                       Notification Data                       ~
   !                                                               !
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                      Figure 1. Notify Payload format.
		]]></artwork></figure>
	      <t><postamble/></t>
<t>The fields of the Notify Payload are set as follows:</t>
		         <t>Next Payload (1 octet)
			 <list style="empty"><t>
			 Identifier for the payload type of the next payload in the message.  Further details can be found in RFC 4306 [IKEV2].</t></list></t>
				<t>Critical (1 bit)
				<list style="empty"><t>
				Since all IKEv2 implementations support the Notify Payload, this value MUST be set to zero.</t></list></t>
				<t>Payload Length (2 octets)
				<list style="empty"><t>
				As defined in RFC 4306 [IKEV2], this field indicates the length of the current payload, including the generic payload header.</t></list></t>
				<t>Protocol ID (1 octet)
				<list style="empty"><t>
				Since this Notification message is used during the creation of a Child SA, this field MUST be set to zero.</t></list></t>
				<t>SPI Size (1 octet)
				<list style="empty"><t>
				This value MUST be set to zero, since no SPI is applicable (ROHC parameters are set at SA creation, thus the SPI has not been defined).</t></list></t>
				<t>Notify Message Type (2 octets)
				<list style="empty"><t>
				This field MUST be set to ROHC_SUPPORTED.</t></list></t>
                        <t>Security Parameter Index (SPI)
				<list style="empty"><t>
				Since the SPI Size field is 0, this field MUST NOT be transmitted.</t></list></t>
                        <t>Notification Data (variable)
				<list style="empty"><t>
				This field MUST contain at least three ROHC Attributes (Section 3.1.1).</t></list></t>

				<section title="ROHC Attributes">
				<t>The ROHC_SUPPORTED Notify message is used to signal channel parameters between ROHCoIPsec compressor and decompressor.  The message contains a list of "ROHC Attributes" which contain the parameters required for the ROHCoIPsec session.</t>
 				<t>The format for signaling ROHC Attributes takes a similar format to the Transform Attributes described in Section 3.3.5 of RFC 4306[IKEV2].  The format of the ROHC Attribute is shown in Figure 2.</t>
				<t>
			          <figure title="" suppress-title="false" align="center" alt="" width="" height="">
                                <artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height=""><![CDATA[
                           1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      !A!     ROHC Attribute Type     !  AF=0  ROHC Attribute Length  !
      !F!                             !  AF=1  ROHC Attribute Value   !
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      !                   AF=0  ROHC Attribute Value                  !
      !                   AF=1  Not Transmitted                       !
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                Figure 2.  Format of the ROHC Attribute.

                                    ]]></artwork>
					<postamble />
					</figure>

				</t>
				<list style="symbols">
                              <t>Attribute Format (AF) (1 bit) - If the AF bit is a zero (0), then the ROHC Attribute is expressed in a Type/Length/Value format.  If the AF bit is a one (1), then the ROHC attribute is expressed in a Type/Value (TV) format.</t>
					<t>ROHC Attribute Type (15 bits) - Unique identifier for each type of ROHC attribute (Section 3.1.2).</t>
      				<t>ROHC Attribute Length (2 octets) - Length (in octets) of the Attribute Value.  When the AF bit is a one (1), the ROHC Attribute Value is 2 octets and the ROHC Attribute Length field is not present.</t>
					<t>ROHC Attribute Value (variable length) - Value of the ROHC Attribute associated with the ROHC Attribute Type.  If the AF bit is a zero (0), this field's length is defined by the ROHC Attribute Length field.  If the AF bit is a one (1), the length of the ROHC Attribute Value is 2 octets.</t>
				</list>	
			</section>
			<section title="ROHC Attribute Types">
				<t>This section describes five ROHC Attribute Types: MAX_CID, ROHC_PROFILE, ROHC_INTEG, ROHC_ICV_LEN, and MRRU.  The value allocated for each ROHC Attribute Type is specified in Section 4.</t>  
				
				<t>MAX_CID (Maximum Context Identifier, AF = 1)
					<list style="empty"><t>The MAX_CID attribute is a mandatory attribute.  Exactly one MAX_CID attribute MUST be sent.  The MAX_CID field indicates the maximum value of a context Identifier supported by the ROHCoIPsec decompressor.  This attribute value is two octets in length.  The range of values for MAX_CID MUST be at least 0 and at most 16383 (the value 0 implies having one context).  The recipient of the MAX_CID Attribute MUST only use up to MAX_CID context identifiers for compression.</t></list>
					<t><list style="empty"><t>Note that the MAX_CID parameter is a one-way notification (i.e., the sender of the attribute indicates what it can handle to the other end); therefore, different values for MAX_CID may be announced in each direction.</t></list></t>

				</t>
				<t>ROHC_PROFILE (ROHC Profile, AF = 1)
                        		<list style="empty"><t>The ROHC_PROFILE attribute is a mandatory attribute.  Each ROHC_PROFILE attribute has a fixed length of 4 octets, and its attribute value is a two-octet long ROHC Profile Identifier [ROHCPROF].  There MUST be at least one ROHC_PROFILE attribute included in the ROHC_SUPPORTED Notify Message.  If multiple ROHC_PROFILE attributes are sent, the order is arbitrary.  The recipient of a ROHC_PROFILE attribute(s) MUST only use the profile(s) proposed for compression.</t></list>
				        <t><list style="empty"><t>Several common profiles are defined in RFC 3095 [ROHCV1] and 5225 [ROHCV2].  Note, however, that two versions of the same profile MUST NOT be signaled.  For example, if a ROHCoIPsec decompressor supports both ROHCv1 UDP (0x0002) and ROHCv2 UDP (0x0102), both profiles MUST NOT be signaled.  This restriction is needed, as packets compressed by ROHC express only the 8 least significant bits of the profile identifier; since the 8 least significant bits for corresponding profiles in ROHCv1 and ROHCv2 are identical, the decompressor is not capable of determining the ROHC version that was used to compress the packet.</t></list></t>
                                        <t><list style="empty"><t>Note that the ROHC_PROFILE attribute is a one-way notification; therefore, different values for ROHC_PROFILE may be announced in each direction.</t></list></t>
                        </t>             			
				<t>ROHC_INTEG (Integrity Algorithm for Verification of Decompressed Headers, AF = 1)
                   	    		<list style="empty"><t>The ROHC_INTEG attribute is a mandatory attribute.  There MUST be at least one ROHC_INTEG attribute contained within the ROHC_SUPPORTED Notify message.  The attribute value contains the identifier of an integrity algorithm that is used to ensure the integrity of the decompressed packets (i.e. ensure that the decompressed packet headers are identical to the original packet headers prior to compression). </t></list></t>
  					<t><list style="empty"><t>Authentication algorithms that MUST be supported are specified in the "Authentication Algorithms" table in section 3.1.1 ("ESP Encryption and Authentication Algorithms") of RFC 4835 [CRYPTO-ALG] (or its successor).  </t>
						  		     <t>The integrity algorithm is represented by a two octet value that corresponds to the value listed in the IKEv2 Parameters registry [IKEV2-PARA] "For Transform Type 3 (Integrity Algorithm)" section.  Upon receipt of the ROHC_INTEG attribute(s), the responder MUST select exactly one of the proposed algorithms; the chosen value is sent back in the ROHC_SUPPORTED Notify message returned by the responder to the initiator.  The selected integrity algorithm MUST be used in both directions.  If the responder does not accept any of the algorithms proposed by the initiator, ROHC MUST NOT be enabled on the SA.</t>
				    </list>
				    <t><list style="empty">
								<t>It is noted that:
									<list style="numbers">
										<t>The keys (one for each direction) for this Integrity Algorithm are derived from the IKEv2 KEYMAT (see [IKEV2], Section 2.17).  For the purposes of this key derivation, ROHC is considered to be an IPsec protocol.  When a ROHC-enabled CHILD_SA is rekeyed, the key associated with this integrity algorithm is rekeyed as well.</t>
                			                    		        <t>A ROHCoIPsec initiator MAY signal a value of zero (0x0000) in a ROHC_INTEG attribute.  This corresponds to "NONE" in the Integrity Algorithm Transform ID registry.  The ROHCoIPsec responder MAY select this value by responding to the initiator with a ROHC_INTEG attribute of zero (0x0000).  In this scenario, no integrity algorithm is applied in either direction.</t>
										<t>The ROHC_INTEG attribute is a parameter that is negotiated between two ends.  In other words, the initiator indicates what it supports; the responder selects one of the ROHC_INTEG values proposed, and sends the selected value to the initiator.</t>
									</list>
								</t>
				    </list></t>
				</t>
				<t>ROHC_ICV_LEN (Integrity Algorithm Length, AF = 1)
					<list style="empty"><t>The ROHC_ICV_LEN attribute is an optional attribute.  There MAY be zero or one ROHC_ICV_LEN attribute contained within the ROHC_SUPPORTED Notify message.  The attribute specifies the number of Integrity Check Value (ICV) octets the sender expects to receive on incoming ROHC packets.  The ICV of the negotiated ROHC_INTEG algorithms MUST be truncated to ROHC_ICV_LEN bytes by taking the first ROHC_ICV_LEN bytes of the output. Both the initiator and responder announce a single value for their own ICV length.  The recipient of the ROHC_ICV_LEN attribute MUST truncate the ICV to the length contained in the message.  If the value of the ROHC_ICV_LEN attribute is zero, then an ICV MUST NOT be sent.  If no ROHC_ICV_LEN attribute is sent at all or the ROHC_ICV_LEN is larger than the length of the ICV of selected algorithm, then the full ICV length as specified by the ROHC_INTEG algorithm MUST be sent.</t></list>
					<t><list style="empty"><t>Note that the ROHC_ICV_LEN attribute is a one-way notification; therefore, different values for ROHC_ICV_LEN may be announced in each direction.</t></list></t>
                        </t>
				<t>MRRU (Maximum Reconstructed Reception Unit, AF = 1)
					<list style="empty"><t>The MRRU attribute is an optional attribute.  There MAY be zero or one MRRU attribute contained within the ROHC_SUPPORTED Notify message.  The attribute value is two octets in length.  The attribute specifies the size of the largest reconstructed unit in octets that the ROHCoIPsec decompressor is expected to reassemble from ROHC segments (see Section 5.2.5 of [ROHCV1]).  This size includes the CRC, and the ROHC ICV.   If MRRU is 0 or if no MRRU attribute is sent, segment headers MUST NOT be transmitted on the ROHCoIPsec channel.</t></list>
					<t><list style="empty"><t>Note that the MRRU attribute is a one-way notification; therefore, different values for MRRU may be announced in each direction.</t></list></t>
			      </t>			
				<t>If an unknown ROHC Attribute Type Value is received, it MUST be silently ignored. </t>
			</section>
		</section>
		<section title="ROHC Channel Parameters that are Implicitly Set">
			<t>The following ROHC channel parameters MUST NOT be signaled:
			<list style="symbols">
			    <t>LARGE_CIDS: This value is implicitly determined by the value of MAX_CID (e.g. if MAX_CID is &lt;= 15, LARGE_CIDS is assumed to be 0).</t>
			    <t>FEEDBACK_FOR: When a pair of SAs are created (one in each direction), the ROHC channel parameter FEEDBACK_FOR MUST be set implicitly to the other SA of the pair (i.e. the SA pointing in the reverse direction).</t>                  
			</list></t>
		</section>
		</section>


		<section title="Security Considerations">
			<t>The ability to negotiate the length of the ROHC ICV may introduce vulnerabilities to the ROHCoIPsec protocol.  Specifically, the capability to signal a short ICV length may result in scenarios where erroneous packets are forwarded into the protected domain.  This security consideration is documented in further detail in Section 6.1.4 of [ROHCOIPSEC] and Section 5 of [IPSEC-ROHC].</t>
			<t>This security consideration can be mitigated by using longer ICVs, but this comes at the cost of additional overhead, which reduces the overall benefits offered by ROHCoIPsec.</t>
		</section>
		<section title="IANA Considerations">
			<t>This document defines a new Notify Message (Status Type).  Therefore, IANA is requested to allocate one value from the IKEv2 Notify Message registry to indicate ROHC_SUPPORTED.  Note that, since this Notify Message is a Status Type, values ranging from 0 to 16383 must not be allocated for ROHC_SUPPORTED.</t>
			<t>In addition, IANA is requested to create a new "ROHC Attribute Types" registry in the IKEv2 Parameters Registry [IKEV2-PARA].  Within the "ROHC Attribute Types" registry, this document allocates the following values:</t>
			<t><figure title="" suppress-title="false" align="center" alt="" width="" height="">
                                <artwork xml:space="preserve" name="" type="" align="left" alt="" width="" height=""><![CDATA[Registry:
Value        ROHC Attribute Type                        Format Reference
-----------  --------------------------------------     ------ ---------
0            RESERVED                                          [rfcThis]
1            Maximum Context Identifier (MAX_CID)        TV    [rfcThis]
2            ROHC Profile (ROHC_PROFILE)                 TV    [rfcThis]
3            ROHC Integrity Algorithm (ROHC_INTEG)       TV    [rfcThis]
4            ROHC ICV Length in bytes (ROHC_ICV_LEN)     TV    [rfcThis]
5            Maximum Reconstructed Reception Unit (MRRU) TV    [rfcThis]
6-16383      Unassigned                                        [rfcThis]
16384-32767  Private use                                       [rfcThis]
                                    ]]></artwork>
					<postamble />
			</figure></t>
           <t>Following the policies outlined in [IANA-CONSIDERATIONS], the IANA policy for assigning new values for the ROHC Attribute Types registry shall be Expert Review.</t>
  		   <t>For registration requests, the responsible IESG area director will appoint the Designated Expert.  The Designated Expert will post a request to both the rohc and ipsec mailing lists (or a successor designated by the Area Director) for comment and review.  The Designated Expert will either approve or deny the registration request and publish a notice of the decision to both mailing lists (or their successors), as well as informing IANA.  A denial notice must be justified by an explanation.</t>
		</section>
		<section title="Acknowledgments">
			<t>The authors would like to thank Mr. Sean O'Keeffe, Mr. James Kohler, and Ms. Linda Noone of the Department of Defense, as well as Mr. Rich Espy of OPnet for their contributions and support in the development of this document.  </t>
			<t>The authors would also like to thank Mr. Yoav Nir, and Mr. Robert A Stangarone Jr.: both served as committed document reviewers for this specification.</t>
			<t>In addition, the authors would like to thank the following for their numerous reviews and comments to this document:</t>
<t><list style="symbols">
<t>Mr. Magnus Westerlund</t>
<t>Dr. Stephen Kent</t>
<t>Mr. Lars-Erik Jonsson</t>
<t>Mr. Pasi Eronen</t>
<t>Dr. Jonah Pezeshki</t>
<t>Mr. Carl Knutsson</t>
<t>Dr. Joseph Touch</t>
<t>Mr. David Black</t>
<t>Mr. Glen Zorn</t>
</list></t>
<t>Finally, the authors would also like to thank Mr. Tom Conkle, Ms. Michele Casey, and Mr. Etzel Brower.</t>
		</section>


	</middle>


	<back>
		<references title="Normative References">
			<reference anchor="IPSEC">
				<front>
					<title>Security Architecture for the Internet Protocol</title>
					<author initials="S." surname="Kent" fullname="S. Kent">
						<organization/>
					</author>
					<author initials="K." surname="Seo" fullname="K. Seo">
						<organization/>
					</author>
					<date month="December" year="2005"/>
				</front>
				<seriesInfo name="RFC" value="4301"/>
			</reference>
			<reference anchor="ROHC">
				<front>
					<title> The RObust Header Compression (ROHC) Framework</title>
					<author initials="L-E." surname="Jonsson" fullname="L-E. Jonsson">
						<organization/>
					</author>
					<author initials="G." surname="Pelletier" fullname="G. Pelletier">
						<organization/>
					</author>
					<author initials="K." surname="Sandlund" fullname="K. Sandlund">
						<organization/>
					</author>
					<date month="July" year="2007"/>
				</front>
				<seriesInfo name="RFC" value="4995"/>
			</reference>
			<reference anchor="IKEV2">
				<front>
					<title>Internet Key Exchange (IKEv2) Protocol</title>
					<author initials="C." surname="Kaufman">
						<organization/>
					</author>
					<date month="December" year="2005"/>
				</front>
				<seriesInfo name="RFC" value="4306"/>
			</reference>
			<reference anchor="BRA97">
			       <front>
				     <title>Key words for use in RFCs to Indicate Requirement Levels</title>
			           <author initials="S." surname="Bradner" fullname="S. Bradner">
				           <organization />
			           </author>
			          <date month="March" year="1997" />
			       </front>
			     <seriesInfo name="RFC" value="2119" />
		      </reference>
			
			<reference anchor="ROHCV1">
				<front>
					<title>RObust Header Compression (ROHC): Framework and four profiles: RTP, UDP, ESP, and uncompressed</title>
					<author initials="C." surname="Bormann">
						<organization/>
					</author>
					<author initials="C." surname="Burmeister">
						<organization/>
					</author>
					<author initials="M." surname="Degermark">
						<organization/>
					</author>
					<author initials="H." surname="Fukushima">
						<organization/>
					</author>
					<author initials="H." surname="Hannu">
						<organization/>
					</author>
					<author initials="L." surname="Jonsson">
						<organization/>
					</author>
					<author initials="R." surname="Hakenberg">
						<organization/>
					</author>
					<author initials="T." surname="Koren">
						<organization/>
					</author>
					<author initials="K." surname="Le">
						<organization/>
					</author>
					<author initials="Z." surname="Liu">
						<organization/>
					</author>
					<author initials="A." surname="Martensson">
						<organization/>
					</author>
					<author initials="A." surname="Miyazaki">
						<organization/>
					</author>
					<author initials="K." surname="Svanbro">
						<organization/>
					</author>
					<author initials="T." surname="Wiebke">
						<organization/>
					</author>
					<author initials="T." surname="Yoshimura">
						<organization/>
					</author>
					<author initials="H." surname="Zheng">
						<organization/>
					</author>
					<date month="July" year="2001"/>
				</front>
				<seriesInfo name="RFC" value="3095"/>
			</reference>

			<reference anchor="ROHCV2">
        			<front>
          			<title>RObust Header Compression Version 2 (ROHCv2): Profiles for RTP, UDP, IP, ESP and UDP Lite</title>
          			<author initials="G." surname="Pelletier">
            		<organization />
          			</author>
          			<author initials="K." surname="Sandlund">
            		<organization />
          			</author>
          			<date month="April" year="2008" />
        			</front>
        			<seriesInfo name="RFC" value="5225" />
      		</reference>
			<reference anchor="IPSEC-ROHC">
        			<front>
        				<title>IPsec Extensions to Support ROHCoIPsec</title>
          				<author initials="E." surname="Ertekin">
            				<organization />
          				</author>
	  				<author initials="C." surname="Christou">
            				<organization />
          				</author>
	  				<author initials="C." surname="Bormann">
            				<organization />
          				</author>
          				<date month="February" year="2010" />
			     </front>
		           <seriesInfo name="work in progress" value="" />
		      </reference>
			<reference anchor="IANA-CONSIDERATIONS">
				<front>
		       <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
					<date month="October" year="1998"/>
					<author initials="T." surname="Narten">
						<organization />
					</author>
					<author initials="H." surname="Alvestrand">
            					<organization />
          				</author>
		            	</front>
				<seriesInfo name="RFC" value="5226"/>
			</reference>	
		</references>

		<references title="Informative References">
			<reference anchor="ROHCOIPSEC">
				<front>
					<title>Integration of Header Compression over IPsec Security Associations</title>
					<author initials="E." surname="Ertekin">
						<organization/>
					</author>
					<author initials="R." surname="Jasani">
						<organization/>
					</author>
					<author initials="C." surname="Christou">
						<organization/>
					</author>
					<author initials="C." surname="Bormann">
						<organization/>
					</author>
					<date month="February" year="2010"/>
				</front>
				<seriesInfo name="work in progress" value=""/>
			</reference>

			<reference anchor="ROHC-PPP">
				<front>
					<title>Robust Header Compression (ROHC) over PPP</title>
					<author initials="C." surname="Bormann">
						<organization/>
					</author>
					<date month="April" year="2002"/>
				</front>
				<seriesInfo name="RFC" value="3241"/>
			</reference>
			<reference anchor="ROHCPROF">
				<front>
					<title>RObust Header Compression (ROHC) Profile Identifiers</title>
					<author><organization/></author>
					<date month="May" year="2008"/>
				</front>
				<seriesInfo name="www.iana.org/assignments/rohc-pro-ids" value=""/>
			</reference>
			<reference anchor="CRYPTO-ALG">
				<front>
					<title>Cryptographic Algorithm Implementation Requirements for Encapsulating Security Payload (ESP) and Authentication Header (AH)</title>
					<author initials="V." surname="Manral">
						<organization/>
					</author>
					<date month="April" year="2007"/>
				</front>
				<seriesInfo name="RFC" value="4835"/>

			</reference>
			<reference anchor="IKEV2-PARA">
				<front>
					<title>IKEv2 Parameters, http://www.iana.org/assignments/ikev2-parameters</title>
					<date month="November" year="2009"/>
					<author surname="IANA">
            				<organization />
          				</author>
		            	</front>
			</reference>		
		</references>
	</back>
</rfc>
