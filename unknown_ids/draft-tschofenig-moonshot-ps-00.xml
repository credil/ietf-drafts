<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="no"?>
<?rfc iprnotified="no" ?>
<?rfc strict="no" ?>
<?rfc compact="no" ?>
<?rfc subcompact="no" ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">

]>
<rfc category="std" docName="draft-tschofenig-moonshot-ps-00.txt" ipr="trust200902">
  <front>
    <title abbrev="Federated Auth. Beyond The Web: PS">Federated Authentication Beyond The Web: Problem Statement and Requirements</title>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization>Nokia Siemens Networks</organization>
      <address>
        <postal>
          <street>Linnoitustie 6</street>
          <city>Espoo</city>
          <code>02600</code>
          <country>Finland</country>
        </postal>
        <phone>+358 (50) 4871445</phone>
        <email>Hannes.Tschofenig@gmx.net</email>
        <uri>http://www.tschofenig.priv.at</uri>
      </address>
    </author>
    <date year="2010"/>
    <area>Internet</area>
    <workgroup>MOONSHOT</workgroup>
    <keyword>Internet-Draft</keyword>
    <keyword>Federated Authentication</keyword>
    <keyword>AAA</keyword>
    <keyword>RADIUS</keyword>
    <keyword>Diameter</keyword>
    <keyword>GSS-API</keyword>
    <keyword>EAP</keyword>
    <keyword>SASL</keyword>
    <abstract>
      <t>It is quite common that application developers and system architects are in a need for authentication and authorization support in a distributed environment. At least three parties need to cooperate, namely the end host, the identity provider, and the relying party. At the end of the exchange the identity provider asserts identity information or certain attributes to the relying party without exposing the user's long-term secret to the relying party.  
</t>
<t>While the problem sounds challenging and interesting but it is not new. In fact, various IETF groups have produced specifications to solve this problem, such as Kerberos, RADIUS, and Diameter. Outside the IETF various Single-Sign-On solution for HTTP-based applications have been developed as well. 
</t> 
<t>
The reader might therefore wonder why there is need for new work given the existence of readily available solutions. This document tries to answer this question in a compact fashion.
</t>
    </abstract>
  </front>

  <middle>
    <!-- ////////////////////////////////////////////////////////////////////////////////// -->

    <section anchor="introduction" title="Introduction">


	<t>The typical setup for a three party protocol has the following few entities involved. 
	<xref target="framework"/> shows the situation. It might surprise that there are actually 
	four parties; we will address the invisible party in the middle a little bit later. 
</t>
<t>With three party protocols there are a number of different protocol variants possible, as the available crypto-literature shows. We will not discuss the different options in this document. What is relevant is that a real world entity is behind the end host and responsible for establishing some form of contract with the identity provider, even if it is only as weak as completing a web form and to confirm the verification email. The outcome of this initial registration step is that credentials are made available to the identity provider and to the end host (or the user). It is important to highlight that in some scenarios there might indeed be a human behind the device denoted as end host and in other cases there is no human involved in the actual protocol execution.</t>

<t>We assume that the identity provider and the relying party belong to different administrative domains. Very often there is some form of relationship between the identity provider and the relying party. This is particularly important when the relying party wants to use information obtained from the identity provider for authorization decisions and when the identity provider does not want to release information to every relying party (or only under certain conditions). While it is possible to have a bilateral agreement between every identity provider and every relying party on an Internet scale this setup does require some intermediary, the "stuff-in-the-middle". Please note that the lack of scalability is not caused by technical limitations but rather by business limitations since the agreements between identity providers and the relying parties are often business contracts, i.e. they are about money. The "stuff-in-the-middle" is a placeholder for technical interoperability as well as business practices and operational arrangements, many aspects are outside the scope of the IETF. 
</t> 
  
	
	            <t>
                <figure title="Three Party Authentication Framework" anchor="framework">
                    <artwork><![CDATA[
                         -----
                       /-     -\
                     //         \\
                     /           \
        ----        |             |        ----
    ///-    -\\\   |               |   ///-    -\\\
   /            \  |   Stuff-in-   |  /            \
  |              |-+   the-Middle  +-|              |
  |   Identity   | |               | |  Relying     |
  |   Provider   | |               | |  Party       |
  |              |  |             |  |              |
   \            /    \           /    \            /
    \\\-    -///     \\         //     \\\-    -///
        ----           \-     -/           ----
            <            -----              >
             \                             /
              \                           /
               \                         /
               \                        /
                \                      /
                 \                    /
                  \  +------------+  /
                   \ |            | /
                    v|  End Host  |v
                     |            |
                     |            |
                     +------------+
]]></artwork>
                </figure>
            </t>

<t>Designing new three party authentication and authorization protocols is hard and cryptographic flaws common in designs. Achieving widespead deployment is even more difficult. The HTTP-based Web has enjoyed a lot of attention from the industry with respect to this problem and some amount of success can be noticed even though many of the business aspects with the "stuff-in-the-middle" still has to be sorted out. This document does not focus on an HTTP-based environment and instead focuses on those protocols where HTTP is not used. Despite the increased excitement for layering every protocol on top of HTTP there are still a number of protocols available that do not use HTTP-based transports. Many of these protocols are lacking an authentication and authorization framework of the style shown in <xref target="framework"/>.</t>

<t>Interestingly, for network access authentication the usage of the AAA framework with RADIUS and Diameter was quite successful from a deployment point of view. To map the terminology used in <xref target="framework"/> to the AAA framework the identity provider corresponds to the AAA server, the relying party corresponds to the AAA client, and the "stuff-in-the-middle" are AAA proxies and relays (particularly if they are operated by third parties, such as AAA brokers and clearing houses). The front-end, i.e. the end host to AAA client communication, is in case of network access authentication offered by link layer protocols that forward authentication protocol exchanges back-and-forth.</t> 

<t>Is it possible to design a system that builds on top of successful protocols to offer non-Web-based protocols with a solid starting point for authentication and authorization in a distributed system? 
</t>
			
    </section> 

	
	    <!-- ////////////////////////////////////////////////////////////////////////////////// -->

	        <section anchor="terminology" title="Terminology">
            <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD
                NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as
                described in <xref target="RFC2119"/>.</t>
        </section>

		
	    <!-- ////////////////////////////////////////////////////////////////////////////////// -->

<section title="Assumptions and Requirements"> 

<t>Some requirements restrict the solution space more than others. In this particular case the main requirement is to re-use an existing infrastructure, namely the AAA framework. Briefly stated: The solution MUST make use of the AAA infrastructure (RADIUS and Diameter). Ideally, modifications at AAA servers SHOULD be kept at a minimum. Modifications to the AAA infrastructure that affect operational aspects MUST NOT be made.</t> 

<t>The next requirement concerns security: The relying party MUST NOT get in possession of the long-term secret of the entity that is authenticated towards the AAA server. Since there is no single authentication mechanism that will be used everywhere there is another associated requirement: The authentication framework MUST allow for the flexible integration of authentication mechanisms. </t>

<t><list style="empty"> 
<t>Those who are familiar with the AAA framework might now think about the Extensible Authentication Protocol (EAP) framework. It is standardized, and deployed. The choices are limited.</t>
</list> 
</t>

<t>Assuming that this design decision is taken for granted the remaining work is with the integration of the AAA infrastructure into non-Web-based application protocols. <xref target="front-end"/> shows it graphically.</t>


<t>
               <figure title="Front-End Integration" anchor="front-end">
                    <artwork><![CDATA[
                                  +--------------+ business
                                  |AAA Server    | agreements
                                  |(Identity     | <......+
                                  |Provider)     |        .
                                  |              |        .
                                  +------------+-+        .
                                  --^----------|--   .    .
                             /////  |          |  \\\\\   .
                           //       |          |       \\ .
                          |         |  AAA     |         |.
                          |         | protocol |         |.
                          |         |          |         |.
                           \\       |          |       // .
                             \\\\\  |          |  /////   .
                                  --|----------|--   .    .
                  Authentication    |          |          .
                  and Security      |          v          .
 +-------------+  Layer           +-+----------+--+       .
 |             |<---------------->|               |<-.....+
 | Application |                  | Server Side   |
 | @ End Host  |  Application     | Application   |
 |             |<================>|(Relying Party)|
 +-------------+  Application     +---------------+
                  Data
]]></artwork>
                </figure>
            </t>
<t>The front-end (end-host to relying party) MUST be integrated the authentication framework of the back-end.</t>
<t>The changes to the end host and the changes to the relying party SHOULD be kept at a minimum. A mechanism MUST be preferred that can demonstrate deployment benefits (based on easy of update of existing software, smaller implementation effort, etc.).
</t> 
</section> 

    <!-- ////////////////////////////////////////////////////////////////////////////////// -->

    <section anchor="sec-cons" title="Security Considerations">
	<t>This entire document is about security.</t>	
    </section>


    <!-- ////////////////////////////////////////////////////////////////////////////////// -->

    <section anchor="iana" title="IANA Considerations">
      <t>This document does not require actions by IANA.</t>
    </section>

    <!-- ////////////////////////////////////////////////////////////////////////////////// -->

    <section title="Acknowledgments">
      <t>The author would like to thank Sam Hartman for a discussion about all aspects of the "Federated Authentication Beyond The Web" effort
	  when he was visiting MIT in June 2010.</t>
    </section>

    <!-- ////////////////////////////////////////////////////////////////////////////////// -->
  </middle>

  <!-- ////////////////////////////////////////////////////////////////////////////////// -->

  <back>
    <references title="Normative References">
	&RFC2119;
    </references>

    <!--    <references title="Informative References"> </references> -->
  </back>
</rfc>
