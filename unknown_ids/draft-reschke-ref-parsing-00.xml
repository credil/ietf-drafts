<?xml version="1.0" encoding="UTF-8"?>
<!--
    This XML document is the output of clean-for-DTD.xslt; a tool that strips
    extensions to RFC2629(bis) from documents for processing with xml2rfc.
-->
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc subcompact="no"?>
<?rfc rfcedstyle="yes"?>
<!DOCTYPE rfc
  PUBLIC "" "rfc2629.dtd">
<rfc ipr="trust200902" docName="draft-reschke-ref-parsing-00" category="info">
	<front>
  <title abbrev="Parsing URI/IRI references">Processing potentially invalid URI and IRI References</title>
  <author initials="J. F." surname="Reschke" fullname="Julian F. Reschke">
    <organization abbrev="greenbytes">greenbytes GmbH</organization>
    <address>
      <postal>
        <street>Hafenweg 16</street>
        <city>Muenster</city><region>NW</region><code>48155</code>
        <country>Germany</country>
      </postal>
      <email>julian.reschke@greenbytes.de</email>	
      <uri>http://greenbytes.de/tech/webdav/</uri>	
    </address>
  </author>

  <date month="July" year="2011"/>
  
  <abstract>
    <t>
      The parsing of Uniform Resource Identifiers (URIs, RFC 3986) and 
      Internationalized Resource Identifiers (IRIs, RFC 3987) is defined
      in terms of Augmented Backus-Naur Form (ABNF). The ABNF grammars
      are defined in terms of valid identifiers, and thus technically do not
      address how to handle invalid ones.
    </t>
    <t>
      The URI specification however includes a note how to use Regular
      Expressions for parsing, and this note applies to invalid identifiers
      as well. This document introduces terminology referring to potentially
      invalid identifiers, and demonstrates how the rules in the URI
      specification can be applied to them.
    </t>
  </abstract>
  
  <note title="Editorial Note (To be removed by RFC Editor before publication)">
    <t>
      Distribution of this document is unlimited. Although this is not a work
      item of the IRI Working Group, comments should be sent to the 
      IRI mailing list at <eref target="mailto:public-iri@w3.org">public-iri@w3.org</eref>,
      which may be joined by sending a message with subject 
      "subscribe" to <eref target="mailto:public-iri-request@w3.org?subject=subscribe">public-iri-request@w3.org</eref>.
    </t>
    <t>
      Discussions of the IRI Working Group are archived at
      <eref target="http://lists.w3.org/Archives/Public/public-iri/"/>.               
    </t> 
    <t>
      XML versions and latest edits <!--and the issues list -->for this document
      are available from <eref target="http://greenbytes.de/tech/webdav/#draft-reschke-ref-parsing"/>.
    </t>
  </note>
  </front>

  <middle>










<section title="Introduction" anchor="introduction">
  <t>
    The parsing of Uniform Resource Identifiers (URIs, <xref target="RFC3986"/>) and 
    Internationalized Resource Identifiers (IRIs, <xref target="RFC3987"/>) is defined
    in terms of Augmented Backus-Naur Form (ABNF). The ABNF grammars
    are defined in terms of valid identifiers, and thus technically do not
    address how to handle invalid ones.
  </t>
  <t>
    The URI specification however includes a note how to use Regular
    Expressions for parsing, and this note applies to invalid identifiers
    as well. This document introduces terminology referring to potentially
    invalid identifiers, and demonstrates how the rules in the URI
    specification can be applied to them.
  </t>
</section>  

<!--<section title="Notational Conventions">
<t>
  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
  "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document
  are to be interpreted as described in <xref target="RFC2119"/>.
</t>
<t>
  This specification uses the ABNF (Augmented Backus-Naur Form) notation defined in
  <xref target="RFC5234"/>. The following core rules are included by
  reference, as defined in <xref target="RFC5234" x:fmt="," x:sec="B.1"/>:
  ALPHA (letters), DIGIT (decimal 0-9), HEXDIG (hexadecimal 0-9/A-F/a-f) and
  LWSP (linear white space).
</t>
</section>  -->

<section title="Terminology" anchor="terminology">
<t>
  In addition to the terms defined in the URI specification, namely
  the Syntax Components (see Section 3 of <xref target="RFC3986"/>),
  this document defines:
</t>
<t>
  <?rfc needLines="4"?>Candidate URI Reference
  <list>
    <t>
      A string that may or may not be a valid URI-reference according to
      Section 4.1 of <xref target="RFC3986"/>.
    </t>
  </list>
</t>
<t>
  <?rfc needLines="4"?>Candidate Scheme Component
  <list>
    <t>
      A string that may or may not be a valid URI scheme component according to
      Section 3.1 of <xref target="RFC3986"/>.
    </t>
  </list>
</t>
<t>
  <?rfc needLines="4"?>Candidate Authority Component
  <list>
    <t>
      A string that may or may not be a valid URI authority component according to
      Section 3.2 of <xref target="RFC3986"/>.
    </t>
  </list>
</t>
<t>
  <?rfc needLines="4"?>Candidate Path Component
  <list>
    <t>
      A string that may or may not be a valid URI path component according to
      Section 3.3 of <xref target="RFC3986"/>.
    </t>
  </list>
</t>
<t>
  <?rfc needLines="4"?>Candidate Query Component
  <list>
    <t>
      A string that may or may not be a valid URI query component according to
      Section 3.4 of <xref target="RFC3986"/>.
    </t>
  </list>
</t>
<t>
  <?rfc needLines="4"?>Candidate Fragment Component
  <list>
    <t>
      A string that may or may not be a valid URI fragment component according to
      Section 3.5 of <xref target="RFC3986"/>.
    </t>
  </list>
</t>
</section>

<section title="Processing">
<section title="Parsing a Candidate URI Reference into Components" anchor="parsing">
<t>
  The regular expression given in Appendix B of <xref target="RFC3986"/>
  will parse any input string into a Candidate Scheme Component, a Candidate Authority
  Component, a Candidate Path Component, a Candidate Query Component, and a 
  Candidate Fragment Component. Note that of these five components, all
  components except for the Path Component can be undefined.
</t>
<t>
  If each of the defined components is valid according to the related URI component
  definition, the input was a valid URI reference.
</t>
</section>

<section title="Resolution of Candidate References">
<t>
  Section 5 of <xref target="RFC3986"/> defines Reference Resolution
  based on the five components. This algorithm works both for components
  obtained from valid and invalid references. The result will be a valid
  URI Reference if and only if the components used by the algorithm were valid
  themselves.
</t>
</section>

</section>

<section title="Security Considerations" anchor="security.considerations">
<t>
  <cref>TBD</cref>
</t>
</section>  

<section title="IANA Considerations" anchor="iana.considerations">
<t>
  There are no IANA Considerations related to this specification.
</t>
</section>  

<!--<section title="Acknowledgements">
<t>
</t>
</section>-->  
  </middle>
  <back>
  
<references title="Normative References">
  
<!--  <reference anchor="RFC2119">
    <front>
      <title abbrev="RFC Key Words">Key words for use in RFCs to Indicate Requirement Levels</title>
      <author initials="S." surname="Bradner" fullname="Scott Bradner">
        <organization>Harvard University</organization>
        <address><email>sob@harvard.edu</email></address>
      </author>
      <date month="March" year="1997"/>
    </front>
    <seriesInfo name="BCP" value="14"/>
    <seriesInfo name="RFC" value="2119"/>
  </reference>-->
  
  <reference anchor="RFC3986">
   <front>
    <title abbrev="URI Generic Syntax">Uniform Resource Identifier (URI): Generic Syntax</title>
    <author initials="T." surname="Berners-Lee" fullname="Tim Berners-Lee">
      <organization abbrev="W3C/MIT">World Wide Web Consortium</organization>
      <address>
         <email>timbl@w3.org</email>
      </address>
    </author>
    <author initials="R." surname="Fielding" fullname="Roy T. Fielding">
      <organization abbrev="Day Software">Day Software</organization>
      <address>
        <email>fielding@gbiv.com</email>
      </address>
    </author>
    <author initials="L." surname="Masinter" fullname="Larry Masinter">
      <organization abbrev="Adobe Systems">Adobe Systems Incorporated</organization>
      <address>
        <email>LMM@acm.org</email>
      </address>
    </author>
    <date month="January" year="2005"/>
   </front>
   <seriesInfo name="STD" value="66"/>
   <seriesInfo name="RFC" value="3986"/>
  </reference>

</references>

<references title="Informative References">

  <reference anchor="RFC3987">
    <front>
      <title>Internationalized Resource Identifiers (IRIs)</title>
      <author initials="M." surname="Duerst" fullname="M. Duerst"/>
      <author initials="M." surname="Suignard" fullname="M. Suignard"/>
      <date year="2005" month="January"/>
    </front>
    <seriesInfo name="RFC" value="3987"/>
  </reference>

</references>


<section title="Implementations">
<t>
  <eref target="http://greenbytes.de/tech/tc/uris/"/> shows results for the
  parsing/resolution processing described above, based on a test implementation
  written in XSLT 2.0.
</t>
</section>

<!--<section title="Change Log (to be removed by RFC Editor before publication)" anchor="change.log">
</section>-->



  <section title="Open issues (to be removed by RFC Editor prior to publication)"><section title="edit"><t>
      Type: edit</t><t>julian.reschke@greenbytes.de (2011-07-02): 
    Umbrella issue for editorial fixes/enhancements.
  </t></section><section title="iri"><t>
      Type: change</t><t>julian.reschke@greenbytes.de (2011-07-02): 
    Expand for IRIs.
  </t></section><section title="proc"><t>
      Type: change</t><t>julian.reschke@greenbytes.de (2011-07-02): 
    Re-state the parsing algorithm as a procedural algorithm, maybe in JS?
  </t></section><section title="pre"><t>
      Type: change</t><t>julian.reschke@greenbytes.de (2011-07-02): 
    Define pre-processing steps for extraction of candidate references
    from content (WS stripping)?
  </t></section><section title="post"><t>
      Type: change</t><t>julian.reschke@greenbytes.de (2011-07-02): 
    Define post-processing steps, such as query component rewriting based
    on document encoding.
  </t></section></section></back>

</rfc>