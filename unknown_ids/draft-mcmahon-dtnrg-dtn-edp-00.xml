<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3986 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4838 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4838.xml">
<!ENTITY RFC5050 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5050.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="exp" docName="draft-mcmahon-dtnrg-dtn-edp-00" ipr="trust200902">

<front>

    <title abbrev="The DTN Endpoint Discovery Protocol">The Delay Tolerant Networking Endpoint Discovery Protocol</title>

      <author initials="A." surname="McMahon" fullname="Alex Mc Mahon">
         <organization>Trinity College Dublin</organization>
         <address>
            <postal>
                        <street>Distributed Systems Group</street>
                        <street>Department of Computer Science</street>
               <street>Trinity College </street>
                           <city>Dublin</city>
                           <code>2</code>
               <country>Ireland</country>
            </postal>
            <phone>+353-1-896-2354</phone>
            <email>alex.mcmahon@cs.tcd.ie</email>
         </address>
      </author>

    <author fullname="Kevin Fall" initials="K.F."
            surname="Fall">
      <organization>Intel Labs, Berkeley</organization>

      <address>
        <postal>
		    <street>2150 Shattuck Avenue, #1300</street>
		    <city>Berkeley</city>
		    <region>California</region>
		    <code>94704</code>
          <country>USA</country>
        </postal>
        <phone>+1-510-495-3014</phone>
        <email>kfall@intel.com</email>
      </address>
    </author>

      <date month="February" year="2010"/>
      <area>IRTF</area>
      <workgroup>DTN Research Group</workgroup>
      <keyword>RFC</keyword>
      <keyword>Request for Comments</keyword>
      <keyword>I-D</keyword>
      <keyword>Internet-Draft</keyword>
      <keyword>DTN</keyword>
      <keyword>Delay-Tolerant Networking</keyword>
      <keyword>Disruption-Tolerant Networking</keyword>
      <keyword>Discovery</keyword>
      <keyword>Endpoint</keyword>

    <abstract>
	<t>The Endpoint Discovery Protocol (EDP) can be 
        used by Delay Tolerant Networking (DTN) nodes to report their 
        storage, routing and security capabilities, endpoint identifiers 
	(EIDs), registrations and whether they are willing to be 
	custodians to neighbouring DTN nodes.</t>
    </abstract>
</front>

<middle>
    <section title="Introduction">
        <t>This document describes Version 1 of the Endpoint
        Discovery Protocol (EDP), EDPv1, designed to be used with the
        Bundle Protocol (BP) <xref target="RFC5050"></xref>
        within the context of the Delay-Tolerant Networking (DTN) architecture
        <xref target="RFC4838"></xref>.</t>

	<t>EDP can be used by a DTN node to discover the presence of DTN nodes 
	wishing to receive EDP Application Data Units 
	(ADUs) on their EDP registrations, and to discover specifically which 
	Convergence Layer Adapters (CLAs) and registrations are of interest 
        to those proximate DTN nodes. A DTN node with an EDP registration is 
	an EDP node.</t>

	<t>EDP nodes report a description of their active
	EID registrations, Convergence Layer Adapters (CLAs) EIDs, storage,
	routing, security capabilities and whether they are willing to be
	custodian to proximate EDP nodes.</t>

	<t>A DTN node MUST have a unique EDP registration. 
        EDP is envisioned to utilize a (to be agreed upon) mechanism to
	limit its distribution scope to one DTN hop. Routing protocols
	(to be agreed upon) are expected to make use of information
	learned via EDP.</t>

	<t>EDP is a DTN application protocol. EDP ADUs are encapsulated in 
        bundles <xref target="RFC5050"></xref> that may be secured according 
        to BSP <xref target="BPsec"></xref>.</t>


	<t>This document specifies the protocol,
	block formats, and abstract service description for the exchange
	of EDP ADUs. This document does not address:</t>

	<t><list style="symbols">
	    <t>Operations in the CLAs.</t>

	    <t>Discovery of EIDs more than one DTN node hop away.</t>
	    
	</list></t>
    </section>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>


    <section anchor="EDPreg" title="The EDP Registrations">

	<t>Within a DTN node, there is a registration which is the state machine
	characterizing a given node's membership in a given endpoint. Any number
	of registrations may be concurrently associated with a given endpoint,
	and any number of registrations may be concurrently associated with a
	given node. An EID is a name, expressed using the general syntax of URIs
	 <xref target="RFC3986"></xref>, that identifies a DTN endpoint. 
        EDP uses the "dtn:" scheme <xref target="dtnURI" format="default" pageno="false"/>.
	The EDP EID registration, used by an application for receiving EDP ADUs, has the 
        non-expiring registration "dtn::EDPv1".</t>


	<t>An EDP registration receives EDP ADUs, which are report bundles generated
	periodically or on demand and transmitted to the endpoint 'dtn::EDPv1'.
	Registrations are strings, that might indicate a physical entity or named
	data/service, used by upper-layer protocols or DTN applications to ask the
	CLAs to enable and disable reception of ADUs sent to specific EIDs.</t>

	<section title="The Source EID of a Bundle with an EDP payload">

	<t>Each DTN node is required to have at least one EID that uniquely
	identifies it (see section 3.3 of <xref target="RFC4838" pageno="8">RFC&nbsp;4838</xref>). 
        The source EID of an EDP report bundle is any of those registrations.</t>
	</section>


	<section title="The CLA EID">

	<t>The EID of a CLA is a CLA EID as defined by <xref target=
        "dtnURI" format="default" pageno="false"/>. CLA EIDs are primarily used for 
         the identification of CLAs and are used by EDP as potential "next hops".</t>   

        <texttable anchor="fig2" title="CLA EID">
          <ttcol align="center">Scheme</ttcol>
          <ttcol align="center">Scheme Specific Part (SSP)</ttcol>

          <c>dtn:</c>

          <c>next:eui-48:00:1c:bf:93:98:5d</c>
	  
	  <c>dtn:</c>
          
	  <c>next:eui-48:00:1b:38:cc:df:ef</c>

          <postamble>Example of a DTN node with two Ethernet CLA EIDs.</postamble>

        </texttable>
	</section>

	<section title="EDP Flags for the Primary Block">

	<t>The value encoded in the Bundle Processing Control Flags of the primary
	block is a string of bits, expressed as a SDNV and is used to invoke selected
	bundle processing control features. By default, a bundle with a payload that 
	is an EDP ADU has the individual bits of this string of bits set to zero to 
	indicate false for the following flags:</t>

        <t><list style="hanging">
	<t>Custody transfer requested</t>

	<t>Status report request</t>

	<t>Application data unit is an administrative record</t>

	<t>Bundle must not be fragmented</t>

	<t>Destination endpoint is a singleton</t>

	<t>Acknowledgement by application is requested</t>
        </list></t>
	</section>
    </section>


    <section title="The EDP Bundle">
        <t>The EDP payload block uses the Canonical Bundle Block Format as
        defined in section 4.5.2. of <xref target="RFC5050" pageno="22">RFC&nbsp;5050</xref>.  
        That is, each EDP block is comprised of the following elements:</t>

        <t><list style="hanging">
            <t>Block type code</t>

            <t>Block processing control flags</t>

            <t>Block data length</t>

            <t>Block EID reference count and EID references</t>

            <t>Block-type-specific data fields</t>
        </list></t>
        <t>A bundle with an EDP payload is uniquely identifiable and all bundle protocol features
        that rely on bundle identity, such as the Bundle Security Protocol <xref target="BPsec"
format="default" pageno="false"/>, can be enabled. A bundle with an EDP payload may
        be fragmented. The 'block contains an EID-reference field' flag in the
        block processing control flags of the primary block is set to 1 as the
        EDP block references EID elements in the primary block's dictionary.</t>

	<section title="The EDP Report Bundle Format">
	<t>EDP ADUs contained in bundles are called EDP reports. In order to take 
        full advantage of the capabilities of EDPv1, an EDP node
	MUST be capable of generating a bundle payload block, a record with the
	below format and of transmitting that bundle to the EDP EID.</t>

      <figure anchor="fig3" align="center" title="The EDP Report Bundle Format">

        <artwork align="center"><![CDATA[
+----------------+----------------+----------------+----------------+
|  Block type    | Proc. Flags (*)| Block length(*)| DCF (*)        |		    
+----------------+----------------+----------------+----------------+
|                   AR EID Reference Count (*)                      |
+----------------+----------------+----------------+----------------+
|       AR list Ref_scheme_1 (*)  | AR list Ref_ssp_1 (*)           |
+----------------+----------------+----------------+----------------+
|       AR expiration counters (*)                                  |
+----------------+----------------+----------------+----------------+
|                   CLA EID Reference Count  (*)                    |
+----------------+----------------+----------------+----------------+
|       CLA list Ref_scheme_1 (*) | CLA list Ref_ssp_1 (*)          |
+----------------+----------------+----------------+----------------+
|                   PREF CLA Reference Count  (*)                   |
+----------------+----------------+----------------+----------------+
|      PREF list Ref_AR_I (*)     | PREF list Ref_CLA_I (*)         |
+----------------+----------------+----------------+----------------+
|      SC (*)                     | SA (*)                          |
+----------------+----------------+----------------+----------------+
|                              Delay (*)                            |
+----------------+----------------+----------------+----------------+
            ]]></artwork>

        <postamble>A <xref target="RFC5050" /> Canonical Bundle Block Format</postamble>
      </figure>
  
<t>Notes:</t>

    <t><list style="symbols">
    <t>EDP is a DTN application protocol that uses the canonical bundle 
    block format <xref target="RFC5050" /></t>

    <t>(*) Indicates field contains a Self Delimiting Numerical Value (SDNV) 
    (see Section 4.1. of <xref target="RFC5050" pageno="12" >RFC&nbsp;5050</xref>)</t>

    <t>Routing protocols and algorithms are identified by EIDs <xref target="dtnURI" 
    format="default" pageno="false"/> and have EID registrations (see <xref 
    target="appendix_A"></xref>). Active registrations (ARs) have registration 
    references in the EDP payload block.</t>  

    <t>"Block Type" (see section 3.1 of <xref target="RFC5050">RFC&nbsp;5050</xref>) 
    is a 1-byte mandatory field that indicates
    the type of the block. This field contains the value 1 to indicate it
    is the bundle payload block.</t>

    <t>"Block Processing Control Flags" (see section 3.1 of 
    <xref target="RFC5050">RFC&nbsp;5050</xref>) is a SDNV
    that contains the BP block processing control flags, an unsigned integer
    expressed as a SDNV. The individual bits of this integer are set
    to '1' for the Last block flag, Discard block if it can't be
    processed flag and the block contains an EID-reference flag. A one
    octet SDNV is shown here for convenience in representation.</t>


    <t>"Block Length" (see section 3.1 of of <xref target="RFC5050">RFC&nbsp;5050</xref>) 
    is a mandatory SDNV that contains
    the aggregate length of all remaining fields of the block - which
    is to say, the length of the bundle's payload. A one octet SDNV is
    shown here for convenience in representation.</t>

    <t>The "DCF" (Discovery Control Flags field) in a bundle with an EDP payload is a SDNV;
     the value encoded in this SDNV is a string of bits used to invoke
     selected block processing control features.  A one octet SDNV is
    shown here for convenience in representation. The significance of the
     values in all currently defined positions of this bit string, in order
     from least significant position in the decoded bit string (labeled '0')
     to most significant (labeled '6'), are described here.</t>

    </list></t>

      <figure anchor="fig5" align="center" title="Block Discovery Control Flags Bit Layout">
        <preamble></preamble>

        <artwork align="center"><![CDATA[

                          0
              6 5 4 3 2 1 0
             +-+-+-+-+-+-+-+
             |   Flags     |
             +-+-+-+-+-+-+-+

        ]]></artwork>

      </figure>

        <t><list style="hanging">

      <t>0 - Confirm BSP. If set indicates the Bundle Security Protocol <xref target="BPsec"
        format="default" pageno="false"/> is enabled on
          the EDP node.</t>

      <t>1 - Confirm custodian status. If set indicates an EDP node is prepared to
          be a custodian to any neighbouring DTN nodes.</t>

      <t>2 - Confirm reactive fragmentation. If set indicates reactive fragmentation
          is enabled. The reactive fragmentation capability is not required to be
          available in every DTN implementation (See section 3.9)
          <xref target="RFC5050">RFC&nbsp;5050</xref>.</t>

      <t>3 - Request EDP. If set indicates that a bundle with an EDP payload is requested from the EDP
          node that receives this bundle.</t>

      <t>4 - Random response request. Indicates that the EDP node that receives this
          bundle is requested to generate a random positive integer uniformly distributed 
	  between zero and the value in the delay field of the EDP payload. This integer represents
          seconds to delay before sending an EDP report in response.</t>

      <t>5 - Reserved.</t>

      <t>6 - Reserved.</t>

        </list></t>

    <t><list style="symbols">
    <t>"AR EID reference count" is an EID reference field consisting
    of a count of EID active registration references expressed as an
    SDNV and followed by the EID references themselves. Each EID
    reference is a pair of SDNVs as described below. A four octet SDNV
    is shown here for convenience in representation.</t>

    <t>"AR list Ref_scheme_1" Contains the offset of a scheme name in the
     primary block's dictionary for an active registration. If present,
     is a SDNV and is therefore variable length.  A two-octet SDNV is
     shown here for convenience in representation.</t>

    <t>"AR list Ref_ssp_1" contains the offset of a scheme-specific part in
     the primary block's dictionary for an active registration. If
     present, is a SDNV and is therefore variable length.  A two-octet
     SDNV is shown here for convenience in representation.</t>

    <t>"AR expiration counters" is a list of the registration expiration
     counters for each active registration. It is an integer that indicates
     the expiration time of an active registration in seconds expressed 
     as a SDNV and is therefore variable length.  A
     four octet SDNV is shown here for convenience in representation.</t>

    <t>"CLA EID reference count" is an EID reference field consisting
     of a count of CLA EID references expressed as an
     SDNV and followed by the EID references themselves. Each CLA EID
     reference is a pair of SDNVs as described below. A four octet SDNV
     is shown here for convenience in representation.</t>

    <t>"CLA list Ref_scheme_1" Contains the offset of a scheme name in the
     primary block's dictionary for a CLA EID. If present,
     is a SDNV and is therefore variable length.  A two-octet SDNV is
     shown here for convenience in representation.</t>

    <t>"CLA list Ref_ssp_1" contains the offset of a scheme-specific part in
     the in the primary block's dictionary for a CLA EID. If
     present, is a SDNV and is therefore variable length.  A two-octet
     SDNV is shown here for convenience in representation.</t>

    <t>"PREF CLA reference count" is an EID reference field consisting
     of a count of the preferred CLAs (interfaces between the common 
     bundle protocol and a specific inter-network protocol suite) 
     for each active registration reference expressed as an
     SDNV and followed by the EID counter references themselves. Each EID 
     counter reference is a pair of SDNVs as described below. A four octet SDNV
     is shown here for convenience in representation.</t>

    <t>"PREF list Ref_AR_I" is a reference field to the "AR EID reference count"
     field consisting of an instance of the count of EID active registration 
     references. It is an index into the "AR EID reference count" to identify 
     an AR EID reference. If present, is a SDNV and is therefore variable length.  
     A two-octet SDNV is shown here for convenience in representation.</t>

    <t>"PREF list Ref_CLA_I" is a reference field to the "CLA EID reference count"    
     field consisting an instance of the count of CLA EIDs 
     references, followed by a delimiter ',' and then an integer. 
    The instance of the count of CLA EIDs     
     references is an index into the "CLA EID reference count" to identify 
     and to identify a CLA EID reference. The integer,following the delimiter is 
    set to '1' by default and is an indicator of CLA EID preference (see <xref 
    target="appendix_B"></xref>). An integer increase 
    signifies a decrease of preference. An instance of the count of CLA EIDs 
    references and the preference integer may both be set to '0' to signify no 
    preference. If present, is a SDNV and is therefore variable length.
     A two-octet SDNV is shown here for convenience in representation.</t>

    <t>"SC" is the DTN node storage capacity in bytes expressed as a SDNV
     and is therefore variable length.  A two octet SDNV is shown here
     for convenience in representation.</t>

    <t>"SA" is the DTN node's available storage capacity in bytes expressed
     as a SDNV and is therefore variable length.  A two octet SDNV
     is shown here for convenience in representation.</t>

    <t>"Delay" is a positive integer which indicates a delay in
     seconds. When DCF field bit position 3 is set this field is used to
     delay transmission of a bundle with an EDP payload report by a random or set amount 
     of seconds. The delayed transmission time is computed by the receiving 
     EDP node by adding the delay integer to the creation time stamp of the 
     received bundle. In the event an EDP node receives a request to 
     transmit a report at some time in the past, the EDP node will not 
     generate a report. If present, is a SDNV and is therefore variable length.  
     A four-octet SDNV is shown here for convenience in representation.</t>
	</list></t>
	</section>

	<section title="Active Registrations.">

   <t>All active registrations and CLA EIDs referred
   to in the blocks of a bundle with an EDP payload are conveyed in the "dictionary"
   byte array in the bundle's primary block.  This array is simply
   the concatenation of any number of null-terminated scheme names
   and SSPs. "Endpoint ID references" field in the payload block are
   used to cite endpoint IDs that are contained in the dictionary.</t>
	</section>

	<section title="The EDP Application Agent.">

	    <section title="Bundle Generation and Transmission.">

   <t>The EDP application agent is responsible for constructing EDP report 
   ADUs to be transmitted in bundles. By default, bundles with EDP payloads are generated 
   and transmitted periodically every 30 seconds. EDP configuration options 
   can be used to change the default transmission period or to instruct the 
   EDP agent to only transmit in response to another DTN nodes' EDP report. 
   Bundles with EDP payloads can also be generated on demand. In concept, 
   the EDP application agent
   discharges this responsibility by directing the node's application
   agent to construct the record in the payload and request its transmission.
   The BP application agent constructs the record as is necessary to add a byte
   array, expressed as a SDNV, to the primary block's dictionary (see <xref target="appendix_D"></xref>)
   </t>
	    
	    </section>

	    <section title="Bundle Reception.">

   <t>The EDP agent is responsible for receiving an  EDP ADU on the EDP
   registration and processing it. </t>

   
   <t>An EDP ADU with the 'Request EDP' 
   flag set in its status field is an 'EDP request'. An EDP agent 
   that receives an 'EDP request' is directed to schedule generation and 
   transmission of an EDP ADU. An EDP ADU will be 
   transmitted at a time equal to that of the creation timestamp plus the 
   delay value indicated in the delay field of the 'EDP request'. When an
   EDP request is received with the 'Request EDP' flag set, the generated 
   bundle with an EDP payload MUST have the 'Request EDP' flag set to zero.</t>

		<section title="Random Response Request.">

   <t>When an 'EDP request' is received that has the 'Random response request' 
   flag set in its status field, the EDP application agent schedules generation 
   and transmission of an EDP ADU in a delayed fashion. On reception of the 
   'EDP request' the EDP agent generates a specific delay value, a random 
   positive integer. Generation of the integer is bound by a range indicated by the 
   value specified in the delay field in the 'EDP request' payload. 
   A positive integer, indicating a delay in seconds, is generated if the value 
   is positive. A delay value of zero indicates a response should be generated 
   immediately.</t>  
		</section>
   
		<section title="Scheduled Response Request.">

   <t>A bundle with an EDP ADU in its payload is transmitted on reception of an 'EDP request' when the delay 
   field is zero (default), as this indicates that there is no delay desired. 
   If the 'Request EDP' flag is set and the 'Random response request' flag is not set, 
   the delay value indicates an absolute delay in seconds. This type of 'EDP request' is used 
   to request a remote EDP application agent to schedule generation and transmission 
   of a bundle with an EDP ADU in its payload at a specific later time.</t> 
		</section>
	    </section>
	</section>

	    <section title="Example: Three DTN Nodes.">

    <t>A scenario in which three proximate DTN nodes 'A', 'B' and 'C', identifiable by unique EIDs 'dtn::A', 
    'dtn::B' and 'dtn::C' is presented. 'C' has three services 'X', 'Y' and 'Z'.
    Each service has an active EID registration, in the form 'unique EID' '/' 'service'.
    'A', 'B' and 'C' publish their services by transmitting bundles with EDP ADUs in the payload to 
    the destination EID 'dtn::EDPv1', of proximate DTN nodes via all CLAs. In this scene the three registrations for 'C' 
    are as follows:</t>

    <t><list style="hanging">
    <t>dtn::C/X</t>
    <t>dtn::C/Y</t>
    <t>dtn::C/Z</t>
    </list></t>
		<section title="CLA EIDs of 'A', 'B' and 'C'">
    <t>Each DTN node is equipped with two Ethernet interfaces 
    and a Bluetooth interface. The CLA EID that is used to identify each CLA includes 
    a CLA type and an CLA instance identifier. In this scene, the CLA type for the Ethernet and
    Bluetooth devices is 'eui-48'. The instance identifier for each CLA type is the 
    EUI-48 identifier. 'A'  has two Ethernet devices, with identifiers '00:1c:bf:93:98:5d' and '00:1b:38:cc:df:ef' 
    and a single Bluetooth device '00:23:6c:9c:a5:f8'. The CLA EIDs of 'A' are as follows:</t>
    
    <t><list style="hanging">
    <t>dtn:next:eui-48:00:1c:bf:93:98:5d</t>
    <t>dtn:next:eui-48:00:1b:38:cc:df:ef</t>
    <t>dtn:next:eui-48:00:23:6c:9c:a5:f8</t>
    </list></t>
		</section>
                <section title="The ARs, CLA EIDs and Preferences of 'C'">
    <t>'C' advertises services 'X' and 'Z'. Service 'X' is a type of storage service, that is 
    provides data storage to users of it. Service 'Z' allows execution of commands and is 
    provided to DTN nodes that are connected to an Ethernet segment.</t> 

    <t><list style="symbols">
    <t>Service 'X' is accessible through all CLA EIDs of 'C'. 'C' has a Bluetooth CLA with CLA EID 
    'dtn:next:eui-48:00:23:6C:9C:A5:32', Ethernet CLA with CLA EIDs 'dtn:next:eui-48:00:1c:bf:93:98:c1' and 
   Ethernet CLA with CLA EID 'dtn:next:eui-48:00:1b:38:cc:df:b1'. 'C' has a preferred CLA EID list 
   (see <xref target="appendix_B"></xref>) for service 'X' in the order as listed.</t>

    <t>Service 'Z' is to be accessed via the Ethernet CLA with CLA EID 'dtn:next:eui-48:00:1b:38:cc:df:b1' 
    of 'C' only.</t>
    </list></t>
	    </section>
		<section title="'C' Transmits Bundle containing an EDP ADU">
    <t>'C' periodically transmits bundles that contain EDP ADUs with an
    EID destination 'dtn::EDPv1' and EID source 'dtn::C', every 30 seconds. 
    Both 'A' and 'B' receive a bundle with 
    an EDP ADU in its payload on their EDP registrations. Both receive the same bundle on each of 
    their CLAs. The EDP ADU received by the EDP registration 'dtn::EDPv1' on  
    'A' is identical to the ADU received by the registration 'dtn::EDPv1' on 'B'. The ADU contains references to 
    offsets of the data dictionary of the primary block of the bundle which it was the payload. Although 
    the fields contain offsets the actual referenced values are depicted below:</t>

        <texttable anchor="cla_eids_c" title="CLA EIDs of 'C'">
          <preamble>AR EID Reference Count = 3</preamble>

          <ttcol align="center">AR list Ref_scheme_1</ttcol>
          <ttcol align="center">AR list Ref_ssp_1</ttcol>
          <c>dtn:</c>
          <c>next:eui-48:00:23:6C:9C:A5:32</c>
          <c>dtn:</c>
          <c>next:eui-48:00:1c:bf:93:98:c1</c>
          <c>dtn:</c>
          <c>next:eui-48:00:1b:38:cc:df:b1</c>
        </texttable>

        <texttable anchor="ar_eids_c" title="AR EIDs of 'C'">
          <preamble>CLA EID Reference Count = 3</preamble>
          <ttcol align="center">CLA list Ref_scheme_1</ttcol>
          <ttcol align="center">CLA list Ref_ssp_1</ttcol>
          <c>dtn:</c>
          <c>:C/X</c>
          <c>dtn:</c>
          <c>:C/Y</c>
          <c>dtn:</c>
          <c>:C/Z</c>
        </texttable>

    <t>The DCF field (below) shows that a bundle with an EDP payload was not requested. This means 
    an EDP report is not generated by 'A' or 'B' in response. As a bundle with an EDP payload was 
    not requested the EDP ADU did not contain a 'Delay' field</t>

        <texttable anchor="DCF" title="DCF of 'C'">
          <preamble>The DCF field has the following bits set</preamble>
          <ttcol align="center">Bit</ttcol>
          <ttcol align="center">Setting</ttcol>
          <c>0</c>
          <c>0</c>
          <c>1</c>
          <c>1</c>
          <c>2</c>
          <c>1</c>
          <c>3</c>
          <c>0</c>
          <c>4</c>
          <c>0</c>
          <c>5</c>
          <c>0</c>
          <c>6</c>
          <c>0</c>
        </texttable>

        <t>The values in the DCF field indicate the following about 'C':</t>
        <t><list style="symbols">
        <t>Bundle Security is enabled</t>
        <t>DTN node is prepared to be a custodian to any neighbouring DTN nodes</t>
        <t>Reactive fragmentation is enabled</t>
        <t>A bundle with an EDP payload is not requested</t>
        <t>A random response request is not requested</t>
        </list></t>

        <t>The 'SC' and 'SA' fields (below) indicate that the storage capacity of 'C' is 97 GB
        and its available storage is 14 GB and can calculate that the storage used is '81352328' or
        about 86%</t>


        <texttable anchor="storage" title="Storage of 'C'">
          <preamble>The storage fields 'SC' and 'SA'</preamble>
          <ttcol align="center">SC</ttcol>
          <ttcol align="center">SA</ttcol>
          <c>100790004</c>
          <c>14317764</c>
        </texttable>

    <t>The preference list of 'C' (below) contains values that are an 
    index into the reference counts of CLA EID and AR EID. A CLA EID count 
    is followed by a delimiter and then an integer. The integer is an indicator
    of preference of CLA EID(s) for an active registration.</t>
 
        <texttable anchor="pref_list_1" title="Preference List of 'C'">
          <preamble>PREF CLA Reference Count = 4</preamble>
          <ttcol align="center">PREF list Ref_AR_I</ttcol>
          <ttcol align="center">PREF list Ref_CLA_I</ttcol>
          <c>1</c>
          <c>1,1</c>
          <c>1</c>
          <c>2,2</c>
          <c>1</c>
	  <c>3,3</c>
	  <c>2</c>
	  <c>3,1</c>
        </texttable>
    <t>The preference list shows that the service with AR EID indicated by '1' has three 
    CLA EIDs, indicated by '1', '2' and '3', through which it will receive 
    bundles. 'C' would prefer to use CLA EID identified by '1' with preference indicator '1'.
    The next preference of 'C' is CLA EID identified by '2' with preference indicator '2'.
    The CLA EID, that is the least preferred, is identified by '3' with preference indicator '3'. The preference 
    list shows that the service with AR EID that is indicated by '2' has one CLA EID 
    indicated by '3', through which it will receive bundles. A default preference indicator 
    of '1' is used.</t>

    <t>The table belows show the values that are indicated by the values in the preference 
    list of the EDP ADU of 'C'</t>
 
        <texttable anchor="pref_list_2" title="EID values indicated in Preference List of 'C'">
          <preamble>PREF CLA Reference Count = 4</preamble>
          <ttcol align="center">PREF list Ref_AR_I</ttcol>
          <ttcol align="center">PREF list Ref_CLA_I</ttcol>

          <c>dtn::C/X</c>
          <c>dtn:next:eui-48:00:23:6C:9C:A5:32</c>
          <c>dtn::C/X</c>
          <c>dtn:next:eui-48:00:1c:bf:93:98:c1</c>
          <c>dtn::C/X</c>
          <c>dtn:next:eui-48:00:1b:38:cc:df:b1</c>
          <c>dtn::C/Y</c>
          <c>dtn:next:eui-48:00:1b:38:cc:df:b1</c>
        </texttable>
    
    <t>The services (EIDs on the left) of 'C' may be 
    accessed using a CLA EID (EIDs on the right). If node 'A' or 'B' 
    has a CLA (or even several CLAs) that could be used to communicate, they can avail of the
    advertised services of 'C'</t>
	</section>
	<section title="'A' Uses Service of 'C'">
    <t>An application running on 'A' decides to move 13GB of data to 
    'C' which is offering storage service, identified by endpoint 'dtn::C/X'.
    'A' determines that 'C' has 14GB of storage available from the storage field. 'A' can determine  
    'C' is accepting custody from the DCF field.</t>

    <t>In order for 'A' to transmit the 13GB of data to 'dtn::C/X', it generates 
    a bundle with the 13GB of data as its payload, fragments it into smaller bundles and 
    attempts to transmit them via a DTN next hop of 'dtn:next:eui-48:00:23:6C:9C:A5:32'. 
    The source EID of the bundle is 'dtn::A/X', destination EID is 'dtn::C/X', and the next 
    hop is via the BD_ADDR '00:23:6C:9C:A5:32'. 
    'A' has a single Bluetooth device with BD_ADDR of '00:23:6c:9c:a5:f8', which has 
    CLA EID of 'dtn:next:eui-48:00:23:6c:9c:a5:f8' and this will be used to communicate 
    with 'C'.</t>

      <figure anchor="nh1" align="center" title="DTN Next Hop for service dtn::C/X">
        <artwork align="center"><![CDATA[

            dtn::A/X                                dtn::C/X
               |                                     |
dtn:next:eui-48:00:23:6c:9c:a5:f8<->dtn:next:eui-48:00:23:6C:9C:A5:32
dtn:next:eui-48:00:1c:bf:93:98:5d<->dtn:next:eui-48:00:1c:bf:93:98:c1
dtn:next:eui-48:00:1b:38:cc:df:ef<->dtn:next:eui-48:00:1c:bf:93:98:c1
dtn:next:eui-48:00:1c:bf:93:98:5d<->dtn:next:eui-48:00:1b:38:cc:df:b1
dtn:next:eui-48:00:1b:38:cc:df:ef<->dtn:next:eui-48:00:1b:38:cc:df:b1

        ]]></artwork>
      </figure>

    <t>Bundles with EID destination 'dtn::C/X' and source 'dtn::A/X' are received by 'C' 
    via its Bluetooth identifier (BD_ADDR) '00:23:6C:9C:A5:32', with CLA EID 
    'dtn:next:eui-48:00:23:6C:9C:A5:32'. The BP agent of 'C' reassembles the fragmented bundle 
    and the service with active registration 'dtn::C/X', receives and processes the ADU.</t>  
	    </section>

       <section title="'B' Uses Service of 'C'">
    <t>An application running on 'B' desires to execute a command on 
    'C' which is offering a command execution service, identified by endpoint 'dtn::C/Y'.
    'B' can determine Bundle Security is disabled on 'C' from 
    the DCF field.</t>

    <t>In order for 'B' to transmit the command to 'dtn::C/Y', 'B' generates
    a bundle with the command execution as data as its payload and transmit it 
    via a DTN next hop of 'dtn:next:eui-48:00:1b:38:cc:df:b1'.
    The source EID of the bundle is 'dtn::B/Y', destination EID is 'dtn::C/Y', and the next
    hop is via the Ethernet identifier '00:1b:38:cc:df:b1'.
    'B' has two Ethernet devices. Only one ('00:1c:bf:9c:98:5f') is on the same segment as 00:1b:38:cc:df:b1, and has
    CLA EID of 'dtn:next:eui-48:00:1c:bf:93:98:5d' and this will be used to communicate
    with 'C'.</t>

      <figure anchor="nh2" align="center" title="DTN Next Hop for service dtn::C/Y">
        <artwork align="center"><![CDATA[

            dtn::B/Y                              dtn::C/Y
               |                                     |
dtn:next:eui-48:00:1c:bf:9c:98:5f<->dtn:next:eui-48:00:1b:38:cc:df:b1

        ]]></artwork>
      </figure>

    <t>Bundles with EID destination 'dtn::C/Y' and source 'dtn::B/Y' are received by 'C'
    via its Ethernet identifier '00:1b:38:cc:df:b1', with CLA EID
    'dtn:next:eui-48:00:1b:38:cc:df:b1'. The BP agent of 'C' receives the bundle and delivers 
    the ADU to the service with active registration 'dtn::C/Y'.</t>
            </section>

	    </section>
	</section>
    <section title="Acknowledgements">
      <t>The DTNRG</t>
    </section>

    <section title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>
    </section>

    <section title="Security Considerations">
   
   <t>A bundle with an EDP payload raises no security 
   considerations beyond those addressed in <xref target="RFC5050" pageno="45"></xref>.</t>

   <t>Attacks built on the "Request EDP" operation could exploit the possible
   side effects of evaluating selection expressions.</t>

   <t>DoS-mitigation in DTNs is still a research area. However, it is recommended
   that bundles are authenticated <xref target="BPsec" format="default" pageno="false"/> 
   as a way of making the bad actor accountable.</t>
    </section>

  </middle>

  <back>
    <references title="Normative References">
      &RFC5050;

      &RFC2119;

         <reference anchor="BPsec">
            <front>
               <title>Bundle Security Protocol Specification</title>
               <author initials="S." surname="Symington" fullname="Susan Symington">
                  <organization>The MITRE Corporation</organization>
                  <address>
                     <postal>
                        <street>7515 Colshire Drive</street>
                        <city>McLean</city>
                        <region>VA</region>
                        <code>22102</code>
                        <country>US</country>
                     </postal>
                     <phone>+1 703-983-7209</phone>
                     <email>susan@mitre.org</email>
                  </address>
               </author>
                <author initials="S." surname="Farrell" fullname="Stephen Farrell">
                        <organization>Trinity College Dublin</organization>
                        <address>
                        <postal>
                                <street>Distributed Systems Group</street>
                                <street>Department of Computer Science</street>
                                <street>Trinity College </street>
                                <city>Dublin</city>
                                <code>2</code>
                                <country>Ireland</country>
                        </postal>
                        <phone>+353-1-608-1539</phone>
                        <email>stephen.farrell@cs.tcd.ie</email>
                        </address>
                </author>
      <author initials="H." surname="Weiss" fullname="Howard Weiss">
         <organization>SPARTA, Inc.</organization>
         <address>
            <postal>
               <street>7110 Samuel Morse Drive</street>
               <city>Columbia</city>
               <region>MD</region>
               <code>21046</code>
               <country>US</country>
            </postal>
            <phone>+1-443-430-8089</phone>
            <email>hsw@sparta.com</email>
         </address>
      </author>
      <author initials="P." surname="Lovell" fullname="Peter Lovell">
         <organization>SPARTA, Inc.</organization>
         <address>
            <postal>
               <street>7110 Samuel Morse Drive</street>
               <city>Columbia</city>
               <region>MD</region>
               <code>21046</code>
               <country>US</country>
            </postal>
            <phone>+1-443-430-8052</phone>
            <email>peter.lovell@sparta.com</email>
         </address>
      </author>
           <date month="February" year="2010"/>
            </front>
            <seriesInfo name="draft-irtf-dtnrg-bundle-security-15.txt," value="work-in-progress"/>
         </reference>

         <reference anchor="dtnURI">
            <front>
               <title>The DTN URI Scheme</title>
		<author fullname="Kevin Fall" initials="K.F." surname="Fall">
		<organization>Intel Research Berkeley</organization>
		<address>
		<postal>
                    <street>2150 Shattuck Avenue, #1300</street>
                    <city>Berkeley</city>
                    <region>California</region>
                    <code>94704</code>
	            <country>USA</country>
		</postal>
		<phone>+1-510-495-3014</phone>
		<email>kfall@intel.com</email>
		</address>
		</author>

                <author fullname="Scott Burleigh" initials="S.B." surname="Burleigh">
                <organization>Jet Propulsion Laboratory</organization>
                <address>
                <postal>
                    <street>4800 Oak Grove Drive, m/s 301-490</street>
                    <city>Pasadena</city>
                    <region>California</region>
                    <code>91109</code>
                    <country>USA</country>
                </postal>
                <phone>+1-818-393-3353</phone>
                <email>scott.c.burleigh@jpl.nasa.gov</email>
                </address>
                </author>

                <author fullname="Avri Doria" initials="A.D." surname="Doria">
                <organization>Jet Propulsion Laboratory</organization>
                <address>
                <postal>
                    <street>Lulea University of Technology</street>
                    <city>Lulea </city>
                    <code>971 87</code>
                    <country>Sweden</country>
                </postal>
                <email>avri@ltu.se</email>
                </address>
                </author>

	      <author initials="J." surname="Ott" fullname="Joerg Ott">
	      <organization> Helsinki University of Technology </organization>
	      <address>
	      <postal>
		<street>Otakaari 5 A</street>
		<city>Espoo</city>
		<code>FIN  02150</code>
		<country> Finland </country>
	      </postal>
	      <email>jo@netlab.hut.fi</email>
	     </address>
	     </author>


	    <date month="September" year="2009"/>
            </front>
            <seriesInfo name="draft-irtf-dtnrg-dtn-uri-scheme-00.txt," value="work-in-progress"/>
         </reference>

    </references>
    <references title="Informative References">


      &RFC3986;
      
      &RFC4838;

    </references>
<!-- APPENDIX-->
    <section anchor="appendix_A" title="DTN Routing Protocols And Algorithms">
    
    <t>DTN routing protocols and algorithms have EID registrations as they are services used by DTN 
    applications and the BPA. For examples of the the application of EIDs to DTN routing protocols and 
    algorithms please see <xref target="dtnURI" format="default" pageno="false"/>.</t>   

    <t>An EDP agent must be able to report a list of the preferred routing protocol or
    algorithms for each active CLA EID registration. It is expected that DTN routing
    protocols and algorithms (to be agreed upon), make use of information learned via
    EDP and provide statistics in such a way that they are accessible to an EDP agent.</t>

     
    </section>
    
    <section anchor="appendix_B" title="CLA Parameters">

    <t>An EDP agent must be able to report a list of the preferred CLAs for each
    EID registration. An EDP node is expected to be capable of obtaining statistics
    that include the contact attempts, up-time, number of contacts and
    throughput of available CLAs. The number of bundles deferred and number of bytes
    transmitted, queued, and cancelled are also expected to be available to the EDP
    agent.</t>

    <t>CLA parameters that are common to all CLAs SHOULD be available for an EDP node to query.
    Examples of such common parameters are Link name, CLA EID, CLA type, CLA state, next DTN hop,
    and MTU.</t>

    <t>It is expected that there are CLA parameters that are specific to a CLA. CLA
    specific data such as the local COMM port, MAC address, IP address, port, whether segment ack
    or negative ack is enabled and the segment length should also be accessible to EDP</t>

    <t>It is expected that an API (see <xref target="appendix_C"></xref>) will be required to
    facilitate the query of an EDP nodes CLA names and parameters.</t>
    </section>


    <section anchor="appendix_C" title="APIs for EDP">
    <t>It is expected that various APIs are required to enable EDP to query and set parameters.
    APIs are required to facilitate manipulation of the data dictionary, query CLA names and 
    parameters, query active EID registration URIs and registration parameters, and to set the 
    DTN hop limit to 1.</t> 
    </section>

    <section anchor="appendix_D" title="The Data Dictionary">

    <t>The EDP application agent must be able to add and delete EIDs to the data
    dictionary of the primary block (see <xref target="appendix_C"></xref>). EDP discharges this
    responsibility by directing the node's BP application agent to construct the record and
    manipulate the data dictionary. The data dictionary
    is populated with a byte array, expressed as a SDNV, of the concatenation of any number of
    null-terminated active EIDs and CLA EIDs.</t>
    </section>


        <section anchor="appendix_E" title="Discovery Mechanisms">

   <t>An EDP agent is expected to discover and report active CLAs.  EDP is
   expected to leverage existing discovery schemes when available. At least one CLA,
   whether discovered and activated automatically or configured and activated
   manually, is required by EDP.</t>
        </section>


    <!-- Change Logdd

v00 2009-12-01  EBD   Initial version -->
  </back>
</rfc>
