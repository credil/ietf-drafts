<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc strict="yes"?>
<?rfc tocompact="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc tocdepth="2"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes" ?>
<?rfc sortrefs="yes" ?>
<!--<?rfc rfcedstyle="yes"?>-->

<!-- noModification3978 -->


<rfc category="std" ipr="trust200811" docName="draft-arias-registry-data-escrow-00">


<front>

<title abbrev="Registry Data Escrow">

	Internet Domain Registry Data Escrow specification 

</title>


<author initials="F." surname="Arias" fullname="Francisco Arias">
	<organization abbrev="ICANN">
		Internet Corporation for Assigned Names and Numbers
	</organization>
	<address>
		<postal>
			<street>4676 Admiralty Way, Suite 330</street>
			<code>90292</code> <city>Marina del Rey</city>
			<country>United States of America</country>
		</postal>
		<phone>+1.310.823.9358</phone>
		<email>francisco.arias@icann.org</email>
	</address>
</author>

<date month="January" year="2010"/>

<area> Applications </area>
    
<keyword>escrow</keyword>       
<keyword>registry</keyword>
<keyword>domain</keyword>


<abstract>
    <t>
        This document specifies the format and contents of Data Escrow deposits for Domain Registries.
	</t>
</abstract>


</front>


<middle>


<section title="Introduction">

    <t>
        Registration Data Escrow is the process by which an Internet Registration 
        Organization, being a registry, registrar, etc., periodically submits data 
        deposits to a contracted third party called an Escrow Agent.  These deposits 
        comprise all the data needed to resume operations if the registration 
        organization could not function as a result of a catastrophe or a financial 
        situation.  The deposited data includes domain names, contacts, name servers, 
        etc. for a domain name registry or registrar.
    </t>      
    <t>          
        The purpose of data escrow is to permit quick resumption of registration 
        service by another registration organization after a catastrophe.  The 
        goal is higher resiliency of registration services, for the benefit of 
        Internet users.  The beneficiaries of a registry are not just those 
        registering information there, but all relying parties needing to 
        identify the owners of objects.                     
    </t>        
    <t>        
        In the context of domain name registries, registration data escrow is 
        a requirement for the current generic top-level domains and it is 
        expected to be for new registries.  Some country code top-level 
        domain managers are also interested in implementing registration data 
        escrow for themselves. There is also such a requirement for ICANN's 
        generic top-level domain accredited registrars.                 
    </t>
    <t>
        This document specifies the format and contents of Data Escrow deposits for 
        Domain Registries.
    </t>

</section>
        
        
<section title="Terminology">
    
    	<t>
            The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", 
            "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be 
            interpreted as described in BCP 14, RFC 2119 <xref target="RFC2119"/>.
    	</t>       
        <t>
            DEPOSIT.
            Deposits can be of two kinds: Full or Incremental. For both kinds of Deposits, the Universe of Registry objects 
            to be considered for data escrow are those objects necessary in order to offer the Registry Services.
        </t>
        <t>
            ESCROW AGENT. The organization contracted by the Registry or the Third-Party Beneficiary to receive and 
            guard Data Escrow Deposits from the Registry.
        </t>
        <t>
            FULL DEPOSIT. Contains the Registry Data that reflects the current and complete Registry 
            Database and will consist of data that reflects the state of the registry as of a defined
            Timeline Watermark for the deposit.
        </t>     
        <t>
            INCREMENTAL DEPOSIT. Contains data that reflects all transactions involving the database 
            that were not reflected in the last previous Full or Incremental Deposit, as the case may be. 
            Each incremental file will contain information from all database objects since 
            the previous Deposit was completed as of its defined Timeline Watermark.
        </t>
        <t>
            REGISTRY. The organization providing Registry Services for a RCDN.
        </t>
        <t>
            REGISTRY-CLASS DOMAIN NAME (RCDN): Refers to a top-level domain (TLD) or any other domain name at any level 
            in the DNS tree for which a Registry (or an affiliate engaged in providing Registration Services) provides 
            Registry services to other organizations or individuals, maintains data, arranges for such maintenance, or 
            derives revenue from such maintenance. For example: .COM, .JP, .CO.JP, .ORG.MX.
        </t>
        <t>
            REGISTRY SERVICES. Services offered by the Registry critical to the following tasks: the receipt of data from 
            registrars concerning registrations of domain names and name servers; provision to registrars of status 
            information relating to the DNS servers for the RCDN; dissemination of RCDN zone files; operation of the 
            Registry DNS servers; and dissemination of contact and other information concerning DNS registrations in the 
            RCDN. Any other products or services that only a Registry is capable of providing, by reason of its 
            designation as the Registry. Typical examples of Registry Services are: DNS resolution for the RCDN, WHOIS 
            and EPP.
        </t>
        <t>
            THIRD-PARTY BENEFICIARY. Is the organization that, under extraordinary circumstances, would receive the
            escrow Deposits the Registry transferred to the Escrow Agent. This organization could be a backup Registry,
            Registry regulator, contracting party of the Registry, etc.
        </t>
        <t>
            TIMELINE WATERMARK. Point in time on which to base the collecting of database objects for a Deposit. 
            Deposits are expected to be consistent to that point in time.
        </t>
    
</section>

    
<section title="Problem Scope">

    <t>
        Since a few years ago, the issue of Registry continuity has been carefully considered in the gTLD and ccTLD space. 
        Various organizations have made risk analysis and developed Business Continuity Plans to deal with those risks, 
        should they materialize.
    </t>
    <t>
        One of the solutions considered and used, especially in the gTLD space, is Registry Data Escrow as a way to ensure 
        the Continuity of Registry Services in the extreme case of Registry failure.
    </t>
    <t>
        So far, almost every Registry that uses Registry Data Escrow has its own specification. It is also anticipated that 
        more Registries will be implementing Escrow especially with the advent of the new gTLD program.
    </t>
    <t>
        Now, it would seem necessary to have a standardized specification for Registry Data Escrow that can be used by any 
        Registry to submit its Deposits and, in case, to use those deposits to operate Registry Services for a RCDN that 
        has to be transitioned of Registry operator.
    </t>
    <t>
        A solution to the problem at hand SHALL clearly identify the format and contents of the Deposits a Registry has to 
        make, such that another different Registry would be able to rebuild the Registry Services of the former in a timely 
        manner, with minimum harm to the Registrants, Registrars and Internet users.
    </t>
    <t>
        Since the list and details of Registry Services vary from Registry to Registry, the solution SHALL provide mechanisms 
        that allow its extensibility to accommodate variations and extensions of the Registry Services.
    </t>
    <t>
        Given the confidentiality and importance of some of the information that is handled in order to offer the Registry 
        Services, the solution SHALL use confidentiality and integrity mechanisms when handling the Registry data.
    </t>
    <t>
        The solution SHALL NOT include in the specification those objects of such delicate confidentiality that it is best 
        to leave them out of the Deposits, e.g., DNSSEC KSK/ZSK private keys.
    </t>
    <t>
        Registrars’ data and in particular billing data SHALL be included, at least, in the detail needed to ensure the 
        continuity of Registrar operations with the RCDN.
    </t>
    <t>
        Details that are a matter of policy SHOULD be identified as such for the benefit of the implementers.
    </t>
    <t>
        Legal issues around Data Escrow and the overall question of using Registry Data Escrow SHALL NOT be considered.
    </t>
    
</section>
    
    
<section title="General Conventions">

    <section title="File Naming Conventions" anchor="naming-conventions">
        <t>
            Files SHALL be named according to the following convention
        </t>
        <t>
            {TLD}_{YYYY-MM-DD}_{FILE}_{type}_S{#}_R{rev}{.ext}
        </t>
        <t>
            where:        
          <list style="symbols">
            <t> {TLD} is the TLD name; in case of an IDN-TLD, the ASCII-compatible form 
                (A-Label) MUST be used;
                </t>
            <t> {YYYY-MM-DD} is replaced by the date corresponding to the time used as a timeline watermark 
                for the transactions; i.e. for the Full Deposit corresponding to 2009-08-02T00:00Z, the 
                string to be used would be “2009-08-02”;
                </t>
            <t> {FILE} is replaced with the file type as indicated in <xref target="registry-objects"/> 
                and <xref target="XML-schemas"/>;
                </t>
            <t> {type} is replaced by:
                <list style="numbers">
                    <t> “full”, if the data represents a full deposit; </t>
                    <t> “inc”, if the data represents an incremental deposit; </t>
                </list></t>
            <t> {#} is replaced by the position of the file in a series of files (used when splitting a large file), beginning 
                with “1”; in case of a lone file, this MUST be replaced by “1”; </t>
            <t> {rev} is replaced by the number of revision (or resend) of the file beginning with “0”; </t>
            <t> {.ext} is replaced by “.sig” if it is a digital signature file of the quasi-homonymous 
                file. Otherwise it is replaced by “” nothing. </t>
        </list>                  
      </t>              
    </section>
    
    <section title="File Format and Encoding">
        <t>
            Data files containing objects as domains, contacts, name servers, etc. SHALL be compiled into 
            CSV “plain” text files, as described in Common Format and MIME Type for Comma-Separated Values 
            (CSV) Files <xref target="RFC4180"/>.
            EPP XML Schema files SHALL be compiled into “plain” text files.
            The character encoding for both of these files SHALL be UTF-8.
        </t>
    </section>
    
    <section title="Dates">
        <t>
            Numerous fields indicate "dates", such as the creation and expiry dates for domains. These 
            fields SHALL contain timestamps indicating the date and time in a format that is consistent 
            across all such fields in the escrow deposit. Timestamps SHALL be presented in UTC with no 
            offset from the zero meridian, consistent with the date/time handling used in EPP <xref target="RFC5730"/>.
        </t>
    </section>
    
    <section title="Country names">
        <t>
            Country identifiers are represented using two character identifiers as specified in <xref target="ISO-3166-1"/>.
        </t>
    </section>
    
    <section title="Telephone numbers">
        <t>
            Telephone numbers (both voice and fax) SHALL be formatted based on structures defined in <xref target="ITU-E164"/>.
            Telephone numbers described in this specification are character strings that MUST begin with a plus sign ("+", ASCII value
            0x002B), followed by a country code defined in <xref target="ITU-E164"/>, followed by a dot (".", ASCII value 0x002E), 
            followed by a sequence of digits representing the telephone number.
        </t>
    </section>
    
    <section title="IP addresses">
        <t>
            IP addresses syntax MUST conform either to, Internet Protocol <xref target="RFC0791"/>, for IPv4 addresses, 
            or IP Version 6 Addressing Architecture <xref target="RFC4291"/>, for IPv6 addresses.
        </t>
    </section>
    
    <section title="Object Statuses">
        <t>
            EPP as specified in <xref target="RFC5730"/> and related RFCs <xref target="RFC5731"/>, 
            <xref target="RFC5732"/>, <xref target="RFC5733"/> indicate permissible status codes for 
            various registry objects. In the case of domains, the status values described in Domain Registry 
            Grace Period Mapping for the EPP <xref target="RFC3915"/>, and the status “reserved” are also 
            allowed; see <xref target="reserved-domains"/>.
        </t>
    </section>
    
    <section title="Reserved Names Handling" anchor="reserved-domains">
        <t>
            Registries typically have a set of names reserved on behalf of themselves or for policy reasons. 
            Reserved names MUST be included in the DOMAIN file, and have the special "reserved" status associated 
            with them in the DOMSTATUS file to indicate that they are reserved.
        </t>
    </section>
    
    <section title="IDN variants Handling" anchor="IDN-variants-handling">
        <t>
            Depending on the Registration Policy in place in the Registry; for a particular IDN, there may be 
            multiple variant domains either registered, reserved or blocked:
            <list style="numbers">
                <t> If the IDN variant is actually registered, bundled with its canonical domain name in the 
                    Registry system, the variant SHALL be tagged as “registered”.
                </t>
                <t> If only the holder of the canonical domain name is allowed to register the IDN variant but 
                    it is not actually registered, the variant SHALL be tagged as “reserved”.
                </t>
                <t> If the IDN variant is considered undesirable for registration, the variant SHALL be tagged as “blocked”.
                </t>
            </list>
        </t>
    </section>
    
</section>


<section title="Registry objects" anchor="registry-objects">
    <t>
        For each registry object the order in which its fields are presented indicates the order in which they MUST 
        be in the respective record.
        The first line of all CSV files MUST be the “header line” as described in section 2 of <xref target="RFC4180"/> 
        containing the short name of every field. Such short names are provided below in the specification 
        of each file type contained between “{” and “}”.
    </t>
    
    <section title="Domains">
        <t>
            Indicates a file type "DOMAIN". This file SHALL contain all the domain names the Registry currently handles, 
            including domains in sub-TLD levels, if the Registry provides Registry Services for them. In the case of 
            Internationalized Domain Names (IDN), the A-label SHALL be used in the “Domain Name” field 
            (e.g. - "xn-11b5bs1di.tld"), not the U-Label.
            The following fields SHALL be stored in the DOMAIN file:
            <list style="numbers">
                <t>{domainHandle}, Domain Handle;</t>
                <t>{domainName}, Domain Name;</t>
                <t>{sponsoringRegistrar}, Registrar Handle for the present sponsoring Registrar;</t>
                <t>{creationDate}, Creation Date;</t>
                <t>{creatorRegistrar}, Registrar Handle for the initial/creator Registrar;</t>
                <t>{expiryDate}, Expiry Date;</t>
                <t>{authInfo}, Authorization information for the domain;</t>
                <t>{updateRegistrar}, Registrar Handle for the Registrar that updated the domain for the last time, empty if none;</t>
                <t>{lastUpdate}, Date of last update, empty if none;</t>
                <t>{lastTransferDate}, Date of last transfer, empty if none; and</t>
                <t>{deletionDate}, Date of deletion, for domains waiting to be purged or restored see <xref target="RFC3915"/>, empty if none.</t>
            </list>
        </t>
    </section>
    
    <section title="Contacts">
        <t>
            Indicates a file type "CONTACT". This file contains all the contact objects linked to any of the domain names 
            escrowed in the DOMAIN file.
            The following fields SHALL be stored in the CONTACT file:
            <list style="numbers">
                <t>{contactHandle}, Contact Handle;</t>
                <t>{ sponsoringRegistrar }, Registrar Handle for the sponsoring registrar;</t>
                <t>{creationDate}, Creation Date;</t>
                <t>{authInfo}, Authorization information for the contact;</t>
                <t>{voiceNumber}, Voice Telephone Number;</t>
                <t>{voiceExt}, Voice Telephone Extension;</t>
                <t>{faxNumber}, Fax Telephone Number;</t>
                <t>{faxExt}, Fax Extension;</t>
                <t>{email}, Email Address.</t>
                <t>{creatorRegistrar}, Registrar Handle of the creator Registrar;</t>
                <t>{updateRegistrar}, Registrar Handle of the registrar who last updated the contact;</t>
                <t>{lastUpdate}, Last update Date; and</t>
                <t>{lastTransferDate}, Last transfer Date.</t>
            </list>
        </t>
    </section>
    
    <section title="Contacts' Addresses">
        <t>
            Indicates a file type "CONADDR". Contains the addresses of the Contacts. Only two addresses per Contact are 
            allowed provided they are of different types.
            The following fields SHALL be stored in the CONADDR file:
            <list style="numbers">
                <t>{contactHandle}, Contact Handle;</t>
                <t>{addressType}, Address type, SHALL be “int” or “loc” as described in <xref target="RFC5733"/>;</t>
                <t>{contactName}, Contact Name;</t>
                <t>{contactOrganization}, Contact Organization;</t>
                <t>{postalAddress1}, Postal Address 1;</t>
                <t>{postalAddress2}, Postal Address 2;</t>
                <t>{postalAddress3}, Postal Address 3;</t>
                <t>{city}, City;</t>
                <t>{stateProvinceOrRegion}, State/Province/Region;</t>
                <t>{postalCode}, Postal Code; and</t>
                <t>{Country}, Country.</t>
            </list>
        </t>
    </section>
    
    <section title="Name servers">
        <t>
            Indicates a file type "NAMESERVER”.
            The following fields SHALL be stored in the NAMESERVER file:
            <list style="numbers">
                <t>{nameServerHandle}, Name server Handle;</t>
                <t>{nameServerName}, Name server Name;</t>
                <t>{creationDate}, Creation Date; and</t>
                <t>{sponsoringRegistrar}, Registrar Handle of sponsoring registrar.</t>
            </list>
        </t>
    </section>
    
    <section title="Name server IP Addresses">
        <t>
            Indicates a file type "NSIP"
            The following fields SHALL be stored in the NSIP file:
            <list style="numbers">
                <t>{nameServerHandle}, Name server Handle; and</t>
                <t>{ip}, IP Address.</t>
            </list>
        </t>
    </section>
    
    <section title="Delegation Signer (DS) records">
        <t>
            Indicates a file type "DOMDS". Only the first five fields are REQUIRED, the rest MAY be left blank. These 
            fields are related to those described in DNSSEC Extensions Mapping for the EPP <xref target="RFC4310"/>.
            Below is the list of fields to be stored in the DOMDS file:
            <list style="numbers">
                <t>{domainHandle}, Domain Handle;</t>
                <t>{keyTag}, KeyTag;</t>
                <t>{algorithm}, Algorithm;</t>
                <t>{digestType}, Digest Type;</t>
                <t>{digest}, Digest;</t>
                <t>{maximumSigLife}, Maximum Signature Life;</t>
                <t>{dnskeyFlags}, DNSKey Flags;</t>
                <t>{dnskeyProtocol}, DNSKey Protocol;</t>
                <t>{dnskeyAlgorithm}, DNSKey Algorithm; and</t>
                <t>{publicKey}, Public key.</t>
            </list>
        </t>
    </section>
    
    <section title="Registrars">
        <t>
            Indicates a file type "REGISTRAR". This file contains information for every Registrar linked with any domain 
            name included in DOMAIN.
            The following fields SHALL be stored in the REGISTRAR file:
            <list style="numbers">
                <t>{registrarHandle}, Registrar Handle;</t>
                <t>{ianaId}, IANA ID for Registrar as per IANA Registrar IDs [8];</t>
                <t>{registrarName}, Registrar Name; and</t>
                <t>{accountBalance}, Registrar account balance.</t>
            </list>
        </t>
    </section>
    
    <section title="Domain - Status associations">
        <t>
            Indicates a file type "DOMSTATUS". Contains all the statuses for every domain in DOMAIN.
            The following fields SHALL be stored in the DOMSTATUS file:
            <list style="numbers">
                <t>{domainHandle}, Domain Handle;</t>
                <t>{statusValue}, Status Value, as per the earlier section on Object Statuses; and</t>
            </list>
        </t>
    </section>
    
    <section title="Contact - Status associations">
        <t>
            Indicates a file type "CONSTATUS". Contain all the statuses for every contact in CONTACT.
            The following fields SHALL be stored in the CONSTATUS file:
            <list style="numbers">
                <t>{contactHandle}, Contact Handle;</t>
                <t>{statusValue}, Status Value, as per the earlier section on Object Statuses; and</t>
            </list>
        </t>
    </section>
    
    <section title="Name server - Status associations">
        <t>
            Indicates a file type "NSSTATUS". Contain all the statuses for every name server in NAMESERVER.
            The following fields SHALL be stored in the NSSTATUS file:
            <list style="numbers">
                <t>{nameServerHandle}, Name server Handle;</t>
                <t>{statusValue}, Status Value, as per the earlier section on Object Statuses; and</t>
                <t>{reasonCode}, Reason Code.</t>
            </list>
        </t>
    </section>
    
    <section title="Domain - Contact associations">
        <t>
            Indicates a file type "DOMCONTACT". Contain all the associations between contacts and domains.
            The following fields SHALL be stored in the DOMCONTACT file:
            <list style="numbers">
                <t>{domainHandle}, Domain Handle;</t>
                <t>{contactHandle}, Contact Handle; and</t>
                <t>{contactType}, Contact Type; SHALL be one of following: reg, admin, billing, tech.</t>
            </list>
        </t>
    </section>
    
    <section title="Domain - Name server associations">
        <t>
            Indicates a file type "DOMNS". Contain all the associations between domain names and their respective name servers.
            The following fields SHALL be stored in the DOMNS file:
            <list style="numbers">
                <t>{domainHandle}, Domain Handle; and</t>
                <t>{nameServerHandle}, Name server Handle.</t>
            </list>
        </t>
    </section>
    
    <section title="Domain deletions">
        <t>
            Indicates a file type "DOMDEL". This file MUST be sent only for incremental escrow deposits 
            (e.g. - file type "inc"); it indicates the list of domains that were in the previous deposit that have since 
            been removed.
            The following fields SHALL be stored in the DOMDEL file:
            <list style="numbers">
                <t>{domainHandle}, Domain Handle; and</t>
                <t>{deletionDate}, Deletion Date.</t>
            </list>
        </t>
    </section>
    
    <section title="Contact deletions">
        <t>
            Indicates a file type "CONTDEL". This file MUST be sent only for incremental escrow deposits 
            (e.g. - file type "inc"); it indicates the list of contacts that were in the previous deposit that have since 
            been removed.
            The following fields SHALL be stored in the CONTDEL file:
            <list style="numbers">
                <t>{contactHandle}, Contact Handle; and</t>
                <t>{deletionDate}, Deletion Date.</t>
            </list>
        </t>
    </section>
    
    <section title="Name server deletions">
        <t>
            Indicates a file type "NSDEL". This file MUST be sent only for incremental escrow deposits 
            (e.g. file type "inc"); it indicates the list of name servers that were in the previous deposit, that have since 
            been removed.
            The following fields SHALL be stored in the NSDEL file:
            <list style="numbers">
                <t>{nameServerHandle}, Name server Handle; and</t>
                <t>{deletionDate}, Deletion Date.</t>
            </list>
        </t>
    </section>
    
    <section title="DS deletions">
        <t>
            Indicates a file type "DSDEL". This file MUST be sent only for incremental escrow deposits 
            (e.g. file type "inc"); it indicates the list of domains that used to have DNSSEC delegation signer record(s) 
            in the previous deposit that no longer have them.
            The following fields SHALL be stored in the DSDEL file:
            <list style="numbers">
                <t>{domainHandle}, Domain Handle; and</t>
                <t>{dsDeletionDate}, DS record(s) Deletion Date.</t>
            </list>
        </t>
    </section>
    
    <section title="Internationalized Domain Names (IDNs)">
        <t>
            Indicates a file type " DOMIDN". If an IDN has a corresponding entry in the “DOMAIN” file, the handle for 
            that entry SHALL be provided in the “Domain Handle” field.
        </t>
        <t>
            If this IDN is a variant of another IDN (the canonical domain name), the handle for the canonical domain 
            name SHALL be provided in the “Canonical Domain Handle” field. For IDNs that are canonical domain names, 
            the “Canonical Domain Handle” field SHALL be left blank.
        </t>
        <t>
            The field “Variant Tag” indicates the tag of the IDN variant and SHALL be any of: “registered”, “reserved” 
            or “blocked”; see <xref target="IDN-variants-handling"/>. For canonical domain names it SHALL be left blank.
            The “IDN Table ID” field SHALL contain the internal ID (see <xref target="IDN-tables-index"/>) of the IDN 
            Table corresponding to the IDN.
        </t>
        <t>
            If the Registrar provided the U-Label for the IDN to the Registry, both U-label and A-label SHALL be escrowed; 
            if not, only the A-Label SHALL be escrowed.
            Below is the list of fields to be stored in the DOMIDN file:
            <list style="numbers">
                <t>{domainHandle}, Domain Handle;</t>
                <t>{canonicalDomainHandle}, Canonical Domain Handle;</t>
                <t>{variantTag}, Variant Tag;</t>
                <t>{idnTableId}, IDN Table ID;</t>
                <t>{aLabel}, A-Label; and</t>
                <t>{uLabel}, U-Label;</t>
            </list>
        </t>
        
    </section>
    
    <section title="IANA IDN Tables index" anchor="IDN-tables-index">
        <t>
            Indicates a file type "IDNTABLES". This is a file containing a listing of the different IDN Table URIs in 
            IANA used for the IDNs in the TLD. The “IDN Table ID” field SHALL contain a number that will serve 
            as internal ID for the IDN Table.
            The following fields SHALL be stored in the IDNTABLES file:
            <list style="numbers">
                <t>{idnTableId}, IDN Table ID; and</t>
                <t>{idnTableUri}, IDN Table URI in IANA Repository.</t>
            </list>
        </t>
    </section>
    
    <section title="EPP Contact information disclosure">
        <t>
            Indicates a file type "EPPCONDISCL”. Contains exceptional disclosure information for contacts as specified in 
            <xref target="RFC5733"/>. With the exception of the Contact Handle, all the fields in this file MUST be “true”, 
            “false” or empty.
            Below is the list of fields to be stored in the EPPCONDISCL file:
            <list style="numbers">
                <t>{contactHandle}, Contact Handle;</t>
                <t>{intName}, Internationalized name;</t>
                <t>{locName}, Localized name;</t>
                <t>{intOrganization}, Internationalized organization;</t>
                <t>{locOrganization}, Localized organization;</t>
                <t>{intAddress}, Internationalized address;</t>
                <t>{locAddress}, Localized address;</t>
                <t>{voice}, Voice;</t>
                <t>{fax}, Fax; and</t>
                <t>{email}, Email.</t>
            </list>
        </t>
    </section>
    
    <section title="EPP server Data Collection Policies">
        <t>
            Indicates a file type "EPPDCP”. These file type is related with section 2.4 of EPP <xref target="RFC5730"/>. 
            All the fields SHALL only be “true”, “false” or empty.
            Below is the list of fields to be stored in the EPPDCP file:
            <list style="numbers">
                <t>{accessAll}, Access to All;</t>
                <t>{accessNone}, Access to None;</t>
                <t>{accessNull}, Access Null;</t>
                <t>{accessPersonal}, Access Personal;</t>
                <t>{accessPersonalAndOther}, Access Personal and other;</t>
                <t>{accessOther}, Access Other;</t>
                <t>{statementAdmin}, Statement Admin;</t>
                <t>{statementContact}, Statement Contact;</t>
                <t>{statementProvisioning}, Statement Provisioning;</t>
                <t>{statementOther}, Statement Other;</t>
                <t>{recipientOther}, Recipient Other;</t>
                <t>{recipientOurs}, Recipient Ours;</t>
                <t>{recipientPublic}, Recipient Public;</t>
                <t>{recipientSame}, Recipient Same;</t>
                <t>{recipientUnrelated}, Recipient Unrelated;</t>
                <t>{retentionBusiness}, Retention Business;</t>
                <t>{retentionIndefinite}, Retention Indefinite;</t>
                <t>{retentionLegal}, Retention Legal;</t>
                <t>{retentionNone}, Retention None;</t>
                <t>{retentionStated}, Retention Stated;</t>
                <t>{expiryAbsolute}, Expiry Absolute; and</t>
                <t>{expiryRelative}, Expiry Relative.</t>
            </list>
        </t>
    </section>
    
    <section title="EPP supported versions">
        <t>
            Indicates a file type "EPPVERSIONS”. Lists the EPP versions supported by the Registry.
            The following fields SHALL be stored in the EPPVERSIONS file:
            <list style="numbers">
                <t>{eppVersion}, EPP Version Supported.</t>
            </list>
        </t>
    </section>
    
    <section title="EPP text response languages">
        <t>
            Indicates a file type "EPPLANGS”. Lists the identifiers of the text response languages known by the EPP server.
            The following fields SHALL be stored in the EPPLANGS file:
            <list style="numbers">
                <t>{language}, Language Supported; as specified in section 2.4 of EPP <xref target="RFC5730"/>.</t>
            </list>
        </t>
    </section>
    
    <section title="EPP supported objects">
        <t>
            Indicates a file type "EPPOBJECTS”. Lists the EPP objects the server is capable of managing.
            The following fields SHALL be stored in the EPPOBJECTS file:
            <list style="numbers">
                <t>{objectName}, Object Name;</t>
                <t>{namespaceObjectUri}, Namespace Object URI; and</t>
                <t>{xmlSchemaFilename}, XML Schema Filename URL.</t>
            </list>
        </t>
    </section>
    
    <section title="EPP supported extensions">
        <t>
            Indicates a file type "EPPEXTENSIONS”. Lists the EPP extensions the Registry supports.
            The following fields SHALL be stored in the EPPEXTENSIONS file:
            <list style="numbers">
                <t>{extensionName}, Extension Name;</t>
                <t>{namespaceExtUri}, Namespace Extension URI; and</t>
                <t>{xmlSchemaFilename}, XML Schema Filename URL.</t>
            </list>
        </t>
    </section>
    
</section>


<section title="XML Schemas" anchor="XML-schemas">
    <t>
        For each of the EPP Objects and Extensions supported by the Registry, there SHALL be an XML Schema file in the 
        escrow deposits. The file types for the base EPP objects and extensions are presented in this section.
    </t>
    
    <section title="EPP Object - Domain Name XML Schema">
        <t>
            Indicates a file type "XSDOBJDOMAIN”. Holds the EPP XML Schema for Domain Names used by the Registry.
        </t>
    </section>
    
    <section title="EPP Object - Contact XML Schema">
        <t>
            Indicates a file type "XSDOBJCONTACT”. Holds the EPP XML Schema for Contacts used by the Registry.
        </t>
    </section>
    
    <section title="EPP Object - Host XML Schema">
        <t>
            Indicates a file type "XSDOBJHOST”. Holds the EPP XML Schema for Hosts (Name servers) used by the Registry.
        </t>
    </section>
    
    <section title="EPP Extension - Domain Registry Grace Period XML Schema">
        <t>
            Indicates a file type "XSDEXTDRGP”. Holds the EPP XML Schema for Domain Registry Grace Period Extension used by 
            the Registry.
        </t>
    </section>
    
    <section title="EPP Extension - DNSSEC XML Schema">
        <t>
            Indicates a file type "XSDEXTDNSSEC”. Holds the EPP XML Schema for DNSSEC Extension used by the Registry.
        </t>
    </section>
    
</section>
    
    
<section title="Non-base EPP Objects">
    <t>
        (To be developed.)
    </t>
</section>
    
    
<section title="Required file types">
    
    <t>
        The following table summarizes the required file types according to the type of Deposit. A file type required 
        means that it SHALL be present in the Deposit if there is corresponding data in the Registry database.
        “yes” means the file type is required. “IDN” means the file type is required if the Registry supports IDN 
        registrations.
        “thick” means the file type is required if the Registry is of type thick. “DNSSEC” means the file is required 
        if the Registry supports DNSSEC. 
        “disclosure” means the file type is required if the Registry supports contact disclosure controls.
        “no” means the file type SHALL NOT be present in the type of Deposit.
    </t>
    
    <texttable align="center" title="Required file types per Deposit" suppress-title="true">
        <ttcol>File type</ttcol>    <ttcol>Full Deposit</ttcol>    <ttcol>Incremental Deposit</ttcol>
        <c>DOMAIN</c>                <c>yes</c>                    <c>yes</c>
        <c>CONTACT</c>               <c>thick</c>                  <c>thick</c>
        <c>CONADR</c> <c>thick</c> <c>thick</c>
        <c>NAMESERVER</c> <c>yes</c> <c>yes</c>
        <c>NISP</c> <c>yes</c> <c>yes</c>
        <c>DOMDS</c> <c>DNSSEC</c> <c>DNSSEC</c>
        <c>REGISTRAR</c> <c>yes</c> <c>yes</c>
        <c>DOMSTATUS</c> <c>yes</c> <c>yes</c>
        <c>CONSTATUS</c> <c>thick</c> <c>thick</c>
        <c>NSSTATUS</c> <c>yes</c> <c>yes</c>
        <c>DOMCONTACT</c> <c>thick</c> <c>thick</c>
        <c>DOMNS</c> <c>yes</c> <c>yes</c>
        <c>DOMDEL</c> <c>no</c> <c>yes</c>
        <c>CONTDEL</c> <c>no</c> <c>thick</c>
        <c>NSDEL</c> <c>no</c> <c>yes</c>
        <c>DSDEL</c> <c>no</c> <c>DNSSEC</c>
        <c>DOMIDN</c> <c>IDN</c> <c>IDN</c>
        <c>IDNTABLES</c> <c>IDN</c> <c>IDN</c>
        <c>EPPCONDISCL</c> <c>disclosure</c> <c>disclosure</c>
        <c>EPPDCP</c> <c>yes</c> <c>yes</c>
        <c>EPPVERSIONS</c> <c>yes</c> <c>yes</c>
        <c>EPPLANGS</c> <c>yes</c> <c>yes</c>
        <c>EPPOBJECTS</c> <c>yes</c> <c>yes</c>
        <c>EPPEXTENSIONS</c> <c>yes</c> <c>yes</c>
        <c>XSDOBJDOMAIN</c> <c>yes</c> <c>yes</c>
        <c>XSDOBJCONTACT</c> <c>yes</c> <c>yes</c>
        <c>XSDOBJHOST</c> <c>yes</c> <c>yes</c>
        <c>XSDEXTDRGP</c> <c>yes</c> <c>yes</c>
        <c>XSDEXTDNSSEC</c> <c>yes</c> <c>yes</c>
    </texttable>
    
</section>
        
        
<section title="Processing of data files">
    
    <t>
        Which algorithms to use for Encryption and Compression is a matter of policy that has to be dealt with by
        the Registry, the Escrow Agent and the Third-Party Beneficiary.
        Notwithstanding, in general, it is better to use those algorithms enumerated in <xref target="RFC4880"/>, not 
        marked as deprecated in OpenPGP IANA Registry <xref target="PGP-params"/>, that are also royalty-free.
        Specific suggestions are provided below.
    </t>
    <t>
        The process to follow for each file in original text format is:
        <list style="numbers">
            <t>
                The file SHALL be compressed to reduce transfer times between the Registry and the Escrow Agent, and to 
                reduce storage capacity requirements. The RECOMMENDED algorithm for compression is ZIP as per 
                <xref target="RFC4880"/>.
            </t>
            <t>
                The file SHALL then be encrypted using the Escrow Agent's public key to ensure the privacy of registry escrow 
                data. The RECOMMENDED algorithms for Public-key encryption are Elgamal and RSA as per 
                <xref target="RFC4880"/>. 
                The RECOMMENDED algorithms for Symmetric-key encryption are AES128, CAST5 and TripleDES as per 
                <xref target="RFC4880"/>. Files once encrypted SHALL be in the binary OpenPGP format as per OpenPGP Message 
                Format <xref target="RFC4880"/>. 
            </t>
            <t>
                The file MAY be split as necessary if, once encrypted is larger than the file size limit 
                agreed with the Escrow Agent. Every part of a split file, or the whole file if split is not used, will be 
                called a processed file in this section.
            </t>
            <t>
                A digital signature file SHALL be generated for every processed file using the Registry's private key. The 
                digital signature file SHALL NOT be compressed or encrypted. The RECOMMENDED algorithms for Digital signatures 
                are DSA and RSA as per <xref target="RFC4880"/>.  The RECOMMENDED algorithms for Hashes in Digital signatures 
                are SHA1 and SHA256.
            </t>
            <t>
                Both processed file and digital signature file SHALL be named accordingly to the File Naming Conventions
                set forth in <xref target="naming-conventions"/>.
            </t>
        </list>
    </t>      
    <t>
        The processed files and digital signature files SHALL then be transferred to the Escrow Agent. This specification 
        does not require any particular transmission mechanism, though electronic delivery over "secure" transports such
        as SFTP SHOULD be used when/where available.
        In some cases even a physical medium such as CD-ROMs, DVD-ROMs, or USB storage devices may be used.
        Which transmission mechanism to use is a matter of policy to be defined by the Registry, the Escrow Agent and the 
        Third-Party Beneficiary.
    </t>
     <t>
        The Escrow Agent SHALL validate every (processed) transferred file before accepting it. The validation SHALL
        include verification of the digital signatures. The rest of the verification process is a matter of policy to
        be defined by the Registry, the Escrow Agent and the Third-Party Beneficiary.
     </t>

</section>
    
    
<section title="Distribution of Public Keys">
    <t>
        Registry, Escrow Agent and Third-Party Beneficiary SHALL exchange public keys to the other parties ahead 
        of time in a secure manner.
    </t>
    <t>
        Following is an OPTIONAL process to do that:
        <list style="numbers">
            <t> Distributing party send its public key via email to the receiving party.</t>
            <t> Receiving party confirms receipt via email.</t>
            <t> Distributing party subsequently reconfirms the authenticity of the key via offline methods, like in person 
                meeting, telephone, etc.</t>
        </list>
        In this way, public key transmission is authenticated to a user able to receive and send mail from/to a mail server 
        operated by the distributing party.
    </t>
</section>


<section title="Schedule for Deposits">
    <t>
        The schedule for deposits is a matter of policy and out of the scope of this document. Notwithstanding, given the 
        dynamic nature of most registration organizations, it is RECOMMENDED that a Full Deposit be generated once a week with 
        Incremental Deposits being generated daily.
    </t>
    <t>
        Given the global nature of most registries, it is RECOMMENDED that 00:00 UTC be used as the Timeline Watermark
        for the Deposits.
    </t>
    <t>
        For how long the Escrow Agent has to keep a Deposit is also a matter of policy but it is RECOMMENDED that every
        Deposit is kept for, at least, six months.
    </t>
</section>


<section title="IANA Considerations">
	<t>
        (To be developed.)
	</t>
</section>


<section title="Security Considerations">
    <t>
        (To be developed.)
	</t>
</section>


<section title="Acknowledgments">
    <t>
        This document is based on <xref target="Draft-Agreement"/>, Specification 2, Part A; developed with input from the 
        ICANN community and in particular the gTLD registries.
        Thanks to all those who provided constructive feedback and comments, and in particular to Patrick Jones the 
        previous editor of the aforementioned document, and Michael Young for his insightful comments and for proposing to 
        take this work to the IETF. 
        Parts of this document are based on EPP <xref target="RFC5730"/> and related RFCs by Scott Hollenbeck.
	</t>
</section>


</middle>


    <!-- REFERENCE TEMPLATE

        <reference anchor="reference.XXX">

                <front>

                        <title>XXX</title>

                        <author initials="X." surname="XXX" fullname="XXX">

                                <organization abbrev="XXX">XXX</organization>

                                <address>

                                        <postal>

                                                <street>XXX</street>

                                                <city>XXX</city>

                                                <region>XXX</region>

                                                <code>XXX</code>

                                                <country>XXX</country>

                                        </postal>

                                        <phone>XXX</phone>

                                        <facsimile>XXX</facsimile>

                                        <email>XXX</email>

                                        <uri>XXX</uri>

                                </address>



                        </author>

                        <date month="XXX" year="XXX"/>

                </front>

                <seriesInfo name="XXX" value="XXX"/>

                <format type="XXX" target="XXX"/>                       

        </reference>

        -->


<back>


<references title='Normative References'>	

	<?rfc include="reference.RFC.2119" ?>
    <?rfc include="reference.RFC.5730" ?>
    <?rfc include="reference.RFC.5731" ?>
    <?rfc include="reference.RFC.5732" ?>
    <?rfc include="reference.RFC.5733" ?>
    <?rfc include="reference.RFC.4180" ?>
    <?rfc include="reference.RFC.4880" ?>
    <?rfc include="reference.RFC.3915" ?>
    <?rfc include="reference.RFC.4310" ?>
    <!--?rfc include="reference.RFC.5226" ?-->
    
    <reference anchor="ISO-3166-1">
        <front>
            <title> Codes for the representation of names of countries and their 
                    subdivisions -- Part 1: Country codes
            </title>
            <author fullname="ISO Standard 3166">
                <organization>International Organization for Standardization</organization>
            </author>
            <date month="November" year="2006"/>
        </front>
        <seriesInfo name="ISO Standard" value="3166"/>
    </reference>
    
    <reference anchor="ITU-E164">
        <front>
            <title>
                The international public telecommunication numbering plan
            </title>
            <author>
                <organization>International Telecommunication Union</organization>
            </author>
            <date month="February" year="2005"/>
        </front>
        <seriesInfo name="ITU-T Recommendation" value="E.164"/>
    </reference>

</references>


<references title='Informative References'>

    <?rfc include="reference.RFC.0791" ?>
    <?rfc include="reference.RFC.4291" ?>
     
    <reference anchor="PGP-params" target="http://www.iana.org/assignments/pgp-parameters/pgp-parameters.xhtml">
        <front>
            <title>OpenPGP parameters</title>
            <author>
                <organization>IANA</organization>
            </author>
        </front>
    </reference>
    
    <reference anchor="Draft-Agreement" target="http://www.icann.org/en/topics/new-gtlds/draft-agreement-specs-clean-04oct09-en.pdf">
        <front>
            <title>Proposed Draft New gTLD Agreement</title>
            <author>
                <organization>ICANN</organization>
            </author>
            <date day="4" month="October" year="2009"/>
        </front>
    </reference>

</references>


</back>


</rfc>
