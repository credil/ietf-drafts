

Network Working Group                                          T. Iijima
Internet-Draft                                               Y. Atarashi
Intended status: Informational                                 H. Kimura
Expires: April 21, 2008                           Alaxala Networks Corp.
                                                              K. Toumura
                                                                H. Okita
                                            Central Research Laboratory,
                                                           Hitachi, Ltd.
                                                        October 19, 2007


              Experience of implementing NETCONF over SOAP
              draft-iijima-netconf-soap-implementation-03

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on April 21, 2008.

Copyright Notice

   Copyright (C) The IETF Trust (2007).









Iijima, et al.           Expires April 21, 2008                 [Page 1]

Internet-Draft             SOAP implementation              October 2007


Abstract

   NETCONF protocol is standardized to be exchanged over SSH, SOAP, or
   BEEP.  We developed a network management system based on NETCONF
   protocol.  For several reasons, we chose the SOAP protocol as a
   transport protocol of NETCONF.  This document describes why we chose
   SOAP as a transport protocol and the insight gained from actual
   development.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  NETCONF over SOAP  . . . . . . . . . . . . . . . . . . . .  3
     1.2.  Conventions  . . . . . . . . . . . . . . . . . . . . . . .  3
     1.3.  Motivation . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Framework of Web service . . . . . . . . . . . . . . . . . . .  4
     2.1.  SOAP as a messaging technology . . . . . . . . . . . . . .  4
     2.2.  WSDL as an Interface Description Language  . . . . . . . .  5
   3.  Insight from our Implementation  . . . . . . . . . . . . . . .  6
     3.1.  SOAP implementation of the NMS . . . . . . . . . . . . . .  7
       3.1.1.  Session maintenance in NMS . . . . . . . . . . . . . .  7
     3.2.  SOAP implementation of network equipment . . . . . . . . .  7
       3.2.1.  SOAP Engine  . . . . . . . . . . . . . . . . . . . . .  8
       3.2.2.  Session maintenance in network equipment . . . . . . .  8
   4.  A procedure of development of NETCONF manager and agent  . . .  9
   5.  Security Considerations  . . . . . . . . . . . . . . . . . . . 10
   6.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 11
   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 12
     7.1.  Normative References . . . . . . . . . . . . . . . . . . . 12
     7.2.  Informative References . . . . . . . . . . . . . . . . . . 12
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 13
   Intellectual Property and Copyright Statements . . . . . . . . . . 15


















Iijima, et al.           Expires April 21, 2008                 [Page 2]

Internet-Draft             SOAP implementation              October 2007


1.  Introduction

1.1.  NETCONF over SOAP

   In order to enable network equipment configuration automatically from
   network systems, NETCONF is designed to use XML as its description
   language since XML is easy for systems to understand.  XML is a
   suitable technology to cope with flexible specification changes and
   frequent functional extensions, and it enables automatic operation.

   SOAP is also designed to use XML and is expected to become an
   indispensable technology of Web service.  For this reason, SOAP is a
   prospective technology and well suited to the NETCONF protocol.

1.2.  Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC2119 [3].

1.3.  Motivation

   This document describes why SOAP is practical as a transport protocol
   of NETCONF in developing a network management system.  This document
   also describes the experience of implementing NETCONF over SOAP.


























Iijima, et al.           Expires April 21, 2008                 [Page 3]

Internet-Draft             SOAP implementation              October 2007


2.  Framework of Web service

   SOAP is considered to be an indispensable technology of Web service.
   So if we use SOAP as a transport protocol of NETCONF, network
   configuration by NETCONF is achieved on a framework of Web service.
   In this section, we describe the overall architecture of the Web
   service.


+---+ +-----------+ +----------------+ +--------------+ +--------+
|   | | Security  | |Reliable Message| | Transaction  | | Search |
|XML| |           | |                | |              | |        |
|   | |WS-Security| | WS-Reliability | |WS-Transaction| |  UDDI  |
|   | |           | |                | |              | +--------+
|   | |           | |                | |              | +--------+ +---------+
|   | |           | |                | |              | |language| |   API   |
|   | |           | |                | |              | |        | |         |
|   | |           | |                | |              | |  WSDL  | |  JAXM   |
|   | +-----------+ +----------------+ +--------------+ +--------+ | JAX-RPC |
|   | +----------------------------------------------------------+ |  .NET   |
|   | |                    Fundamental Messaging                 | |         |
|   | |                                                          | |         |
|   | |                        SOAP                              | |         |
+---+ +----------------------------------------------------------+ +---------+
      +----------------------------------------------------------+
      |                      Transport                           |
      |                                                          |
      |                     HTTP, HTTPS...                       |
      +----------------------------------------------------------+


               Figure 1: Overall architecture of Web service

   As depicted in figure 1, peripheral technologies around SOAP/HTTP are
   well developed, including security technology.  For instance, WS-
   Security and WS-Transaction technology are installed on SOAP only by
   inserting particular messages in the SOAP Header.  If we do not
   choose SOAP/HTTP as a transport layer of the NETCONF protocol, we
   have to develop each surrounding technology from scratch.  Hence,
   when introducing additional technologies around SOAP, the development
   of a NETCONF-based network management system is relatively easy when
   we choose SOAP as a transport protocol of NETCONF.

2.1.  SOAP as a messaging technology

   SOAP is basically designed to use distributed objects scattered
   around the Internet regardless of platform.  Therefore, SOAP is
   developed as a messaging technology that uses standardized internet



Iijima, et al.           Expires April 21, 2008                 [Page 4]

Internet-Draft             SOAP implementation              October 2007


   technology such as HTTP and XML.

   In addition, SOAP is so flexible that it is easy to incorporate other
   technologies.  For instance, the notion of session can be easily
   incorporated in SOAP by inserting a message ID into a SOAP Header.

2.2.  WSDL as an Interface Description Language

   WSDL is designed so as to bind easily with SOAP.  WSDL is an
   innovative technology for Web service since the development tool
   automatically generates interfaces to Web service by simply importing
   WSDL into the development tool.  Developers only need to customize
   the programs by putting the generated interfaces together.

   Regarding development tools that understand WSDL, useful technologies
   are available with SOAP.  For instance, Apache Axis is an interface
   generator from WSDL as well as a widely used SOAP implementation.  If
   we choose SOAP as a transport protocol, we do not need to develop
   interfaces to Web service by ourselves owing to the development tool.
































Iijima, et al.           Expires April 21, 2008                 [Page 5]

Internet-Draft             SOAP implementation              October 2007


3.  Insight from our Implementation

   In this section, we describe the architecture of NETCONF
   implementation using SOAP as its transport protocol.  Figure 2 is the
   architecture of the NETCONF implementation using SOAP.  SOAP
   implementation is implemented on both a network management system and
   network equipment.  And each SOAP implementation exchanges SOAP
   messages based on the WSDL which is provided by [2].  If Java library
   which is generated from the WSDL are provided on the network
   management system, engineers can develop NETCONF application, which
   can configure network equipment via the NETCONF protocol.  NETCONF
   application works as a NETCONF manager and network equipment works as
   a NETCONF agent.



         +-------------------------------------------------------+
         |                Network Management System              |
         |                                                       |
         |     +--------------------------------------------+    |
         |     |             NETCONF application            |    |
         |     +--------------------------------------------+    |
         |     +--------------------------------------------+    |
         |     |                Java library                |    |
         |     +--------------------------------------------+    |
         |     +--------------------------------------------+    |
         |     |              SOAP Implementation           |    |
         |     |                                            |    |
         |     |                Apache Axis                 |    |
         |     +--------------------------------------------+    |
         +---------------------|----------^----------------------+
                               |          |
                   rpc-request |          | rpc-reply
                    / SOAP     |          |  / SOAP
                    / HTTP(S)  |          |  / HTTP(S)
                               |          |
         +---------------------v----------|----------------------+
         |     +--------------------------------------------+    |
         |     |             SOAP Implementation            |    |
         |     +--------------------------------------------+    |
         |                                                       |
         |                    Network Equipment                  |
         +-------------------------------------------------------+


        Figure 2: Architecture of NETCONF implementation using SOAP

   In the following section, we explain the SOAP implementation in



Iijima, et al.           Expires April 21, 2008                 [Page 6]

Internet-Draft             SOAP implementation              October 2007


   detail in both a network management system and network equipment.

3.1.  SOAP implementation of the NMS

   Several SOAP implementations capable of being installed on NMS
   (network management system) are available today.  For instance,
   Apache Axis is a practical free software implementation of SOAP when
   we choose SOAP as a transport protocol.  Rapid parsing in the NMS is
   achieved by Axis since it uses SAX as its parser.

   Also, Axis is not only a SOAP implementation but a useful tool to
   develop a NMS.  For instance, WSDL2Java, one of Axis's tools, can
   generate Java's class file from WSDL file which is provided from
   another vendor.  Another tool called Java2WSDL does the opposite.  We
   can generate WSDL file from Java's class file.  After we develop a
   Java library that can configure network equipment, the interface to
   network equipment can be opened to the public in a form of WSDL.
   Conclusively, various kinds of benefits can be acquired if we
   introduce Axis as a SOAP implementation.

   In order to develop NETCONF-capable applications, Java library, which
   is generated by Apache Axis tool and run over SOAP implementation,
   has to incorporate such functions as management of sessions,
   validation of XML messages, and releasing of log messages.  By
   utilizing these Java library, engineers can easily develop NETCONF
   applications.

3.1.1.  Session maintenance in NMS

   In order to enable session maintenance between NMS and network
   equipment, we used cookie field in a HTTP header as a session
   identifier.  After NMS sends a hello message to network equipment,
   NMS receives a newly allocated session identifier which is written in
   the cookie field of a replying hello message.  For the following SOAP
   messages exchange, NMS preserves the cookie paired with the network
   equipment's MAC address and uses the it as a session identifier after
   that.  The store cookie is erased when the NMS sends a close session
   message and received a response message from network equipment.

3.2.  SOAP implementation of network equipment

   SOAP must also be implemented in the network equipment in order to
   accept SOAP messages sent from the NMS.  Like the case of NMS, some
   free SOAP implementations to be installed on network equipment are
   available today.  However, in the case of network equipment, memory
   capacity might be limited.  Therefore a memory saving method might be
   required when we implement SOAP in the network equipment.




Iijima, et al.           Expires April 21, 2008                 [Page 7]

Internet-Draft             SOAP implementation              October 2007


3.2.1.  SOAP Engine

   The SOAP message consists of protocol header such as HTTP header and
   a SOAP Envelope.  The SOAP Envelope is necessary in every SOAP
   message.  But in regard to the SOAP encodingStyle attribute inside
   the Envelope elements, it is not required to be there even though it
   is encouraged.  So if there's a memory constraint, we can omit a
   module of parsing encodingStyle.  In that case, default encodingStyle
   of "http://schema.xmlsoap.org/soap/encoding" is applied.

   Inside of the SOAP Envelope, there are SOAP Header and SOAP Body.
   However, the SOAP Header is defined as optional.  So, when memory
   capacity in network equipment is insufficient, the module that
   processes SOAP Header can be omitted.  After all, a SOAP engine in
   network equipment is allowed to have only a SOAP Envelope and Body
   parser.

3.2.2.  Session maintenance in network equipment

   In order to maintain sessions with the NMS, SOAP implementation in
   network equipment must provide session identifier to the NMS.  SOAP
   implementation in network equipment sets session identifier paired
   with network equipment's MAC address in a cookie field of the HTTP
   header and sends it as a response message to initial hello message
   sent from the NMS.  The session identifier is used when locking the
   configuration of the network equipment.  When network equipment
   receives a close message from the NMS, the network equipment erases
   the cookie identifier.























Iijima, et al.           Expires April 21, 2008                 [Page 8]

Internet-Draft             SOAP implementation              October 2007


4.  A procedure of development of NETCONF manager and agent

   TBD
















































Iijima, et al.           Expires April 21, 2008                 [Page 9]

Internet-Draft             SOAP implementation              October 2007


5.  Security Considerations

   Security should be considered from two angles.  One is transport-
   level security, and the other is message-level security.  Transport-
   level security, such as encryption of entire messages, is a matter of
   SSL/TLS.  However, message-level security, such as partial encryption
   of messages or signatures, should be done by using other
   technologies.  To fulfill that need, WS-security has been defined.

   WS-Security is a Web service technology and is dependent on SOAP
   technology.  WS-Security technology can be incorporated by inserting
   XML encryption and XML signatures into the SOAP Header.

   Also, WS-Reliability achieves confirmation of sent messages and
   resending of messages.  WS-Reliability is also achieved by inserting
   particular messages into the SOAP Header.



































Iijima, et al.           Expires April 21, 2008                [Page 10]

Internet-Draft             SOAP implementation              October 2007


6.  IANA Considerations

   This document has no actions for IANA.
















































Iijima, et al.           Expires April 21, 2008                [Page 11]

Internet-Draft             SOAP implementation              October 2007


7.  References

7.1.  Normative References

   [1]  Enns, R., "NETCONF Configuration Protocol", RFC 4741,
        December 2006.

   [2]  Goddard, T., "Using NETCONF over the Simple Object Access
        Protocol (SOAP)", RFC 4743, December 2006.

 7.2.   Informative References

    [3]   Bradner, S. , "Key words for use in RFCs to Indicate
        Requirement Levels" , BCP 14 , RFC 2119 , March 1997 .

    [4]   Sperberg-McQueen, C. , Bray, T. , and J. Paoli , "XML 1.0
        Recommendation" , World Wide Web Consortium FirstEdition REC-
        xml-19980210 , February 1998 ,
        <http://www.w3.org/TR/1998/REC-xml-19980210> .

    [5]   "Web Services - Axis" .

        <http://ws.apache.org/axis/>

   [6]  "Web Service Description Language (WSDL) 1.1".

        <http://www.w3.org/TR/wsdl/>
























Iijima, et al.           Expires April 21, 2008                [Page 12]

Internet-Draft             SOAP implementation              October 2007


Authors' Addresses

   Iijima Tomoyuki
   Alaxala Networks Corp.
   Shin-Kawasaki Mitsui Bldg.
   890 Saiwai-ku Kashimada
   Kawasaki, Kanagawa  212-0058
   Japan

   Phone: +81-44-549-1200
   Fax:   +81-44-549-1272
   Email: atarashi@alaxala.net


   Yoshifumi Atarashi
   Alaxala Networks Corp.
   Shin-Kawasaki Mitsui Bldg.
   890 Saiwai-ku Kashimada
   Kawasaki, Kanagawa  212-0058
   Japan

   Phone: +81-44-549-1200
   Fax:   +81-44-549-1272
   Email: atarashi@alaxala.net


   Hiroyasu Kimura
   Alaxala Networks Corp.
   Shin-Kawasaki Mitsui Bldg.
   890 Saiwai-ku Kashimada
   Kawasaki, Kanagawa  212-0058
   Japan

   Phone: +81-44-549-1200
   Fax:   +81-44-549-1272
   Email: h-kimura@alaxala.net


   Toumura Kunihiko
   Central Research Laboratory, Hitachi, Ltd.
   1-280 Higashi-Koigakubo
   Kokubunji, Tokyo  185-8601
   Japan

   Phone: +81-42-323-1111
   Fax:   +81-42-327-7868
   Email: kunihiko.toumura.yv@hitachi.com




Iijima, et al.           Expires April 21, 2008                [Page 13]

Internet-Draft             SOAP implementation              October 2007


   Hideki Okita
   Central Research Laboratory, Hitachi, Ltd.
   1-280 Higashi-Koigakubo
   Kokubunji, Tokyo  185-8601
   Japan

   Phone: +81-42-323-1111
   Fax:   +81-42-327-7868
   Email: hideki.okita.pf@hitachi.com










































Iijima, et al.           Expires April 21, 2008                [Page 14]

Internet-Draft             SOAP implementation              October 2007


Full Copyright Statement

   Copyright (C) The IETF Trust (2007).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Acknowledgment

   Funding for the RFC Editor function is provided by the IETF
   Administrative Support Activity (IASA).





Iijima, et al.           Expires April 21, 2008                [Page 15]


