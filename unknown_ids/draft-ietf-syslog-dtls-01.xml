<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "http://xml.resource.org/authoring/rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc5280 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
<!ENTITY rfc5424 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5424.xml">
<!ENTITY rfc4347 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4347.xml">
<!ENTITY rfc5238 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5238.xml">
<!ENTITY rfc4340 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4340.xml">
<!ENTITY rfc5405 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5405.xml">
<!ENTITY rfc2914 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2914.xml">
<!ENTITY rfc5426 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5426.xml">
<!ENTITY rfc5246 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY rfc5425 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5425.xml">
<!ENTITY rfc5234 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml">
<!ENTITY rfc0768 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY ietf-syslog-sign SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-syslog-sign.xml">
]>
<?rfc toc="yes"?>
<?rfc tocompact="no"?>
<?rfc tocdepth="6"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<rfc category="std" docName="draft-ietf-syslog-dtls-01.txt"
     ipr="pre5378Trust200902">

  <front>
    <title abbrev="DTLS Transport Mapping for Syslog">Datagram Transport Layer Security (DTLS) Transport Mapping for Syslog</title>
    <author initials="J." surname="Salowey" fullname="Joseph Salowey">
      <organization>Cisco Systems, Inc.</organization>
      <address>
	<postal>
	  <street>2901 3rd. Ave</street>
	  <city>Seattle</city>
	  <code>98121</code>
	  <region>WA</region>
	  <country>USA</country>
	</postal>
        <email>jsalowey@cisco.com</email>
    </address>
    </author>

    <author initials="T." surname="Petch" fullname="Tom Petch">
      <organization>Engineering Networks Ltd</organization>
      <address>
	<postal>
	  <street>18 Parkwood Close</street>
	  <city>Lymm</city>
	  <code>WA13 0NQ</code>
	  <region>Cheshire</region>
	  <country>UK</country>
	</postal>
        <email>tomSecurity@network-engineer.co.uk</email>
    </address>
    </author>
    <author initials="R." surname="Gerhards" fullname="Rainer Gerhards">
      <organization>Adiscon GmbH</organization>
      <address>
	<postal>
	  <street>Mozartstrasse 21</street>
	  <city>Grossrinderfeld</city>
	  <code>97950</code>
	  <region>BW</region>
	  <country>Germany</country>
	</postal>
        <email>rgerhards@adiscon.com</email>
    </address>
    </author>
        <author initials="H." surname="Feng" fullname="Hongyan. Feng">
      <address>
        <email>fhyfeng@gmail.com</email>
    </address>
    </author>
    <date year="2010"></date>

    <abstract>
      <t>This document describes the transport of syslog messages over DTLS
   (Datagram Transport Level Security).  It provides a secure transport for syslog messages in cases where a connection-less transport is
   desired.
</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The Syslog protocol <xref target="RFC5424" /> is designed to run
      over different transports for different environments. Syslog over TLS 
      <xref target="RFC5425" /> provides a combination of TCP transport
      reliability with TLS security <xref target="RFC5246" />.</t>
   
      <t>However, TCP performance can be a problem when a network has a high
      rate of lost packets. In these circumstances, an operator might prefer
      using UDP to TCP as transport.  Transmission of Syslog Messages over UDP <xref target="RFC5426" /> defines how to provide unreliable, non-secure
      datagram transport for SYSLOG.</t>
 
      <t>The datagram transport layer security protocol (DTLS) <xref target="RFC4347" /> is
      designed to meet the requirements of applications that need secure
      datagram transport,  by combining UDP transport with TLS security.
      DTLS has been mapped onto different transports (i.e. UDP <xref target="RFC0768" /> and DCCP  <xref target="RFC4340" /> ), 
      to secure syslog in more situations.</t>
      
<t>As the Internet best runs on the basis of appropriate resource sharing, SYSLOG over DTLS over DCCP  <xref target="RFC5238" /> is defined in this document.  For systems where DCCP is either not available or not usable (such as the aforementioned situation), DTLS over UDP is also defined. In those circumstances where reliability or ordering is important, SYSLOG over TLS is appropriate. Syslog over TLS does not provide application layer acknowledgements and therefore is not a fully reliable solution.    </t>

    </section>
  
    <section title="Terminology">
    <t>The following definitions from <xref target="RFC5424" /> 
    are used in this document:<list
            style="symbols">
     <t>An "originator" generates syslog content to be carried in a
            message.</t>
     <t>A "collector" gathers syslog content for further analysis.</t>
     <t>A "relay" forwards messages, accepting messages from
            originators or other relays, and sending them to collectors or
            other relays.</t>
    <t>A "transport sender" passes SYSLOG messages to a specific
      transport protocol.</t>
    <t>A "transport receiver" takes SYSLOG messages from a specific
      transport protocol.</t>  
    </list></t>
    <t>This document adds the following definitions:<list>
    <t>A "DTLS client" is an application that can initiate a DTLS
      Client Hello to a server.</t>
    <t>A "DTLS server" is an application that can receive a Client Hello
      from a client and reply with a Server Hello.</t></list></t>  
    <t>The term "connection" used in this document is used to refer to a
   secure association between transport sender and transport receiver that permits the
   transmission of one or more SYSLOG messages within the lifetime of the
   connection.</t>  
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119" />.</t>
    </section>
    
    <section title="Security Requirements for Syslog">
      <t>Syslog messages are secured in a hop-by-hop manner. The security requirements for Syslog are discussed in <xref target="RFC5425" />.</t>
   <t>The following secondary threat is also considered in this document:<list style="symbols">
   <t>Denial of Service. 
       Denial of service is discussed in <xref target="RFC5424" />, 
       which states that an attacker may send more
       messages to a transport receiver than the transport receiver could handle.
       When using a secure transport protocol handshake, an attacker may use a spoofed IP source to engage the server in a cryptographic handshake to deliberately consume the server's resources.</t></list></t>
   </section>
    
    <section title="Using DTLS to Secure Syslog">
    <t>DTLS can be used as a secure transport to counter all the primary
    threats to SYSLOG described in <xref target="RFC5425" />:<list style="symbols">
   <t>Confidentiality to counter disclosure of the message contents.</t>
   <t>Integrity checking to counter modifications to a message on a hop-
      by-hop basis.</t> 
   <t>Server or mutual authentication to counter masquerade.</t>
 </list></t>
   <t>In addition DTLS also provides: <list style="symbols"> 
   <t>A cookie exchange mechanism during handshake to counter Denial of
   Service attacks</t>
   <t>A sequence number in the header to counter replay attacks.</t>  
 </list></t>
<t>Note: This secure transport (i.e., DTLS) only secures syslog
   transport in a hop-by-hop manner, and is not concerned with the
   contents of syslog messages.  In particular, the authenticated
   identity of the transport sender (e.g., subject name in the 
   certificate) is not necessarily related to the HOSTNAME field 
   of the syslog message. When authentication of syslog
   message origin is required, <xref target="I-D.ietf-syslog-sign" /> can be used.</t>
 </section>
<section title="Protocol Elements">
     
  <section title="Transport">
   <t>DTLS can run over multiple transports.  Implementations of this specification MUST support DTLS over UDP and SHOULD support DTLS over DCCP  <xref target="RFC5238" />.  Transports, such as UDP or DCCP do not provide session multiplexing and session-demultiplexing.  In such cases, the application implementer provides this functionality by mapping a unique combination of the remote address, remote port number, local address and local port number to a session.</t>
 <t>Each SYSLOG message is delivered by the DTLS record protocol, which assigns a sequence number 
    to each DTLS record. Although the DTLS implementer may adopt a queue mechanism to resolve reordering, it may not assure that all the messages delivered in order when mapping on UDP transport.</t>
        <t>When DTLS runs over an unreliable transport such as UDP reliability is not provided.  With DTLS, an originator or relay may not realize that a collector has gone down or lost its connection state so messages may be lost. </t> 
<t>When TCP is used syslog over DTLS MUST NOT be used. If a secure transport is required with TCP then the appropriate mechanism is syslog over TLS.  </t>
      
      
   </section>
   <section title="Port Assignment">
        <t>A SYSLOG transport sender is always a DTLS client and a transport receiver is always a DTLS server.</t><t>
    The UDP and DCCP port [TBD] has been allocated as the default port for syslog over DTLS as defined in this document.</t>
   </section>
 
   <section title="Initiation">
	<t>The transport sender initiates a DTLS connection by sending a DTLS Client Hello to the transport receiver.  Implementations MUST support the denial of service countermeasures defined by DTLS.  When these countermeasures are enabled, the transport receiver responds with a DTLS Hello Verify Request containing a cookie.  The transport sender responds with a DTLS Client Hello containing the received cookie which initiates the DTLS handshake.  When the DTLS handshake has finished, the transport sender MAY then send the first syslog message.</t>
<t>TLS typically uses <xref target="RFC5280">certificates</xref> to authenticate peers.
   Implementations MUST support  <xref target="RFC4347">DTLS 1.1</xref>  and MUST
   support the mandatory to implement cipher suite, which is
   TLS_RSA_WITH_AES_128_CBC_SHA.</t>
      
      <section title="Certificate-Based Authentication">
<t>Both syslog transport sender (DTLS client) and syslog transport
   receiver (DTLS server) MUST implement certificate-based
   authentication.  This consists of validating the certificate and
   verifying that the peer has the corresponding private key.  The
   latter part is performed by DTLS.  To ensure interoperability between
   clients and servers, the methods for certificate validation defined in <xref target="RFC5425" /> 
   SHALL be implemented. </t>
<t> Both transport receiver and transport sender implementations MUST
   provide means to generate a key pair and self-signed certificate in
   the case that a key pair and certificate are not available through
   another mechanism.</t>
<t>The transport receiver and transport sender SHOULD provide mechanisms
   to record the end-entity certificate for the purpose of correlating
   it with the sent or received data.</t>
      </section>

   </section>
   <section title="Sending data">
        <t>All syslog messages MUST be sent as DTLS "application data". It is
        possible that multiple syslog messages be contained in one DTLS record,
        or that a syslog message be transferred in multiple DTLS records. The
        application data is defined with the following <xref
        target="RFC5234">ABNF</xref> expression:</t>

        <t>APPLICATION-DATA = 1*SYSLOG-FRAME</t>

        <t>SYSLOG-FRAME = MSG-LEN SP SYSLOG-MSG</t>

        <t>MSG-LEN = NONZERO-DIGIT *DIGIT</t>

        <t>SP = %d32</t>

        <t>NONZERO-DIGIT = %d49-57</t>

        <t>DIGIT = %d48 / NONZERO-DIGIT</t>

        <t>SYSLOG-MSG is defined in <xref
        target="RFC5424">syslog</xref> protocol.</t>
      <section title="Message Size">
        <t>The message length is the octet count of the SYSLOG-MSG in the
   SYSLOG-FRAME.  A transport receiver MUST use the message length to
   delimit a syslog message.  There is no upper limit for a message
   length per se.  As stated in <xref target="RFC4347" />, each DTLS record must fit within a single DTLS datagram. When mapping onto different transports, DTLS has different record size limitations.  The application implementer SHOULD determine the maximum record size allowed by DTLS protocol running over the transport in use. The message size SHOULD NOT exceed the DTLS maximum record size limitation of 2^14 bytes.</t>
      </section>
   </section>
  <section title="Closure">
  <t>
       A transport sender MUST close the associated DTLS connection if the
   connection is not expected to deliver any syslog messages later.  It
   MUST send a DTLS close_notify alert before closing the connection.  A
   transport sender (DTLS client) MAY choose to not wait for the
   transport receiver's close_notify alert and simply close the
   connection.  Once the transport receiver gets a
   close_notify from the transport sender, it MUST reply with a
   close_notify.</t>
   <t>   When no data is received from a connection for a long time (where the
   application decides what "long" means), a transport receiver MAY
   close the connection.  The transport receiver (DTLS server) MUST
   attempt to initiate an exchange of close_notify alerts with the
   transport sender before closing the connection.  Transport receivers
   that are unprepared to receive any more data MAY close the connection
   after sending the close_notify alert. </t>
   <t>   Although closure alerts form part of DTLS, they, like all alerts, are
   not retransmitted by DTLS and so may be lost over an unreliable
   network.</t>

  </section>
</section>




   <section title="Security Policies">
   <t>Syslog transport over DTLS has been designed to minimize the security and operational differences 
    for environments where both <xref target="RFC5425" /> and SYSLOG over DTLS are supported. 
    The security policies for SYSLOG over DTLS are the same as those described in <xref target="RFC5425" />.</t>

   </section>

    <section title="IANA Consideration">
    <t>IANA is requested to assign a registered UDP and DCCP port number for SYSLOG over DTLS.  The same value as for Syslog over TLS (6514) is requested.</t>
    </section>
     
   
    <section title="Security Considerations">
    <t>The security considerations in  <xref target="RFC5425" />,  <xref target="RFC5246" /> and  <xref target="RFC4347" /> apply to this document.  </t>
    <t> </t>
      <section title="Cryptographic Level">

   <t>Syslog applications SHOULD be implemented in a manner that permits
   administrators, as a matter of local policy, to select the
   cryptographic level and authentication options they desire. An exiting DTLS session MUST NOT be reused if its protection does not match the minimum policy requirements of the new SYSLOG over DTLS session request.
</t>
      </section>
    </section>
    
     <section title="Acknowledgements">
       <t>The authors would like to thank Wes Hardaker  for his review on this proposal and contributing his valuable suggestions on the use of DTLS. Thanks also to Pasi Eronen, David Harrington and Eliot Lear and members of the Syslog working group for their comments, suggestions and review.</t>
    </section>
    
  </middle>

  <back>
    <references title="Normative References">
       &rfc2119;
       &rfc5424;
       &rfc4347;
       &rfc5246;
       &rfc5425;
       &rfc5426;
       &rfc5280;
       &rfc5234; 
       &rfc0768;
       &rfc4340;
       &rfc5238;
    </references>
    
    <references title="Informative References" >
    &ietf-syslog-sign;
    &rfc2914;      
    &rfc5405;

       
  
    
  

    </references>
  </back>
</rfc>
