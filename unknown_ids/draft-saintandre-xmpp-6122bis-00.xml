<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc compact="yes"?>
<?rfc strict="yes"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>

<rfc category="std" docName="draft-saintandre-xmpp-6122bis-00" ipr="trust200902" obsoletes="6122">

  <front>
    <title abbrev="XMPP Address Format">Extensible Messaging and Presence Protocol (XMPP): Address Format</title>
    <author initials="P." surname="Saint-Andre" fullname="Peter Saint-Andre">
      <organization>Cisco</organization>
      <address>
        <postal>
          <street>1899 Wyknoop Street, Suite 600</street>
          <city>Denver</city>
          <region>CO</region>
          <code>80202</code>
          <country>USA</country>
        </postal>
        <phone>+1-303-308-3282</phone>
        <email>psaintan@cisco.com</email>
      </address>
    </author>

    <date year="2011" month="May" day="17"/>

    <area>RAI</area>
    <workgroup>XMPP</workgroup>
    <keyword>Extensible Messaging and Presence Protocol</keyword>
    <keyword>XMPP</keyword>
    <keyword>Jabber</keyword>
    <keyword>Messaging</keyword>
    <keyword>Instant Messaging</keyword>
    <keyword>Presence</keyword>
    <keyword>Extensible Markup Language</keyword>
    <keyword>XML</keyword>
    <abstract>
      <t>This document defines the format for addresses used in the Extensible Messaging and Presence Protocol (XMPP), including support for non-ASCII characters.  This document obsoletes RFC 6122.</t>
    </abstract>
  </front>

  <middle>

  <section title="Introduction" anchor="intro">

    <section title="Overview" anchor="overview">
      <t>The Extensible Messaging and Presence Protocol <xref target='XMPP'/> is an application profile of the Extensible Markup Language <xref target="XML"/> for streaming XML data in close to real time between any two or more network-aware entities.  The address format for XMPP entities was originally developed in the Jabber open-source community in 1999, first described by <xref target='XEP-0029'/> in 2002, and then defined canonically by <xref target='RFC3920'/> in 2004 and <xref target='RFC6122'/> in 2011.</t>
      <t>As specified in RFC 3920 and RFC 6122, the XMPP address format used the "stringprep" technology for preparation of non-ASCII characters <xref target='STRINGPREP'/>.  This document defines the XMPP address format in a way that no longer depends on stringprep.  Instead, this document depends on the internationalization framework defined by the IETF's PRECIS Working Group <xref target='FRAMEWORK'/>.</t>
      <t>This document obsoletes RFC 6122.</t>
    </section>

    <section title="Terminology" anchor="terms">
      <t>Many important terms used in this document are defined in <xref target='FRAMEWORK'/>, <xref target='I18N-TERMS'/>, <xref target='IDNA-DEFS'/>, <xref target='UNICODE'/>, and <xref target='XMPP'/>.</t>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 <xref target='KEYWORDS'/>.</t>
    </section>

  </section>

  <section title="Addresses" anchor="addressing">

    <section title="Fundamentals" anchor="addressing-fundamentals">
      <t>An XMPP entity is anything that is network-addressable and that can communicate using XMPP.  For historical reasons, the native address of an XMPP entity is called a Jabber Identifier ("JID").  A valid JID is a string of <xref target='UNICODE'/> code points, encoded using <xref target='UTF-8'/>, and structured as an ordered sequence of localpart, domainpart, and resourcepart (where the first two parts are demarcated by the '@' character used as a separator, and the last two parts are similarly demarcated by the '/' character).</t>
      <t>The syntax for a JID is defined as follows using the Augmented Backus-Naur Form as specified in <xref target="ABNF"/>.</t>
      <figure>
        <artwork><![CDATA[
   jid           = [ localpart "@" ] domainpart [ "/" resourcepart ]
   localpart     = 1*(localpoint)
                   ;
                   ; a "localpoint" is a UTF-8 encoded Unicode 
                   ; code point that conforms to the localpart
                   ; subclass of the "nameything" string class
                   ; defined in draft-blanchet-precis-framework-01
                   ;
   domainpart    = IP-literal / IPv4address / ifqdn
                   ;
                   ; the "IPv4address" and "IP-literal" rules are
                   ; defined in RFC 3986, and the first-match-wins
                   ; (a.k.a. "greedy") algorithm described in RFC
                   ; 3986 applies to the matching process
                   ;
                   ; note well that reuse of the IP-literal rule
                   ; from RFC 3986 implies that IPv6 addresses are 
                   ; enclosed in square brackets (i.e., beginning 
                   ; with '[' and ending with ']')
                   ;
   ifqdn         = 1*(domainpoint)
                   ;
                   ; a "domainpoint" is a UTF-8 encoded Unicode
                   ; code point that conforms to the "domain name"
                   ; string class effectively defined in RFC 5890
                   ;
   resourcepart  = 1*(resourcepoint)
                   ;
                   ; a "resourcepoint" is a UTF-8 encoded Unicode
                   ; code point that conforms to the localpart 
                   ; subclass of the "stringything" string class
                   ; defined in draft-blanchet-precis-framework-01
                   ;
        ]]></artwork>
      </figure>
      <t>All JIDs are based on the foregoing structure.</t>
      <t>Each allowable portion of a JID (localpart, domainpart, and resourcepart) MUST NOT be zero bytes in length and MUST NOT be more than 1023 bytes in length, resulting in a maximum total size (including the '@' and '/' separators) of 3071 bytes.</t>
      <t>For the purposes of communication over an XMPP network (e.g., in the 'to' or 'from' address of an XMPP stanza), an entity's address MUST be represented as a JID, not as a Uniform Resource Identifier <xref target="URI"/> or Internationalized Resource Identifier <xref target="IRI"/>.  An XMPP URI or IRI <xref target="XMPP-URI"/> is in essence a JID prepended with 'xmpp:'; however, the native addressing format used in XMPP is that of a mere JID without a URI scheme.  <xref target="XMPP-URI"/> is provided only for identification and interaction outside the context of XMPP itself, for example when linking to a JID from a web page.  See <xref target="XMPP-URI"/> for information about securely extracting a JID from an XMPP URI or IRI.</t>
      <t><list style='empty'><t>Implementation Note: When dividing a JID into its component parts, an implementation needs to match the separator characters '@' and '/' before applying any transformation algorithms, which might decompose certain Unicode code points to the separator characters (e.g., U+FE6B SMALL COMMERCIAL AT might decompose to U+0040 COMMERCIAL AT).</t></list></t> 
    </section>

    <section title="Domainpart" anchor="addressing-domain">
      <t>The domainpart of a JID is that portion after the '@' character (if any) and before the '/' character (if any); it is the primary identifier and is the only REQUIRED element of a JID (a mere domainpart is a valid JID).  Typically a domainpart identifies the "home" server to which clients connect for XML routing and data management functionality.  However, it is not necessary for an XMPP domainpart to identify an entity that provides core XMPP server functionality (e.g., a domainpart can identify an entity such as a multi-user chat service, a publish-subscribe service, or a user directory).</t>
      <t>The domainpart for every XMPP service MUST be a fully qualified domain name (FQDN; see <xref target='DNS'/>), IPv4 address, IPv6 address, or unqualified hostname (i.e., a text label that is resolvable on a local network).</t>
      <t><list style='empty'><t>Interoperability Note: Domainparts that are IP addresses might not be accepted by other services for the sake of server-to-server communication, and domainparts that are unqualified hostnames cannot be used on public networks because they are resolvable only on a local network.</t></list></t>
      <t>If the domainpart includes a final character considered to be a label separator (dot) by <xref target='DNS'/>, this character MUST be stripped from the domainpart before the JID of which it is a part is used for the purpose of routing an XML stanza, comparing against another JID, or constructing an <xref target='XMPP-URI'/>. In particular, the character MUST be stripped before any other canonicalization steps are taken.</t>
      <t>A domainpart MUST NOT be zero bytes in length and MUST NOT be more than 1023 bytes in length.  This rule is to be enforced after any mapping or normalization of code points.  Naturally, the length limits of <xref target='DNS'/> apply, and nothing in this document is to be interpreted as overriding those more fundamental limits.</t>
      <t>In the terms of IDNA2008 <xref target='IDNA-DEFS'/>, the domainpart of a JID is a "domain name slot".</t>
      <t>A domainpart consisting of a fully qualified domain name MUST be an "internationalized domain name" as defined in <xref target='IDNA-DEFS'/> and MUST consist only of Unicode code points that conform to the rules specified in <xref target='IDNA-CODE'/>.</t>
      <t>For the purposes of communication over XMPP, the domainpart of a JID MUST be treated as follows, where the operations specified MUST be completed in the order shown:</t>
      <t>
        <list style='numbers'>
          <t>Uppercase and titlecase characters MUST be mapped to their lowercase equivalents.</t>
          <t>All characters MUST be mapped using Unicode Normalization Form C (NFC).</t>
          <t>Each A-label SHOULD be converted to a U-label (however, if it is not converted then the application MUST apply the Punycode algorithm <xref target='PUNYCODE'/> to each A-label and prepend the ACE prefix ("xn--") to the resulting DNS domain name).</t>
        </list>
      </t>
      <t>With regard to directionality, the "Bidi Rule" provided in <xref target='IDNA-BIDI'/> applies.</t>
    </section>

    <section title='Localpart' anchor='addressing-localpart'>
      <t>The localpart of a JID is an optional identifier placed before the domainpart and separated from the latter by the '@' character.  Typically a localpart uniquely identifies the entity requesting and using network access provided by a server (i.e., a local account), although it can also represent other kinds of entities (e.g., a chat room associated with a multi-user chat service).  The entity represented by an XMPP localpart is addressed within the context of a specific domain (i.e., &lt;localpart@domainpart&gt;).</t>
      <t>A localpart MUST NOT be zero bytes in length and MUST NOT be more than 1023 bytes in length.  This rule is to be enforced after any mapping or normalization of code points.</t>
      <t>A localpart MUST consist only of Unicode code points that conform to the "nameything" base string class defined in <xref target='FRAMEWORK'/>, with the exception of the following characters that are explicitly disallowed in XMPP localparts:</t>
      <t>
        <list style='hanging'>
          <t>U+0022 (QUOTATION MARK), i.e., "</t>
          <t>U+0026 (AMPERSAND), i.e., &amp;</t>
          <t>U+0027 (APOSTROPHE), i.e., '</t>
          <t>U+002F (SOLIDUS), i.e., /</t>
          <t>U+003A (COLON), i.e., :</t>
          <t>U+003C (LESS-THAN SIGN), i.e., &lt;</t>
          <t>U+003E (GREATER-THAN SIGN), i.e., &gt;</t>
          <t>U+0040 (COMMERCIAL AT), i.e., @</t>
        </list>
      </t>
      <t>For the purposes of communication over XMPP, the localpart of a JID MUST be treated as follows, where the operations specified MUST be completed in the order shown:</t>
      <t>
        <list style='numbers'>
          <t>Uppercase and titlecase characters MUST be mapped to their lowercase equivalents.</t>
          <t>All characters MUST be mapped using Unicode Normalization Form C (NFC).</t>
        </list>
      </t>
      <t>With regard to directionality, any localpart containing a right-to-left code point MUST be treated as a right-to-left string.</t>
    </section>

    <section title="Resourcepart" anchor="addressing-resource">
      <t>The resourcepart of a JID is an optional identifier placed after the domainpart and separated from the latter by the '/' character.  A resourcepart can modify either a &lt;localpart@domainpart&gt; address or a mere &lt;domainpart&gt; address.  Typically a resourcepart uniquely identifies a specific connection (e.g., a device or location) or object (e.g., an occupant in a multi-user chat room) belonging to the entity associated with an XMPP localpart at a domain (i.e., &lt;localpart@domainpart/resourcepart&gt;).</t>
      <t><list style='empty'><t>Informational Note: For historical reasons, the term "resource identifier" is often used in XMPP to refer to the optional portion of an XMPP address that follows the domainpart and the "/" separator character; to help prevent confusion between an XMPP "resource identifier" and the meanings of "resource" and "identifier" provided in Section 1.1 of <xref target="URI"/>, this specification uses the term "resourcepart" instead of "resource identifier" (as in RFC 3920).</t></list></t>
      <t>A resourcepart MUST NOT be zero bytes in length and MUST NOT be more than 1023 bytes in length.  This rule is to be enforced after any mapping or normalization of code points.</t>
      <t>A resourcepart MUST consist only of Unicode code points that conform to the "stringything" base string class defined in <xref target='FRAMEWORK'/>.</t>
      <t>For the purposes of communication over XMPP, the localpart of a JID MUST be treated as follows, where the operations specified MUST be completed in the order shown:</t>
      <t>
        <list style='numbers'>
          <t>Uppercase and titlecase characters MAY be mapped to their lowercase equivalents.</t>
          <t>All characters MUST be mapped using Unicode Normalization Form C (NFC).</t>
        </list>
      </t>
      <t>With regard to directionality, any resourcepart containing a right-to-left code point MUST be treated as a right-to-left string.</t>
      <t>XMPP entities SHOULD consider resourceparts to be opaque strings and SHOULD NOT impute meaning to any given resourcepart.  In particular:</t>
      <t>
        <list style='symbols'>
          <t>Use of the '/' character as a separator between the domainpart and the resourcepart does not imply that XMPP addresses are hierarchical in the way that, say, HTTP addresses are hierarchical; thus for example an XMPP address of the form &lt;localpart@domainpart/foo/bar&gt; does not identify a resource "bar" that exists below a resource "foo" in a hierarchy of resources associated with the entity "localpart@domain".</t>
          <t>The '@' character is allowed in the resourcepart and is often used in the "nick" shown in XMPP chatrooms.  For example, the JID &lt;room@chat.example.com/user@host&gt; describes an entity who is an occupant of the room &lt;room@chat.example.com&gt; with an (asserted) nick of &lt;user@host&gt;.  However, chatroom services do not necessarily check such an asserted nick against the occupant's real JID.</t>
        </list>
      </t>
    </section>

  </section>

  <section title="Internationalization Considerations" anchor="i18n">
    <t>XMPP applications MUST support IDNA2008 for domainparts, the nameything string class from <xref target="FRAMEWORK"/> for localparts (with the exception of certain ASCII characters specified under <xref target='addressing-localpart'/>), and the stringything string class from <xref target="FRAMEWORK"/> for resourceparts.  This enables XMPP addresses to include a wide variety of characters outside the US-ASCII range.  Rules for enforcement of the XMPP address format are provided in <xref target='XMPP'/> and relevant XMPP extensions.</t>
    <t>For backward compatibility, many XMPP applications support <xref target='IDNA2003'/> for domain parts, and the <xref target='STRINGPREP'/> profiles Nodeprep and Resourceprep <xref target='RFC3920'/>.</t>
  </section>

  <section title="Security Considerations" anchor="security">
    <section title="Reuse of PRECIS" anchor="security-PRECIS">
      <t>The security considerations described in <xref target="FRAMEWORK"/> apply to the nameything and stringything base string classes re-used in this document for XMPP localparts and resourceparts.  The security considerations described in <xref target="IDNA-DEFS"/> apply to the domain name "string class" that is reused here for XMPP domainparts.</t>
    </section>
    <section title="Reuse of Unicode" anchor="security-unicode">
      <t>The security considerations described in <xref target='UNICODE-SEC'/> apply to the use of Unicode characters in XMPP addresses.</t>
    </section>
    <section title="Address Spoofing" anchor="security-spoofing">
      <t>There are two forms of address spoofing: forging and mimicking.</t>
      <section title="Address Forging" anchor="security-forging">
        <t>In the context of XMPP technologies, address forging occurs when an entity is able to generate an XML stanza whose 'from' address does not correspond to the account credentials with which the entity authenticated onto the network (or an authorization identity provided during negotiation of SASL authentication <xref target='SASL'/> as described in <xref target='XMPP'/>).  For example, address forging occurs if an entity that authenticated as "juliet@im.example.com" is able to send XML stanzas from "nurse@im.example.com" or "romeo@example.net".</t> 
        <t>Address forging is difficult in XMPP systems, given the requirement for sending servers to stamp 'from' addresses and for receiving servers to verify sending domains via server-to-server authentication (see <xref target='XMPP'/>).  However, address forging is possible if:</t>
        <t>
          <list style='symbols'>
            <t>A poorly implemented server ignores the requirement for stamping the 'from' address.  This would enable any entity that authenticated with the server to send stanzas from any localpart@domainpart as long as the domainpart matches the sending domain of the server.</t>
            <t>An actively malicious server generates stanzas on behalf of any registered account.</t>
          </list>
        </t>
        <t>Therefore, an entity outside the security perimeter of a particular server cannot reliably distinguish between JIDs of the form &lt;localpart@domainpart&gt; at that server and thus can authenticate only the domainpart of such JIDs with any level of assurance.  This specification does not define methods for discovering or counteracting such poorly implemented or rogue servers.  However, the end-to-end authentication or signing of XMPP stanzas could help to mitigate this risk, since it would require the rogue server to generate false credentials in addition to modifying 'from' addresses.</t>
        <t>Furthermore, it is possible for an attacker to forge JIDs at other domains by means of a DNS poisoning attack if DNS security extensions <xref target='DNSSEC'/> are not used.</t>
      </section>
      <section title="Address Mimicking" anchor="security-mimicking">
        <t>Address mimicking occurs when an entity provides legitimate authentication credentials for and sends XML stanzas from an account whose JID appears to a human user to be the same as another JID.  For example, in some XMPP clients the address "ju1iet@example.org" (spelled with the number one as the third character of the localpart) might appear to be the same as "juliet@example.org (spelled with the lower-case version of the letter "L"), especially on casual visual inspection; this phenomenon is sometimes called "typejacking".  A more sophisticated example of address mimicking might involve the use of characters from outside the familiar Latin extended-A block of Unicode code points, such as the characters U+13DA U+13A2 U+13B5 U+13AC U+13A2 U+13AC U+13D2 from the Cherokee block instead of the similar-looking US-ASCII characters "STPETER".</t>
        <t>In some examples of address mimicking, it is unlikely that the average user could tell the difference between the real JID and the fake JID.  (Indeed, there is no programmatic way to distinguish with full certainty which is the fake JID and which is the real JID; in some communication contexts, the JID formed of Cherokee characters might be the real JID and the JID formed of US-ASCII characters might thus appear to be the fake JID.)  Because JIDs can contain almost any properly encoded Unicode code point, it can be relatively easy to mimic some JIDs in XMPP systems.  The possibility of address mimicking introduces security vulnerabilities of the kind that have also plagued the World Wide Web, specifically the phenomenon known as phishing.</t>
        <t>These problems arise because Unicode and ISO/IEC 10646 repertoires have many characters that look similar (so-called "confusable characters" or "confusables").  In many cases, XMPP users might perform visual matching, such as when comparing the JIDs of communication partners.  Because it is impossible to map similar-looking characters without a great deal of context (such as knowing the fonts used), stringprep and stringprep-based technologies such as Nameprep, Nodeprep, and Resourceprep do nothing to map similar-looking characters together, nor do they prohibit some characters because they look like others.  As a result, XMPP localparts and resourceparts could contain confusable characters, producing JIDs that appear to mimic other JIDs and thus leading to security vulnerabilities such as the following:</t>
        <t>
          <list style='symbols'>
            <t>A localpart can be employed as one part of an entity's address in XMPP.  One common usage is as the username of an instant messaging user; another is as the name of a multi-user chat room; and many other kinds of entities could use localparts as part of their addresses.  The security of such services could be compromised based on different interpretations of the internationalized localpart; for example, a user entering a single internationalized localpart could access another user's account information, or a user could gain access to a hidden or otherwise restricted chat room or service.</t>
            <t>A resourcepart can be employed as one part of an entity's address in XMPP.  One common usage is as the name for an instant messaging user's connected resource; another is as the nickname of a user in a multi-user chat room; and many other kinds of entities could use resourceparts as part of their addresses.  The security of such services could be compromised based on different interpretations of the internationalized resourcepart; for example, two or more confusable resources could be bound at the same time to the same account (resulting in inconsistent authorization decisions in an XMPP application that uses full JIDs), or a user could send a message to someone other than the intended recipient in a multi-user chat room.</t>
          </list>
        </t>
        <t>Despite the fact that some specific suggestions about identification and handling of confusable characters appear in the Unicode Security Considerations <xref target='UNICODE-SEC'/>, it is also true (as noted in <xref target='IDNA-DEFS'/>) that "there are no comprehensive technical solutions to the problems of confusable characters".  Mimicked JIDs that involve characters from only one script, or from the script typically employed by a particular user or community of language users, are not easy to combat (e.g., the simple typejacking attack previously described, which relies on a surface similarity between the characters "1" and "l" in some presentations).  However, mimicked addresses that involve characters from more than one script, or from a script not typically employed by a particular user or community of language users, can be mitigated somewhat through the application of appropriate registration policies at XMPP services and presentation policies in XMPP client software.  Therefore, the following policies are encouraged:</t> 
        <t>
          <list style='numbers'>
            <t>Because an XMPP service that allows registration of XMPP user accounts (localparts) plays a role similar to that of a registry for DNS domain names, such a service SHOULD establish a policy about the scripts or blocks of characters it will allow in localparts at the service.  Such a policy is likely to be informed by the languages and scripts that are used to write registered account names; in particular, to reduce confusion, the service MAY forbid registration of XMPP localparts that contain characters from more than one script and to restrict registrations to characters drawn from a very small number of scripts (e.g., scripts that are well-understood by the administrators of the service).  Such policies are also appropriate for XMPP services that allow temporary or permanent registration of XMPP resourceparts, e.g., during resource binding <xref target='XMPP'/> or upon joining an XMPP-based chat room <xref target='XEP-0045'/>.  For related considerations in the context of domain name registration, refer to Section 4.3 of <xref target='IDNA-PROTO'/> and Section 3.2 of <xref target='IDNA-RATIONALE'/>.  Note well that methods for enforcing such restrictions are out of scope for this document.</t>
            <t>Because every human user of an XMPP client presumably has a preferred language (or, in some cases, a small set of preferred languages), an XMPP client SHOULD gather that information either explicitly from the user or implicitly via the operating system of the user's device.  Furthermore, because most languages are typically represented by a single script (or a small set of scripts) and most scripts are typically contained in one or more blocks of characters, an XMPP client SHOULD warn the user when presenting a JID that mixes characters from more than one script or block, or that uses characters outside the normal range of the user's preferred language(s).  This recommendation is not intended to discourage communication across different communities of language users; instead, it recognizes the existence of such communities and encourages due caution when presenting unfamiliar scripts or characters to human users.</t>
          </list>
        </t>
      </section>
    </section>
  </section>

  <section title="IANA Considerations" anchor="iana">
    <t>This document has no actions for the IANA.</t>
  </section>

  <section title="Conformance Requirements" anchor="conformance">
    <t>This section describes a protocol feature set that summarizes the conformance requirements of this specification.  This feature set is appropriate for use in software certification, interoperability testing, and implementation reports.  For each feature, this section provides the following information:</t>
    <t>
      <list style='symbols'>
        <t>A human-readable name</t>
        <t>An informational description</t>
        <t>A reference to the particular section of this document that normatively defines the feature</t>
        <t>Whether the feature applies to the Client role, the Server role, or both (where "N/A" signifies that the feature is not applicable to the specified role)</t>
        <t>Whether the feature MUST or SHOULD be implemented, where the capitalized terms are to be understood as described in <xref target='KEYWORDS'/></t>
      </list>
    </t>
    <t>The feature set specified here attempts to adhere to the concepts and formats proposed by Larry Masinter within the IETF's NEWTRK Working Group in 2005, as captured in <xref target='INTEROP'/>.  Although this feature set is more detailed than called for by <xref target="REPORTS"/>, it provides a suitable basis for the generation of implementation reports to be submitted in support of advancing this specification from Proposed Standard to Draft Standard in accordance with <xref target="PROCESS"/>.</t>
    <t>
      <list style='hanging'>
        <t hangText="Feature:">address-domain-length</t>
        <t hangText="Description:">Ensure that the domainpart of an XMPP address is at least one byte in length and at most 1023 bytes in length, and conforms to the underlying length limits of the DNS.</t>
        <t hangText="Section:"><xref target='addressing-domain'/></t>
        <t hangText="Roles:">Both MUST.</t>
      </list>
    </t>
    <t>
      <list style='hanging'>
        <t hangText="Feature:">address-domain-prep</t>
        <t hangText="Description:">Ensure that the domainpart of an XMPP address conforms to IDNA2008, mapped to lowercase and normalized using NFC.</t>
        <t hangText="Section:"><xref target='addressing-domain'/></t>
        <t hangText="Roles:">Both MUST.</t>
      </list>
    </t>
    <t>
      <list style='hanging'>
        <t hangText="Feature:">address-localpart-length</t>
        <t hangText="Description:">Ensure that the localpart of an XMPP address is at least one byte in length and at most 1023 bytes in length.</t>
        <t hangText="Section:"><xref target='addressing-localpart'/></t>
        <t hangText="Roles:">Both MUST.</t>
      </list>
    </t>
    <t>
      <list style='hanging'>
        <t hangText="Feature:">address-localpart-prep</t>
        <t hangText="Description:">Ensure that the localpart of an XMPP address conforms to the nameything base string class from the PRECIS framework, excluding the eight XMPP prohibited code points (U+0022, U+0026, U+0027, U+002F, U+003A, U+003C, U+003E, and U+0040), with all code points mapped to lowercase and normalized using NFC.</t>
        <t hangText="Section:"><xref target='addressing-localpart'/></t>
        <t hangText="Roles:">Both MUST.</t>
      </list>
    </t>
    <t>
      <list style='hanging'>
        <t hangText="Feature:">address-resource-length</t>
        <t hangText="Description:">Ensure that the resourcepart of an XMPP address is at least one byte in length and at most 1023 bytes in length.</t>
        <t hangText="Section:"><xref target='addressing-resource'/></t>
        <t hangText="Roles:">Both MUST.</t>
      </list>
    </t>
    <t>
      <list style='hanging'>
        <t hangText="Feature:">address-resource-prep</t>
        <t hangText="Description:">Ensure that the resourcepart of an XMPP address conforms to the stringything base string class from the PRECIS framework, with all code points normalized using NFC.</t>
        <t hangText="Section:"><xref target='addressing-resource'/>
</t>
        <t hangText="Roles:">Both MUST.</t>
      </list>
    </t>
  </section>

  </middle>

  <back>

    <references title="Normative References">

<reference anchor='ABNF'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker' role="editor">
<organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'>
<organization /></author>
<date year='2008' month='January' />
<abstract>
<t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF.  It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications. [STANDARDS TRACK]</t></abstract></front>
<seriesInfo name='STD' value='68' />
<seriesInfo name='RFC' value='5234' />
<format type='TXT' octets='26359' target='ftp://ftp.isi.edu/in-notes/rfc5234.txt' />
</reference>

<reference anchor='DNS'>
<front>
<title abbrev='Domain Implementation and Specification'>Domain names - implementation and specification</title>
<author initials='P.' surname='Mockapetris' fullname='P. Mockapetris'>
<organization>USC/ISI</organization>
<address>
<postal>
<street>4676 Admiralty Way</street>
<city>Marina del Rey</city>
<region>CA</region>
<code>90291</code>
<country>US</country></postal>
<phone>+1 213 822 1511</phone></address></author>
<date month='November' day='1' year='1987' /></front>
<seriesInfo name='STD' value='13' />
<seriesInfo name='RFC' value='1035' />
<format type='TXT' octets='125626' target='ftp://ftp.isi.edu/in-notes/rfc1035.txt' />
</reference>

<reference anchor='FRAMEWORK'>
<front>
<title>Precis Framework: Handling Internationalized Strings in Protocols</title>
<author initials='M' surname='Blanchet' fullname='Marc Blanchet'>
    <organization />
</author>
<date month='July' day='5' year='2010' />
<abstract><t>Using Unicode code points in protocol strings requires preparation of the string.  This document describes the Precis Protocol Framework that prepares various classes of strings used in protocol elements. A protocol specification chooses a class of strings and then implements the corresponding preparation steps described in this document.  This document is based on the IDNAbis approach.  It obsoletes the Stringprep algorithm.</t></abstract>
</front>
<seriesInfo name='Internet-Draft' value='draft-blanchet-precis-framework-00' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-blanchet-precis-framework-00.txt' />
</reference>

<reference anchor='IDNA-BIDI'>
<front>
<title>Right-to-Left Scripts for Internationalized Domain Names for Applications (IDNA)</title>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'>
<organization /></author>
<author initials='C.' surname='Karp' fullname='C. Karp'>
<organization /></author>
<date year='2010' month='August' />
<abstract>
<t>The use of right-to-left scripts in Internationalized Domain Names (IDNs) has presented several challenges.  This memo provides a new Bidi rule for Internationalized Domain Names for Applications (IDNA) labels, based on the encountered problems with some scripts and some shortcomings in the 2003 IDNA Bidi criterion. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='5893' />
<format type='TXT' octets='38870' target='http://www.rfc-editor.org/rfc/rfc5893.txt' />
</reference>

<reference anchor='IDNA-CODE'>
<front>
<title>The Unicode Code Points and Internationalized Domain Names for Applications (IDNA)</title>
<author initials='P.' surname='Faltstrom' fullname='P. Faltstrom'>
<organization /></author>
<date year='2010' month='August' />
<abstract>
<t>This document specifies rules for deciding whether a code point, considered in isolation or in context, is a candidate for inclusion in an Internationalized Domain Name (IDN).&lt;/t>&lt;t> It is part of the specification of Internationalizing Domain Names in Applications 2008 (IDNA2008). [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='5892' />
<format type='TXT' octets='187370' target='http://www.rfc-editor.org/rfc/rfc5892.txt' />
</reference>

<reference anchor='IDNA-DEFS'>
<front>
<title>Internationalized Domain Names for Applications (IDNA): Definitions and Document Framework</title>
<author initials='J.' surname='Klensin' fullname='J. Klensin'>
<organization /></author>
<date year='2010' month='August' />
<abstract>
<t>This document is one of a collection that, together, describe the protocol and usage context for a revision of Internationalized Domain Names for Applications (IDNA), superseding the earlier version.  It describes the document collection and provides definitions and other material that are common to the set. [STANDARDS TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='5890' />
<format type='TXT' octets='54245' target='http://www.rfc-editor.org/rfc/rfc5890.txt' />
</reference>

<reference anchor='IDNA-PROTO'>
<front>
<title>Internationalized Domain Names in Applications (IDNA): Protocol</title>
<author initials='J.' surname='Klensin' fullname='J. Klensin'>
<organization /></author>
<date year='2010' month='August' />
<abstract>
<t>This document is the revised protocol definition for Internationalized Domain Names (IDNs).  The rationale for changes, the relationship to the older specification, and important terminology are provided in other documents.  This document specifies the protocol mechanism, called Internationalized Domain Names in Applications (IDNA), for registering and looking up IDNs in a way that does not require changes to the DNS itself.  IDNA is only meant for processing domain names, not free text. [STANDARDS TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='5891' />
<format type='TXT' octets='38105' target='http://www.rfc-editor.org/rfc/rfc5891.txt' />
</reference>

<reference anchor="KEYWORDS">
<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass.  Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date month='March' year='1997' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL
      NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;MAY&quot;, and
      &quot;OPTIONAL&quot; in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>
<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='ftp://ftp.isi.edu/in-notes/rfc2119.txt' />
<format type='HTML' octets='14486' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5661' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>

<reference anchor="UNICODE">
  <front>
    <title>The Unicode Standard, Version 3.2.0</title>
    <author>
      <organization>The Unicode Consortium</organization>
    </author>
    <date year="2000" />
  </front>
  <annotation>
    The Unicode Standard, Version 3.2.0 is defined by The Unicode Standard,
Version 3.0 (Reading, MA, Addison-Wesley, 2000. ISBN 0-201-61633-5), as amended
by the Unicode Standard Annex #27: Unicode 3.1
(http://www.unicode.org/reports/tr27/) and by the Unicode Standard Annex #28:
Unicode 3.2 (http://www.unicode.org/reports/tr28/). 
  </annotation>
</reference>

<reference anchor="UNICODE-SEC" target='http://www.unicode.org/reports/tr36/'>
  <front>
    <title>Unicode Technical Report #36: Unicode Security Considerations</title>
    <author>
      <organization>The Unicode Consortium</organization>
    </author>
    <date year="2008" />
  </front>
  <format type='HTML' target='http://www.unicode.org/reports/tr36/'/>
</reference>

<reference anchor='UTF-8'>
<front>
<title>UTF-8, a transformation format of ISO 10646</title>
<author initials='F.' surname='Yergeau' fullname='F. Yergeau'>
<organization /></author>
<date month='November' year='2003' /></front>
<seriesInfo name='STD' value='63' />
<seriesInfo name='RFC' value='3629' />
<format type='TXT' octets='33856' target='ftp://ftp.isi.edu/in-notes/rfc3629.txt' />
</reference>

<reference anchor="XMPP">
<front>
<title>Extensible Messaging and Presence Protocol (XMPP): Core</title>
<author initials='P' surname='Saint-Andre' fullname='Peter Saint-Andre'>
    <organization />
</author>
<date month='March' year='2011' />
<abstract><t>This document defines the core features of the Extensible Messaging and Presence Protocol (XMPP), a technology for streaming Extensible Markup Language (XML) elements in order to exchange structured information in close to real time between any two or more network- aware entities. XMPP provides a generalized, extensible framework for incrementally exchanging XML data, upon which a variety of applications can be built. The framework includes methods for stream setup and teardown, channel encryption, authentication of a client to a server and of one server to another server, and primitives for push-style messages, publication of network availability information ("presence"), and request-response interactions between any two XMPP entities. This document obsoletes RFC 3920.</t></abstract>
</front>
<seriesInfo name='RFC' value='6120' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-xmpp-3920bis-22.txt' />
</reference>

    </references>

    <references title="Informative References">

<reference anchor='DNSSEC'>
<front>
<title>DNS Security Introduction and Requirements</title>
<author initials='R.' surname='Arends' fullname='R. Arends'>
<organization /></author>
<author initials='R.' surname='Austein' fullname='R. Austein'>
<organization /></author>
<author initials='M.' surname='Larson' fullname='M. Larson'>
<organization /></author>
<author initials='D.' surname='Massey' fullname='D. Massey'>
<organization /></author>
<author initials='S.' surname='Rose' fullname='S. Rose'>
<organization /></author>
<date year='2005' month='March' />
<abstract>
<t>The Domain Name System Security Extensions (DNSSEC) add data origin authentication and data integrity to the Domain Name System. This document introduces these extensions and describes their capabilities and limitations. This document also discusses the services that the DNS security extensions do and do not provide. Last, this document describes the interrelationships between the documents that collectively describe DNSSEC. [STANDARDS TRACK] </t></abstract></front>
<seriesInfo name='RFC' value='4033' />
<format type='TXT' octets='52445' target='ftp://ftp.isi.edu/in-notes/rfc4033.txt' />
</reference>

<reference anchor='I18N-TERMS'>
<front>
<title>Terminology Used in Internationalization in the IETF</title>
<author initials='P' surname='Hoffman' fullname='Paul Hoffman'>
    <organization />
</author>
<author initials='J' surname='Klensin' fullname='John Klensin'>
    <organization />
</author>
<date month='April' day='21' year='2011' />
<abstract><t>This document provides a glossary of terms used in the IETF when discussing internationalization.  The purpose is to help frame discussions of internationalization in the various areas of the IETF and to help introduce the main concepts to IETF participants.</t></abstract>
</front>
<seriesInfo name='Internet-Draft' value='draft-hoffman-rfc3536bis-02' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-hoffman-rfc3536bis-02.txt' />
</reference>

<reference anchor='IDNA2003'>
<front>
<title>Internationalizing Domain Names in Applications (IDNA)</title>
<author initials='P.' surname='Faltstrom' fullname='P. Faltstrom'>
<organization /></author>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'>
<organization /></author>
<author initials='A.' surname='Costello' fullname='A. Costello'>
<organization /></author>
<date month='March' year='2003' /></front>
<seriesInfo name='RFC' value='3490' />
<format type='TXT' octets='51943' target='ftp://ftp.isi.edu/in-notes/rfc3490.txt' />
<annotation>See Section 1 for an explanation of why the normative reference to an obsoleted specification is needed.</annotation>
</reference>

<reference anchor='IDNA-RATIONALE'>
<front>
<title>Internationalized Domain Names for Applications (IDNA): Background, Explanation, and Rationale</title>
<author initials='J.' surname='Klensin' fullname='J. Klensin'>
<organization /></author>
<date year='2010' month='August' />
<abstract>
<t>Several years have passed since the original protocol for Internationalized Domain Names (IDNs) was completed and deployed.  During that time, a number of issues have arisen, including the need to update the system to deal with newer versions of Unicode.  Some of these issues require tuning of the existing protocols and the tables on which they depend.  This document provides an overview of a revised system and provides explanatory material for its components.  This document is not an Internet Standards Track specification; it is published for informational purposes.</t></abstract></front>
<seriesInfo name='RFC' value='5894' />
<format type='TXT' octets='115174' target='http://www.rfc-editor.org/rfc/rfc5894.txt' />
</reference>

<reference anchor='INTEROP'>
<front>
<title>Formalizing IETF Interoperability Reporting</title>
<author initials='L' surname='Masinter' fullname='Larry Masinter'>
    <organization />
</author>
<date month='October' day='11' year='2005' />
<abstract><t>This document suggests another way of reforming IETF standards process by formalizing the mechanism for interoperability reporting, as a way of facilitating standards development. It establishes two kinds of reports: a 'Protocol Feature Set', which lays out the set of features from IETF specifications that constitute a protocol, and a 'Protocol Implementation Report', which is submitted by an individual or group to report on implementation and interoperability testing.</t></abstract>
</front>
<seriesInfo name='Work in' value='Progress' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-newtrk-interop-reports-00.txt' />
</reference>

<reference anchor='IRI'>
<front>
<title>Internationalized Resource Identifiers (IRIs)</title>
<author initials='M.' surname='Duerst' fullname='M. Duerst'>
<organization /></author>
<author initials='M.' surname='Suignard' fullname='M. Suignard'>
<organization /></author>
<date year='2005' month='January' />
<abstract>
<t>&lt;p>This document defines a new protocol element, the Internationalized Resource Identifier (IRI), as a complement of the Uniform Resource Identifier (URI). An IRI is a sequence of characters from the Universal Character Set (Unicode/ISO 10646). A mapping from IRIs to URIs is defined, which means that IRIs can be used instead of URIs, where appropriate, to identify resources.&lt;/p>&lt;p> The approach of defining a new protocol element was chosen instead of extending or changing the definition of URIs. This was done in order to allow a clear distinction and to avoid incompatibilities with existing software. Guidelines are provided for the use and deployment of IRIs in various protocols, formats, and software components that currently deal with URIs.&lt;/p></t></abstract></front>
<seriesInfo name='RFC' value='3987' />
<format type='TXT' octets='111190' target='ftp://ftp.isi.edu/in-notes/rfc3987.txt' />
</reference>

<reference anchor='PROCESS'>
<front>
<title abbrev='Internet Standards Process'>The Internet Standards Process -- Revision 3</title>
<author initials='S.' surname='Bradner' fullname='Scott O. Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<city>Cambridge</city>
<region>MA</region>
<code>02138</code>
<country>US</country></postal>
<phone>+1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1996' month='October' />
<abstract>
<t>This memo documents the process used by the Internet community for the standardization of protocols and procedures.  It defines the stages in the standardization process, the requirements for moving a document between stages and the types of documents used during this process.  It also addresses the intellectual property rights and copyright issues associated with the standards process.</t></abstract></front>
<seriesInfo name='BCP' value='9' />
<seriesInfo name='RFC' value='2026' />
<format type='TXT' octets='86731' target='ftp://ftp.isi.edu/in-notes/rfc2026.txt' />
</reference>

<reference anchor='PUNYCODE'>
<front>
<title>Punycode: A Bootstring encoding of Unicode for Internationalized Domain Names in Applications (IDNA)</title>
<author initials='A.' surname='Costello' fullname='A. Costello'>
<organization /></author>
<date year='2003' month='March' />
<abstract>
<t>Punycode is a simple and efficient transfer encoding syntax designed for use with Internationalized Domain Names in Applications (IDNA). It uniquely and reversibly transforms a Unicode string into an ASCII string. ASCII characters in the Unicode string are represented literally, and non-ASCII characters are represented by ASCII characters that are allowed in host name labels (letters, digits, and hyphens). This document defines a general algorithm called Bootstring that allows a string of basic code points to uniquely represent any string of code points drawn from a larger set. Punycode is an instance of Bootstring that uses particular parameter values specified by this document, appropriate for IDNA. [STANDARDS TRACK] </t></abstract></front>
<seriesInfo name='RFC' value='3492' />
<format type='TXT' octets='67439' target='ftp://ftp.isi.edu/in-notes/rfc3492.txt' />
</reference>

<reference anchor='REPORTS'>
<front>
<title>Guidance on Interoperation and Implementation Reports for Advancement to Draft Standard</title>
<author initials='L.' surname='Dusseault' fullname='L. Dusseault'>
<organization /></author>
<author initials='R.' surname='Sparks' fullname='R. Sparks'>
<organization /></author>
<date year='2009' month='September' />
<abstract>
<t>Advancing a protocol to Draft Standard requires documentation of the interoperation and implementation of the protocol.  Historic reports have varied widely in form and level of content and there is little guidance available to new report preparers.  This document updates the existing processes and provides more detail on what is appropriate in an interoperability and implementation report.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract></front>
<seriesInfo name='BCP' value='9' />
<seriesInfo name='RFC' value='5657' />
<format type='TXT' octets='29327' target='ftp://ftp.isi.edu/in-notes/rfc5657.txt' />
</reference>

<reference anchor='RFC3920'>
<front>
<title abbrev='XMPP Core'>Extensible Messaging and Presence Protocol (XMPP): Core</title>
<author initials='P.' surname='Saint-Andre' fullname='Peter Saint-Andre' role='editor'>
<organization>Jabber Software Foundation</organization>
<address>
<email>stpeter@jabber.org</email></address></author>
<date year='2004' month='October' />
<area>Applications</area>
<workgroup>XMPP Working Group</workgroup>
<keyword>RFC</keyword>
<keyword>Request for Comments</keyword>
<keyword>I-D</keyword>
<keyword>Internet-Draft</keyword>
<keyword>XMPP</keyword>
<keyword>Extensible Messaging and Presence Protocol</keyword>
<keyword>Jabber</keyword>
<keyword>IM</keyword>
<keyword>Instant Messaging</keyword>
<keyword>Presence</keyword>
<keyword>XML</keyword>
<keyword>Extensible Markup Language</keyword>
<abstract>
<t>This memo defines the core features of the Extensible Messaging and Presence Protocol (XMPP), a protocol for streaming Extensible Markup Language (XML) elements in order to exchange structured information in close to real time between any two network endpoints.  While XMPP provides a generalized, extensible framework for exchanging XML data, it is used mainly for the purpose of building instant messaging and presence applications that meet the requirements of RFC 2779.</t></abstract></front>
<seriesInfo name='RFC' value='3920' />
<format type='TXT' octets='194313' target='ftp://ftp.isi.edu/in-notes/rfc3920.txt' />
<format type='HTML' octets='279912' target='http://xml.resource.org/public/rfc/html/rfc3920.html' />
<format type='XML' octets='234610' target='http://xml.resource.org/public/rfc/xml/rfc3920.xml' />
</reference>

<reference anchor='RFC6122'>
<front>
<title>Extensible Messaging and Presence Protocol (XMPP): Address Format</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'>
<organization /></author>
<date year='2011' month='March' />
<abstract>
<t>This document defines the format for addresses used in the Extensible Messaging and Presence Protocol (XMPP), including support for non-ASCII characters.  This document updates RFC 3920. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='6122' />
<format type='TXT' octets='50646' target='http://www.rfc-editor.org/rfc/rfc6122.txt' />
</reference>

<reference anchor="SASL">
<front>
<title>Simple Authentication and Security Layer (SASL)</title>
<author initials='A.' surname='Melnikov' fullname='A. Melnikov' role="editor">
<organization /></author>
<author initials='K.' surname='Zeilenga' fullname='K. Zeilenga' role="editor">
<organization /></author>
<date year='2006' month='June' />
<abstract>
<t>&lt;p>The Simple Authentication and Security Layer (SASL) is a framework for providing authentication and data security services in connection-oriented protocols via replaceable mechanisms. It provides a structured interface between protocols and mechanisms. The resulting framework allows new protocols to reuse existing mechanisms and allows old protocols to make use of new mechanisms. The framework also provides a protocol for securing subsequent protocol exchanges within a data security layer.&lt;/p>&lt;p> This document describes how a SASL mechanism is structured, describes how protocols include support for SASL, and defines the protocol for carrying a data security layer over a connection. In addition, this document defines one SASL mechanism, the EXTERNAL mechanism.&lt;/p>&lt;p> This document obsoletes RFC 2222. [STANDARDS TRACK]&lt;/p></t></abstract></front>
<seriesInfo name='RFC' value='4422' />
<format type='TXT' octets='73206' target='ftp://ftp.isi.edu/in-notes/rfc4422.txt' />
</reference>

<reference anchor="STRINGPREP">
<front>
<title>Preparation of Internationalized Strings ("stringprep")</title>
<author initials='P.' surname='Hoffman' fullname='P.  Hoffman'>
<organization /></author>
<author initials='M.' surname='Blanchet' fullname='M.  Blanchet'>
<organization /></author>
<date month='December' year='2002' /></front>
<seriesInfo name='RFC' value='3454' />
<format type='TXT' octets='138684' target='ftp://ftp.isi.edu/in-notes/rfc3454.txt' />
</reference>

<reference anchor='URI'>
<front>
<title abbrev='URI Generic Syntax'>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='Tim Berners-Lee'>
<organization abbrev='W3C/MIT'>World Wide Web Consortium</organization>
<address>
<postal>
<street>Massachusetts Institute of Technology</street>
<street>77 Massachusetts Avenue</street>
<city>Cambridge</city>
<region>MA</region>
<code>02139</code>
<country>USA</country></postal>
<phone>+1-617-253-5702</phone>
<facsimile>+1-617-258-5999</facsimile>
<email>timbl@w3.org</email>
<uri>http://www.w3.org/People/Berners-Lee/</uri></address></author>
<author initials='R.' surname='Fielding' fullname='Roy T. Fielding'>
<organization abbrev='Day Software'>Day Software</organization>
<address>
<postal>
<street>5251 California Ave., Suite 110</street>
<city>Irvine</city>
<region>CA</region>
<code>92617</code>
<country>USA</country></postal>
<phone>+1-949-679-2960</phone>
<facsimile>+1-949-679-2972</facsimile>
<email>fielding@gbiv.com</email>
<uri>http://roy.gbiv.com/</uri></address></author>
<author initials='L.' surname='Masinter' fullname='Larry Masinter'>
<organization abbrev='Adobe Systems'>Adobe Systems Incorporated</organization>
<address>
<postal>
<street>345 Park Ave</street>
<city>San Jose</city>
<region>CA</region>
<code>95110</code>
<country>USA</country></postal>
<phone>+1-408-536-3024</phone>
<email>LMM@acm.org</email>
<uri>http://larry.masinter.net/</uri></address></author>
<date year='2005' month='January' />
<area>Applications</area>
<keyword>uniform resource identifier</keyword>
<keyword>URI</keyword>
<keyword>URL</keyword>
<keyword>URN</keyword>
<keyword>WWW</keyword>
<keyword>resource</keyword>
<abstract>
<t>
A Uniform Resource Identifier (URI) is a compact sequence of characters
that identifies an abstract or physical resource.  This specification
defines the generic URI syntax and a process for resolving URI references
that might be in relative form, along with guidelines and security
considerations for the use of URIs on the Internet.
The URI syntax defines a grammar that is a superset of all valid URIs,
allowing an implementation to parse the common components of a URI
reference without knowing the scheme-specific requirements of every
possible identifier.  This specification does not define a generative
grammar for URIs; that task is performed by the individual
specifications of each URI scheme.
</t></abstract></front>
<seriesInfo name='STD' value='66' />
<seriesInfo name='RFC' value='3986' />
<format type='TXT' octets='141811' target='ftp://ftp.isi.edu/in-notes/rfc3986.txt' />
<format type='HTML' octets='200858' target='http://xml.resource.org/public/rfc/html/rfc3986.html' />
<format type='XML' octets='165759' target='http://xml.resource.org/public/rfc/xml/rfc3986.xml' />
</reference>

<reference anchor="XEP-0029">
  <front>
    <title>Definition of Jabber Identifiers (JIDs)</title>
    <author initials="C." surname="Kaes" fullname="Craig Kaes">
      <organization/>
      <address>
        <email>craigk@jabber.com</email>
      </address>
    </author>
    <date day="03" month="October" year="2003"/>
  </front>
  <seriesInfo name="XSF XEP" value="0029"/>
  <format type="HTML" target="http://xmpp.org/extensions/xep-0029.html"/>
</reference>

<reference anchor="XEP-0045">
  <front>
    <title>Multi-User Chat</title>
    <author initials="P." surname="Saint-Andre" fullname="Peter Saint-Andre">
      <organization/>
      <address>
        <email>stpeter@jabber.org</email>
      </address>
    </author>
    <date day="16" month="July" year="2008"/>
  </front>
  <seriesInfo name="XSF XEP" value="0045"/>
  <format type="HTML" target="http://xmpp.org/extensions/xep-0045.html"/>
</reference>

<reference anchor="XEP-0165">
  <front>
    <title>Best Practices to Discourage JID Mimicking</title>
    <author initials="P." surname="Saint-Andre" fullname="Peter Saint-Andre">
      <organization/>
      <address>
        <email>stpeter@jabber.org</email>
      </address>
    </author>
    <date day="13" month="December" year="2007"/>
  </front>
  <seriesInfo name="XSF XEP" value="0165"/>
  <format type="HTML" target="http://xmpp.org/extensions/xep-0045.html"/>
</reference>

<reference anchor='XML' target='http://www.w3.org/TR/2006/REC-xml-20060816'>
<front>
<title>Extensible Markup Language (XML) 1.0 (Fourth Edition)</title>
<author initials='J.' surname='Paoli' fullname='Jean Paoli'>
    <organization />
</author>
<author initials='E.' surname='Maler' fullname='Eve Maler'>
    <organization />
</author>
<author initials='C.' surname='Sperberg-McQueen' fullname='C. M. Sperberg-McQueen'>
    <organization />
</author>
<author initials='F.' surname='Yergeau' fullname='Francois Yergeau'>
    <organization />
</author>
<author initials='T.' surname='Bray' fullname='Tim Bray'>
    <organization />
</author>
<date month='August' day='16' year='2006' />
</front>
<seriesInfo name='World Wide Web Consortium Recommendation' value='REC-xml-20060816' />
<format type='HTML' target='http://www.w3.org/TR/2006/REC-xml-20060816' />
</reference>

<reference anchor='XMPP-URI'>
<front>
<title>Internationalized Resource Identifiers (IRIs) and Uniform Resource Identifiers (URIs) for the Extensible Messaging and Presence Protocol (XMPP)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'>
<organization /></author>
<date year='2008' month='February' />
<abstract>
<t>This document defines the use of Internationalized Resource Identifiers (IRIs) and Uniform Resource Identifiers (URIs) in identifying or interacting with entities that can communicate via the Extensible Messaging and Presence Protocol (XMPP). [STANDARDS TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='5122' />
<format type='TXT' octets='55566' target='ftp://ftp.isi.edu/in-notes/rfc5122.txt' />
</reference>

    </references>

    <section title="Differences from RFC 6122" anchor="diffs">
      <t>Based on consensus derived from implementation and deployment experience as well as formal interoperability testing, the following substantive modifications were made from RFC 3920.</t>
      <t>
        <list style='symbols'>
          <t>Changed domainpart preparation to use IDNA2008 instead of IDNA2003.</t>
          <t>Changed localpart preparation to use PRECIS instead of the Nodeprep profile of Stringprep.</t>
          <t>Changed resourcepart preparation to use PRECIS instead of the Resourceprep profile of Stringprep.</t>
        </list>
      </t>
    </section>

    <section title="Acknowledgements" anchor="acks">
      <t>Some text in this document was borrowed or adapted from <xref target='IDNA-DEFS'/>, <xref target='IDNA-PROTO'/>, <xref target='IDNA-RATIONALE'/>, and <xref target='XEP-0165'/>.</t>
    </section>

  </back>

</rfc>
