<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">

<!ENTITY I-D.moritz-6lowapp-dpws-enhancements SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-moritz-6lowapp-dpws-enhancements-01.xml">
<!ENTITY I-D.ietf-core-coap SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-core-coap-04.xml">

<!ENTITY W3C.PR-ws-addr-core-20060321 SYSTEM "http://xml.resource.org/public/rfc/bibxml4/reference.W3C.PR-ws-addr-core-20060321.xml">
<!ENTITY W3C.REC-soap12-part0-20070427 SYSTEM "http://xml.resource.org/public/rfc/bibxml4/reference.W3C.REC-soap12-part0-20070427.xml">
<!ENTITY W3C.REC-soap12-part1-20070427 SYSTEM "http://xml.resource.org/public/rfc/bibxml4/reference.W3C.REC-soap12-part1-20070427.xml">


]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-moritz-core-soap-over-coap-00" ipr="noDerivativesTrust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="SOAP-over-CoAP Binding">SOAP-over-CoAP Binding</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Guido Moritz" initials="G.M." role=""
            surname="Moritz">
      <organization>University of Rostock</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>18051 Rostock</city>

          <region></region>

          <code></code>

          <country>Germany</country>
        </postal>

        <phone>+49 381 498 7269</phone>

        <email>guido.moritz@uni-rostock.de</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date month="January" year="2011" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>CORE</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>DPWS</keyword>
    <keyword>6LoWPAN</keyword>
    <keyword>6LoWAPP</keyword>
	<keyword>CORE</keyword>
	<keyword>CoAP</keyword>
	<keyword>SOAP</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>The scope of this document is to provide a basis for a lightweight SOAP over CoAP binding, to allow usage of SOAP Web services also in resource constrained networks.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
	<t>
	The intention of this document is to provide a basic approach for a SOAP-over-CoAP binding. Readers of this document should be basically familiar with the CoAP draft <xref target="I-D.ietf-core-coap"></xref>, SOAP <xref target="W3C.REC-soap12-part0-20070427"></xref>, SOAP HTTP Binding <xref target="W3C.REC-soap12-part1-20070427"></xref> and SOAP UDP binding specifications <xref target="SOAP-over-UDP"></xref>. Parts of this document are derived from these existing specifications. This document will not provide a comprehensive specification, but may be a basis for further discussions and to identify required changes in the current CoAP <xref target="I-D.ietf-core-coap"></xref> protocol design which is on the way to become an IETF standard. These changes might not be identified directly as the binding described herein will not exploit from all features of CoAP but use CoAP as an 'application layer transport protocol' as SOAP already does with HTTP <xref target="W3C.REC-soap12-part1-20070427"></xref>.
	</t>

	    <section title="Motivation">
        <t>
		The motivation behind this document is based on the initial I-D <xref target="I-D.moritz-6lowapp-dpws-enhancements"></xref> and the resulting discussions. The described binding herein is a major enabler for the efforts towards usage of SOAP Web services for highly resource constrained devices like wireless sensor nodes. As core protocol the OASIS Devices Profile for Web Services (DPWS) <xref target="DPWS"></xref> is applied. By combining DPWS with EXI, message size can be reduced significantly as presented in <xref target="I-D.moritz-6lowapp-dpws-enhancements"></xref>. By providing a binding of SOAP to CoAP, the message overhead can be reduced significantly. Furthermore, SOAP is not required to use inappropriate mechanisms like TCP congestion control. Reliably messaging is guaranteed by CoAP internal mechanisms and thus expensive retransmissions independent of successful or unsuccessful delivery as required by the SOAP-over-UDP binding are avoided. In summary, the major advantages are:
		<list style="symbols">
			<t>more compact message format</t>
			<t>probably lower message parsing efforts compared to standard HTTP headers</t>
			<t>avoid inappropriate TCP usage implied by SOAP-over-HTTP binding</t>
			<t>avoid unreliable nature of unicast SOAP-over-UDP binding</t>
		</list>


		</t>
      </section>
	  
      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
	  
	  <section title="Terminology and Definitions">
			<t>
			Defined below are the basic definitions for the terms used in this specification.
			</t>
			<t>
			<list hangIndent="8" style="hanging">
				<t hangText="Receiver"><vspace blankLines="0" />The endpoint terminating a SOAP/CoAP message</t>		
				<t hangText="Sender"><vspace blankLines="0" />The endpoint originating a SOAP/CoAP message</t>	
				<t hangText="SOAP/CoAP message"><vspace blankLines="0" />A CoAP message containing a SOAP envelope in the CoAP message body</t>	
			</list>
			</t>
			<t>
This specification uses the constructs [action], [destination], [message id], [reply endpoint], [address] as defined by in WS-Addressing <xref target="W3C.PR-ws-addr-core-20060321"></xref>. 
</t>
<t>
The SOAP CoAP Binding is optional and SOAP nodes are not required to implement it. A SOAP node that correctly and completely implements the SOAP CoAP Binding may to be said to 'conform to the CoAP Binding.'


			</t>
      </section>
	  	  <section title="Requirements">
			<t>
			This specification intends to meet the following requirements:
			<list style="symbols">
				<t>Support a one-way message-exchange pattern (MEP) where a SOAP envelope is carried in a CoAP message from Sender to Receiver only.</t>
				<t>Support a request-response message-exchange pattern (MEP) where SOAP envelopes are carried in CoAP messages from Sender to Receiver and back from the origin Receiver to the origin Sender.</t>
			</list>
Even if reasonable, supporting multicast transmissions of SOAP envelopes carried in CoAP messages are out of scope of this version of this document and require further research. 
This binding supports SOAP 1.2 <xref target="W3C.REC-soap12-part0-20070427"></xref> Envelopes. Supporting SOAP 1.1 envelopes is out of scope but might be added in future versions of this document.
</t>
<t>
Messages conforming to either SOAP specification can use this binding. This specification relies on WS-Addressing. The SOAP envelope MUST use the mechanisms defined in WS-Addressing <xref target="W3C.PR-ws-addr-core-20060321"></xref>.
</t>
      </section>
	  
 </section>

      <section title="Use of CoAP">
        <t>
		This binding of SOAP to CoAP is intended to make appropriate use of CoAP as an application protocol. For example, successful and failure responses are indicated by the appropriated CoAP response codes (e.g. 2xx, 4xx, 5xx). This binding is not intended to fully exploit the features of CoAP, but rather to use CoAP specifically for the purpose of communicating with other SOAP nodes implementing the same binding.
		</t>
		    <section title="CoAP Content-Type">
			<t>
		Conforming implementations of this binding:
		<list style="symbols">
			<t>MAY be capable of sending and receiving SOAP/CoAP messages serialized using media type 'application/soap+xml'.</t>
			<t>MAY be capable of sending and receiving SOAP/CoAP messages serialized using media type 'application/exi'.</t>
			<t>MUST send requests and responses using such media types provide for at least the transfer of SOAP XML Infoset, including 'application/soap+xml' and 'application/exi'.</t>
		</list>
		A SOAP/CoAP message MUST contain the CoAP Content-type Identifies Option and MUST contain a value which satisfies the three points above.
		</t>
		<t>
		Note: CoAP has no header option which corresponds to HTTP Accept. Thus the web methods known from the HTTP binding is not possible. In the current CoAP draft only view information are available how to define own header fields.

			</t>
		  </section>
	  
      </section>

	  <section title="Binding Name">
	  <t>
		This binding is identified by the URI (see SOAP 1.2 Part 1 <xref target="W3C.REC-soap12-part1-20070427"></xref> SOAP Protocol Binding Framework): http://www.ws4d.org/2011/01/soap/bindings/CoAP/
		</t>
		<t>
		Note: The binding name is tentative but required to indicate the corresponding binding e.g. in the WSDL of a service.
		</t>

		  </section>
		
		<section title="Transport Layer Binding">
	  <t>
		The CoAP binding MUST operate over UDP transport layer. 
		</t>
		<t>
		Note: CoAP defines a maximum message size which refers to the IP layer. The existing UDP binding instead refers only to UDP and defines a general maximum packet size independent of IP.
		</t>

			<section title="Source Address and Port">
			  <t>
				The source address MUST be supplied at the IP packet level and MUST be the IPv4 address (limited to unicast addresses) or IPv6 address (limited to unicast addresses) of the sender; the receiver SHOULD reject IP packets containing a SOAP/CoAP message that have inappropriate values for the source address. 
				</t>
				<t>
				Even though CoAP is intended to be used on the well-known ports defined in CoAP-04, the use of CoAP is not limited to these ports. As a result, it is possible to have a dedicated CoAP server for handling SOAP processing on a distinct port.
				</t>

				</section> 
		
		</section> 
	
		<section title="Addressing">
			<section title="URI Scheme">
			  <t>
				The SOAP CoAP binding defines a base URI according to the rules in CoAP-04. I.e., the base URI is the CoAP Request-URI or the value of the CoAP Location option field.
				</t>

				</section> 

			<section title="Destination Addressing">
			  <t>
				WS-Addressing defines a URI, 'http://www.w3.org/2005/08/addressing/anonymous', that can appear in the [address] property of an endpoint reference. If the [reply endpoint] property of a SOAP message transmitted over CoAP has an [address] property with this value, the UDP source address (and source port) is considered to be the address to which reply messages should be sent.</t>
<t>				
The implied value of the [reply endpoint] property for SOAP messages transmitted over CoAP is an endpoint reference with an [address] property whose value is 'http://www.w3.org/2005/08/addressing/anonymous'.
				</t>

				</section> 
		
		</section> 
		
<section title="Message Patterns">
			<t>
		This specification supports the following message patterns:
		<list style="symbols">
			<t>Unicast one-way</t>
			<t>Unicast request, unicast response</t>
		</list>
		as described in the remainder of this section. All SOAP/CoAP messages MUST use the POST method of CoAP, whereby POST is interpreted in accordance to RFC2616. 
		</t>
		<t>
		Note: In the current draft of CoAP-04, response Code 2.00 OK is only possible for GET methods. But GET is not the appropriate method for this binding. 
		</t>
		<t>
		Note: There is no Action field similar to SOAPAction in HTTP, so extensions are required to the basic CoAP Options. Hence the web method feature of the HTTP binding cannot be made possible.
		</t>
		<t>
		CoAP defines Proxy mechanism for caching of responses. Because the CoAP binding defined herein is intended for service communication and not RESTful resource manipulation, caching should be avoided. CoAP defines the Max-Age option to be default a non-zero value. Hence each SOAP/CoAP message MUST contain the Max-Age option and the value MUST be zero.
		</t>

			<section title="Request response">
			  <t>
			To match a request with a response the CoAP Token Option can be used. The CoAP Token Option SHOULD be carried in all request-response SOAP/CoAP messages. WS-Addressing defines the [message id] property to identify messages in time and space and to match requests with response. In case of using the CoAP/SOAP binding the [message id] property is SHOULD be empty and MUST contain a value in case if the CoAP Token Option is not present. 
</t>
				<t>Note: The intention of this paragraph is to reduce message size. The [message id] property has a typical size of 45 Bytes and cannot by compressed by knowledge based encodings like EXI because the value of this property is unique in each message. The CoAP Token Option may be much more compact by providing the same functionality.
</t>
				<t>CoAP defines the feature of deferred responses where a transaction ACK is sent as response to a CON message to indicate a deferred response. If the value of the [reply endpoint] of the request is 'http://www.w3.org/2005/08/addressing/anonymous', the ACK message SHOULD NOT carry any payload (e.g. a SOAP Envelope) in the CoAP message body if not required by the application logic. If the value of the [reply endpoint] is not 'http://www.w3.org/2005/08/addressing/anonymous', the origin Receiver cannot guarantee that the response is intended to be sent to the same entity like the client and SHOULD include a SOAP Envelope providing details of the request for the entity behind the [reply endpoint].
				</t>

				</section> 
		
		
		<section title="Retransmission">
			  <t>To avoid repeated packet collisions, any retransmission implementation SHOULD observe good practices such as using exponential back-off algorithms and spreading. An implementation SHOULD use the Confirmable (CON) transaction message mechanism described in the CoAP specification to avoid unnecessary retransmissions. For each transmission of such a message, the value of the [message id] property and the CoAP Token Option MUST be the same.
</t>
				<t>Note: WS-Event Delivery should not use CON due to ACK flood at Event Source. Multicast messages also should use NON messages. Not sure if such requirements are in scope of this document.
				</t>
		</section> 
	
</section>
	
<section title="CoAP Header Options">
  <t>In this section, the CoAP header and CoAP header options usage is described in detail. 
	</t>
				
	<section title="Unicast one-way">
			<t>The unicast one-way message pattern consists of only one request without a response. Due to the CoAP binding the request consists of one CoAP transaction. If CoAP Confirmable messaging is used, an empty CoAP ACK message must be send back to the origin sender to indicate success or failure.</t>
			<t>
The request is formulated according to the table below, but can be extended for application specific needs.	</t>
	<texttable anchor="Table1" title="Unicast one-way Request">
			
			<ttcol align="center" align='left'>CoAP field/header option</ttcol>
			<ttcol align="left">Value</ttcol>
			
			<c>CoAP Method</c><c>POST is the only supported method of this binding.</c>
			<c>Request URI</c><c>The request URI confirming a CoAP URI [xxx] and identifying the WS-Addressing [address] endpoint property (network address). If the value of the WS-Addressing [address] endpoint property is 'http://www.w3.org/2005/08/addressing/anonymous' (directly set or implied by an empty [address] property), the CoAP Uri-Path Option and the CoAP Uri-Query Option are empty.</c>
			<c>Message ID</c><c>If messaging model is CON, carrying value in accordance to messaging model of CoAP . Otherwise not included.</c>
			<c>Content-type Option</c><c>Media type of CoAP message body.</c>
			<c>Token Option</c><c>Token in accordance to CoAP specification identifying the transaction in time and space. Only required if message is a CoAP Confirmable message.</c>
			<c>CoAP message body</c><c>SOAP message serialized according to the rules for carrying SOAP messages in the media type given by the Content-type Option.</c>
		</texttable>
		<t>
		If the request is send as Non-Confirmable CoAP message, no response is send back to the origin requester. If the request is a Confirmable CoAP message, the response consists only of a CoAP ACK without any data in the CoAP message body. In case of a Conformable CoAP request the response is formulated according to the table below, but can be extended for application specific needs.</t>
			<texttable anchor="Table2" title="Unicast one-way ACK Response">
			
			<ttcol align="center" align='left'>CoAP field/header option</ttcol>
			<ttcol align="left">Value</ttcol>
			
			<c>CoAP Status Code</c><c>Status Code in accordance to codes defined in CoAP and interpreted as described in the SOAP-over-HTTP binding.
Note: CoAP describes only a subset of HTTP status codes and adds own codes. This must require further alignment.
</c>
			<c>Message ID</c><c>If messaging model is CON, carrying value in accordance to messaging model of CoAP . Otherwise not included.</c>
			<c>Token Option</c><c>Token in accordance to CoAP specification identifying the transaction in time and space. Only required if message is a CoAP Confirmable message.</c>
		</texttable>
		<t>
		Application developers must be aware that the one-way message exchange patterns returns neither failure nor success messages if Non-Confirmable messages are used.
		</t>
	</section> 
	
	
		<section title="Unicast request-response">
			<t>The unicast request-response message pattern consists of one request and one response. Due to the CoAP binding the request consists of one or more CoAP transactions. </t>
			<t>
The request is formulated according to the table below, but can be extended for application specific needs.
</t>
	<texttable anchor="Table3" title="Unicast request-response Request">
			
			<ttcol align="center" align='left'>CoAP field/header option</ttcol>
			<ttcol align="left">Value</ttcol>
			
			<c>CoAP Method</c><c>POST is the only supported method of this binding.</c>
			<c>Request URI</c><c>The request URI confirming a CoAP URI [xxx] and identifying the WS-Addressing [address] endpoint property (network address). If the value of the WS-Addressing [address] endpoint property is 'http://www.w3.org/2005/08/addressing/anonymous' (directly set or implied by an empty [address] property), the CoAP Uri-Path Option and the CoAP Uri-Query Option are empty.</c>
			<c>Message ID</c><c>If messaging model is CON, carrying value in accordance to messaging model of CoAP . Otherwise not included.</c>
			<c>Content-type Option</c><c>Media type of CoAP message body.</c>
			<c>Token Option</c><c>Token in accordance to CoAP specification identifying the transaction in time and space. Only required if message is a CoAP Confirmable message.</c>
			<c>CoAP message body</c><c>SOAP message serialized according to the rules for carrying SOAP messages in the media type given by the Content-type Option.</c>
		</texttable>
		<t>
		If the request is send as Non-Confirmable CoAP message, no CoAP ACK is send back to the origin requester. In this case, for the response, the origin Receiver has to initiate a new CoAP transaction which can be either Non-Confirmable or Confirmable.</t>
		<t>
If the request is a Confirmable CoAP message, the response consists of a CoAP ACK which may carry the response SOAP envelope as data in the CoAP message body. For the response, the origin receiver may also initiate a new CoAP transaction after sending the CoAP ACK to the origin Sender, which can be either also Non-Confirmable or Confirmable. (see deferred responses in CoAP)
</t>
			<texttable anchor="Table4" title="Unicast request-response ACK with Response">
			
			<ttcol align="center" align='left'>CoAP field/header option</ttcol>
			<ttcol align="left">Value</ttcol>
			
			<c>CoAP Status Code</c><c>Status Code in accordance to codes defined in CoAP and interpreted as described in the SOAP-over-HTTP binding.
Note: CoAP describes only a subset of HTTP status codes and adds own codes. This must require further alignment.
</c>
			<c>Message ID</c><c>If messaging model is CON, carrying value in accordance to messaging model of CoAP . Otherwise not included.</c>
			<c>Token Option</c><c>Token in accordance to CoAP specification identifying the transaction in time and space. Only required if message is a CoAP Confirmable message.</c>
			<c>Content-type Option</c><c>Media type of CoAP message body.</c>
			<c>CoAP message body</c><c>SOAP message serialized according to the rules for carrying SOAP messages in the media type given by the Content-type Option.</c>
		</texttable>
	</section> 
	
</section> 
		
    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>No IANA issues have been identified in this draft.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Will be added in future versions.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;
	  &I-D.ietf-core-coap;
	  &W3C.PR-ws-addr-core-20060321;
	  &W3C.REC-soap12-part0-20070427;
    </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->
	  
	  &I-D.moritz-6lowapp-dpws-enhancements;
	  &W3C.REC-soap12-part1-20070427;

      <!-- A reference written by by an organization not a person. -->

	  
	  
	  <reference anchor="SOAP-over-UDP"
                 target="http://docs.oasis-open.org/ws-dd/soapoverudp/1.1/os/wsdd-soapoverudp-1.1-spec-os.html">
        <front>
          <title>OASIS SOAP-over-UDP Version 1.1</title>

			<author fullname="Ram Jeyaraman" surname ="Jeyaraman">
				<organization>Microsoft Corporation</organization>
			</author>
			

          <date year="2009" />
        </front>
      </reference>
	  	  <reference anchor="DPWS"
                 target="http://docs.oasis-open.org/ws-dd/ns/dpws/2009/01">
        <front>
          <title>OASIS Devices Profile for Web Services (DPWS) Version 1.1</title>

			<author fullname="Dan Driscoll" surname ="Driscoll">
				<organization>Microsoft Corporation</organization>
			</author>
			<author fullname="Antoine" surname ="Mensch">
			</author>

          <date year="2009" />
        </front>
      </reference>

	  
    </references>


    <!-- Change Log

v00 2006-03-15  EBD   Initial version

v01 2006-04-03  EBD   Moved PI location back to position 1 -
                      v3.1 of XMLmind is better with them at this location.
v02 2007-03-07  AH    removed extraneous nested_list attribute,
                      other minor corrections
v03 2007-03-09  EBD   Added comments on null IANA sections and fixed heading capitalization.
                      Modified comments around figure to reflect non-implementation of
                      figure indent control.  Put in reference using anchor="DOMINATION".
                      Fixed up the date specification comments to reflect current truth.
v04 2007-03-09 AH     Major changes: shortened discussion of PIs,
                      added discussion of rfc include.
v05 2007-03-10 EBD    Added preamble to C program example to tell about ABNF and alternative 
                      images. Removed meta-characters from comments (causes problems).  -->
  </back>
</rfc>
