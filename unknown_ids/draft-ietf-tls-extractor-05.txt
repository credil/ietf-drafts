


Network Working Group                                        E. Rescorla
Internet-Draft                                                RTFM, Inc.
Intended status:  Standards Track                         March 07, 2009
Expires:  September 8, 2009


      Keying Material Exporters for Transport Layer Security (TLS)
                    draft-ietf-tls-extractor-05.txt

Status of this Memo

   This Internet-Draft is submitted to IETF in full conformance with the
   provisions of BCP 78 and BCP 79.  This document may contain material
   from IETF Documents or IETF Contributions published or made publicly
   available before November 10, 2008.  The person(s) controlling the
   copyright in some of this material may not have granted the IETF
   Trust the right to allow modifications of such material outside the
   IETF Standards Process.  Without obtaining an adequate license from
   the person(s) controlling the copyright in such materials, this
   document may not be modified outside the IETF Standards Process, and
   derivative works of it may not be created outside the IETF Standards
   Process, except to format it for publication as an RFC or to
   translate it into languages other than English.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on September 8, 2009.

Copyright Notice

   Copyright (c) 2009 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal



Rescorla                Expires September 8, 2009               [Page 1]

Internet-Draft                TLS Exporters                   March 2009


   Provisions Relating to IETF Documents in effect on the date of
   publication of this document (http://trustee.ietf.org/license-info).
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.

Abstract

   A number of protocols wish to leverage Transport Layer Security (TLS)
   to perform key establishment but then use some of the keying material
   for their own purposes.  This document describes a general mechanism
   for allowing that.


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 3
   2.  Conventions Used In This Document . . . . . . . . . . . . . . . 3
   3.  Binding to Application Contexts . . . . . . . . . . . . . . . . 3
   4.  Exporter Definition . . . . . . . . . . . . . . . . . . . . . . 4
   5.  Security Considerations . . . . . . . . . . . . . . . . . . . . 5
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 6
   7.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . 6
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . . . 6
     8.1.  Normative References  . . . . . . . . . . . . . . . . . . . 6
     8.2.  Informational References  . . . . . . . . . . . . . . . . . 7
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . . . 7

























Rescorla                Expires September 8, 2009               [Page 2]

Internet-Draft                TLS Exporters                   March 2009


1.  Introduction

   Note:  The mechanism described in this document was previously known
      as "TLS Extractors" but was changed to avoid a name conflict with
      the use of the term "Extractor" in the cryptographic community.

   A number of protocols wish to leverage Transport Layer Security (TLS)
   [RFC5246] or Datagram TLS (DTLS) [RFC4347] to perform key
   establishment but then use some of the keying material for their own
   purposes.  A typical example is DTLS-SRTP [I-D.ietf-avt-dtls-srtp],
   which uses DTLS to perform a key exchange and negotiate the SRTP
   [RFC3711] protection suite and then uses the DTLS master_secret to
   generate the SRTP keys.

   These applications imply a need to be able to export keying material
   (later called Exported Keying Material or EKM) from TLS/DTLS, and
   securely agree on the upper-layer context where the keying material
   will be used.  The mechanism for exporting the keying material has
   the following requirements:

   o  Both client and server need to be able to export the same EKM
      value.
   o  EKM values should be indistinguishable from random by attackers
      who don't know the master_secret.
   o  It should be possible to export multiple EKM values from the same
      TLS/DTLS association.
   o  Knowing one EKM value should not reveal any information about the
      master_secret or about other EKM values.

   The mechanism described in this document is intended to fulfill these
   requirements.


2.  Conventions Used In This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].


3.  Binding to Application Contexts

   In addition to exporting keying material, an application using the
   keying material has to securely establish the upper-layer context
   where the keying material will be used.  The details of this context
   depend on the application, but it could include things such as
   algorithms and parameters that will be used with the keys,
   identifier(s) for the endpoint(s) who will use the keys,



Rescorla                Expires September 8, 2009               [Page 3]

Internet-Draft                TLS Exporters                   March 2009


   identifier(s) for the session(s) where the keys will be used, and the
   lifetime(s) for the context and/or keys.  At minimum, there should be
   some mechanism for signalling that an exporter will be used.

   This specification does not mandate a single mechanism for agreeing
   on such context; instead, there are several possibilities that can be
   used (and can complement each other).  For example:

   o  One important part of the context -- which application will use
      the exported keys -- is given by the disambiguating label string
      (see Section 4).
   o  Information about the upper-layer context can be included in the
      optional data after the exporter label (see Section 4).
   o  Information about the upper-layer context can be exchanged in TLS
      extensions included in the ClientHello and ServerHello messages.
      This approach is used in [DTLS-SRTP].  The handshake messages are
      protected by the Finished messages, so once the handshake
      completes, the peers will have the same view of the information.
      Extensions also allow a limited form of negotiation:  for example,
      the TLS client could propose several alternatives for some context
      parameters, and the TLS server could select one of them.
   o  The upper-layer protocol can include its own handshake which can
      be protected using the keys exported from TLS.

   It is important to note that just embedding TLS messages in the
   upper-layer protocol may not automatically secure all the important
   context information, since the upper-layer messages are not covered
   by TLS Finished messages.


4.  Exporter Definition

   The output of the exporter is intended to be used in a single scope,
   which is associated with the TLS session, the label, and the context
   value.

   o  A disambiguating label string
   o  A per-association context value provided by the application using
      the exporter
   o  A length value

   It then computes:


          PRF(SecurityParameters.master_secret, label,
              SecurityParameters.client_random +
              SecurityParameters.server_random +
              context_value_length + context_value



Rescorla                Expires September 8, 2009               [Page 4]

Internet-Draft                TLS Exporters                   March 2009


              )[length]

   Where PRF is the TLS PRF in use for the session.  The output is a
   pseudorandom bit string of length bytes generated from the
   master_secret.

   Labels here have the same definition as in TLS, i.e., an ASCII string
   with no terminating NULL.  Label values beginning with "EXPERIMENTAL"
   MAY be used for private use without registration.  All other label
   values MUST be registered via Specification Required as described by
   RFC 5226 [RFC5226].  Note that exporter labels have the potential to
   collide with existing PRF labels.  In order to prevent this, labels
   SHOULD begin with "EXPORTER".  This is not a MUST because there are
   existing uses which have labels which do not begin with this prefix.

           opaque context<0..2^16-1>;


   The context value allows the application using the exporter to mix
   its own data with the TLS PRF for the exporter output.  One example
   of where this might be useful is an authentication setting where the
   client credentials are valid for more than one identity; the context
   value could then be used to mix the expected identity into the keying
   material, thus preventing substitution attacks.  The context value
   length is encoded as an unsigned 16-bit quantity (uint16)
   representing the length of the context value.  The context MAY be
   zero length.


5.  Security Considerations

   The prime security requirement for exporter outputs is that they be
   independent.  More formally, after a particular TLS session, if an
   adversary is allowed to choose multiple (label, context value) pairs
   and is given the output of the PRF for those values, the attacker is
   still unable to distinguish between the output of the PRF for a
   (label, context value) pair (different from the ones that it
   submitted) and a random value of the same length.  In particular,
   there may be settings, such as the one described in Section 4, where
   the attacker can control the context value; such an attacker MUST not
   be able to predict the output of the exporter.  Similarly, an
   attacker who does not know the master secret should not be able to
   distinguish valid exporter outputs from random values.  The current
   set of TLS PRFs is believed to meet this objective, provided the
   master secret is randomly generated.

   Because an exporter produces the same value if applied twice with the
   same label to the same master_secret, it is critical that two EKM



Rescorla                Expires September 8, 2009               [Page 5]

Internet-Draft                TLS Exporters                   March 2009


   values generated with the same label not be used for two different
   purposes--hence the requirement for IANA registration.  However,
   because exporters depend on the TLS PRF, it is not a threat to the
   use of an EKM value generated from one label to reveal an EKM value
   generated from another label.


6.  IANA Considerations

   IANA is requested to create (has created) a TLS Exporter Label
   registry for this purpose.  The initial contents of the registry are
   given below:

      Value                          Reference
      -----                          ------------
      client finished                [RFC5246]
      server finished                [RFC5246]
      master secret                  [RFC5246]
      key expansion                  [RFC5246]
      client EAP encryption          [RFC2716]
      ttls keying material           [RFC5281]
      ttls challenge                 [RFC5281]

   Future values are allocated via RFC5226 Specification Required
   policy.  The label is a string consisting of printable ASCII
   characters.  IANA MUST also verify that one label is not a prefix of
   any other label.  For example, labels "key" or "master secretary" are
   forbidden.


7.  Acknowledgments

   Thanks to Pasi Eronen for valuable comments and the contents of the
   IANA section and Section 3.  Thanks to David McGrew for helpful
   discussion of the security considerations and Alfred Hoenes for
   editorial comments.


8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC5226]  Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", BCP 26, RFC 5226,
              May 2008.



Rescorla                Expires September 8, 2009               [Page 6]

Internet-Draft                TLS Exporters                   March 2009


   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246, August 2008.

   [RFC5281]  Funk, P. and S. Blake-Wilson, "Extensible Authentication
              Protocol Tunneled Transport Layer Security Authenticated
              Protocol Version 0 (EAP-TTLSv0)", RFC 5281, August 2008.

8.2.  Informational References

   [RFC3711]  Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.
              Norrman, "The Secure Real-time Transport Protocol (SRTP)",
              RFC 3711, March 2004.

   [RFC4347]  Rescorla, E. and N. Modadugu, "Datagram Transport Layer
              Security", RFC 4347, April 2006.

   [I-D.ietf-avt-dtls-srtp]
              McGrew, D. and E. Rescorla, "Datagram Transport Layer
              Security (DTLS) Extension to Establish Keys for  Secure
              Real-time Transport Protocol (SRTP)",
              draft-ietf-avt-dtls-srtp-07 (work in progress),
              February 2009.


Author's Address

   Eric Rescorla
   RTFM, Inc.
   2064 Edgewood Drive
   Palo Alto, CA  94303
   USA

   Email:  ekr@rtfm.com


















Rescorla                Expires September 8, 2009               [Page 7]

