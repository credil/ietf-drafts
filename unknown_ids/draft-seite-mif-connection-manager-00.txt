


Network Working Group                                           P. Seite
Internet-Draft                                   France Telecom - Orange
Intended status: Informational                                  G. Feige
Expires: January 6, 2011                                           Cisco
                                                            July 5, 2010


                    Connection Manager requirements
               draft-seite-mif-connection-manager-00.txt

Abstract

   It is a common practice for multiple interfaces terminals to leverage
   on a connection manager to perform provisioning domain selection.
   Problem statement document highlighted that lack of standardized
   behavior for connection managers can bring specific issues in a MIF
   context.  To address this issue, this document proposes a set of
   functional requirements for a generic MIF connection manager.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on January 6, 2011.

Copyright Notice

   Copyright (c) 2010 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of



Seite & Feige            Expires January 6, 2011                [Page 1]

Internet-Draft       Connection Manager requirements           July 2010


   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Use-cases  . . . . . . . . . . . . . . . . . . . . . . . . . .  3
     2.1.  Provisioning domain selection  . . . . . . . . . . . . . .  3
     2.2.  Reselection  . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  MIF Connection manager requirement . . . . . . . . . . . . . .  5
     3.1.  Functional architecture  . . . . . . . . . . . . . . . . .  5
     3.2.  Interfaces . . . . . . . . . . . . . . . . . . . . . . . .  6
       3.2.1.  Network SAP  . . . . . . . . . . . . . . . . . . . . .  6
       3.2.2.  User SAP . . . . . . . . . . . . . . . . . . . . . . .  7
       3.2.3.  Operator SAP . . . . . . . . . . . . . . . . . . . . .  7
       3.2.4.  Cloud SAP  . . . . . . . . . . . . . . . . . . . . . .  8
       3.2.5.  OS SAP . . . . . . . . . . . . . . . . . . . . . . . .  8
       3.2.6.  Execution SAP  . . . . . . . . . . . . . . . . . . . .  8
       3.2.7.  Application  SAP . . . . . . . . . . . . . . . . . . .  9
       3.2.8.  Authentication SAP . . . . . . . . . . . . . . . . . .  9
     3.3.  Functions of the connection manager  . . . . . . . . . . . 10
       3.3.1.  Initiation . . . . . . . . . . . . . . . . . . . . . . 10
       3.3.2.  Decision . . . . . . . . . . . . . . . . . . . . . . . 10
       3.3.3.  Execution function . . . . . . . . . . . . . . . . . . 11
         3.3.3.1.  IP connectivity check  . . . . . . . . . . . . . . 12
         3.3.3.2.  IP address and interface mapping . . . . . . . . . 13
         3.3.3.3.  IP flow mobility . . . . . . . . . . . . . . . . . 13
   4.  Security Considerations  . . . . . . . . . . . . . . . . . . . 15
   5.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 15
   6.  Contributors . . . . . . . . . . . . . . . . . . . . . . . . . 15
   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 15
     7.1.  Informative References . . . . . . . . . . . . . . . . . . 15
     7.2.  Informative References . . . . . . . . . . . . . . . . . . 15
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 16
















Seite & Feige            Expires January 6, 2011                [Page 2]

Internet-Draft       Connection Manager requirements           July 2010


1.  Introduction

   As shown in [I-D.ietf-mif-current-practices], it is a common practice
   for multiple interfaces terminals to leverage on a connection manager
   to perform provisioning domain selection.  The connection manager can
   make its decision on user preferences, applications inputs or many
   other criteria.  There are various ways to provide information to
   connection manager (static configuration, user provisionned, out-of-
   band mechanisms, etc) and a lot of possible strategies that a
   connection manager can implement to make a selection.  This variety
   of situations may lead to specific issues, as specified in
   [I-D.ietf-mif-problem-statement].  For instance, issues may rise up
   because connection managers does not behave in the same way depending
   on the operating systems and/or platforms.  High level API may also
   differ accross different operating systems and/or platforms.  It is
   also stressed that, implementation of different connection manager on
   a same node may lead to inconsistencies and unexpected behavior in
   interface selection.

   Obviously, more consistency in connection manager behavior and API
   specifications would be a must for applications developpers,
   operators, users, etc...  So, this document aims to address this
   issue by proposing functional requirements for a generic connection
   manager expected to be used by a MIF node.  This document proposes a
   functional architecture for the connection manager, describes
   interfaces and required functions.


2.  Use-cases

2.1.  Provisioning domain selection

   According to [I-D.ietf-mif-current-practices]; one of the basic
   operation of the connection manager is the selection of the
   provisioning domain.  This selection comes into play when the MIF
   host bootstraps, or when it discovers a new provisioning domain.  The
   selection could be based on various criteria, among them are:

   o  preferences provided by the user,
   o  policies provided by network operator,
   o  quality of the radio link,
   o  network resource considerations (i.e. available QoS, IP address
      families, IP connectivity check,...),
   o  Operating system hints (e.g. battery),
   o  and so on...

   In a MIF context, the Connection Manager must handle multiple domains
   simultaneously in particular for host supporting multiple access



Seite & Feige            Expires January 6, 2011                [Page 3]

Internet-Draft       Connection Manager requirements           July 2010


   technologies.  In this situation, when the user starts an
   application, the Connection Manager selects the best domain taking
   into account the application constraints besides aforementioned
   selection criteria.  Among these application constraints we can
   mention for example the access restriction for a given application or
   minimum required quality of service.  By default, the Connection
   Manager selects the provisioning domain provided by user and/or
   operator.  If the application is restricted to one provisioning
   domain, the application must start on it.  If the default
   provisioning domain is not available, the application cannot start.
   If the application can run over several provisioning domains, the
   Connection Manager selects the provisioning domain which provides the
   best quality and/or which satisfy the user preferences, operator
   policies, and service provider preferences, e.g. selection of the
   access with lower cost.

   If the user starts more than one application on a MIF host, the
   connection manager should be able to select for each application the
   most appropriate domain based on abovementioned criteria.

2.2.  Reselection

   Once attached, if quality of the link degrades and/or the link
   becomes unavailable and/or other domains with higher preferences
   become available, the Connection Manager should re-select, if
   possible, an alternative provisioning domain.

   If IP communiation is ongoing and if IP session continuity must be
   provided, the connection manager may trigger specific mobility
   management mechanisms (e.g. trigger MIPv6 signalling [RFC3775]) or
   associated configuration operations, e.g. configuration of a virtual
   interface for inter-access handover support with PMIPv6 (as proposed
   in [I-D.melia-netext-logical-interface-support]).

   Reselection may also happen foloowing an attachment failure (at Layer
   2 or 3).  For instance, the connection manager shouls select an
   alternative provisioning domain if:

   o  the host fails to get L2 attachment;
   o  the host has managed to get L2 attachment but fails to set up the
      IP connectivity (e.g. cannot obtained a valid IP address);
   o  the host has managed to get L2 attachment and IP connectivity, but
      it has no access to the services (see
      [I-D.ietf-mif-problem-statement] for details on MIF issues).







Seite & Feige            Expires January 6, 2011                [Page 4]

Internet-Draft       Connection Manager requirements           July 2010


3.  MIF Connection manager requirement

   This section describes the generic framework of a MIF connection
   connection manager.

3.1.  Functional architecture

   It can be deduced from the use-cases described in Section 2 that a
   connection manager should support at least three main functions:

   1.  initiation function: it monitors for events which possibly
       required connection management operations.  Events may be related
       to access link characteristics, application hints, user triggers,
       etc.  When detecting an event which may require multiple
       interfaces management operations (e.g. selection of a new
       provisioning domain), the initiation function triggers the
       decision function (see next item).
   2.  decision function: upon triggers and information fired by the
       initiation Function, the decision function makes decision about
       multiple interfaces management (e.g. select the best appropriate
       provisioning domain to be used, source address selection, ...).
       The decision is also made using local information (e.g. policies,
       user preferences) fetched from a local/remote repository.
   3.  execution function: once the decision made, the decision function
       triggers the execution if required, e.g. attachment to the
       targeted interface interface configuration, control of associated
       mechanisms for communication continuity if needed (e.g.
       configuration of a virtual interface, trigger mobile IP
       procedures, and so on,....).

   An example of a functional architecture of a Connection Manager is
   given on Figure 1.  The Connection Manager supports the functions
   described above and it implements interfaces with all the involved
   actors (e.g., user, application, operator,...) and with other
   functional modules on the terminal (i.e., access monitoring, mobility
   management protocol, etc.).  Interface endpoints on the connection
   manager side are called Service Access Points (SAPs).  The following
   will discuss needed SAPs in order to allow other functional modules
   to interact with the Connection Manager.












Seite & Feige            Expires January 6, 2011                [Page 5]

Internet-Draft       Connection Manager requirements           July 2010


       +------------+    +--------+    +------------+    +------------+
       |User Tools  |    | Appli. |    | policies   |    |Authent.    |
       |            |    |        |    | server     |    | Framework  |
       +-----x------+    +---x----+    +------x-----+    +-----x------+
             |               |                |                |
        _____x____       ____x_____      _____x______    ______x___
    __ / user SAP \____ / Appli SAP\___ / Oper/cloud \__/ Auth. SAP\_
   |   \__________/     \__________/    \____________/  \__________/  |
   |                                                                  |
   |   Connection Manager                                             |
   |                                                                  |
   |          +------------+  get info     +------------+             |
   |          | Decision   | ------------->| Repository |             |
   |          |            | <------------ |            |             |
   |          +------------+  send info    +------------+             |
   |   __________       __________        __________      ________    |
   |_ / 3GPP SAP \____ / Exec. SAP\_____ /WiFi SAP  \____/OS SAP  \___|
      \__________/     \__________/      \__________/    \________/
           x                x                    x           x
           |   +------------x-----------------+  |           |
           |   |  virtual Intf,               |  |     +---- x------+
           |   |  MIP stack, IP stack         |  |     |    OS      |
           |   +------------------------------+  |     +------------+
      +--- x-------+                       +-----x------+
      |3GPP Intf.  |                       |WiFi Intf.  |
      |            |                       |            |
      +------------+                       +------------+



      Figure 1: A functional architecture for the connection manager

3.2.  Interfaces

   This section focuses on the interfaces endpoints on the connection
   manager side.  It is reminded that interface endpoints on the
   connection manager side are called Service Access Points (SAPs).

3.2.1.  Network SAP

   The Network SAP relates to features directly integrated with the link
   layer access technologies and one specific network interface.  Fon
   instanceThe Network SAP should provide the following capabilities:

   o  Switching ON/OFF a specific network interface.
   o  Requesting an active network scan.





Seite & Feige            Expires January 6, 2011                [Page 6]

Internet-Draft       Connection Manager requirements           July 2010


   o  Switching on/off a passive network scan (e.g. a scan which does
      not disturb current traffic flows).
   o  An early link loss detection trigger ( e.g. link going down).
      This should be based on local algorithms implemented within the
      monitoring feature of the interfaces.  The Network SAP should have
      the capability to activate a specific supported alogrythm as such
      a early link loss detection will vary according to other
      parameters such as the speed of the UE, the neighboring
      environment of the same technology.
   o  A link lost trigger ( e.g. link down ).
   o  A Link handover trigger (disconnect and reconnect to the same
      network), this is used currently to verify the IP properties of
      the newly attached base station.
   o  List of neighboring base stations of the same technology and if
      possible of any technology.
   o  QOS: Interface queue packet loss.
   o  Information brought by Layer 2 (e.g. 3GPP ANDSF [TS23.402], IEEE
      802.21 [802.21]).
   o  Access to information about the connected network provided y
      mechanisms such as 802.11u.

3.2.2.  User SAP

   The User SAP should allow the user to give his preferences expected
   to influence the interface management, e.g. modification of the
   application profiles, preferred provisioning domain per application,
   and so on...  These preferences are stored by the connection manager
   in a local repository.

3.2.3.  Operator SAP

   The Operator SAP provides services between the client and an operator
   which could be either the network operator of any service operator
   over the top.  These services are not integrated within the link
   layer protocols.  If they were these SAP primitives would then be
   migrated to the Network SAP.  The Operator SAP should provide the
   following capabilities:

   o  Neighboring information on networks (e.g. 802.21 MIH server
      ([802.21]) or 3GPP ANDSF ([TS23.402]).  Query of neighboring
      environment (e.g. list of neighbor networks).  This could be under
      a map format.  This can also be achieved depending on network
      capabilities by the Network SAP.
   o  Policy interface for allowing the network to push connection
      policies and flow mobility policies.  These policies could be one
      time policies with immediate effect if the network operator wants
      to change the behaviour of the client at once point in time.
      These policies should only be accepted if the client has agreed to



Seite & Feige            Expires January 6, 2011                [Page 7]

Internet-Draft       Connection Manager requirements           July 2010


      such behaviour and not set an override policy with higher
      priority.

3.2.4.  Cloud SAP

   The cloud SAP is the operator SAP dedicated to Over The Top service
   provider.  Obviously, this SAP is very similar to the operator SAP,
   the interface between MIF host and server uses same mechanisms than
   operator SAP.  But, in this case, services may be specific to OTT
   operator.  More specifically:

   o  The Cloud SAP should allow cloud services to request sensor
      information from the client device.
   o  The Cloud SAP should allow a client to send sensor information to
      a cloud server( e.g. location and speed, temperature, humidity,
      available networks and their measured quality, ...).
   o  The cloud SAP could exchange information with Over-the-top
      services (e.g. geolocation).

3.2.5.  OS SAP

   The OS SAP makes interface with terminal Operating system.  This SAP
   could provide the following capabilities:

   o  Notification of IP address network assignment and notification of
      any extra information about this IP address such as the scope of
      an address (locally serviced or anchor based in case the network
      was performing PMIP services).  Typically, these information are
      needed for the control of virtual interfaces and source address
      selection mechanisms.
   o  Notification of DHCP events such as IP address assignment, DHCP
      options such as ANDSF extensions
      ([I-D.das-mipshop-andsf-dhcp-options]).
   o  Power consumption triggers / queries.
   o  Energy status triggers / queries.

3.2.6.  Execution SAP

   The execution SAP allows to command actions on connectivity layers
   (e.g., IP configuration, trigger IP session continuity management
   protocols).  The Execution SAP is tightly integrated with OS features
   and capabilities.  The Execution SAP should provide the following
   capabilities:

   o  Provisioning of static IP addresses.
   o  Generation of automatic WEB Auth methods and insertion into the
      routing table of the default route once authentication successful.




Seite & Feige            Expires January 6, 2011                [Page 8]

Internet-Draft       Connection Manager requirements           July 2010


   o  DHCP state machine control :
      *  let DHCP know it must wait for default route into routing table
         insertion.
      *  IP address request on demand, in particular for IPv4 addresses.
   o  Control of OS virtual interfaces and binding (bridge or routed
      mode ) to physical interface.

3.2.7.  Application  SAP

   The Application SAP allows to exchange application triggers (e.g.
   application start/stop, notification for QoS requirements) and to
   provide notification of selection decision from the connection
   manager towards applications (i.e., to let the applications change
   their behavior if it is appropriate).  Typically, the Application SAP
   should:

   o  allow applications to register with the Connection Manager for
      receiving notifications of other SAP interfaces.  The Connection
      Management behaves as a message routing entity in this case with
      rules and filters.  As an example in session persistency an
      application may want to know of a "link going down event" in order
      to anticipate any changes required rather than reacting to a "link
      down" event.
   o  allow applications a feedback mechanism into the Connection
      Manager for giving real time updates on the QOS observed.
   o  Allow applications to query the identity store function within the
      Connection manager and retrieve authentication methods.
   o  Allows some application to provide specific information to feed
      the decision function(e.g.  GPS positioning or velocity).
   o  UE built in sensors listing and query/trigger of supported
      options.

   it is worth mentioning that the data traffic is exchanged directly
   between the applications and the transport/IP layers, through the
   standard socket, i.e. without traversing the Connection Manager.

3.2.8.  Authentication SAP

   The Authentication SAP provides access to all supported
   authentication protocols in a shared fashion for all interfaces.  For
   instance, these protocols may include:

   o  802.1x
   o  EAP frameworks
   o  WEB based mechanism such as WISPR 1.0 and WISPR 2.0, IPASS, ...

   In addition to network authentication solutions, the Authentication
   SAP can provide shared mechanisms for applications to use Single-



Seite & Feige            Expires January 6, 2011                [Page 9]

Internet-Draft       Connection Manager requirements           July 2010


   Sign-On solutions such as Open ID, HTTP digest or any other proposal.

3.3.  Functions of the connection manager

3.3.1.  Initiation

   According to Section 3.1 The decision is made on triggers and the
   parameters provided by the initiation function.  This function should
   manage, at least, the following triggers:

   o  Access link triggers (via Network SAP): used to compute network
      triggers like "access link is going down", "discover a new access
      link", etc.  This module is likely to implement a technology
      dependant interface towards the network specific layers in order
      to get e.g., radio/QoS measurements.
   o  Application triggers (via Application SAP): application starting
      or closing should trigger the decision process to select the most
      appropriate provisioning domain.
   o  User/Operator hints (via User/Cloud/Operator SAPs): these hints
      may be modification of preferences, operator policies, manual
      selection, etc....

3.3.2.  Decision

   The decision function is the core of the connection manager, it
   consists in two main functional blocks:

   o  Decision Algorithm: when triggered by a given event (e.g..,
      network, user/operator, or applicative), this module selects the
      data path (e.g. provisioning domain, source address, ...). the
      Decision Algorithm consults, if necessary the local policies from
      the repository, and then it makes decision which is transmitted to
      the execution function.
   o  Repository: this functions stores static inputs for the decision-
      making process that will be used to feed the selection algorithm .
      For instance, such information can be related to user's
      preferences, operator's policies or application profiles (storing
      application needs, in term of QoS, and per application preferences
      for access).  These information could be provisioned to the
      terminal via out-of-band mechanisms ( e.g., download of policies
      at bootstrapping via link layer mechanisms, during DHCP process
      [I-D.sarikaya-mif-dhcpv6solution] or via 3GPP ANDSF ([TS23.402])).
      Information could be also provisioned through dedicated
      application, for instance allowing the user to indicate its
      preferences (e.g. manage its list of preferred access network).

   There are plenty of criteria which could be used to make a decision.
   For instance, the following criteria could be considered:



Seite & Feige            Expires January 6, 2011               [Page 10]

Internet-Draft       Connection Manager requirements           July 2010


   o  User Profile (user's rights in terms of QoS, roaming partners
      allowed, etc...).
   o  User/Operator ordered list of preferred Wi-Fi networks.
   o  Access preference based on application type and destination, e.g.
      IPTV is preferred on WLAN when available.
   o  Link Quality: signal strength (assuming radio link), QoS
      (throughput, packet loss, delay,...).
   o  Application QoS requirements: throughput required per application
      type/class, maximum accepted packet loss.
   o  source address selection policy, i.e. the connection manager may
      want to use such interface if IPv6 is available then select the
      source address (e.g. use Global address for Internet destination
      and LLA for on-net services).

3.3.3.  Execution function

   After making a decision, the decision function triggers the
   execution, e.g. operation for attachment to a new interface, IP
   connectivity check, source address selection, trigger other virtual
   interface like tunnel interface (e.g.  IPSEC) or steer the mobility
   protocol e.g.  MIPv6 ([RFC3775]), if IP session continuity must be
   ensured.  Figure 2 shows interaction between functions of the generic
   MIF connection manager.




























Seite & Feige            Expires January 6, 2011               [Page 11]

Internet-Draft       Connection Manager requirements           July 2010


     +-----------------+     +-----------------+
     |Event Monitoring |     |policies, address|
     |(e.g. monitoring |     |selection policy,|
     |  access link)   |     |preferences,...  |
     +-----------------+     +-----------------+
           ||                        ||                 ,---------.
           ||                        ||              ,-'           `-.
           \/                        \/             |  Execution      |
        ,---------.              ,---------.        |  (connectivity  |
     ,-'           `-.        ,-'           `-.     |   check,        |
    (    Initiation  |------>(   Decision      )--->|   interface     |
     `-.           ,-'        `-.           ,-'     |   control,      |
        `---------'              `---------'        |   Handover      |
          ^  ^                         | ^          |   management,.. ,
          |  |         fail            | |           `---------------'
          |  +------(e.g. no access<---+ |                      |  |
          |          available)          |                      |  |
          |                              +-- reselection    <---+  |
          |                                due to execution        |
          |                                failure                 |
          |                                                        |
          +---------------- execution completed  <-----------------+


               Figure 2: State machine of connection manager

3.3.3.1.  IP connectivity check

   This sub-function of the execution deals with IP connectivity
   verification (via OS SAP): this function triggers reselection in case
   of layer 3 failure, during attachment or when a handover happens, and
   that the layer 2 is still connected.

   Various situations may occur and various mechanisms are needed to
   ensure the IP connectivity can be used, for example:

   o  While a client moves from one 802.11 access point to another, both
      having the same SSID does not mean they are part of the same
      network.  Hence the client must verify its IP address parameters.
      In order to avoid a complete reconfiguration when not needed;
      initial checks can be performed.  Such mechansisms are arping of
      the default gateway or PING of that same default gateway.  If
      provisioning domain parameters, such as MAC address and IP, are
      similar then it can be expected the client is on the same network
      and this avoids a full IP renewal process.
   o  When a client associates to a network it may be required to
      authenticate over HTTP and would have limited connectivity
      initially.  Mechanisms are needed to check access to the



Seite & Feige            Expires January 6, 2011               [Page 12]

Internet-Draft       Connection Manager requirements           July 2010


      authentication web portal.
   o  The IP connnectivity can be limited if there is a high level of
      layer 2 errors.  When on the edge of a 802.11 cell, the radio
      paramters may be such that small IP packets would go through but
      higher MTU packets would not get through.  In this case a client
      may get an IP address but not be capable of further utilising it.
   o  The End to end IP connectivity could be disturbed.  A mechanism is
      needed which would also differentiate between no connectivity at
      all versus just some disturbed destinations only.

3.3.3.2.  IP address and interface mapping

   In a MIF context, the notion of path is indeed key as, even a single
   network interface could be providing multiple paths, e.g. in IPv6
   when delivering multiple prefixes.  For example, current IP mobility
   solutions use one IP address for local access and another for
   anchored traffic through a mobility anchor (i.e.  HA or LMA).
   Mechanism for selecting on or the other of these paths resides within
   source address selection rules associated with selection policies.

   Selection of a source address should at least rely on default address
   selection as per [RFC3484] which defines algorithms for source and
   destination IP address selections.  However, more sophisticated
   selection mechanism could also be provided by connection managers.
   Here, the connection manager will typically select the path (i.e.
   source address) based on local information (e.g. access monitoring)
   and policies/requirements issued from all actors coming to play
   (i.e., user, application, operator, etc.).  Once the decision is made
   (i.e. path selected), the execution function will configure, in a
   transparent manner for applications, the appropriate mapping of IP
   communication with selected local interface.

   Information on IP address type (e.g. local, global, assigned to a
   virtual interface, etc...) must be known by the connection manager as
   an input for address selection.  This information may be provided by
   specific extensions to IP address allocation mechanisms (e.g.  DHCP,
   IPCP, RA, or any other...).

3.3.3.3.  IP flow mobility

   Flow mobility realtes to the capability to move specific flows from
   one interface to another.  Specification of a network based solution
   is currently ongoing within NetExt working group.  Basically, Network
   based IP flow mobility is proposed to leverage on a virtual interface
   hiding the access change to application
   [I-D.melia-netext-logical-interface-support].  This approach results
   in a mobile node getting the same IP address on multiple interfaces
   in the case of IPv4 and the same prefix in the case of IPv6.  To



Seite & Feige            Expires January 6, 2011               [Page 13]

Internet-Draft       Connection Manager requirements           July 2010


   handle these situations, it is proposed that the mobile node should
   create a virtual interface to which an IP address would be allocated
   .  The connection manager can typically control the mapping of that
   virtual interface to the physical interface.

   Mechanism for selecting on or the other of the paths for each IP flow
   resides within source address selection rules associated with Flow
   Mobility policies.  The flow mobility policies have direct impact on
   the source address selection rules.  In the same manner than in the
   preceding section, the connection manager could handle the mapping of
   the physical interface to the virtual interface (including the
   selection of the source address) depending on the decision made.

   In this situation, the mapping control shall take into account the
   method used to learn the IP address, which can differ if:

   o  this IP is learned directly from the network with PMIP service, in
      which case the IP is on the physical interface and must be bridged
      onto the virtual interface.
   o  this IP is assigned to a tunnel originating from the virtual
      interface and bound to a physical interface getting an IP address
      allocation from a non PMIP enabled network.

   As in Section 3.3.3.2, information on IP address type (e.g. local,
   anchored, assigned to a virtual interface, etc...) must be known by
   the connection manager as an input for address selection.

   The following picture illustrates the relationship between the
   connection manager and the virtual interface.

                   +---------+ +---------+
                   | if_1    | | if_2    |
                   |(WLAN)   | |(3GPP)   |
                   +-.-------+-+-------.-+
                     _|_ |  Virtual  | _|_ IF/CM interface
                      |  | Interface |  |
                    +-'-----------------'-|
                    |      Connection     |
                    |       Manager       |
                    +---------------------+
                    |         MN          |
                    +---------------------+


      Figure 3: Connection Manager and Virtual Interface relationship






Seite & Feige            Expires January 6, 2011               [Page 14]

Internet-Draft       Connection Manager requirements           July 2010


4.  Security Considerations

   TBD


5.  IANA Considerations

   This document has no actions for IANA.


6.  Contributors

   The following people contributed to this document:

      Lucian Suciu
      France telecom - Orange
      lucian.suciu@orange-ftfroup.com

      Patrice Nivagiolli
      Cisco
      pnivaggi@cisco.com


7.  References

7.1.  Informative References

   [RFC3484]  Draves, R., "Default Address Selection for Internet
              Protocol version 6 (IPv6)", RFC 3484, February 2003.

7.2.  Informative References

   [802.21]   IEEE, "IEEE Standard for Local and Metropolitan Area
              Networks - Part 21: Media Independent Handover Services",
              IEEE LAN/MAN Std 802.21-2008, January 2009.", 2010, <
              http://www.ieee802.org/21/private/Published%20Spec/
              802.21-2008.pdf>.

   [I-D.cao-mif-analysis]
              Laganier, J., Montenegro, G., Korhonen, J., Savolainen,
              T., and Z. Cao, "MIF Current Practice Analysis",
              draft-cao-mif-analysis-00 (work in progress), March 2010.

   [I-D.das-mipshop-andsf-dhcp-options]
              Das, S. and G. Bajko, "Dynamic Host Configuration Protocol
              (DHCPv4 and DHCPv6) Options for Access Network Discovery
              and Selection Function(ANDSF) Discovery",
              draft-das-mipshop-andsf-dhcp-options-03 (work in



Seite & Feige            Expires January 6, 2011               [Page 15]

Internet-Draft       Connection Manager requirements           July 2010


              progress), February 2010.

   [I-D.ietf-mif-current-practices]
              Wasserman, M. and P. Seite, "Current Practices for
              Multiple Interface Hosts",
              draft-ietf-mif-current-practices-02 (work in progress),
              June 2010.

   [I-D.ietf-mif-problem-statement]
              Blanchet, M. and P. Seite, "Multiple Interfaces Problem
              Statement", draft-ietf-mif-problem-statement-04 (work in
              progress), May 2010.

   [I-D.melia-netext-logical-interface-support]
              Melia, T., Gundavelli, S., Yokota, H., and C. Bernardos,
              "Logical Interface Support for multi-mode IP Hosts",
              draft-melia-netext-logical-interface-support-01 (work in
              progress), July 2010.

   [I-D.sarikaya-mif-dhcpv6solution]
              Sarikaya, B., Xia, F., and P. Seite, "DHCPv6 Extension for
              Configuring Hosts with Multiple Interfaces",
              draft-sarikaya-mif-dhcpv6solution-04 (work in progress),
              July 2010.

   [RFC3775]  Johnson, D., Perkins, C., and J. Arkko, "Mobility Support
              in IPv6", RFC 3775, June 2004.

   [RFC5213]  Gundavelli, S., Leung, K., Devarapalli, V., Chowdhury, K.,
              and B. Patil, "Proxy Mobile IPv6", RFC 5213, August 2008.

   [TS23.402]
              3GPP, "3GPP TS 23.402; Architecture enhancements for non-
              3GPP accesses", 2010.


Authors' Addresses

   Pierrick Seite
   France Telecom - Orange
   4, rue du Clos Courtel, BP 91226
   Cesson-Sevigne  35512
   France

   Email: pierrick.seite@orange-ftgroup.com






Seite & Feige            Expires January 6, 2011               [Page 16]

Internet-Draft       Connection Manager requirements           July 2010


   Gaetan Feige
   Cisco
   11 rue Camille Desmoulin
   Issy les Moulineaux  92782
   France

   Email: gfeige@cisco.com












































Seite & Feige            Expires January 6, 2011               [Page 17]


