


Network Working Group                                       S. Perreault
Internet-Draft                                                  Viagenie
Obsoletes: 2425, 2426, 4770                                   P. Resnick
(if approved)                                      QUALCOMM Incorporated
Updates: 2739 (if approved)                                June 25, 2008
Intended status: Standards Track
Expires: December 27, 2008


                       vCard Format Specification
                    draft-ietf-vcarddav-vcardrev-02

Status of This Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on December 27, 2008.

Copyright Notice

   Copyright (C) The IETF Trust (2008).

Abstract

   This document defines the vCard data format for representing and
   exchanging a variety of information about an individual (e.g.,
   formatted and structured name and delivery addresses, email address,
   multiple telephone numbers, photograph, logo, audio clips, etc.).




Perreault & Resnick     Expires December 27, 2008               [Page 1]

Internet-Draft                    vCard                        June 2008


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  5
   2.  Conventions  . . . . . . . . . . . . . . . . . . . . . . . . .  5
   3.  MIME Type Registration . . . . . . . . . . . . . . . . . . . .  5
   4.  vCard Format Specification . . . . . . . . . . . . . . . . . .  6
     4.1.  Line Delimiting and Folding  . . . . . . . . . . . . . . .  7
     4.2.  ABNF Format Definition . . . . . . . . . . . . . . . . . .  8
   5.  Property Value Data Types  . . . . . . . . . . . . . . . . . . 10
     5.1.  TEXT . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
     5.2.  URI  . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
     5.3.  DATE, TIME, and DATE-TIME  . . . . . . . . . . . . . . . . 13
     5.4.  BOOLEAN  . . . . . . . . . . . . . . . . . . . . . . . . . 13
     5.5.  INTEGER  . . . . . . . . . . . . . . . . . . . . . . . . . 14
     5.6.  FLOAT  . . . . . . . . . . . . . . . . . . . . . . . . . . 14
     5.7.  BINARY . . . . . . . . . . . . . . . . . . . . . . . . . . 14
     5.8.  UTC-OFFSET . . . . . . . . . . . . . . . . . . . . . . . . 14
   6.  Property Parameters  . . . . . . . . . . . . . . . . . . . . . 15
     6.1.  LANGUAGE . . . . . . . . . . . . . . . . . . . . . . . . . 16
     6.2.  ENCODING . . . . . . . . . . . . . . . . . . . . . . . . . 16
     6.3.  VALUE  . . . . . . . . . . . . . . . . . . . . . . . . . . 17
     6.4.  PID  . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
     6.5.  TYPE . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
   7.  vCard Properties . . . . . . . . . . . . . . . . . . . . . . . 18
     7.1.  General Properties . . . . . . . . . . . . . . . . . . . . 18
       7.1.1.  BEGIN  . . . . . . . . . . . . . . . . . . . . . . . . 18
       7.1.2.  END  . . . . . . . . . . . . . . . . . . . . . . . . . 18
       7.1.3.  SOURCE . . . . . . . . . . . . . . . . . . . . . . . . 19
       7.1.4.  NAME . . . . . . . . . . . . . . . . . . . . . . . . . 19
       7.1.5.  KIND . . . . . . . . . . . . . . . . . . . . . . . . . 20
     7.2.  Identification Properties  . . . . . . . . . . . . . . . . 21
       7.2.1.  FN . . . . . . . . . . . . . . . . . . . . . . . . . . 21
       7.2.2.  N  . . . . . . . . . . . . . . . . . . . . . . . . . . 21
       7.2.3.  NICKNAME . . . . . . . . . . . . . . . . . . . . . . . 22
       7.2.4.  PHOTO  . . . . . . . . . . . . . . . . . . . . . . . . 22
       7.2.5.  BDAY . . . . . . . . . . . . . . . . . . . . . . . . . 23
       7.2.6.  DDAY . . . . . . . . . . . . . . . . . . . . . . . . . 23
       7.2.7.  BIRTH  . . . . . . . . . . . . . . . . . . . . . . . . 23
       7.2.8.  DEATH  . . . . . . . . . . . . . . . . . . . . . . . . 23
       7.2.9.  GENDER . . . . . . . . . . . . . . . . . . . . . . . . 24
     7.3.  Delivery Addressing Properties . . . . . . . . . . . . . . 24
       7.3.1.  ADR  . . . . . . . . . . . . . . . . . . . . . . . . . 24
       7.3.2.  LABEL  . . . . . . . . . . . . . . . . . . . . . . . . 25
     7.4.  Communications Properties  . . . . . . . . . . . . . . . . 25
       7.4.1.  TEL  . . . . . . . . . . . . . . . . . . . . . . . . . 25
       7.4.2.  EMAIL  . . . . . . . . . . . . . . . . . . . . . . . . 26
       7.4.3.  IMPP . . . . . . . . . . . . . . . . . . . . . . . . . 27
       7.4.4.  LANG . . . . . . . . . . . . . . . . . . . . . . . . . 27



Perreault & Resnick     Expires December 27, 2008               [Page 2]

Internet-Draft                    vCard                        June 2008


     7.5.  Geographical Properties  . . . . . . . . . . . . . . . . . 28
       7.5.1.  TZ . . . . . . . . . . . . . . . . . . . . . . . . . . 28
       7.5.2.  GEO  . . . . . . . . . . . . . . . . . . . . . . . . . 28
     7.6.  Organizational Properties  . . . . . . . . . . . . . . . . 29
       7.6.1.  TITLE  . . . . . . . . . . . . . . . . . . . . . . . . 29
       7.6.2.  ROLE . . . . . . . . . . . . . . . . . . . . . . . . . 29
       7.6.3.  LOGO . . . . . . . . . . . . . . . . . . . . . . . . . 30
       7.6.4.  AGENT  . . . . . . . . . . . . . . . . . . . . . . . . 30
       7.6.5.  ORG  . . . . . . . . . . . . . . . . . . . . . . . . . 31
       7.6.6.  MEMBER . . . . . . . . . . . . . . . . . . . . . . . . 31
       7.6.7.  RELATED  . . . . . . . . . . . . . . . . . . . . . . . 32
     7.7.  Explanatory Properties . . . . . . . . . . . . . . . . . . 33
       7.7.1.  CATEGORIES . . . . . . . . . . . . . . . . . . . . . . 33
       7.7.2.  NOTE . . . . . . . . . . . . . . . . . . . . . . . . . 33
       7.7.3.  PRODID . . . . . . . . . . . . . . . . . . . . . . . . 34
       7.7.4.  REV  . . . . . . . . . . . . . . . . . . . . . . . . . 34
       7.7.5.  SORT-STRING  . . . . . . . . . . . . . . . . . . . . . 34
       7.7.6.  SOUND  . . . . . . . . . . . . . . . . . . . . . . . . 35
       7.7.7.  UID  . . . . . . . . . . . . . . . . . . . . . . . . . 36
       7.7.8.  URL  . . . . . . . . . . . . . . . . . . . . . . . . . 36
       7.7.9.  VERSION  . . . . . . . . . . . . . . . . . . . . . . . 36
     7.8.  Security Properties  . . . . . . . . . . . . . . . . . . . 37
       7.8.1.  CLASS  . . . . . . . . . . . . . . . . . . . . . . . . 37
       7.8.2.  KEY  . . . . . . . . . . . . . . . . . . . . . . . . . 37
     7.9.  Calendar Properties  . . . . . . . . . . . . . . . . . . . 38
       7.9.1.  FBURL  . . . . . . . . . . . . . . . . . . . . . . . . 38
       7.9.2.  CALADRURI  . . . . . . . . . . . . . . . . . . . . . . 39
       7.9.3.  CALURI . . . . . . . . . . . . . . . . . . . . . . . . 39
     7.10. Extended Properties and Parameters . . . . . . . . . . . . 39
   8.  Synchronization  . . . . . . . . . . . . . . . . . . . . . . . 39
     8.1.  Mechanisms . . . . . . . . . . . . . . . . . . . . . . . . 40
     8.2.  Example  . . . . . . . . . . . . . . . . . . . . . . . . . 40
   9.  Formal Grammar . . . . . . . . . . . . . . . . . . . . . . . . 41
   10. Example: Authors' vCards . . . . . . . . . . . . . . . . . . . 50
   11. Security Considerations  . . . . . . . . . . . . . . . . . . . 50
   12. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 51
     12.1. Registering New vCard Elements . . . . . . . . . . . . . . 51
       12.1.1. Registration Procedure . . . . . . . . . . . . . . . . 51
       12.1.2. Vendor Namespace . . . . . . . . . . . . . . . . . . . 52
       12.1.3. Registration Template for Properties . . . . . . . . . 52
       12.1.4. Registration Template for Parameters . . . . . . . . . 53
       12.1.5. Registration Template for Value Data Types . . . . . . 53
       12.1.6. Registration Template for Values . . . . . . . . . . . 54
     12.2. Initial vCard Elements Registries  . . . . . . . . . . . . 54
       12.2.1. Properties Registry  . . . . . . . . . . . . . . . . . 54
       12.2.2. Parameters Registry  . . . . . . . . . . . . . . . . . 56
       12.2.3. Value Data Types Registry  . . . . . . . . . . . . . . 56
   13. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 56



Perreault & Resnick     Expires December 27, 2008               [Page 3]

Internet-Draft                    vCard                        June 2008


   14. References . . . . . . . . . . . . . . . . . . . . . . . . . . 57
     14.1. Normative References . . . . . . . . . . . . . . . . . . . 57
     14.2. Informative References . . . . . . . . . . . . . . . . . . 59
   Appendix A.  Differences from RFCs 2425 and 2426 . . . . . . . . . 59
     A.1.  New Structure  . . . . . . . . . . . . . . . . . . . . . . 59
     A.2.  Removed Features . . . . . . . . . . . . . . . . . . . . . 60
     A.3.  New Properties and Parameters  . . . . . . . . . . . . . . 60
     A.4.  Other Changes  . . . . . . . . . . . . . . . . . . . . . . 60
   Appendix B.  Change Log (to be removed by RFC Editor prior to
                publication)  . . . . . . . . . . . . . . . . . . . . 60
     B.1.  Changes in -02 . . . . . . . . . . . . . . . . . . . . . . 60
     B.2.  Changes in -01 . . . . . . . . . . . . . . . . . . . . . . 61
     B.3.  Changes in -00 . . . . . . . . . . . . . . . . . . . . . . 62






































Perreault & Resnick     Expires December 27, 2008               [Page 4]

Internet-Draft                    vCard                        June 2008


1.  Introduction

   Note: This draft contains much of the same text as 2425 and 2426
   which may not be correct.  Those two RFCs have been merged and the
   structure of this draft is what's new.  Some vCard-specific
   suggestions have been added, but for the most part this is still very
   open.  But we'd like to get feedback on the structure mostly so that
   it may be fixed.

   Electronic address books have become ubiquitous.  Their increased
   presense on portable, connected devices as well as the diversity of
   platforms exchanging contact data call for a standard.  This memo
   defines the vCard format, which allows the capture and exchange of
   information normally stored within an address book or directory
   application.

2.  Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  MIME Type Registration

   To:  ietf-types@iana.org

   Subject:  Registration of media type text/vcard

   Type name:  text

   Subtype name:  vcard

   Required parameters:  none

   Optional parameters:  charset

   Encoding considerations:  The "charset" MIME parameter is interpreted
      as defined in [RFC2046], section 4.1.2.  If it is omitted, the
      default encoding is UTF-8 as defined in [RFC3629].

   Security considerations:  See Section 11.

   Interoperability considerations:  The text/vcard media type is
      intended to identify vCard data of any version.  There are older
      specifications of vCard [RFC2426][oldreference_VCARD] still in
      common use.  While these formats are similar, they are not
      strictly compatible.  In general, it is necessary to inspect the
      value of the VERSION property (see Section 7.7.9) for identifying



Perreault & Resnick     Expires December 27, 2008               [Page 5]

Internet-Draft                    vCard                        June 2008


      the standard to which a given vCard object conforms.

      In addition, the following media types are known to have been used
      to refer to vCard data.  They should be considered deprecated in
      favor of text/vcard.

      *  text/directory

      *  text/directory; type=vcard

      *  text/x-vcard

   Published specification:  draft-ietf-vcarddav-vcardrev-02

   Applications that use this media type:  They are numerous, diverse,
      and include mail user agents, instant messaging clients, address
      book applications, directory servers, customer relationship
      management software, etc.

   Additional information:

      Magic number(s):

      File extension(s):  .vcf

      Macintosh file type code(s):

   Person & email address to contact for further information:  Simon
      Perreault <simon.perreault@viagenie.ca>

   Intended usage:  COMMON

   Restrictions on usage:  none

   Author:  Simon Perreault and Pete Resnick

   Change controller:  IETF

4.  vCard Format Specification

   The text/vcard MIME content type (hereafter known as "vCard")
   contains contact information, typically pertaining to a single
   contact or group of contacts.  The content consists of one or more
   lines in the format given below.







Perreault & Resnick     Expires December 27, 2008               [Page 6]

Internet-Draft                    vCard                        June 2008


4.1.  Line Delimiting and Folding

   Individual lines within vCard are delimited by the [RFC2822] line
   break, which is a CRLF sequence (ASCII decimal 13, followed by ASCII
   decimal 10).  Long logical lines of text can be split into a
   multiple-physical-line representation using the following folding
   technique.  Content lines SHOULD be folded to a maximum width of 75
   octets.  Multi-octet characters MUST remain contiguous.  The
   rationale for this folding process can be found in [RFC2822], Section
   2.1.1.

   A logical line MAY be continued on the next physical line anywhere
   between two characters by inserting a CRLF immediately followed by a
   single white space character (space, ASCII decimal 32, or horizontal
   tab, ASCII decimal 9).  At least one character must be present on the
   folded line.  Any sequence of CRLF followed immediately by a single
   white space character is ignored (removed) when processing the
   content type.  For example the line:

     DESCRIPTION:This is a long description that exists on a long line.

   can be represented as:

     DESCRIPTION:This is a long description
      that exists on a long line.

   It could also be represented as:

     DESCRIPTION:This is a long descrip
      tion that exists o
      n a long line.

   The process of moving from this folded multiple-line representation
   of a property definition to its single line representation is called
   unfolding.  Unfolding is accomplished by regarding CRLF immediately
   followed by a white space character (namely HTAB ASCII decimal 9 or
   SPACE ASCII decimal 32) as equivalent to no characters at all (i.e.,
   the CRLF and single white space character are removed).

      Note: It is possible for very simple implementations to generate
      improperly folded lines in the middle of a UTF-8 multi-octet
      sequence.  For this reason, implementations SHOULD unfold lines in
      such a way as to properly restore the original sequence.

   Folding is done after any content encoding of a type value.
   Unfolding is done before any decoding of a type value in a content
   line.




Perreault & Resnick     Expires December 27, 2008               [Page 7]

Internet-Draft                    vCard                        June 2008


4.2.  ABNF Format Definition

   The following ABNF uses the notation of [RFC5234], which also defines
   CRLF, WSP, DQUOTE, VCHAR, ALPHA, and DIGIT.  After the unfolding of
   any folded lines as described above, the syntax for a line of this
   content type is as follows:













































Perreault & Resnick     Expires December 27, 2008               [Page 8]

Internet-Draft                    vCard                        June 2008


     contentline  = name *(";" param) ":" value CRLF
        ; When parsing a content line, folded lines MUST first
        ; be unfolded according to the unfolding procedure
        ; described above.
        ; When generating a content line, lines longer than 75
        ; characters SHOULD be folded according to the folding
        ; procedure described above.

     name         = x-name / iana-token

     iana-token   = 1*(ALPHA / DIGIT / "-")
        ; identifier registered with IANA

     x-name       = "x-" 1*(ALPHA / DIGIT / "-")
        ; Names that begin with "x-" or "X-" are
        ; reserved for experimental use, not intended for released
        ; products, or for use in bilateral agreements.

     param        = param-name "=" param-value *("," param-value)

     param-name   = x-name / iana-token

     param-value  = ptext / quoted-string

     ptext  = *SAFE-CHAR

     value = *VALUE-CHAR
           / valuespec      ; valuespec defined in section 5.8.4

     quoted-string = DQUOTE *QSAFE-CHAR DQUOTE

     NON-ASCII    = %x80-FF
        ; use restricted by charset parameter
        ; on outer MIME object (UTF-8 preferred)

     QSAFE-CHAR   = WSP / %x21 / %x23-7E / NON-ASCII
        ; Any character except CTLs, DQUOTE

     SAFE-CHAR    = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E / NON-ASCII
        ; Any character except CTLs, DQUOTE, ";", ":", ","

     VALUE-CHAR   = WSP / VCHAR / NON-ASCII
        ; any textual character

   A line that begins with a white space character is a continuation of
   the previous line, as described above.  The white space character and
   immediately preceeding CRLF should be discarded when reconstructing
   the original line.  Note that this line-folding convention differs



Perreault & Resnick     Expires December 27, 2008               [Page 9]

Internet-Draft                    vCard                        June 2008


   from that found in [RFC2822], in that the sequence <CRLF><WSP> found
   anywhere in the content indicates a continued line and should be
   removed.

   Property names and parameter names are case insensitive (e.g., the
   property name "fn" is the same as "FN" and "Fn").  Parameter values
   MAY be case sensitive or case insensitive, depending on their
   definition.

   Each property defined in a vCard instance MAY have multiple values.
   The general rule for encoding multi-valued properties is to simply
   create a new content line for each value (including the property
   name).  However, it should be noted that some value types support
   encoding multiple values in a single content line by separating the
   values with a comma ",".  This approach has been taken for several of
   the content types defined below (date, time, integer, float), for
   space-saving reasons.

5.  Property Value Data Types

   Lists of values are delimited by a list delimiter, specified by the
   COMMA character (ASCII decimal 44).  A COMMA character in a value
   MUST be escaped with a BACKSLASH character (ASCII decimal 92).

   Compound type values are delimited by a field delimiter, specified by
   the SEMI-COLON character (ASCII decimal 59).  A SEMI-COLON in a
   component of a compound property value MUST be escaped with a
   BACKSLASH character (ASCII decimal 92).

   Standard value types are defined below.

     valuespec =  text-list
                / URI               ; from Appendix A of [RFC3986]
                / date-list
                / time-list
                / date-time-list
                / boolean
                / integer-list
                / float-list
                / binary
                / utc-offset
                / iana-valuespec

     text-list = *TEXT-LIST-CHAR *("," *TEXT-LIST-CHAR)

     TEXT-LIST-CHAR = "\\" / "\," / "\n"
                    / <any VALUE-CHAR except , or \ or newline>
         ; Backslashes, newlines, and commas must be encoded.



Perreault & Resnick     Expires December 27, 2008              [Page 10]

Internet-Draft                    vCard                        June 2008


         ; \n or \N can be used to encode a newline.

     date-list = date *("," date)

     time-list = time *("," time)

     date-time-list = date "T" time *("," date "T" time)

     boolean = "TRUE" / "FALSE"

     integer-list = integer *("," integer)

     integer = [sign] 1*DIGIT

     float-list = float *("," float)

     float = [sign] 1*DIGIT ["." 1*DIGIT]

     sign = "+" / "-"

     binary = <A "B" binary encoded string as defined by [RFC2047].>

     date = date-fullyear ["-" date-month ["-" date-mday]]

     date-fullyear = 4DIGIT

     date-month = 2DIGIT      ;01-12

     date-mday = 2DIGIT       ;01-28, 01-29, 01-30, 01-31
                              ;based on month/year

     time = time-hour [":" time-minute [":" time-second [time-secfrac]]]
             [time-zone]

     time-hour = 2DIGIT       ;00-23

     time-minute = 2DIGIT     ;00-59

     time-second = 2DIGIT     ;00-60 (leap second)

     time-secfrac = "," 1*DIGIT

     time-zone = "Z" / time-numzone

     time-numzome = sign time-hour [":"] time-minute

     utc-offset = ("+" / "-") time-hour ":" time-minute




Perreault & Resnick     Expires December 27, 2008              [Page 11]

Internet-Draft                    vCard                        June 2008


     iana-valuespec = <a publicly-defined valuetype format, registered
                       with IANA, as defined in section 12 of this
                       document>

5.1.  TEXT

   "text": The "text" value type should be used to identify values that
   contain human-readable text.  The character set in which the text is
   represented is controlled by the "charset" MIME type parameter.  Note
   that there is no way to override this parameter on a per-property
   basis.  As for the language, it is controlled by the "language"
   property parameter defined in Section 6.1.

   Examples for "text":

       this is a text value
       this is one value,this is another
       this is a single value\, with a comma encoded

   A formatted text line break in a text value type MUST be represented
   as the character sequence backslash (ASCII decimal 92) followed by a
   Latin small letter n (ASCII decimal 110) or a Latin capital letter N
   (ASCII decimal 78), that is "\n" or "\N".

   For example a multiple line DESCRIPTION value of:

       Mythical Manager
       Hyjinx Software Division
       BabsCo, Inc.

   could be represented as:

       DESCRIPTION:Mythical Manager\nHyjinx Software Division\n
        BabsCo\, Inc.\n

   demonstrating the \n literal formatted line break technique, the
   CRLF-followed-by-space line folding technique, and the backslash
   escape technique.

5.2.  URI

   "uri": The "uri" value type should be used to identify values that
   are referenced by a URI (including a Content-ID URI), instead of
   encoded in-line.  These value references might be used if the value
   is too large, or otherwise undesirable to include directly.  The
   format for the URI is as defined in [RFC3986].  Note that the value
   of a property of type "uri" is what the URI points to, not the URI
   itself.



Perreault & Resnick     Expires December 27, 2008              [Page 12]

Internet-Draft                    vCard                        June 2008


   Examples for "uri":

       http://www.example.com/my/picture.jpg
       ldap://ldap.example.com/cn=babs%20jensen

5.3.  DATE, TIME, and DATE-TIME

   "date", "time", and "date-time": Each of these value types is based
   on a subset of the definitions in [ISO.8601.1988] standard.  Multiple
   "date" and "time" values can be specified using the comma-separated
   notation.

   Examples for "date":

       1985-04-12
       1996-08-05,1996-11-11
       19850412

   Examples for "time":

       10:22:00
       102200
       10:22:00.33
       10:22:00.33Z
       10:22:33,11:22:00
       10:22:00-08:00

   Examples for "date-time":

       1996-10-22T14:00:00Z
       1996-08-11T12:34:56Z
       19960811T123456Z
       1996-10-22T14:00:00Z,1996-08-11T12:34:56Z

5.4.  BOOLEAN

   "boolean": The "boolean" value type is used to express boolen values.
   These values are case insensitive.

   Examples:

       TRUE
       false
       True







Perreault & Resnick     Expires December 27, 2008              [Page 13]

Internet-Draft                    vCard                        June 2008


5.5.  INTEGER

   "integer": The "integer" value type is used to express signed
   integers in decimal format.  If sign is not specified, the value is
   assumed positive "+".  Multiple "integer" values can be specified
   using the comma-separated notation.

   Examples:

       1234567890
       -1234556790
       +1234556790,432109876

5.6.  FLOAT

   "float": The "float" value type is used to express real numbers.  If
   sign is not specified, the value is assumed positive "+".  Multiple
   "float" values can be specified using the comma-separated notation.

   Examples:

       20.30
       1000000.0000001
       1.333,3.14

5.7.  BINARY

   "binary": The "binary" value type specifies that the type value is
   inline, encoded binary data.  This value type can be specified in the
   PHOTO, LOGO, SOUND, and KEY types.

   If inline encoded binary data is specified, the ENCODING type
   parameter MUST be used to specify the encoding format.  The binary
   data MUST be encoded using the "B" encoding format.  Long lines of
   encoded binary data SHOULD BE folded to 75 characters using the
   folding method defined in Section 4.1.

5.8.  UTC-OFFSET

   "utc-offset": The "utc-offset" value type specifies that the type
   value is a signed offset from UTC.  This value type can be specified
   in the TZ type.

   The value type is an offset from Coordinated Universal Time (UTC).
   It is specified as a positive or negative difference in units of
   hours and minutes (e.g., +hh:mm).  The time is specified as a 24-hour
   clock.  Hour values are from 00 to 23, and minute values are from 00
   to 59.  Hour and minutes are 2-digits with high order zeroes required



Perreault & Resnick     Expires December 27, 2008              [Page 14]

Internet-Draft                    vCard                        June 2008


   to maintain digit count.  The extended format for ISO 8601 UTC
   offsets MUST be used.  The extended format makes use of a colon
   character as a separator of the hour and minute text fields.

6.  Property Parameters

   A property can have attributes associated with it.  These "property
   parameters" contain meta-information about the property or the
   property value.

   Property parameter values that contain the COLON (US-ASCII decimal
   58), SEMICOLON (US-ASCII decimal 59) or COMMA (US-ASCII decimal 44)
   character separators MUST be specified as quoted-string text values.
   Property parameter values MUST NOT contain the DQUOTE (US-ASCII
   decimal 22) character.  The DQUOTE (US-ASCII decimal 22) character is
   used as a delimiter for parameter values that contain restricted
   characters or URI text.  For example:

     FN;PID=8:Jane Doe

   Property parameter values that are not in quoted strings are case
   insensitive.

   The general property parameters defined by this memo are defined by
   the following notation:


























Perreault & Resnick     Expires December 27, 2008              [Page 15]

Internet-Draft                    vCard                        June 2008


          vcardparameter = encodingparam
                         / valuetypeparam
                         / languageparam
                         / uidparam

          encodingparam = "encoding" "=" encodingtype

          encodingtype = "b"       ; from [RFC2047]
                     / iana-token  ; registered as described in
                                   ; section 12 of this document

          valuetypeparam = "value" "=" valuetype

          valuetype = "uri"        ; URI from Appendix A of [RFC3986]
                     / "text"
                     / "date"
                     / "time"
                     / "date-time" ; date time
                     / "integer"
                     / "boolean"
                     / "float"
                     / x-name
                     / iana-token  ; registered as described in
                                   ; section 12 of this document

          languageparam = "language" "=" Language-Tag
              ; Language-Tag is defined in section 2.1 of RFC 4646

          uidparam = "uid" "=" URI  ; from Appendix A of [RFC3986]

   Applications MUST ignore x-param and iana-param value they don't
   recognize.

6.1.  LANGUAGE

   The "language" property parameter is used to identify data in
   multiple languages.  There is no concept of "default" language,
   except as specified by any "Content-Language" MIME header parameter
   that is present.  The value of the "language" property parameter is a
   language tag as defined in Section 2 of [RFC4646].

6.2.  ENCODING

   The "encoding" property parameter is used to specify an alternate
   encoding for a value.  If the value contains a CRLF, it must be
   encoded, since CRLF is used to separate lines in the content-type
   itself.  Currently, only the "b" encoding is supported.




Perreault & Resnick     Expires December 27, 2008              [Page 16]

Internet-Draft                    vCard                        June 2008


   The "b" encoding can also be useful for binary values that are mixed
   with other text information in the body part (e.g., a certificate).
   Using a per-value "b" encoding in this case leaves the other
   information in a more readable form.  The encoded base 64 value can
   be split across multiple physical lines by using the line folding
   technique described above.

   The Content-Transfer-Encoding header field is used to specify the
   encoding used for the body part as a whole.  The "encoding" property
   parameter is used to specify an encoding for a particular value
   (e.g., a certificate).  In this case, the Content-Transfer-Encoding
   header might specify "8bit", while the one certificate value might
   specify an encoding of "b" via an "encoding=b" property parameter.

   The Content-Transfer-Encoding and the encodings of individual
   properties given by the "encoding" property parameter are independent
   of one another.  When encoding a text/vcard body part for
   transmission, individual property encodings are performed first, then
   the entire body part is encoded according to the Content-Transfer-
   Encoding.  When decoding a text/vcard body part, the Content-
   Transfer-Encoding is decoded first, and then any individual
   properties with an "encoding" property parameter are decoded.

6.3.  VALUE

   The "value" parameter is optional, and is used to identify the value
   type (data type) and format of the value.  The use of these
   predefined formats is encouraged even if the value parameter is not
   explicity used.  By defining a standard set of value types and their
   formats, existing parsing and processing code can be leveraged.  The
   predefined data type values MUST NOT be repeated in COMMA separated
   value lists except within the N, NICKNAME, ADR and CATEGORIES
   properties.

   Including the value type explicitly as part of each property provides
   an extra hint to keep parsing simple and support more generalized
   applications.  For example a search engine would not have to know the
   particular value types for all of the items for which it is
   searching.  Because the value type is explicit in the definition, the
   search engine could look for dates in any item type and provide
   results that can still be interpreted.

6.4.  PID

   The "pid" parameter is used to uniquely identify the property.  It
   plays a role analogous to the UID property (Section 7.7.7) on a per-
   property instead of per-vCard basis.  It MUST NOT appear more than
   once in a given property, and SHOULD be present if synchronization is



Perreault & Resnick     Expires December 27, 2008              [Page 17]

Internet-Draft                    vCard                        June 2008


   to be used.  See Section 8.  Its value is a small integer.

6.5.  TYPE

   The "type" parameter has multiple, different uses.  In general, it is
   a way of specifying class characteristics of the associated property.
   Most of the time, its value is a comma-separated subset of a pre-
   defined enumeration.  In this document, the following properties make
   use of this parameter: PHOTO, ADR, LABEL, TEL, EMAIL, IMPP, LOGO,
   MEMBER, SOUND, and KEY.

7.  vCard Properties

   What follows is an enumeration of the standard vCard properties.

7.1.  General Properties

7.1.1.  BEGIN

   Purpose:  To denote the beginning of a syntactic entity within a
      text/vcard content-type.

   Value type:  text

   Special notes:  The content entity MUST begin with the BEGIN property
      with a value of "VCARD".

      The BEGIN property is used in conjunction with the END property to
      delimit an entity containing a related set of properties within an
      text/vcard content-type.  This construct can be used instead of or
      in addition to wrapping separate sets of information inside
      additional MIME headers.  It is provided for applications that
      wish to define content that can contain multiple entities within
      the same text/vcard content-type or to define content that can be
      identifiable outside of a MIME environment.

   Example:

         BEGIN:VCARD

7.1.2.  END

   Purpose:  To denote the end of a syntactic entity within a text/vcard
      content-type.







Perreault & Resnick     Expires December 27, 2008              [Page 18]

Internet-Draft                    vCard                        June 2008


   Value type:  text

   Special notes:  The content entity MUST end with the END type with a
      value of "VCARD".

      The END property is used in conjunction with the BEGIN property to
      delimit an entity containing a related set of properties within an
      text/vcard content-type.  This construct can be used instead of or
      in addition to wrapping separate sets of information inside
      additional MIME headers.  It is provided for applications that
      wish to define content that can contain multiple entities within
      the same text/vcard content-type or to define content that can be
      identifiable outside of a MIME environment.

   Example:

         END:VCARD

7.1.3.  SOURCE

   Purpose:  To identify the source of directory information contained
      in the content type.

   Value type:  uri

   Special notes:  The SOURCE property is used to provide the means by
      which applications knowledgable in the given directory service
      protocol can obtain additional or more up-to-date information from
      the directory service.  It contains a URI as defined in [RFC3986]
      and/or other information referencing the vCard to which the
      information pertains.  When directory information is available
      from more than one source, the sending entity can pick what it
      considers to be the best source, or multiple SOURCE properties can
      be included.

   Examples:

     SOURCE:ldap://ldap.example.com/cn=Babs%20Jensen,%20o=Babsco,%20c=US

     SOURCE:http://directory.example.com/addressbooks/jdoe/
      Jean%20Dupont.vcf

7.1.4.  NAME








Perreault & Resnick     Expires December 27, 2008              [Page 19]

Internet-Draft                    vCard                        June 2008


   Purpose:  To identify the displayable name of the directory entity to
      which information in the vCard pertains.

   Value type:  text

   Special notes:  The NAME property is used to convey the display name
      of the entity to which the directory information pertains.  Its
      value is the displayable, presentation text associated with the
      source for the vCard, as specified in the SOURCE property.

   Example:

         NAME:Babs Jensen's Contact Information

7.1.5.  KIND

   Purpose:  To specify the kind of object the vCard represents.

   Value type:  A single text value.

   Special notes:  The value may be one of: "individual" for a single
      person, "group" for a group of people, "org" for an organization,
      an x-name or an iana-token.  If this property is absent,
      "individual" MUST be assumed as default.

   Example:

      This represents someone named Jane Doe working in the marketing
      department of the North American division of ABC Inc.

         BEGIN:VCARD
         VERSION:4.0
         KIND:individual
         FN:Jane Doe
         ORG:ABC\, Inc.;North American Division;Marketing
         END:VCARD

      This represents the department itself, commonly known as ABC
      Marketing.

         BEGIN:VCARD
         VERSION:4.0
         KIND:org
         FN:ABC Marketing
         ORG:ABC\, Inc.;North American Division;Marketing
         END:VCARD





Perreault & Resnick     Expires December 27, 2008              [Page 20]

Internet-Draft                    vCard                        June 2008


7.2.  Identification Properties

   These types are used to capture information associated with the
   identification and naming of the person or resource associated with
   the vCard.

7.2.1.  FN

   Purpose:  To specify the formatted text corresponding to the name of
      the object the vCard represents.

   Value type:  A single text value.

   Special notes:  This property is based on the semantics of the X.520
      Common Name attribute.  The property MUST be present in the vCard
      object.

   Example:

         FN:Mr. John Q. Public\, Esq.

7.2.2.  N

   Purpose:  To specify the components of the name of the object the
      vCard represents.

   Value type:  A single structured text value.  Each component can have
      multiple values.

   Special note:  The structured property value corresponds, in
      sequence, to the Family Name, Given Name, Additional Names,
      Honorific Prefixes, and Honorific Suffixes.  The text components
      are separated by the SEMI-COLON character (ASCII decimal 59).
      Individual text components can include multiple text values (e.g.,
      multiple Additional Names) separated by the COMMA character (ASCII
      decimal 44).  This property is based on the semantics of the X.520
      individual name attributes.  The property SHOULD be present in the
      vCard object when the name of the object the vCard represents
      follows the X.520 model.

   Examples:

             N:Public;John;Quinlan;Mr.;Esq.

             N:Stevenson;John;Philip,Paul;Dr.;Jr.,M.D.,A.C.P.






Perreault & Resnick     Expires December 27, 2008              [Page 21]

Internet-Draft                    vCard                        June 2008


7.2.3.  NICKNAME

   Purpose:  To specify the text corresponding to the nickname of the
      object the vCard represents.

   Value type:  One or more text values separated by a COMMA character
      (ASCII decimal 44).

   Special note:  The nickname is the descriptive name given instead of
      or in addition to the one belonging to a person, place, or thing.
      It can also be used to specify a familiar form of a proper name
      specified by the FN or N properties.

   Examples:

             NICKNAME:Robbie

             NICKNAME:Jim,Jimmie

7.2.4.  PHOTO

   Purpose:  To specify an image or photograph information that
      annotates some aspect of the object the vCard represents.

   Encoding:  The encoding MUST be reset to "b" using the ENCODING
      parameter in order to specify inline, encoded binary data.  If the
      value is referenced by a URI value, then the default encoding is
      used and no explicit ENCODING parameter is needed.

   Value type:  A single value.  The default is binary value.  It can
      also be reset to uri value.  The uri value can be used to specify
      a value outside of this MIME entity.

   Special notes:  This property SHOULD include the parameter "TYPE" to
      specify the graphic image format type.  The TYPE parameter value
      MUST be an image media type as specified in [RFC4288].  The full
      media type name, including the "image/" prefix, should be used.
      However, implementations SHOULD be able to handle bare subtypes.

   Example:

       PHOTO;VALUE=uri:http://www.example.com/pub/photos
        /jqpublic.gif


       PHOTO;ENCODING=b;TYPE=image/jpeg:MIICajCCAdOgAwIBAgICBEUwDQYJKo
        ZIhvcNAQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENv
        bW11bmljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZvcm1hdGlvbi



Perreault & Resnick     Expires December 27, 2008              [Page 22]

Internet-Draft                    vCard                        June 2008


        <...remainder of "B" encoded binary data...>

7.2.5.  BDAY

   Purpose:  To specify the birth date of the object the vCard
      represents.

   Value type:  The default is a single date value.  It can also be
      reset to a single date-time or text value.

   Examples:

             BDAY:1996-04-15

             BDAY:1953-10-15T23:10:00Z

             BDAY;VALUE=text:circa 1800

7.2.6.  DDAY

   Purpose:  To specify the date of death of the object the vCard
      represents.

   Value type:  The default is a single date value.  It can also be
      reset to a single date-time or text value.

7.2.7.  BIRTH

   Purpose:  To specify the place of birth of the object the vCard
      represents.

   Value type:  A single text value.

   Example:

             BIRTH:Babies'R'Us Hospital

7.2.8.  DEATH

   Purpose:  To specify the place of death of the object the vCard
      represents.

   Value type:  A single text value.

   Example:

             DEATH:Aboard the Titanic\, near Newfoundland




Perreault & Resnick     Expires December 27, 2008              [Page 23]

Internet-Draft                    vCard                        June 2008


7.2.9.  GENDER

   Purpose:  To specify the gender of the object the vCard represents.

   Value type:  A single text value.

   Special notes:  The value "M" stands for male while "F" stands for
      female.

   Example:

             GENDER:F

7.3.  Delivery Addressing Properties

   These types are concerned with information related to the delivery
   addressing or label for the vCard object.

7.3.1.  ADR

   Purpose:  To specify the components of the delivery address for the
      vCard object.

   Value type:  A single structured text value, separated by the SEMI-
      COLON character (ASCII decimal 59).

   Special notes:  The structured type value consists of a sequence of
      address components.  The component values MUST be specified in
      their corresponding position.  The structured type value
      corresponds, in sequence, to the post office box; the extended
      address (e.g. apartment or suite number); the street address; the
      locality (e.g., city); the region (e.g., state or province); the
      postal code; the country name.  When a component value is missing,
      the associated component separator MUST still be specified.

      The text components are separated by the SEMI-COLON character
      (ASCII decimal 59).  Where it makes semantic sense, individual
      text components can include multiple text values (e.g., a "street"
      component with multiple lines) separated by the COMMA character
      (ASCII decimal 44).

      The type can include the type parameter "TYPE" to specify the
      delivery address type.  The TYPE parameter values can include
      "home" to indicate a delivery address for a residence; "work" to
      indicate delivery address for a place of work; and "pref" to
      indicate the preferred delivery address when more than one address
      is specified.  These type parameter values can be specified as a
      parameter list (i.e., "TYPE=home;TYPE=pref") or as a value list



Perreault & Resnick     Expires December 27, 2008              [Page 24]

Internet-Draft                    vCard                        June 2008


      (i.e., "TYPE=home,pref").  This type is based on semantics of the
      X.520 geographical and postal addressing attributes.  The default
      is "TYPE=work".

   Example: In this example the post office box and the extended address
   are absent.

           ADR;TYPE=home:;;123 Main Street;Any Town;CA;91921-1234

7.3.2.  LABEL

   Purpose:  To specify the formatted text corresponding to delivery
      address of the object the vCard represents.

   Value type:  A single text value.

   Special notes:  The property value is formatted text that can be used
      to present a delivery address label for the vCard object.  The
      type can include the type parameter "TYPE" to specify delivery
      label type.  The TYPE parameter values can include "home" to
      indicate a delivery label for a residence; "work" to indicate
      delivery label for a place of work; and "pref" to indicate the
      preferred delivery label when more than one label is specified.
      These type parameter values can be specified as a parameter list
      (i.e., "TYPE=home;TYPE=pref") or as a value list (i.e.,
      "TYPE=home,pref").  The default is "TYPE=work".

   Example: A multi-line address label.

           LABEL;TYPE=home:Mr.John Q. Public\, Esq.\nMail Drop: TNE QB\n
            123 Main Street\nAny Town\, CA  91921-1234\nU.S.A.

7.4.  Communications Properties

   These properties are concerned with information associated with the
   way communications with the object the vCard represents are carried
   out.

7.4.1.  TEL

   Purpose:  To specify the telephone number for telephony communication
      with the object the vCard represents.

   Value type:  A single URI value.  It is expected that the URI scheme
      will be "tel", as specified in [RFC3966], but other schemes MAY be
      used.





Perreault & Resnick     Expires December 27, 2008              [Page 25]

Internet-Draft                    vCard                        June 2008


   Special notes:  This property is based on the X.520 Telephone Number
      attribute.

      The property can include the parameter "TYPE" to specify intended
      use for the telephone number.  The TYPE parameter values can
      include: "home" to indicate a telephone number associated with a
      residence, "msg" to indicate the telephone number has voice
      messaging support, "work" to indicate a telephone number
      associated with a place of work, "pref" to indicate a preferred-
      use telephone number, "voice" to indicate a voice telephone
      number, "fax" to indicate a facsimile telephone number, "cell" to
      indicate a cellular telephone number, "video" to indicate a video
      conferencing telephone number, "pager" to indicate a paging device
      telephone number, "bbs" to indicate a bulletin board system
      telephone number, "modem" to indicate a MODEM connected telephone
      number, "car" to indicate a car-phone telephone number, "isdn" to
      indicate an ISDN service telephone number, "pcs" to indicate a
      personal communication services telephone number.  The default
      type is "voice".  These type parameter values can be specified as
      a parameter list (i.e., "TYPE=work;TYPE=voice") or as a value list
      (i.e., "TYPE=work,voice").  The default can be overridden to
      another set of values by specifying one or more alternate values.
      For example, the default TYPE of "voice" can be reset to a WORK
      and HOME, VOICE and FAX telephone number by the value list
      "TYPE=work,home,voice,fax".

   Example:

           TEL;TYPE=work,voice,pref,msg:tel:+1-555-555-5555;ext=5555
           TEL;TYPE=home:tel:+33-01-23-45-67

7.4.2.  EMAIL

   Purpose:  To specify the electronic mail address for communication
      with the object the vCard represents.

   Value type:  A single text value.

   Special notes:  The type can include the type parameter "TYPE" to
      specify the format or preference of the electronic mail address.
      The TYPE parameter values can include: "internet" to indicate an
      Internet addressing type, "x400" to indicate a X.400 addressing
      type, "uri" to indicate a URI useable for electronic
      communication, "home" to indicate an address associated with a
      residence, "work" to indicate an address associated with a place
      of work, or "pref" to indicate a preferred-use email address when
      more than one is specified.  Another IANA registered address type
      can also be specified.  The default email type is "internet".  A



Perreault & Resnick     Expires December 27, 2008              [Page 26]

Internet-Draft                    vCard                        June 2008


      non-standard value can also be specified.

   Type example:

           EMAIL;TYPE=internet:jqpublic@xyz.example.com

           EMAIL;TYPE=internet,pref:jane_doe@example.com

           EMAIL;TYPE=uri,work:http://example.com/contact.php

7.4.3.  IMPP

   Purpose:  To specify the URI for instant messaging and presence
      protocol communications with the object the vCard represents.

   Value type:  A single URI.

   Special notes:  The property may include the type parameter "TYPE" to
      specify an intended use for the URI.  The TYPE parameter values
      include one or more of the following:

      *  An indication of the type of communication for which this URI
         is appropriate.  This can be a value of "personal" or
         "business".

      *  An indication of the location of a device associated with this
         URI.  Values can be "home", "work", or "mobile".

      *  The value "pref" indicates this is a preferred address and has
         the same semantics as the "pref" value in a TEL property.

   Example:

       IMPP;TYPE=personal,pref:xmpp:alice@example.com

7.4.4.  LANG

   Purpose:  To specify the language(s) that may be used for contacting
      the individual associated with the vCard.

   Value type:  A list of text values.

   Special notes:  The list is to be interpreted as defined in
      [RFC2616], Section 14.4, i.e. as the value of an Accept-Language
      HTTP header.  This lets one specify preference among languages.
      Note that any SEMI-COLON character (ASCII decimal 59) must be
      escaped.




Perreault & Resnick     Expires December 27, 2008              [Page 27]

Internet-Draft                    vCard                        June 2008


   Example:

       LANG:fr,en\;q=0.9

7.5.  Geographical Properties

   These properties are concerned with information associated with
   geographical positions or regions associated with the object the
   vCard represents.

7.5.1.  TZ

   Purpose:  To specify information related to the time zone of the
      object the vCard represents.

   Value type:  The default is a single utc-offset value.  It can also
      be reset to a single text value.

   Special notes:  The type value consists of a single value.

   Type examples:

           TZ:-05:00

           TZ;VALUE=text:-05:00; EST; Raleigh/North America
           ;This example has a single value, not a structure text value.

7.5.2.  GEO

   Purpose:  To specify information related to the global positioning of
      the object the vCard represents.

   Value type:  A single structured value consisting of two float values
      separated by the SEMI-COLON character (ASCII decimal 59).

   Special notes:  This property specifies information related to the
      global position of the object associated with the vCard.  The
      value specifies latitude and longitude, in that order (i.e., "LAT
      LON" ordering).  The longitude represents the location east and
      west of the prime meridian as a positive or negative real number,
      respectively.  The latitude represents the location north and
      south of the equator as a positive or negative real number,
      respectively.  The longitude and latitude values MUST be expressed
      in the [WGS84] reference system.  They MUST be specified as
      decimal degrees and should be specified to six decimal places.
      This will allow for granularity within a meter of the geographical
      position.  The text components are separated by the SEMI-COLON
      character (ASCII decimal 59).  The simple formula for converting



Perreault & Resnick     Expires December 27, 2008              [Page 28]

Internet-Draft                    vCard                        June 2008


      degrees-minutes-seconds into decimal degrees is:


           decimal = degrees + minutes/60 + seconds/3600.

   Example:

           GEO:37.386013;-122.082932

7.6.  Organizational Properties

   These properties are concerned with information associated with
   characteristics of the organization or organizational units of the
   object the vCard represents.

7.6.1.  TITLE

   Purpose:  To specify the job title, functional position or function
      of the object the vCard represents.

   Value type:  A single text value.

   Special notes:  This property is based on the X.520 Title attribute.

   Example:

           TITLE:Director\, Research and Development

7.6.2.  ROLE

   Purpose:  To specify information concerning the role, occupation, or
      business category of the object the vCard represents.

   Value type:  A single text value.

   Special notes:  This property is based on the X.520 Business Category
      explanatory attribute.  This property is included as an
      organizational type to avoid confusion with the semantics of the
      TITLE property and incorrect usage of that property when the
      semantics of this property is intended.

   Example:

           ROLE:Programmer







Perreault & Resnick     Expires December 27, 2008              [Page 29]

Internet-Draft                    vCard                        June 2008


7.6.3.  LOGO

   Purpose:  To specify a graphic image of a logo associated with the
      object the vCard represents.

   Encoding:  The encoding MUST be reset to "b" using the ENCODING
      parameter in order to specify inline, encoded binary data.  If the
      value is referenced by a URI value, then the default encoding of
      8bit is used and no explicit ENCODING parameter is needed.

   Value type:  A single value.  The default is binary value.  It can
      also be reset to uri value.  The uri value can be used to specify
      a value outside of this MIME entity.

   Special notes:  This property SHOULD include the parameter "TYPE" to
      specify the graphic image format type.  The TYPE parameter value
      MUST be an image media type as specified in [RFC4288].  The full
      media type name, including the "image/" prefix, should be used.
      However, implementations SHOULD be able to handle bare subtypes.

   Example:

         LOGO;VALUE=uri:http://www.example.com/pub/logos/abccorp.jpg

         LOGO;ENCODING=b;TYPE=image/jpeg:MIICajCCAdOgAwIBAgICBEUwDQYJKoZ
          AQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENvbW11bm
          ljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZvcm1hdGlvbiBTeXN0
          <...the remainder of "B" encoded binary data...>

7.6.4.  AGENT

   Purpose:  To specify information about another person who will act on
      behalf of the individual or resource associated with the vCard.

   Value type:  The default is a single URI value.  It can also be reset
      to a single text value.  The text value can be used to specify
      textual information.

   Special notes:  This property typically is used to specify an area
      administrator, assistant, or secretary for the individual
      associated with the vCard.  A key characteristic of the AGENT
      property is that it represents somebody or something that is
      separately addressable.

   Examples:






Perreault & Resnick     Expires December 27, 2008              [Page 30]

Internet-Draft                    vCard                        June 2008


     AGENT:urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6

     AGENT:http://example.com/directory/jdoe.vcf

     AGENT;VALUE=text:Please contact my assistant Jane Doe for any
      inquiries.

7.6.5.  ORG

   Purpose:  To specify the organizational name and units associated
      with the vCard.

   Value type:  A single structured text value consisting of components
      separated the SEMI-COLON character (ASCII decimal 59).

   Special notes:  The property is based on the X.520 Organization Name
      and Organization Unit attributes.  The property value is a
      structured type consisting of the organization name, followed by
      one or more levels of organizational unit names.

   Example: A property value consisting of an organizational name,
   organizational unit #1 name and organizational unit #2 name.

           ORG:ABC\, Inc.;North American Division;Marketing

7.6.6.  MEMBER

   Purpose:  To include a member in the group this vCard represents.

   Value tpe:  A single URI.  It MAY refer to something other than a
      vCard object.  For example, an e-mail distribution list could
      employ the "mailto" URI scheme for efficiency.

   Special notes:  This property MUST NOT be present unless the value of
      the KIND property is "group".

   Examples:














Perreault & Resnick     Expires December 27, 2008              [Page 31]

Internet-Draft                    vCard                        June 2008


     BEGIN:VCARD
     VERSION:4.0
     KIND:group
     FN:The Doe family
     MEMBER:urn:uuid:03a0e51f-d1aa-4385-8a53-e29025acd8af
     MEMBER:urn:uuid:b8767877-b4a1-4c70-9acc-505d3819e519
     END:VCARD
     BEGIN:VCARD
     VERSION:4.0
     FN:John Doe
     UID:urn:uuid:03a0e51f-d1aa-4385-8a53-e29025acd8af
     END:VCARD
     BEGIN:VCARD
     VERSION:4.0
     FN:Jane Doe
     UID:urn:uuid:b8767877-b4a1-4c70-9acc-505d3819e519
     END:VCARD


     BEGIN:VCARD
     VERSION:4.0
     KIND:group
     FN:Funky distribution list
     MEMBER:mailto:subscriber1@example.com
     MEMBER:xmpp:subscriber2@example.com
     MEMBER:sip:subscriber3@example.com
     MEMBER:tel:+1-418-555-5555
     END:VCARD

7.6.7.  RELATED

   Purpose:  To specify a relationship the individual this vCard
      represents has with another.

   Value type:  A single URI.

   Special notes:  The TYPE parameter MAY be used to characterize the
      related individual.  The understood types are:

      *  "parent" means that the related individual is the parent of the
         individual this vCard represents.

      *  "child" means the opposite of "parent".

      *  "sibling" means that the two individuals are siblings.

      *  "manager" means that the related individual is the direct
         hierarchical superior (i.e. supervisor or manager) of the



Perreault & Resnick     Expires December 27, 2008              [Page 32]

Internet-Draft                    vCard                        June 2008


         individual this vCard represents.

      *  "assistant" for an assistant or secretary.

      Other types may be registered to IANA as described in
      Section 12.1, and private extensions starting with "X-" may be
      used.

   Examples:

     RELATED;TYPE=manager:urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6
     RELATED;TYPE=assistant:http://example.com/directory/jdoe.vcf

7.7.  Explanatory Properties

   These properties are concerned with additional explanations, such as
   that related to informational notes or revisions specific to the
   vCard.

7.7.1.  CATEGORIES

   Purpose:  To specify application category information about the
      vCard.

   Value type:  One or more text values separated by a COMMA character
      (ASCII decimal 44).

   Example:

           CATEGORIES:TRAVEL AGENT

           CATEGORIES:INTERNET,IETF,INDUSTRY,INFORMATION TECHNOLOGY

7.7.2.  NOTE

   Purpose:  To specify supplemental information or a comment that is
      associated with the vCard.

   Value type:  A single text value.

   Special notes:  The property is based on the X.520 Description
      attribute.

   Example:

           NOTE:This fax number is operational 0800 to 1715
             EST\, Mon-Fri.




Perreault & Resnick     Expires December 27, 2008              [Page 33]

Internet-Draft                    vCard                        June 2008


7.7.3.  PRODID

   Purpose:  To specify the identifier for the product that created the
      vCard object.

   Type value:  A single text value.

   Special notes:  Implementations SHOULD use a method such as that
      specified for Formal Public Identifiers in [ISO9070] or for
      Universal Resource Names in [RFC3406] to assure that the text
      value is unique.

   Example:

           PRODID:-//ONLINE DIRECTORY//NONSGML Version 1//EN

7.7.4.  REV

   Purpose:  To specify revision information about the current vCard.

   Value type:  The default is a single date-time value.  Can also be
      reset to a single date value.

   Special notes:  The value distinguishes the current revision of the
      information in this vCard for other renditions of the information.

   Example:

           REV:1995-10-31T22:27:10Z

           REV:1997-11-15

7.7.5.  SORT-STRING

   Purpose:  To specify the family name or given name text to be used
      for national-language-specific sorting of the FN and N types.

   Value type:  A single text value.

   Special notes:  The sort string is used to provide family name or
      given name text that is to be used in locale- or national-
      language- specific sorting of the formatted name and structured
      name types.  Without this information, sorting algorithms could
      incorrectly sort this vCard within a sequence of sorted vCards.
      When this property is present in a vCard, then this family name or
      given name value is used for sorting the vCard.

   Examples: For the case of family name sorting, the following examples



Perreault & Resnick     Expires December 27, 2008              [Page 34]

Internet-Draft                    vCard                        June 2008


   define common sort string usage with the FN and N properties.

           FN:Rene van der Harten
           N:van der Harten;Rene;J.;Sir;R.D.O.N.
           SORT-STRING:Harten

           FN:Robert Pau Shou Chang
           N:Pau;Shou Chang;Robert
           SORT-STRING:Pau

           FN:Osamu Koura
           N:Koura;Osamu
           SORT-STRING:Koura

           FN:Oscar del Pozo
           N:del Pozo Triscon;Oscar
           SORT-STRING:Pozo

           FN:Chistine d'Aboville
           N:d'Aboville;Christine
           SORT-STRING:Aboville

7.7.6.  SOUND

   Purpose:  To specify a digital sound content information that
      annotates some aspect of the vCard.  By default this property is
      used to specify the proper pronunciation of the name property
      value of the vCard.

   Encoding:  The encoding MUST be reset to "b" using the ENCODING
      parameter in order to specify inline, encoded binary data.  If the
      value is referenced by a URI value, then the default encoding of
      8bit is used and no explicit ENCODING parameter is needed.

   Value type:  A single value.  The default is binary value.  It can
      also be reset to uri value.  The uri value can be used to specify
      a value outside of this MIME entity.

   Special notes:  This property SHOULD include the parameter "TYPE" to
      specify the audio format type.  The TYPE parameter value MUST be
      an audio media type as specified in [RFC4288].  The full media
      type name, including the "audio/" prefix, should be used.
      However, implementations SHOULD be able to handle bare subtypes.

   Example:






Perreault & Resnick     Expires December 27, 2008              [Page 35]

Internet-Draft                    vCard                        June 2008


         SOUND;TYPE=audio/basic;VALUE=uri:CID:JOHNQPUBLIC.part8.
          19960229T080000.xyzMail@example.com

         SOUND;TYPE=audio/basic;ENCODING=b:MIICajCCAdOgAwIBAgICBEUwDQYJK
          AQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENvbW11bm
          ljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZvcm1hdGlvbiBTeXN0
          <...the remainder of "B" encoded binary data...>

7.7.7.  UID

   Purpose:  To specify a value that represents a globally unique
      identifier corresponding to the individual or resource associated
      with the vCard.

   Value type:  A single URI value.

   Special notes:  The type is used to uniquely identify the object that
      the vCard represents.  The "uuid" URN namespace defined in
      [RFC4122] is particularly well-suited to this task, but other URI
      schemes MAY be used.

      This property MUST NOT appear more than once in a given vCard, and
      MUST be present if synchronization is to be used.  See Section 8.

      The PID parameter MUST NOT be applied to this property.

   Example:

           UID:urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6

7.7.8.  URL

   Purpose:  To specify a uniform resource locator associated with the
      object that the vCard refers to.

   Value type:  A single uri value.

   Example:

           URL:http://www.swbyps.restaurant.french/~chezchic.html

7.7.9.  VERSION

   Purpose:  To specify the version of the vCard specification used to
      format this vCard.






Perreault & Resnick     Expires December 27, 2008              [Page 36]

Internet-Draft                    vCard                        June 2008


   Value type:  A single text value.

   Special notes:  The property MUST be present in the vCard object.
      The value MUST be "4.0" if the vCard corresponds to this
      specification.

   Example:

           VERSION:4.0

7.8.  Security Properties

   These properties are concerned with the security of communication
   pathways or access to the vCard.

7.8.1.  CLASS

   Purpose:  To specify the access classification for a vCard object.

   Value type:  A single text value.

   Special notes:  An access classification is only one component of the
      general security model for a directory service.  The
      classification attribute provides a method of capturing the intent
      of the owner for general access to information described by the
      vCard object.

   Examples:

           CLASS:PUBLIC

           CLASS:PRIVATE

           CLASS:CONFIDENTIAL

7.8.2.  KEY

   Purpose:  To specify a public key or authentication certificate
      associated with the object that the vCard represents.

   Encoding:  The encoding MUST be reset to "b" using the ENCODING
      parameter in order to specify inline, encoded binary data.  If the
      value is a text value, then the default encoding of 8bit is used
      and no explicit ENCODING parameter is needed.







Perreault & Resnick     Expires December 27, 2008              [Page 37]

Internet-Draft                    vCard                        June 2008


   Value type:  A single value.  The default is binary.  It can also be
      reset to text value.  The text value can be used to specify a text
      key.

   Special notes:  The property can also include the parameter TYPE to
      specify the public key or authentication certificate format.  This
      parameter should specify an IANA registered public key or
      authentication certificate format.  It can also specify a non-
      standard format.

   Special notes:  This property SHOULD include the parameter "TYPE" to
      specify the public key or authentication certificate format.  The
      TYPE parameter value MUST be a media type as specified in
      [RFC4288].

   Example:

         KEY;TYPE=application/pgp-keys;ENCODING=b:mQGiBEbEPUsRBACBF0RSIN
          mGutdM+KSAl7HMzwXHaLbvEOyu8At80I8qGejhzWowKbfem3X0m68Y/vhb+J2g
          7q11KHpnEdNb67uZaj9nTQ09Q+UFtH25qD/Afn3+9bOJQaPjAUYzXu3vD/xmN8
          <...remainder of "B" encoded binary data...>

7.9.  Calendar Properties

   These properties are further specified in [RFC2739].

7.9.1.  FBURL

   Purpose:  To specify the URI for a user's busy time in a vCard
      object.

   Value type:  A single URI value.

   Special notes:  Where multiple FBURL properties are specified, the
      default FBURL property is indicated with the PREF parameter.  The
      FTP or HTTP type of URI points to an iCalendar object associated
      with a snapshot of the last six weeks of the user's busy time
      data.  If the iCalendar object is represented as a file or
      document, it's file type should be "ifb".

   Examples:

     FBURL;PREF:http://www.example.com/busy/janedoe
     FBURL:FTP://ftp.example.com/busy/project-a.ifb







Perreault & Resnick     Expires December 27, 2008              [Page 38]

Internet-Draft                    vCard                        June 2008


7.9.2.  CALADRURI

   Purpose:  To specify the location to which an event request should be
      sent for the user.

   Value type:  A single URI value.

   Special notes:  Where multiple CALADRURI properties are specified,
      the default CALADRURI property is indicated with the PREF
      parameter.

   Example:

     CALADRURI;PREF:mailto:janedoe@example.com
     CALDARURI:http://example.com/calendar/jdoe

7.9.3.  CALURI

   Purpose:  To specify the URI for a user's calendar in a vCard object.

   Value type:  A single URI value.

   Special notes:  Where multiple CALURI properties are specified, the
      default CALURI property is indicated with the PREF parameter.  The
      property should contain a URI pointing to an iCalendar object
      associated with a snapshot of the user's calendar store.  If the
      iCalendar object is represented as a file or document, it's file
      type should be "ics".

   Examples:

     CALURI;PREF:http://cal.example.com/calA
     CALURI:ftp://ftp.example.com/calA.ics

7.10.  Extended Properties and Parameters

   The properties and parameters defined by this document can be
   extended.  Non-standard, private properties and parameters with a
   name starting with "X-" may be defined bilaterally between two
   cooperating agents without outside registration or standardization.

8.  Synchronization

   vCard data often needs to be synchronized between devices.  In this
   context, synchronization is defined as the intelligent merging of two
   representations of the same object. vCard 4.0 includes mechanisms to
   aid this process.




Perreault & Resnick     Expires December 27, 2008              [Page 39]

Internet-Draft                    vCard                        June 2008


8.1.  Mechanisms

   Two vCards for which the UID properties (Section 7.7.7) are
   equivalent MUST be considered representations of the same object.
   Equivalence is determined as specified in [RFC3986], Section 6.  A
   missing UID property MUST NOT be considered equivalent to any other.
   Hence, the UID property SHOULD be present if synchronization is to be
   used.

   Pairs of properties, one from each of a pair of vCards representing
   the same object, having equivalent names and PID parameter values
   MUST be considered representations of the same object.  A missing PID
   parameter MUST NOT be considered equivalent to any other.  Hence, the
   PID parameter SHOULD be present if synchronization is to be used.

   It is expected that a synchronization engine will exploit such
   property associations by e.g. overwriting the destination property
   value and parameters with the source destination property value and
   parameters.  The particular merging strategy is out of scope for this
   document.

8.2.  Example

   Two vCards are to by synchronized:

     BEGIN:VCARD
     VERSION:4.0
     UID:urn:uuid:77a01597-0603-40f3-8138-36deca8618da
     FN;PID=1:Jane Doe
     EMAIL;PID=1:jdoe1@example.com
     EMAIL;PID=2:jdoe2@example.com
     END:VCARD


     BEGIN:VCARD
     VERSION:4.0
     UID:urn:uuid:77a01597-0603-40f3-8138-36deca8618da
     FN;PID=1:Jane Doe
     EMAIL;PID=1:jdoe3@example.com
     EMAIL;PID=3:jdoe4@example.com
     END:VCARD

   Assuming the first one is the source and the other is the
   destination, a synchronization engine may produce the following
   merged vCard:






Perreault & Resnick     Expires December 27, 2008              [Page 40]

Internet-Draft                    vCard                        June 2008


     BEGIN:VCARD
     VERSION:4.0
     UID:urn:uuid:77a01597-0603-40f3-8138-36deca8618da
     FN;PID=1:Jane Doe
     EMAIL;PID=1:jdoe1@example.com
     EMAIL;PID=2:jdoe2@example.com
     EMAIL;PID=3:jdoe4@example.com
     END:VCARD

9.  Formal Grammar

   The following formal grammar is provided to assist developers in
   building parsers for the vCard.

   This syntax is written according to the form described in [RFC5234],
   but it references just this small subset of [RFC5234] literals:

    ;*******************************************
    ; Basic vCard Definition
    ;*******************************************

    vcard-entity = 1*(vcard)

    vcard        = "BEGIN" ":" "VCARD" 1*CRLF
                   1*(contentline)
         ;A vCard object MUST include the VERSION and FN properties.
                   "END" ":" "VCARD" 1*CRLF

    contentline  = name *(";" param ) ":" value CRLF
         ; When parsing a content line, folded lines must first
         ; be unfolded according to the unfolding procedure
         ; described above. When generating a content line, lines
         ; longer than 75 characters SHOULD be folded according to
         ; the folding procedure described in [MIME DIR].

    name         = iana-token / x-name
         ; Parsing of the param and value is
         ; based on the "name" or type identifier
         ; as defined in ABNF sections below

    iana-token   = 1*(ALPHA / DIGIT / "-")
         ; vCard type or parameter identifier registered with IANA

    x-name       = "X-" 1*(ALPHA / DIGIT / "-")
         ; Reserved for non-standard use

    param        = param-name "=" param-value *("," param-value)




Perreault & Resnick     Expires December 27, 2008              [Page 41]

Internet-Draft                    vCard                        June 2008


    param-name   = iana-token / x-name

    param-value  = ptext / quoted-string

    ptext        = *SAFE-CHAR

    value        = *VALUE-CHAR

    quoted-string = DQUOTE QSAFE-CHAR DQUOTE

    NON-ASCII    = %x80-FF
         ; Use is restricted by outer MIME object (UTF-8 preferred)

    QSAFE-CHAR   = WSP / %x21 / %x23-7E / NON-ASCII
         ; Any character except CTLs, DQUOTE

    SAFE-CHAR    = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E / NON-ASCII
         ; Any character except CTLs, DQUOTE, ";", ":", ","

    VALUE-CHAR   = WSP / VCHAR / NON-ASCII
         ; Any textual character

    ;*******************************************
    ; vCard Type Definition
    ;
    ; Provides type-specific definitions for how the
    ; "value" and "param" are defined.
    ;*******************************************
    ; **** NAME ****
    param        = ""
         ; No parameters allowed

    value        = text-value

    ; **** KIND ****
    param        = ""
         ; No parameters allowed

    value        = kind-value

    kind-value   = "individual" / "group" / "org" / x-name / iana-token

    ; **** PROFILE ****
    param        = ""
         ; No parameters allowed

    value        = text-value
         ; Value MUST be the case insensitive value "VCARD



Perreault & Resnick     Expires December 27, 2008              [Page 42]

Internet-Draft                    vCard                        June 2008


    ; **** SOURCE ****
    param        = source-param
         ; Only source parameters allowed

    value        = uri

    source-param = ("VALUE" "=" "uri")
                 / (x-name "=" *SAFE-CHAR)

    ; **** FN ****
    ;This type MUST be included in a vCard object.
    param        = text-param
         ; Text parameters allowed

    value        = text-value

    ; **** N ****
    ;This type MUST be included in a vCard object.

    param        = text-param
         ; Text parameters allowed

    value        = n-value

    n-value      = 0*4(text-value *("," text-value) ";")
                   text-value *("," text-value)
         ; Family; Given; Middle; Prefix; Suffix.
         ; Example: Public;John;Quincy,Adams;Reverend Dr. III

    ; **** NICKNAME ****
    param        = text-param
         ; Text parameters allowed
    value        = text-value-list

    ; **** PHOTO ****
    param        = img-inline-param
         ; Only image parameters allowed

    param        =/ img-refer-param
         ; Only image parameters allowed

    value        = img-inline-value
         ; Value and parameter MUST match

    value        =/ img-refer-value
         ; Value and parameter MUST match

    ; **** BDAY ****



Perreault & Resnick     Expires December 27, 2008              [Page 43]

Internet-Draft                    vCard                        June 2008


    param        = ("VALUE" "=" "date")
         ; Only value parameter allowed

    param        =/ ("VALUE" "=" "date-time")
         ; Only value parameter allowed

    value        = date-value
         ; Value MUST match value type

    value        =/ date-time-value
         ; Value MUST match value type

    ; **** ADR ****
    param        = adr-param / text-param
         ; Only adr and text parameters allowed

    value        = adr-value

    ; **** LABEL ****
    param        = adr-param / text-param
         ; Only adr and text parameters allowed

    value        = text-value

    ; **** TEL ****
    param        = tel-param
         ; Only tel parameters allowed

    value        = uri-value

    tel-param    = "TYPE" "=" tel-type *("," tel-type)
    tel-type     = "HOME" / "WORK" / "PREF" / "VOICE" / "FAX" / "MSG"
                 / "CELL" / "PAGER" / "BBS" / "MODEM" / "CAR" / "ISDN"
                 / "VIDEO" / "PCS" / iana-token / x-name
         ; Values are case insensitive

    ; **** EMAIL ****
    param        = email-param
         ; Only email parameters allowed

    value        = text-value

    email-param  = "TYPE" "=" email-type ["," "PREF"]
         ; Value is case insensitive

    email-type   = "INTERNET" / "X400" / iana-token / "X-" word
         ; Values are case insensitive




Perreault & Resnick     Expires December 27, 2008              [Page 44]

Internet-Draft                    vCard                        June 2008


    ; **** TZ ****
    param        = ""
         ; No parameters allowed

    value        = utc-offset-value

    ; **** GEO ****
    param        = ""
         ; No parameters allowed

    value        = float-value ";" float-value

    ; **** TITLE ****
    param        = text-param
         ; Only text parameters allowed

    value        = text-value

    ; **** ROLE ****
    param        = text-param
         ; Only text parameters allowed

    value        = text-value

    ; **** LOGO ****
    param        = img-inline-param / img-refer-param
         ; Only image parameters allowed

    value        = img-inline-value / img-refer-value
         ; Value and parameter MUST match

    ; **** AGENT ****
    param        = agent-refer-param / text-param

    value        = agent-refer-value / text-value
         ; Value and parameter MUST match

    agent-refer-param = ""
         ; No parameters allowed

    agent-refer-value = uri
         ; URI MUST refer to valid vCard object

    ; **** ORG ****
    param        = text-param
         ; Only text parameters allowed

    value        = org-value



Perreault & Resnick     Expires December 27, 2008              [Page 45]

Internet-Draft                    vCard                        June 2008


    org-value    = *(text-value ";") text-value
         ; First is Organization Name, remainder are Organization Units.

    ; **** MEMBER ****
    param        = ""
         ; No parameters allowed

    value        = uri
         ; Any valid URI scheme

    ; **** RELATED ****
    param        = "TYPE" "=" related-type
         ; Value is case insensitive

    value         = uri
         ; Any valid URI scheme

    related-type = "parent" / "child" / "sibling" / "manager"
                 / "assistant" / iana-token / "X-" word
         ; Values are case insensitive

    ; **** CATEGORIES ****
    param        = text-param
         ; Only text parameters allowed

    value        = text-value-list

    ; **** NOTE ****
    param        = text-param
         ; Only text parameters allowed
    value        = text-value

    ; **** PRODID ****
    param        = ""
         ; No parameters allowed

    value        = text-value

    ; **** REV ****
    param        = ["VALUE" "=" "date-time"]
         ; Only value parameters allowed. Values are case insensitive.

    param        =/ "VALUE" "=" "date"
         ; Only value parameters allowed. Values are case insensitive.

    value        = date-time-value

    value        =/ date-value



Perreault & Resnick     Expires December 27, 2008              [Page 46]

Internet-Draft                    vCard                        June 2008


    ; **** SORT-STRING ****
    param        = text-param
         ; Only text parameters allowed

    value        = text-value

    ; **** SOUND ****
    param        = snd-inline-param
         ; Only sound parameters allowed

    param        =/ snd-refer-param
         ; Only sound parameters allowed

    value        = snd-line-value
         ; Value MUST match value type

    value        =/ snd-refer-value
         ; Value MUST match value type

    snd-inline-value     = binary-value CRLF
         ; Value MUST be "b" encoded audio content

    snd-inline-param     = ("VALUE" "=" "binary")
                         / ("ENCODING" "=" "b")
                         / ("TYPE" "=" *SAFE-CHAR)
         ; Value MUST be an IANA registered audio type

    snd-refer-value      = uri
         ; URI MUST refer to audio content of given type
    snd-refer-param      = ("VALUE" "=" "uri")
                         / ("TYPE" "=" word)
         ; Value MUST be an IANA registered audio type

    ; **** UID ****
    param        = ""
         ; No parameters allowed

    value        = uri

    ; **** URL ****
    param        = ""
         ; No parameters allowed

    value        = uri

    ; **** VERSION ****
    ;This type MUST be included in a vCard object.
    param        = ""



Perreault & Resnick     Expires December 27, 2008              [Page 47]

Internet-Draft                    vCard                        June 2008


         ; No parameters allowed

    value        = text-value
         ; Value MUST be "4.0"

    ; **** CLASS ****
    param        = ""
         ; No parameters allowed

    value        = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL"
                 / iana-token / x-name
         ; Value are case insensitive

    ; **** KEY ****
    param        = key-txt-param
         ; Only value and type parameters allowed

    param        =/ key-bin-param
         ; Only value and type parameters allowed

    value        = text-value

    value        =/ binary-value

    key-txt-param = "TYPE" "=" keytype

    key-bin-param = ("TYPE" "=" keytype)
                  / ("ENCODING" "=" "b")
         ; Value MUST be a "b" encoded key or certificate
    keytype      = param-value
         ; Type MUST be a media type as defined in RFC 4288

    ; **** X- **** non-standard type
    param        = text-param / (x-name "=" param-value)
         ; Only text or non-standard parameters allowed

    value        = text-value

    ;*******************************************
    ; vCard Commonly Used Parameter Definition
    ;*******************************************

    text-param   = ("VALUE" "=" "ptext")
                 / ("LANGUAGE" "=" langval)
                 / (x-name "=" param-value)

    langval      = <a language string as defined in [RFC4646]>




Perreault & Resnick     Expires December 27, 2008              [Page 48]

Internet-Draft                    vCard                        June 2008


    img-inline-value     = binary-value
         ;Value MUST be "b" encoded image content

    img-inline-param

    img-inline-param     = ("VALUE" "=" "binary")
                         / ("ENCODING" "=" "b")
                         / ("TYPE" "=" param-value)
         ;TYPE value MUST be an image media type as defined in RFC 4288

    img-refer-value = uri
         ;URI MUST refer to image content of given type

    img-refer-param      = ("VALUE" "=" "uri")
                         / ("TYPE" "=" param-value)
         ;TYPE value MUST be an image media type as defined in RFC 4288

    adr-param    = ("TYPE" "=" adr-type *("," adr-type))
                 / (text-param)

    adr-type     = "home" / "work" / "pref" / iana-token / x-name

    adr-value    = 0*6(text-value ";") text-value
         ; PO Box, Extended Address, Street, Locality, Region, Postal
         ; Code, Country Name
    ;*******************************************
    ; vCard Type Value Definition
    ;*******************************************

    text-value-list      = 1*text-value *("," 1*text-value)

    text-value   = *(SAFE-CHAR / ":" / DQUOTE / ESCAPED-CHAR)

    ESCAPED-CHAR = "\\" / "\;" / "\," / "\n" / "\N"
         ; \\ encodes \, \n or \N encodes newline
         ; \; encodes ;, \, encodes ,

    binary-value = <A "b" encoded text value as defined in [RFC2047]>

    date-value   = <A single date value as defined in [RFC2425]>

    time-value   = <A single time value as defined in [RFC2425]>

    date-time-value = <A single date-time value as defined in [RFC2425]>

    float-value  = <A single float value as defined in [RFC2425]>

    phone-number-value = phone-prefix 1*(SP 1*DIGIT) [phone-ext]



Perreault & Resnick     Expires December 27, 2008              [Page 49]

Internet-Draft                    vCard                        June 2008


    phone-prefix = "+" 1*DIGIT / "(" 1*DIGIT ")"

    phone-ext = "ext." 1*DIGIT

    uri-value    = <A uri value as defined in [RFC2425]>

    utc-offset-value = ("+" / "-") time-hour ":" time-minute
    time-hour    = 2DIGIT                ;00-23
    time-minute  = 2DIGIT                ;00-59

10.  Example: Authors' vCards

      BEGIN:VCARD
      VERSION:4.0
      FN:Simon Perreault
      N:Perreault;Simon;;;ing. jr.,M.Sc.
      BDAY:1983-02-03
      GENDER:M
      ORG:Viagenie
      ADR;TYPE=work:;;2600 boul. Laurier\, suite 625;
       Quebec;QC;G1V 4W1;Canada
      TEL;TYPE=voice,work:tel:+1-418-656-9254;ext=102
      TEL;TYPE=fax,work:tel:+1-418-656-9257
      EMAIL;TYPE=internet,work:simon.perreault@viagenie.ca
      GEO:46.772673,-71.282945
      CLASS:PUBLIC
      KEY;VALUE=uri:http://www.viagenie.ca/simon.perreault/simon.asc
      END:VCARD


      BEGIN:VCARD
      VERSION:4.0
      FN:Pete Resnick
      N:Resnick;Pete;;;
      GENDER:M
      ORG:QUALCOMM Incorporated
      ADR;TYPE=work:;;5775 Morehouse Drive;San Diego;CA;92121-1714;US
      TEL;TYPE=voice:tel:+1-858-651-4478
      EMAIL;TYPE=internet:presnick@qualcomm.com
      URL:http://www.qualcomm.com/~presnick/
      END:VCARD

11.  Security Considerations

   o  Internet mail is subject to many well known security attacks,
      including monitoring, replay, and forgery.  Care should be taken
      by any directory service in allowing information to leave the
      scope of the service itself, where any access controls can no



Perreault & Resnick     Expires December 27, 2008              [Page 50]

Internet-Draft                    vCard                        June 2008


      longer be guaranteed.  Applications should also take care to
      display directory data in a "safe" environment (e.g., PostScript-
      valued types).

   o  vCards can carry cryptographic keys or certificates, as described
      in Section 7.8.2.

   o  Section 7.8.1 specifies a desired security classification policy
      for a particular vCard.  That policy is not enforced in any way.

   o  The vCard objects have no inherent authentication or privacy, but
      can easily be carried by any security mechanism that transfers
      MIME objects with authentication or privacy.  In cases where
      threats of "spoofed" vCard information is a concern, the vCard
      SHOULD BE transported using one of these secure mechanisms.

   o  The information in a vCard may become out of date.  In cases where
      the vitality of data is important to an originator of a vCard, the
      "URL" type described in Section 7.7.8 SHOULD BE specified.  In
      addition, the "REV" type described in section Section 7.7.4 can be
      specified to indicate the last time that the vCard data was
      updated.

12.  IANA Considerations

12.1.  Registering New vCard Elements

   This section defines the process for registering new or modified
   vCard elements (i.e. properties, parameters, value data types, and
   values) with IANA.

12.1.1.  Registration Procedure

   The IETF will create a mailing list, vcard@ietf.org [1], which can be
   used for public discussion of vCard element proposals prior to
   registration.  Use of the mailing list is strongly encouraged.  The
   IESG will appoint a designated expert who will monitor the
   vcard@ietf.org [1] mailing list and review registrations.

   Registration of new vCard elements MUST be reviewed by the designated
   expert and published in an RFC.  A Standard Tracks RFC is REQUIRED
   for the regisration of new value data types that modify existing
   properties.  A Standard Tracks RFC is also REQUIRED for registration
   of vCard elements that modify vCard elements previously documented in
   a Standard Tracks RFC.

   The registration procedure begins when a completed registration
   template, defined in the sections below, is sent to



Perreault & Resnick     Expires December 27, 2008              [Page 51]

Internet-Draft                    vCard                        June 2008


   vcard@ietf.org [1] and iana@iana.org [2].  The designated expert is
   expected to tell IANA and the submitter of the registration within
   two weeks whether the registration is approved, approved with minor
   changes, or rejected with cause.  When a registration is rejected
   with cause, it can be re-submitted if the concerns listed in the
   cause are addressed.  Decisions made by the designated expert can be
   appealed to the IESG Applications Area Director, then to the IESG.
   They follow the normal appeals procedure for IESG decisions.

12.1.2.  Vendor Namespace

   The vendor namespace is used for vCard elements associated with
   commercially available products.  "Vendor" or "producer" are
   construed as equivalent and very broadly in this context.

   A registration may be placed in the vendor namespace by anyone who
   needs to interchange files associated with the particular product.
   However, the registration formally belongs to the vendor or
   organization handling the vCard elements in the namespace being
   registered.  Changes to the specification will be made at their
   request, as discussed in subsequent sections.

   vCard elements belonging to the vendor namespace will be
   distinguished by the "VND-" prefix.  That may be followed, at the
   discretion of the registrant, by either a vCard element name from a
   well-known producer (e.g., "VND-MUDPIE") or by an IANA-approved
   designation of the producer's name that is followed by a vCard
   element designation (e.g., "VND-BIGCOMPANY-MUDPIE").

   While public exposure and review of vCard elements to be registered
   in the vendor namespace is not required, using the vcard@ietf.org [1]
   mailing list for review is strongly encouraged to improve the quality
   of those specifications.  Registrations in the vendor namespace may
   be submitted directly to the IANA.

12.1.3.  Registration Template for Properties

   A property is defined by completing the following template.

   Property name:  The name of the property.

   Purpose:  The purpose of the property.  Give a short but clear
      description.

   Value type:  Any of the valid value types for the property value
      needs to be specified.  The default value type also needs to be
      specified.




Perreault & Resnick     Expires December 27, 2008              [Page 52]

Internet-Draft                    vCard                        June 2008


   Property parameters:  Any of the valid property parameters for the
      property MUST be specified.

   Description:  Any special notes about the property, how it is to be
      used, etc.

   Format definition:  The ABNF for the property definition needs to be
      specified.

   Example(s):  One or more examples of instances of the property needs
      to be specified.

12.1.4.  Registration Template for Parameters

   A parameter is defined by completing the following template.

   Parameter name:  The name of the parameter.

   Purpose:  The purpose of the parameter.  Give a short but clear
      description.

   Description:  Any special notes about the parameter, how it is to be
      used, etc.

   Format definition:  The ABNF for the parameter definition needs to be
      specified.

   Example(s):  One or more examples of instances of the parameter needs
      to be specified.

12.1.5.  Registration Template for Value Data Types

   A value data type is defined by completing the following template.

   Value name:  The name of the value type.

   Purpose:  The purpose of the value type.  Give a short but clear
      description.

   Description:  Any special notes about the value type, how it is to be
      used, etc.

   Format definition:  The ABNF for the value type definition needs to
      be specified.







Perreault & Resnick     Expires December 27, 2008              [Page 53]

Internet-Draft                    vCard                        June 2008


   Example(s):  One or more examples of instances of the value type
      needs to be specified.

12.1.6.  Registration Template for Values

   A value is defined by completing the following template.

   Value:  The value literal.

   Purpose:  The purpose of the value.  Give a short but clear
      description.

   Conformance:  The vCard properties and/or parameters that can take
      this value needs to be specified.

   Example(s):  One or more examples of instances of the value needs to
      be specified.

   The following is a fictitious example of a registration of a vCard
   value:

   Value:  TOP-SECRET

   Purpose:  This value is used to specify the access classification of
      top-secret vCards.

   Conformance:  This value can be used with the "CLASS" property.

   Example(s):  The following is an example of this value used with the
      "CLASS" property:


     CLASS:TOP-SECRET

12.2.  Initial vCard Elements Registries

   The IANA is requested to create and maintain the following registries
   for vCard elements with pointers to appropriate reference documents.

12.2.1.  Properties Registry

   The following table is to be used to initialize the properties
   registry.








Perreault & Resnick     Expires December 27, 2008              [Page 54]

Internet-Draft                    vCard                        June 2008


            +-------------+---------+------------------------+
            | Property    | Status  | Reference              |
            +-------------+---------+------------------------+
            | SOURCE      | Current | RFCXXXX, Section 7.1.3 |
            | NAME        | Current | RFCXXXX, Section 7.1.4 |
            | KIND        | Current | RFCXXXX, Section 7.1.5 |
            | FN          | Current | RFCXXXX, Section 7.2.1 |
            | N           | Current | RFCXXXX, Section 7.2.2 |
            | NICKNAME    | Current | RFCXXXX, Section 7.2.3 |
            | PHOTO       | Current | RFCXXXX, Section 7.2.4 |
            | BDAY        | Current | RFCXXXX, Section 7.2.5 |
            | DDAY        | Current | RFCXXXX, Section 7.2.6 |
            | BIRTH       | Current | RFCXXXX, Section 7.2.7 |
            | DEATH       | Current | RFCXXXX, Section 7.2.8 |
            | GENDER      | Current | RFCXXXX, Section 7.2.9 |
            | ADR         | Current | RFCXXXX, Section 7.3.1 |
            | LABEL       | Current | RFCXXXX, Section 7.3.2 |
            | TEL         | Current | RFCXXXX, Section 7.4.1 |
            | EMAIL       | Current | RFCXXXX, Section 7.4.2 |
            | IMPP        | Current | RFCXXXX, Section 7.4.3 |
            | LANG        | Current | RFCXXXX, Section 7.4.4 |
            | TZ          | Current | RFCXXXX, Section 7.5.1 |
            | GEO         | Current | RFCXXXX, Section 7.5.2 |
            | TITLE       | Current | RFCXXXX, Section 7.6.1 |
            | ROLE        | Current | RFCXXXX, Section 7.6.2 |
            | LOGO        | Current | RFCXXXX, Section 7.6.3 |
            | AGENT       | Current | RFCXXXX, Section 7.6.4 |
            | ORG         | Current | RFCXXXX, Section 7.6.5 |
            | MEMBER      | Current | RFCXXXX, Section 7.6.6 |
            | RELATED     | Current | RFCXXXX, Section 7.6.7 |
            | CATEGORIES  | Current | RFCXXXX, Section 7.7.1 |
            | NOTE        | Current | RFCXXXX, Section 7.7.2 |
            | PRODID      | Current | RFCXXXX, Section 7.7.3 |
            | REV         | Current | RFCXXXX, Section 7.7.4 |
            | SORT-STRING | Current | RFCXXXX, Section 7.7.5 |
            | SOUND       | Current | RFCXXXX, Section 7.7.6 |
            | UID         | Current | RFCXXXX, Section 7.7.7 |
            | URL         | Current | RFCXXXX, Section 7.7.8 |
            | VERSION     | Current | RFCXXXX, Section 7.7.9 |
            | CLASS       | Current | RFCXXXX, Section 7.8.1 |
            | KEY         | Current | RFCXXXX, Section 7.8.2 |
            | FBURL       | Current | RFCXXXX, Section 7.9.1 |
            | CALADRURI   | Current | RFCXXXX, Section 7.9.2 |
            | CALURI      | Current | RFCXXXX, Section 7.9.3 |
            +-------------+---------+------------------------+






Perreault & Resnick     Expires December 27, 2008              [Page 55]

Internet-Draft                    vCard                        June 2008


12.2.2.  Parameters Registry

   The following table is to be used to initialize the parameters
   registry.

              +-----------+---------+----------------------+
              | Parameter | Status  | Reference            |
              +-----------+---------+----------------------+
              | LANGUAGE  | Current | RFCXXXX, Section 6.1 |
              | ENCODING  | Current | RFCXXXX, Section 6.2 |
              | VALUE     | Current | RFCXXXX, Section 6.3 |
              | PID       | Current | RFCXXXX, Section 6.4 |
              | TYPE      | Current | RFCXXXX, Section 6.5 |
              +-----------+---------+----------------------+

12.2.3.  Value Data Types Registry

   The following table is to be used to initialize the parameters
   registry.

           +-----------------+---------+----------------------+
           | Value Data Type | Status  | Reference            |
           +-----------------+---------+----------------------+
           | BINARY          | Current | RFCXXXX, Section 5.7 |
           | BOOLEAN         | Current | RFCXXXX, Section 5.4 |
           | DATE            | Current | RFCXXXX, Section 5.3 |
           | TIME            | Current | RFCXXXX, Section 5.3 |
           | DATE-TIME       | Current | RFCXXXX, Section 5.3 |
           | FLOAT           | Current | RFCXXXX, Section 5.6 |
           | INTEGER         | Current | RFCXXXX, Section 5.5 |
           | TEXT            | Current | RFCXXXX, Section 5.1 |
           | URI             | Current | RFCXXXX, Section 5.2 |
           +-----------------+---------+----------------------+

13.  Acknowledgements

   The authors would like to thank Frank Dawson and Tim Howes, the
   original authors of [RFC2425] and [RFC2426], as well as the following
   individuals who have participated in the drafting, review and
   discussion of this memo:

   Marc Blanchet, Stephane Bortzmeyer, Dan Brickley, Chris Bryant, Dany
   Cauchie, Darryl Champagne, Cyrus Daboo, Lisa Dusseault, Javier Godoy,
   Helge Hess, Alexander Mayrhofer, Chris Newman, Mark Paterson, Julian
   Reschke, Peter K. Sheerin, Anil Srivastava, and Kurt Zeilenga.

14.  References




Perreault & Resnick     Expires December 27, 2008              [Page 56]

Internet-Draft                    vCard                        June 2008


14.1.  Normative References

   [CCITT.E163.1988]       International Telephone and Telegraph
                           Consultative Committee, "Numbering Plan for
                           the International Telephone Service",
                           CCITT Recommendation E.163, 1988.

   [CCITT.X121.1988]       International Telephone and Telegraph
                           Consultative Committee, "International
                           Numbering Plan for the Public Data Networks",
                           CCITT Recommendation X.121, 1988.

   [CCITT.X520.1988]       International International Telephone and
                           Telegraph Consultative Committee,
                           "Information Technology - Open Systems
                           Interconnection - The Directory: Selected
                           Attribute Types", CCITT Recommendation X.520,
                           November 1988.

   [CCITT.X521.1988]       International International Telephone and
                           Telegraph Consultative Committee,
                           "Information Technology - Open Systems
                           Interconnection - The Directory: Selected
                           Object Classes", CCITT Recommendation X.521,
                           November 1988.

   [ISO.8601.1988]         International Organization for
                           Standardization, "Data elements and
                           interchange formats - Information interchange
                           - Representation of dates and times",
                           ISO Standard 8601, June 1988.

   [RFC2046]               Freed, N. and N. Borenstein, "Multipurpose
                           Internet Mail Extensions (MIME) Part Two:
                           Media Types", RFC 2046, November 1996.

   [RFC2047]               Moore, K., "MIME (Multipurpose Internet Mail
                           Extensions) Part Three: Message Header
                           Extensions for Non-ASCII Text", RFC 2047,
                           November 1996.

   [RFC2119]               Bradner, S., "Key words for use in RFCs to
                           Indicate Requirement Levels", BCP 14,
                           RFC 2119, March 1997.

   [RFC2425]               Howes, T., Smith, M., and F. Dawson, "A MIME
                           Content-Type for Directory Information",
                           RFC 2425, September 1998.



Perreault & Resnick     Expires December 27, 2008              [Page 57]

Internet-Draft                    vCard                        June 2008


   [RFC2426]               Dawson, F. and T. Howes, "vCard MIME
                           Directory Profile", RFC 2426, September 1998.

   [RFC2616]               Fielding, R., Gettys, J., Mogul, J., Frystyk,
                           H., Masinter, L., Leach, P., and T. Berners-
                           Lee, "Hypertext Transfer Protocol --
                           HTTP/1.1", RFC 2616, June 1999.

   [RFC2739]               Small, T., Hennessy, D., and F. Dawson,
                           "Calendar Attributes for vCard and LDAP",
                           RFC 2739, January 2000.

   [RFC2822]               Resnick, P., "Internet Message Format",
                           RFC 2822, April 2001.

   [RFC2978]               Freed, N. and J. Postel, "IANA Charset
                           Registration Procedures", BCP 19, RFC 2978,
                           October 2000.

   [RFC3629]               Yergeau, F., "UTF-8, a transformation format
                           of ISO 10646", STD 63, RFC 3629,
                           November 2003.

   [RFC3966]               Schulzrinne, H., "The tel URI for Telephone
                           Numbers", RFC 3966, December 2004.

   [RFC3986]               Berners-Lee, T., Fielding, R., and L.
                           Masinter, "Uniform Resource Identifier (URI):
                           Generic Syntax", STD 66, RFC 3986,
                           January 2005.

   [RFC4122]               Leach, P., Mealling, M., and R. Salz, "A
                           Universally Unique IDentifier (UUID) URN
                           Namespace", RFC 4122, July 2005.

   [RFC4288]               Freed, N. and J. Klensin, "Media Type
                           Specifications and Registration Procedures",
                           BCP 13, RFC 4288, December 2005.

   [RFC4646]               Phillips, A. and M. Davis, "Tags for
                           Identifying Languages", BCP 47, RFC 4646,
                           September 2006.

   [RFC4770]               Jennings, C. and J. Reschke, Ed., "vCard
                           Extensions for Instant Messaging (IM)",
                           RFC 4770, January 2007.

   [RFC5234]               Crocker, D. and P. Overell, "Augmented BNF



Perreault & Resnick     Expires December 27, 2008              [Page 58]

Internet-Draft                    vCard                        June 2008


                           for Syntax Specifications: ABNF", STD 68,
                           RFC 5234, January 2008.

   [oldreference_UNICODE]  The International Organization for
                           Standardization, "The Unicode Standard -
                           Version 2.0", The Unicode Consortium",
                           July 1996.

   [oldreference_VCARD]    Internet Mail Consortium, "vCard - The
                           Electronic Business Card Version 2.1",
                           September September.

14.2.  Informative References

   [ISO9070]               The International Organization for
                           Standardization, "ISO 9070, Information
                           Processing - SGML support facilities -
                           Registration Procedures for Public Text Owner
                           Identifiers", April 1991.

   [RFC3406]               Daigle, L., van Gulik, D., Iannella, R., and
                           P. Faltstrom, "Uniform Resource Names (URN)
                           Namespace Definition Mechanisms", BCP 66,
                           RFC 3406, October 2002.

   [WGS84]                 National Imagery and Mapping Agency,
                           "Department of Defense World Geodetic System
                           1984, Third Edition", NIMA TR8350.2,
                           January 2000.

URIs

   [1]  <mailto:vcard@ietf.org>

   [2]  <mailto:iana@iana.org>

Appendix A.  Differences from RFCs 2425 and 2426

   This appendix contains a list of changes that have been made in the
   vCard specification from RFCs 2425 and 2426.

A.1.  New Structure

   o  [RFC2425] and [RFC2426] have been merged.  Initially [RFC2425] was
      intended to be extensible but only 2426 ever extended it.

   o  vCard is now not only a MIME type but a stand-alone format.




Perreault & Resnick     Expires December 27, 2008              [Page 59]

Internet-Draft                    vCard                        June 2008


   o  A proper MIME type registration form has been included.

   o  UTF-8 is now the default character set.

   o  New vCard elements can be registered from IANA.

A.2.  Removed Features

   o  The group construct (i.e.  GROUP.PROPERTY:...) no longer exists.

   o  The CONTEXT and CHARSET parameters are no more.

   o  The MAILER property is no more.

   o  The "intl", "dom", "postal", and "parcel" TYPE parameter values
      for the ADR and LABEL properties have been removed.

   o  Inline vCards (such as the value of the AGENT property) are no
      longer supported.

A.3.  New Properties and Parameters

   o  The KIND, GENDER, LANG, DDAY, BIRTH, and DEATH properties have
      been added.

   o  [RFC2739], which defines the FBURL, CALADRURI, CAPURI, and CALURI
      properties, has been merged in.

   o  [RFC4770], which defines the IMPP property, has been merged in.

   o  The "work", "home", and "uri" TYPE parameter values for the EMAIL
      property have been added.

A.4.  Other Changes

   o  Synchronization is addressed in Section 8.

   o  The N property is no longer mandatory.

   o  The value of TEL is now a URI.

Appendix B.  Change Log (to be removed by RFC Editor prior to
             publication)

B.1.  Changes in -02






Perreault & Resnick     Expires December 27, 2008              [Page 60]

Internet-Draft                    vCard                        June 2008


   o  Removed useless text in IMPP description.

   o  Added CalDAV-SCHED example to CALADRURI.

   o  Removed CAPURI property.

   o  Dashes in dates and colons in times are now mandatory.

   o  Allow for dates such as 2008 and 2008-05 and times such as 07 and
      07:54.

   o  Removed inline vCard value.

   o  Made AGENT only accept URI references instead of inline vCards.

   o  Added the MEMBER property.

   o  Renamed the UID parameter to PID.

   o  Changed the value type of the PID parameter to "a small integer."

   o  Changed the presence of UID and PID when synchronization is to be
      used from MUST to SHOULD.

   o  Added the RELATED (Section 7.6.7) property.

   o  Fixed many ABNF typos (issue #252).

   o  Changed formatting of ABNF comments to make them easier to read
      (issue #226).

B.2.  Changes in -01

   o  Merged [RFC2739] in.

   o  Converted all foobar.com, abc.com, etc. to example.com.

   o  Fixed bugs in ABNF.

   o  Made explicit that coordinates in the GEO property are expressed
      in the WGS 84 reference system.

   o  Clarified folding issues with multi-byte characters.

   o  Made the value of TEL a URI.

   o  Added the UID parameter.




Perreault & Resnick     Expires December 27, 2008              [Page 61]

Internet-Draft                    vCard                        June 2008


   o  Made the UID property's value type a URI.

   o  Added Section 8.

   o  Created IANA process for registering new parameters, value types,
      and properties.

   o  Created the initial IANA registries.

   o  Created vendor namespace based on text from RFC 4288.

B.3.  Changes in -00

   o  Name change because draft has been accepted as WG item.
      Otherwise, same as draft-resnick-vcarddav-vcardrev-01.

   o  Removed reference to RFC 2234.

   o  Fixed errata from
      http://www.rfc-editor.org/errata_search.php?rfc=2426.

   o  Removed passage referring to RFC 2425 profiles.

   o  Renamed Section 7.4 from "Telecommunications Adressing Properties"
      to "Communications Properties.

   o  Added Appendix A and Appendix B.

   o  Added reference to [RFC4770].

   o  Removed the group construct.

   o  Made the N property no longer mandatory.

   o  Added the KIND property.

   o  Clarified meaning of TYPE parameter value for PHOTO, LOGO, KEY,
      and SOUND.

   o  Removed the CONTEXT parameter.

   o  Removed the MAILER property.

   o  Made reference to [ISO9070] informative.

   o  Removed "intl", "dom", "postal", and "parcel" TYPE parameter
      values for the ADR and LABEL properties.




Perreault & Resnick     Expires December 27, 2008              [Page 62]

Internet-Draft                    vCard                        June 2008


   o  Clarified meaning of "extended address" ADR field.

   o  Mentioned [RFC3406] as another method of generating PRODID values.

   o  Updated obsolete references.

   o  Allowed BDAY and DDAY value types to be text values for fuzzy
      dates.

   o  Removed the CHARSET property.  Now the encoding is always UTF-8,
      except when overridden by the Content-Type (which is considered a
      compatibility feature).

Authors' Addresses

   Simon Perreault
   Viagenie
   2600 boul. Laurier, suite 625
   Quebec, QC  G1V 4W1
   Canada

   Phone: +1 418 656 9254
   EMail: simon.perreault@viagenie.ca
   URI:   http://www.viagenie.ca


   Peter W. Resnick
   QUALCOMM Incorporated
   5775 Morehouse Drive
   San Diego, CA  92121-1714
   US

   Phone: +1 858 651 4478
   EMail: presnick@qualcomm.com
   URI:   http://www.qualcomm.com/~presnick/
















Perreault & Resnick     Expires December 27, 2008              [Page 63]

Internet-Draft                    vCard                        June 2008


Full Copyright Statement

   Copyright (C) The IETF Trust (2008).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.

Acknowledgements

   Funding for the RFC Editor function is provided by the IETF
   Administrative Support Activity (IASA).  This document was produced
   using xml2rfc v1.32 (of http://xml.resource.org/) from a source in
   RFC-2629 XML format.





Perreault & Resnick     Expires December 27, 2008              [Page 64]

