<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v5 rel. 3 U (http://www.xmlspy.com)
     by Daniel M Kohn (private) -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
]>

<!-- zzzz next line -->
<rfc category="info" ipr="trust200811" docName="draft-uzmi-smalta-00.txt">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="no" ?>
<?rfc compact="yes" ?>


    <front>
		<title abbrev="Smalta">FIB Aggregation with SMALTA</title>


	        <author initials ='Z' surname ='Uzmi' fullname='Zartash Uzmi'>
            <organization abbrev="LUMS">Lahore University of Management Sciences</organization>
            <address>
                <postal>
			<street>
			LUMS, D.H.A.
			</street>
                    <city>Lahore</city>
                  <!--  <region>the region</region>  -->
                    <code>54792</code>
                    <country>Pakistan</country>
                </postal>
                <phone>+92 42 35608202</phone>
                <email>zartash@gmail.com</email>
            </address>
        </author>
 

	        <author initials ='A' surname ='Tariq' fullname='Ahsan Tariq'>
            <organization abbrev="LUMS">Lahore University of Management Sciences</organization>
            <address>
                <postal>
			<street>
			LUMS, D.H.A.
			</street>
                    <city>Lahore</city>
                  <!--  <region>the region</region>  -->
                    <code>54792</code>
                    <country>Pakistan</country>
                </postal>
                <phone>+92 42 35608000</phone>
                <email>ahsan.tariq11@gmail.com</email>
            </address>
        </author>
 

	    <author initials ='P' surname ='Francis' fullname='Paul Francis'>
	           <organization abbrev="MPI-SWS">Max Planck Institute for Software Systems</organization>
            <address>
                <postal>
                    <street>Gottlieb-Daimler-Strasse</street>
                    <city>Kaiserslautern</city>
		    <!-- <region>NY</region> -->
                    <code>67633</code>
                    <country>Germany</country>
                </postal>
		<phone>+49 631 930 39600</phone>
                <email>francis@mpi-sws.org</email>
            </address> 
        </author>

	

	
	<!-- zzzz set date zzzz -->
	<date day="05" month="July" year="2010"/>

        <abstract>
		<t> 
Concerns about the growth of the global routing table has led to
proposals for short-term FIB-reduction and long-term RIB-reduction
solutions.  The simplest type of FIB-reduction solution is "FIB aggregation",
whereby individual routers locally reduce the FIB size without any 
changes to external operation.  The draft
<xref target="I-D.zhang-fibaggregation"></xref>
describes and analyzes several FIB aggregation schemes.
This current draft describes and analyzes another point in the design
space, called SMALTA.
Compared to the approaches in <xref target="I-D.zhang-fibaggregation"></xref>, SMALTA 
provides better aggregation and does not introduce non-routable entries
in the FIB, but is also more complex.
</t>
        </abstract>

    </front>

    <middle>

        <section title="Introduction">

				<t> 
FIB Aggregation is an approach to shrinking the size of a
router's FIB without requiring any changes to the external
behavior of the router.  While FIB Aggregation per se
is not a new idea, interest
has recently increased alongside the growing concern over global
routing table growth.  
FIB Aggregation represents a short-term but simple fix that can
extend the lifetime of existing routers as well as reduce FIB
size requirements for routers in the future.
The draft 
<xref target="I-D.zhang-fibaggregation"></xref>
provides a very good
overview of the problem space, and so is not repeated here.
<xref target="I-D.zhang-fibaggregation"></xref>
also describes four FIB Aggregation algorithms, called
Level 1 through Level 4, each 
adding complexity but providing better aggregation over its predecessor.
</t>
<t>
These 4 levels all have the characteristic that they require a
complete crawl through the FIB to produce full aggregation.
They can also be incrementally updated to respond to changes
in routes, but these incremental updates don't maintain full
aggregation.
The third and fourth levels have the characteristic that they introduce
non-routable space into the routing table.  In other words, packets
destined for prefixes that are not in the RIB, and would therefore
otherwise be dropped, may nevertheless be forwarded towards the
destination.
</t>
<t>
This draft introduces another FIB aggregation algorithm,
SMALTA, that can be viewed as a 5th level in that it
is yet more complex, and provides still better aggregation.
Like the first four levels, SMALTA's incremental updates cause
the FIB to deviate from its fully aggregated state and, therefore,
also requires a periodic re-compute of the full FIB.
Unlike the third and fourth levels, SMALTA introduces no non-routable
space into the FIB.  It is semantically identical to the non-aggregated
FIB.
</t>
<t>
In a nutshell, what distinguishes SMALTA from the first four
levels is the following.  In the first four levels, aggregation is
always done either by assigning a nexthop to an ancestor prefix, or by removing
nexthop(s) of descendent prefix(es).  
In other words, if there is a prefix in the pre-aggregated
tree, it will either remain unchanged or will be aggregated with a less specific
prefix in the aggregated tree. SMALTA provides additional reduction in the FIB by 
allowing prefixes to be de-aggregated i.e. to be split into one or more
specific prefixes.
</t>
</section>
	<section title="Requirements notation">
            <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
            "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
            and "OPTIONAL" in this document are to be interpreted as
	    described in 
	    <xref target="RFC2119"/>.
    </t>
        </section>

<section title="Design of SMALTA">
<t>
SMALTA is composed of two algorithms: the one-shot aggregation and an incremental update algorithm.
The implementations of these algorithms assume a binary tree structure, but is not limited to this
and can be easily applied to other data structures. Furthermore, similar to the example set in
<xref target="I-D.zhang-fibaggregation"></xref>, the one-shot aggregation and update algorithms in SMALTA 
do not introduce any new data
structure in the RIB or the FIB, using the existing structures that stores these tables.
</t>

<t>
SMALTA one-shot aggregation algorithm takes the current snapshot of the RIB and
produces an aggregated version of it. This aggregated table is downloaded to the
FIB, as a monolithic download, during router startup or after a BGP hard reset.
This algorithm can also be invoked at any time
to improve the amount of aggregation,
for example (i) at regular intervals to ensure that the number of entries in the
forwarding table remains small, (ii) when the FIB size exceeds a threshold, or
(iii) on-demand when there occurs a significant routing change such as addition
or deletion of a physical interface, changes to the IGP metrics or a BGP session
restart.
</t>
<t>
	The update algorithm incrementally incorporates any subsequent BGP updates 
	(withdraw or announce) into
the aggregated table. Any resulting change in the aggregated table is then
reflected in the FIB through an on-demand RIB to FIB download.
The update algorithm is efficient for single updates, but slightly
degrades the aggregated state of the table.
The update algorithm is invoked whenever there is a change in the primary
route of a prefix in the RIB. When that happens, SMALTA computes the necessary 
changes to the prefixes in the aggregated table.
Note that some changes to the aggregated table result in no required
changes to the FIB, and others may require multiple changes to the FIB.
<xref target="sec-analysis"></xref> gives results of measurements
showing the average and worst-case number of FIB changes per BGP update.
	</t>
<t>
	In the following sections, we provide examples that give the basic
	idea of how the SMALTA algorithms work.  
	Complete details are available in a technical report <xref target="TR.Uzmi-SMALTA"></xref>
</t>
<section title="Example 1:  Simple SMALTA One-Shot Aggregation">
				
<t>
Figure 1A represents an original (non-aggregated)
table with four prefixes, using the convention introduced in 
<xref target="I-D.zhang-fibaggregation"></xref>.

<figure>
	<artwork>
	<![CDATA[
	
               (C)              (C)
              /                /
             /                /
            ()               (A)
           /  \             /
          /    \           /
         (B)   (A)        ()
        /                   \
       /                     \
      (A)                    (B)

      ORIGINAL TABLE     ONE-SHOT AGGREGATED TABLE

        FIGURE 1A           FIGURE 1B
	]]>
	</artwork>
</figure>


Note that none of the Level 1 through Level 4 
algorithms can further aggregate 
this table. By contrast, SMALTA would aggregate this table
as shown in figure 1B.
</t>


<t>
With SMALTA,
the prefix with next hop B in the original table is de-aggregated in the 
  aggregated table. This de-aggregation 
  creates an opportunity for the prefixes with next hop A to be aggregated. 
  The resulting aggregated
  table is semantically equivalent to the original table.
</t>

<t>
SMALTA's one-shot aggregation is derived from ORTC
<xref target="Paper.Draves-ORTC"></xref>. 
Like its precursor, one-shot runs three passes over a tree data
structure:
<t><list style="numbers"> <!-- or hanging -->
<t>
A normalization pass in which the
prefixes are expanded such that every node in the binary tree has two or no
children,
</t>
<t>
A post-order traversal up the tree, wherein
each node is assigned a set of next hops, and
</t>
<t>
A pass where the algorithm assigns next hops to prefix nodes in
the tree starting from the root and traversing through to the leaves, removing
any unnecessary leaves.
</t>
</list></t>

Unlike ORTC, SMALTA one-shot is not provably optimal, though it is
very close to optimal.  This is because SMALTA places some minor
constraints on the ORTC algorithm in order to allow the aggregated
table and the original non-aggregated table to
be implemented as a single data structure.
</t>


</section>			
						
<section title="Example 2: SMALTA Update Algorithm for BGP WITHDRAW">

	<t>	 
	 To incorporate a withdraw for a prefix P1, the ownership of the IP space originally covered by P1
should be given up in favor of the next hop of its immediate ancestor prefix P in the original table. This is simply achieved by setting nexthop of P1 equal to that of P in
the aggregated table. Next we restore all nearest descendent prefixes of P1 if their nexthop does not 
match the new nexthop of P1. Finally, we reclaim the
space covered by the deaggregates of P1 by setting their nexthops equal to that of P.
	 </t>
	<t>	
Figure 2A shows the non-aggregated table before the withdraw, and
indicates to which prefix the withdraw occurs.
Figure 2B shows the non-aggregated table after the withdraw.
Figure 2C shows the aggregated table that would result from applying
the one-shot algorithm to the non-aggregated table of Figure 2A.
Note that as a result of one-shot, there is in fact no nexthop in
the entry to which the withdraw is being applied.
Figure 2D shows the aggregated table after applying the update
to the table of Figure 2C, using SMALTA update algorithm.
	</t>
          
<figure>
	<artwork><![CDATA[

               (C)                   (C)
              /                     /
             /                     /
            ()                    ()
           /  \                  /  \
          /    \                /    \
         (B)   (A)             (B)   (A)
        /
       /                    
      (A) <--- Withdraw     

      WITHDRAW IN           RESULT OF WITHDRAW
      ORIGINAL TABLE        ON ORIGINAL TABLE

      FIGURE 2A              FIGURE 2B
	]]>
	</artwork>
</figure>
<figure>
	<artwork>
	<![CDATA[


                         (C)                    (C)
                        /                      /
                       /                      /
                      (A)                    ()
                     /                      /  \
                    /                      /    \
                   ()                     ()    (A)
                  /  \                   /  \
                 /    \                 /    \
   Withdraw --> ()     (B)             (B)   (B)

  WITHDRAW IN AGGREGATED TABLE       RESULT OF WITHDRAW
                                     ON AGGREGATED TABLE
				   
	FIGURE 2C                       FIGURE 2D

]]>
	</artwork>
</figure>

</section>
<section title="Example 2: SMALTA Update Algorithm for BGP ANNOUNCE">

	 <t>
In order to incorporate an announce for a prefix P1, the IP address space of P1 should be assigned the
nexthop of P1 if that next hop does not match the next hop of P, the immediate ancestor of P1. Next,
all nearest descendent prefixes of P1 that have a nexthop that differs from the announced nexthop are restored. Finally, the deaggregate prefixes of P
that are specifics of P1 have their nexthops set to that of P1.
	</t>
<t>
Figures 3A and 3C give the non-aggregated and aggregated tables
respectively before the announce, and show to which prefix the
announce takes place (corresponding to Figures 2A and 2C).
Figure 3B shows the non-aggregated table after the BGP update, and
Figure 3D shows the aggregated table after the SMALTA update algorithm
is applied.
</t>

<figure>
	<artwork>
	<![CDATA[

          (C)                          (C)
          /                            /
         /                            /
        ()                           ()
       /  \                         /  \
      /    \                       /    \
     (B)   (A)                    (B)   (A)
    /  \                         /  \
   /    \                       /    \
  (A)   ()  <-- ANNOUNCE Q     (A)   (Q)

  ANNOUNCE IN                  RESULT OF ANNOUNCE
  ORIGINAL TABLE               ON ORIGINAL TABLE

  FIGURE 3A                    FIGURE 3B


]]>
	</artwork>
</figure>
<figure>
	<artwork>
	<![CDATA[

           (C)                         (C)
          /                           /
         /                           /
        (A)                         (A)
       /                           /
      /                           /
     ()                          ()
       \                           \
        \                           \
        (B) <-- ANNOUNCE Q          (Q)
   
    ANNOUNCE IN                 RESULT OF ANNOUNCE
    AGGREGATED TABLE            ON AGGREGATED TABLE
   
     FIGURE 3C                  FIGURE 3D


]]>
	</artwork>
</figure>

</section>
</section>

<section anchor = "sec-analysis" title="Analysis">

<section anchor = "subsec-one-shot" title="SMALTA One Shot Aggregation">
<t>
The extent of aggregation achieved by the SMALTA one-shot aggregation algorithm
is given in Table 1. This table also lists the number of entries in the 
aggregated table, obtained after applying Level 1 and Level 2 aggregation from 
<xref target="I-D.zhang-fibaggregation"></xref>. Level 3 and Level 4 aggregation
results are not provided because these levels create extra routable space and 
hence can not be fairly compared with the SMALTA one-shot aggregation algorithm 
which does not create any extra routable space. 
(The authors have also produced a version of SMALTA that does create
extra routable space, and provides substantially more aggregation than 
the version here.  This algorithm may be described in a future version.)
</t>

<t>
It can be seen from Table 1 that SMALTA one-shot algorithm consistently provides 
better aggregation as compared to that provided by Level 1 and Level 2 algorithms.
</t>

<t>
In Table 1:
</t>
	      <t> #(OT) = Number of entries in the original table</t>
	      <t> #(AT one-shot) = Number of entries in aggregated table after applying SMALTA one-shot algorithm. (% of #(OT) is also shown)</t>
	      
	      <t>#Level 1 Aggregation = Number of entries in FIB after applying Level 1 Aggregation
	      								  <xref target="I-D.zhang-fibaggregation"></xref>.</t>
	           
	      <t>#Level 2 Aggregation = Number of entries in FIB after applying Level 2 Aggregation  
	      								<xref target="I-D.zhang-fibaggregation"></xref>.</t>

<figure>
	<artwork><![CDATA[
	
   +=======+========+==========+=============+==============+
   | Year  |#(OT)   | #(AT)    | #Level 1    | #Level 2     |	
   |       |        |(one-shot)| Aggregation | Aggregation  |  
   +-------+--------+----------+-------------+--------------+
   | 2004  | 160818 | 54340    | 103565      |  69572       |
   |	   |	    | (33.7%)  | (64.39%)    |  (43.2%)     |
   +-------+--------+----------+-------------+--------------+
   | 2005  | 176474 | 55801    | 109169      |  73169       |
   |	   |        | (31.6%)  | (61.86%)    |  (41.4%)     | 
   +-------+--------+----------+-------------+--------------+
   | 2006  | 203082 | 75356    | 139763      |  96993       |
   |	   |	    | (37.1%)  | (68.8%)     |  (47.7%)     |
   +-------+--------+----------+-------------+--------------+
   | 2007  | 240162 | 83282    | 161147      |  110065      |
   |	   |	    | (34.6%)  | (67.0%)     |  (45.8%)     |
   +-------+--------+----------+-------------+--------------+
   | 2008  | 269532 | 84170    | 178676      |  117139      |
   |       |	    | (31.2%)  | (66.2%)     |  (43.4%)     |
   +=======+========+==========+=============+==============+
	
TABLE 1: FIB Aggregation with SMALTA one-shot and comparison with
         Level 1 and Level 2 aggregation.
	
]]></artwork>
</figure></section>
<section anchor = "subsec-update-processing" title="Update Processing in SMALTA">
<t>A single BGP update may change the primary route for a single prefix. This may,
in turn, change the next hop for multiple prefixes (or for no prefix) in the 
aggregated table. Table 2 shows the number of prefixes in the aggregated table whose
next hop is modified (either changed or removed) as a result of a single 
change in the primary route of a prefix. These modified entries are then added 
or deleted from the aggregated FIB through RIB to FIB download. As indicated in
Table 2, the average number of such modified entries remains small
over various years.
</t>

<t>
It may be noted that when aggregation is not used, a change in the primary route
of a prefix is translated to precisely one RIB to FIB download. Thus, on average,
the number of RIB to FIB downloads in SMALTA are comparable to the number of RIB
to FIB downloads when no aggregation is used.
</t>
<t>The table also shows the maximum number of entries modified in the aggregated 
table as a result of a single change in primary route for a prefix. This worst 
case usually occurs when a BGP update arrives for very short prefixes (/8 in 
most cases). This is expected because shorter prefixes
represent a larger IP address space, with the possibility that a larger number
of more specific prefixes will fall within that space.
</t>
<figure>
	<artwork><![CDATA[
   +======+========+==============+===============+=================+
   | Year | No. of | Avg #entries | Max. #entries | Prefix for Max. |
   |      | updates| modified     | modified      | modified        |    
   +------+--------+--------------+---------------+-----------------+
   | 2004 | 86904  | 1.0494       | 300           |  /8             |
   +------+--------+--------------+---------------+-----------------+
   | 2005 | 140920 | 1.0962       | 157           |  /8             |
   +------+--------+--------------+---------------+-----------------+
   | 2006 | 121651 | 0.9660       | 499           |  /8             |
   +------+--------+--------------+---------------+-----------------+
   | 2007 | 246634 | 1.3141       | 376           |  /11            |
   +------+--------+--------------+---------------+-----------------+
   | 2008 | 240802 | 0.4031       | 64            |  /8             |
   +======+========+==============+===============+=================+
TABLE 2: Number of entries modified when directly incorporating updates
	 into aggregated table	]]>
	</artwork>
</figure>
</section>

<section title="Updates and Aggregated Table Size">
<t>
SMALTA one-shot aggregation is performed only infrequently. In between two episodes
of one-shot aggregation, any BGP updates are incorporated using the SMALTA 
update algorithm. When incorporating the BGP updates incrementally,
it is important to track how the size of the aggregated table changes. Ideally,
we would want to keep the FIB in its fully aggregated state (what would have 
resulted from one-shot aggregation).
</t>
<t>We used the routeviews tables from 2004 to 2008, one table from each year,
and applied a corresponding update trace to the aggregated table using SMALTA 
update algorithm. The resulting number of entries (in the aggregated table),
as a percentage of the number of un-aggregated entries, are shown in Table 3.
</t>
<t>
Table 3 also indicates the number of entries in the aggregated table if SMALTA
one-shot algorithm is applied after incorporating the updates in the original
un-aggregated table.
</t>

<figure>
	<artwork><![CDATA[
   +======+========+========================+=========================+
   | Year | No. of | #entries in aggregated | #entries in aggregated  |
   |      | updates| table (SMALTA update)  | table (SMALTA one-shot) |
   |      |        |  (% of unaggregated)   |  (% of unaggregated)    |
   +------+--------+------------------------+-------------------------+
   | 2004 | 86904  | 35.50                  | 34.38                   |
   +------+--------+------------------------+-------------------------+
   | 2005 | 140920 | 36.69                  | 33.08                   |
   +------+--------+------------------------+-------------------------+
   | 2006 | 121651 | 45.51                  | 39.9                    |
   +------+--------+------------------------+-------------------------+
   | 2007 | 246634 | 60.18                  | 40.25                   |
   +------+--------+------------------------+--------------------------
   | 2008 | 240802 | 32.99                  | 31.72                   |
   +======+========+========================+=========================+
TABLE 3: Number of Entries in the aggregated table after applying
	 updates using (i) SMALTA one-shot, and (ii) SMALTA update	]]>
	</artwork>
</figure>
</section>

</section>

<section anchor="sec-iana" title="IANA Considerations">
<t>
There are no IANA considerations.
</t>
</section>

<section anchor="sec-consider" title="Security Considerations">
<t>
Because SMALTA does not change the external behavior of a router,
there are no security considerations.
</t>

</section>


    </middle>

    <back>

<references title='Normative References'>&rfc2119;


</references>




<references title='Informative References'>

<reference anchor='TR.Uzmi-SMALTA'>
<front>
<title>Prefix Aggregation with SMALTA</title>
<author initials='Z.' surname='Uzmi' fullname='Z. A. Uzmi'>
<organization /></author>
<author initials='S.' surname='Jawad' fullname='S. Jawad'>
<organization /></author>
<author initials='A.' surname='Tariq' fullname='A. Tariq'>
<organization /></author>
<author initials='P.' surname='Francis' fullname='P. Francis'>
<organization /></author>
<date year='2010' month='July' />
<abstract>
<t>The abstract goes in here.</t></abstract></front>
<seriesInfo name="Technical Report" value="URL http://www.mpi-sws.org/~zartash/TR-MPI-SMALTA.pdf" />
</reference>

<reference anchor='Paper.Draves-ORTC'>
<front>
<title>Optimal Routing Table Constructor</title>
<author initials='R.' surname='Draves' fullname='R. P. Draves'>
<organization /></author>
<author initials='J.' surname='Doe' fullname='J. Doe'>
<organization /></author>
<date year='1999' month='July' />
</front>
<seriesInfo name="INFOCOM" value="1999" />
</reference>

<reference anchor='I-D.zhang-fibaggregation'>
<front>
<title>FIB Aggregation</title>

<author initials='B' surname='Zhang' fullname='Beichuan Zhang'>
    <organization />
</author>

<author initials='L' surname='Wang' fullname='Lan Wang'>
    <organization />
</author>

<author initials='X' surname='Zhao' fullname='Xin Zhao'>
    <organization />
</author>

<author initials='Y' surname='Liu' fullname='Yaoqing Liu'>
    <organization />
</author>

<author initials='L' surname='Zhang' fullname='Lixia Zhang'>
    <organization />
</author>

<date month='October' day='26' year='2009' />

<abstract><t>The rapid growth of Forwarding Information Base (FIB) has raised concerns among many Internet Service Providers.  One potential solution to this problem is FIB aggregation, i.e. letting each router aggregate its FIB entries without affecting the forwarding paths taken by data traffic.  It is a simple local software optimization within a router, requiring no changes to routing protocols or router hardware.  To understand the effectiveness of using FIB aggregation to extend router lifetime, in this draft we present several FIB aggregation algorithms and evaluate their performance using routing tables and updates collected from tens of networks.  Our results show that FIB aggregation can reduce the FIB table size by as much as 70% with small computational overhead.  We also show that the computational overhead can be controlled through various mechanisms.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-zhang-fibaggregation-02' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-zhang-fibaggregation-02.txt' />
</reference>


</references>
	    

</back>

</rfc>

