<?xml version="1.0" encoding="utf-8"?>
<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by Fred Baker (private) -->
<!DOCTYPE rfc SYSTEM "http://xml.resource.org/authoring/rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<rfc category="std" docName="draft-ietf-ospf-auth-trailer-ospfv3-00"
     ipr="trust200902">

  <front>
    <title abbrev="Auth Trailer for OSPFv3">Supporting Authentication Trailer for OSPFv3</title>

    <author fullname="Manav Bhatia" initials="M.B." surname="Bhatia">
      <organization>Alcatel-Lucent</organization>
      <address>
        <postal>
          <street></street>
          <city>Bangalore</city>
          <code></code>
          <region></region>
          <country>India</country>
        </postal>
        <phone></phone>
        <email>manav.bhatia@alcatel-lucent.com</email>
      </address>
    </author>

    <author fullname="Vishwas" initials="V.M." surname="Manral">
      <organization>IP Infusion</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <code></code>
          <region></region>
          <country>USA</country>
        </postal>
        <phone></phone>
        <email>vishwas@ipinfusion.com</email>
      </address>
    </author>

    <author fullname="Acee Lindem" initials="A.C." surname="Lindem">
      <organization>Ericsson</organization>
      <address>
        <postal>
          <street>102 Carric Bend Court</street>
          <city>Cary</city>
          <code>NC 27519</code>
          <region></region>
          <country>USA</country>
        </postal>
        <phone></phone>
        <email>acee.lindem@ericsson.com</email>
      </address>
    </author>

    <date day="11" month="January" year="2011" />

    <area>Routing Area</area>
    <workgroup>OSPF Working Group</workgroup>

    <abstract>
      <t>Currently OSPFv3 uses IPsec for authenticating protocol packets. 
			However, there are some environments, e.g., Mobile Ad-hoc Networks (MANETs), 
			where IPsec is difficult to configure and maintain, and this mechanism 
            cannot be used. This draft proposes an alternative mechanism that 
            can be used so that OSPFv3 does not depend upon IPsec for authentication.
      </t>
    </abstract>
  </front>

  <middle>

        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in RFC2119 <xref
        target="RFC2119"></xref>.</t>

        <t>When used in lowercase, these words convey their typical use in
        common language, and are not to be interpreted as described in RFC2119
        <xref target="RFC2119"></xref>.</t>
  

    <section title="Introduction">
      <t> Unlike Open Shortest Path First version 2 (OSPFv2) <xref target="RFC2328"></xref>, 
		OSPF for IPv6 (OSPFv3)  <xref target="RFC5340"></xref>, does not include the  AuType 
		and Authentication fields in its headers for authenticating protocol packets.
		 Instead, OSPFv3 relies on the IPv6 Authentication Header (AH)<xref target="RFC4302"></xref> 
		and IPv6 Encapsulating Security Payload (ESP) <xref target="RFC4303"></xref>
		to provide integrity, authentication, and/or confidentiality.
   </t> <t>
	<xref target="RFC4522"></xref> describes how IPv6 AH and ESP extension headers can 
		be used to provide authentication and/or confidentiality to OSPFv3.
	</t> <t>
		However, there are some environments, e.g., Mobile Ad-hoc Networks (MANETs), 
		where IPsec is difficult to configure and maintain, and this mechanism 
		cannot be used.  There is also an issue with IPsec not being available on
		some platforms or it requiring an additional license.
  </t> <t>
		<xref target="RFC4522"></xref>  discusses, at length, the reasoning behind 
		using manually configured keys, rather than some automated key management 
		protocol such as IKEv2 <xref target="RFC5996"></xref> . The primary problem 
		is the lack of suitable key management mechanism, as OSPF adjacencies 
		are formed on a one-to-many basis and most key management mechanisms
		are designed for a one-to-one communication model. This forces the system 
		administrator to use manually configured security associations (SAs) and
		cryptographic keys to provide the authentication and, if desired, confidentiality services.
	</t> <t>
		Regarding replay protection  <xref target="RFC4522"></xref>  states that:
	</t> <t>
		"As it is not possible as per the current standards to provide
		  complete replay protection while using manual keying, the 
		  proposed solution will not provide protection against replay 
		  attacks."
	</t> <t>
		Since there is no replay protection provided there are a number of 
		vulnerabilities in OSPFv3 which have been discussed in 
		<xref target="RFC6039"></xref>.
	</t> <t>
		Since there is no deterministic way to differentiate between encrypted and 
		unencrypted ESP packets by simply examining the packet, it could become
		 tricky for some implementations to prioritize certain OSPFv3 packets 
		(Hellos for example) over the others.

	</t> <t> This draft proposes a new mechanism that works similar to OSPFv2 
		<xref target="RFC5709"></xref>for providing authentication to the OSPFv3 
        packets and attempts to solve the problems described above for OSPFv3. 

 	</t><t> Additionally this document describes how HMAC-SHA authentication 
		can be used for OSPFv3. </t>
   <t> By definition, HMAC (<xref target="RFC2104"></xref> , <xref target="FIPS-198"></xref>) 
		requires a cryptographic hash function. This document proposes to use any one of 
		SHA-1, SHA-256, SHA-384, or SHA-512 <xref target="FIPS-180-3"></xref> 
		to authenticate the OSPFv3 packets.
	</t><t>  It is believed that <xref target="RFC2104"></xref> is mathematically 
		identical to <xref target="FIPS-198"></xref> and it is also believed that 
		algorithms in <xref target="RFC4634"></xref> are mathematically identical
		 to <xref target="FIPS-180-3"></xref>.
	</t> </section>

      <section title="Proposed Solution">
	<t> To perform non-IPsec cryptographic authentication, OSPFv3
		routers append a special data block, henceforth referred to as, the
		authentication trailer to the end of the OSPFv3 packets. The length
		of the authentication trailer is not included into the length of the
		OSPFv3 packet, but is included in the IPv6 payload length. </t>

<figure title='Figure 1: Authentication Trailer in OSPFv3'>
	 <artwork align='center'>
 +---------------------+ --              --  +---------------------+
 | IPv6 Header         | ^               ^   | IPv6 Header         |
 | Length = HL+X       | | Header Length |   | Length = HL+X+Y     |
 |                     | v               v   |                     |
 +---------------------+ --              --  +---------------------+
 | OSPF Header         | ^               ^   | OSPFv3 Header       |
 | Length = X          | |               |   | Length = X          |
 |                     | |               |   |                     |
 |.....................| | X             | X |.....................|
 |                     | |               |   |                     |
 | OSPFv3 Data         | |               |   | OSPFv3 Data         |
 |                     | v               v   |                     |
 +---------------------+ --              --  +---------------------+
                                         ^   |                     |
                                         |   | Authentication      |
                                         | Y ~ Trailer             ~
                                         |   |                     |
                                         v   |                     |
                                         --  +---------------------+

	</artwork>
         </figure>

	<t> For the sake of consistency and simplicity the authentication
		trailer in the OSPFv3 packets MUST be inserted before the 
		link local signalling (LLS)  <xref target="RFC5613"></xref>
 		block, if it exists. This is inline with the authentication mechanism
		that currently exists for OSPFv2.
	</t>
<section title="AT-Bit in Options Field">
 <t> A new AT-bit (AT stands for Authentication Trailer) is introduced
       into the OSPFv3 Options field. OSPFv3 routers MUST set the AT-bit in 
       OSPFv3 Hello and Database Description packets to indicate that the 
	   OSPFv3 router will include the authentication trailer in all
	   OSPFv3 packets on the link. In other words, the authentication 
       trailer is only examined if the AT-bit
       is set.</t>
<figure title='Figure 2: OSPFv3 Options Field'>
	 <artwork align='center'>

0                   1                      2
0 1 2 3 4 5 6 7 8 9 0 1 2 3  4 5  6 7 8  9 0 1  2 3
+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+--+-+-+--+-+-+--+-+--+
| | | | | | | | | | | | | |AT|L|AF|*|*|DC|R|N|MC|E|V6|
+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+--+-+-+--+-+-+--+-+--+

	</artwork>
         </figure>
	<t> The AT-bit must be set in all OSPFv3 protocol packets that contain an
		authentication trailer.</t>
</section>
 <section anchor="BasicOp" title="Basic Operation">
      <t> The procedure followed for computing the Authentication Trailer
		 is exactly the same as described in <xref target="RFC5709"></xref> 
		and <xref target="RFC2328"></xref>.
		</t><t> The way the authentication data is carried in the Authentication
		Trailer is very similar to how its done in case of <xref target="RFC2328"></xref>.
		The only difference between this mechanism and OSPFv2's authentication 
		mechanism is that for OSPFv3 some additional authentication information
		 in addition to the message digest, is appended to the protocol packet.
		</t> </section>
</section>
<section anchor="OSPFv3SA" title="OSPFv3 Security Association">
	<t> An OSPFv3 Security Association (SA) contains a set of parameters 
		shared between any two legitimate OSPFv3 speakers. 
	</t><t> Parameters associated with an OSPFv3 SA: </t>
	 <t><list style="symbols">
	<t> Key Identifier (Key ID)  <vspace blankLines="1" />
		This is a 32-bit unsigned integer used to uniquely identify an OSPFv3 SA, 
		as manually configured by the network operator.<vspace blankLines="1" />

		The receiver determines the active SA by looking at the Key ID 
		field in the incoming protocol packet. <vspace blankLines="1" />

		The sender based on the active configuration, selects an SA 
		to use and puts the correct Key ID value associated with the SA
		in the OSPFV3 protocol packet. If multiple valid and active OSPFv3 
		SAs exist for a given interface, the sender may use any
	   of those SAs to protect the packet.<vspace blankLines="1" />

		Using Key IDs makes changing keys while maintaining protocol operation convenient. 
		Each key ID specifies two independent parts, the authentication protocol 
		and the authentication key, as explained below. <vspace blankLines="1" />

		Normally, an implementation would allow the network operator to configure a 
		set of keys in a key chain, with each key in the chain having fixed lifetime. 
		The actual operation of these mechanisms is outside the scope of this document.<vspace blankLines="1" />

		Note that each key ID can indicate a key with a different authentication protocol. 
		This allows the introduction of new authentication mechanisms without 
		disrupting existing OSPFv3 adjacencies.

	 </t>
	<t> Authentication Algorithm <vspace blankLines="1" />
		This signifies the authentication algorithm to be used with the 
		OSPFv3 SA. This information is never sent in cleartext over the wire. 
		Because this information is not sent on the wire, the implementer 
		chooses an implementation specific representation for this information. <vspace blankLines="1" />

		At present, the following values are possible: <vspace blankLines="1" />
		
		HMAC-SHA-1, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512.
	</t>
	<t> Authentication Key <vspace blankLines="1" />
		This value denotes the cryptographic authentication key associated
		 with the OSPFv3 SA. The length of this key is variable and depends 
		upon the authentication algorithm specified by the OSPFv3 SA.
	</t>
	 </list> </t>
</section>

<section anchor="Auth Procedure" title="Authentication Procedure">
      <t>
<section anchor="Auth trailer" title="Authentication Trailer">
	<t>The authentication trailer that is appended to the OSPFv3 
	protocol packet is described below:
	</t>

<figure title='Figure 3: Authentication Trailer Format'>
	 <artwork align='center'>

 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|              0                |    Key ID     | Auth Data Len | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                 Cryptographic Sequence Number                 | 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                Authentication Data (Variable)                 |
~                                                               ~
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

	</artwork>
         </figure>

	<t> The idea is to keep the fields as similar as possible with OSPFv2 so that 
			most of the source code can be reused for authenticating the OSPFv3 
			protocol packets. <vspace blankLines="1" />

			The various fields in the Authentication trailer are:
	</t>
	 <t><list style="symbols">
	<t>  Reserved <vspace blankLines="1" />

			16-bit reserved field. The value MUST be initialized to zero by the 
			sender, and MUST be ignored by the receiver. </t>

	<t>  Key ID (Identifier) <vspace blankLines="1" />

			32-bit field that identifies the algorithm and the secret key used
			 to create the message digest appended to the OSPFv3 
			protocol packet. Key Identifiers are unique per-interface. </t>
	
	<t>  Cryptographic Sequence Number <vspace blankLines="1" />		

		32-bit non-decreasing sequence number that is used to guard against replay attacks.	</t>

	<t>  Authentication Data <vspace blankLines="1" />
	 Variable data that is carrying the digest of the protocol packet. </t>
	</list></t>
</section>
	<section anchor="Crypto Auth Procedure" title="Cryptographic Authentication Procedure">
	<t> As noted earlier the algorithms used to generate and verify
		 the message digest are specified implicitly by the secret key. This 
		specification discusses the computation of OSPFv3 Cryptographic Authentication 
		data when any of the NIST SHS family of algorithms is used in the Hashed 
		Message Authentication Code (HMAC) mode. <vspace blankLines="1" />		

		The currently valid algorithms (including mode) for OSPFv3 Cryptographic 
		Authentication include: <vspace blankLines="1" />	

		HMAC-SHA-1, HMAC-SHA-256, HMAC-SHA-384 and HMAC-SHA-512
		<vspace blankLines="1" />	

		Of the above, implementations of this specification MUST include support for at least 
		HMAC-SHA-1 and SHOULD include support for HMAC-SHA-256 and MAY also 
		include support for HMAC-SHA-384 and HMAC-SHA-512.
	</t>
	</section>
<section anchor="Crypto Aspects" title="Cryptographic Aspects">
	<t> In the algorithm description below, the following nomenclature, which 
	is consistent with <xref target="FIPS-198"></xref>, is used:<vspace blankLines="1" />	

	H is the specific hashing algorithm (e.g. SHA-256). <vspace blankLines="1" />	

	K is the Authentication Key for the OSPFv3 security association.<vspace blankLines="1" />	
 
	Ko is the cryptographic key used with the hash algorithm.<vspace blankLines="1" />	

	B is the block size of H, measured in octets rather than bits.<vspace blankLines="1" />	

	Note that B is the internal block size, not the hash size. </t>
	
   <list style="empty"> <t> For SHA-1 and SHA-256:   B == 64 </t>
     <t>For SHA-384 and SHA-512: B == 128 </t>
	</list>

<t> L is the length of the hash, measured in octets rather than bits.<vspace blankLines="1" />	

	XOR is the exclusive-or operation. <vspace blankLines="1" />	
	Opad is the hexadecimal value 0x5c repeated B times. <vspace blankLines="1" />	
	Ipad is the hexadecimal value 0x36 repeated B times. <vspace blankLines="1" />	
	Apad is the hexadecimal value 0x878FE1F3 repeated (L/4) times.<vspace blankLines="1" />	

	Implementation Note:	<vspace blankLines="1" />	

	This definition of Apad means that Apad is always the same length as the hash output. 

	<list style="numbers"> 
	 <t> Preparation of the Key<vspace blankLines="1" />	
		In this application, Ko is always L octets long. <vspace blankLines="1" />
		If the Authentication Key (K) is L octets long, then Ko is 
	   equal to K.  If the Authentication Key (K) is more than L 
	   octets long, then Ko is set to H(K).  If the Authentication 
	   Key (K) is less than L octets long, then Ko is set to the 
	   Authentication Key (K) with zeros appended to the end of the 
	   Authentication Key (K) such that Ko is L octets long. </t>

	<t> First Hash<vspace blankLines="1" />
		First, the OSPFv3 packet's Authentication Trailer (which is 
	   very similar to the appendage described in RFC 2328, Section 
	   D.4.3, Page 233, items(6)(a) and (6)(d)) is filled with the 
	   value Apad.<vspace blankLines="1" />
		Then, a First-Hash, also known as the inner hash, is computed 
	   as follows:<list style="empty"> <t> 
		First-Hash = H(Ko XOR Ipad || (OSPFv3 Packet))</t></list>
		Implementation Notes:<list style="empty"> <t> 
		Note that the First-Hash above includes the 
       Authentication Trailer containing the Apad value, as well 
       as the OSPFv3 packet, as per RFC 2328, Section D.4.3.</t> </list>
		The definition of Apad (above) ensures it is always the same
	   length as the hash output.  This is consistent with RFC 2328.
	   The "(OSPFv3 Packet)" mentioned in the First-Hash (above) 
	   does include the OSPF Authentication Trailer. <vspace blankLines="1" />

	   The digest length for SHA-1 is 20 bytes; for SHA-256, 32 
	   bytes; for SHA-384, 48 bytes; and for SHA-512, 64 bytes. </t>

	<t> Second Hash <vspace blankLines="1" />
		Then a second hash, also known as the outer hash, is 
	   computed as follows:<vspace blankLines="1" />
		<list style="empty"> <t> Second-Hash = H(Ko XOR Opad || First-Hash) </t> </list>
	</t>

	<t> Result <vspace blankLines="1" />
		The resulting Second-Hash becomes the authentication data 
   that is sent in the Authentication Trailer of the OSPFv3 
   packet. The length of the authentication data is always 
   identical to the message digest size of the specific hash 
   function H that is being used. <vspace blankLines="1" />

   This also means that the use of hash functions with larger 
   output sizes will also increase the size of the OSPFv3 packet 
   as transmitted on the wire.<vspace blankLines="1" />

   Implementation Note: <list style="empty"> <t> 
	RFC 2328, Appendix D specifies that the Authentication 
      Trailer is not counted in the OSPF packet's own Length 
      field, but is included in the packet's IP Length field.
      Similar to this, the Authentication Trailer is not 
      included in OSPFv3's own Length field, but is included
      in IPv6's payload length. </t></list>
	</t>		
	</list>
</t> </section>
	<section anchor="Verification" title="Message Verification">
      <t> A router would determine that OSPFv3 is using an Authentication
		trailer by examining the AT-bit in the Options field in the OSPFv3 header
		for Hello and Database Description packets. The specification in the
		Hello and Database description options indicates that other OSPFv3
		packets will include the authentication trailer.<vspace blankLines="1" />

		Authentication algorithm dependent processing needs to be 
		performed, using the algorithm specified by the appropriate 
		OSPFv3 SA for the received packet. <vspace blankLines="1" />

		Before an implementation performs any processing it needs to save
		the values of the Authentication data field from the Authentication 
		Trailer appended to the OSPFv3 packet.<vspace blankLines="1" />

		It should then set the Authentication data field with Apad before the 
		authentication data is computed. The calculated data is compared with 
		the received authentication data in the Authentication trailer and the 
		packet MUST be discarded if the two do not match. In such a case, 
		an error event SHOULD be logged. <vspace blankLines="1" />

		An implementation MAY have a transition mode where it includes the 
		Authentication Trailer in the packets but does not verify this information. 
		This is provided as a transition aid for networks in the process of migrating 
		to the mechanism described in this draft.		
	 </t>
	</section>
		</t>
</section>
    <section anchor="Security" title="Security Considerations">
      <t>The document proposes extensions to OSPFv3 which would make it 
			more secure than what it is today. It does not provide confidentiality 
			as a routing protocol contains information that does not need to be kept 
			secret. It does, however, provide means to authenticate the sender of the packets 
			which is of interest to us.<vspace blankLines="1" />

			It should be noted that authentication method described in this document is 
			not being used to authenticate the specific originator of a packet, but is 
			rather being used to confirm that the packet has indeed been issued by a 
			router which had access to the password.<vspace blankLines="1" />

			The mechanism described here is not perfect and does not need to be perfect. 
			Instead, this mechanism represents a significant increase in the work 
			function of an adversary attacking the OSPFv3 protocol, while not causing 
			undue implementation, deployment, or operational complexity. 
</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>IANA is requested to allocate AT-bit in the OSPFv3 "Options Registry"</t>
    </section>   
  </middle>

  <back>
    <references title="Normative References">
      <?rfc ?>
<?rfc include='reference.RFC.2119'?>

       <?rfc include='reference.RFC.2328'?>

      <?rfc include='reference.RFC.5709'?>
 
    </references>

    <references title="Informative References">
      <?rfc ?>
	  <?rfc include='reference.RFC.5340'?>
	  <?rfc include='reference.RFC.4522'?>    
	  <?rfc include='reference.RFC.5996'?>    
	  <?rfc include='reference.RFC.4302'?>    
	  <?rfc include='reference.RFC.4303'?>    
	  <?rfc include='reference.RFC.2104'?>  
    <?rfc include='reference.RFC.4634'?>    
    <?rfc include='reference.RFC.5613'?> 
<?rfc include='reference.RFC.6039'?>
      <?rfc include='reference.I-D.hartman-ospf-analysis'?>
     
<reference anchor="FIPS-180-3">
        <front>
          <title>Secure Hash Standard (SHS)</title>
          <author initials="" surname="US National Institute of Standards & Technology">
            <organization>Unknown</organization>
          </author>
       <date month="October" year="2008" />
        </front>
        <seriesInfo name="FIPS PUB 180-3" value="" />
      </reference>

<reference anchor="FIPS-198">
        <front>
          <title> The  Keyed-Hash Message Authentication Code (HMAC)</title>
         <author initials="" surname="US National Institute of Standards & Technology">
            <organization>Unknown</organization>
          </author>
       <date month="March" year="2002" />
        </front>
        <seriesInfo name="FIPS PUB 198" value="" />
      </reference>


    </references>

  </back>
</rfc>
