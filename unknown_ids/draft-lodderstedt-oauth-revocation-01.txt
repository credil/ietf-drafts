


Open Authentication Protocol                         T. Lodderstedt, Ed.
Internet-Draft                                       Deutsche Telekom AG
Intended status: Standards Track                               S. Dronia
Expires: July 14, 2011                             SYRACOM Consulting AG
                                                        January 10, 2011


                            Token Revocation
                 draft-lodderstedt-oauth-revocation-01

Abstract

   This draft proposes an additional endpoint for OAuth authorization
   servers for revoking tokens.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on July 14, 2011.

Copyright Notice

   Copyright (c) 2011 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Lodderstedt & Dronia      Expires July 14, 2011                 [Page 1]

Internet-Draft              Token Revocation                January 2011


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 3
   2.  Token Revocation  . . . . . . . . . . . . . . . . . . . . . . . 3
   3.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . 5
   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 5
   5.  Security Considerations . . . . . . . . . . . . . . . . . . . . 5
   6.  Informative References  . . . . . . . . . . . . . . . . . . . . 5
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . . . 5










































Lodderstedt & Dronia      Expires July 14, 2011                 [Page 2]

Internet-Draft              Token Revocation                January 2011


1.  Introduction

   The current OAuth 2.0 draft [draft-ietf-oauth-v2-11] defines several
   ways for a client to obtain refresh and access tokens.  This
   specification supplements the draft with a mechanism to revoke both
   types of tokens and facilitates the following use cases.

   o  The end-user triggers revocation from within the client that sends
      the appropriate revocation request to the autorization server.
      From the end-user's perspective, this looks like a "logout" or
      "reset" function.  The request causes the removal of the client
      permissions associated with the particular token to access the
      end-user's protected resources.  This use case makes it even more
      comfortable to the end-user to revoke his access grant immediately
      via the client.

   o  In contrast to revocation by a client, the authorization server
      (or a related entity) may offer its end-users a self-care portal
      to delete access grants given to clients independent of any token
      storing devices.  Such a portal offers the possibility to an end-
      user to look at and revoke all access grants he once authorized.
      In cases the token storing device is not available, e.g. it is
      lost or stolen, revocation by a self-care portal is the only
      possibility to limit or avoid abuse.

   In the end, security, usability, and ease of use are increased by
   token revocation.

   By using an additional endpoint, the token revocation endpoint,
   clients can request the revocation of a particular token.  Compliant
   implementation MUST support the revocation of refresh tokens, access
   token revocation MAY be supported.


2.  Token Revocation

   The client requests the revocation of a particular token by making an
   HTTP "POST" request to the token revocation endpoint.  The location
   of the token revocation endpoint can be found in the authorization
   servers documentation, or can be obtained by using [[OAuth Discovery
   ]].  The token endpoint URI MAY include a query component.

   Since requests to the token revocation endpoint result in the
   transmission of plain text credentials in the HTTP request, the
   authorization server MUST require the use of a transport-layer
   security mechanism when sending requests to the token revocation
   endpoints.  Authorization servers MUST support TLS 1.2 as defined in
   [RFC5246], and MAY support additional transport-layer security



Lodderstedt & Dronia      Expires July 14, 2011                 [Page 3]

Internet-Draft              Token Revocation                January 2011


   mechanisms.

   The client authenticates with the authorization server by adding its
   client credentials to the request as described in Section 3 of
   [draft-ietf-oauth-v2-11].

   The client constructs the request by including the following
   parameters using the "application/x-www-form-urlencoded" format in
   the HTTP request entity-body:

   token   REQUIRED.  The token that the client wants to get revoked.

   token_type  REQUIRED.  The type of the token to be revoked, either
           "refresh_token" or "access_token".  Information about the
           supported token types can be found in the authorization
           server's documentation, or can be obtained by using [[OAuth
           Discovery ]].

   For example, a client may request the revocation of a refresh token
   with the following request (line breaks are for display purposes
   only):

        POST /revoke HTTP/1.1
        Host: server.example.com
        Content-Type: application/x-www-form-urlencoded

        token=45ghiukldjahdnhzdauz&token_type=refresh_token&
        client_id=s6BhdRkqt3&client_secret=gX1fBat3bV

   The authorization server first verifies whether the client is
   authorized to revoke the particular token based on the client
   credentials and its policy.  For example, only the client the token
   has been issued for might be allowed to revoke it.  It is also
   conceivable to allow a dedicated user self-care portal to revoke all
   kinds of tokens.

   In the next step, the authorization server invalidates the token.
   Whether the revocation takes effect instantly or with some delay
   depends on the architecture of the particular deployment.  The client
   MUST NOT make any assumptions about the timing and MUST NOT use the
   token again.

   If the processed token is a refresh token and the authorization
   server supports the revocation of access tokens, then the
   authorization server MUST also invalidate all access tokens issued
   for that refresh token.

   The authorization server indicates a successful processing of the



Lodderstedt & Dronia      Expires July 14, 2011                 [Page 4]

Internet-Draft              Token Revocation                January 2011


   request by a HTTP status code 204.  Status code 401 indicates a
   failed client authentication, whereas a status code 403 is used if
   the client is not authorized to revoke the particular token.  For all
   other error conditions, a status code 400 is used along with an error
   response as defined in section 5.3. of [draft-ietf-oauth-v2-11].  The
   following error codes are defined for the token revocation endpoint:

   unsupported_token_type  The authorization server does not support the
           revocation of the presented token type.  I.e. the client
           tried to revoke an access token on a server not supporting
           this feature.

   invalid_token  The presented token is invalid.


3.  Acknowledgements

   We would like to thank Sebastian Ebling and Christian Stuebner for
   their valuable feedback.


4.  IANA Considerations

   This draft includes no request to IANA.


5.  Security Considerations

   All relevant security considerations have been given in the
   functional specification.


6.  Informative References

   [draft-ietf-oauth-v2-11]
              Hammer-Lahav, E., Ed., Recordon, D., and D. Hardt, "The
              OAuth 2.0 Protocol draft-ietf-oauth-v2-11", December 2010,
              <http://tools.ietf.org/html/draft-ietf-oauth-v2-11>.


Authors' Addresses

   Dr.-Ing. Torsten Lodderstedt (editor)
   Deutsche Telekom AG

   Email: torsten@lodderstedt.net





Lodderstedt & Dronia      Expires July 14, 2011                 [Page 5]

Internet-Draft              Token Revocation                January 2011


   Stefanie Dronia
   SYRACOM Consulting AG

   Email: sdronia@gmx.de















































Lodderstedt & Dronia      Expires July 14, 2011                 [Page 6]


