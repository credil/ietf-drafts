<?xml version="1.0"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY ccittx5201988 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml2/reference.CCITT.X520.1988.xml'>
  <!ENTITY ccitte1631988 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml2/reference.CCITT.E163.1988.xml'>
  <!ENTITY ccittx5211988 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml2/reference.CCITT.X521.1988.xml'>
  <!ENTITY ccittx1211988 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml2/reference.CCITT.X121.1988.xml'>
  <!ENTITY iso86011988 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml2/reference.ISO.8601.1988.xml'>
  <!ENTITY rfc2425 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2425.xml'>
  <!ENTITY rfc2426 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2426.xml'>
  <!ENTITY rfc2046 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2046.xml'>
  <!ENTITY rfc2119 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
  <!ENTITY rfc2047 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2047.xml'>
  <!ENTITY rfc2822 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2822.xml'>
  <!ENTITY rfc3629 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3629.xml'>
  <!ENTITY rfc2616 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2616.xml'>
  <!ENTITY rfc2739 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2739.xml'>
  <!ENTITY rfc2978 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2978.xml'>
  <!ENTITY rfc3406 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3406.xml'>
  <!ENTITY rfc3966 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3966.xml'>
  <!ENTITY rfc3986 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml'>
  <!ENTITY rfc4122 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4122.xml'>
  <!ENTITY rfc4288 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4288.xml'>
  <!ENTITY rfc4646 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4646.xml'>
  <!ENTITY rfc4770 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4770.xml'>
  <!ENTITY rfc5234 PUBLIC '' 
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml'>
]>

<?rfc rfcedstyle="yes" ?>
<?rfc rfcprocack="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?><!-- default = 3 -->
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="full3978" docName="draft-ietf-vcarddav-vcardrev-02" category="std"
    obsoletes="2425, 2426, 4770"
    updates="2739">

<front>
  <title abbrev="vCard">vCard Format Specification</title>
        <author initials="S." surname="Perreault" fullname="Simon Perreault">
            <organization>Viagénie</organization>
             <address>
                 <postal>
                     <street>2600 boul. Laurier, suite 625</street>
                     <city>Québec</city>
                     <region>QC</region>
                     <code>G1V 4W1</code>
                     <country>Canada</country>
                 </postal>
                 <phone>+1 418 656 9254</phone>
                 <email>simon.perreault@viagenie.ca</email>
                 <uri>http://www.viagenie.ca</uri>
            </address>
      </author>
        <author initials="P." surname="Resnick" fullname="Peter W. Resnick">
            <organization>QUALCOMM Incorporated</organization>
            <address>
                <postal>
                    <street>5775 Morehouse Drive</street>
                    <city>San Diego</city>
                    <region>CA</region>
                    <code>92121-1714</code>
                    <country>US</country>
                </postal>
                <phone>+1 858 651 4478</phone>
                <email>presnick@qualcomm.com</email>
                <uri>http://www.qualcomm.com/~presnick/</uri>
            </address>
        </author>
  <date year="2008"/>
  <area>Applications</area>
  <keyword>vcard</keyword>
  <abstract>
  <t>
    This document defines the vCard data format for representing and exchanging
    a variety of information about an individual (e.g., formatted and structured
    name and delivery addresses, email address, multiple telephone numbers,
    photograph, logo, audio clips, etc.).
  </t>
  </abstract>
</front>

<middle>
    
<section title="Introduction">
  <t>Note: This draft contains much of the same text as 2425 and 2426 which may
    not be correct. Those two RFCs have been merged and the structure of this
    draft is what's new. Some vCard-specific suggestions have been added, but
    for the most part this is still very open. But we'd like to get feedback on
    the structure mostly so that it may be fixed.</t>
  <t>Electronic address books have become ubiquitous. Their increased presense
    on portable, connected devices as well as the diversity of platforms
    exchanging contact data call for a standard. This memo defines the vCard
    format, which allows the capture and exchange of information normally stored
    within an address book or directory
    application.</t>
</section>

<section title="Conventions" anchor="oldsection_Abstract">
  <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document
    are to be interpreted as described in <xref target="RFC2119"/>.</t>
</section>

<section title="MIME Type Registration" anchor="mime_type_registration">

  <t>
    <list style="hanging">
      <t hangText="To:">ietf-types@iana.org</t>

      <t hangText="Subject:">Registration of media type text/vcard</t>

      <t hangText="Type name:">text</t>

      <t hangText="Subtype name:">vcard</t>

      <t hangText="Required parameters:">none</t>

      <t hangText="Optional parameters:">charset</t>

      <t hangText="Encoding considerations:">The "charset" MIME parameter is
        interpreted as defined in <xref target="RFC2046"/>, section 4.1.2. If it
        is omitted, the default encoding is UTF-8 as defined in <xref
          target="RFC3629"/>.</t>

      <t hangText="Security considerations:">See <xref
          target="security_considerations"/>.</t>

      <t hangText="Interoperability considerations:">The text/vcard media type
        is intended to identify vCard data of any version.  There are older
        specifications of vCard <xref target="RFC2426"/><xref
          target="oldreference_VCARD"/> still in common use. While
        these formats are similar, they are not strictly compatible. In general,
        it is necessary to inspect the value of the VERSION property (see <xref
          target="VERSION"/>) for identifying the standard to which a
        given vCard object conforms.</t>

      <t>In addition, the following media types are known to have been used to
        refer to vCard data. They should be considered deprecated in favor of
        text/vcard.
        <list style="symbols">
          <t>text/directory</t>
          <t>text/directory; type=vcard</t>
          <t>text/x-vcard</t>
        </list>
      </t>

      <t hangText="Published specification:">draft-ietf-vcarddav-vcardrev-02</t>

      <t hangText="Applications that use this media type:">They are numerous,
        diverse, and include mail user agents, instant messaging clients,
        address book applications, directory servers, customer relationship
        management software, etc.</t>

      <t hangText="Additional information:">
        <list style="hanging">
          <t hangText="Magic number(s):"></t>
          <t hangText="File extension(s):">.vcf</t>
          <t hangText="Macintosh file type code(s):"></t>
        </list>
      </t>

      <t hangText="Person & email address to contact for further
        information:">Simon Perreault &lt;simon.perreault@viagenie.ca&gt;</t>

      <t hangText="Intended usage:">COMMON</t>

      <t hangText="Restrictions on usage:">none</t>

      <t hangText="Author:">Simon Perreault and Pete Resnick</t>

      <t hangText="Change controller:">IETF</t>

    </list>
  </t>

</section>

<section title="vCard Format Specification">

  <t>The text/vcard MIME content type (hereafter known as "vCard") contains
    contact information, typically pertaining to a single contact or group of
    contacts.  The content consists of one or more lines in the format given
    below.</t>

  <section title="Line Delimiting and Folding" anchor="folding">

    <t>Individual lines within vCard are delimited by the <xref
        target="RFC2822"/> line break, which is a CRLF sequence (ASCII decimal
      13, followed by ASCII decimal 10). Long logical lines of text can be split
      into a multiple-physical-line representation using the following folding
      technique. Content lines SHOULD be folded to a maximum width of 75 octets.
      Multi-octet characters MUST remain contiguous. The rationale for this
      folding process can be found in <xref target="RFC2822"/>, Section
      2.1.1.</t>

    <t>A logical line MAY be continued on the next physical line anywhere
      between two characters by inserting a CRLF immediately followed by a
      single white space character (space, ASCII decimal 32, or horizontal tab,
      ASCII decimal 9).  At least one character must be present on the folded
      line. Any sequence of CRLF followed immediately by a single white space
      character is ignored (removed) when processing the content type.  For
      example the line:</t>
    <figure><artwork>
  DESCRIPTION:This is a long description that exists on a long line.
    </artwork></figure>
    <figure>
      <preamble>can be represented as:</preamble>
      <artwork>
  DESCRIPTION:This is a long description
   that exists on a long line.
      </artwork>
    </figure>
    <figure>
      <preamble>It could also be represented as:</preamble>
      <artwork>
  DESCRIPTION:This is a long descrip
   tion that exists o
   n a long line.
      </artwork>
    </figure>

    <t>The process of moving from this folded multiple-line representation of a
      property definition to its single line representation is called unfolding.
      Unfolding is accomplished by regarding CRLF immediately followed by a
      white space character (namely HTAB ASCII decimal 9 or SPACE ASCII decimal
      32) as equivalent to no characters at all (i.e., the CRLF and single white
      space character are removed).
      <list>
        <t>Note: It is possible for very simple implementations to generate
          improperly folded lines in the middle of a UTF-8 multi-octet sequence.
          For this reason, implementations SHOULD unfold lines in such a way as
          to properly restore the original sequence.</t>
      </list>
    </t>


    <t>Folding is done after any content encoding of a type value. Unfolding is
      done before any decoding of a type value in a content line.</t>

  </section>

  <section title="ABNF Format Definition">

    <t>The following ABNF uses the notation of <xref target="RFC5234"/>, which
      also defines CRLF, WSP, DQUOTE, VCHAR, ALPHA, and DIGIT.  After the
      unfolding of any folded lines as described above, the syntax for a line of
      this content type is as follows:</t>

    <figure>
      <artwork>
   contentline  = name *(";" param) ":" value CRLF
      ; When parsing a content line, folded lines MUST first
      ; be unfolded according to the unfolding procedure
      ; described above.
      ; When generating a content line, lines longer than 75
      ; characters SHOULD be folded according to the folding
      ; procedure described above.

   name         = x-name / iana-token

   iana-token   = 1*(ALPHA / DIGIT / "-")
      ; identifier registered with IANA

   x-name       = "x-" 1*(ALPHA / DIGIT / "-")
      ; Names that begin with "x-" or "X-" are
      ; reserved for experimental use, not intended for released
      ; products, or for use in bilateral agreements.

   param        = param-name "=" param-value *("," param-value)

   param-name   = x-name / iana-token

   param-value  = ptext / quoted-string

   ptext  = *SAFE-CHAR

   value = *VALUE-CHAR
         / valuespec      ; valuespec defined in section 5.8.4

   quoted-string = DQUOTE *QSAFE-CHAR DQUOTE

   NON-ASCII    = %x80-FF
      ; use restricted by charset parameter
      ; on outer MIME object (UTF-8 preferred)

   QSAFE-CHAR   = WSP / %x21 / %x23-7E / NON-ASCII
      ; Any character except CTLs, DQUOTE

   SAFE-CHAR    = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E / NON-ASCII
      ; Any character except CTLs, DQUOTE, ";", ":", ","

   VALUE-CHAR   = WSP / VCHAR / NON-ASCII
      ; any textual character
      </artwork>
    </figure>

    <t>A line that begins with a white space character is a continuation of the
      previous line, as described above. The white space character and
      immediately preceeding CRLF should be discarded when reconstructing the
      original line. Note that this line-folding convention differs from that
      found in <xref target="RFC2822"/>, in that the sequence
      &lt;CRLF&gt;&lt;WSP&gt; found anywhere in the content indicates a
      continued line and should be removed.</t>

    <t>Property names and parameter names are case insensitive (e.g., the
      property name "fn" is the same as "FN" and "Fn"). Parameter values MAY be
      case sensitive or case insensitive, depending on their definition.</t>

    <t>Each property defined in a vCard instance MAY have multiple values. The
      general rule for encoding multi-valued properties is to simply create a
      new content line for each value (including the property name).  However,
      it should be noted that some value types support encoding multiple values
      in a single content line by separating the values with a comma ",".  This
      approach has been taken for several of the content types defined below
      (date, time, integer, float), for space-saving reasons.</t>

  </section>

</section>

<section title="Property Value Data Types">

  <t>Lists of values are delimited by a list delimiter, specified by the COMMA
    character (ASCII decimal 44). A COMMA character in a value MUST be escaped
    with a BACKSLASH character (ASCII decimal 92).</t>

  <t>Compound type values are delimited by a field delimiter, specified by the
    SEMI-COLON character (ASCII decimal 59). A SEMI-COLON in a component of a
    compound property value MUST be escaped with a BACKSLASH character (ASCII
    decimal 92).</t>

  <t>Standard value types are defined below.</t>

  <figure>
    <artwork>
   valuespec =  text-list
              / URI               ; from Appendix A of [RFC3986]
              / date-list
              / time-list
              / date-time-list
              / boolean
              / integer-list
              / float-list
              / binary
              / utc-offset
              / iana-valuespec

   text-list = *TEXT-LIST-CHAR *("," *TEXT-LIST-CHAR)

   TEXT-LIST-CHAR = "\\" / "\," / "\n"
                  / &lt;any VALUE-CHAR except , or \ or newline&gt;
       ; Backslashes, newlines, and commas must be encoded.
       ; \n or \N can be used to encode a newline.

   date-list = date *("," date)

   time-list = time *("," time)

   date-time-list = date "T" time *("," date "T" time)

   boolean = "TRUE" / "FALSE"

   integer-list = integer *("," integer)

   integer = [sign] 1*DIGIT

   float-list = float *("," float)

   float = [sign] 1*DIGIT ["." 1*DIGIT]

   sign = "+" / "-"

   binary = &lt;A "B" binary encoded string as defined by [RFC2047].&gt;

   date = date-fullyear ["-" date-month ["-" date-mday]]

   date-fullyear = 4DIGIT

   date-month = 2DIGIT      ;01-12

   date-mday = 2DIGIT       ;01-28, 01-29, 01-30, 01-31
                            ;based on month/year

   time = time-hour [":" time-minute [":" time-second [time-secfrac]]]
           [time-zone]

   time-hour = 2DIGIT       ;00-23

   time-minute = 2DIGIT     ;00-59

   time-second = 2DIGIT     ;00-60 (leap second)

   time-secfrac = "," 1*DIGIT

   time-zone = "Z" / time-numzone

   time-numzome = sign time-hour [":"] time-minute

   utc-offset = ("+" / "-") time-hour ":" time-minute

   iana-valuespec = &lt;a publicly-defined valuetype format, registered
                     with IANA, as defined in section 12 of this
                     document&gt;
    </artwork>
  </figure><!-- TODO: update ref -->

  <section title="TEXT" anchor="TEXT">
    <t>"text": The "text" value type should be used to identify values that
      contain human-readable text. The character set in which the text is
      represented is controlled by the "charset" MIME type parameter. Note that
      there is no way to override this parameter on a per-property basis. As for
      the language, it is controlled by the "language" property parameter
      defined in <xref target="LANGUAGE"/>.</t>

    <figure>
      <preamble>Examples for "text":</preamble>
      <artwork>
    this is a text value
    this is one value,this is another
    this is a single value\, with a comma encoded
      </artwork>
    </figure>

    <t>A formatted text line break in a text value type MUST be represented as
      the character sequence backslash (ASCII decimal 92) followed by a Latin
      small letter n (ASCII decimal 110) or a Latin capital letter N (ASCII
      decimal 78), that is "\n" or "\N".</t>

    <figure>
      <preamble>For example a multiple line DESCRIPTION value of:</preamble>
      <artwork>
    Mythical Manager
    Hyjinx Software Division
    BabsCo, Inc.
      </artwork>
    </figure>

    <figure>
      <preamble>could be represented as:</preamble>
      <artwork>
    DESCRIPTION:Mythical Manager\nHyjinx Software Division\n
     BabsCo\, Inc.\n
      </artwork>
      <postamble>demonstrating the \n literal formatted line break technique,
        the CRLF-followed-by-space line folding technique, and the backslash
        escape technique.</postamble>
    </figure>
  </section>
    
  <section title="URI" anchor="URI">
    <t>"uri": The "uri" value type should be used to identify values that are
      referenced by a URI (including a Content-ID URI), instead of encoded
      in-line. These value references might be used if the value is too large,
      or otherwise undesirable to include directly. The format for the URI is as
      defined in <xref target="RFC3986"/>. Note that the value of a property of
      type "uri" is what the URI points to, not the URI itself.</t>

    <figure>
      <preamble>Examples for "uri":</preamble>
      <artwork>
    http://www.example.com/my/picture.jpg
    ldap://ldap.example.com/cn=babs%20jensen
      </artwork>
    </figure>
  </section>

  <section title="DATE, TIME, and DATE-TIME" anchor="DATE_TIME">
    <t>"date", "time", and "date-time": Each of these value types is based on a
      subset of the definitions in <xref target="ISO.8601.1988"/> standard.
      Multiple "date" and "time" values can be specified using the
      comma-separated notation.</t>

    <figure>
      <preamble>Examples for "date":</preamble>
      <artwork>
    1985-04-12
    1996-08-05,1996-11-11
    19850412
      </artwork>
    </figure>

    <figure>
      <preamble>Examples for "time":</preamble>
      <artwork>
    10:22:00
    102200
    10:22:00.33
    10:22:00.33Z
    10:22:33,11:22:00
    10:22:00-08:00
      </artwork>
    </figure>

    <figure>
      <preamble>Examples for "date-time":</preamble>
      <artwork>
    1996-10-22T14:00:00Z
    1996-08-11T12:34:56Z
    19960811T123456Z
    1996-10-22T14:00:00Z,1996-08-11T12:34:56Z
      </artwork>
    </figure>
  </section>

  <section title="BOOLEAN" anchor="BOOLEAN">
    <t>"boolean": The "boolean" value type is used to express boolen values.
      These values are case insensitive.</t>

    <figure>
      <preamble>Examples:</preamble>
      <artwork>
    TRUE
    false
    True
      </artwork>
    </figure>
  </section>

  <section title="INTEGER" anchor="INTEGER">
    <t>"integer": The "integer" value type is used to express signed integers in
      decimal format. If sign is not specified, the value is assumed positive
      "+". Multiple "integer" values can be specified using the comma-separated
      notation.</t>

    <figure>
      <preamble>Examples:</preamble>
      <artwork>
    1234567890
    -1234556790
    +1234556790,432109876
      </artwork>
    </figure>
  </section>

  <section title="FLOAT" anchor="FLOAT">
    <t>"float": The "float" value type is used to express real numbers.  If sign
      is not specified, the value is assumed positive "+". Multiple "float"
      values can be specified using the comma-separated notation.</t>

    <figure>
      <preamble>Examples:</preamble>
      <artwork>
    20.30
    1000000.0000001
    1.333,3.14
      </artwork>
    </figure>
  </section>

  <section title="BINARY" anchor="BINARY">
    <t>"binary": The "binary" value type specifies that the type value is
      inline, encoded binary data. This value type can be specified in the
      PHOTO, LOGO, SOUND, and KEY types.</t>

    <t>If inline encoded binary data is specified, the ENCODING type parameter
      MUST be used to specify the encoding format. The binary data MUST be
      encoded using the "B" encoding format. Long lines of encoded binary data
      SHOULD BE folded to 75 characters using the folding method defined in
      <xref target="folding"/>.</t>
  </section>

  <section title="UTC-OFFSET" anchor="UTC-OFFSET">
    <t>"utc-offset": The "utc-offset" value type specifies that the type value
      is a signed offset from UTC. This value type can be specified in the TZ
      type.</t>

    <t>The value type is an offset from Coordinated Universal Time (UTC). It is
      specified as a positive or negative difference in units of hours and
      minutes (e.g., +hh:mm). The time is specified as a 24-hour clock. Hour
      values are from 00 to 23, and minute values are from 00 to 59. Hour and
      minutes are 2-digits with high order zeroes required to maintain digit
      count. The extended format for ISO 8601 UTC offsets MUST be used. The
      extended format makes use of a colon character as a separator of the hour
      and minute text fields.</t>
  </section>

</section>

<section title="Property Parameters" anchor="parameters">

  <t>A property can have attributes associated with it.  These "property
    parameters" contain meta-information about the property or the property
    value.</t> 

  <t>Property parameter values that contain the COLON (US-ASCII decimal 58),
    SEMICOLON (US-ASCII decimal 59) or COMMA (US-ASCII decimal 44) character
    separators MUST be specified as quoted-string text values.  Property
    parameter values MUST NOT contain the DQUOTE (US-ASCII decimal 22)
    character.  The DQUOTE (US-ASCII decimal 22) character is used as a
    delimiter for parameter values that contain restricted characters or URI
    text.  For example:</t>

  <figure>
    <artwork>
  FN;PID=8:Jane Doe
    </artwork>
  </figure>

  <t>Property parameter values that are not in quoted strings are case
    insensitive.</t>

  <t>The general property parameters defined by this memo are defined by the
    following notation:</t>

  <figure>
    <artwork>
       vcardparameter = encodingparam
                      / valuetypeparam
                      / languageparam
                      / uidparam

       encodingparam = "encoding" "=" encodingtype

       encodingtype = "b"       ; from [RFC2047]
                  / iana-token  ; registered as described in
                                ; section 12 of this document

       valuetypeparam = "value" "=" valuetype

       valuetype = "uri"        ; URI from Appendix A of [RFC3986]
                  / "text"
                  / "date"
                  / "time"
                  / "date-time" ; date time
                  / "integer"
                  / "boolean"
                  / "float"
                  / x-name
                  / iana-token  ; registered as described in
                                ; section 12 of this document

       languageparam = "language" "=" Language-Tag
           ; Language-Tag is defined in section 2.1 of RFC 4646

       uidparam = "uid" "=" URI  ; from Appendix A of [RFC3986]
    </artwork>
  </figure>

  <t>Applications MUST ignore x-param and iana-param value they don't
    recognize.</t>

  <section title="LANGUAGE" anchor="LANGUAGE">
    <t>The "language" property parameter is used to identify data in multiple
      languages.  There is no concept of "default" language, except as specified
      by any "Content-Language" MIME header parameter that is present.  The
      value of the "language" property parameter is a language tag as defined in
      Section 2 of <xref target="RFC4646"/>.</t>
  </section>

  <section title="ENCODING" anchor="ENCODING">
    <t>The "encoding" property parameter is used to specify an alternate
      encoding for a value.  If the value contains a CRLF, it must be encoded,
      since CRLF is used to separate lines in the content-type itself.
      Currently, only the "b" encoding is supported.</t>

    <t>The "b" encoding can also be useful for binary values that are mixed with
      other text information in the body part (e.g., a certificate).  Using a
      per-value "b" encoding in this case leaves the other information in a more
      readable form. The encoded base 64 value can be split across multiple
      physical lines by using the line folding technique described above.</t>

    <t>The Content-Transfer-Encoding header field is used to specify the
      encoding used for the body part as a whole. The "encoding" property
      parameter is used to specify an encoding for a particular value (e.g., a
      certificate).  In this case, the Content-Transfer-Encoding header might
      specify "8bit", while the one certificate value might specify an encoding
      of "b" via an "encoding=b" property parameter.</t>

    <t>The Content-Transfer-Encoding and the encodings of individual properties
      given by the "encoding" property parameter are independent of one another.
      When encoding a text/vcard body part for transmission, individual
      property encodings are performed first, then the entire body part is
      encoded according to the Content-Transfer-Encoding.  When decoding a
      text/vcard body part, the Content-Transfer-Encoding is decoded first,
      and then any individual properties with an "encoding" property parameter
      are decoded.</t>
  </section>

  <section title="VALUE" anchor="VALUE">
    <t>The "value" parameter is optional, and is used to identify the value type
      (data type) and format of the value.  The use of these predefined formats
      is encouraged even if the value parameter is not explicity used.  By
      defining a standard set of value types and their formats, existing parsing
      and processing code can be leveraged. The predefined data type values MUST
      NOT be repeated in COMMA separated value lists except within the N,
      NICKNAME, ADR and CATEGORIES properties.</t>

    <t>Including the value type explicitly as part of each property provides an
      extra hint to keep parsing simple and support more generalized
      applications.  For example a search engine would not have to know the
      particular value types for all of the items for which it is searching.
      Because the value type is explicit in the definition, the search engine
      could look for dates in any item type and provide results that can still
      be interpreted.</t>
  </section>

  <section title="PID" anchor="PID">
    <t>The "pid" parameter is used to uniquely identify the property. It plays a
      role analogous to the UID property (<xref target="UID"/>) on a
      per-property instead of per-vCard basis. It MUST NOT appear more than once
      in a given property, and SHOULD be present if synchronization is to be used.
      See <xref target="synchronization"/>. Its value is a small integer.</t>
  </section>

  <section title="TYPE" anchor="TYPE">
    <t>The "type" parameter has multiple, different uses. In general, it is a
      way of specifying class characteristics of the associated property. Most
      of the time, its value is a comma-separated subset of a pre-defined
      enumeration. In this document, the following properties make use of this
      parameter: PHOTO, ADR, LABEL, TEL, EMAIL, IMPP, LOGO, MEMBER, SOUND, and
      KEY.</t>
  </section>

</section>

<section title="vCard Properties" anchor="properties">

  <t>What follows is an enumeration of the standard vCard properties.</t>

  <section title="General Properties">

    <section title="BEGIN">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To denote the beginning of a syntactic entity
            within a text/vcard content-type.</t>
          <t hangText="Value type:">text</t>
          <t hangText="Special notes:">The content entity MUST begin with the
            BEGIN property with a value of "VCARD".</t>
          <t>The BEGIN property is used in conjunction with the END property to
            delimit an entity containing a related set of properties within an
            text/vcard content-type. This construct can be used instead of or in
            addition to wrapping separate sets of information inside additional
            MIME headers.  It is provided for applications that wish to define
            content that can contain multiple entities within the same
            text/vcard content-type or to define content that can be
            identifiable outside of a MIME environment.</t>
          <t hangText="Example:">
            <figure>
              <artwork>
      BEGIN:VCARD
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="END">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To denote the end of a syntactic entity
            within a text/vcard content-type.</t>
          <t hangText="Value type:">text</t>
          <t hangText="Special notes:">The content entity MUST end with the END
            type with a value of "VCARD".</t>
          <t>The END property is used in conjunction with the BEGIN property to
            delimit an entity containing a related set of properties within an
            text/vcard content-type.  This construct can be used instead of or
            in addition to wrapping separate sets of information inside
            additional MIME headers.  It is provided for applications that wish
            to define content that can contain multiple entities within the same
            text/vcard content-type or to define content that can be
            identifiable outside of a MIME environment.</t>
          <t hangText="Example:">
            <figure>
              <artwork>
      END:VCARD
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="SOURCE" anchor="SOURCE">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To identify the source of directory information
            contained in the content type.</t>
          <t hangText="Value type:">uri</t>
          <t hangText="Special notes:">The SOURCE property is used to provide the
            means by which applications knowledgable in the given directory
            service protocol can obtain additional or more up-to-date information
            from the directory service. It contains a URI as defined in <xref
              target="RFC3986"/> and/or other information referencing the
            vCard to which the information pertains. When directory information is
            available from more than one source, the sending entity can pick what
            it considers to be the best source, or multiple SOURCE properties can
            be included.</t>
          <t hangText="Examples:">
            <figure>
              <artwork>
  SOURCE:ldap://ldap.example.com/cn=Babs%20Jensen,%20o=Babsco,%20c=US

  SOURCE:http://directory.example.com/addressbooks/jdoe/
   Jean%20Dupont.vcf
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="NAME" anchor="NAME">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To identify the displayable name of the directory
            entity to which information in the vCard pertains.</t>
          <t hangText="Value type:">text</t>
          <t hangText="Special notes:">The NAME property is used to convey the
            display name of the entity to which the directory information
            pertains.  Its value is the displayable, presentation text associated
            with the source for the vCard, as specified in the SOURCE
            property.</t>
          <t hangText="Example:">
            <figure>
              <artwork>
      NAME:Babs Jensen's Contact Information
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="KIND" anchor="KIND">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To specify the kind of object the vCard
            represents.</t>
          <t hangText="Value type:">A single text value.</t>
          <t hangText="Special notes:">The value may be one of: "individual" for
            a single person, "group" for a group of people, "org" for an
            organization, an x-name or an iana-token. If this property is
            absent, "individual" MUST be assumed as default.</t>
          <t hangText="Example:">
            <figure>
              <preamble>This represents someone named Jane Doe working in the
                marketing department of the North American division of ABC
                Inc.</preamble>
              <artwork>
      BEGIN:VCARD
      VERSION:4.0
      KIND:individual
      FN:Jane Doe
      ORG:ABC\, Inc.;North American Division;Marketing
      END:VCARD
              </artwork>
            </figure>
            <figure>
              <preamble>This represents the department itself, commonly known as
              ABC Marketing.</preamble>
              <artwork>
      BEGIN:VCARD
      VERSION:4.0
      KIND:org
      FN:ABC Marketing
      ORG:ABC\, Inc.;North American Division;Marketing
      END:VCARD
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

  </section>

  <section title="Identification Properties">

    <t>These types are used to capture information associated with the
      identification and naming of the person or resource associated with the
      vCard.</t>

    <section title="FN" anchor="FN">
      <t>
        <list style='hanging'>
          <t hangText='Purpose:'>To specify the formatted text corresponding to
            the name of the object the vCard represents.</t>
          <t hangText='Value type:'>A single text value.</t>
          <t hangText='Special notes:'>This property is based on the semantics
            of the X.520 Common Name attribute. The property MUST be present in
            the vCard object.</t>
          <t hangText="Example:">
            <figure>
              <artwork>
      FN:Mr. John Q. Public\, Esq.
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="N" anchor="N">
      <t>
        <list style='hanging'>
          <t hangText='Purpose:'>To specify the components of the name of the
            object the vCard represents.</t>
          <t hangText='Value type:'>A single structured text value. Each component
            can have multiple values.</t>
          <t hangText='Special note:'>The structured property value corresponds, in
            sequence, to the Family Name, Given Name, Additional Names, Honorific
            Prefixes, and Honorific Suffixes. The text components are separated by
            the SEMI-COLON character (ASCII decimal 59). Individual text
            components can include multiple text values (e.g., multiple Additional
            Names) separated by the COMMA character (ASCII decimal 44). This
            property is based on the semantics of the X.520 individual name
            attributes. The property SHOULD be present in the vCard object when
            the name of the object the vCard represents follows the X.520
            model.</t>
          <t hangText="Examples:">
            <figure>
              <artwork>
          N:Public;John;Quinlan;Mr.;Esq.

          N:Stevenson;John;Philip,Paul;Dr.;Jr.,M.D.,A.C.P.
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="NICKNAME" anchor="NICKNAME">
      <t>
        <list style='hanging'>
          <t hangText='Purpose:'>To specify the text corresponding to the nickname
            of the object the vCard represents.</t>
          <t hangText='Value type:'>One or more text values separated by a COMMA
            character (ASCII decimal 44).</t>
          <t hangText='Special note:'>The nickname is the descriptive name given
            instead of or in addition to the one belonging to a person, place, or
            thing. It can also be used to specify a familiar form of a proper name
            specified by the FN or N properties.</t>
          <t hangText="Examples:">
            <figure>
              <artwork>
          NICKNAME:Robbie

          NICKNAME:Jim,Jimmie
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="PHOTO" anchor="PHOTO">
      <t>
        <list style='hanging'>
          <t hangText='Purpose:'>To specify an image or photograph information
            that annotates some aspect of the object the vCard represents.</t>
          <t hangText='Encoding:'>The encoding MUST be reset to "b" using the
            ENCODING parameter in order to specify inline, encoded binary data. If
            the value is referenced by a URI value, then the default encoding is
            used and no explicit ENCODING parameter is needed.</t>
          <t hangText='Value type:'>A single value. The default is binary value.
            It can also be reset to uri value. The uri value can be used to
            specify a value outside of this MIME entity.</t>
          <t hangText='Special notes:'>This property SHOULD include the
            parameter "TYPE" to specify the graphic image format type. The TYPE
            parameter value MUST be an image media type as specified in <xref
              target="RFC4288"/>. The full media type name, including the
            "image/" prefix, should be used. However, implementations SHOULD be
            able to handle bare subtypes.</t>
          <t hangText="Example:">
            <figure>
              <artwork>
    PHOTO;VALUE=uri:http://www.example.com/pub/photos
     /jqpublic.gif


    PHOTO;ENCODING=b;TYPE=image/jpeg:MIICajCCAdOgAwIBAgICBEUwDQYJKo
     ZIhvcNAQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENv
     bW11bmljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZvcm1hdGlvbi
     &lt;...remainder of "B" encoded binary data...&gt;
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="BDAY" anchor="BDAY">
      <t>
        <list style='hanging'>
          <t hangText='Purpose:'>To specify the birth date of the object the vCard
            represents.</t>
          <t hangText='Value type:'>The default is a single date value. It can
            also be reset to a single date-time or text value.</t>
          <t hangText="Examples:">
            <figure>
              <artwork>
          BDAY:1996-04-15

          BDAY:1953-10-15T23:10:00Z

          BDAY;VALUE=text:circa 1800
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="DDAY" anchor="DDAY">
      <t>
        <list style='hanging'>
          <t hangText='Purpose:'>To specify the date of death of the object the vCard
            represents.</t>
          <t hangText='Value type:'>The default is a single date value. It can
            also be reset to a single date-time or text value.</t>
        </list>
      </t>
    </section>

    <section title="BIRTH" anchor="BIRTH">
      <t>
        <list style='hanging'>
          <t hangText='Purpose:'>To specify the place of birth of the object the vCard
            represents.</t>
          <t hangText='Value type:'>A single text value.</t>
          <t hangText="Example:">
            <figure>
              <artwork>
          BIRTH:Babies'R'Us Hospital
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="DEATH" anchor="DEATH">
      <t>
        <list style='hanging'>
          <t hangText='Purpose:'>To specify the place of death of the object the vCard
            represents.</t>
          <t hangText='Value type:'>A single text value.</t>
          <t hangText="Example:">
            <figure>
              <artwork>
          DEATH:Aboard the Titanic\, near Newfoundland
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="GENDER" anchor="GENDER">
      <t>
        <list style="hanging">
          <t hangText='Purpose:'>To specify the gender of the object the vCard represents.</t>
          <t hangText='Value type:'>A single text value.</t>
          <t hangText='Special notes:'>The value "M" stands for male while "F"
            stands for female.</t>
          <t hangText="Example:">
            <figure>
              <artwork>
          GENDER:F
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

  </section>

  <section title="Delivery Addressing Properties" anchor="oldsection_3_2">

    <t>
      These types are concerned with information related to the delivery addressing or label for the vCard object.
    </t>

    <section title="ADR" anchor="ADR">
      <t>
        <list style='hanging'>
          <t hangText='Purpose:'>To specify the components of the delivery
            address for the vCard object.</t>
          <t hangText='Value type:'>A single structured text value, separated by
            the SEMI-COLON character (ASCII decimal 59).</t>
          <t hangText='Special notes:'>The structured type value consists of a
            sequence of address components. The component values MUST be
            specified in their corresponding position. The structured type value
            corresponds, in sequence, to the post office box; the extended
            address (e.g. apartment or suite number); the street address; the
            locality (e.g., city); the region (e.g., state or province); the
            postal code; the country name. When a component value is missing,
            the associated component separator MUST
            still be specified.</t>
          <t>The text components are separated by the SEMI-COLON character
            (ASCII decimal 59). Where it makes semantic sense, individual text
            components can include multiple text values (e.g., a "street"
            component with multiple lines) separated by the COMMA character
            (ASCII decimal 44).</t>
          <t>The type can include the type parameter "TYPE" to specify the
            delivery address type. The TYPE parameter values can include
            "home" to indicate a delivery address for a residence; "work" to
            indicate delivery address for a place of work; and "pref" to
            indicate the preferred delivery address when more than one address
            is specified. These type parameter values can be specified as a
            parameter list (i.e., "TYPE=home;TYPE=pref") or as a value list
            (i.e., "TYPE=home,pref"). This type is based on semantics of the
            X.520 geographical and postal addressing attributes. The default is
            "TYPE=work".</t>
        </list>
      </t>

      <t>
        Example: In this example the post office box and the extended address are absent.
      </t>

      <figure>
      <artwork>
        ADR;TYPE=home:;;123 Main Street;Any Town;CA;91921-1234
      </artwork>
      </figure>

    </section>

    <section title="LABEL" anchor="LABEL">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify the formatted text corresponding to
            delivery address of the object the vCard represents.</t>

          <t hangText='Value type:'>A single text value.</t>

          <t hangText='Special notes:'>The property value is formatted text that
            can be used to present a delivery address label for the vCard
            object.  The type can include the type parameter "TYPE" to specify
            delivery label type. The TYPE parameter values can include "home" to
            indicate a delivery label for a residence; "work" to indicate
            delivery label for a place of work; and "pref" to indicate the
            preferred delivery label when more than one label is specified.
            These type parameter values can be specified as a parameter list
            (i.e., "TYPE=home;TYPE=pref") or as a value list (i.e.,
            "TYPE=home,pref"). The default is "TYPE=work".</t>

        </list>
      </t>

      <t>
        Example: A multi-line address label.
      </t>

      <figure>
      <artwork>
        LABEL;TYPE=home:Mr.John Q. Public\, Esq.\nMail Drop: TNE QB\n
         123 Main Street\nAny Town\, CA  91921-1234\nU.S.A.
      </artwork>
      </figure>

    </section>

  </section>

  <section title="Communications Properties" anchor="oldsection_3_3">

    <t>
      These properties are concerned with information associated with the
      way communications with the object the vCard represents are carried out.
    </t>

    <section title="TEL" anchor="TEL">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify the telephone number for telephony
            communication with the object the vCard represents.</t>

          <t hangText='Value type:'>A single URI value. It is expected that the
            URI scheme will be "tel", as specified in <xref target="RFC3966"/>,
            but other schemes MAY be used.</t>

          <t hangText='Special notes:'>This property is based on the X.520
            Telephone Number attribute.</t>

          <t>The property can include the parameter "TYPE" to specify intended
            use for the telephone number. The TYPE parameter values can include:
            "home" to indicate a telephone number associated with a residence,
            "msg" to indicate the telephone number has voice messaging support,
            "work" to indicate a telephone number associated with a place of
            work, "pref" to indicate a preferred-use telephone number, "voice"
            to indicate a voice telephone number, "fax" to indicate a facsimile
            telephone number, "cell" to indicate a cellular telephone number,
            "video" to indicate a video conferencing telephone number, "pager"
            to indicate a paging device telephone number, "bbs" to indicate a
            bulletin board system telephone number, "modem" to indicate a MODEM
            connected telephone number, "car" to indicate a car-phone telephone
            number, "isdn" to indicate an ISDN service telephone number, "pcs"
            to indicate a personal communication services telephone number. The
            default type is "voice". These type parameter values can be
            specified as a parameter list (i.e., "TYPE=work;TYPE=voice") or as a
            value list (i.e., "TYPE=work,voice"). The default can be overridden
            to another set of values by specifying one or more alternate values.
            For example, the default TYPE of "voice" can be reset to a WORK and
            HOME, VOICE and FAX telephone number by the value list
            "TYPE=work,home,voice,fax".</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        TEL;TYPE=work,voice,pref,msg:tel:+1-555-555-5555;ext=5555
        TEL;TYPE=home:tel:+33-01-23-45-67
      </artwork>
      </figure>

    </section>

    <section title="EMAIL" anchor="EMAIL">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify the electronic mail address for
            communication with the object the vCard represents.</t>

          <t hangText='Value type:'>A single text value.</t>

          <t hangText='Special notes:'>The type can include the type
              parameter "TYPE" to specify the format or preference of the
              electronic mail address. The TYPE parameter values can include:
              "internet" to indicate an Internet addressing type, "x400" to
              indicate a X.400 addressing type, "uri" to indicate a URI useable
              for electronic communication, "home" to indicate an address
              associated with a residence, "work" to indicate an address
              associated with a place of work, or "pref" to indicate a
              preferred-use email address when more than one is specified.
              Another IANA registered address type can also be specified. The
              default email type is "internet". A non-standard value can also be
              specified.</t>

        </list>
      </t>

      <t>
        Type example:
      </t>

      <figure>
      <artwork>
        EMAIL;TYPE=internet:jqpublic@xyz.example.com

        EMAIL;TYPE=internet,pref:jane_doe@example.com

        EMAIL;TYPE=uri,work:http://example.com/contact.php
      </artwork>
      </figure>

    </section>

    <section title="IMPP" anchor="IMPP">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To specify the URI for instant messaging and
            presence protocol communications with the object the vCard
            represents.</t>
          <t hangText="Value type:">A single URI.</t>
          <t hangText="Special notes:">The property may include the type parameter
            "TYPE" to specify an intended use for the URI.  The TYPE parameter
            values include one or more of the following:
            <list style="symbols">
              <t>An indication of the type of communication for which this URI
                is appropriate.  This can be a value of "personal" or
                "business".</t>
              <t>An indication of the location of a device associated with this
                URI.  Values can be "home", "work", or "mobile".</t>
              <t>The value "pref" indicates this is a preferred address and has
                the same semantics as the "pref" value in a TEL property.</t>
            </list>
          </t>
          <t hangText="Example:">
            <figure>
              <artwork>
    IMPP;TYPE=personal,pref:xmpp:alice@example.com
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="LANG" anchor="LANG">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To specify the language(s) that may be used
            for contacting the individual associated with the vCard.</t>
          <t hangText="Value type:">A list of text values.</t>
          <t hangText="Special notes:">The list is to be interpreted as defined
            in <xref target="RFC2616"/>, Section 14.4, i.e. as the value of an
            Accept-Language HTTP header. This lets one specify preference among
            languages. Note that any SEMI-COLON character (ASCII decimal 59)
            must be escaped.</t>
          <t hangText="Example:">
            <figure>
              <artwork>
    LANG:fr,en\;q=0.9
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

  </section>

  <section title="Geographical Properties" anchor="oldsection_3_4">

    <t>
      These properties are concerned with information associated with
      geographical positions or regions associated with the object the vCard
      represents.
    </t>

    <section title="TZ" anchor="TZ">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify information related to the time zone
            of the object the vCard represents.</t>

          <t hangText='Value type:'>The default is a single utc-offset value. It
            can also be reset to a single text value.</t>

          <t hangText='Special notes:'>The type value consists of a single
            value.</t>

        </list>
      </t>

      <t>
        Type examples:
      </t>

      <figure>
      <artwork>
        TZ:-05:00

        TZ;VALUE=text:-05:00; EST; Raleigh/North America
        ;This example has a single value, not a structure text value.
      </artwork>
      </figure>

    </section>

    <section title="GEO" anchor="GEO">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify information related to the global
            positioning of the object the vCard represents.</t>

          <t hangText='Value type:'>A single structured value consisting of two
            float values separated by the SEMI-COLON character (ASCII decimal
            59).</t>

          <t hangText='Special notes:'>This property specifies information related
            to the global position of the object associated with the vCard. The
            value specifies latitude and longitude, in that order (i.e., "LAT
            LON" ordering). The longitude represents the location east and west
            of the prime meridian as a positive or negative real number,
            respectively. The latitude represents the location north and south
            of the equator as a positive or negative real number, respectively.
            The longitude and latitude values MUST be expressed in the <xref
              target="WGS84"/> reference system. They MUST be specified as
            decimal degrees and should be specified to six decimal places. This
            will allow for granularity within a meter of the geographical
            position.  The text components are separated by the SEMI-COLON
            character (ASCII decimal 59). The simple formula for converting
            degrees-minutes-seconds into decimal degrees is:</t>

        </list>
      </t>

      <figure>
      <artwork>
        decimal = degrees + minutes/60 + seconds/3600.
      </artwork>
      </figure>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        GEO:37.386013;-122.082932
      </artwork>
      </figure>

    </section>

  </section>

  <section title="Organizational Properties" anchor="oldsection_3_5">

    <t>
      These properties are concerned with information associated with
      characteristics of the organization or organizational units of the object
      the vCard represents.
    </t>

    <section title="TITLE" anchor="TITLE">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify the job title, functional position
            or function of the object the vCard represents.</t>

          <t hangText='Value type:'>A single text value.</t>

          <t hangText="Special notes:">This property is based on the X.520 Title
            attribute.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        TITLE:Director\, Research and Development
      </artwork>
      </figure>

    </section>

    <section title="ROLE" anchor="ROLE">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify information concerning the role,
            occupation, or business category of the object the vCard
            represents.</t>

          <t hangText='Value type:'>A single text value.</t>

          <t hangText='Special notes:'>This property is based on the X.520 Business
            Category explanatory attribute. This property is included as an
            organizational type to avoid confusion with the semantics of the
            TITLE property and incorrect usage of that property when the semantics of
            this property is intended.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        ROLE:Programmer
      </artwork>
      </figure>

    </section>

    <section title="LOGO" anchor="LOGO">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify a graphic image of a logo associated
            with the object the vCard represents.</t>

          <t hangText='Encoding:'>The encoding MUST be reset to "b" using the
            ENCODING parameter in order to specify inline, encoded binary data.
            If the value is referenced by a URI value, then the default encoding
            of 8bit is used and no explicit ENCODING parameter is needed.</t>

          <t hangText='Value type:'>A single value. The default is binary value.
            It can also be reset to uri value. The uri value can be used to
            specify a value outside of this MIME entity.</t>

          <t hangText='Special notes:'>This property SHOULD include the
            parameter "TYPE" to specify the graphic image format type. The TYPE
            parameter value MUST be an image media type as specified in <xref
              target="RFC4288"/>. The full media type name, including the
            "image/" prefix, should be used. However, implementations SHOULD be
            able to handle bare subtypes.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        LOGO;VALUE=uri:http://www.example.com/pub/logos/abccorp.jpg

        LOGO;ENCODING=b;TYPE=image/jpeg:MIICajCCAdOgAwIBAgICBEUwDQYJKoZ
         AQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENvbW11bm
         ljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZvcm1hdGlvbiBTeXN0
         &lt;...the remainder of "B" encoded binary data...&gt;
      </artwork>
      </figure>

    </section>

    <section title="AGENT" anchor="AGENT">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify information about another person who
            will act on behalf of the individual or resource associated with the
            vCard.</t>

          <t hangText='Value type:'>The default is a single URI value. It can
              also be reset to a single text value. The text value can be used
              to specify textual information.</t>

          <t hangText='Special notes:'>This property typically is used to specify an
            area administrator, assistant, or secretary for the individual
            associated with the vCard. A key characteristic of the AGENT
            property is that it represents somebody or something that is
            separately addressable.</t>

        </list>
      </t>

      <t>
        Examples:
      </t>

      <figure>
      <artwork>
  AGENT:urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6

  AGENT:http://example.com/directory/jdoe.vcf

  AGENT;VALUE=text:Please contact my assistant Jane Doe for any
   inquiries.
      </artwork>
      </figure>
    </section>

    <section title="ORG" anchor="ORG">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify the organizational name and units
            associated with the vCard.</t>

          <t hangText='Value type:'>A single structured text value consisting of
            components separated the SEMI-COLON character (ASCII decimal
            59).</t>

          <t hangText='Special notes:'>The property is based on the X.520
            Organization Name and Organization Unit attributes. The property value
            is a structured type consisting of the organization name, followed
            by one or more levels of organizational unit names.</t>

        </list>
      </t>

      <t>
        Example: A property value consisting of an organizational name,
        organizational unit #1 name and organizational unit #2 name.
      </t>

      <figure>
      <artwork>
        ORG:ABC\, Inc.;North American Division;Marketing
      </artwork>
      </figure>

    </section>

    <section title="MEMBER" anchor="MEMBER">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To include a member in the group this vCard
            represents.</t>
          <t hangText="Value tpe:">A single URI. It MAY refer to something other
            than a vCard object. For example, an e-mail distribution list could
            employ the "mailto" URI scheme for efficiency.</t>
          <t hangText="Special notes:">This property MUST NOT be present unless
            the value of the KIND property is "group".</t>
        </list>
      </t>
      <t>Examples:</t>
      <figure>
        <artwork>
  BEGIN:VCARD
  VERSION:4.0
  KIND:group
  FN:The Doe family
  MEMBER:urn:uuid:03a0e51f-d1aa-4385-8a53-e29025acd8af
  MEMBER:urn:uuid:b8767877-b4a1-4c70-9acc-505d3819e519
  END:VCARD
  BEGIN:VCARD
  VERSION:4.0
  FN:John Doe
  UID:urn:uuid:03a0e51f-d1aa-4385-8a53-e29025acd8af
  END:VCARD
  BEGIN:VCARD
  VERSION:4.0
  FN:Jane Doe
  UID:urn:uuid:b8767877-b4a1-4c70-9acc-505d3819e519
  END:VCARD
        </artwork>
      </figure>
      <figure>
        <artwork>
  BEGIN:VCARD
  VERSION:4.0
  KIND:group
  FN:Funky distribution list
  MEMBER:mailto:subscriber1@example.com
  MEMBER:xmpp:subscriber2@example.com
  MEMBER:sip:subscriber3@example.com
  MEMBER:tel:+1-418-555-5555
  END:VCARD
        </artwork>
      </figure>
    </section>

    <section title="RELATED" anchor="RELATED">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To specify a relationship the individual this
            vCard represents has with another.</t>
          <t hangText="Value type:">A single URI.</t>
          <t hangText="Special notes:">The TYPE parameter MAY be used to
            characterize the related individual. The understood types are:
            <list style="symbols">
              <t>"parent" means that the related individual is the parent of
                the individual this vCard represents.</t>
              <t>"child" means the opposite of "parent".</t>
              <t>"sibling" means that the two individuals are siblings.</t>
              <t>"manager" means that the related individual is the direct
                hierarchical superior (i.e. supervisor or manager) of the
                individual this vCard represents.</t>
              <t>"assistant" for an assistant or secretary.</t>
            </list>
            Other types may be registered to IANA as described in <xref
              target="iana_registration"/>, and private extensions starting with
            "X-" may be used.</t>
        </list>
      </t>
      <t>Examples:</t>
      <figure>
        <artwork>
  RELATED;TYPE=manager:urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6
  RELATED;TYPE=assistant:http://example.com/directory/jdoe.vcf
        </artwork>
      </figure>
    </section>

  </section>

  <section title="Explanatory Properties" anchor="oldsection_3_6">

    <t>
      These properties are concerned with additional explanations, such as that
      related to informational notes or revisions specific to the vCard.
    </t>

    <section title="CATEGORIES" anchor="CATEGORIES">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify application category information
            about the vCard.</t>

          <t hangText='Value type:'>One or more text values separated by a COMMA
            character (ASCII decimal 44).</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        CATEGORIES:TRAVEL AGENT

        CATEGORIES:INTERNET,IETF,INDUSTRY,INFORMATION TECHNOLOGY
      </artwork>
      </figure>

    </section>

    <section title="NOTE" anchor="NOTE">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify supplemental information or a
            comment that is associated with the vCard.</t>

          <t hangText='Value type:'>A single text value.</t>

          <t hangText='Special notes:'>The property is based on the X.520
            Description attribute.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        NOTE:This fax number is operational 0800 to 1715
          EST\, Mon-Fri.
      </artwork>
      </figure>

    </section>

    <section title="PRODID" anchor="PRODID">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify the identifier for the product that
            created the vCard object.</t>

          <t hangText='Type value:'>A single text value.</t>

          <t hangText='Special notes:'>Implementations SHOULD use a method such
            as that specified for Formal Public Identifiers in <xref
              target="ISO9070"/> or for Universal Resource Names in <xref
              target="RFC3406"/> to assure that the text value is unique.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        PRODID:-//ONLINE DIRECTORY//NONSGML Version 1//EN
      </artwork>
      </figure>

    </section>

    <section title="REV" anchor="REV">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify revision information about the
            current vCard.</t>

          <t hangText='Value type:'>The default is a single date-time value. Can
            also be reset to a single date value.</t>

          <t hangText='Special notes:'>The value distinguishes the current
            revision of the information in this vCard for other renditions of
            the information.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        REV:1995-10-31T22:27:10Z

        REV:1997-11-15
      </artwork>
      </figure>

    </section>

    <section title="SORT-STRING" anchor="SORT-STRING">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify the family name or given name text
            to be used for national-language-specific sorting of the FN and N
            types.</t>

          <t hangText='Value type:'>A single text value.</t>
          
          <t hangText="Special notes:">The sort string is used to provide family
            name or given name text that is to be used in locale- or
            national-language- specific sorting of the formatted name and
            structured name types. Without this information, sorting algorithms
            could incorrectly sort this vCard within a sequence of sorted
            vCards.  When this property is present in a vCard, then this family name
            or given name value is used for sorting the vCard.</t>

        </list>
      </t>

      <t>
        Examples: For the case of family name sorting, the following examples
        define common sort string usage with the FN and N properties.
      </t>

      <figure>
      <artwork>
        FN:Rene van der Harten
        N:van der Harten;Rene;J.;Sir;R.D.O.N.
        SORT-STRING:Harten

        FN:Robert Pau Shou Chang
        N:Pau;Shou Chang;Robert
        SORT-STRING:Pau

        FN:Osamu Koura
        N:Koura;Osamu
        SORT-STRING:Koura

        FN:Oscar del Pozo
        N:del Pozo Triscon;Oscar
        SORT-STRING:Pozo

        FN:Chistine d'Aboville
        N:d'Aboville;Christine
        SORT-STRING:Aboville
      </artwork>
      </figure>

    </section>

    <section title="SOUND" anchor="SOUND">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify a digital sound content information
            that annotates some aspect of the vCard. By default this property is
            used to specify the proper pronunciation of the name property value of
            the vCard.</t>

          <t hangText='Encoding:'>The encoding MUST be reset to "b" using the
            ENCODING parameter in order to specify inline, encoded binary data.
            If the value is referenced by a URI value, then the default encoding
            of 8bit is used and no explicit ENCODING parameter is needed.</t>

          <t hangText='Value type:'>A single value. The default is binary value.
            It can also be reset to uri value. The uri value can be used to
            specify a value outside of this MIME entity.</t>

          <t hangText='Special notes:'>This property SHOULD include the
            parameter "TYPE" to specify the audio format type. The TYPE
            parameter value MUST be an audio media type as specified in <xref
              target="RFC4288"/>. The full media type name, including the
            "audio/" prefix, should be used. However, implementations SHOULD be
            able to handle bare subtypes.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        SOUND;TYPE=audio/basic;VALUE=uri:CID:JOHNQPUBLIC.part8.
         19960229T080000.xyzMail@example.com

        SOUND;TYPE=audio/basic;ENCODING=b:MIICajCCAdOgAwIBAgICBEUwDQYJK
         AQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENvbW11bm
         ljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZvcm1hdGlvbiBTeXN0
         &lt;...the remainder of "B" encoded binary data...&gt;
      </artwork>
      </figure>

    </section>

    <section title="UID" anchor="UID">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify a value that represents a globally
            unique identifier corresponding to the individual or resource
            associated with the vCard.</t>

          <t hangText='Value type:'>A single URI value.</t>

          <t hangText='Special notes:'>The type is used to uniquely identify the
            object that the vCard represents. The "uuid" URN namespace defined
            in <xref target="RFC4122"/> is particularly well-suited to this
            task, but other URI schemes MAY be used.</t>

          <t>This property MUST NOT appear more than once in a given vCard, and
            MUST be present if synchronization is to be used. See <xref
              target="synchronization"/>.</t>

          <t>The PID parameter MUST NOT be applied to this property.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        UID:urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6
      </artwork>
      </figure>

    </section>

    <section title="URL" anchor="URL">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify a uniform resource locator
            associated with the object that the vCard refers to.</t>

          <t hangText='Value type:'>A single uri value.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        URL:http://www.swbyps.restaurant.french/~chezchic.html
      </artwork>
      </figure>

    </section>

    <section title="VERSION" anchor="VERSION">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify the version of the vCard
            specification used to format this vCard.</t>

          <t hangText='Value type:'>A single text value.</t>

          <t hangText='Special notes:'>The property MUST be present in the vCard
            object. The value MUST be "4.0" if the vCard corresponds to this
            specification.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        VERSION:4.0
      </artwork>
      </figure>

    </section>

  </section>

  <section title="Security Properties" anchor="oldsection_3_7">

    <t>
      These properties are concerned with the security of communication pathways or
      access to the vCard.
    </t>

    <section title="CLASS" anchor="CLASS">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify the access classification for a
            vCard object.</t>

          <t hangText='Value type:'>A single text value.</t>

          <t hangText='Special notes:'>An access classification is only one
            component of the general security model for a directory service. The
            classification attribute provides a method of capturing the intent
            of the owner for general access to information described by the
            vCard object.</t>

        </list>
      </t>

      <t>
        Examples:
      </t>

      <figure>
      <artwork>
        CLASS:PUBLIC

        CLASS:PRIVATE

        CLASS:CONFIDENTIAL
      </artwork>
      </figure>

    </section>

    <section title="KEY" anchor="KEY">

      <t>
        <list style='hanging'>

          <t hangText='Purpose:'>To specify a public key or authentication
            certificate associated with the object that the vCard
            represents.</t>

          <t hangText='Encoding:'>The encoding MUST be reset to "b" using the
            ENCODING parameter in order to specify inline, encoded binary data.
            If the value is a text value, then the default encoding of 8bit is
            used and no explicit ENCODING parameter is needed.</t>

          <t hangText='Value type:'>A single value. The default is binary. It
            can also be reset to text value. The text value can be used to
            specify a text key.</t>
            
          <t hangText="Special notes:">The property can also include the
            parameter TYPE to specify the public key or authentication
            certificate format. This parameter should specify an IANA registered
            public key or authentication certificate format. It can also specify
            a non-standard format.</t>
          <t hangText='Special notes:'>This property SHOULD include the
            parameter "TYPE" to specify the public key or authentication
            certificate format. The TYPE parameter value MUST be a media type as
            specified in <xref target="RFC4288"/>.</t>

        </list>
      </t>

      <t>
        Example:
      </t>

      <figure>
      <artwork>
        KEY;TYPE=application/pgp-keys;ENCODING=b:mQGiBEbEPUsRBACBF0RSIN
         mGutdM+KSAl7HMzwXHaLbvEOyu8At80I8qGejhzWowKbfem3X0m68Y/vhb+J2g
         7q11KHpnEdNb67uZaj9nTQ09Q+UFtH25qD/Afn3+9bOJQaPjAUYzXu3vD/xmN8
         &lt;...remainder of "B" encoded binary data...&gt;
      </artwork>
      </figure>

    </section>

  </section>

  <section title="Calendar Properties">

    <t>These properties are further specified in <xref target="RFC2739"/>.</t>

    <section title="FBURL" anchor="FBURL">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To specify the URI for a user's busy time in a
            vCard object.</t>
          <t hangText="Value type:">A single URI value.</t>
          <t hangText="Special notes:">Where multiple FBURL properties are
            specified, the default FBURL property is indicated with the PREF
            parameter. The FTP or HTTP type of URI points to an iCalendar object
            associated with a snapshot of the last six weeks of the user's busy
            time data. If the iCalendar object is represented as a file or
            document, it's file type should be "ifb".</t>
          <t hangText="Examples:">
            <figure>
              <artwork>
  FBURL;PREF:http://www.example.com/busy/janedoe
  FBURL:FTP://ftp.example.com/busy/project-a.ifb
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="CALADRURI" anchor="CALADRURI">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To specify the location to which an event
            request should be sent for the user.</t>
          <t hangText="Value type:">A single URI value.</t>
          <t hangText="Special notes:">Where multiple CALADRURI properties are
            specified, the default CALADRURI property is indicated with the PREF
            parameter.</t>
          <t hangText="Example:">
            <figure>
              <artwork>
  CALADRURI;PREF:mailto:janedoe@example.com
  CALDARURI:http://example.com/calendar/jdoe
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

    <section title="CALURI" anchor="CALURI">
      <t>
        <list style="hanging">
          <t hangText="Purpose:">To specify the URI for a user's calendar in a
            vCard object.</t>
          <t hangText="Value type:">A single URI value.</t>
          <t hangText="Special notes:">Where multiple CALURI properties are
            specified, the default CALURI property is indicated with the PREF
            parameter.  The property should contain a URI pointing to an
            iCalendar object associated with a snapshot of the user's calendar
            store. If the iCalendar object is represented as a file or document,
            it's file type should be "ics".</t>
          <t hangText="Examples:">
            <figure>
              <artwork>
  CALURI;PREF:http://cal.example.com/calA
  CALURI:ftp://ftp.example.com/calA.ics
              </artwork>
            </figure>
          </t>
        </list>
      </t>
    </section>

  </section>

  <section title="Extended Properties and Parameters" anchor="oldsection_3_8">

    <t>
      The properties and parameters defined by this document can be extended.
      Non-standard, private properties and parameters with a name starting with
      "X-" may be defined bilaterally between two cooperating agents without
      outside registration or standardization.
    </t>

  </section>

</section>

<section title="Synchronization" anchor="synchronization">

  <t>vCard data often needs to be synchronized between devices. In this context,
    synchronization is defined as the intelligent merging of two representations
    of the same object. vCard 4.0 includes mechanisms to aid this process.</t>

  <section title="Mechanisms">

    <t>Two vCards for which the UID properties (<xref target="UID"/>) are
      equivalent MUST be considered representations of the same object.
      Equivalence is determined as specified in <xref target="RFC3986"/>,
      Section 6. A missing UID property MUST NOT be considered equivalent to any
      other.  Hence, the UID property SHOULD be present if synchronization is to
      be used.</t>

    <t>Pairs of properties, one from each of a pair of vCards representing the
      same object, having equivalent names and PID parameter values MUST be
      considered representations of the same object. A missing PID parameter
      MUST NOT be considered equivalent to any other.  Hence, the PID parameter
      SHOULD be present if synchronization is to be used.</t>

    <t>It is expected that a synchronization engine will exploit such property
      associations by e.g.  overwriting the destination property value and
      parameters with the source destination property value and parameters. The
      particular merging strategy is out of scope for this document.</t>

  </section>

  <section title="Example">

    <t>Two vCards are to by synchronized:</t>

    <figure>
      <artwork>
  BEGIN:VCARD
  VERSION:4.0
  UID:urn:uuid:77a01597-0603-40f3-8138-36deca8618da
  FN;PID=1:Jane Doe
  EMAIL;PID=1:jdoe1@example.com
  EMAIL;PID=2:jdoe2@example.com
  END:VCARD
      </artwork>
    </figure>

    <figure>
      <artwork>
  BEGIN:VCARD
  VERSION:4.0
  UID:urn:uuid:77a01597-0603-40f3-8138-36deca8618da
  FN;PID=1:Jane Doe
  EMAIL;PID=1:jdoe3@example.com
  EMAIL;PID=3:jdoe4@example.com
  END:VCARD
      </artwork>
    </figure>

    <t>Assuming the first one is the source and the other is the destination, a
      synchronization engine may produce the following merged vCard:</t>

    <figure>
      <artwork>
  BEGIN:VCARD
  VERSION:4.0
  UID:urn:uuid:77a01597-0603-40f3-8138-36deca8618da
  FN;PID=1:Jane Doe
  EMAIL;PID=1:jdoe1@example.com
  EMAIL;PID=2:jdoe2@example.com
  EMAIL;PID=3:jdoe4@example.com
  END:VCARD
      </artwork>
    </figure>

  </section>

</section>

<section title="Formal Grammar" anchor="oldsection_4_">

  <t>
    The following formal grammar is provided to assist developers in building parsers for the vCard.
  </t>

  <t>
    This syntax is written according to the form described in <xref
      target="RFC5234"/>, but it references just this small subset of <xref
      target="RFC5234"/> literals:
  </t>

  <figure>
  <artwork>
   ;*******************************************
   ; Basic vCard Definition
   ;*******************************************

   vcard-entity = 1*(vcard)

   vcard        = "BEGIN" ":" "VCARD" 1*CRLF
                  1*(contentline)
        ;A vCard object MUST include the VERSION and FN properties.
                  "END" ":" "VCARD" 1*CRLF

   contentline  = name *(";" param ) ":" value CRLF
        ; When parsing a content line, folded lines must first
        ; be unfolded according to the unfolding procedure
        ; described above. When generating a content line, lines
        ; longer than 75 characters SHOULD be folded according to
        ; the folding procedure described in [MIME DIR].

   name         = iana-token / x-name
        ; Parsing of the param and value is
        ; based on the "name" or type identifier
        ; as defined in ABNF sections below

   iana-token   = 1*(ALPHA / DIGIT / "-")
        ; vCard type or parameter identifier registered with IANA

   x-name       = "X-" 1*(ALPHA / DIGIT / "-")
        ; Reserved for non-standard use

   param        = param-name "=" param-value *("," param-value)

   param-name   = iana-token / x-name

   param-value  = ptext / quoted-string

   ptext        = *SAFE-CHAR

   value        = *VALUE-CHAR

   quoted-string = DQUOTE QSAFE-CHAR DQUOTE

   NON-ASCII    = %x80-FF
        ; Use is restricted by outer MIME object (UTF-8 preferred)

   QSAFE-CHAR   = WSP / %x21 / %x23-7E / NON-ASCII
        ; Any character except CTLs, DQUOTE

   SAFE-CHAR    = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E / NON-ASCII
        ; Any character except CTLs, DQUOTE, ";", ":", ","

   VALUE-CHAR   = WSP / VCHAR / NON-ASCII
        ; Any textual character

   ;*******************************************
   ; vCard Type Definition
   ;
   ; Provides type-specific definitions for how the
   ; "value" and "param" are defined.
   ;*******************************************
   ; **** NAME ****
   param        = ""
        ; No parameters allowed

   value        = text-value

   ; **** KIND ****
   param        = ""
        ; No parameters allowed

   value        = kind-value

   kind-value   = "individual" / "group" / "org" / x-name / iana-token

   ; **** PROFILE ****
   param        = ""
        ; No parameters allowed

   value        = text-value
        ; Value MUST be the case insensitive value "VCARD

   ; **** SOURCE ****
   param        = source-param
        ; Only source parameters allowed

   value        = uri

   source-param = ("VALUE" "=" "uri")
                / (x-name "=" *SAFE-CHAR)

   ; **** FN ****
   ;This type MUST be included in a vCard object.
   param        = text-param
        ; Text parameters allowed

   value        = text-value

   ; **** N ****
   ;This type MUST be included in a vCard object.

   param        = text-param
        ; Text parameters allowed

   value        = n-value

   n-value      = 0*4(text-value *("," text-value) ";")
                  text-value *("," text-value)
        ; Family; Given; Middle; Prefix; Suffix.
        ; Example: Public;John;Quincy,Adams;Reverend Dr. III

   ; **** NICKNAME ****
   param        = text-param
        ; Text parameters allowed
   value        = text-value-list

   ; **** PHOTO ****
   param        = img-inline-param
        ; Only image parameters allowed

   param        =/ img-refer-param
        ; Only image parameters allowed

   value        = img-inline-value
        ; Value and parameter MUST match

   value        =/ img-refer-value
        ; Value and parameter MUST match

   ; **** BDAY ****
   param        = ("VALUE" "=" "date")
        ; Only value parameter allowed

   param        =/ ("VALUE" "=" "date-time")
        ; Only value parameter allowed

   value        = date-value
        ; Value MUST match value type

   value        =/ date-time-value
        ; Value MUST match value type

   ; **** ADR ****
   param        = adr-param / text-param
        ; Only adr and text parameters allowed

   value        = adr-value

   ; **** LABEL ****
   param        = adr-param / text-param
        ; Only adr and text parameters allowed

   value        = text-value

   ; **** TEL ****
   param        = tel-param
        ; Only tel parameters allowed

   value        = uri-value

   tel-param    = "TYPE" "=" tel-type *("," tel-type)
   tel-type     = "HOME" / "WORK" / "PREF" / "VOICE" / "FAX" / "MSG"
                / "CELL" / "PAGER" / "BBS" / "MODEM" / "CAR" / "ISDN"
                / "VIDEO" / "PCS" / iana-token / x-name
        ; Values are case insensitive

   ; **** EMAIL ****
   param        = email-param
        ; Only email parameters allowed

   value        = text-value

   email-param  = "TYPE" "=" email-type ["," "PREF"]
        ; Value is case insensitive

   email-type   = "INTERNET" / "X400" / iana-token / "X-" word
        ; Values are case insensitive

   ; **** TZ ****
   param        = ""
        ; No parameters allowed

   value        = utc-offset-value

   ; **** GEO ****
   param        = ""
        ; No parameters allowed

   value        = float-value ";" float-value

   ; **** TITLE ****
   param        = text-param
        ; Only text parameters allowed

   value        = text-value

   ; **** ROLE ****
   param        = text-param
        ; Only text parameters allowed

   value        = text-value

   ; **** LOGO ****
   param        = img-inline-param / img-refer-param
        ; Only image parameters allowed

   value        = img-inline-value / img-refer-value
        ; Value and parameter MUST match

   ; **** AGENT ****
   param        = agent-refer-param / text-param

   value        = agent-refer-value / text-value
        ; Value and parameter MUST match

   agent-refer-param = ""
        ; No parameters allowed

   agent-refer-value = uri
        ; URI MUST refer to valid vCard object

   ; **** ORG ****
   param        = text-param
        ; Only text parameters allowed

   value        = org-value

   org-value    = *(text-value ";") text-value
        ; First is Organization Name, remainder are Organization Units.

   ; **** MEMBER ****
   param        = ""
        ; No parameters allowed

   value        = uri
        ; Any valid URI scheme

   ; **** RELATED ****
   param        = "TYPE" "=" related-type
        ; Value is case insensitive

   value         = uri
        ; Any valid URI scheme

   related-type = "parent" / "child" / "sibling" / "manager"
                / "assistant" / iana-token / "X-" word
        ; Values are case insensitive

   ; **** CATEGORIES ****
   param        = text-param
        ; Only text parameters allowed

   value        = text-value-list

   ; **** NOTE ****
   param        = text-param
        ; Only text parameters allowed
   value        = text-value

   ; **** PRODID ****
   param        = ""
        ; No parameters allowed

   value        = text-value

   ; **** REV ****
   param        = ["VALUE" "=" "date-time"]
        ; Only value parameters allowed. Values are case insensitive.

   param        =/ "VALUE" "=" "date"
        ; Only value parameters allowed. Values are case insensitive.

   value        = date-time-value

   value        =/ date-value

   ; **** SORT-STRING ****
   param        = text-param
        ; Only text parameters allowed

   value        = text-value

   ; **** SOUND ****
   param        = snd-inline-param
        ; Only sound parameters allowed

   param        =/ snd-refer-param
        ; Only sound parameters allowed

   value        = snd-line-value
        ; Value MUST match value type

   value        =/ snd-refer-value
        ; Value MUST match value type

   snd-inline-value     = binary-value CRLF
        ; Value MUST be "b" encoded audio content

   snd-inline-param     = ("VALUE" "=" "binary")
                        / ("ENCODING" "=" "b")
                        / ("TYPE" "=" *SAFE-CHAR)
        ; Value MUST be an IANA registered audio type

   snd-refer-value      = uri
        ; URI MUST refer to audio content of given type
   snd-refer-param      = ("VALUE" "=" "uri")
                        / ("TYPE" "=" word)
        ; Value MUST be an IANA registered audio type

   ; **** UID ****
   param        = ""
        ; No parameters allowed

   value        = uri

   ; **** URL ****
   param        = ""
        ; No parameters allowed

   value        = uri

   ; **** VERSION ****
   ;This type MUST be included in a vCard object.
   param        = ""
        ; No parameters allowed

   value        = text-value
        ; Value MUST be "4.0"

   ; **** CLASS ****
   param        = ""
        ; No parameters allowed

   value        = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL"
                / iana-token / x-name
        ; Value are case insensitive

   ; **** KEY ****
   param        = key-txt-param
        ; Only value and type parameters allowed

   param        =/ key-bin-param
        ; Only value and type parameters allowed

   value        = text-value

   value        =/ binary-value

   key-txt-param = "TYPE" "=" keytype

   key-bin-param = ("TYPE" "=" keytype)
                 / ("ENCODING" "=" "b")
        ; Value MUST be a "b" encoded key or certificate
   keytype      = param-value
        ; Type MUST be a media type as defined in RFC 4288

   ; **** X- **** non-standard type
   param        = text-param / (x-name "=" param-value)
        ; Only text or non-standard parameters allowed

   value        = text-value

   ;*******************************************
   ; vCard Commonly Used Parameter Definition
   ;*******************************************

   text-param   = ("VALUE" "=" "ptext")
                / ("LANGUAGE" "=" langval)
                / (x-name "=" param-value)

   langval      = &lt;a language string as defined in [RFC4646]&gt;

   img-inline-value     = binary-value
        ;Value MUST be "b" encoded image content

   img-inline-param

   img-inline-param     = ("VALUE" "=" "binary")
                        / ("ENCODING" "=" "b")
                        / ("TYPE" "=" param-value)
        ;TYPE value MUST be an image media type as defined in RFC 4288

   img-refer-value = uri
        ;URI MUST refer to image content of given type

   img-refer-param      = ("VALUE" "=" "uri")
                        / ("TYPE" "=" param-value)
        ;TYPE value MUST be an image media type as defined in RFC 4288

   adr-param    = ("TYPE" "=" adr-type *("," adr-type))
                / (text-param)

   adr-type     = "home" / "work" / "pref" / iana-token / x-name

   adr-value    = 0*6(text-value ";") text-value
        ; PO Box, Extended Address, Street, Locality, Region, Postal
        ; Code, Country Name
   ;*******************************************
   ; vCard Type Value Definition
   ;*******************************************

   text-value-list      = 1*text-value *("," 1*text-value)

   text-value   = *(SAFE-CHAR / ":" / DQUOTE / ESCAPED-CHAR)

   ESCAPED-CHAR = "\\" / "\;" / "\," / "\n" / "\N"
        ; \\ encodes \, \n or \N encodes newline
        ; \; encodes ;, \, encodes ,

   binary-value = &lt;A "b" encoded text value as defined in [RFC2047]&gt;

   date-value   = &lt;A single date value as defined in [RFC2425]&gt;

   time-value   = &lt;A single time value as defined in [RFC2425]&gt;

   date-time-value = &lt;A single date-time value as defined in [RFC2425]&gt;

   float-value  = &lt;A single float value as defined in [RFC2425]&gt;

   phone-number-value = phone-prefix 1*(SP 1*DIGIT) [phone-ext]

   phone-prefix = "+" 1*DIGIT / "(" 1*DIGIT ")"

   phone-ext = "ext." 1*DIGIT

   uri-value    = &lt;A uri value as defined in [RFC2425]&gt;

   utc-offset-value = ("+" / "-") time-hour ":" time-minute
   time-hour    = 2DIGIT                ;00-23
   time-minute  = 2DIGIT                ;00-59
  </artwork>
  </figure>

</section>

<section title="Example: Authors' vCards" anchor="oldsection_7_">

  <figure>
  <artwork>
   BEGIN:VCARD
   VERSION:4.0
   FN:Simon Perreault
   N:Perreault;Simon;;;ing. jr.,M.Sc.
   BDAY:1983-02-03
   GENDER:M
   ORG:Viagénie
   ADR;TYPE=work:;;2600 boul. Laurier\, suite 625;
    Québec;QC;G1V 4W1;Canada
   TEL;TYPE=voice,work:tel:+1-418-656-9254;ext=102
   TEL;TYPE=fax,work:tel:+1-418-656-9257
   EMAIL;TYPE=internet,work:simon.perreault@viagenie.ca
   GEO:46.772673,-71.282945
   CLASS:PUBLIC
   KEY;VALUE=uri:http://www.viagenie.ca/simon.perreault/simon.asc
   END:VCARD
  </artwork>
  </figure>

  <figure>
  <artwork>
   BEGIN:VCARD
   VERSION:4.0
   FN:Pete Resnick
   N:Resnick;Pete;;;
   GENDER:M
   ORG:QUALCOMM Incorporated
   ADR;TYPE=work:;;5775 Morehouse Drive;San Diego;CA;92121-1714;US
   TEL;TYPE=voice:tel:+1-858-651-4478
   EMAIL;TYPE=internet:presnick@qualcomm.com
   URL:http://www.qualcomm.com/~presnick/
   END:VCARD
  </artwork>
  </figure>

</section>

<section title="Security Considerations" anchor="security_considerations">
  <t>
    <list style="symbols">
      <t>Internet mail is subject to many well known security attacks,
        including monitoring, replay, and forgery. Care should be taken by
        any directory service in allowing information to leave the scope of
        the service itself, where any access controls can no longer be
        guaranteed.  Applications should also take care to display directory
        data in a "safe" environment (e.g., PostScript-valued types).</t>
      <t>vCards can carry cryptographic keys or certificates, as described
        in <xref target="KEY"/>.</t>
      <t><xref target="CLASS"/> specifies a desired security
        classification policy for a particular vCard. That policy is not
        enforced in any way.</t>
      <t>The vCard objects have no inherent authentication or privacy, but
        can easily be carried by any security mechanism that transfers MIME
        objects with authentication or privacy. In cases where threats of
        "spoofed" vCard information is a concern, the vCard SHOULD BE
        transported using one of these secure mechanisms.</t>
      <t>The information in a vCard may become out of date. In cases where
        the vitality of data is important to an originator of a vCard, the
        "URL" type described in <xref target="URL"/> SHOULD BE
        specified. In addition, the "REV" type described in section <xref
          target="REV"/> can be specified to indicate the last
        time that the vCard data was updated.</t>
    </list>
  </t>
</section>

<section title="IANA Considerations">

  <section title="Registering New vCard Elements" anchor="iana_registration">

    <t>This section defines the process for registering new or modified vCard
      elements (i.e. properties, parameters, value data types, and values) with
      IANA.</t>

    <section title="Registration Procedure">
      <t>The IETF will create a mailing list,
        <eref target="mailto:vcard@ietf.org">vcard@ietf.org</eref>, which can
        be used for public discussion of vCard element proposals prior to
        registration.  Use of the mailing list is strongly encouraged.  The IESG
        will appoint a designated expert who will monitor the
        <eref target="mailto:vcard@ietf.org">vcard@ietf.org</eref> mailing list
        and review registrations.</t>

      <t>Registration of new vCard elements MUST be reviewed by the
        designated expert and published in an RFC.  A Standard Tracks RFC is
        REQUIRED for the regisration of new value data types that modify
        existing properties.  A Standard Tracks RFC is also REQUIRED for
        registration of vCard elements that modify vCard elements previously
        documented in a Standard Tracks RFC.</t>

      <t>The registration procedure begins when a completed registration
        template, defined in the sections below, is sent to
        <eref target="mailto:vcard@ietf.org">vcard@ietf.org</eref> and
        <eref target="mailto:iana@iana.org">iana@iana.org</eref>.  The
        designated expert is expected to tell IANA and the submitter of the
        registration within two weeks whether the registration is approved,
        approved with minor changes, or rejected with cause.  When a
        registration is rejected with cause, it can be re-submitted if the
        concerns listed in the cause are addressed.  Decisions made by the
        designated expert can be appealed to the IESG Applications Area
        Director, then to the IESG.  They follow the normal appeals procedure
        for IESG decisions.</t>
    </section>

    <section title="Vendor Namespace">

      <t>The vendor namespace is used for vCard elements associated with
        commercially available products.  "Vendor" or "producer" are construed
        as equivalent and very broadly in this context.</t>

      <t>A registration may be placed in the vendor namespace by anyone who
        needs to interchange files associated with the particular product.
        However, the registration formally belongs to the vendor or organization
        handling the vCard elements in the namespace being registered.  Changes
        to the specification will be made at their request, as discussed in
        subsequent sections.</t>

      <t>vCard elements belonging to the vendor namespace will be distinguished
        by the "VND-" prefix.  That may be followed, at the discretion of the
        registrant, by either a vCard element name from a well-known producer
        (e.g., "VND-MUDPIE") or by an IANA-approved designation of the
        producer's name that is followed by a vCard element designation (e.g.,
        "VND-BIGCOMPANY-MUDPIE").</t>

      <t>While public exposure and review of vCard elements to be registered in
        the vendor namespace is not required, using the <eref
          target="mailto:vcard@ietf.org">vcard@ietf.org</eref> mailing list for
        review is strongly encouraged to improve the quality of those
        specifications.  Registrations in the vendor namespace may be submitted
        directly to the IANA.</t>

    </section>

    <section title="Registration Template for Properties">
      <t>A property is defined by completing the following template.</t>
      <t>
        <list style="hanging">
          <t hangText="Property name:">The name of the property.</t>
          <t hangText="Purpose:">The purpose of the property.  Give a short but
            clear description.</t>
          <t hangText="Value type:">Any of the valid value types for the
            property value needs to be specified.  The default value type also
            needs to be specified.</t>
          <t hangText="Property parameters:">Any of the valid property
            parameters for the property MUST be specified.</t>
          <t hangText="Description:">Any special notes about the property, how
            it is to be used, etc.</t>
          <t hangText="Format definition:">The ABNF for the property definition
            needs to be specified.</t>
          <t hangText="Example(s):">One or more examples of instances of the
            property needs to be specified.</t>
        </list>
      </t>
    </section>

    <section title="Registration Template for Parameters">
      <t>A parameter is defined by completing the following template.</t>
      <t>
        <list style="hanging">
          <t hangText="Parameter name:">The name of the parameter.</t>
          <t hangText="Purpose:">The purpose of the parameter.  Give a short but
            clear description.</t>
          <t hangText="Description:">Any special notes about the parameter, how
            it is to be used, etc.</t>
          <t hangText="Format definition:">The ABNF for the parameter definition
            needs to be specified.</t>
          <t hangText="Example(s):">One or more examples of instances of the
            parameter needs to be specified.</t>
        </list>
      </t>
    </section>

    <section title="Registration Template for Value Data Types">
      <t>A value data type is defined by completing the following template.</t>
      <t>
        <list style="hanging">
          <t hangText="Value name:">The name of the value type.</t>
          <t hangText="Purpose:">The purpose of the value type.  Give a short
            but clear description.</t>
          <t hangText="Description:">Any special notes about the value type, how
            it is to be used, etc.</t>
          <t hangText="Format definition:">The ABNF for the value type
            definition needs to be specified.</t>
          <t hangText="Example(s):">One or more examples of instances of the
            value type needs to be specified.</t>
        </list>
      </t>
    </section>

    <section title="Registration Template for Values">
      <t>A value is defined by completing the following template.</t>
      <t>
        <list style="hanging">
          <t hangText="Value:">The value literal.</t>
          <t hangText="Purpose:">The purpose of the value.  Give a short but
            clear description.</t>
          <t hangText="Conformance:">The vCard properties and/or parameters
            that can take this value needs to be specified.</t>
          <t hangText="Example(s):">One or more examples of instances of the
            value needs to be specified.</t>
        </list>
      </t>
      <t>The following is a fictitious example of a registration of a vCard
        value:</t>
      <t>
        <list style="hanging">
          <t hangText="Value:">TOP-SECRET</t>
          <t hangText="Purpose:">This value is used to specify the access
            classification of top-secret vCards.</t>
          <t hangText="Conformance:">This value can be used with the "CLASS"
            property.</t>
          <t hangText="Example(s):">The following is an example of this value
            used with the "CLASS" property:</t>
        </list>
      </t>
      <t>
        <figure>
          <artwork>
  CLASS:TOP-SECRET
          </artwork>
        </figure>
      </t>
    </section>

  </section>

  <section title="Initial vCard Elements Registries">

    <t>The IANA is requested to create and maintain the following registries for
      vCard elements with pointers to appropriate reference documents.</t>

    <section title="Properties Registry">
      <t>The following table is to be used to initialize the properties
        registry.</t>
      <texttable>
        <ttcol align="left">Property</ttcol>
        <ttcol align="left">Status</ttcol>
        <ttcol align="left">Reference</ttcol>

        <c>SOURCE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="SOURCE"/></c>

        <c>NAME</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="NAME"/></c>

        <c>KIND</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="KIND"/></c>

        <c>FN</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="FN"/></c>

        <c>N</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="N"/></c>

        <c>NICKNAME</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="NICKNAME"/></c>

        <c>PHOTO</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="PHOTO"/></c>

        <c>BDAY</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="BDAY"/></c>

        <c>DDAY</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="DDAY"/></c>

        <c>BIRTH</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="BIRTH"/></c>

        <c>DEATH</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="DEATH"/></c>

        <c>GENDER</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="GENDER"/></c>

        <c>ADR</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="ADR"/></c>

        <c>LABEL</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="LABEL"/></c>

        <c>TEL</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="TEL"/></c>

        <c>EMAIL</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="EMAIL"/></c>

        <c>IMPP</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="IMPP"/></c>

        <c>LANG</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="LANG"/></c>

        <c>TZ</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="TZ"/></c>

        <c>GEO</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="GEO"/></c>

        <c>TITLE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="TITLE"/></c>

        <c>ROLE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="ROLE"/></c>

        <c>LOGO</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="LOGO"/></c>

        <c>AGENT</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="AGENT"/></c>

        <c>ORG</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="ORG"/></c>

        <c>MEMBER</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="MEMBER"/></c>

        <c>RELATED</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="RELATED"/></c>

        <c>CATEGORIES</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="CATEGORIES"/></c>

        <c>NOTE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="NOTE"/></c>

        <c>PRODID</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="PRODID"/></c>

        <c>REV</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="REV"/></c>

        <c>SORT-STRING</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="SORT-STRING"/></c>

        <c>SOUND</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="SOUND"/></c>

        <c>UID</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="UID"/></c>

        <c>URL</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="URL"/></c>

        <c>VERSION</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="VERSION"/></c>

        <c>CLASS</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="CLASS"/></c>

        <c>KEY</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="KEY"/></c>

        <c>FBURL</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="FBURL"/></c>

        <c>CALADRURI</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="CALADRURI"/></c>

        <c>CALURI</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="CALURI"/></c>
      </texttable>
    </section>

    <section title="Parameters Registry">
      <t>The following table is to be used to initialize the parameters
        registry.</t>
      <texttable>
        <ttcol align="left">Parameter</ttcol>
        <ttcol align="left">Status</ttcol>
        <ttcol align="left">Reference</ttcol>

        <c>LANGUAGE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="LANGUAGE"/></c>

        <c>ENCODING</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="ENCODING"/></c>

        <c>VALUE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="VALUE"/></c>

        <c>PID</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="PID"/></c>

        <c>TYPE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="TYPE"/></c>
      </texttable>
    </section>

    <section title="Value Data Types Registry">
      <t>The following table is to be used to initialize the parameters
        registry.</t>
      <texttable>
        <ttcol align="left">Value Data Type</ttcol>
        <ttcol align="left">Status</ttcol>
        <ttcol align="left">Reference</ttcol>

        <c>BINARY</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="BINARY"/></c>

        <c>BOOLEAN</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="BOOLEAN"/></c>

        <c>DATE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="DATE_TIME"/></c>

        <c>TIME</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="DATE_TIME"/></c>

        <c>DATE-TIME</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="DATE_TIME"/></c>

        <c>FLOAT</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="FLOAT"/></c>

        <c>INTEGER</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="INTEGER"/></c>

        <c>TEXT</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="TEXT"/></c>

        <c>URI</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="URI"/></c>
      </texttable>
    </section>

  </section>

</section>

<section title="Acknowledgements">
  <t>
    The authors would like to thank Frank Dawson and Tim Howes, the original
    authors of <xref target="RFC2425"/> and <xref target="RFC2426"/>, as well as
    the following individuals who have participated in the drafting, review and
    discussion of this memo:
  </t>
  <t>
    Marc Blanchet,
    Stephane Bortzmeyer,
    Dan Brickley,
    Chris Bryant,
    Dany Cauchie,
    Darryl Champagne,
    Cyrus Daboo,
    Lisa Dusseault,
    Javier Godoy,
    Helge Hess,
    Alexander Mayrhofer,
    Chris Newman,
    Mark Paterson,
    Julian Reschke,
    Peter K. Sheerin,
    Anil Srivastava,
    and Kurt Zeilenga.
  </t>
</section>

</middle>

<back>
  <references title='Normative References'>
   &iso86011988;

   &ccitte1631988;

   &ccittx1211988;

   &ccittx5201988;

   &ccittx5211988;

   &rfc2425;
   &rfc2426;

   &rfc2046;

   &rfc2047;

   &rfc2119;

   &rfc2616;

   &rfc2739;

   &rfc2822;

   &rfc2978;

   &rfc3629;

   &rfc3966;

   &rfc3986;

   &rfc4122;

   &rfc4288;

   &rfc4646;

   &rfc4770;

   &rfc5234;

	<reference anchor='oldreference_UNICODE'>
	<front>
	<title>The Unicode Standard - Version 2.0", The Unicode Consortium</title>
	<author>
	<organization>The International Organization for Standardization</organization>
	</author>
	<date year='1996' month='July' />
	</front>
	</reference>
	
	<reference anchor='oldreference_VCARD'>
	<front>
	<title>vCard - The Electronic Business Card Version 2.1</title>
	<author>
	<organization>Internet Mail Consortium</organization>
	</author>
	<date year='September' day='18' month='September' />
	</front>
	</reference>
  </references>

  <references title="Informative References">

    <reference anchor='ISO9070'>
      <front>
        <title>ISO 9070, Information Processing - SGML support facilities -
          Registration Procedures for Public Text Owner Identifiers</title>
        <author>
          <organization>The International Organization for
            Standardization</organization>
        </author>
        <date year='1991' month='April' />
      </front>
    </reference>

    <reference anchor="WGS84">
      <front>
        <title>Department of Defense World Geodetic System 1984, Third
          Edition</title>
        <author>
          <organization>National Imagery and Mapping Agency</organization>
        </author>
        <date year="2000" month="January"/>
      </front>
      <seriesInfo name="NIMA" value="TR8350.2"/>
    </reference>

    &rfc3406;

  </references>

  <section title="Differences from RFCs 2425 and 2426" anchor="diff">
    <t>
      This appendix contains a list of changes that have been made in the vCard
      specification from RFCs 2425 and 2426.
    </t>

    <section title="New Structure">
      <t>
        <list style="symbols">
          <t><xref target="RFC2425"/> and <xref target="RFC2426"/> have been
            merged. Initially <xref target="RFC2425"/> was intended to
            be extensible but only 2426 ever extended it.</t>
          <t>vCard is now not only a MIME type but a stand-alone format.</t>
          <t>A proper MIME type registration form has been included.</t>
          <t>UTF-8 is now the default character set.</t>
          <t>New vCard elements can be registered from IANA.</t>
        </list>
      </t>
    </section>

    <section title="Removed Features">
      <t>
        <list style="symbols">
          <t>The group construct (i.e. GROUP.PROPERTY:...) no longer exists.</t>
          <t>The CONTEXT and CHARSET parameters are no more.</t>
          <t>The MAILER property is no more.</t>
          <t>The "intl", "dom", "postal", and "parcel" TYPE parameter values for
            the ADR and LABEL properties have been removed.</t>
          <t>Inline vCards (such as the value of the AGENT property) are no
            longer supported.</t>
        </list>
      </t>
    </section>

    <section title="New Properties and Parameters">
      <t>
        <list style="symbols">
          <t>The KIND, GENDER, LANG, DDAY, BIRTH, and DEATH properties
            have been added.</t>
          <t><xref target="RFC2739"/>, which defines the FBURL, CALADRURI,
              CAPURI, and CALURI properties, has been merged in.</t>
          <t><xref target="RFC4770"/>, which defines the IMPP property, has been
            merged in.</t>
          <t>The "work", "home", and "uri" TYPE parameter values for the EMAIL
            property have been added.</t>
        </list>
      </t>
    </section>

    <section title="Other Changes">
      <t>
        <list style="symbols">
          <t>Synchronization is addressed in <xref
              target="synchronization"/>.</t>
          <t>The N property is no longer mandatory.</t>
          <t>The value of TEL is now a URI.</t>
        </list>
      </t>
    </section>
  </section>

  <section title="Change Log (to be removed by RFC Editor prior to
    publication)" anchor="changelog">
    <section title="Changes in -02">
      <t>
        <list style="symbols">
          <t>Removed useless text in IMPP description.</t>
          <t>Added CalDAV-SCHED example to CALADRURI.</t>
          <t>Removed CAPURI property.</t>
          <t>Dashes in dates and colons in times are now mandatory.</t>
          <t>Allow for dates such as 2008 and 2008-05 and times such as 07 and
              07:54.</t>
          <t>Removed inline vCard value.</t>
          <t>Made AGENT only accept URI references instead of inline vCards.</t>
          <t>Added the MEMBER property.</t>
          <t>Renamed the UID parameter to PID.</t>
          <t>Changed the value type of the PID parameter to "a small
              integer."</t>
          <t>Changed the presence of UID and PID when synchronization is to be
              used from MUST to SHOULD.</t>
          <t>Added the RELATED (<xref target="RELATED"/>) property.</t>
          <t>Fixed many ABNF typos (issue #252).</t>
          <t>Changed formatting of ABNF comments to make them easier to read
              (issue #226).</t>
        </list>
      </t>
    </section>
    <section title="Changes in -01">
      <t>
        <list style="symbols">
          <t>Merged <xref target="RFC2739"/> in.</t>
          <t>Converted all foobar.com, abc.com, etc. to example.com.</t>
          <t>Fixed bugs in ABNF.</t>
          <t>Made explicit that coordinates in the GEO property are expressed in
            the WGS 84 reference system.</t>
          <t>Clarified folding issues with multi-byte characters.</t>
          <t>Made the value of TEL a URI.</t>
          <t>Added the UID parameter.</t>
          <t>Made the UID property's value type a URI.</t>
          <t>Added <xref target="synchronization"/>.</t>
          <t>Created IANA process for registering new parameters, value types,
            and properties.</t>
          <t>Created the initial IANA registries.</t>
          <t>Created vendor namespace based on text from RFC 4288.</t>
        </list>
      </t>
    </section>
    <section title="Changes in -00">
      <t>
        <list style="symbols">
          <t>Name change because draft has been accepted as WG item. Otherwise,
            same as draft-resnick-vcarddav-vcardrev-01.</t>
          <t>Removed reference to RFC 2234.</t>
          <t>Fixed errata from
            http://www.rfc-editor.org/errata_search.php?rfc=2426.</t>
          <t>Removed passage referring to RFC 2425 profiles.</t>
          <t>Renamed <xref target="oldsection_3_3"/> from "Telecommunications
            Adressing Properties" to "Communications Properties.</t>
          <t>Added <xref target="diff"/> and <xref target="changelog"/>.</t>
          <t>Added reference to <xref target="RFC4770"/>.</t>
          <t>Removed the group construct.</t>
          <t>Made the N property no longer mandatory.</t>
          <t>Added the KIND property.</t>
          <t>Clarified meaning of TYPE parameter value for PHOTO, LOGO, KEY, and
            SOUND.</t>
          <t>Removed the CONTEXT parameter.</t>
          <t>Removed the MAILER property.</t>
          <t>Made reference to <xref target="ISO9070"/> informative.</t>
          <t>Removed "intl", "dom", "postal", and "parcel" TYPE parameter values
            for the ADR and LABEL properties.</t>
          <t>Clarified meaning of "extended address" ADR field.</t>
          <t>Mentioned <xref target="RFC3406"/> as another method of generating
            PRODID values.</t>
          <t>Updated obsolete references.</t>
          <t>Allowed BDAY and DDAY value types to be text values for fuzzy
            dates.</t>
          <t>Removed the CHARSET property. Now the encoding is always UTF-8,
            except when overridden by the Content-Type (which is considered a
            compatibility feature).</t>
        </list>
      </t>
    </section>
  </section>
</back>

</rfc>
