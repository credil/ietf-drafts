<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC3331 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3331.xml">
<!ENTITY RFC4666 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4666.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="2"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="&lt;draft-nagelberg-m2ua-implementors-guide-00&gt;" ipr="full3978">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title>M2UA Implementor's Guide</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

     <author fullname="Barry Nagelberg" initials="B.N." surname="Nagelberg">
      <organization abbrev="Adax">Adax, Inc.</organization>

      <address>
        <postal>
          <street>520 Fellowship Rd. Suite C-304</street>

          <!-- Reorder these if your country does things differently -->

          <city>Mount Laurel</city>

          <region>NJ</region>

          <code>08054</code>

          <country>US</country>
        </postal>

        <phone>+1 856 642 7757</phone>

        <email>barryn@adax.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date year="2007" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Signaling Transport Working Group</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>I-D</keyword>
    <keyword>Internet-Draft</keyword>
    <keyword>XML</keyword>
    <keyword>
    Extensible Markup Language
    </keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>   This document contains a compilation of all defects found since
            the publication date for M2UA [RFC3331]. These defects may be of an
            editorial or technical nature. This document may be thought of as a
            companion document to be used in the implementation of M2UA to
            clarify errors in the original M2UA document. This document updates
            RFC3331 and text within this document supersedes the text found in
            RFC3331.</t>
    </abstract>
  </front>

    <middle>
        <section title="Introduction">
            <t>  This document contains a compilation of all defects found since the
            publication date for M2UA <xref target="RFC3331"></xref>.  These defects may be of an
            editorial or technical nature.  This document may be thought of as a
            companion document to be used in the implementation of M2UA to
            clarify errors in the original M2UA document.  This document updates
            RFC3331 and text within this document supersedes the text found in
            RFC3331. Each error will be detailed within this document in the form of:

            <list style="symbols">
                <t>The problem description</t>
                <t>The text quoted from RFC3331</t>
                <t>The replacement text</t>
                <t>A description of the solution</t>
            </list>              
            </t>

            <section title="Terminology">
                <t>The terms are commonly identified in related work M2UA <xref
                target="RFC3331"></xref>.</t>
            </section>

            <section title="Requirements Language">
                <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
                document are to be interpreted as described in <xref
                target="RFC2119">RFC 2119</xref>.</t>
            </section>
        </section>

    <!-- This PI places the pagebreak correctly (before the section title) in the text output. -->
    <?rfc needLines="8" ?>

    <section title="Corrections to RFC3331">

        <section title="n+k redundancy">

            <section title="Description of the problem">
            <t>
            The n+k redundancy model is explained as a general model but there
            is no reference to it in the current AS state diagram, and sometimes it is
            not clear when it should be used. Also the term "n+k" is
            subject to multiple interpretations.
            </t>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text: (Section 1.3.2)<vspace />
            ---------<vspace blankLines='1' />

            The M2UA layer supports a n+k redundancy model (active-standby, load
            sharing, broadcast) where n is the minimum number of redundant ASPs
            required to handle traffic and k ASPs are available to take over for
            a failed or unavailable ASP. Note that 1+1 active/standby redundancy
            is a subset of this model. A simplex 1+0 model is also supported as
            a subset, with no ASP redundancy.</t>


            <t>
            ---------<vspace />
            New text: (Section 1.3.2)<vspace />
            ---------<vspace blankLines='1' />

            The M2UA layer supports an "n+k" redundancy model, where "n" ASPs
            is the number of redundant ASPs required to handle traffic and "k"
            ASPs are available to take over for a failed or unavailable ASP.
            Traffic SHOULD be sent after "n" ASPs are active. "k" ASPs MAY be
            either active at the same time as "n" or kept inactive until needed
            due to a failed or unavailable ASP.<vspace blankLines='1' />

            A "1+1" active/backup redundancy is a subset of this model.  A
            simplex "1+0" model is also supported as a subset, with no ASP
            redundancy.</t>

            <t>
            ---------<vspace />
            Old text: (Section 4.3.2)<vspace />
            ---------<vspace blankLines='1' />

            AS-DOWN: The Application Server is unavailable.  This state implies
            that all related ASPs are in the ASP-DOWN state for this AS.
            Initially the AS will be in this state.  An Application Server MUST
            be in the AS-DOWN state before it can be removed from a
            configuration.<vspace blankLines='1' />

            AS-INACTIVE: The Application Server is available but no application
            traffic is active (i.e., one or more related ASPs are in the ASP-
            INACTIVE state, but none in the ASP-ACTIVE state).  The recovery
            timer T(r) is not running or has expired.<vspace blankLines='1' />

            AS-ACTIVE: The Application Server is available and application
            traffic is active.  This state implies that at least one ASP is in
            the ASP-ACTIVE state.<vspace blankLines='1' />

            AS-PENDING: An active ASP has transitioned to ASP-INACTIVE or ASP-
            DOWN and it was the last remaining active ASP in the AS.  A recovery
            timer T(r) SHOULD be started and all incoming signalling messages
            SHOULD be queued by the SGP.  If an ASP becomes ASP-ACTIVE before
            T(r) expires, the AS is moved to the AS-ACTIVE state and all the
            queued messages will be sent to the ASP.<vspace blankLines='1' />

            If T(r) expires before an ASP becomes ASP-ACTIVE, the SGP stops
            queuing messages and discards all previously queued messages.  The AS
            will move to the AS-INACTIVE state if at least one ASP is in the
            ASP-INACTIVE state, otherwise it will move to the AS-DOWN state.<vspace blankLines='1' />

            Figure 6 shows an example AS state machine for the case where the
            AS/ASP data is pre-configured.  For other cases where the AS/ASP
            configuration data is created dynamically, there would be differences
            in the state machine, especially at the creation of the AS.<vspace blankLines='1' />

            For example, where the AS/ASP configuration data is not created until
            Registration of the first ASP, the AS-INACTIVE state is entered
            directly upon the first successful REG REQ from an ASP.  Another
            example is where the AS/ASP configuration data is not created until
            the first ASP successfully enters the ASP-ACTIVE state.  In this case
            the AS-ACTIVE state is entered directly.</t>

            <figure>
            <artwork><![CDATA[

                Figure 6: AS State Transition Diagram

     +----------+   one ASP trans to ACTIVE   +-------------+
     |    AS-   |---------------------------->|     AS-     |
     | INACTIVE |                             |   ACTIVE    |
     |          |<---                         |             |
     +----------+    \                        +-------------+
        ^   |         \ Tr Expiry,                ^    |
        |   |          \ at least one             |    |
        |   |           \ ASP in ASP-INACTIVE     |    |
        |   |            \                        |    |
        |   |             \                       |    |
        |   |              \                      |    |
one ASP |   | all ASP       \            one ASP  |    | Last ACTIVE
trans   |   | trans to       \           trans to |    | ASP trans to
to      |   | ASP-DOWN        -------\   ASP-     |    | ASP-INACTIVE
ASP-    |   |                         \  ACTIVE   |    | or ASP-DOWN
INACTIVE|   |                          \          |    | (start Tr)
        |   |                           \         |    |
        |   |                            \        |    |
        |   v                             \       |    v
     +----------+                          \  +-------------+
     |          |                           --|             |
     | AS-DOWN  |                             | AS-PENDING  |
     |          |                             |  (queuing)  |
     |          |<----------------------------|             |
     +----------+    Tr Expiry and no ASP     +-------------+
                     in ASP-INACTIVE state

  Tr = Recovery Timer

            ]]></artwork></figure>

            <t>
            ---------<vspace />
            New text: (Section 4.3.2)<vspace />
            ---------<vspace blankLines='1' />

            AS-DOWN: The Application Server is unavailable.  This state implies
            that all the ASPs are in the ASP-DOWN state. Initially the AS will be in
            this state. An Application Server is in the AS-DOWN state when it is
            removed from a configuration.<vspace blankLines='1' />

            AS-INACTIVE: The Application Server is available but no application
            traffic is active. One or more ASPs are in ASP-INACTIVE state and/or
            the number of ASPs in ASP-ACTIVE state has not reached n.  The
            recovery timer T(r) is not running or has expired.<vspace blankLines='1' />

            AS-ACTIVE: The Application Server is available and application
            traffic is active. The AS moves to this state after being in AS-
            INACTIVE and getting n ASPs in ASP-ACTIVE state or, after reaching
            AS-ACTIVE and keeping one or more ASPs in ASP-ACTIVE state.
            When it is considered that one ASP is enough to handle traffic
            (smooth start), the AS in AS-INACTIVE MAY reach the AS-ACTIVE as soon
            as the first ASP moves to the ASP-ACTIVE state.<vspace blankLines='1' />

            AS-PENDING: The last active ASP has transitioned from ASP-ACTIVE to
            ASP-INACTIVE or ASP-DOWN.  A recovery timer T(r) SHOULD be started
            and all incoming signalling messages SHOULD be queued by the SGP. If
            an ASP becomes ASP-ACTIVE before T(r) expires, the AS is moved to the
            AS-ACTIVE state and all the queued messages will be sent to the ASP.<vspace blankLines='1' />

            If T(r) expires before an ASP becomes ASP-ACTIVE, the SGP MAY stop
            queuing messages and discard all
            previously queued messages. The AS will move to the AS-INACTIVE state
            if at least the number of ASPs in ASP-INACTIVE sum n, otherwise it
            will move to AS-DOWN state.<vspace blankLines='1' />

            Figure 6 shows an example AS state machine for the case where the
            AS/ASP data is preconfigured and an n+k redundancy model.</t>


            <figure>
            <artwork><![CDATA[

            Figure 6: AS State Transition Diagram


    +----------+          IA2AC              +-------------+
    |    AS-   |---------------------------->|     AS-     |
    | INACTIVE |                             |   ACTIVE    |
    |          |<-----------                 |             |
    +----------+            \                +-------------+
       ^   |                 \                    ^   |
       |   | IA2DN            \ PN2IA             |   | AC2PN
       |   |                   \                  |   |
 DN2IA |   |                    \          PN2AC  |   |
       |   v                     \                |   v
    +----------+                  \          +-------------+
    |          |                   ----------|             |
    | AS-DOWN  |                             | AS-PENDING  |
    |          |                  PN2DN      |  (queueing) |
    |          |<----------------------------|             |
    +----------+                             +-------------+

            ]]></artwork></figure>

            <t>DN2IA: One ASP moves from ASP-DOWN to ASP-INACTIVE state.</t>

            <t>IA2DN: The last ASP in ASP-INACTIVE moves to ASP-DOWN.</t>

            <t>IA2AC: One ASP moves to ASP-ACTIVE, causing the number of ASPs in the
            ASP-ACTIVE state to be n.
            In a special case of smooth start, this transition MAY be done when
            the first ASP moves to ASP-ACTIVE state.</t>

            <t>AC2PN: The last ASP in ASP-ACTIVE state moves to ASP-INACTIVE or ASP-
            DOWN states.</t>

            <t>PN2AC: One ASP moves to ASP-ACTIVE.</t>

            <t>PN2IA: T(r) Expiry, n or more ASPs are in ASP-INACTIVE.</t>

            <t>PN2DN: T(r) Expiry, all the ASPs are in ASP-DOWN state.</t>

            <t>An AS becomes AS-ACTIVE when n ASPs reach the ASP-ACTIVE state
            during the start-up phase (except for smooth start). Once the traffic
            is flowing, an AS keeps the AS-ACTIVE state till the last ASP switches
            to a state other than ASP-ACTIVE. This avoids unnecessary
            traffic disturbances as long as there are ASPs available, in the
            assumption that the system will not always be exposed to the maximum
            load.</t>

            <t>There are other cases where the AS/ASP configuration data is created
            dynamically. In those cases there would be differences in the state
            machine, especially at creation of the AS. For example, where the
            AS/ASP configuration data is not created until Registration of the
            first ASP, the AS-INACTIVE state is entered directly upon the nth
            successful REG REQ from an ASP belonging to that AS.</t>

            <t>
            ---------<vspace />
            Old text: (Section 4.3.4.3, for both loadsharing and broadcast)<vspace />
            ---------<vspace blankLines='1' />

            An SGP, upon reception of an ASP Active message for the first ASP in
            a Load share AS, MAY choose not to direct traffic to a newly active
            ASP until it determines that there are sufficient resources to handle
            the expected load (e.g., until there are "n" ASPs in state ASP-ACTIVE
            in the AS).</t>

            <t>
            ---------<vspace />
            New text: (Section 4.3.4.3, for both loadsharing and broadcast)<vspace />
            ---------<vspace blankLines='1' />

            At start-up or re-start phases, an SGP, upon reception of an
            ASP Active message for the first ASP in a Loadshare AS, SHOULD NOT
            direct traffic to a newly active ASP until it determines that there
            are sufficient resources to handle the expected load (e.g., until
            there are "n" ASPs in state ASP-ACTIVE in the AS).  In this case, the
            SGP SHOULD withhold the Notify (AS-ACTIVE) until there are
            sufficient resources.</t>

            </section>

            <section title="Solution description">
            <t>
            The AS state machine reflects the state changes as a function of the
            "n" number from the n+k redundancy model. This solution is
            compliance with the previous one: 1+0 model. The change from MAY to
            SHOULD NOT makes it recommendable to send traffic only when the
            require ASPs number are in ASP-ACTIVE state.
            </t>
            </section>

        </section>

        <section title="Messages and Streams">

            <section title="Description of the problem">
            <t>
            The instructions for stream usage are distributed across different sections.
            </t>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text: (Section 1.5.4.1)<vspace />
            ---------<vspace blankLines='1' />

            SCTP Stream '0' SHOULD NOT be used for MTP2 User Adaptation (MAUP)
            messages (see Section 3) since stream '0' SHOULD only be used for ASP
            Management (ASPM) messages (see Section 4.3.3).
            </t>

            <t>
            ---------<vspace />
            New text: (Section 1.5.4.1)<vspace />
            ---------<vspace blankLines='1' />

            <list style="symbols">
            <t>SCTP Stream '0' SHOULD NOT be used for MTP2 User Adaptation (MAUP) 
            messages.</t>

            <t>All MGMT messages, with the exception of ASPTM, BEAT and BEAT Ack 
            messages, SHOULD be sent on SCTP stream '0'.</t>

            <t>All ASPTM messages SHOULD be sent on the stream which normally 
            carries the data traffic to which the message applies.</t>

            <t>BEAT and BEAT Ack messages MAY be sent on any stream.</t>
            </list></t>

            <t>
            ---------<vspace />
            Old text: (Section 4.2.1)<vspace />
            ---------<vspace blankLines='1' />

            All MGMT messages, except BEAT and BEAT Ack, SHOULD be sent with
            sequenced delivery to ensure ordering.  All MGMT messages, with the
            exception of ASPTM, BEAT and BEAT Ack messages, SHOULD be sent on
            SCTP stream '0'.  All ASPTM messages SHOULD be sent on the stream
            which normally carries the data traffic to which the message applies.
            BEAT and BEAT Ack messages MAY be sent using out-of-order delivery,
            and MAY be sent on any stream.</t>

            <t>
            ---------<vspace />
            New text: (Section 4.2.1)<vspace />
            ---------<vspace blankLines='1' />

            All MGMT messages, except BEAT and BEAT Ack, SHOULD be sent with
            sequenced delivery to ensure ordering. BEAT and BEAT Ack messages MAY be 
            sent using out-of-order delivery</t>

            </section>

            <section title="Solution description">
            <t>
            The instructions for stream usage are combined into a single section.
            </t>
            </section>

        </section>

        <section title="Parameter Containing Subparameters with Padding Bytes">

            <section title="Description of the problem">
            <t>
            If a parameter contains subparameters with padding bytes, it is not clear if the
            parameter length should include the subparameter padding bytes or not.
            </t>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text: (Section 3.1.6)<vspace />
            ---------<vspace blankLines='1' />

            Parameter Length: 16 bits (unsigned integer)<vspace blankLines='1' />

            The Parameter Length field contains the size of the parameter in
            bytes, including the Parameter Tag, Parameter Length, and Parameter
            Value fields. Thus, a parameter with a zero-length Parameter Value
            field would have a Length field of 4.  The Parameter Length does not
            include any padding bytes.
            </t>

            <t>
            ---------<vspace />
            New text: (Section 3.1.6)<vspace />
            ---------<vspace blankLines='1' />

            Parameter Length: 16 bits (unsigned integer)<vspace blankLines='1' />

            The Parameter Length field contains the size of the parameter in
            bytes, including the Parameter Tag, Parameter Length, and Parameter
            Value fields. Thus, a parameter with a zero-length Parameter Value
            field would have a Length field of 4.  The Parameter Length does not
            include any padding bytes. If the parameter contains subparameters,
            the Parameter Length field will include all the bytes of each
            subparameter including subparameter padding bytes (if any).
            </t>
            </section>

            <section title="Solution description">
            <t>
            Clarified that when calculating the length of a parameter that contains
            subparameters, the padding bytes of the subparameters should be included.
            </t>
            </section>

        </section>

        <section title="Multiple Parameters of the Same Type in a Message">

            <section title="Description of the problem">
            <t>
            It is not clear whether or not multiple parameters of same type are allowed in a message.
            </t>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text:<vspace />
            ---------<vspace blankLines='1' />

            None.</t>

            <t>
            ---------<vspace />
            New text: (Section 3.1.6)<vspace />
            ---------<vspace blankLines='1' />

            Where more than one parameter is included in a message, the
            parameters may be in any order, except where explicitly mandated.  A
            receiver SHOULD accept the parameters in any order.<vspace blankLines='1' />

            Unless explicitly stated or shown in a message format diagram, only
            one parameter of the same type is allowed in a message.

            </t>
            </section>

            <section title="Solution description">
            <t>
            Clarified that multiple parameters of the same
            type are forbidden in messages unless explicitly allowed.
            </t>
            </section>

        </section>

        <section title="How to indicate that Dynamic Registration is not supported">

            <section title="Description of the problem">
            <t>
            There is a need to be able to correlate a "Dynamic Registration not
            supported" error to a Registration Request.
            </t>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text:<vspace />
            ---------<vspace blankLines='1' />

            None.</t>

            <t>
            ---------<vspace />
            New text: (Section 4.4.1)<vspace />
            ---------<vspace blankLines='1' />

            If the SGP does not support the dynamic registration procedure, the SGP
            returns an Error message to the ASP, with an error code of
            "Unsupported Message Class".</t>

            <t>
            ---------<vspace />
            Old text: (Section 3.3.3.1)<vspace />
            ---------<vspace blankLines='1' />

            The "Unsupported Message Class" error is sent if a message with an
            unexpected or unsupported Message Class is received.</t>

            <t>
            ---------<vspace />
            New text: (Section 3.3.3.1)<vspace />
            ---------<vspace blankLines='1' />

            The "Unsupported Message Class" error is sent if a message with an
            unexpected or unsupported Message Class is received.  For this error,
            the Diagnostic Information parameter MUST be included with the first
            40 bytes of the offending message.</t>

            <t>
            ---------<vspace />
            Old text: (Section 3.3.3.1)<vspace />
            ---------<vspace blankLines='1' />

            The ERR message contains the following parameters:

            <list>
            <t>Error Code (mandatory)</t>
            <t>Interface Identifier (optional)</t>
            <t>Diagnostic Information (optional)</t>
            </list></t>

            <t>
            ---------<vspace />
            New text: (Section 3.3.3.1)<vspace />
            ---------<vspace blankLines='1' />

            <list>
            <t>Error Code (mandatory)</t>
            <t>Interface Identifier (optional)</t>
            <t>Diagnostic Information (conditional)</t>
            </list></t>
            </section>

            <section title="Solution description">
            <t>
            An SGP that does not support dynamic registration must return an Error message 
            (Unsupported Message Class), including the first 40 bytes of the
            offending message (i.e. any Link Key Management message sent by
            the ASP) so that the ASP can correlate this error to the Registration
            Request message.

            Note that the change to the "Unsupported Message Class" text make
            this a general solution that allows the ASP or SG side to correlate 
            these error responses with the offending message.
            </t>
            </section>

        </section>

        <section title="Explanatory text for &quot;Unsupported Message Type&quot; error code is missing">

            <section title="Description of the problem">
            <t>
            There is no explanatory text for the "Unsupported Message Type" error code.
            </t>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text:<vspace />
            ---------<vspace blankLines='1' />

            None</t>

            <t>
            ---------<vspace />
            New text: (Section 3.3.3.1)<vspace />
            ---------<vspace blankLines='1' />

            The "Unsupported Message Type" error is sent if a message with an
            unexpected or unsupported Message Type is received.  For this error,
            the Diagnostic Information parameter MUST be included with the first
            40 bytes of the offending message.</t>

            </section>

            <section title="Solution description">
            <t>
            Add explanatory text for the "Unsupported Message Type" error code.
            </t>
            </section>

        </section>

        <section title="Need additional error code">

            <section title="Description of the problem">
            <t>
            There is a need to add an error code to cover the case in which an ASP Active or an ASP Inactive message
            is received from the ASP 
            without a Interface Identifier parameter, and it is not known by configuration data which Application 
            Servers are referenced.
            </t>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text:<vspace />
            ---------</t>

            <figure><artwork><![CDATA[
Missing Parameter                      0x16
            ]]></artwork></figure>

            <t>
            ---------<vspace />
            New text: (Section 3.3.3.1)<vspace />
            ---------</t>

            <figure><artwork><![CDATA[
Missing Parameter                      0x16
Not Used in M2UA                       0x17
Not Used in M2UA                       0x18
Not Used in M2UA                       0x19
No Configured AS for ASP               0x1a
            ]]></artwork></figure>

            <t>
            The "No Configured AS for ASP" error is sent if an ASP Active or an ASP Inactive message is received
            from the ASP without a Interface Identifier parameter, and it is not known
            by configuration data which Application Servers are referenced.
            </t>
            </section>    

            <section title="Solution description">
            <t>
            Add error code.
            </t>
            </section>

        </section>

        <section title="Notify(ASP-Failure) usage clarification">

            <section title="Description of the problem">
            <t>
            It is not clear when Notify (ASP Failure) must be sent. Is it upon
            failure (SCTP association fails) or any transition to ASP-DOWN state?
            </t>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text: (Section 3.3.3.2)<vspace />
            ---------<vspace blankLines='1' />

            In the Insufficient ASP Resources case, the SGP is indicating to an
            ASP-INACTIVE ASP(s) in the AS that another ASP is required in order
            to handle the load of the AS (Load-sharing mode).  For the Alternate
            ASP Active case, the formerly Active ASP is informed when an
            alternate ASP transitions to the ASP Active state in Override mode.
            The ASP Identifier (if available) of the Alternate ASP MUST be placed
            in the message.  For the ASP Failure case, the SGP is indicating to
            ASP(s) in the AS that one of the ASPs has transitioned to ASP-DOWN.
            The ASP Identifier (if available) of the failed ASP MUST be placed in
            the message.</t>

            <t>
            ---------<vspace />
            New text: (Section 3.3.3.2)<vspace />
            ---------<vspace blankLines='1' />

            These notifications are not based on the SGP reporting the state
            change of an ASP or AS.

            <list style='symbols'>
            <t>In the Insufficient ASP Resources case, the SGP is indicating to an
             ASP_INACTIVE ASP in the AS that another ASP is required to handle
             the load of the AS (Loadsharing or Broadcast mode).</t>

            <t>For the Alternate ASP Active case, an ASP is informed when an
             alternate ASP transitions to the ASP-ACTIVE state in Override mode.
             The ASP Identifier (if available) of the Alternate ASP MUST be
             placed in the message.</t>

            <t>For the ASP Failure case, the SGP is indicating to ASP(s) in the AS
             that one of the ASPs has failed. The ASP Identifier (if available)
             of the failed ASP MUST be placed in the message.</t>

            </list></t>
            </section>

            <section title="Solution description">
            <t>
            The term "transitioned to ASP-DOWN" has been changed to "ASP has failed" 
            to clarigy that the ASP failure is the reason of this notification.
            </t>
            </section>

        </section>

        <section title="Alignment of ASP Active message with ASP Inactive message">

            <section title="Description of the problem">
            <t>
            The description of the procedures for ASP Active and ASP Inactive messages are different,
            and the responses to these messages are not specified for all cases.
            </t>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text: (Section 4.3.4.3)<vspace />
            ---------<vspace blankLines='1' />

            In the case where an ASP Active message does not contain a
            Interface Identifier parameter, the receiver must know, via
            configuration data, of which Application Server(s) the ASP is a
            member.</t>

            <t>
            ---------<vspace />
            New text: (Section 4.3.4.3)<vspace />
            ---------<vspace blankLines='1' />

            In the case where an ASP Active message does not contain a
            Interface Identifier parameter, the receiver must know, via
            configuration data, of which Application Server(s) the ASP is a
            member and move the ASP to the ASP-ACTIVE state in all Application
            Servers.</t>


            <t>
            ---------<vspace />
            Old text: (Section 4.3.4.3)<vspace />
            ---------<vspace blankLines='1' />

            Multiple ASP Active Ack messages MAY be used in response to an ASP
            Active message containing multiple Interface Identifiers, allowing
            the SGP to independently acknowledge the ASP Active message for
            different (sets of) Interface Identifiers.  The SGP MUST send an
            Error message ("Invalid Interface Identifier") for each Interface
            Identifier value that cannot be successfully activated.<vspace blankLines='1' />

            In the case where an "out-of-the-blue" ASP Active message is received
            (i.e., the ASP has not registered with the SG or the SG has no static
            configuration data for the ASP), the message MAY be silently
            discarded.<vspace blankLines='1' />

            The SGP MUST send an ASP Active Ack message in response to a received
            ASP Active message from the ASP, if the ASP is already marked in the
            ASP-ACTIVE state at the SGP.</t>

            <t>
            ---------<vspace />
            New text: (Section 4.3.4.3)<vspace />
            ---------<vspace blankLines='1' />

            Multiple ASP Active Ack messages MAY be used in response to an ASP
            Active message containing multiple Interface Identifiers, allowing
            the SGP to independently acknowledge the ASP Active message for
            different (sets of) Interface Identifiers.<vspace blankLines='1' />

            The ASP Active message will be responded in the following way as a
            function of the presence/need of the Interface Identifier parameter:

            <list style='symbols'>
            <t>If the Interface Identifier parameter is included in the ASP Active
            message and the corresponding LK has been previously defined (by either
            static configuration or dynamic registration), the peer node MUST 
            respond with an ASP Active Ack message if it is ready to handle traffic;
            otherwise it will not respond (meaning that it is not ready to
            become active). This is valid when the ASP is in the ASP-ACTIVE or
            the ASP-INACTIVE state.</t>

            <t>If the Interface Identifier parameter is included in the ASP Active
            message and a corresponding LK has not been previously defined (by 
            either static configuration or dynamic registration), the peer MUST 
            respond with an ERROR message with Error Code = "Invalid Interface Identifier".</t>

            <t>If the Interface Identifier parameter is not included in the ASP 
            Active message, there are LKs defined (by either static configuration
            or dynamic registration) and Interface Identifier is not mandatory, 
            the peer node SHOULD respond with an ASP Active Ack message and 
            activate all the LKs that are defined for that specific ASP.</t>

            <t>If the Interface Identifier parameter is not included in the ASP
            Active message, there are LKs defined (by either static configuration 
            or dynamic registration) and Interface Identifier is mandatory, the 
            peer node MUST respond with and ERROR message with the 
            Error Code = "Missing Parameter".</t>

            <t>If the Interface Identifier parameter is not included in the ASP
            Active message, there are LKs defined (by either static configuration
            or dynamic registration) and Interface Identifier is not mandatory,
            the peer node MUST respond with an ASP Active Ack message if it is 
            ready to handle traffic; otherwise it will not respond (meaning that it
            is not ready to become active).</t>

            <t>If the Interface Identifier parameter is not included in the ASP 
            Active message and there are no LKs defined, the peer node SHOULD 
            respond with and ERROR message with the 
            Error Code = "No configured AS for ASP".</t>

            </list></t>
            </section>

            <section title="Solution description">
            <t>
            Align the wording in these two sections.
            </t>
            </section>

        </section>

        <section title="Response to an ASPIA message">

            <section title="Description of the problem">
            <figure>
            <artwork><![CDATA[
It is not clear how to act in the following scenario:


      ASP                          SGP
      ---                          ---
       |  ------ ASPIA (LK1)----->  |
       |  <----  ASPIA Ack -------  |
       |  -----DEREG REQ (LK1)--->  |
       |  <----DEREG RSP (LK1)----  |
       |  -------ASPIA (LK1)----->  |

What should SG do?

            ]]></artwork></figure>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text: (Section 4.3.4.4)<vspace />
            ---------<vspace blankLines='1' />

            When an ASP wishes to withdraw from receiving traffic within an AS,
            the ASP sends an ASP Inactive message to the SGP.  This action MAY be
            initiated at the ASP by an M-ASP_INACTIVE request primitive from
            Layer Management or MAY be initiated automatically by an M2UA
            management function.  In the case where an ASP is processing the
            traffic for more than one Application Server across a common SCTP
            association, the ASP Inactive message contains one or more Interface
            Identifiers to indicate for which Application Servers the ASP
            Inactive message applies.</t>

            <t>
            ---------<vspace />
            New text: (Section 4.3.4.4)<vspace />
            ---------<vspace blankLines='1' />

            When an ASP wishes to withdraw from receiving traffic within an AS,
            or the ASP wants to initiate the process of deactivation, the ASP
            sends an ASP Inactive message to the SGP.<vspace blankLines='1' />

            The SGP MUST always respond to an ASP Inactive message, in the following
            way:

            <list style='symbols'>
            <t>If the ASP Inactive message contains an Interface Identifier and the 
            corresponding LK is defined (by either static configuration or dynamic
            registration), the peer MUST respond with an ASP Inactive Ack message.</t>

            <t>If the ASP Inactive message contains an Interface Identifier that is
            not defined (by either static configuration or dynamic registration),
            the peer MUST respond with an ERROR message with 
            Error Code = "Invalid Interface Identifier".</t>

            <t>If the ASP Inactive message does not contain an Interface Identifier
            and the LK is defined (by either static configuration or dynamic 
            registration), the peer must turn the ASP/IPSP to ASP-INACTIVE state in
            all the ASes it serves and MUST respond with an ASP Inactive Ack 
            message.</t>

            <t>If the ASP Inactive message does not contain an Interface Identifier
            and the LK is not defined (by either static configuration or dynamic
            registration), the peer SHOULD respond with an ERROR message with Error
            Code = "No configured AS for ASP".</t>
            </list>

            The action of sending the ASP Inactive message MAY be initiated at
            the ASP by an M-ASP_INACTIVE request primitive from Layer Management
            or MAY be initiated automatically by an M2UA management function. In
            the case where an ASP is processing the traffic for more than one
            Application Server across a common SCTP association, the ASP Inactive
            message contains one or more Interface Identifiers to indicate for 
            which Application Servers the ASP Inactive message applies.</t>

            </section>

            <section title="Solution description">
            <t>
            A more detailed specification of the messages to be sent upon the
            reception of an ASPIA has been added to the ASP Inactive Procedures
            Section.
            </t>
            </section>

        </section>

        <section title="NOTIFY messages are missing in Examples section">

            <section title="Description of the problem">
            <t>
            There are some mandatory NOTIFY messages missing in section 5 in the
            RFC.
            </t>
            </section>

            <section title="Text changes to the document">
            <figure>
            <artwork><![CDATA[
---------
Old text: (Section 5.1.1)
---------

             SGP                             ASP1
              |                               |
              |<-------------ASP Up-----------|
              |-----------ASP Up Ack--------->|
              |                               |
              |<------- ASP Active------------|  
              |-----ASP Active Ack----------->| 
              |                               |
              |-----NTFY(AS-ACTIVE)---------->|
              |                               |


---------
New text: (Section 5.1.1)
---------


             SGP                             ASP1
              |                               |
              |<-------------ASP Up-----------|
              |-----------ASP Up Ack--------->|
              |                               |
              |-----NTFY(AS-INACTIVE)-------->|
              |                               |
              |<------- ASP Active(LKn)-------|  
              |-----ASP Active Ack (LKn)----->|      
              |                               |
              |-----NTFY(AS-ACTIVE)(LKn)----->|
              |                               |


---------
Old text: (Section 5.1.2)
---------

            SGP                             ASP1
             |                               |
             |<------------ASP Up------------|
             |----------ASP Up Ack---------->|
             |                               |
             |<----REG REQ-------------------|  
             |----REG REQ RESP-------------->|   
             |                               |
             |<------- ASP Active------------|
             |-----ASP Active Ack----------->|
             |                               |
             |-----NTFY(AS-ACTIVE)---------->|
             |                               |


---------
New text: (Section 5.1.2)
---------

            SGP                             ASP1
             |                               |
             |<------------ASP Up------------|
             |----------ASP Up Ack---------->|
             |                               |
             |<----REG REQ-------------------|  
             |----REG REQ RESP-------------->|   
             |                               |  
             |----NTFY(AS-INACTIVE)--------->|
             |                               |
             |<------- ASP Active------------|
             |-----ASP Active Ack----------->|
             |                               |
             |-----NTFY(AS-ACTIVE)---------->|
             |                               |


---------
Old text: (Section 5.1.3
---------

     SGP                      ASP1                       ASP2
      |                        |                          |
      |<--------ASP Up---------|                          |
      |-------ASP Up Ack------>|                          |
      |                        |                          |
      |<----------------------------ASP Up----------------|
      |----------------------------ASP Up Ack------------>|
      |                        |                          |
      |                        |                          |
      |<-------ASP Active------|                          |
      |------ASP Active Ack--->|                          |
      |                        |                          |

---------
New text: (Section 5.1.3
---------


     SGP                      ASP1                       ASP2
      |                        |                          |
      |<--------ASP Up---------|                          |
      |-------ASP Up Ack------>|                          |
      |                        |                          |
      |--NOTIFY(AS-INACTIVE)-->|                          |
      |                        |                          |
      |<----------------------------ASP Up----------------|
      |----------------------------ASP Up Ack------------>|
      |                        |                          |
      |                        |                          |
      |<-------ASP Active------|                          |
      |------ASP Active Ack--->|                          |
      |                        |                          |
      |---NOTIFY(AS-ACTIVE)--->|                          |
      |--------------------------NOTIFY(AS-ACTIVE)------->|
      |                        |                          |

            ]]></artwork></figure>
            </section>

            <section title="Solution description">
            <t>
            By specifying all the mandatory NOTIFY messages in the drawing, we
            solve the problem.
            </t>
            </section>

        </section>

        <section title="Error handling in the Retrieval Confirm message for ACTION_RTRV_BSN">

            <section title="Description of the problem">
            <t>
            There is a contradiction in the RFC regarding error handling in the Retrieval Confirm 
            message for ACTION_RTRV_BSN, for the case in which the SGP cannot retrieve the Backward Sequence Number. 
            Section 3.3.1.10 (Retrieval Confirm) states that 

            "If the BSN could not be retrieved, the Sequence Number field will not be
            included and the Result field will indicate failure."

            However Section 5.3.6 (SS7 Link Changeover) shows examples of this error case in which the Sequence Number 
            field is included, and is set to -1.
            </t>
            </section>

            <section title="Text changes to the document">

            <t>
            ---------<vspace />
            Old text: (Section 5.3.6)<vspace />
            ---------<vspace blankLines='1' />

            An example of a message flow with an error retrieving the BSN is
            shown below.
            </t>

            <figure>
            <artwork><![CDATA[

MTP2          M2UA                            M2UA             MTP3
SGP           SGP                             ASP              ASP

<-Rtrv BSN Req-|<--Rtrv Req (ACTION_RTRV_BSN)--|<--Rtrv BSN Req---

-BSN Not Rtrv->|---Rtrv Cfm (ACTION_RTRV_BSN)->|---BSN Not Rtrv-->
                           (seq_num = -1)

            ]]></artwork></figure>

            <t>
            ---------<vspace />
            New text: (Section 5.3.6)<vspace />
            ---------<vspace blankLines='1' />

            An example of a message flow with an error retrieving the BSN is
            shown below.
            </t>

            <figure>
            <artwork><![CDATA[

MTP2          M2UA                            M2UA             MTP3
SGP           SGP                             ASP              ASP

<-Rtrv BSN Req-|<--Rtrv Req (ACTION_RTRV_BSN)--|<--Rtrv BSN Req---

-BSN Not Rtrv->|---Rtrv Cfm (ACTION_RTRV_BSN)->|---BSN Not Rtrv-->
                 (seq_num field not included)

            ]]></artwork></figure>
            </section>

            <section title="Solution description">
            <t>
            The example has been corrected to not conflict with the message description.
            </t>
            </section>

        </section>

        <section title="Error handling in the Retrieval Confirm message for ACTION_RTRV_MSGS">

            <section title="Description of the problem">
            <t>
            There is a contradiction in the RFC regarding the use of the Sequence Number field in 
            Retrieval Confirm message for the ACTION_RTRV_MSGS case. Section 3.3.1.10 (Retrieval Confirm) states that 

            "For a Retrieval Confirm with Action of ACTION_RTRV_MSGS, the value of
            the Result field will indicate success or failure.  A failure means
            that the buffers could not be retrieved.  The Sequence Number field
            is not used with ACTION_RTRV_MSGS."

            However Section 5.3.6 (SS7 Link Changeover) shows examples of the retrieval confirm message 
            for ACTION_RTRV_MSGS in which the Sequence Number field is included.
            </t>
            </section>

            <section title="Text changes to the document">
            <t>
            ---------<vspace />
            Old text: (Section 5.3.6)<vspace />
            ---------<vspace blankLines='1' />
            </t>

            <figure>
            <artwork><![CDATA[

MTP2          M2UA                            M2UA             MTP3
SGP           SGP                             ASP              ASP

<-Rtrv BSN Req-|<--Rtrv Req (ACTION_RTRV_BSN)--|<--Rtrv BSN Req---
                           (seq_num = 0)

-Rtrv BSN Cfm->|---Rtrv Cfm (ACTION_RTRV_BSN)->|---Rtrv BSN Cfm-->
                           (seq_num = BSN)

<-Rtrv Msg Req-|<-Rtrv Req (ACTION_RTRV_MSGS)--|<--Rtrv Msg Req---
                           (seq_num = FSN)

-Rtrv Msg Cfm->|--Rtrv Cfm (ACTION_RTRV_MSGS)->|---Rtrv Msg Cfm-->
                           (seq_num = 0)

            ]]></artwork></figure>

            <t>
            ---------<vspace />
            New text: (Section 5.3.6)<vspace />
            ---------<vspace blankLines='1' />
            </t>

            <figure>
            <artwork><![CDATA[

MTP2          M2UA                            M2UA             MTP3
SGP           SGP                             ASP              ASP

<-Rtrv BSN Req-|<--Rtrv Req (ACTION_RTRV_BSN)--|<--Rtrv BSN Req---
                           (seq_num = 0)

-Rtrv BSN Cfm->|---Rtrv Cfm (ACTION_RTRV_BSN)->|---Rtrv BSN Cfm-->
                           (seq_num = BSN)

<-Rtrv Msg Req-|<-Rtrv Req (ACTION_RTRV_MSGS)--|<--Rtrv Msg Req---
                           (seq_num = FSN)

-Rtrv Msg Cfm->|--Rtrv Cfm (ACTION_RTRV_MSGS)->|---Rtrv Msg Cfm-->
                      (seq_num field not included)

            ]]></artwork></figure>

            <t>
            ---------<vspace />
            Old text: (Section 5.3.6)<vspace />
            ---------<vspace blankLines='1' />

            An example of a message flow with an error retrieving the messages is
            shown below.
            </t>

            <figure>
            <artwork><![CDATA[

<-Rtrv BSN Req-|<--Rtrv Req (ACTION_RTRV_BSN)--|<--Rtrv BSN Req---

-Rtrv BSN Cfm->|---Rtrv Cfm (ACTION_RTRV_BSN)->|---Rtrv BSN Cfm-->
                           (seq_num = BSN)

<-Rtrv Msg Req-|<-Rtrv Req (ACTION_RTRV_MSGS)--|<--Rtrv Msg Req---
                           (seq_num = FSN)

-Rtrv Msg Cfm->|--Rtrv Cfm (ACTION_RTRV_MSGS)->|---Rtrv Msg Cfm-->
                           (seq_num = -1)

            ]]></artwork></figure>

            <t>
            ---------<vspace />
            New text: (Section 5.3.6)<vspace />
            ---------<vspace blankLines='1' />

            An example of a message flow with an error retrieving the messages is
            shown below.
            </t>

            <figure>
            <artwork><![CDATA[

<-Rtrv BSN Req-|<--Rtrv Req (ACTION_RTRV_BSN)--|<--Rtrv BSN Req---

-Rtrv BSN Cfm->|---Rtrv Cfm (ACTION_RTRV_BSN)->|---Rtrv BSN Cfm-->
                           (seq_num = BSN)

<-Rtrv Msg Req-|<-Rtrv Req (ACTION_RTRV_MSGS)--|<--Rtrv Msg Req---
                           (seq_num = FSN)

-Rtrv Msg Cfm->|--Rtrv Cfm (ACTION_RTRV_MSGS)->|---Rtrv Msg Cfm-->
                       (seq_num field not included)

            ]]></artwork></figure>
            </section>

            <section title="Solution description">
            <t>
            The example has been corrected to not conflict with the message description.
            </t>
            </section>

        </section>

    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The author would like to thank Javier Pastor-Balbas, Ken Morneault, Lyndon Ong, Tolga Asveren, 
      Brian Bidulock, Umesh Vats, Samuel Dur D. Jeyaseelan, Antonio Canete, Kamesh Kaul, Vivek Toky, 
      Daniel Cohn and many others for their valuable comments and suggestions.
      </t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>  No new threats have been identified besides the already known in <xref
        target="RFC3331"></xref>.</t>
    </section>

  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3331.xml"?-->
      &RFC3331;
    </references>

    <references title="Informative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;
      &RFC4666;
    </references>

  </back>
</rfc>
