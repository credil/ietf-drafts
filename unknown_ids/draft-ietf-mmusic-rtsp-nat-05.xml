<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-ietf-mmusic-rtsp-nat-05" ipr="full3978">
  <front>
    <title abbrev="A Media NAT Traversal mechanism for RTSP">An Network
    Address Translator (NAT) Traversal mechanism for media controlled by
    Real-Time Streaming Protocol (RTSP)</title>

    <author fullname="Magnus Westerlund" initials="M." surname="Westerlund">
      <organization>Ericsson</organization>

      <address>
        <postal>
          <street>Torshamsgatan 23</street>

          <city>Stockholm</city>

          <region></region>

          <code>SE-164 80</code>

          <country>Sweden</country>
        </postal>

        <phone>+46 8 719 0000</phone>

        <facsimile></facsimile>

        <email>magnus.westerlund@ericsson.com</email>

        <uri></uri>
      </address>
    </author>

    <author fullname="Thomas Zeng" initials="T." surname="Zeng">
      <organization></organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <region></region>

          <code></code>

          <country></country>
        </postal>

        <phone></phone>

        <facsimile></facsimile>

        <email>thomas.zeng@gmail.com</email>

        <uri></uri>
      </address>
    </author>

    <date day="7" month="July" year="2007" />

    <abstract>
      <t>This document defines a solution for Network Address Trans(NAT)
      traversal for the media stream associated with an Real-time Streaming
      Protocol version 2 (RTSP 2.0). The mechanism is based on Interactive
      Connectivity Establishment (ICE) adapted for using RTSP as signalling
      channel. The necessary RTSP protocol extensions and procedure is defined
      in this document.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>Real-time Streaming Protocol (RTSP) <xref
      target="RFC2326"></xref><xref
      target="I-D.ietf-mmusic-rfc2326bis"></xref> is protocol used to setup
      and control one or more media streams delivering media to receivers. It
      is RTSP's functionality of seting up media streams that get into serious
      issues with Network Address Translators (NAT) <xref
      target="RFC3022"></xref>. Commonly the media will be totally blocked by
      the NAT unless extra provisions are taken by the protocol. There is a
      clear and present need for NAT traversal mechanism for the media setup
      using RTSP.</t>

      <t>RTSP 1.0 <xref target="RFC2326"></xref> has quite a long time
      suffered from the lack of a standardized NAT <xref
      target="RFC3022"></xref> traversal mechanism for the media. However due
      to quality of the RTSP 1.0 specification, the work on updating RTSP was
      forced to abandom RTSP 1.0 and instead defined RTSP 2.0 <xref
      target="I-D.ietf-mmusic-rfc2326bis"></xref>. RTSP 2.0 is similar to RTSP
      1.0 in many aspects but contain a number of significant differencies. It
      also contain a well defined extension mechanism allowing for extensions
      like NAT traversal to be defined in way that will be backwards
      compatible with RTSP 2.0 peers not supporting the extension. This
      extension isn't defined for RTSP 1.0 due to that it can't be specified
      in any way such that it do not break RTSP 1.0 syntax, and thus create
      compatibility issues.</t>

      <t>There has been a number of suggested ways of resolving the
      NAT-traversal of media for RTSP. A large number are also used in
      implementations. However as the evaluation of RTSP NAT traversal
      solutions <xref target="I-D.ietf-mmusic-rtsp-nat-evaluation"></xref> for
      the media has shown there are issues to consider. In the end a mechanism
      based on Interactive Connectivity Establishment (ICE) was selected as it
      allows also servers to be located behind NATs and also provide a good
      mitigation against the security threat RTSP represent as Distributed
      Denial of Service (DDoS) attack tool.</t>

      <t>This document does not define a NAT traversal mechanism for the RTSP
      signalling itself. That is for future work in the cases it is needed.
      Which compared to the media is in fewer deployement cases. In all cases
      the server i reachable on a public IP address the traversal of NAT for
      the signalling will work. Issues only arise when both server and client
      are behind NATs. Solution beyond static configurations or proxy based
      solutions are for future studies.</t>

      <t></t>
    </section>

    <section title="Solution Overview">
      <t>This overview assumes that the reader has some familarity with how
      ICE <xref target="I-D.ietf-mmusic-ice"></xref> works. As it primarily
      points out how the different ICE steps are accomplished in RTSP.</t>

      <t><list style="numbers">
          <t>The server includes in the session description an SDP attribute
          to indicate that the server has ICE capabilites for this session.
          This is an optimization that allows clients to not spend resources
          in cases when the SDP indication is missing.</t>

          <t>The client reviews the session description to determine what
          media resources that are going to be setup. For each of these media
          resources where the transport protocol supports connectivity checks
          the client gathers candidate addresses. See section 4.1.1 in <xref
          target="I-D.ietf-mmusic-ice"></xref>. The client also installs the
          STUN servers on each of the local candidates.</t>

          <t>A new RTSP Transport header parameter (name tbd) is used to
          include all the candidates for each media resource in the SETUP
          request the client sends. One of these candidates are promoted to
          default candidate per transport stream required for the media
          resource by including it as if ICE would not be used in the
          dest_addr parameter.</t>

          <t>The RTSP server receives the list of candidates for the media
          resource to setup. It then gathers its candidates. For servers
          having a public IP address a single candidate can be included and
          promoted to default directly.</t>

          <t>The server sets up the media and responds to the SETUP request if
          otherwise succesfully with 200 OK respons. In that respons the
          server includes its candidates in the server candidate parameter and
          the default in the src_addr parameter. Servers not being behind a
          NAT or other type of middlebox and with a single candidate should
          not intitiate its connectivyt checks yet. If behind a NAT or other
          middlebox should now initiate its connectivity checks following the
          procedures described in Section 5.7 and 5.8 of <xref
          target="I-D.ietf-mmusic-ice"></xref>.</t>

          <t>The client receives the SETUP response and learns the candidate
          address to use for the connectivity checks. Then it initiates its
          connectivy checks. In other words it follows the procedures in
          Section 6 of <xref target="I-D.ietf-mmusic-ice"></xref>.</t>

          <t>When a connectivity check from the client reahces the server it
          should result in a triggered check from the server. This is why
          severs not behind a middlebox can wait until this triggered check to
          send out any checks for itself. This saves resources and somewhat
          mittigates the DDoS potential.</t>

          <t>When the client has concluded its connectivity checks and also
          received connectiviy checks on the promoted candidates for all the
          media components it can issue a PLAY request. If the connectivity
          checks have not concluded succesfully then the client may send a new
          SETUP request assuming it has any new information or thinks the
          server may be able to do more that can result in succesful
          checks.</t>

          <t>When the RTSP servers receives a PLAY request it checks if its
          connectivity checks has concluded succesfully. If not it issues a
          1xx response to indicate that it is still working on the
          connectivity checks. If the checks has failed it issues a 4xx to
          indicate that unsuccessful completion of the checks to the client.
          Upon sucess the server sends a 200 OK and starts delivering
          media.</t>
        </list>The client may release unused candidates by sending a new SETUP
      request that only contains the used candidates. This SETUP request shall
      only change the candidate list, and the default candidate to the used
      ones. No other parameters should be changed. After succesful completion
      of this request may the client release the resources.</t>

      <t>The client will continue to use STUN to send keep-alive for the used
      bindings. This is important as normally RTSP play mode sessions will
      only contain traffic from the server to the client. As many NATs
      requires traffic from the client towards the server to keep the bindings
      alive these keep-alives are vital.</t>
    </section>

    <section title="RTSP Extensions">
      <t>To be written</t>
    </section>

    <section title="Open Issues">
      <t>This whole draft is currently an open issues. The actual
      implementation of ICE for RTSP is yet to be written down in all
      necessary details.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document makes no request of IANA.</t>

      <t>Note to RFC Editor: this section may be removed on publication as an
      RFC.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>To be written</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t></t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc ?>

      <?rfc include='reference.RFC.2326'?>

      <?rfc include='reference.I-D.ietf-mmusic-rfc2326bis'?>

      <?rfc include='reference.I-D.ietf-mmusic-ice'?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.I-D.ietf-mmusic-rtsp-nat-evaluation'?>

      <?rfc include='reference.RFC.3022'?>
    </references>
  </back>
</rfc>