<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

  <!ENTITY RFC1035 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml">
  <!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
  <!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
  <!ENTITY RFC5280 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
  <!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
  <!ENTITY RFC3642 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3642.xml">
  <!ENTITY RFC4033 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml">
  <!ENTITY RFC4055 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4055.xml">
  <!ENTITY RFC5395 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5395.xml">

  <!-- Defines the URI Syntax -->
  <!ENTITY RFC3986 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml">
  <!-- Design guide -->
  <!ENTITY RFC4395 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4395.xml">
  <!-- Defines the well known services URL positions -->
  <!ENTITY RFC5785 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5785.xml">
  <!-- Defines the URI safe BASE64 encoding mechanism -->
  <!ENTITY RFC4648 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4648.xml">
  <!-- Defines the Cryptographic Algorithm registry-->
  <!ENTITY RFC5698 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5698.xml">
  <!-- Defines sha-256 identifier -->
  <!ENTITY RFC4055 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4055.xml">

  <!--MIME Media Type Registry -->
  <!ENTITY RFC4288 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4288.xml">


]>
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" docName="draft-hallambaker-digesturi-01" ipr="trust200902">

  <front>
    <title abbrev="The DIGEST URI Scheme">The di (DIGEST) URI Scheme</title>
    <author fullname="Phillip Hallam-Baker" initials="P. M." surname="Hallam-Baker">
      <organization>Comodo Group Inc.</organization>
      <address>
        <email>philliph@comodo.com</email>
      </address>
    </author>
    <author fullname="Rob Stradling" initials="R. N." surname="Stradling">
      <organization>Comodo CA Ltd.</organization>
      <address>
        <email>rob.stradling@comodo.com</email>
      </address>
    </author>
    
    <date day="3" month="October" year="2011" />

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>Cryptography</keyword>
    <keyword>URI</keyword>


    <abstract>
      <t>
        A URI scheme for referencing static data abjects by means of a 
        cryptographic digest mechanism is specified. The format is designed 
        to resist content type substitution attacks and supports a
        choice of digest algorithms.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Definitions">
      <section title="Requirements Language">
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
          "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
          document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.
        </t>
      </section>
      <section title="Defined Terms">
        <t>The following terms are used in this document:</t>
        <t>
          <list style="hanging">
            <t hangText="URI">

            </t>

          </list>
        </t>
      </section>
    </section>

    <section title="Requirements">
      <t>
        Provides a strong reference to a static data object.
      </t>
      <t>
        Does not provide a means of resolution.
      </t>
      <t>
        Allows an authenticated data source to provide an authenticated 
        reference to a static data object.
      </t>
      <t>
        Intended applications include creating references from
      </t>
      <t>
        <list>
          <t>
            Web pages delivered over HTTP/TLS
          </t>
          <t>
            DNS resource records signed using DNSSEC
          </t>
          <t>
            Data values embedded in certificates, CRLs, OCSP tokens 
            and other signed data objects.
          </t>
        </list>
      </t>
      <section title="Examples of Use">

        <section title="Simple Digest">
          <t>
            For example, the following digest URI specifies a reference to
            the text "Hello World !" using the SHA-2 algorithm with 256
            bit output:
          </t>
          <t>di:sha-256:B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc</t>
        </section>


        <section title="Digest with Meta-Data">
          <t>
          The semantics of a digest being used to establish a secure
          reference from an authenticated source to an external source
          may be a function of associated meta data such as the content
          type. This data MAY be specified by means of a parameter:
          </t>
          <t>di:sha-256:B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc?ct=text/plain</t>
        </section>

        <section title="Digest with Locator">
          <t>
            A digest identifier MAY provide a location from which the referenced content
            MAY be available. Note however that since it is statistically unlikely
            that a given identifier will correspond to more than one content sequence, the
            actual location from which the data is retrieved is immaterial.
          </t>
          <t>di:sha-256:B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc?http=di.example.com</t>
          <t>
            The corresponding content MAY be retrieved from the URL:
          </t>
          <t>
            http://di.example.com/.well-known/B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc
          </t>
          <t>
            A digest identifier MAY specify multiple locations from which the
            content MAY be obtained:
          </t>
          <t>di:sha-256:B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc?
          http=one.example.com&amp;http=two.example.com</t>
          <t>
            Asserts that the content may be retrieved from either of the following URIs:
          </t>
          <t>
            http://one.example.com/.well-known/B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc
            http://two.example.com/.well-known/B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc
          </t>
        </section>
        <section title="Digest with Decryption Key">
          <t>
            A digest identifier MAY provide a key for decrypting the referenced
            data.
          </t>
          <t>di:sha-256:B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc?
          enc=aes-cbc:Fw3x20nEKfq6FDGzq7ttIQ</t>
          <t>
            If the mechanism outlined on the list but not here is used, the digest
            portion of the URI may be truncated at 128 bits and a value generated 
            from the key portion used to defeat birthday attack:
          </t>
          <t>
            di:sha-128:B_K97zTtFuOhug27fke4_Q?enc=aes-cbc:Fw3x20nEKfq6FDGzq7ttIQ
          </t>
        </section>
      </section>
    </section>
    <section title="The di (DIGEST) URI TYPE">


      <section title="Syntax" anchor="syntax">
        <t>
          The DIGEST URI Type has the following format:
        </t>
        <t>
          "di:" algorithm ":" digest [ "?" tag "=" value [ "&amp;" tag "=" value ] * ]
        </t>

        <section title="Encoding Considerations" anchor="encoding">
          <section title="Use of base64url Encoding">
            <t>
              Section 2.2 of <xref target="RFC4395" /> states 
              [URI schemes that are not intended for use with relative URIs SHOULD
              avoid use of the forward slash "/" character, which is used for
              hierarchical delimiters, and the complete path segments "." and ".."
              (dot-segments).]
            </t>
            <t>
              Consequently the encoding of the digest value is effected using the
              base64url encoding specified in Section 5 of  <xref target="RFC4648" />
              which avoids the use of the forward slash '/' character.
            </t>
          </section>
          <section title="Query Parameter Encoding">
            <t>
              The query segment of a URI is NOT hierarchical. Thus escape
              encoding of slash '/' characters is NOT required.
            </t>
            <t>
              Section 3.4 of <xref target="RFC3986" /> states
              [The characters slash ("/") and question mark ("?") may represent data
              within the query component.]
            </t>
            <t>
              Consequently no special escaping mechanism is required for the
              query parameter portion of the URI. URI escaping is however frequently
              imposed automatically by scripting environments. Thus to 
              ensure interoperability, implementations SHOULD NOT generate URIs that
              employ URI character escaping and implementations MUST accept and
              URIs that employ URI character escaping.
            </t>
          </section>
        </section>
      </section>

      <section title="Semantics" anchor="semantics">
        <t>
          
        </t>
        <section title="Digest Algorithms">
          <t>
            Implementations MUST support the sha-256 algorithm as specified in
            <xref target="RFC4055" />.
          </t>
          <t>
            Implementations MAY support other algorithms specified in the
            Data Structure for the Security Suitability of Cryptographic Algorithms
            registry 'Cryptographic Algorithms'
            <xref target="RFC5698" />.
          </t>
        </section>
        <section title="Parameters">
          <section title="Content Type (ct)">
            <t>
              The Content Type "ct" parameter specifies the MIME Content Type of
              the associated data as defined in <xref target="RFC4288" />
            </t>
          </section>
          <section title="HTTP Locator (http &amp; https)">
            <t>
              The http and https parameters are used to specify a possible 
              means of resolving the referenced content. Mulltiple 
              locator parameters MAY be used to specify alternative sources
              for accessing the content.
            </t>
            <t>
              The http and https parameters take a single argument, the 
              domain name to be used for resolution. To permit the use
              of digest URIs in ASCII-only environments, the ASCII encoding
              (aka punycode) of the domain name MUST be used.
            </t>
            <t>
              To resolve such a location reference, a client first transforms
              the digest URI to obtain a http or https url as follows:
            </t>
            <t>
              URL = prefix + domain + "/.well-known/" + digest
            </t>
            <t>
              Where:
            </t>
            <t>
              <list style="hanging">
                <t hangText="prefix">
                  Is the string "http://" for the http parameter type and is the string
                  "https://" for the https parameter type.
                </t>
                <t hangText="domain">
                  Is the value associated with the parameter.
                </t>
                <t hangText="digest">
                  Is the digest portion of the digest URI.
                </t>
              </list>
            </t>
            <t>
              Implementations MUST NOT disclose any other data. In particular 
              implementations MUST NOT disclose the query parameter portion of the URI.
            </t>
          </section>
          <section title="Encryption and MIME Encryption Specifiers (enc &amp; menc)">
            <t>
              The encryption and MIME encryption specifiers are used to provide
              a means of obtaining the plaintext of a reference to encrypted 
              content.
            </t>
            <t>
              The enc specifier is used when the encrypted object consists of 
              the encrypted content alone. The menc spcifier is used when the 
              encrypted object consists of a MIME header containing metadata 
              followed by the binary object encoding.
            </t>
            <t>
              The encryption specifiers both take an agrument of the form:
            </t>
            <t>
              algorithm ":" base64url (key) [":"  base64url (iv)]
            </t>
            <t>Where</t>
            <t>
              <list style="hanging">
                <t hangText="algorithm">
                  Is the algorithm used to encrypt the associated content
                </t>
                <t hangText="key">
                  Is the value of the cryptographic key
                </t>
                <t hangText="iv (optional)">
                  Is the value of the cryptographic Initialization Vector. 
                </t>
                <t>
                  If the IV is not spcified for a block cipher mode that
                  requires one, the IV MUST be prepended to the encrypted
                  content.
                </t>
                <t>
                  [Actually the IV does not provide any additional security for
                  this application but explaining the reason would be more 
                  effort than it is worth and what I really care about is saving
                  bytes in the identifier, not the resulting data package.]
                </t>
              </list>
            </t>
          </section>
        </section>
      </section>

    </section>

    <section title="Security Considerations" anchor="sec_cons">
      <section title="Integrity">
        <t>
          No secret information is required to
          generate a DIGEST URI. Therefore
          a DIGEST URI only provides a proof of integrity for the
          referenced object and the proof of integrity provided is 
          only as good as the proof of integrity for the DIGEST URI 
          value.
        </t>

      </section>

      <section title="Confidentiality">
        <t>
          Disclosure of a DIGEST URI value does not necessarily 
          entail disclosure of the referenced object but may enable
          an attacker to determine the contents of the referenced object
          by reference to a search engine or other data repository.
        </t>
      </section>
      <section title="Weak Digest Algorithm">
        <t>
          [The digest algorithm MUST be strong]
        </t>
        <t>
          [For most use cases collision resistance is a requirement]
        </t>
      </section>   
      
    </section>

    <section title="IANA Considerations">

      <section title="Assignment of URI Scheme di">
        <t>
          The procedures for registration of a URI scheme are specified in
          <xref target="RFC4395">RFC 4395</xref>. The following is the proposed
          assignment template.
        </t>


        <t>
          URI scheme name: di
        </t>
        <t>
          Status: Permanent
        </t>
        <t>
          URI scheme syntax. See <xref target="syntax" />
        </t>
        <t>
          URI scheme semantics. See <xref target="semantics" />
        </t>
        <t>
          Encoding considerations. See <xref target="encoding" />
        </t>
        <t>
          Applications/protocols that use this URI scheme name: 
              General applicability with initial use cases provided by WEBSEC
              and DECADE
        </t>
        <t>
          Interoperability considerations: TBS
        </t>
        <t>
          Security considerations: See <xref target="sec_cons" />
        </t>
        <t>
          Contact: IETF / Phillip Hallam-Baker
        </t>
        <t>
          Author/Change controller: IETF / Phillip Hallam-Baker
        </t>
        <t>
          References: As specified in this document
        </t>
      </section>

      <section title="Assignment of Well Known URI prefix di">
        <t>
          The procedures for registration of a Well Known URI entry
          are specified in <xref target="RFC5785">RFC 5785</xref>.
          The following is the proposed
          assignment template.
        </t>
        <t>
          URI suffix:  di
        </t>
        <t>
          Change controller: IETF
        </t>
        <t>
          Specification document(s): This document
        </t>
        <t>
          Related information:  None
        </t>
      </section>


      <section title="Specification of Additional Cryptographic Algorithms">
        <t>
          [Added in case it is decided to specify truncated forms of the 
          cryptographic digests]
        </t>

        <t>
          The procedures for registration of a Cryptographic Algorithm
          identifier are specified in <xref target="RFC5698">RFC 5698</xref>.
          The following is the proposed
          assignment template.
        </t>

        <t>
          Textual name of the algorithm: SHA-128
        </t>

        <t>
          OID of the algorithm: [TBS]
        </t>

        <t>
          Reference: This document.
        </t>


      </section>
      <section title="Creation of di parameter registry">
        <t>
          This specification creates a new IANA registry entitled "DI URI
          Parameter Definitions".
        </t>
        <t>
          The policy for future assignments to the registry is "RFC Required".
        </t>
        <t>
          
        </t>
      </section>
    </section>

  </middle>



  <back>
    <references title="Normative References">
      <!--&RFC1035;-->
      &RFC2119;
      &RFC3986;
      <!--&RFC4033;-->
      &RFC4055;
      &RFC4288;
      &RFC4395;
      &RFC4648;
      &RFC5280;
      <!--&RFC5395;-->
      &RFC5698;
      &RFC5785;

      
    </references>
    <references title="Non Normative References">
      &RFC3642;
      <reference anchor="NIST-ALGS">
        <front>
          <title>Cryptographic Algorithm Registration</title>
          <author>
            <organization abbrev="NIST">
              National Institute of Standards and Technology
            </organization>
          </author>
          <date day="11" month="March" year="2009"/>
        </front>
        <format type="HTML" target="http://csrc.nist.gov/groups/ST/crypto_apps_infra/csor/algorithms.html"/>
      </reference>
    </references>

    <section title="Test Vectors">
      <section title="Example: Hello World !">
        <t>
          The Digest URI of the text file "Hello World !" is computed as follows:
        </t>
        <t>
          <list>
            <t>
              Scheme  <spanx style="verb">di</spanx>
            </t>

            <t>
              Algorithm Identifier: <spanx style="verb">sha-256</spanx>
            </t>
            <t>
              sha-256 ("Hello World !") <spanx style="verb">
                07 f2 bd ef  34 ed 16 e3  a1 ba 0d bb  7e 47 b8 fd 
                98 1c e0 cc  b3 e1 bf e5  64 d8 2c 42  3c ba 7e 47
              </spanx>
            </t>
            <t>
              BASE64URI (sha-256 ("Hello World !")): <spanx style="verb">
                B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc
              </spanx>
            </t>
            <t>
              Content Type Parameter 'text/plain'  <spanx style="verb">ct=text/plain</spanx>
            </t>
          </list>

        </t>
        <t>
          Depending on the context, the digest URI MAY be specified using the digest
          value alone or the digest valur plus content type parameter:
        </t>
        <t>
          di:sha-256:B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc
        </t>
        <t>
          di:sha-256:B_K97zTtFuOhug27fke4_Zgc4Myz4b_lZNgsQjy6fkc?ct=text/plain
        </t>
      </section>

    </section>


  </back>
</rfc>
