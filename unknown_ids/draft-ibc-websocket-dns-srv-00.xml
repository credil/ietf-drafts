<?xml version="1.0" encoding="UTF-8"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629xslt/rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced.
     An alternate method (rfc include) is described in the references. -->

 <!-- Normative References -->
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2782 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY I-D.ietf-hybi-thewebsocketprotocol SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-hybi-thewebsocketprotocol-06.xml">
<!-- Informative References -->
 <!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
 <!ENTITY RFC6120 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6120.xml">
 <!ENTITY I-D.barnes-hard-problem SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-barnes-hard-problem-00.xml">
 <!ENTITY RFC4033 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml">
 <!ENTITY RFC5246 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
 <!ENTITY RFC2616 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2616.xml">
 
 
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="no" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->

<rfc category="info" docName="draft-ibc-websocket-dns-srv-00" ipr="trust200902">
<!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>

    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->
    <title abbrev="DNS SRV for WebSocket">DNS SRV Resource Records for the WebSocket Protocol</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Inaki Baz Castillo" initials="I.B.C." surname="Baz Castillo">
      <organization>XtraTelecom S.A.</organization>

      <address>
        <postal>
          <street></street>
          <city>Barakaldo</city>
          <region>Basque Country</region>
          <code></code>
          <country>Spain</country>
        </postal>
        <email>ibc@aliax.net</email>
      </address>
    </author>

    <date month="April" year="2011" />
    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
         in the current day and month for you. If the year is not the current one, it is
         necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
         purpose of calculating the expiry date).  With drafts it is normally sufficient to
         specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>
    <!--<workgroup>HyBi Working Group</workgroup>-->
    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
         If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>WebSocket</keyword>
    <keyword>DNS</keyword>
    <keyword>SRV</keyword>
    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document specifies the usage of DNS SRV resource records by WebSocket clients when resolving a "ws:" or "wss:" Uniform Resource Identifier (URI). The DNS SRV mechanism confers load-balancing and failover features for WebSocket service providers.</t>
    </abstract>

  </front>



  <middle>

    <section title="Introduction" anchor="introduction">

      <t>DNS SRV <xref target="RFC2782"/> is widely implemented in realtime communication protocols as SIP <xref target="RFC3261"/> and XMPP <xref target="RFC6120"/>. In both cases clients perform a DNS SRV query to locate the transport, IP address and port of the server they want to contact. The administrator of the domain can configure its DNS SRV records in a way that they provide automatic load-balancing along with redundancy/failover capability.</t>

      <t>By introducing DNS SRV records into WebSocket protocol <xref target="I-D.ietf-hybi-thewebsocketprotocol"/>, WebSocket providers can, optionally, take same advantages and offer robust services without requiring expensive server-side solutions.</t>

      <t>This specification mandates the usage of DNS SRV queries by WebSocket clients when resolving a "ws:" or "wss:" URI, but still leaves the decision of using SRV records up to the service administrator.</t>

    </section>

    <section title="Conventions" anchor="conventions">

      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

    </section>

    <section title="Client Usage" anchor="client_usage">

      <t>This specification mandates the implementation of DNS SRV mechanism in WebSocket clients (usually web browsers). DNS SRV lookup just applies when the host component of a WebSocket URI is a domain and the URI does not contain an explicit port. If this is not the case, the client MUST attemp the fallback process described in <xref target="fallback_process"/>.</t>

      <t>To clarify it, a WebSocket URI like "ws://example.org/myservice" requires the client to perform SRV resolution while "ws://example.org:80/myservice" does not (as the port is explicitly present in the URI).</t>
 
      <section title="SRV Lookup" anchor="srv_lookup">

        <t>Given a WebSocket URI ("ws:" or "wss:") in which the host component is a domain and the port is not present, the WebSocket client MUST perform the following steps:
          <list style="numbers">
            
            <t>If the scheme is "ws:", perform a DNS SRV query whose inputs are:
              <list style="symbols">
                <t>Service: "ws"</t>
                <t>Proto: "tcp"</t>
                <t>Name: The host component of the URI</t>
              </list>
              The resulting query looks like "_ws._tcp.example.org".
            </t>

            <t>If the scheme is "wss:", perform a DNS SRV query whose inputs are:
              <list style="symbols">
                <t>Service: "wss"</t>
                <t>Proto: "tcp"</t>
                <t>Name: The host component of the URI</t>
              </list>
              The resulting query looks like "_wss._tcp.example.org".
            </t>

            <t>If there is no SRV result, attempt the fallback process described in <xref target="fallback_process"/> and omit next steps.</t>

            <t>If there is SRV result, it will contain one or more combinations of a port and FDQN, each of which contains a priority and weight attributes as described in DNS SRV <xref target="RFC2782"/>.</t>

            <t>Choose at least one of the returned FQDNs to resolve (following the rules in DNS SRV <xref target="RFC2782"/>) by performing DNS A or AAAA lookups on the FDQN. This will result in an IPv4 or IPv6 address.</t>

            <t>The client uses the IP address(es) from the successfully resolved FDQN (with the corresponding port number returned by the SRV lookup) as the connection address for the WebSocket service.</t>

            <t>If the WebSocket establishment fails (according to <xref target="websocket_establishment_fails"/>) using that IP address but the A or AAAA lookups returned more than one IP address, then use the next resolved IP address for that FDQN as the connection address.</t>

            <t>If the WebSocket establishment fails using all resolved IP addresses for a given FDQN, then repeat the process of resolution and connection for the next FQDN returned by the SRV lookup based on the priority and weight as defined in DNS SRV <xref target="RFC2782"/> until all the SRV record entries are tryed (in that case internally report the WebSocket establishment error).</t>

          </list>
        </t>

        <t>When the client constructs the WebSocket handshake HTTP request, the URI MUST be set as described in Section 3.2 of <xref target="I-D.ietf-hybi-thewebsocketprotocol"/> regardless of the usage of SRV mechanism. This is, DNS SRV resolution over a "ws:" or "wss:" URI does not alter the usual construction of the WebSocket handshake request.</t>

      </section>

      <section title="Fallback Process" anchor="fallback_process">

        <t>The fallback process SHOULD be a normal A or AAAA address record resolution to determine the IPv4 or IPv6 address of the URI host component (or URI host value without DNS resolution if it contains an IP address).</t>

        <t>The server connection port is obtained as stated in Section 3.1 of <xref target="I-D.ietf-hybi-thewebsocketprotocol"/>.</t>

      </section>

      <section title="WebSocket Establishment Fails" anchor="websocket_establishment_fails">

        <t>TODO: This section should be present in <xref target="I-D.ietf-hybi-thewebsocketprotocol"/> rather than here.</t>

        <t>A WebSocket establishment fails if one of the following cases occurs when contacting the server:
          <list style="symbols">
            <t>TCP connection is not possible due to timeout or server side rejection.</t>
            <t>The server does not return a valid HTTP response for the WebSocket handshake request within a specified ammount of time (TODO: specify such ammount).</t>
            <t>The server replies a 500 or 503 HTTP error response for the WebSocket handshake meaning that it suffers of internal problems (i.e. congestion) and that it is not currently capable of handling the request.
              <list>
                <t>If HTTP response code other than 101 (success), 500 or 503 is returned by the server that MUST NOT be considered a WebSocket establishment failure. TODO: <xref target="I-D.ietf-hybi-thewebsocketprotocol"/> should describe how to handle different HTTP response codes (as 401 or 302).</t>
              </list>
            </t> 
          </list>
        </t>

      </section>
              
    </section>


    <section title="Reusing TCP Connection" anchor="reusing_tcp_connection">

      <t>When using HTTP/1.1 <xref target="RFC2616"/> the client is able to mantain persistent connections with the server and reuse them for sending new HTTP requests. Reusing an existing connection (when available) for WebSocket communication is a desirable behavior which just can take place when both the HTTP server and WebSocket server are co-located in the same host and listen in the same IP address and port.</t>
  
      <t>This section defines how to reuse an existing connection after resolving the location of the WebSocket server using the DNS SRV mechanism specified in this document:

        <list style="numbers">
          <t>The WebSocket client performs the steps in <xref target="client_usage"/> and gets an ordered list of remote targets by following rules in DNS SRV <xref target="RFC2782"/>.</t>
          <t>For each target the client selects to communicate with, it first checks whether there exists an established TCP connection with same target.</t>
          <t>If so, the client MAY reuse the existing TCP connection for sending the WebSocket handshake request rather than openning a new one.</t>
        </list>
      </t>

    </section>
    

    <section title="Examples" anchor="examples">

      <t>By properly configuring domain SRV records, the WebSocket service administrator can take advantage of load-balancing and redundanty capabilities inherent in DNS SRV <xref target="RFC2782"/>. Sections below show some usage cases.</t>

      <section title="Load Balancing">

          <t>Assuming there are two hosts providing the WebSocket service for the URI "ws://example.org/myservice", the first one listening into IP address 1.1.1.1 and port 80, and the second one listening into IP address 1.1.1.2 and port 90, the following zone file for a fictional example.org domain provides load-balancing for WebSocket service by dispatching the traffic over both servers as both have same SRV priority value (the first one will handle the 75% of the traffic due to its SRV weight value which is 3 times higher than the weight value for the second server):

          <figure>
            <artwork><![CDATA[
$ORIGIN example.org.
@         SOA   dns.example.org. root.example.org.
(2011040501 3600 3600 604800 86400)
NS        dns.example.org.
_ws._tcp  SRV   0 3 80 ws1.example.org.
_ws._tcp  SRV   0 1 90 ws2.example.org.

dns       A     1.1.1.100
ws1       A     1.1.1.1
ws2       A     1.1.1.2
            ]]></artwork>
          </figure>
        </t>

      </section>


        <section title="Load Balancing and Redundancy">

          <t>Same case as above but adding a third server for the case in which both initial servers are not accessible (i.e. both are down). The new server listens on IP 1.1.1.3 and port 80. Its lower SRV priority confers this server a backup status:

            <figure>
            <artwork>
              <![CDATA[
$ORIGIN example.org.
@         SOA   dns.example.org. root.example.org.
(2011040501 3600 3600 604800 86400)
NS        dns.example.org.
_ws._tcp  SRV   0 3 80 ws1.example.org.
_ws._tcp  SRV   0 1 90 ws2.example.org.
_ws._tcp  SRV   1 0 80 ws3.example.org.

dns       A     1.1.1.100
ws1       A     1.1.1.1
ws2       A     1.1.1.2
ws2       A     1.1.1.3
              ]]>
            </artwork>
          </figure>
        </t>
 
      </section>


      <section title="Reusing TCP Connection">

          <t>In this case "www.example.org" is used for both HTTP and WebSocket traffic, while a second server "ws2.example.com" is used for balancing the WebSocket traffic. It is expected that half of the clients would choose "www.example.org" target for the WebSocket communication (by following target selection rules in DNS SRV <xref target="RFC2782"/>) so they MAY reuse the existing TCP connection previously opened to retrieve HTTP data:

          <figure>
            <artwork>
              <![CDATA[
$ORIGIN example.org.
@         SOA   dns.example.org. root.example.org.
(2011040501 3600 3600 604800 86400)
NS        dns.example.org.
_ws._tcp  SRV   0 1 80 www.example.org.
_ws._tcp  SRV   0 1 80 ws2.example.org.

dns       A     1.1.1.100
www       A     1.1.1.1
ws2       A     1.1.1.2
              ]]>
            </artwork>
          </figure>
        </t>

      </section>
   
    </section>



    <section title="Security Considerations" anchor="security_considerations">

      <t>Any Internet protocol offering DNS SRV resource records for locating servers is sensitive to security issues described in <xref target="I-D.barnes-hard-problem"/>. Usage of DNS security extensions (DNSSEC) as described in <xref target="RFC4033"/> is recommended to mitigate the problem.</t>

    </section>


    <section title="IANA Considerations" anchor="iana_considerations">

      <t>This specification registers two new SRV Service Labels:
        <list style="hanging" hangIndent="4">
          <t hangText="ws:">MUST be used when constructing a DNS SRV query to locate the WebSocket service address (for regular WebSocket connections).</t>
          <t hangText="wss:">MUST be used when constructing a DNS SRV query to locate the WebSocket service address (for WebSocket connections tunneled over TLS <xref target="RFC5246"/>).</t>
        </list>
      </t>
    </section>
    

  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      &RFC2119;
      &RFC2782;
      &I-D.ietf-hybi-thewebsocketprotocol;
    </references>

    <references title="Informative References">
      &RFC3261;
      &RFC6120;
      &RFC5246;
      &I-D.barnes-hard-problem;
      &RFC4033;
      &RFC2616;
    </references>

    <section anchor="changelog" title="Change Log (to be removed by RFC Editor prior to publication)">

      <section title="Changes in -00">
        <t>
          <list style="symbols">
            <t>Initial version.</t>
          </list>
        </t>
      </section>

    </section>

  </back>

</rfc>
