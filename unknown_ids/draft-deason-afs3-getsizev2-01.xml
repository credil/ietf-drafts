<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY rfc2119 PUBLIC ''
    'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<?rfc strict="yes" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="info" ipr="trust200902" docName="draft-deason-afs3-getsizev2-01"
     submissionType="independent">

  <front>
    <title abbrev="AFS-3 AFSVol Flexible GetSize">Adding a Flexible GetSize RPC Variant to the AFS-3 Volume Service</title>
    <author surname="Deason" fullname="Andrew Deason" initials="A.P.D.">
      <organization abbrev="Sine Nomine">Sine Nomine Associates</organization>
      <address>
        <postal>
          <street>43596 Blacksmith Square</street>
          <city>Ashburn</city>
          <region>Virginia</region>
          <code>20147-4606</code>
          <country>USA</country>
        </postal>

        <phone>+1 703 723 6673</phone>

        <email>adeason@sinenomine.net</email>
      </address>
    </author>

    <date day="1" month="March" year="2011"/>

    <area>AFS3</area>
    <workgroup>N/A</workgroup>
    <keyword>AFS3</keyword>
    <keyword>AFS-3</keyword>
    <keyword>AFSVol</keyword>
    <keyword>AFSVolDump</keyword>
    <keyword>AFSVolDumpV2</keyword>
    <keyword>AFSVolGetSize</keyword>
    <keyword>AFSVolGetSizeV2</keyword>

    <abstract>
      <t>This document describes an additional Rx remote procedure call that may be used to obtain the size of an AFS-3 volume dump from an AFS-3 Volume Service. While an RPC already exists for this purpose (GetSize), this document proposes a more flexible mechanism that is able to more accurately determine the size of a volume dump in a greater number of cases.</t>
    </abstract>

    <note title="Internet Draft Comments">
      <t>Comments regarding this draft are solicited. Please include the AFS-3
      protocol standardization mailing list (afs3-standardization@openafs.org)
      as a recipient of any comments.</t>
    </note>
  </front>
  <middle>
    <section title="Introduction">
      <t>AFS-3 provides a service (the "Volume Service") (<xref target="AFS3-VVL"/>) which allows administrators to examine and manage AFS-3 volumes via several Rx remote procedure calls in the AFSVol package. One of these RPCs, Dump, can be used to obtain a dump of an AFS-3 volume that can be stored on disk, usually for backup or archival purposes. Another RPC, DumpV2, was later added to allow the caller to make slight modifications to what data is contained in the dump by way of specifying certain flags in an additional argument.</t>
      <t>To allow computation of the size of volumes returned by the Dump RPC, a GetSize RPC was provided. However, no analogous RPC exists to determine what the size of a volume dump obtained via DumpV2 would be if any flags were specified in the DumpV2 call. This document describes a new RPC, GetSizeV2, to fill this gap, to allow computation of the sizes of volume dumps generated by DumpV2.</t>
    </section>

    <section title="Conventions Used in this Document">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>
    </section>

    <section title="Error Codes">
      <t>The existing VOLSERBAD_ACCESS, VOLSERTRELE_ERROR, and ENOENT error codes are used by the new RPC defined within this document. The meaning and value of these error codes can be found in <xref target="AFS3-VVL"/>, with the exception of ENOENT's value. ENOENT is defined to have the value 2.</t>
    </section>
    <section anchor="getsizev2_interface" title="RPC Interface">
      <t>One new RPC code is defined for the Volume Service: GetSizeV2. Additionally, a new namespace for GetSizeV2 flags is defined, and one flag in that namespace is defined.</t>
      <section title="GetSizeV2">
        <t>This behaves exactly the same way as the existing GetSize RPC (<xref target="getsize_interface"/>), except for the addition of the flags argument, which behaves similarly to the flags argument of the existing DumpV2 RPC (<xref target="dumpv2_flags"/>).</t>
<figure><artwork>
    GetSizeV2(IN afs_int32 fromTrans, IN afs_int32 fromDate,
              IN afs_int32 flags, OUT struct volintSize *size) = XXX;
</artwork></figure>
        <t>Input arguments:
          <list style="hanging">
            <t hangText="fromTrans">
              <vspace blankLines="1"/>
              A transaction ID as returned by the RPC TransCreate.
            </t>
            <t hangText="fromDate">
              <vspace blankLines="1"/>
              The meaning and format of this argument is the same as the fromDate argument described in <xref target="dumpv2_interface"/>. Since this is represented as a signed 32-bit integer, problems may occur if dates beyond 2038 are specified. A future protocol revision will improve the date representation in AFSVol RPCs to address this problem.
            </t>
            <t hangText="flags">
              <vspace blankLines="1"/>
              Zero or more flags combined via a bitwise OR operation. The available flags are described below in <xref target="getsizev2_flags"/>.
            </t>
          </list>
	</t>
        <t>Output arguments:
          <list style="hanging">
            <t hangText="size">
              <vspace blankLines="1"/>
              The size of the dump, represented in bytes.
            </t>
          </list>
	</t>
        <t>The call is aborted with an error for all of the same conditions where Dump aborts with an error as described in <xref target="AFS3-VVL"/>, with the appropriate error code.</t>
      </section>
      <section anchor="getsizev2_flags" title="GetSizeV2 Flags">
        <t>The intention of the GetSizeV2 RPC is to provide an extension to the GetSize RPC, similar to how DumpV2 provided an analogous extension to Dump. As such, the only defined GetSizeV2 flag corresponds to the single existing DumpV2 flag, though there is no requirement that every GetSizeV2 flag have a DumpV2 equivalent, or vice versa.
          <list style="hanging">
            <t hangText="VOLGETSIZEV2_OMITDIRS = 1">
              <vspace blankLines="1"/>
              This is the GetSizeV2 analogue of the DumpV2 flag VOLDUMPV2_OMITDIRS. If this flag is set, the volume dump size will be calculated for a dump generated by a DumpV2 call where the flag VOLDUMPV2_OMITDIRS (<xref target="dumpv2_flags"/>) was set. Such a dump does not include directory information for directories that have not changed since the specified fromDate.
            </t>
          </list>
        </t>
      </section>
    </section>

    <section title="Extant RPC Interface">
      <t>The newly-defined RPC GetSizeV2 has very similar behavior to the RPCs DumpV2 and GetSize. While these RPCs already exist and are in use, there is no existing document describing their behavior in significant detail. Their behavior is briefly described here, so the role of GetSizeV2 may be better understood.</t>
      <section anchor="dumpv2_interface" title="DumpV2">
        <t>The DumpV2 RPC generates a canonical dump of the contents of a volume associated with a volume transaction. It is identical to the Dump RPC (<xref target="AFS3-VVL"/>), except for the addition of the flags parameter.</t>
<figure><artwork>
    DumpV2(IN afs_int32 fromTrans, IN afs_int32 fromDate,
           IN afs_int32 flags) split = 65538;
</artwork></figure>
        <t>Input arguments:
          <list style="hanging">
            <t hangText="fromTrans">
              <vspace blankLines="1"/>
              A transaction ID as returned by the RPC TransCreate.
            </t>
            <t hangText="fromDate">
              <vspace blankLines="1"/>
              If 0, the generated volume dump will be a "full dump", and will contain all data in the volume. Otherise, this represents a calendar date, represented as the number of seconds since the Unix Epoch. The generated dump will then only contain files that have been modified on or after the specified calendar date.
            </t>
            <t hangText="flags">
              <vspace blankLines="1"/>
              Zero or more flags combined via a bitwise OR operation. The available flags are described below in <xref target="dumpv2_flags"/>.
            </t>
          </list>
        </t>
        <t>As with Dump, the generated volume dump for DumpV2 appears in the Rx stream for the split call (<xref target="AFS3-RX"/>) if there are no errors. The call is aborted with an error for all of the same conditions where Dump aborts with an error as described in <xref target="AFS3-VVL"/>, with the appropriate error code.</t>
      </section>
      <section anchor="getsize_interface" title="GetSize">
        <t>The GetSize RPC calculates what the size of a volume dump obtained from calling Dump (<xref target="AFS3-VVL"/>) would be. This allows dump sizes to be calculated without needing to generate and transfer the entire volume dump.</t>
<figure><artwork>
    struct volintSize {
        afs_uint64 dump_size;
    };

    GetSize(IN afs_int32 fromTrans, IN afs_int32 fromDate,
            OUT struct volintSize *size) = 65537;
</artwork></figure>
        <t>Input arguments:
          <list style="hanging">
            <t hangText="fromTrans">
              <vspace blankLines="1"/>
              A transaction ID as returned by the RPC TransCreate.
            </t>
            <t hangText="fromDate">
              <vspace blankLines="1"/>
              The meaning and format of this argument is the same as the fromDate argument described in <xref target="dumpv2_interface"/>.
            </t>
          </list>
	</t>
        <t>Output arguments:
          <list style="hanging">
            <t hangText="size">
              <vspace blankLines="1"/>
              The size of the dump, represented in bytes.
            </t>
          </list>
	</t>
        <t>The call is aborted with an error for all of the same conditions where Dump aborts with an error as described in <xref target="AFS3-VVL"/>, with the appropriate error code.</t>
      </section>

      <section anchor="dumpv2_flags" title="DumpV2 Flags">
        <t>The DumpV2 RPC allows the caller to optionally specify a set of 0 or more flags which slightly alter the behavior of the DumpV2 call. Only one such flag is currently defined:
          <list style="hanging">
            <t hangText="VOLDUMPV2_OMITDIRS = 1">
              <vspace blankLines="1"/>
              Normally, an incremental volume dump generated by Dump or DumpV2 includes the data for all directories in the volume, even if nothing in that directory has changed. This is to allow data in an incremental dump to still be easily accessible even if the incremental dump is the only dump available. If the flag VOLDUMPV2_OMITDIRS is specified, the generated volume dump will only contain directory data if the directory was modified at or after the specified fromDate. This reduces the size of the dump, but can make it more difficult to retrieve data from the dump if the original full volume dump is lost.
            </t>
          </list>
        </t>
      </section>
    </section>

    <section title="Security Considerations">
      <t>The results of the GetSize and GetSizeV2 RPCs are not normally considered sensitive information, though they may be computationally intensive to calculate. As such, current AFS-3 implementations typically use some per-server superuser list (such as the AFS-3 Basic OverSeer UserList) to control access to the GetSize RPC to reduce potential Denial of Service attack vectors. While this practice is OPTIONAL for implementations and subject to site-specific policies, any access control restrictions that apply to the GetSize RPC SHOULD also apply to GetSizeV2 (and vice versa) for consistency.</t>
    </section>

    <section title="IANA Considerations">
      <t>This document makes no request of the IANA.</t>
    </section>

    <section title="AFS-3 Registry Considerations">
      <t>This document requires the registration of one RPC code point for the AFSVol GetSizeV2 RPC detailed above in <xref target="getsizev2_interface"/> by the the AFS-3 Assigned Numbers Registry.</t>
      <t>This document also requests that the AFS-3 Assigned Numbers Registry assumes control over the GetSizeV2 flags namespace. This document defines one flag in this namespace, AFSVOLGETSIZEV2_OMITDIRS, detailed above in <xref target="getsizev2_flags"/>, with the value of 1.</t>
    </section>

    <section title="Acknowledgments">
      <t>The author thanks David Boyes and Jeffrey T. Hutzelman for their discussion on Rx return codes, and Derrick Brashear for his work and feedback on representing calendar dates in AFSVol.</t>
    </section>

  </middle>
  <back>
    <references title="Normative References">
      &rfc2119;
    </references>
    <references title="Informative References">
      <reference anchor="AFS3-RX">
        <front>
          <title>AFS-3 Programmer's Reference: Specification for the Rx Remote Procedure Call Facility</title>

          <author initials="E.R." surname="Zayas" fullname="Edward R. Zayas">
            <organization abbrev="Transarc">Transarc Corporation</organization>
          </author>

          <date year="1991" month="August" day="28" />
        </front>
        <seriesInfo name="Transarc Corp. Tech. Rep." value="FS-00-D164" />
      </reference> 

      <reference anchor="AFS3-VVL">
        <front>
          <title>AFS-3 Programmer's Reference: Volume Server/Volume Location Server Interface</title>

          <author initials="E.R." surname="Zayas" fullname="Edward R. Zayas">
            <organization abbrev="Transarc">Transarc Corporation</organization>
          </author>

          <date year="1991" month="August" day="29" />
        </front>
        <seriesInfo name="Transarc Corp. Tech. Rep." value="FS-00-D165" />
      </reference> 
    </references>
  </back>
</rfc>
