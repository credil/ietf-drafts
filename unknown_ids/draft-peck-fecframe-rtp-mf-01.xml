<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY __reference.I-D.ietf-fecframe-framework SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-fecframe-framework.xml">
<!ENTITY __reference.I-D.ietf-fecframe-sdp-elements SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-fecframe-sdp-elements.xml">
<!ENTITY __reference.I-D.galanos-fecframe-rs SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.galanos-fecframe-rtp-reedsolomon.xml">
<!ENTITY __reference.I-D.galanos-fecframe-rs-mf SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.galanos-fecframe-rtp-reedsolomon-mf.xml">

<!ENTITY __reference.I-D.ietf-fecframe-pseudo-cdp SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-fecframe-pseudo-cdp.xml">

<!ENTITY rfc2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc3550 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3550.xml">
<!ENTITY rfc4566 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml">
<!ENTITY rfc4288 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4288.xml">
<!ENTITY rfc3555 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3555.xml">
<!ENTITY rfc4756 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4756.xml">
<!ENTITY rfc5109 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5109.xml">
<!ENTITY rfc5510 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5510.xml">
<!ENTITY rfc5053 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5053.xml">




]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc='yes'?>
<?rfc symrefs="yes" ?>
<?rfc iprnotified="yes" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc sortrefs="no" ?>
<?rfc colonspace='yes' ?>
<?rfc tocindent='yes' ?>
<rfc category="std" docName="draft-peck-fecframe-rtp-mf-01" ipr="trust200902">
  <front>
    <title abbrev="RTP Payload Format for Multi-Flow FEC">RTP Payload Format for Multi-Flow FEC</title>

    <author fullname="Orly Peck" initials="O." surname="Peck">
      <organization>RADVISION</organization>

      <address>
        <postal>
          <street>24 Raul Wallenberg St.</street>

          <city>Tel Aviv</city>

          <code>69719</code>

          <country>Israel</country>

        </postal>

        <email>orlyp@radvision.com</email>
      </address>
    </author>

    <date day="07" month="March" year="2010" />

    <workgroup>FEC Framework</workgroup>

    <abstract>
      <t>
This document defines a new RTP payload format for the Forward Error Correction (FEC) that is used to protect multiple source flows.
The format defined by this document enables the protection of multiple media sources encapsulated in RTP with one or more repair flows and
is based on the FEC framework (described in [I-D.ietf-fecframe-framework]) and the SDP Elements for FEC Framework 
(described in [I-D.ietf-fecframe-sdp-elements]).
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t> This document defines a new RTP payload format for the Forward Error Correction (FEC) protecting multiple source flows.  </t>
	  <t> [I-D.ietf-fecframe-framework] allows multiple source flows to be protected by the same FEC repair flow. </t>
	  <t> Multiple source flows are transmitted either as Multi-Session or as Multi-source (see definition below).</t>
    <t>The format defined by this document enables the protection of multiple media source flows (Multi-Session or Multi-Source transmission) with
   one or more repair flows without adding additional information to the source packets.  </t>
   <t>The method described in this document is generic to all FEC schemes.</t>
   
    </section>

    <section title="Requirements Notation">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>
    </section>
  
  
     <section anchor="definitions_notations_abbreviations"
               title="Definitions, Notations and Abbreviations">
        <t>
        This document uses the following definitions and notations. 
        For further definitions that apply to FEC Framework in general, see [I-D.ietf-fecframe-framework]. 
        </t>
        <section anchor="definitions"
               title="Definitions">
	       <t>FEC:  Forward Error Correction.</t>

	        <t>Source Flow:  The packet flow to which FEC protection is to be applied.</t>

	        <t>Repair Flow:  The packet flow carrying FEC data.</t>

	        <t>Source Block:  The group of source data packets which are to be FEC protected as a single block.</t>

	        <t>Source Packets: Packets that are transmitted over a source flow</t>

	        <t>Repair/FEC Packets: Packets that are transmitted over a repair flow</t>
			<t>FEC header: A FEC-scheme specific header as defined by different I-Ds, usually follows the RTP header.</t>
			
			<t>FEC-MF header: The FEC Multi-flow header. Contains information about the different source-flows and their order in the FEC block.</t>

			<t>multi-session transmission:  In multi-session transmission, media data from a single media source is split over multiple RTP
											sessions.  The term "layered multicast" is equivalent to multi-session transmission for sessions using multicast addresses.</t>

			<t>multi-source transmission:  In multi-source transmission, data from a single media source is sent as several RTP streams in the same RTP
										   session.  The sources contained in an RTP session are identified by their synchronization source identifiers (SSRCs) or, if
										   combined by a RTP mixer, by their contributing source identifiers (CSRCs), as defined in RTP [RFC3550].</t>
			
			<t>Source Correlation:         The logical association of RTP streams transferred as multiple separate sessions or as multiple sources
										   in the same session to one layered media.</t>

										   
        </section>
        <section anchor="Notations"
	               title="Notations">
	               
	                        
	               
	</section>       

      </section>

  
  
    <section anchor="source_correlation"
             title="Source Correlation">
      <t>When a FEC packet protects multiple source-flows (multi-session or multi-source transmission), the receiver must correlate between a received FEC packet and 
		 the RTP source-packets protected by it. </t>
	  <t>For correlating between FEC packets and source flow packets sent as multi-sessions, this draft uses the 'fec-source-flow' (see section 6.2) parameter sent in SDP as defined in SDP Elements for FEC Framework. 
	     The list of different 'fec-source-flow' identifiers are used in a newly defined FEC-MF-Header.</t>
	  <t>For correlating FEC packets and source flows sent as multi-source, the 'fec-source-flow' parameter is used as well. 
	     However, as stated in RFC 3550 (section 5.2) 'multiplexing multiple related sources of the same medium in one RTP session using different SSRC values is the norm for multicast sessions'. 
		 When different SSRCs are used on the same RTP session, the encoder is receiving RTP packets that use multiple sequence-number spaces. 
		 Since a FEC encoder is not always aware of other source-flows transmitted on the same RTP session in multicast transmission, the SSRC should be used for source correlation in order to uniquely identify the protected source-flow.</t>
	  <t>The coupling of the fec-source-flow and the source flow SSRC identifier creates a unique identifier for a source-flow, and therefore enables the FEC decoding procedure for multiple source flows.</t>
	  <t>If the FEC encoding is done in a "middle-box" that receives the different source flows to be protected, the FEC encoder should validate the fec-source-flow idnetifiers for collisions. When a collision is detected, the FEC encoder should answer with a different fec-source-flow than the one offered. The fec-source-flow MUST not be changed during the session.</t>

    </section>
    
        

   <section anchor="packet_formats"
                   title="Packet Formats">
    <t>This section defines the formats of the source and repair packets</t>
     <section anchor="source_packets"
                   title="Source Packets">
	<t>The FEC Framework requires that source packets will contain information identifying the source block 
	and the position within the source block occupied by the packet. However, in order to maintain backwards compatibility, 
    this document enables the receiver to get this information without appending additional information 
	to the source packet. Specifically this information is obtained using the combination of sequence number and SSRC identifier found in the RTP
	header, and information provided in the FEC header and FEC-MF header of each repair packet. Such behavior enables both non-FEC-capable and 
	FEC-capable receivers to receive and interpret the same source packets sent in a multicast session.</t>
    </section>
    
         <section anchor="repair_packets"
                       title="Repair Packets">
      <t>The FEC repair packets contain information that enables the receiver to reconstruct the source block in the remote end. 
	  This is done by using the RTP header of the repair packets as well as other headers placed within the RTP payload. 
	  The additional headers, referred to as the FEC headers as shown in Figure 1 from the [FECFRAME-FRAMEWORK] (section 6.4.1), are the FEC-MF header and the additional
	  FEC headers for each source-flow, as shown in Figure 2.</t>
	  <t>The FEC repair packets MUST be sent in a separate RTP session from the protected source-flows.</t>

  <figure anchor="repair_packets_format" title="Format of repair packets">
  <artwork>  
       
             +------------------------------+
             |          IP Header           |
             +------------------------------+
             |       Transport Header       |
             +------------------------------+
             |          RTP Header          |
             +------------------------------+ --_
             |          FEC Headers         |    \
             +------------------------------+     > RTP Payload
             |        Repair Data           |   _/
             +------------------------------+ --

  </artwork>
  </figure>

  <figure anchor="fec_headers_format_fig" title="Format of the FEC Headers">
  <artwork>  
       
  +------------------------------+
  |          RTP Header          |
  +------------------------------+ --_
  |       FEC-MF Header          |    \
  +------------------------------+     \
  |          FEC Headers         |      \
  |            ....              |       > RTP Payload
  +------------------------------+     /
  |        Repair Data           |   _/
  +------------------------------+ --

  </artwork>
  </figure>

  
         <section anchor="rtp_header_format"
                       title="RTP header format">
                       
    <t>The RTP header is formatted according to [RFC3550] with some further clarifications listed below:    </t>
        <t>
      <list style="symbols">
 
    <t>	Payload Type:  The (dynamic) payload type for the repair packets is determined through out-of-band means. Note that this document registers new payload formats for the repair packets (Refer to Section 6 for details).  According to [RFC3550], an RTP receiver that cannot recognize a payload type must discard it.  This provides for backward compatibility.  The FEC mechanisms can then be used in a multicast group with mixed FEC-capable and non-FEC-capable receivers.  If a non-FEC-capable receiver receives a repair packet, it will not recognize the payload type, and hence, will discard the repair packet.</t>
    <t>	Sequence Number (SN):  The sequence number maintains the standard definition.  It is one higher than the sequence number in the previously transmitted repair packet.  The initial value of the sequence number is random (unpredictable) [RFC3550].</t>
    <t>	Timestamp (TS):  The timestamp is set to a time corresponding to the repair packet's transmission time.  Note that the timestamp value has no use in the actual FEC protection      process and is usually useful for jitter calculations.</t>
    <t>	Synchronization Source (SSRC):  The SSRC value is randomly assigned as suggested by [RFC3550].</t>

    
    </list>
    </t>
        
        
        </section>
	 <section anchor="fec_mf_header_format"
		       title="FEC-MF header format">

	<t>The FEC-MF header includes information that enables the receiver to correlate a received FEC packet with the protected source-flows.</t>
	<t>The FEC-MF header includes a list of source-flow identifiers (FID list), and optionaly, a list of SSRC identifiers (SSRC list) for uniquely identifying the protected source flows. The optional SSRC list is appended to the FEC-MF header.</t>
	<t>Specific FEC-scheme information for every source-flow is provided by the FEC headers appended to the MF-FEC header. The FEC headers are ordered by the FID in the FID list.</t>
	<t>The order of the FIDs (and the matching FEC headers) should be the same as the order of the source flows as they were arranged in the FEC source block before encoding. This is required to ensure the correct construction of the FEC block for the decoding process.</t>
	<t>The format of the FEC-MF header is shown in figure 3.</t>
							 
	
	  <figure anchor="FEC_MF_header_format" title="FEC-MF (Multi-Flow) Header Format">
	  <artwork>  
	  
      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |L| Num Flows   |      FID      |     FID       |       FID     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |     FID       |       FID     |     padding   |   padding     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                 SSRC identifiers (Optional)                   |
     |                            ...                                |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

	  </artwork>
	  </figure>
	  

<t>The FEC-MF header consists of the following general fields:</t>
<t>
<list style="symbols">
	   <t>  L-Bit- A bit indicating whether the optional list of SSRC identifiers is appended to the FEC-MF header. When set to 0, no SSRC identifiers are specified (for cases where the FID is sufficient as a unique identifier).
	        When set to 1, a list of SSRC identifiers is appended to the FEC-MF header. The length of this list is (4 bytes * Num Flows). Each 4 bytes represent the SSRC of the flow specified by the order of the FID list in the FEC-MF header.</t>
       <t>	Num Flows - The number of source flows protected by this FEC packet. Maximum number of protected source flows is 128.</t>
       <t>	FID - Source flow Identifier. The FEC-MF includes a list of FID identifying each source flow. The FID value is as specified in the id parameter in the "fec-source-flow" field in SDP. 
		    See example in section 6.3.3. The number of FID fields is 'Num Flows' which represents the FID list size . The FEC-MF header will be padded with zeros to 4-bytes alignment, if needed, after the last FID field (calculation for number of padded bytes is: 4-((2+Num Flows)%4)).
			Each FID is correlated with a FEC header appended to the FEC-MF header by the order of the FID in the FID list. The number of appended FEC headers MUST equal the value of 'Num Flows'.
			Since FID field is 8 bits, the "fec-source-flow" field in SDP should be between 0 and 255. This limits the number of source-flows protected by FEC to 256 flows.</t>
       <t>	SSRC identifiers - list of SSRC identifiers (optional). If the L-Bit is 0, the list length is 0. If set to 1, the list length is (4*Num Flows), where each SSRC is taken from the protected source-flow SSRC field in the RTP header, and is represented by 4 bytes.</t>

</list>
</t>

<t> Editor's Note: in order to avoid sending unnecessary SSRC identifiers, it should be defined when the SSRC is redundant information. SSRC is redundant when Multi-Source is not used, or when there is only one sender for the RTP session. In this case the 'fec-source-flow' is a unique idetifier for a source flow.</t>
 
</section>


<section anchor="fec_headers_format" title="FEC Headers Format">

<t> The FEC-MF header is followed by a list of FEC headers, according to the FEC-scheme signalled by SDP (See Section 6). 
	Each FEC header in the list represents the matching fec-source-flow in the FID list by order.</t>
</section>


<section anchor="repair_data_format" title="Repair Data Format">

<t>The repair data is added after the last FEC header in the RTP repair packet. It includes the result of FEC scheme code over 
the source block constructed from the different source-flows. The repair data format is defined by the FEC scheme used for this repair packet as signalled by SDP.</t>
</section>

</section>

</section>
 
<section anchor="payload_formats_parameters" title="Payload Format Parameters">
<t>According to the FEC framework, when RTP is used as a transport for repair packet flows, 
the scheme must define an RTP Payload Format for the repair data. 
This section provides the media subtype registration for the Multi-Flow FEC.  
The parameters that are required to configure the FEC encoding and decoding operations are also defined in this section.</t>

<section anchor="reg_application_mf-fec" title="Registration of application/mf-fec">
<t>Type name:  application</t>

<t>Subtype name:  mf-fec</t>

<t>Required parameters: </t>
<t>
<list style="symbols">
<t>FEC-scheme - the FEC scheme used for encoding. The value used here should be the FEC payload type as it was registered in the relevant RFC/draft. </t> 
</list>
</t>


<t>Optional parameters:  None.</t>

<t>Encoding considerations: This media type is framed and binary, see
   section 4.8 in [RFC4288]</t>

<t>Security considerations: Please see security consideration in
   [I-D.ietf-fecframe-framework]</t>

<t>Interoperability considerations: None.</t>

<t>Published specification: TBD</t>

<t>Applications that use this media type: Multimedia applications that want to improve resiliency against packet loss by sending redundant data for multiple source media flows.</t>

<t>Additional information: None.</t>

<t>Magic number(s): none defined</t>

<t>File extension(s): none defined</t>

<t>Macintosh file type code(s): none defined</t>

<t>Person & email address to contact for further information: Orly Peck, orlyp@radvision.com</t>

<t>Intended usage: COMMON</t>

<t>Restrictions on usage: This media type depends on RTP framing, and
   hence is only defined for transfer via RTP [RFC3550].  Transport
   within other framing protocols is not defined at this time.</t>

</section>
</section>



<section anchor="mapping_of_SDP_parameters" title="Mapping of SDP Parameters">
<t>For a proper operation details of the FEC operation have to be communicated between the sender and the receiver. The receiver must be notified that the FEC operation was used for multiple source flows.
Specifically, the receiver has to know the FEC scheme that was used by the sender to encode the source flows. In addition, different FEC scheme-specific parameters should be communicated.
One way to provide this information is to use the Session Description Protocol (SDP) [RFC4566].  </t>
<t>The mapping of the media type specification for "mf-fec" and their parameters in SDP is as follows:</t>
<t>
<list style="symbols">
   <t>  The media type (e.g., "application") goes into the "m=" line as
      the media name.</t>

   <t>  The media subtype ("mf-fec") goes into the "a=rtpmap" line as the encoding
      name.  </t>

   <t> The 'FEC-scheme' goes into the "a=fmtp" line, followed by a semicolon-separated list of parameter that are required for the specific used FEC-scheme. </t> 	  

	<t> The "group" and "fec-source-flow" attributes should be used according to [I-D.ietf-fecframe-sdp-elements].</t> 
</list>
</t>
<t>See section 9 for SDP examples.</t>

</section>
  

<section anchor="FEC_packet_example" title="FEC Packet Example">
<t>	This section demonstrates the structure and data in a FEC packet protecting multiple source flows.</t>
<t>	In this example, the following FEC packet is the result of Reed-Solomon encoding for 3 different source flows. Two of the source flows (1 and 2) share the same RTP session and same payload type, and are differentiated by different SSRC identifiers (Multi-Source Transmission). The other source flow (3) is transmitted through a different RTP session but share the same SSRC identifier as the one used by source-flow 2 (Mutliple-Session Transmission).</t>
<t>	The FEC payload represents the Reed-Solomon scheme over RTP as defined in draft-galanos-fecframe-rtp-reedsolomon-01. 
	This draft is general for all FEC schemes transmitted through RTP, and the use of Reed-Solomon is only for illustration purposes. </t>

    <t>	The source-flows protected by this FEC packet are defined as follows:
	<list style="symbols">
		<t> source-flow-1: 	identified as fec-source-flow: id=0 in SDP, with SSRC=10. </t>
		<t> source-flow-2: 	identified as fec-source-flow: id=0 in SDP, with SSRC=11. </t>
		<t> source-flow-3: 	identified as fec-source-flow: id=1 in SDP, with SSRC=11. </t>
	</list>
	</t>
	<section anchor="MF_FEC_Header_Example" title="MF-FEC Header Example">
	
		<figure anchor="FEC_MF_header_example" title="FEC-MF Header Example">
		<artwork>  
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  num FID=3    |   FID=0       |     FID=0     |     FID=1     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           SSRC = 10                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           SSRC = 11                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           SSRC = 11                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

		</artwork>
		</figure>
	</section>

	<section anchor="FEC_Headers_Example" title="FEC Headers Example">
	
		<figure anchor="FEC_headers_example" title="FEC Headers Example">
		<artwork>  
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    n_r        |       i       |        SN_base=1000           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Reserved     |  BML  |       Num Packets=5           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    n_r        |       i       |        SN_base=0              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Reserved     |  BML  |       Num Packets=6           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    n_r        |       i       |        SN_base=500            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Reserved     |  BML  |       Num Packets=6           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

		</artwork>
		</figure>
	</section>

	
    <section anchor="sdp_example"
                       title="SDP Example">
    <t>The following example demonstrates the SDP for the above FEC packet example.</t>
	<figure anchor="sdp_example_fig">
	<artwork>  
	   v=0
	   o=orly 1122334455 1122334466 IN IP4 fec.example.com
	   s= MF FEC Example
	   t=0 0
	   a=group:FEC S1 S2 R1
	   m=video 30000 RTP/AVP 100
	   c=IN IP4 224.1.1.1/127
	   a=rtpmap:100 MP2T/90000
	   a=fec-source-flow: id=0
	   a=mid:S1
	   m=video 30002 RTP/AVP 100
	   c=IN IP4 224.1.1.1/127
	   a=rtpmap:100 MP2T/90000
	   a=fec-source-flow: id=1
	   a=mid:S2
	   m=application 30000 RTP/AVP 110
	   c=IN IP4 224.1.2.1/127
	   a=rtpmap:110 fec-mf/90000
	   a=fmtp:110 FEC-scheme=reed-solomon-fec; max_N:5; 
	          repair-window:200000; symbol-size:8
	   a=mid:R1

	</artwork>    
	</figure>

    </section> 
 </section>
	
	<section anchor="application_considerations"
                       title="Application considerations">
    <t>Protecting multiple flows with the same repair flow might be more efficient in terms of bandwidth overhead and FEC strength.
	An appropriate example for bandwidth efficiency would be a 3D interactive video application (2D plus depth) where a FEC protection must be applied to a single frame only, due to latency considerations. 
	If, for example, each frame (2D or depth) is transmitted by 4 RTP packets, the miniumum bandwidth overheader for protecting each source flow separately is 25%, with a single repair packet for each frame (one for 2D frame, and one for depth frame). 
	By protecting both frames together (2D and depth) with the same repair flow, the bandwidth overhead can be reduced to 12.5% (A single repair packet for all 8 RTP source packets). This, ofcourse, reduces the FEC strength to the level chosen be the application.</t>
	<t>Protecting multiple source flows can increase FEC strength as described in the following example:
	When protecting each frame separately with a single repair packet, if two packets are lost from a the same frame, they cannot be repaired. </t>
	<t>However, if we protect both flows (8 RTP packets) with a scheme such as Reed-Solomon, with 2 repair packets (without actually increasing the bandwidth overhead), 
	any two lost packets from both frames (total of 8 RTP packets) may be repaired.
	However, an example for an application that is not suitable for multiple source flows protection, would be an application that protects two flows where one of the flows is prone to high packet loss rates, and the other source flow is prone to low packet loss rates. 
	Protecting both flows with one repair flow, will damage the rate of successful repairing of packets of the flow that is prone to low packet loss rate. </t>
    </section>
 
    <section anchor="offer_answer_considerations"
                       title="Offer/Answer considerations">
    <t>When offering multiple source flows FEC protection over RTP using SDP in an
   Offer/Answer model [RFC3264], the following considerations apply:
	<list style="symbols">
		<t>When protecting multiple sources, the sender may suggest various FEC-schemes to be used for the FEC protection.
			Each FEC-scheme should be indicated as a separate offer. The receiver may choose the supported/preferred FEC-scheme to be used.</t>
			
		<t> The specific FEC-scheme parameters can also be indicated as separated offers. For example, using the same FEC-scheme but with two differnt repair-window size parameters should be indicated in separated offers.
			Once the receiver decides the FEC-scheme to be used, it should choose the specific offer among the different offers for the chosen scheme based on the FEC-scheme parameters. </t>
			
		<t> When a receiver does not support the fec-mf scheme, these offers MUST be ignored and deleted from the answer. The sender may add other single source flow FEC protection offers for receivers that do not support multiple source flows protection.</t>
		
		<t> If multiple source flow FEC protection is not desired by the receiver, it can be deleted from the answer. </t>
	</list>
	</t>
    </section>
     
         

    <section anchor="sec_security_considerations"
             title="Security Considerations">
      <t>  
	  Multiple flow FEC protection is FEC-scheme independent. Any FEC scheme can be used for protection. 
	  Therefore, the security considerations for using multiple flow FEC protection are dependent on the actual used FEC-scheme, and should be taken under considerations when using it.</t>
<t>	  Other security considerations are implied by using RTP for multiple flow protection:</t>
<t>	  RTP packets using the payload format defined in this specification
   are subject to the security considerations discussed in the RTP
   specification [RFC3550] and in any applicable RTP profile.  The main
   security considerations for the RTP packet carrying the RTP payload
   format defined within this memo are confidentiality, integrity and
   source authenticity.  Confidentiality is achieved by encrypting the
   RTP payload.  Integrity of the RTP packets is achieved through a
   suitable cryptographic integrity protection mechanism.  Such a
   cryptographic system may also allow the authentication of the source
   of the payload.  A suitable security mechanism for this RTP payload
   format should provide confidentiality, integrity protection, and at
   least source authentication capable of determining if an RTP packet
   is from a member of the RTP session.</t>

   <t>Note that the appropriate mechanism to provide security to RTP and
   payloads following this memo may vary.  It is dependent on the
   application, transport and signaling protocol employed.  Therefore, a
   single mechanism is not sufficient, although if suitable, using the
   Secure Real-time Transport Protocol (SRTP) [RFC3711] is recommended.
   Other mechanisms that may be used are IPsec [RFC4301] and Transport
   Layer Security (TLS) [RFC5246] (RTP over TCP); other alternatives may
   exist.
   
	</t>
    </section>

    <section title="IANA Considerations">
      <t>   New media subtypes are subject to IANA registration.  For the
   registration of the payload formats and their parameters introduced
   in this document, refer to Section 7.
</t>
    </section>

    <section title="Acknowledgments">
      <t>Some parts of this document are borrowed from the following documents: [RFC5109], 
      [draft-ietf-fecframe-1d2d-parity-scheme-01], [draft-galanos-fecframe-rtp-reedsolomon-mf-00].  
      The author would like to thank the editors of these documents.</t>
    </section>
	
  </middle>

  <back>
	<references title="Normative References">
       &rfc2119;
       &rfc3550;
       &rfc4566;
       &rfc4288;
       &rfc3555;
       &rfc4756;

	</references>
   
   <references title="Informative References">
		&rfc5109;
    	&rfc5510;
	       &__reference.I-D.ietf-fecframe-framework;
	       &__reference.I-D.ietf-fecframe-sdp-elements;
		&__reference.I-D.galanos-fecframe-rs-mf;
		&__reference.I-D.galanos-fecframe-rs;
		&__reference.I-D.ietf-fecframe-pseudo-cdp;
		&rfc5053;
    </references>
	
    
  </back>
</rfc>
