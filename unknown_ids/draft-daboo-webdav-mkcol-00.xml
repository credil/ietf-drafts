<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd' [
<!ENTITY rfc2119 PUBLIC '' 'bibxml/reference.RFC.2119.xml'>
<!ENTITY rfc2616 PUBLIC '' 'bibxml/reference.RFC.2616.xml'>
<!ENTITY rfc3253 PUBLIC '' 'bibxml/reference.RFC.3253.xml'>
<!ENTITY rfc4791 PUBLIC '' 'bibxml/reference.RFC.4791.xml'>
<!ENTITY rfc4918 PUBLIC '' 'bibxml/reference.RFC.4918.xml'>
]> 

<?rfc rfcedstyle="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?><!-- default = 3 -->
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<!--<?rfc strict="yes"?> -->
<!--<?rfc comments="yes"?> -->
<!--<?rfc inline="yes"?> -->

<rfc ipr='full3978' docName='draft-daboo-webdav-mkcol-00'>
  <front>
    <title abbrev="WebDAV Sync">Extended MKCOL for WebDAV</title>
    <author initials="C." surname="Daboo" fullname="Cyrus Daboo">
      <organization abbrev="Apple Computer">
        Apple Computer, Inc. 
      </organization>
      <address>
        <postal>
          <street>
            1 Infinite Loop 
          </street>
          <city>
            Cupertino 
          </city>
          <region>
            CA 
          </region>
          <code> 95014 </code> 
          <country>
            USA 
          </country>
        </postal>
        <email>
          cyrus@daboo.name 
        </email>
        <uri>
          http://www.apple.com/ 
        </uri>
      </address>
    </author>
    <date year='2007' />
    <area>
      Applications 
    </area>
    <abstract>
      <t>
        This specification extends the WebDAV MKCOL method to allow collections and resources of arbitrary resourcetype to be created and to allow properties to be set at the same time. 
      </t>
    </abstract>
  </front>
  <middle>
    <section title='Introduction'>
      <t>
        WebDAV <xref target="RFC4918"/> defines an HTTP <xref target="RFC2616" /> method MKCOL. This method is used to create WebDAV collections on the server. However, several WebDAV-based specifications (e.g., DeltaV <xref target="RFC3253"/>, CalDAV <xref target="RFC4791"/>) define "special" collections or resources - ones which are identified by additional values in the DAV:resourcetype property assigned to the collection resource, or through other means. These "special" collections are created by new methods (e.g., MKACTIVITY, MKWORKSPACE, MKCALENDAR). The addition of a new MKxxx method for each new "special" collection or resource adds to server complexity and is detrimental to overall reliability due to the need to make sure intermediaries are aware of these methods.
      </t>
      <t>
        This specification proposes an extension to the WebDAV MKCOL method that adds a request body allowing a client to specify WebDAV properties to be set on the newly created collection or resource. In particular, the DAV:resourcetype property can be used to create a "special" collection, or other properties used to create a "special" resource. This avoids the need to invent new MKxxx methods.
      </t>
    </section>
    <section title='Conventions Used in This Document'>
      <t>
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target='RFC2119' />. 
      </t>
      <t>
        When XML element types in the namespace "DAV:" are referenced in this document outside of the context of an XML fragment, the string "DAV:" will be prefixed to the element type names. 
      </t>
    </section>
    <section title='WebDAV extended MKCOL'>
      <t>
        The WebDAV MKCOL request is extended to allow the inclusion of a request body. The request body is an XML document containing a single DAV:mkcol XML element at the top-level. One or more DAV:set XML elements MAY be included in the DAV:mkcol XML element to allow setting properties on the collection as it is created. In particular, to create a collection of a particular type, the DAV:resourcetype XML element MUST be included in a DAV:set XML element and MUST specify the correct resource type elements for the new resource.
      </t>
      <t>
        As per the PROPPATCH method, servers MUST process any DAV:set instructions in document order (an exception to the normal rule that ordering is irrelevant). Instructions MUST either all be executed or none executed.  Thus, if any error occurs during processing, all executed instructions MUST be undone and a proper error result returned. Failure to set a property value on the collection MUST result in a failure of the overall MKCOL request.
      </t>
      <t>
        Additional XML elements, specific to the type of resource being created, MAY be included in the DAV:mkcol XML element. For example, the DAV:mkactivity XML element can be included to provide the same behavior that it would have done if used in an MKACTIVITY request.
      </t>
      <t>
        If a server attempts to make any of the property changes in an extended MKCOL request (i.e., the request is not rejected for high-level errors before processing the body), the response MUST be an XML document containing a single DAV:mkcol-response XML element, which MUST contain DAV:propstat XML elements with the status of each property.
      </t>
      <t>
        Additional XML elements, specific to the type of resource being created, MAY be included in the DAV:mkcol-response XML element. For example, the DAV:mkactivity-response XML element can be included to provide the same behavior that it would have done if used in an MKACTIVITY response.
      </t>
      <t>
        In all other respects the behavior of the extended MKCOL request follows that of the standard MKCOL request.
      </t>

	  <section title="Extended MKCOL Support" anchor="capability">
		<t>
			A server supporting the features described in this document, MUST include "extended-mkcol" as a field in the DAV response header from an OPTIONS request on any resource that supports use of the extended MKCOL method.
		</t>
		<section title="Example: Using OPTIONS for the Discovery of Support for extended MKCOL">
			<figure>
				<preamble>&gt;&gt; Request &lt;&lt;</preamble>
				<artwork><![CDATA[
OPTIONS /addressbooks/users/ HTTP/1.1
Host: addressbook.example.com
				]]></artwork>
			</figure>
			<figure>
				<preamble>&gt;&gt; Response &lt;&lt;</preamble>
				<artwork><![CDATA[
HTTP/1.1 200 OK
Allow: OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, COPY, MOVE
Allow: MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, REPORT, ACL
DAV: 1, 2, 3, access-control, extended-mkcol
Date: Sat, 11 Nov 2006 09:32:12 GMT
Content-Length: 0
				]]></artwork>
			</figure>
		</section>
</section>
      <section title="Status Codes">
        <t>
          As per Section 9.3.1 of <xref target="RFC4918"/>.
        </t>
      </section><!-- Status Codes -->

      <section title="Example: Successful extended MKCOL Request">

        <t>
          This example shows how the extended MKCOL request is used to create a collection of a fictitious type "special-resource".
        </t>

        <figure>
          <preamble>&gt;&gt; Request &lt;&lt;</preamble>
          <artwork><![CDATA[
MKCOL /home/special/ HTTP/1.1
Host: special.example.com
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkcol xmlns:D="DAV:"
              xmlns:E="http://example.com/ns/">
  <D:set>
    <D:prop>
      <D:resourcetype>
        <D:collection/>
        <E:special-resource/>
      </D:resourcetype>
      <D:displayname>Special Resource</D:displayname>
    </D:prop>
  </D:set>
</D:mkcol> 
          ]]></artwork>
        </figure>
        <figure>
          <preamble>&gt;&gt; Response &lt;&lt;</preamble>
          <artwork><![CDATA[
HTTP/1.1 201 Created
Cache-Control: no-cache
Date: Sat, 11 Nov 2006 09:32:12 GMT
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkcol-response xmlns:D="DAV:">
  <D:propstat>
    <D:prop>
      <D:resourcetype/>
      <D:displayname/>
    </D:prop>
    <D:status>HTTP/1.1 200 OK</D:status>
  </D:propstat>
</D:mkcol-response> 
          ]]></artwork>
        </figure>
      </section>

    </section>
    <section title='Replacing existing MKxxx methods'>
      <t>One of the goals of this extension is to eliminate the need for other extensions to define their own variant of MKCOL to create the special collections they need. This extension can be used to replace existing MKxxx methods in other extensions as detailed below. If a server supports this extension and the other extension listed, then the server MUST support use of the extended MKCOL method to achieve the same result as the MKxxx method of the other extension.</t>
      <section title='MKCALENDAR replacement'>
        <t>CalDAV <xref target="RFC4791"/> defines the MKCALENDAR method to create a calendar collection as well as set properties during creation.</t>
        <t>The extended MKCOL method can be used instead by specifying both DAV:collection and CALDAV:calendar-collection XML elements in the DAV:resourcetype property, set during the extended MKCOL request.</t>
      <section title="Example: Replacing MKCALENDAR with MKCOL">

        <t>
          The first example below shows an MKCALENDAR request containing a CALDAV:mkcalendar XML element in the request body, and returning a CALDAV:mkcalendar-response XML element in the response body. The second example shows the equivalent extended MKCOL request with the same request and response XML elements.
        </t>
        <figure>
          <preamble>&gt;&gt; MKCALENDAR Request &lt;&lt;</preamble>
          <artwork><![CDATA[
MKCALENDAR /home/lisa/calendars/events/ HTTP/1.1
Host: calendar.example.com
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<C:mkcalendar xmlns:D="DAV:"
              xmlns:C="urn:ietf:params:xml:ns:caldav">
  <D:set>
    <D:prop>
      <D:displayname>Lisa's Events</D:displayname>
    </D:prop>
  </D:set>
</C:mkcalendar> 
          ]]></artwork>
        </figure>
        <figure>
          <preamble>&gt;&gt; MKCALENDAR Response &lt;&lt;</preamble>
          <artwork><![CDATA[
HTTP/1.1 201 Created
Cache-Control: no-cache
Date: Sat, 11 Nov 2006 09:32:12 GMT
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<C:mkcalendar-response xmlns:D="DAV:"
              xmlns:C="urn:ietf:params:xml:ns:caldav">
  <D:propstat>
    <D:prop>
      <D:displayname/>
    </D:prop>
    <D:status>HTTP/1.1 200 OK</D:status>
  </D:propstat>
</C:mkcalendar-response> 
          ]]></artwork>
        </figure>
        <figure>
          <preamble>&gt;&gt; MKCOL Request &lt;&lt;</preamble>
          <artwork><![CDATA[
MKCOL /home/cyrus/calendars/events/ HTTP/1.1
Host: calendar.example.com
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkcol xmlns:D="DAV:"
              xmlns:C="urn:ietf:params:xml:ns:caldav">
  <D:set>
    <D:prop>
      <D:resourcetype>
        <D:collection/>
        <C:calendar-collection/>
      </D:resourcetype>
      <D:displayname>Cyrus' Events</D:displayname>
    </D:prop>
  </D:set>
</D:mkcol> 
          ]]></artwork>
        </figure>
        <figure>
          <preamble>&gt;&gt; MKCOL Response &lt;&lt;</preamble>
          <artwork><![CDATA[
HTTP/1.1 201 Created
Cache-Control: no-cache
Date: Sat, 11 Nov 2006 09:32:12 GMT
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkcol-response xmlns:D="DAV:"
              xmlns:C="urn:ietf:params:xml:ns:caldav">
  <D:propstat>
    <D:prop>
      <D:resourcetype/>
      <D:displayname/>
    </D:prop>
    <D:status>HTTP/1.1 200 OK</D:status>
  </D:propstat>
</D:mkcol-response> 
          ]]></artwork>
        </figure>
      </section>
      </section>
      <section title='MKWORKSPACE replacement'>
        <t>Versioning Extensions to WebDAV <xref target="RFC3253"/> defines the MKWORKSPACE method to create a collection that is used as a versioning workspace.</t>
        <t>The extended MKCOL method can be used instead by specifying the DAV:collection XML element in the DAV:resourcetype property, and specifying the DAV:workspace property (set to the URI of the workspace resource itself) during the extended MKCOL request.</t>
        <t>In addition, any DAV:mkworkspace XML element that would have been sent in the MKWORKSPACE request can also be included in the DAV:mkcol XML element.</t>
        <t>Also, the DAV:mkcol-response XML element in the response to the extended MKCOL request can also include the DAV:mkworkspace-response element, if that would have been sent in the response to the equivalent MKWORKSPACE request.</t>
      <section title="Example: Replacing MKWORKSPACE with MKCOL">

        <t>
          The first example below shows an MKWORKSPACE request containing a DAV:mkworkspace XML element in the request body, and returning a DAV:mkworkspace-response XML element in the response body. The second example shows the equivalent extended MKCOL request with the same request and response XML elements.
        </t>

        <figure>
          <preamble>&gt;&gt; MKWORKSPACE Request &lt;&lt;</preamble>
          <artwork><![CDATA[
MKWORKSPACE /repository/project/caldav/cyrus-branch HTTP/1.1
Host: source.example.com
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkworkspace xmlns:D="DAV:"
              xmlns:E="http://source.example.com/ns/">
  <E:branch-owner>Cyrus Daboo</E:branch-owner>
  <E:message>Creating branch for server-to-server work.</E:message>
</D:mkworkspace> 
          ]]></artwork>
        </figure>
        <figure>
          <preamble>&gt;&gt; MKACTIVITY Response &lt;&lt;</preamble>
          <artwork><![CDATA[
HTTP/1.1 201 Created
Cache-Control: no-cache
Date: Sat, 11 Nov 2006 09:32:12 GMT
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkworkspace-response xmlns:D="DAV:"
              xmlns:E="http://source.example.com/ns/">
  <E:revision>r12345</E:revision>
</D:mkworkspace-response> 
          ]]></artwork>
        </figure>
        <figure>
          <preamble>&gt;&gt; MKCOL Request &lt;&lt;</preamble>
          <artwork><![CDATA[
MKCOL /repository/project/caldav/cyrus-branch HTTP/1.1
Host: source.example.com
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkcol xmlns:D="DAV:"
              xmlns:C="urn:ietf:params:xml:ns:caldav">
  <D:set>
    <D:prop>
      <D:resourcetype>
        <D:collection/>
      </D:resourcetype>
      <D:workspace>
        <D:href>/repository/project/caldav/cyrus-branch</D:href>
      </D:workspace>
    </D:prop>
  </D:set>
  <D:mkworkspace xmlns:D="DAV:"
                xmlns:E="http://source.example.com/ns/">
    <E:branch-owner>Cyrus Daboo</E:branch-owner>
    <E:message>Creating branch for server-to-server work.</E:message>
  </D:mkworkspace> 
</D:mkcol> 
          ]]></artwork>
        </figure>
        <figure>
          <preamble>&gt;&gt; MKCOL Response &lt;&lt;</preamble>
          <artwork><![CDATA[
HTTP/1.1 201 Created
Cache-Control: no-cache
Date: Sat, 11 Nov 2006 09:32:12 GMT
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkcol-response xmlns:D="DAV:"
              xmlns:C="urn:ietf:params:xml:ns:caldav">
  <D:propstat>
    <D:prop>
      <D:resourcetype/>
    </D:prop>
    <D:status>HTTP/1.1 200 OK</D:status>
  </D:propstat>
  <D:mkworkspace-response xmlns:D="DAV:"
                xmlns:E="http://source.example.com/ns/">
    <E:revision>r12345</E:revision>
  </D:mkworkspace-response> 
</D:mkcol-response> 
          ]]></artwork>
        </figure>
      </section>
      </section>
      <section title='MKACTIVITY replacement'>
        <t>Versioning Extensions to WebDAV <xref target="RFC3253"/> defines the MKACTIVITY method to create a resource to represent a versioning activity.</t>
        <t>The extended MKCOL method can be used instead by specifying the DAV:activity XML element in the DAV:resourcetype property set during the extended MKCOL request.</t>
        <t>In addition, any DAV:mkactivity XML element that would have been sent in the MKACTIVITY request can also be included in the DAV:mkcol XML element.</t>
        <t>Also, the DAV:mkcol-response XML element in the response to the extended MKCOL request can also include the DAV:mkactivity-response element, if that would have been sent in the response to the equivalent MKACTIVITY request.</t>
      <section title="Example: Replacing MKACTIVITY with MKCOL">

        <t>
          The first example below shows an MKACTIVITY request containing a DAV:mkactivity XML element in the request body, and returning a DAV:mkactivity-response XML element in the response body. The second example shows the equivalent extended MKCOL request with the same request and response XML elements.
        </t>

        <figure>
          <preamble>&gt;&gt; MKACTIVITY Request &lt;&lt;</preamble>
          <artwork><![CDATA[
MKACTIVITY /repository/project/caldav/release-1 HTTP/1.1
Host: source.example.com
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkactivity xmlns:D="DAV:"
              xmlns:E="http://source.example.com/ns/">
  <E:tag>Release-1.0</E:tag>
  <E:message>Creating tag for v1.0 release.</E:message>
</D:mkactivity> 
          ]]></artwork>
        </figure>
        <figure>
          <preamble>&gt;&gt; MKACTIVITY Response &lt;&lt;</preamble>
          <artwork><![CDATA[
HTTP/1.1 201 Created
Cache-Control: no-cache
Date: Sat, 11 Nov 2006 09:32:12 GMT
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkactivity-response xmlns:D="DAV:"
              xmlns:E="http://source.example.com/ns/">
  <E:tag>Release-1.0</E:tag>
</D:mkactivity-response> 
          ]]></artwork>
        </figure>
        <figure>
          <preamble>&gt;&gt; MKCOL Request &lt;&lt;</preamble>
          <artwork><![CDATA[
MKCOL /repository/project/caldav/release-1 HTTP/1.1
Host: source.example.com
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkcol xmlns:D="DAV:"
              xmlns:C="urn:ietf:params:xml:ns:caldav">
  <D:set>
    <D:prop>
      <D:resourcetype>
        <D:activity/>
      </D:resourcetype>
    </D:prop>
  </D:set>
  <D:mkactivity xmlns:D="DAV:"
                xmlns:E="http://source.example.com/ns/">
    <E:tag>Release-1.0</E:tag>
    <E:message>Creating tag for v1.0 release.</E:message>
  </D:mkactivity> 
</D:mkcol> 
          ]]></artwork>
        </figure>
        <figure>
          <preamble>&gt;&gt; MKCOL Response &lt;&lt;</preamble>
          <artwork><![CDATA[
HTTP/1.1 201 Created
Cache-Control: no-cache
Date: Sat, 11 Nov 2006 09:32:12 GMT
Content-Type: application/xml; charset="utf-8"
Content-Length: xxxx

<?xml version="1.0" encoding="utf-8" ?>
<D:mkcol-response xmlns:D="DAV:"
              xmlns:C="urn:ietf:params:xml:ns:caldav">
  <D:propstat>
    <D:prop>
      <D:resourcetype/>
    </D:prop>
    <D:status>HTTP/1.1 200 OK</D:status>
  </D:propstat>
  <D:mkactivity-response xmlns:D="DAV:"
                xmlns:E="http://source.example.com/ns/">
    <E:tag>Release-1.0</E:tag>
  </D:mkactivity-response> 
</D:mkcol-response> 
          ]]></artwork>
        </figure>
      </section>
      </section>
    </section>
    <section title='XML Element Definitions'>
      <section title='mkcol XML Element'>
        <t>
            <list style="hanging">
                <t hangText="Name:">
                    mkcol
                </t>
                <t hangText="Namespace:">
                    DAV:
                </t>
                <t hangText="Purpose:">
                    Used in a request to specify properties to be set in an extended MKCOL request, as well as any additional information needed when creating the resource.
                </t>
                <t hangText="Description:">
                    This XML element is a container for the information required to modify the properties on a collection resource as it is created in an extended MKCOL request.
                </t>
                <t hangText="Definition:">
                    <figure>
                        <artwork><![CDATA[
    <!ELEMENT mkcol (set+, ANY)>
                        ]]></artwork>
                    </figure>
                </t>
            </list>
        </t>
      </section>
      <section title='mkcol-response XML Element'>
        <t>
            <list style="hanging">
                <t hangText="Name:">
                    mkcol-response
                </t>
                <t hangText="Namespace:">
                    DAV:
                </t>
                <t hangText="Purpose:">
                    Used in a response to indicate the status of properties that were set or failed to be set during an extended MKCOL request.
                </t>
                <t hangText="Description:">
                    This XML element is a container for the information returned about a resource that has been created in an extended MKCOL request.
                </t>
                <t hangText="Definition:">
                    <figure>
                        <artwork><![CDATA[
    <!ELEMENT mkcol-response (propstat+, ANY)>
                        ]]></artwork>
                    </figure>
                </t>
            </list>
        </t>
      </section>
    </section>
    <section title='Security Considerations'>
      <t>
        This extension does not introduce any new security concerns beyond those already described in HTTP and WebDAV. 
      </t>
    </section>
    <section title='IANA Considerations'>
      <t>
        This document does not require any actions on the part of IANA. 
      </t>
    </section>
    <section title='Acknowledgments'>
      <t>
        Several people suggested this approach, including Julian Reschke and Bernard Desruisseaux.
      </t>
    </section>
  </middle>
  <back>
    <references title='Normative References'>
      &rfc2119; 
      &rfc2616;
      &rfc3253;
      &rfc4791;
      &rfc4918;
    </references>
    <!--<references title='Informative References'>
    </references>-->
<!--
<section title='Change History (to be removed prior to publication as an RFC)'>

<t>Changes from -00:</t>
<list style='numbers'>
<t></t>
</list>

</section>
-->
  </back>
</rfc>
