<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'
[
  <!ENTITY rfc2119 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
  <!ENTITY rfc3023 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3023.xml'>
  <!ENTITY rfc3470 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3470.xml'>
  <!ENTITY rfc3688 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml'>
  <!ENTITY rfc5545 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5545.xml'>
  <!ENTITY W3C.REC-xml-20081126 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml4/reference.W3C.REC-xml-20081126'>
]>
<?rfc rfcedstyle="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<!-- default = 3 -->
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<!--<?rfc strict="yes"?> -->
<!--<?rfc comments="yes"?> -->
<!--<?rfc inline="yes"?> -->
<rfc category='std' ipr='trust200902' docName='draft-daboo-et-al-icalendar-in-xml-07'>
  <front>
    <title abbrev="xCal">xCal: The XML format for iCalendar</title>
    <author initials="C." surname="Daboo" fullname="Cyrus Daboo">
      <organization abbrev="Apple, Inc.">Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <region>CA</region>
          <code>95014</code>
          <country>USA</country>
        </postal>
        <email>cyrus@daboo.name</email>
        <uri>http://www.apple.com/</uri>
      </address>
    </author>
    <author initials="M." surname="Douglass" fullname="Mike Douglass">
      <organization abbrev="RPI">Rensselaer Polytechnic Institute</organization>
      <address>
        <postal>
          <street>110 8th Street</street>
          <city>Troy</city>
          <region>NY</region>
          <code>12180</code>
          <country>USA</country>
        </postal>
        <email>douglm@rpi.edu</email>
        <uri>http://www.rpi.edu/</uri>
      </address>
    </author>
    <author initials="S." surname="Lees" fullname="Steven Lees">
      <organization abbrev="Microsoft">Microsoft Corporation</organization>
      <address>
        <postal>
          <street>One Microsoft Way</street>
          <city>Redmond</city>
          <region>WA</region>
          <code>98052</code>
          <country>USA</country>
        </postal>
        <email>steven.lees@microsoft.com</email>
        <uri>http://www.microsoft.com/</uri>
      </address>
    </author>
    <date />
    <area>Applications</area>
    <abstract>
      <t>This specification defines "xCal", an XML format for iCalendar data.</t>
    </abstract>
  </front>
  <middle>

    <section title='Introduction'>

      <t>The iCalendar data format <xref target='RFC5545'/> is a widely deployed interchange format for calendaring and scheduling data. While many applications and services consume and generate calendar data, iCalendar is a specialized format that requires its own parser/generator. In contrast, XML-based formats are widely used for interoperability between applications, and the many tools that generate, parse, and manipulate XML make it easier to work with than iCalendar.</t>

      <t>The purpose of this specification is to define "xCal", an XML format for iCalendar data. xCal is defined as a straightforward mapping into XML from iCalendar, so that iCalendar data to be converted to XML, and then back to iCalendar, without losing any semantic meaning in the data. Anyone creating XML calendar data according to this specification will know that their data can be converted to a valid iCalendar representation as well.</t>

      <t>Key design considerations are:
        <list>
          <t>Round-tripping (converting an iCalendar instance to XML and back) will give the same result as the starting point.</t>
          <t>Preserve the semantics of the iCalendar data. While a simple consumer can easily browse the calendar data in XML, a full understanding of iCalendar is still required in order to modify and/or fully comprehend the calendar data.</t>
		  <t>Ability to handle many extensions to the underlying iCalendar specification without requiring an update to this document.</t>
        </list>
      </t>

    </section>

    <section title='Conventions Used in This Document'>

      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in 
      <xref target='RFC2119' />.</t>

      <t>When XML element types in the namespace "urn:ietf:params:xml:ns:icalendar-2.0" are referenced in this document outside of the context of an XML fragment, the string "ICAL:" will be prefixed to the element types.</t>

      <t>Some examples in this document contain "partial" XML documents used for illustrative purposes. In these examples, three periods "..." are used to indicate a portion of the document that has been removed for compactness.</t>

    </section>

    <section title='Converting from iCalendar to xCal'>

      <t>This section describes how iCalendar data is converted to XML using a simple mapping between the iCalendar data model and XML elements.</t>

      <section title="Pre-processing">

        <t>iCalendar uses a line folding mechanism to limit lines of data to a maximum line length (typically 72 characters) to ensure maximum likelihood of preserving data integrity as it is transported via various means (e.g., email) - see Section 3.1 of <xref target='RFC5545'/>. Prior to converting iCalendar data into XML all folded lines MUST be unfolded.</t>

        <t>iCalendar data uses an "escape" character sequence for text values and parameter values. When such text elements are converted into XML the escaping MUST be removed.</t>

        <t>iCalendar uses a base64 encoding for binary data. The base64 encoding MUST remain when converted to XML.</t>

      </section>

      <section title="iCalendar stream (RFC5545 section 3.4)">

        <t>At the top level of the iCalendar object model is an "iCalendar stream". This object encompasses multiple "iCalendar objects". In XML, the entire stream is contained in the root ICAL:icalendar XML element.</t>

        <t>An iCalendar stream can contain one or more iCalendar objects. Each iCalendar object, delimited by BEGIN:VCALENDAR and END:VCALENDAR, is enclosed by the ICAL:vcalendar XML element.</t>

        <t>Example:
        <figure><artwork><![CDATA[
  <?xml version="1.0" encoding="utf-8"?>
  <icalendar xmlns="urn:ietf:params:xml:ns:icalendar-2.0">
    <vcalendar>
    ...
    </vcalendar>
  </icalendar>
        ]]></artwork></figure>
        </t>

        <t>iCalendar objects are comprised of a set of "components", "properties", "parameters" and "values". A "component" can contain other "components" or "properties". A "property" has a value and optionally a set of "parameters".</t>

        <t>In xCal, "components" are contained within an ICAL:components XML element. With that element, another ICAL:components element could appear (representing components nested within components) or the ICAL:properties XML element could appear. ICAL:properties is used to encapsulate iCalendar properties.</t>

        <t>Each iCalendar property will be mapped to its own XML element as described below. Within each of these elements there is an optional ICAL:parameters XML element used to encapsulate any iCalendar parameters. Additionally there will be one or more XML elements representing the value of the iCalendar property.</t>

        <t>Example:
        <figure><artwork><![CDATA[
  <?xml version="1.0" encoding="utf-8"?>
  <icalendar xmlns="urn:ietf:params:xml:ns:icalendar-2.0">
    <vcalendar>
      <properties>
      ...
      </properties>
      <components>
      ...
      </components>
    </vcalendar>
  </icalendar>
        ]]></artwork></figure>
        </t>

        <texttable>
          <ttcol>Item</ttcol>
          <ttcol>XML element</ttcol>
          <ttcol>XML Definition</ttcol>
          <c>iCalendar Stream</c>
          <c>ICAL:icalendar</c>
          <c><xref target="schema"/> # 3.4</c>
          <c>VCALENDAR</c>
          <c>ICAL:vcalendar</c>
          <c><xref target="schema"/> # 3.6</c>
        </texttable>

      </section>

      <section title="Components (RFC5545 section 3.6)">

        <t>Each calendar component in the VCALENDAR object, delimited by BEGIN and END, will be converted to an enclosing XML element with the same name, but in lowercase. Any iCalendar components added in the future will be converted in the same way. As a non-normative reference, the table below shows the current iCalendar components and their XML equivalents.</t>

        <texttable>
          <ttcol>Component</ttcol>
          <ttcol>XML element</ttcol>
          <ttcol>XML Definition</ttcol>
          <c>VEVENT</c>
          <c>ICAL:vevent</c>
          <c><xref target="schema"/> # 3.6.1</c>
          <c>VTODO</c>
          <c>ICAL:vtodo</c>
          <c><xref target="schema"/> # 3.6.2</c>
          <c>VJOURNAL</c>
          <c>ICAL:vjournal</c>
          <c><xref target="schema"/> # 3.6.3</c>
          <c>VFREEBUSY</c>
          <c>ICAL:vfreebusy</c>
          <c><xref target="schema"/> # 3.6.4</c>
          <c>VTIMEZONE</c>
          <c>ICAL:vtimezone</c>
          <c><xref target="schema"/> # 3.6.5</c>
          <c>STANDARD</c>
          <c>ICAL:standard</c>
          <c><xref target="schema"/> # 3.6.5</c>
          <c>DAYLIGHT</c>
          <c>ICAL:daylight</c>
          <c><xref target="schema"/> # 3.6.5</c>
          <c>VALARM</c>
          <c>ICAL:valarm</c>
          <c><xref target="schema"/> # 3.6.6</c>
        </texttable>

      </section>

      <section title="Properties (RFC5545 section 3.7 and 3.8)">

        <t>iCalendar properties , whether they apply to the VCALENDAR object or to a component, are handled in a consistent way in the xCal format.</t>

        <t>iCalendar properties are enclosed in the XML element ICAL:properties.</t>

        <t>Each invidivual iCalendar property is represented in XML by an element of the same name as the iCalendar property, but in lowercase. For example, the CALSCALE property is represented in XML by the ICAL:calscale element.</t>

        <t>Example:
        <figure><artwork><![CDATA[
  <?xml version="1.0" encoding="utf-8"?>
  <icalendar xmlns="urn:ietf:params:xml:ns:icalendar-2.0">
    <vcalendar>
      <properties>
        <calscale>...</calscale>
        <version>...</version>
        <prodid>...</prodid>
      </properties>
      <components>
      ...
      </components>
    </vcalendar>
  </icalendar>
        ]]></artwork></figure>
        </t>

        <t>Each property can contain an ICAL:parameters XML element encapsulating any iCalendar parameters associated with the iCalendar property.</t>

        <t>Each property will contain one or more "value" XML elements as described below representing the value of the iCalendar property. As with components, the table is a non-normative reference and is not meant to be exclusive. Any iCalendar properties added in the future will be converted using the same mapping rule.</t>

        <texttable>
          <ttcol>Property</ttcol>
          <ttcol>XML element</ttcol>
          <ttcol>XML Definition</ttcol>
          <c>CALSCALE</c>
          <c>ICAL:calscale</c>
          <c><xref target="schema"/> # 3.7.1</c>
          <c>METHOD</c>
          <c>ICAL:method</c>
          <c><xref target="schema"/> # 3.7.2</c>
          <c>PRODID</c>
          <c>ICAL:prodid</c>
          <c><xref target="schema"/> # 3.7.3</c>
          <c>VERSION</c>
          <c>ICAL:version</c>
          <c><xref target="schema"/> # 3.7.4</c>
          <c>ATTACH</c>
          <c>ICAL:attach</c>
          <c><xref target="schema"/> # 3.8.1.1</c>
          <c>CATEGORIES</c>
          <c>ICAL:categories</c>
          <c><xref target="schema"/> # 3.8.1.2</c>
          <c>CLASS</c>
          <c>ICAL:class</c>
          <c><xref target="schema"/> # 3.8.1.3</c>
          <c>COMMENT</c>
          <c>ICAL:comment</c>
          <c><xref target="schema"/> # 3.8.1.4</c>
          <c>DESCRIPTION</c>
          <c>ICAL:description</c>
          <c><xref target="schema"/> # 3.8.1.5</c>
          <c>GEO</c>
          <c>ICAL:geo</c>
          <c><xref target="schema"/> # 3.8.1.6</c>
          <c>LOCATION</c>
          <c>ICAL:location</c>
          <c><xref target="schema"/> # 3.8.1.7</c>
          <c>PERCENT-COMPLETE</c>
          <c>ICAL:percent-complete</c>
          <c><xref target="schema"/> # 3.8.1.8</c>
          <c>PRIORITY</c>
          <c>ICAL:priority</c>
          <c><xref target="schema"/> # 3.8.1.9</c>
          <c>RESOURCES</c>
          <c>ICAL:resources</c>
          <c><xref target="schema"/> # 3.8.1.10</c>
          <c>STATUS</c>
          <c>ICAL:status</c>
          <c><xref target="schema"/> # 3.8.1.11</c>
          <c>SUMMARY</c>
          <c>ICAL:summary</c>
          <c><xref target="schema"/> # 3.8.1.12</c>
          <c>COMPLETED</c>
          <c>ICAL:completed</c>
          <c><xref target="schema"/> # 3.8.2.1</c>
          <c>DTEND</c>
          <c>ICAL:dtend</c>
          <c><xref target="schema"/> # 3.8.2.2</c>
          <c>DUE</c>
          <c>ICAL:due</c>
          <c><xref target="schema"/> # 3.8.2.3</c>
          <c>DTSTART</c>
          <c>ICAL:dtstart</c>
          <c><xref target="schema"/> # 3.8.2.4</c>
          <c>DURATION</c>
          <c>ICAL:duration</c>
          <c><xref target="schema"/> # 3.8.2.5</c>
          <c>FREEBUSY</c>
          <c>ICAL:freebusy</c>
          <c><xref target="schema"/> # 3.8.2.6</c>
          <c>TRANSP</c>
          <c>ICAL:transp</c>
          <c><xref target="schema"/> # 3.8.2.7</c>
          <c>TZID</c>
          <c>ICAL:tzid</c>
          <c><xref target="schema"/> # 3.8.3.1</c>
          <c>TZNAME</c>
          <c>ICAL:tzname</c>
          <c><xref target="schema"/> # 3.8.3.2</c>
          <c>TZOFFSETFROM</c>
          <c>ICAL:tzoffsetfrom</c>
          <c><xref target="schema"/> # 3.8.3.3</c>
          <c>TZOFFSETTO</c>
          <c>ICAL:tzoffsetto</c>
          <c><xref target="schema"/> # 3.8.3.4</c>
          <c>TZURL</c>
          <c>ICAL:tzurl</c>
          <c><xref target="schema"/> # 3.8.3.5</c>
          <c>ATTENDEE</c>
          <c>ICAL:attendee</c>
          <c><xref target="schema"/> # 3.8.4.1</c>
          <c>CONTACT</c>
          <c>ICAL:contact</c>
          <c><xref target="schema"/> # 3.8.4.2</c>
          <c>ORGANIZER</c>
          <c>ICAL:organizer</c>
          <c><xref target="schema"/> # 3.8.4.3</c>
          <c>RECURRENCE-ID</c>
          <c>ICAL:recurrence-id</c>
          <c><xref target="schema"/> # 3.8.4.4</c>
          <c>RELATED-TO</c>
          <c>ICAL:related-to</c>
          <c><xref target="schema"/> # 3.8.4.5</c>
          <c>URL</c>
          <c>ICAL:url</c>
          <c><xref target="schema"/> # 3.8.4.6</c>
          <c>UID</c>
          <c>ICAL:uid</c>
          <c><xref target="schema"/> # 3.8.4.7</c>
          <c>EXDATE</c>
          <c>ICAL:exdate</c>
          <c><xref target="schema"/> # 3.8.5.1</c>
          <c>RDATE</c>
          <c>ICAL:rdate</c>
          <c><xref target="schema"/> # 3.8.5.2</c>
          <c>RRULE</c>
          <c>ICAL:rrule</c>
          <c><xref target="schema"/> # 3.8.5.3</c>
          <c>ACTION</c>
          <c>ICAL:action</c>
          <c><xref target="schema"/> # 3.8.6.1</c>
          <c>REPEAT</c>
          <c>ICAL:repeat</c>
          <c><xref target="schema"/> # 3.8.6.2</c>
          <c>TRIGGER</c>
          <c>ICAL:trigger</c>
          <c><xref target="schema"/> # 3.8.6.3</c>
          <c>CREATED</c>
          <c>ICAL:created</c>
          <c><xref target="schema"/> # 3.8.7.1</c>
          <c>DTSTAMP</c>
          <c>ICAL:dtstamp</c>
          <c><xref target="schema"/> # 3.8.7.2</c>
          <c>LAST-MODIFIED</c>
          <c>ICAL:last-modified</c>
          <c><xref target="schema"/> # 3.8.7.3</c>
          <c>SEQUENCE</c>
          <c>ICAL:sequence</c>
          <c><xref target="schema"/> # 3.8.7.4</c>
          <c>REQUEST-STATUS</c>
          <c>ICAL:request-status</c>
          <c><xref target="schema"/> # 3.8.8.3</c>
        </texttable>
        <section title="Special Cases for Properties">
          <t>This section describes some properties that have special handling when converting to XML.</t>
          <section title="Multi-valued Properties">
            <t>The following iCalendar properties can have values that consist of a list of "standard" iCalendar values separated by a specific delimiter. In XML these properties are represented by an XML element that contains multiple "value" elements (<xref target="values"/>).</t>
			<texttable>
			  <ttcol>Property</ttcol>
			  <ttcol>XML element</ttcol>
			  <ttcol>XML Definition</ttcol>
			  <c>CATEGORIES</c>
			  <c>ICAL:categories</c>
			  <c><xref target="schema"/> # 3.8.1.2</c>
			  <c>RESOURCES</c>
			  <c>ICAL:resources</c>
			  <c><xref target="schema"/> # 3.8.1.10</c>
			  <c>FREEBUSY</c>
			  <c>ICAL:freebusy</c>
			  <c><xref target="schema"/> # 3.8.2.6</c>
			  <c>EXDATE</c>
			  <c>ICAL:exdate</c>
			  <c><xref target="schema"/> # 3.8.5.1</c>
			  <c>RDATE</c>
			  <c>ICAL:rdate</c>
			  <c><xref target="schema"/> # 3.8.5.2</c>
			</texttable>
          </section>
          <section title="GEO Property">
            <t>In iCalendar, the GEO property value is defined as a semi-colon separated list of two FLOAT values, the first representing latitude and the second longitude.</t>
            
            <t>In xCal, the value for the ICAL:geo element is represented by an ICAL:value element containing an ICAL:latitude element and an ICAL:longitude element, each of which contain text values representing the FLOAT values. See <xref target="schema"/> # 3.8.1.6.</t>
          </section>
          <section title="REQUEST-STATUS Property">
            <t>In iCalendar, the REQUEST-STATUS property value is defined as a semi-colon separated list of two or three TEXT values. The first represents a code, the second a description, and the third (optional) additional data.</t>
            
            <t>In xCal, the value for the ICAL:request-status element is represented by an ICAL:value element containing an ICAL:code element, and iCAL:description element, and optionally and ICAL:data element, each of which contain the corresponding TEXT values. See <xref target="schema"/> # 3.8.8.3.</t>
          </section>
        </section>
      </section>

      <section anchor="parameters" title="Parameters (RFC5545 section 3.2)">
        <t>iCalendar parameters are enclosed in the XML element ICAL:parameters which optionally occurs once in each property XML element.</t>

        <t>Each invidivual iCalendar parameter is represented in xCal by an element of the same name as the iCalendar parameter, but in lowercase. For example, the PARTSTAT parameter is represented in XML by the ICAL:partstat element.</t>

        <t>Example:
        <figure><artwork><![CDATA[
  <?xml version="1.0" encoding="utf-8"?>
  <icalendar xmlns="urn:ietf:params:xml:ns:icalendar-2.0">
    <vcalendar>
      ...
      <components>
      ...
        <attendee>
          <parameters>
            <partstat>NEEDS-ACTION</partstat>
          </parameters>
          ...
      </components>
    </vcalendar>
  </icalendar>
        ]]></artwork></figure>
        </t>

        <t>Each parameter contains either text, or one or more child XML elements representing iCalendar value types.</t>
		
		<t>As with components and properties, the table below is shown as a non-normative reference. Any parameters added to iCalendar in the future will be converted by the rule given above.</t>

        <texttable>
          <ttcol>Parameter</ttcol>
          <ttcol>XML element</ttcol>
          <ttcol>XML Definition</ttcol>
          <c>ALTREP</c>
          <c>ICAL:altrep</c>
          <c><xref target="schema"/> # 3.2.1</c>
          <c>CN</c>
          <c>ICAL:cn</c>
          <c><xref target="schema"/> # 3.2.2</c>
          <c>CUTYPE</c>
          <c>ICAL:cutype</c>
          <c><xref target="schema"/> # 3.2.3</c>
          <c>DELEGATED-FROM</c>
          <c>ICAL:delegated-from</c>
          <c><xref target="schema"/> # 3.2.4</c>
          <c>DELEGATED-TO</c>
          <c>ICAL:delegated-to</c>
          <c><xref target="schema"/> # 3.2.5</c>
          <c>DIR</c>
          <c>ICAL:dir</c>
          <c><xref target="schema"/> # 3.2.6</c>
          <c>ENCODING</c>
          <c>ICAL:encoding</c>
          <c><xref target="schema"/> # 3.2.7</c>
          <c>FMTTYPE</c>
          <c>ICAL:fmttype</c>
          <c><xref target="schema"/> # 3.2.8</c>
          <c>FBTYPE</c>
          <c>ICAL:fbtype</c>
          <c><xref target="schema"/> # 3.2.9</c>
          <c>LANGUAGE</c>
          <c>ICAL:language</c>
          <c><xref target="schema"/> # 3.2.10</c>
          <c>MEMBER</c>
          <c>ICAL:member</c>
          <c><xref target="schema"/> # 3.2.11</c>
          <c>PARTSTAT</c>
          <c>ICAL:partstat</c>
          <c><xref target="schema"/> # 3.2.12</c>
          <c>RANGE</c>
          <c>ICAL:range</c>
          <c><xref target="schema"/> # 3.2.13</c>
          <c>RELATED</c>
          <c>ICAL:related</c>
          <c><xref target="schema"/> # 3.2.14</c>
          <c>RELTYPE</c>
          <c>ICAL:reltype</c>
          <c><xref target="schema"/> # 3.2.15</c>
          <c>ROLE</c>
          <c>ICAL:role</c>
          <c><xref target="schema"/> # 3.2.16</c>
          <c>RSVP</c>
          <c>ICAL:rsvp</c>
          <c><xref target="schema"/> # 3.2.17</c>
          <c>SENT-BY</c>
          <c>ICAL:sent-by</c>
          <c><xref target="schema"/> # 3.2.18</c>
          <c>TZID</c>
          <c>ICAL:tzid</c>
          <c><xref target="schema"/> # 3.2.19</c>
        </texttable>
        
        <section title="VALUE parameter">
          <t>iCalendar defines a VALUE parameter (Section 3.2.20 of <xref target='RFC5545'/>). This parameter is not mapped to an xCal XML element. Instead, the value type is handled by having different XML elements for each value, and these appear inside of ICAL:property elements. Thus, when converting from iCalendar to XML, any VALUE parameters are skipped. When converting from XML into iCalendar, the appropriate VALUE parameter MUST be included in the iCalendar property if the value type is not the default value type for that property.</t>
        </section>
      </section>

      <section anchor="values" title="Values (RFC5545 section 3.3)">
        <t>In the typical case, iCalendar value types are mapped into XML elements with a matching name in all lowercase. In the case of the value for a recurrence rule (see below), iCalendar defines "structured" values and these are mapped into separate child elements for each value element.</t>
        <section title="Binary (RFC5545 section 3.3.1)">
        <t><list style="hanging">
            <t hangText="Description:">iCalendar BINARY property values are represented by the ICAL:binary XML element. The content of the element is base64 encoded data. Whitespace MAY be inserted into the data at any point to "wrap" the data to reasonable line lengths. When converting back to iCalendar the whitespace MUST first be removed.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.1</t>
          </list></t>
        </section>
        <section title="Boolean  (RFC5545 section 3.3.2)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar BOOLEAN property values are represented by the ICAL:boolean XML element. The content of the element is text containing either of "TRUE" or "FALSE".</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.2</t>
          </list></t>
        </section>
        <section title="Calendar User Address (RFC5545 section 3.3.3)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar CAL-ADDRESS property values are represented by the ICAL:cal-address XML element. The content of the element is a URI.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.3</t>
          </list></t>
        </section>
        <section title="Date (RFC5545 section 3.3.4)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar DATE property values are represented by the ICAL:date XML element. The content of the element is the same date value specified by RFC5545.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.4</t>
          </list></t>
        </section>
        <section title="Date-Time (RFC5545 section 3.3.5)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar DATE-TIME property values are represented by the ICAL:date-time XML element. The content of the element is the same date-time value specified by RFC5545.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.5</t>
          </list></t>
        </section>
        <section title="Duration (RFC5545 section 3.3.6)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar DURATION property values are represented by the ICAL:duration XML element. The content of the element is the same duration value specified by RFC5545.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.6</t>
          </list></t>
        </section>
        <section title="Float (RFC5545 section 3.3.7)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar FLOAT property values are represented by the ICAL:float XML element. The content of the element is a text representation of a floating point number.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.7</t>
          </list></t>
        </section>
        <section title="Integer (RFC5545 section 3.3.8)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar INTEGER property values are represented by the ICAL:integer XML element. The content of the element is a text representation of an integer number.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.8</t>
          </list></t>
        </section>
        <section title="Period of Time (RFC5545 section 3.3.9)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar PERIOD property values are represented by the ICAL:period XML element. The content of the element is the same period value specified by RFC5545.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.9</t>
          </list></t>
        </section>
        <section title="Recurrence Rule (RFC5545 section 3.3.10)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar RECUR property values are represented by the ICAL:recur XML element. The content of the element is child elements representing the various components of a recurrence rule.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.10</t>
          </list></t>
        </section>
        <section title="Text (RFC5545 section 3.3.11)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar TEXT property values are represented by the ICAL:text XML element. The content of the element is simple text.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.11</t>
          </list></t>
        </section>
        <section title="Time (RFC5545 section 3.3.12)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar TIME property values are represented by the ICAL:time XML element. The content of the element is the same time value specified by RFC5545.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.12</t>
          </list></t>
        </section>
        <section title="URI (RFC5545 section 3.3.13)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar URI property values are represented by the ICAL:uri XML element. The content of the element is a URI.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.13</t>
          </list></t>
        </section>
        <section title="UTC Offset (RFC5545 section 3.3.14)">
          <t><list style="hanging">
            <t hangText="Description:">iCalendar UTC-OFFSET property values are represented by the ICAL:utc-offset XML element. The content of the element is the same UTC offset value specified by RFC5545.</t>

            <t hangText="XML Definition:"><xref target="schema"/> # 3.3.14</t>
          </list></t>
        </section>
      </section>

      <section title="Extensions">
        <t>iCalendar extension properties and parameters (those with an "X-" prefix in their name) are handled in the same way as other properties and parameters: the property or parameter is represented by an XML element with the same name, but in lowercase. e.g., the "X-FOO" property in iCalendar turns into the ICAL:x-foo element in XML.</t>
      </section>

    </section>

    <section title='Converting from XML into iCalendar'>
      <t>When converting component, property and parameter values, the names SHOULD be converted to uppercase. Although iCalendar names are case insensitive, common practice is to keep them all uppercase following the actual definitions in <xref target='RFC5545'/>.</t>

      <t>Backslash escaping and line folding MUST be applied to the resulting iCalendar data as required by <xref target='RFC5545'/>.</t>

      <section title="Converting XML Extensions into iCalendar">
      <t>XML extensions are converted back to iCalendar in one of two ways, depending on whether the extensions are in the iCalendar XML namespace, or in an external namespace.</t>
      
      <t>Extensions that are part of the iCalendar XML namespace MUST have element names that being with "x-", and will be converted back to the equivalent extension property in iCalendar. For example, the "x-foo" element will convert to the "X-FOO" iCalendar property.</t>
      
      <t>Extensions that are in a namespace other than the iCalendar XML namespace SHOULD be preserved in the iCalendar representation using the XML iCalendar property described in <xref target="XMLprop"/>.</t>
      </section>
      
      <section title="The XML property for iCalendar" anchor="XMLprop">
        <t>This section describes an extension property for iCalendar, as covered in section 8.2.3 of <xref target='RFC5545'/>.</t>
        
        <t>Property name: XML</t>
        
        <t>Purpose: To embed XML-encoded calendar data in the iCalendar format.</t>
        
        <t>Value type: A single text value.</t>
        
        <t>Property parameters: VALUE, ENCODING.</t>
               
        <t>Conformance: The property can appear on any iCalendar component.</t>
        
        <t>Description: The value of this property is an XML element. The XML property MUST NOT be used to contain properties that are already defined in iCalendar, or properties that use the "X-" iCalendar extension property syntax. Since all elements in the urn:ietf:params:xml:ns:icalendar-2.0 namespace convert to a well-defined iCalendar object, the elements in this property MUST NOT be in the urn:ietf:params:xml:ns:icalendar-2.0 namespace. The XML element which is the value of this property MUST have an XML namespace declaration.</t>
        
        <t>Note that the source XML may contain characters not allowed in iCalendar such as control characters. If this is the case, then the XML data MUST be base64 encoded. As required by <xref target='RFC5545'/>, the ENCODING paramater MUST be present and set to "BASE64", and the VALUE parameter must be present and set to "BINARY".</t>

        <t>There can be more than one XML property present for a given iCalendar object. The ordering of XML properties is not preserved in the conversion between XML and iCalendar.</t>
        
        <t>Format definition: This property is defined by the following notation:</t>
        
        <t>xml = "XML:" text CRLF</t>
        
        <t>Example: The following is an example of an iCalendar event with a location embedded in KML markup inside the XML property.</t>
        
        <figure><artwork><![CDATA[
BEGIN:VCALENDAR 
CALSCALE:GREGORIAN 
PRODID:-//Example Inc.//Example Calendar//EN
VERSION:2.0 
BEGIN:VEVENT 
DTSTAMP:20080205T191224Z 
DTSTART:20081006 
SUMMARY:Planning meeting 
UID:4088E990AD89CB3DBB484909 
XML:<kml xmlns="http://www.opengis.net/kml/2.2">...</kml>
END:VEVENT 
END:VCALENDAR 
        ]]></artwork></figure>

      </section>
    </section>

    
    
	

    <section title='Security Considerations' anchor='security'>
      <t>For security considerations specific to calendar data, see Section 7 of <xref target='RFC5545'/>. Since this specification is a mapping from iCalendar, no new security concerns are introduced related to calendar data.</t>
	  
	  <t>The use of XML as a format does have security risks. Section 7 of <xref target='RFC3470'/> discusses these risks. See also the security disussion for the application/xml type in <xref target='RFC3023'/>.</t>
    </section>

    <section title='IANA Considerations'>
      <t>This document defines a new URN to identify a new XML namespace for iCalendar data. The URN conforms to a registry mechanism described in <xref target="RFC3688"/>.</t>
      <t>This document defines a new media type. The registration is in <xref target="MediaType"/>.</t>
      <t>This document defines a new property for iCalendar. The registration is in <xref target="XMLprop"/>.</t>
      <section title='Namespace Registration' anchor='ns.registration'>
        <t>Registration request for the iCalendar namespace: </t>
        <t>URI: urn:ietf:params:xml:ns:icalendar-2.0 </t>
        <t>Registrant Contact: See the "Authors' Addresses" section of this document.</t>
        <t>XML: None. Namespace URIs do not represent an XML specification.</t>
      </section>
      <section title="Media Type" anchor="MediaType">
        <t>This section defines the MIME media type for use with iCalendar in XML data.
        <list style="hanging">
          <t hangText="Type name:">application</t>
          <t hangText="Subtype name:">calendar+xml</t>
          <t hangText="Required parameters:">none</t>
          <t hangText="Optional parameters:">method, component and optinfo as defined for the text/calendar media type in <xref target='RFC5545'/>; charset as defined for application/xml in <xref target='RFC3023'/>; per <xref target='RFC3023'/>, use of charset is "STRONGLY RECOMMENDED"</t>
          <t hangText="Encoding considerations:">Same as encoding considerations of application/xml as specified in <xref target='RFC3023'/></t>
          <t hangText="Security considerations:">See <xref target='security'/>.</t>
          <t hangText="Interoperability considerations:">This media type provides an alternative format for iCalendar data based on XML.</t>
          <t hangText="Published specification:">This specification.</t>
          <t hangText="Applications which use this media type:">Applications that currently make use of the text/calendar media type can use this as an alternative.</t>
          <t hangText="Additional information:">
            <list style="hanging">
              <t hangText="Magic number(s):">None</t>
              <t hangText="File extension(s):">xcs</t>
              <t hangText="Macintosh file type code(s):">None specified.</t>
            </list>
          </t>
          <t hangText="Person & email address to contact for further information:">ietf-calsify@osafoundation.org</t>
          <t hangText="Intended usage:">COMMON</t>
          <t hangText="Restrictions on usage:">There are no restrictions on where this media type can be used.</t>
          <t hangText="Author:">See the "Author's Address" section of this document.</t>
          <t hangText="Change controller:">IETF</t>
        </list>
        </t>
      </section>
    </section>

    <section title='Acknowledgments'>
      <t>This specification originated from the work of the XML technical committee of the Calendaring and Scheduling Consortium.</t>
    </section>

  </middle>

  <back>

    <references title='Normative References'>
      &rfc2119;
      &rfc3023;
	  &rfc3470;
      &rfc3688;
 	  &rfc5545;
 	  &W3C.REC-xml-20081126;
 	</references>

    <section anchor="schema" title="Relax NG Schema">
      <t>Below is a Relax NG schema for iCalendar in XML. The schema is non-normative and given for reference only.</t>
	  
	  <t>This schema uses the compact notation of Relax NG. The numeric section numbers given in the comments refer to section in <xref target='RFC5545'/>. The ordering of elements follows the section ordering of <xref target='RFC5545'/>.</t>

      <t>The Relax NG compact notation "?" operator is used to indicate an unordered list of items. However, that operator, as defined, allows "mixing" each element that it operates on at any depth within the other elements, rather than just allowing "mixing" of siblings only. As a result, the schema provided allows certain constructs that are not allowed in iCalendar. Given that there is no sibling-only unordered list operator in RelaxNG, this is the best representation that can be given.</t>

      <figure><artwork><![CDATA[
# Relax NG Schema for iCalendar in XML

default namespace = "urn:ietf:params:xml:ns:icalendar-2.0"

# 3.2 Property Parameters

# 3.2.1 Alternate Text Representation

altrepparam = element altrep { value-uri }

# 3.2.2 Common Name

cnparam = element cn { text }

# 3.2.3 Calendar User Type

cutypeparam = element cutype {
    "INDIVIDUAL" |
    "GROUP" |
    "RESOURCE" |
    "ROOM" |
    "UNKNOWN"
}

# 3.2.4 Delegators

delfromparam = element delegated-from { value-cal-address+ }

# 3.2.5 Delegatees

deltoparam = element delegated-to { value-cal-address+ }

# 3.2.6 Directory Entry Reference

dirparam = element dir { value-uri }

# 3.2.7 Inline Encoding

encodingparam = element encoding {
    "8BIT" |
    "BASE64"
}


# 3.2.8 Format Type

fmttypeparam = element fmttype { text }

# 3.2.9 Free/Busy Time Type

fbtypeparam = element fbtype {
    "FREE" |
    "BUSY" |
    "BUSY-UNAVAILABLE" |
    "BUSY-TENTATIVE"
}

# 3.2.10 Language

languageparam = element language { text }

# 3.2.11 Group or List Membership

memberparam = element member { value-cal-address+ }

# 3.2.12 Participation Status

partstatparam = element partstat {
    type-partstat-event |
    type-partstat-todo |
    type-partstat-jour
}

type-partstat-event = (
    "NEEDS-ACTION" |
    "ACCEPTED" |
    "DECLINED" |
    "TENTATIVE" |
    "DELEGATED"
)

type-partstat-todo = (
    "NEEDS-ACTION" |
    "ACCEPTED" |
    "DECLINED" |
    "TENTATIVE" |
    "DELEGATED" |
    "COMPLETED" |
    "IN-PROCESS"
)

type-partstat-jour = (
    "NEEDS-ACTION" |
    "ACCEPTED" |
    "DECLINED"
)

# 3.2.13 Recurrence Identifier Range

rangeparam = element range {
    "THISANDFUTURE"
}

# 3.2.14 Alarm Trigger Relationship

trigrelparam = element related {
    "START" |
    "END"
}

# 3.2.15 Relationship Type

reltypeparam = element reltype {
    "PARENT" |
    "CHILD" |
    "SIBLING"
}

# 3.2.16 Participation Role

roleparam = element role {
    "CHAIR" |
    "REQ-PARTICIPANT" |
    "OPT-PARTICIPANT" |
    "NON-PARTICIPANT"
}

# 3.2.17 RSVP Expectation

rsvpparam = element rsvp {
    "TRUE" |
    "FALSE"
}

# 3.2.18 Sent By

sentbyparam = element sent-by { value-cal-address }

# 3.2.19 Time Zone Identifier

tzidparam = element tzid { text }

# 3.3 Property Value Data Types

# 3.3.1 BINARY

value-binary =  element binary { text }

# 3.3.2 BOOLEAN

value-boolean = element boolean {
    ("TRUE" | "FALSE")
}

# 3.3.3 CAL-ADDRESS

value-cal-address = element cal-address { text }

# 3.3.4 DATE

value-date = element date {
	text
}

# 3.3.5 DATE-TIME

value-date-time = element date-time {
	text
}

# 3.3.6 DURATION

value-duration = element duration {
	text
}

# 3.3.7 FLOAT

value-float = element float { text }

# 3.3.8 INTEGER

value-integer = element integer { text }

# 3.3.9 PERIOD

value-period = element period {
	text
}

# 3.3.10 RECUR

value-recur = element recur {
    type-freq,
    (type-until | type-count)?,
    element interval  { text }?,
    element bysecond  { text }*,
    element byminute  { text }*,
    element byhour    { text }*,
    type-byday*,
    type-bymonthday*,
    type-byyearday*,
    type-byweekno*,
    element bymonth   { text }*,
    type-bysetpos*,
    element wkst { type-weekday }?
}

type-freq = element freq {
    "SECONDLY" |
    "MINUTELY" |
    "HOURLY"   |
    "DAILY"    |
    "WEEKLY"   |
    "MONTHLY"  |
    "YEARLY"
}

type-until = element until {
    type-date |
    type-date-time
}

type-count = element count { text }

type-weekday = (
    "SU" |
    "MO" |
    "TU" |
    "WE" |
    "TH" |
    "FR" |
    "SA"
)

type-byday = element byday {
    text
}

type-bymonthday = element bymonthday {
    text
}

type-byyearday = element byyearday {
    text
}

type-byweekno = element byweekno {
    text
}

type-bysetpos = element bysetpos {
    text
}

# 3.3.11 TEXT

value-text = element text { text }

# 3.3.12 TIME

value-time = element time { text }

# 3.3.13 URI

value-uri = element uri { text }

# 3.3.14 UTC-OFFSET

value-utc-offset = element utc-offset { text }


# 3.4 iCalendar Stream

start = element icalendar { vcalendar+ }

# 3.6 Calendar Components

vcalendar = element vcalendar {
    type-calprops,
    type-component
}

type-calprops = element properties { 
    property-prodid &
    property-version &
    property-calscale? &
    property-method?
}

type-component = element components {
    (
        component-vevent |
        component-vtodo |
        component-vjournal |
        component-vfreebusy |
        component-vtimezone
    )*
}

# 3.6.1 Event Component

component-vevent = element vevent {
    type-eventprop,
    element components {
        component-valarm+
    }?
}

type-eventprop = element properties {
    property-dtstamp &
    property-dtstart &
    property-uid &

    property-class? &
    property-created? &
    property-description? &
    property-geo? &
    property-last-mod? &
    property-location? &
    property-organizer? &
    property-priority? &
    property-seq? &
    property-status-event? &
    property-summary? &
    property-transp? &
    property-url? &
    property-recurid? &

    property-rrule? &

    (property-dtend | property-duration)? &

    property-attach* &
    property-attendee* &
    property-categories* &
    property-comment* &
    property-contact* &
    property-exdate* &
    property-rstatus* &
    property-related* &
    property-resources* &
    property-rdate*
}

# 3.6.2 To-do Component

component-vtodo = element vtodo {
    type-todoprop,
    element components {
        component-valarm+
    }?
}

type-todoprop = element properties {
    property-dtstamp &
    property-uid &

    property-class? &
    property-completed? &
    property-created? &
    property-description? &
    property-geo? &
    property-last-mod? &
    property-location? &
    property-organizer? &
    property-percent? &
    property-priority? &
    property-recurid? &
    property-seq? &
    property-status-todo? &
    property-summary? &
    property-url? &

    property-rrule? &

    (
        (property-dtstart?, property-dtend? ) |
        (property-dtstart, property-duration)?
    ) &

    property-attach* &
    property-attendee* &
    property-categories* &
    property-comment* &
    property-contact* &
    property-exdate* &
    property-rstatus* &
    property-related* &
    property-resources* &
    property-rdate*
}

# 3.6.3 Journal Component

component-vjournal = element vjournal {
    type-jourprop
}

type-jourprop = element properties {
    property-dtstamp &
    property-uid &

    property-class? &
    property-created? &
    property-dtstart? &
    property-last-mod? &
    property-organizer? &
    property-recurid? &
    property-seq? &
    property-status-jour? &
    property-summary? &
    property-url? &

    property-rrule? &

    property-attach* &
    property-attendee* &
    property-categories* &
    property-comment* &
    property-contact* &
    property-description? &
    property-exdate* &
    property-related* &
    property-rdate* &
    property-rstatus*
}

# 3.6.4 Free/Busy Component

component-vfreebusy = element vfreebusy {
    type-fbprop
}

type-fbprop = element properties {
    property-dtstamp &
    property-uid &

    property-contact? &
    property-dtstart? &
    property-dtend? &
    property-duration? &
    property-organizer? &
    property-url? &

    property-attendee* &
    property-comment* &
    property-freebusy* &
    property-rstatus*
}

# 3.6.5 Time Zone Component

component-vtimezone = element vtimezone {
    element properties {
        property-tzid &
        
        property-last-mod? &
        property-tzuurl?
    },
    element components {
        (component-standard | component-daylight) &
        component-standard* &
        component-daylight*
    }
}

component-standard = element standard {
    type-tzprop
}

component-daylight = element daylight {
    type-tzprop
}

type-tzprop = element properties {
    property-dtstart &
    property-tzoffsetto &
    property-tzoffsetfrom &

    property-rrule? &

    property-comment* &
    property-rdate* &
    property-tzname*
}

# 3.6.6 Alarm Component

component-valarm = element valarm {
    audioprop | dispprop | emailprop
}

type-audioprop = element properties {
    property-action &
    property-trigger &

    (property-duration, property-repeat)? &

    property-attach?
}

type-dispprop = element properties {
    property-action &
    property-description &
    property-trigger &
    property-summary &
    
    property-attendee+ &

    (property-duration, property-repeat)? &
    
    property-attach*
}

type-emailprop = element properties {
    property-action &
    property-description &
    property-trigger &

    (property-duration, property-repeat)?
}

# 3.7 Calendar Properties

# 3.7.1 Calendar Scale

property-calscale = element calscale {

    element parameters { empty }?,

    element text { "GREGORIAN" }
}

# 3.7.2 Method

property-method = element method {

    element parameters { empty }?,

    value-text
}

# 3.7.3 Product Identifier

property-prodid = element prodid {

    element parameters { empty }?,

    value-text
}

# 3.7.4 Version

property-version = element version {

    element parameters { empty }?,

    value-text
}

# 3.8 Component Properties

# 3.8.1 Descriptive Component Properties

# 3.8.1.1 Attachment

property-attach = element attach {

    element parameters {
        fmttypeparam? &
        encodingparam?
    }?,

    value-uri | value-binary
}

# 3.8.1.2 Categories

property-categories = element categories {

    element parameters {
        languageparam? &
    }?,

    value-text+
}

# 3.8.1.3 Classification

property-class = element class {

    element parameters { empty }?,

    element text {
        "PUBLIC" |
        "PRIVATE" |
        "CONFIDENTIAL"
    }
}

# 3.8.1.4 Comment

property-comment = element comment {

    element parameters {
        altrepparam? &
        languageparam?
    }?,

    value-text
}

# 3.8.1.5 Description

property-description = element description {

    element parameters {
        altrepparam? &
        languageparam?
    }?,

    value-text
}

# 3.8.1.6 Geographic Position

property-geo = element geo {

    element parameters { empty }?,

    element value {
        element latitude  { text },
        element longitude { text }
    }
}

# 3.8.1.7 Location

property-location = element location {

    element parameters {
        altrepparam? &
        languageparam?
    }?,

    value-text
}

# 3.8.1.8 Percent Complete

property-percent = element percent-complete {

    element parameters { empty }?,

    value-integer
}

# 3.8.1.9 Priority

property-priority = element priority {

    element parameters { empty }?,

    value-integer
}

# 3.8.1.10 Resources

property-resources = element resources {

    element parameters {
        altrepparam? &
        languageparam?
    }?,

    value-text+
}

# 3.8.1.11 Status

property-status-event = element status {

    element parameters { empty }?,

    element text {
        "TENTATIVE" |
        "CONFIRMED" |
        "CANCELLED"
    }
}

property-status-todo = element status {

    element parameters { empty }?,

    element text {
        "NEEDS-ACTION" |
        "COMPLETED" |
        "IN-PROCESS" |
        "CANCELLED"
    }
}

property-status-jour = element status {

    element parameters { empty }?,

    element text {
        "DRAFT" |
        "FINAL" |
        "CANCELLED"
    }
}

# 3.8.1.12 Summary

property-summary = element summary {

    element parameters {
        altrepparam? &
        languageparam?
    }?,

    value-text
}

# 3.8.2 Date and Time Component Properties

# 3.8.2.1 Date/Time Completed

property-completed = element completed {

    element parameters { empty }?,

    value-date-time
}

# 3.8.2.2 Date/Time End

property-dtend = element dtend {

    element parameters { 
        tzidparam?
    }?,

    value-date-time |
    value-date
}

# 3.8.2.3 Date/Time Due

property-due = element due {

    element parameters { 
        tzidparam?
    }?,

    value-date-time |
    value-date
}

# 3.8.2.4 Date/Time Start

property-dtstart = element dtstart {

    element parameters { 
        tzidparam?
    }?,

    value-date-time |
    value-date
}

# 3.8.2.5 Duration

property-duration = element duration {

    element parameters { empty }?,

    value-duration
}

# 3.8.2.6 Free/Busy Time

property-freebusy = element freebusy {

    element parameters { 
        fbtypeparam?
    }?,


    value-period+
}

# 3.8.2.7 Time Transparency

property-transp = element transp {

    element parameters { empty }?,

    element text {
        "OPAQUE" |
        "TRANSPARENT"
    }
}

# 3.8.3 Time Zone Component Properties

# 3.8.3.1 Time Zone Identifier

property-tzid = element tzid {

    element parameters { empty }?,

    value-text
}

# 3.8.3.2 Time Zone Name

property-tzname = element tzname {

    element parameters {
        languageparam?
    }?,

    value-text
}

# 3.8.3.3 Time Zone Offset From

property-tzoffsetfrom = element tzoffsetfrom {

    element parameters { empty }?,

    value-utc-offset
}

# 3.8.3.4 Time Zone Offset To

property-tzoffsetto = element tzoffsetto {

    element parameters { empty }?,

    value-utc-offset
}

# 3.8.3.5 Time Zone URL

property-tzurl = element tzurl {

    element parameters { empty }?,

    value-uri
}

# 3.8.4 Relationship Component Properties

# 3.8.4.1 Attendee

property-attendee = element attendee {

    element parameters {
        cutypeparam? &
        memberparam? &
        roleparam? &
        partstatparam? &
        rsvpparam? &
        deltoparam? &
        delfromparam? &
        sentbyparam? &
        cnparam? &
        dirparam? &
        languageparam?
    }?,

    value-cal-address
}

# 3.8.4.2 Contact

property-contact = element contact {

    element parameters {
        altrepparam? &
        languageparam?
    }?,

    value-text
}

# 3.8.4.3 Organizer

property-organizer = element organizer {

    element parameters {
        cnparam? &
        dirparam? &
        sentbyparam? &
        languageparam?
    }?,

    value-cal-address
}

# 3.8.4.4 Recurrence ID

property-recurid = element recurrence-id {

    element parameters { 
        tzidparam? &
        rangeparam?
    }?,

    value-date-time |
    value-date
}

# 3.8.4.5 Related-To

property-related = element related-to {

    element parameters {
        reltypeparam?
    }?,

    value-text
}

# 3.8.4.6 Uniform Resource Locator

property-url = element url {

    element parameters { empty }?,

    value-uri
}

# 3.8.4.7 Unique Identifier

property-uid = element uid {

    element parameters { empty }?,

    value-text
}

# 3.8.5 Recurrence Component Properties

# 3.8.5.1 Exception Date/Times

property-exdate = element exdate {

    element parameters { 
        tzidparam?
    }?,

    value-date-time+ |
    value-date+
}

# 3.8.5.2 Recurrence Date/Times

property-rdate = element rdate {

    element parameters { 
        tzidparam?
    }?,

    value-date-time+ |
    value-date+ |
    value-period+
}

# 3.8.5.3 Recurrence Rule

property-rrule = element rrule {

    element parameters { empty }?,

    value-recur
}

# 3.8.6 Alarm Component Properties

# 3.8.6.1 Action

property-action = element action {

    element parameters { empty }?,

    element text {
        "AUDIO" |
        "DISPLAY" |
        "EMAIL"
    }
}

# 3.8.6.2 Repeat Count

property-repeat = element repeat {

    element parameters { empty }?,

    value-integer
}

# 3.8.6.3 Trigger

property-repeat = element repeat {

    (
        element parameters {
            trigrelparam?
        }?,
    
        value-duration
    ) |
    (
        element parameters { empty }?,
    
        value-date-time
    )
}

# 3.8.7 Change Management Component Properties

# 3.8.7.1 Date/Time Created

property-created = element created {

    element parameters { empty }?,

    value-date-time
}

# 3.8.7.2 Date/Time Stamp

property-dtstamp = element dtstamp {

    element parameters { empty }?,

    value-date-time
}

# 3.8.7.3 Last Modified

property-last-mod = element last-modified {

    element parameters { empty }?,

    value-date-time
}

# 3.8.7.4 Sequence Number

property-seq = element sequence {

    element parameters { empty }?,

    value-integer
}

# 3.8.8 Miscellaneous Component Properties

# 3.8.8.3 Request Status

property-rstatus = element request-status {

    element parameters {
        languageparam?
    }?,

    element value {
        element code { text },
        element description { text },
        element data { text }?
    }
}
      ]]></artwork></figure>
    </section>

    <section title="Examples">
      <t>This section contains two examples of iCalendar objects with their xCal representation.</t>

<section title="Example 1">
      <section title="iCalendar Data">
        <figure><artwork><![CDATA[
BEGIN:VCALENDAR 
CALSCALE:GREGORIAN 
PRODID:-//Example Inc.//Example Calendar//EN
VERSION:2.0 
BEGIN:VEVENT 
DTSTAMP:20080205T191224Z 
DTSTART:20081006 
SUMMARY:Planning meeting 
UID:4088E990AD89CB3DBB484909 
END:VEVENT 
END:VCALENDAR 
        ]]></artwork></figure>
      </section>

      <section title="XML Data">
        <figure><artwork><![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<icalendar xmlns="urn:ietf:params:xml:ns:icalendar-2.0">
 <vcalendar>
  <properties>
   <calscale><text>GREGORIAN</text></calscale>
   <prodid>
    <text>-//Example Inc.//Example Calendar//EN</text>
   </prodid>
   <version><text>2.0</text></version>
  </properties>
  <components>
   <vevent>
    <properties>
     <dtstamp><date-time>20080205T191224Z</date-time></dtstamp>
     <dtstart><date>20081006</date></dtstart>
     <summary>
      <text>Planning meeting</text>
     </summary>
     <uid>
      <text>4088E990AD89CB3DBB484909</text>
     </uid>
    </properties>
   </vevent>
  </components>
 </vcalendar>
</icalendar>
        ]]></artwork></figure>
      </section>
    </section>

    <section title="Example 2">

      <section title="iCalendar Data">
        <figure><artwork><![CDATA[
VERSION:2.0
PRODID:-//Example Corp.//Example Client//EN
BEGIN:VTIMEZONE
LAST-MODIFIED:20040110T032845Z
TZID:US/Eastern
BEGIN:DAYLIGHT
DTSTART:20000404T020000
RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4
TZNAME:EDT
TZOFFSETFROM:-0500
TZOFFSETTO:-0400
END:DAYLIGHT
BEGIN:STANDARD
DTSTART:20001026T020000
RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10
TZNAME:EST
TZOFFSETFROM:-0400
TZOFFSETTO:-0500
END:STANDARD
END:VTIMEZONE
BEGIN:VEVENT
DTSTAMP:20060206T001121Z
DTSTART;TZID=US/Eastern:20060102T120000
DURATION:PT1H
RRULE:FREQ=DAILY;COUNT=5
SUMMARY:Event #2
UID:00959BC664CA650E933C892C@example.com
END:VEVENT
BEGIN:VEVENT
DTSTAMP:20060206T001121Z
DTSTART;TZID=US/Eastern:20060104T140000
DURATION:PT1H
RECURRENCE-ID;TZID=US/Eastern:20060104T120000
SUMMARY:Event #2 bis
UID:00959BC664CA650E933C892C@example.com
END:VEVENT
END:VCALENDAR
        ]]></artwork></figure>
      </section>

      <section title="XML Data">
        <figure><artwork><![CDATA[
<?xml version="1.0" encoding="utf-8" ?>
<icalendar xmlns="urn:ietf:params:xml:ns:icalendar-2.0">
  <vcalendar>
    <properties>
      <prodid>
        <text>-//Example Inc.//Example Client//EN</text>
      </prodid>
      <version>
        <text>2.0</text>
      </version>
    </properties>
    <components>
      <vtimezone>
        <properties>
          <last-modified>
		    <date-time>20040110T032845Z</date-time>
          </last-modified>
          <tzid>US/Eastern</tzid>
        </properties>
        <components>
          <daylight>
            <properties>
              <dtstart>
                <date-time>20000404T020000</date-time>
              </dtstart>
              <rrule>
                <recur>
                  <freq>YEARLY</freq>
                  <byday>1SU</byday>
                  <bymonth>4</bymonth>
                </recur>
              </rrule>
              <tzname>
                <text>EDT</text>
              </tzname>
              <tzoffsetfrom>
                <utc-offset>-0500</utc-offset>
              </tzoffsetfrom>
              <tzoffsetto>
                <utc-offset>-0400</utc-offset>
              </tzoffsetto>
            </properties>
          </daylight>
          <standard>
            <properties>
              <dtstart>
			    <date-time>20001026T020000</date-time>
			  </dtstart>
              <rrule>
                <recur>
                  <freq>YEARLY</freq>
                  <byday>-1SU</byday>
                  <bymonth>10</bymonth>
                </recur>
              </rrule>
              <tzname>
                <text>EST</text>
              </tzname>
              <tzoffsetfrom>
                <utc-offset>-0400</utc-offset>
              </tzoffsetfrom>
              <tzoffsetto>
                <utc-offset>-0500</utc-offset>
              </tzoffsetto>
            </properties>
          </standard>
        </components>
      </vtimezone>
      <vevent>
        <properties>
          <dtstamp><date-time>20060206T001121Z<date-time></dtstamp>
          <dtstart>
            <parameters>
              <tzid>US/Eastern</tzid>
            </parameters>
            <date-time>20060102T120000</date-time>
          </dtstart>
          <duration>
            <duration>PT1H</duration>
          </duration>
          <rrule>
            <recur>
              <freq>DAILY</freq>
              <count>5</count>
            </recur>
          </rrule>
          <summary>
            <text>Event #2</text>
          </summary>
          <uid>
            <text>00959BC664CA650E933C892C@example.com</text>
          </uid>
        </properties>
      </vevent>
      <vevent>
        <properties>
          <dtstamp><date-time>20060206T001121Z</date-time></dtstamp>
          <dtstart>
            <parameters>
              <tzid>US/Eastern</tzid>
            </parameters>
            <date-time>20060104T140000</date-time>
          </dtstart>
          <duration>
            <duration>PT1H</duration>
          </duration>
          <recurrence-id>
            <parameters>
              <tzid>US/Eastern</tzid>
            </parameters>
            <date-time>20060104T120000</date-time>
          </recurrence-id>
          <summary>
            <text>Event #2 bis</text>
          </summary>
          <uid>
            <text>00959BC664CA650E933C892C@example.com</text>
          </uid>
        </properties>
      </vevent>
    </components>
  </vcalendar>
</icalendar>
        ]]></artwork></figure>
      </section>
    </section>
</section>


<section title='Change History (to be removed prior to publication as an RFC)'>

<t>Changes from -06:</t>
<list style='numbers'>
<t>Updated XML reference to latest version.</t>
<t>Corrected dtstamp elements in samples.</t>
<t>Removed empty informative references section.</t>
<t>Changed media type registration file extension to "xcs" (feedback from ietf-types)</t>
<t>Changed media type registration follow up email to ietf-calsify (feedback from ietf-types)</t>
<t>Updated several parts of the specification to show how future extensions to iCalendar can be handled without changing this specification (feedback from ietf-types)</t>
<t>Updated security concerns in section 5 (feedback from ietf-types)</t>
<t>Updated encoding considerations in section 5 (feedback from ietf-types)</t>
</list>

<t>Changes from -05:</t>
<list style='numbers'>
<t>Removed the ordwk and weekday elements from the byday element in a recurrence rule. The byday element
now takes a text value which is the same as the value used in <xref target='RFC5545'/>.</t>
<t>Added another example of an iCalendar object converted to xCal.</t>
<t>Fixed the MIME type registration (another instance of xml+calendar corrected to calendar+xml).</t>
</list>

<t>Changes from -04:</t>
<list style='numbers'>
<t>Added description to XML extension discussing how to handle binary data in XML.</t>
<t>Removed empty Appendix B.</t>
</list>

<t>Changes from -03:</t>
<list style='numbers'>
<t>Changed the proposed MIME type from xml+calendar to calendar+xml.</t>
<t>Fixed several references to sections of RFC5545.</t>
<t>Updated example in Appendix C.</t>
<t>Corrected the definition and grammar for TIME and UTC-OFFSET properties.</t>
</list>

<t>Changes from -02:</t>
<list style='numbers'>
<t>Removed the LINK extension and related sections. The concept will be addressed in a separate specification.</t>
<t>Various minor edits for clarity and consistency.</t>
</list>

<t>Changes from -01:</t>
<list style='numbers'>
<t>Added LINK extension to iCalendar and section discussing links in XML format.</t>
<t>Adopted "xCal" as the short name for the specification.</t>
</list>

<t>Changes from -00:</t>
<list style='numbers'>
<t>Changed 2445bis references to RFC5545.</t>
<t>Added a version number to the XML namespace for iCalendar.</t>
<t>Changed the values for the date, date-time, period, and duration elements to exactly match the values specified in RFC5545. Previously these were broken out into separate elements for day, month, year, etc.</t>
<t>Added specification for XML property in iCalendar.</t>
</list>

</section>
  </back>
</rfc>
