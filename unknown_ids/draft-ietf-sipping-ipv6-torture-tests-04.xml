<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "http://xml.resource.org/authoring/rfc2629.dtd" [
	<!ENTITY rfc3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
	<!ENTITY rfc4475 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4475.xml">
	<!ENTITY rfc3489 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3489.xml">
	<!ENTITY rfc3330 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3330.xml">
	<!ENTITY rfc1122 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1122.xml">
	<!ENTITY rfc4566 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml">
	<!ENTITY rfc2373 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2373.xml">
	<!ENTITY rfc4291 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4291.xml">
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes" ?>
<?rfc sortrefs="no" ?>
<rfc category="info" docName="DOCNAME" 
     ipr="full3978">

<front>
   <title abbrev="SIP IPv6 Torture Tests">
      Session Initiation Protocol (SIP) Torture Test Messages for
      Internet Protocol Version 6 (IPv6)
   </title>

<author initials="V.K" 
        surname="Gurbani" fullname="Vijay K. Gurbani">
   <organization>Bell Laboratories, Alcatel-Lucent</organization>
   <address>
      <postal>
         <street>2701 Lucent Lane</street>
         <street>Rm 9F-546</street>
         <city>Lisle</city>
         <region>IL</region>
         <code>60532</code>
         <country>USA</country>
      </postal>
      <phone>+1 630 224 0216</phone>
      <email>vkg@alcatel-lucent.com</email>
   </address>
</author>

<author initials='C' surname='Boulton' fullname='Chris Boulton'>
   <organization>Ubiquity Software Corporation</organization>
   <address>
      <postal>
      <street>Building 3</street>
      <street>West Fawr Lane</street>
      <street>St Mellons</street>
      <city>Cardiff</city>
      <region>South Wales</region>
      <code>CF3 5EA</code>
      </postal>
      <email>cboulton@ubiquitysoftware.com</email>
   </address>
</author>

<author initials="R" surname="Sparks" fullname="Robert J. Sparks">
 <organization>Estacado Systems</organization>
 <address>
  <email>RjS@estacado.net</email>
 </address>
</author>

<date year="2007"/> 

<area>Real-time Applications and Infrastructure</area>
<workgroup>SIPPING WG</workgroup>
<keyword>I-D</keyword>
<keyword>Internet-Draft</keyword>
<keyword>SIP IPv6 Torture Tests</keyword>

<abstract>
  <t>This document provides examples of Session Initiation Protocol (SIP) 
   test messages designed to exercise and "torture" the code of an IPv6-
   enabled SIP implementation.</t>

  <t>This work is being discussed on the sipping@ietf.org mailing list.</t>
</abstract> 
</front>

<middle>
 <section title="Overview" anchor="intro">

  <t>This document is informational, and is NOT NORMATIVE on any aspect of
  SIP.</t>

  <t>This document contains test messages based on the current version
  (2.0) of the Session Initiation Protocol as defined in 
  <xref target="RFC3261"/>.</t>

  <t>This document is expected to be used as a companion document to the more
  general SIP torture test document <xref target="RFC4475"/>, which
  does not include specific tests for IPv6 network identifiers.</t>

  <t>This document does not attempt to catalog every way to make an invalid
  message, nor does it attempt to be comprehensive in exploring unusual, but
  valid, messages.  Instead, it tries to focus on areas that may cause
  interoperability problems in IPv6 deployments.</t>

 </section> <!-- intro -->

 <section title="Document conventions" anchor="doc-conv">

  <t>This document contains many examples of SIP messages with IPv6
  network identifiers.  The appendix contains an encoded binary form 
  containing the bit-exact representation of all the messages and the 
  script needed to decode them into separate files.</t>

  <t>The IPv6 addresses used in this document correspond to the 2001:DB8::/32
  address prefix reserved for documentation <xref target="RFC3489"/>.
  Likewise, the IPv4 addresses used in this document correspond to the
  192.0.2.0/24 address block as described in <xref target="RFC3330"/>.</t>

  <t>Although SIP is a text-based protocol, some of these examples cannot 
  be unambiguously rendered without additional markup due to the constraints 
  placed on the formatting of RFCs.  This document uses the 
  &lt;allOneLine/&gt; markup convention established in 
  <xref target="RFC4475"/> to avoid ambiguity and meet the 
  Internet-Draft layout requirements.  For the sake of completeness, the 
  text defining this markup from Section 2.1 of <xref target="RFC4475"/> is 
  reproduced in its entirety below:</t>

  <t>"Several of these examples contain unfolded lines longer than 72
   characters.  These are captured between &lt;allOneLine/&gt; tags.  The
   single unfolded line is reconstructed by directly concatenating all
   lines appearing between the tags (discarding any line feeds or
   carriage returns).  There will be no whitespace at the end of lines.
   Any whitespace appearing at a fold-point will appear at the beginning
   of a line.</t>

   <t>"The following represent the same string of bits:</t>
   <t><list style="empty">
    <t>Header-name: first value, reallylongsecondvalue, third value</t>

    <t><figure><artwork><![CDATA[
      <allOneLine>
      Header-name: first value,
       reallylongsecondvalue
      , third value
      </allOneLine>

      <allOneLine>
      Header-name: first value,
       reallylong
      second
      value,
       third value
      </allOneLine>
    ]]></artwork></figure></t>

    <t>"Note that this is NOT SIP header-line folding, where different
    strings of bits have equivalent meaning."</t>
    </list></t>

 </section> <!-- doc-conv -->

 <section title="SIP and IPv6 network configuration" anchor="v6-transition">

  <t>System-level issues like deploying a dual-stack proxy server, populating
  DNS with A and AAAA Resource Records (RRs), zero-configuration discovery 
  of outbound proxies for IPv4 and IPv6 networks, when should a dual-stack 
  proxy Record-Route itself, and media issues also play a major part in the 
  transition to IPv6.  This document does not, however, address these 
  issues.  Instead, a companion document <xref target="ID.sip-trans"></xref> 
  provides more guidance on these issues.</t>

 </section> <!-- v6-transition -->

 <section title="Parser torture tests" anchor="par-tor-tes">

  <t>The test messages are organized into several sections.  Some stress
  only a SIP parser and others stress both the parser and the application above
  it.  Some messages are valid, and some are not.  Each example clearly calls
  out what makes any invalid messages incorrect.</t>

  <t>Please refer to the complete Augmented Backus-Naur Form (ABNF) 
  in <xref target="RFC3261"/> on representing IPv6 references in SIP
  messages.  IPv6 references are delimited by a "[" and "]".  When an 
  IPv6 reference is part of a SIP Uniform Resource Identifier (URI), 
  RFC3261 mandates that the "IPv6reference" production rule be used to 
  recognize tokens that comprise an IPv6 reference.  More specifically, 
  the ABNF states:</t>

  <figure><artwork><![CDATA[
    SIP-URI        =  "sip:" [ userinfo ] hostport
                      uri-parameters [ headers ]
    hostport       =  host [ ":" port ]
    host           =  hostname / IPv4address / IPv6reference
    IPv4address    =  1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT
    IPv6reference  =  "[" IPv6address "]"
    IPv6address    =  hexpart [ ":" IPv4address ]
    hexpart        =  hexseq / hexseq "::" [ hexseq ] / "::" [ hexseq ]
    hexseq         =  hex4 *( ":" hex4)
    hex4           =  1*4HEXDIG
  ]]></artwork></figure>

 <section title="Valid SIP message with an IPv6 reference">

  <t>The request below is well-formatted according to the grammar 
  in <xref target="RFC3261"/>.  An IPv6 reference appears in the 
  Request-URI (R-URI), Via header field, and Contact header field.</t>

  <t>Message Details: ipv6-good</t>
  <figure><artwork><![CDATA[
   REGISTER sip:[2001:db8::10] SIP/2.0
   To: sip:user@example.com
   From: sip:user@example.com;tag=81x2
   Via: SIP/2.0/UDP [2001:db8::9:1];branch=z9hG4bKas3-111
   Call-ID: SSG9559905523997077@hlau_4100
   Max-Forwards: 70
   Contact: "Caller" <sip:caller@[2001:db8::1]>
   CSeq: 98176 REGISTER
   Content-Length: 0

  ]]></artwork></figure>

 </section>

 <section title="Invalid SIP message with an IPv6 reference" 
          anchor="invalid-ipv6-reference">

  <t>The request below is not well-formatted according to the grammar 
  in <xref target="RFC3261"/>.  The IPv6 reference in the R-URI does 
  not contain the mandated delimiters for an IPv6 reference ("[" and "]").</t>

  <t>A SIP implementation receiving this request should respond with a 400 Bad
  Request error.</t>

  <t>Message Details: ipv6-bad</t>
  <figure><artwork><![CDATA[
   REGISTER sip:2001:db8::10 SIP/2.0
   To: sip:user@example.com
   From: sip:user@example.com;tag=81x2
   Via: SIP/2.0/UDP [2001:db8::9:1];branch=z9hG4bKas3-111
   Call-ID: SSG9559905523997077@hlau_4100
   Max-Forwards: 70
   Contact: "Caller" <sip:caller@[2001:db8::1]>
   CSeq: 98176 REGISTER
   Content-Length: 0

  ]]></artwork></figure>

 </section> <!-- invalid-ipv6-reference -->

 <section title="Port ambiguous in a SIP URI" anchor="port-ambiguous">

  <t>IPv6 uses the colon to delimit octets.  This may lead to ambiguity if the
  port number on which to contact a SIP server is inadvertently conflated
  with the IPv6 reference.  Consider the REGISTER request below.  The
  sender of the request intended to specify a port number (5070) to 
  contact a server, but inadvertently, inserts the port number inside the 
  closing "]" of the IPv6 reference.  Unfortunately, since the IPv6 
  address in the R-URI is compressed, the intended port number becomes 
  the last octet of the reference.</t>

  <t>From a parsing perspective, the request below is well-formed.
  However, from a semantic point of view, it will not yield the desired
  result.  Implementations must ensure that when a raw IPv6 address appears 
  in a SIP URI, then a port number, if required, appears outside the 
  closing "]" delimiting the IPv6 reference.  Raw IPv6 addresses can
  appear in the "sent-by" production rule of the Via header field, the 
  Contact header field, the Route and Record-Route headers, among other 
  headers.  Implementers are urged to consult the ABNF in 
  <xref target="RFC3261"/> for a complete list of fields where a SIP 
  URI can appear.</t>

  <t>Message Details: port-ambiguous</t>
  <figure><artwork><![CDATA[
   REGISTER sip:[2001:db8::10:5070] SIP/2.0
   To: sip:user@example.com
   From: sip:user@example.com;tag=81x2
   Via: SIP/2.0/UDP [2001:db8::9:1];branch=z9hG4bKas3-111
   Call-ID: SSG9559905523997077@hlau_4100
   Contact: "Caller" <sip:caller@[2001:db8::1]>
   Max-Forwards: 70
   CSeq: 98176 REGISTER
   Content-Length: 0

  ]]></artwork></figure>

 </section> <!-- reg-ambiguous -->

 <section title="Port unambiguous in a SIP URI" anchor="port-unambiguous">

  <t>In contrast to the example in <xref target="port-ambiguous"></xref>, the
  following REGISTER request leaves no ambiguity whatsoever on where the
  IPv6 address ends and the port number begins.  This REGISTER request is 
  well formatted per the grammar in <xref target="RFC3261"/>.</t>

  <t>Message Details: port-unambiguous</t>
  <figure><artwork><![CDATA[
   REGISTER sip:[2001:db8::10]:5070 SIP/2.0
   To: sip:user@example.com
   From: sip:user@example.com;tag=81x2
   Via: SIP/2.0/UDP [2001:db8::9:1];branch=z9hG4bKas3-111
   Call-ID: SSG9559905523997077@hlau_4100
   Contact: "Caller" <sip:caller@[2001:db8::1]>
   Max-Forwards: 70
   CSeq: 98176 REGISTER
   Content-Length: 0

  ]]></artwork></figure>

 </section> <!-- port-unambiguous -->

 <section title="IPv6 reference delimiters in Via header"
          anchor="ipv6-delim-in-via">

 <t>IPv6 references can also appear in Via header fields; more specifically in
 the "sent-by" production rule and the "via-received" production rule.  
 In the "sent-by" production rule, the sequence of octets comprising the
 IPv6 address is defined to appear as an "IPv6reference" non-terminal,
 thereby mandating the "[" and "]" delimiters.  However, this is not the
 case for the "via-received" non-terminal.  The "via-received" production
 rule is defined thusly: </t>

 <figure><artwork><![CDATA[
   via-received = "received" EQUAL (IPv4address / IPv6address)
 ]]></artwork></figure>

 <t>The "IPv6address" non-terminal is defined not to include the
 delimiting "[" and "]".  This has lead to the situation documented during
 the 18th SIP Interoperability Event <xref target="Email-SIPit"/>:</t>

 <t><list style="empty">
  <t>Those testing IPv6 made different assumptions about enclosing  literal
  v6 addresses in Vias in []. By the end of the event, most implementations
  were  accepting either. Its about 50/50 on what gets sent.</t>
 </list></t>

 <t>While it would be beneficial if the same non-terminal ("IPv6reference")
 was used for both the "sent-by" and "via-received" production rules, there
 has not been a consensus in the working group to that effect.  Thus,
 the best that can be suggested is that implementations must follow the
 <xref target="RFC1122">Robustness Principle</xref> and be liberal in 
 accepting a "received" parameter with or without the delimiting "[" 
 and "]" tokens.  When sending a request, implementations must not put 
 the delimiting "[" and "]" tokens.</t>

 <t>The two test cases below are designed to stress this behavior.
 A SIP implementation receiving either of these messages must parse them
 successfully.</t>

 <t>The request below contains an IPv6 address in the Via "received"
 parameter.  The IPv6 address is delimited by "[" and "]".  Even though this
 is not a valid request based on a strict interpretation of the grammar 
 in <xref target="RFC3261"/>, robust implementations must nonetheless be 
 able to parse the topmost Via header field and continue processing the 
 request.</t>

 <t>Message Details: via-received-param-with-delim</t>
 <figure><artwork><![CDATA[
  BYE sip:[2001:db8::10] SIP/2.0
  To: sip:user@example.com;tag=bd76ya
  From: sip:user@example.com;tag=81x2
  <allOneLine>
  Via: SIP/2.0/UDP [2001:db8::9:1];received=[2001:db8::9:255];
  branch=z9hG4bKas3-111
  </allOneLine>
  Call-ID: SSG9559905523997077@hlau_4100
  Max-Forwards: 70
  CSeq: 321 BYE
  Content-Length: 0

 ]]></artwork></figure>

 <t>The OPTIONS request below contains an IPv6 address in the Via "received"
 parameter without the adorning "[" and "]".  This request is valid according 
 to the grammar in <xref target="RFC3261"/>.</t>

 <t>Message Details: via-received-param-no-delim</t>
 <figure><artwork><![CDATA[
  OPTIONS sip:[2001:db8::10] SIP/2.0
  To: sip:user@example.com
  From: sip:user@example.com;tag=81x2
  <allOneLine>
  Via: SIP/2.0/UDP [2001:db8::9:1];received=2001:db8::9:255;
  branch=z9hG4bKas3
  </allOneLine>
  Call-ID: SSG95523997077@hlau_4100
  Max-Forwards: 70
  Contact: "Caller" <sip:caller@[2001:db8::9:1]>
  CSeq: 921 OPTIONS
  Content-Length: 0

 ]]></artwork></figure>

 </section> <!-- ipv6-delim-in-via -->

 <section title="SIP request with IPv6 addresses in Session Description
                 Protocol (SDP) body" anchor="ipv6-in-sdp">

 <t>This request below is valid and well-formed according to the 
 grammar in <xref target="RFC3261"/>.  Note that the IPv6 addresses in the SDP
 <xref target="RFC4566"/> body do not have the delimiting "[" and "]".</t>

 <t>Message Details: ipv6-in-sdp</t>
 <figure><artwork><![CDATA[
  INVITE sip:user@[2001:db8::10] SIP/2.0
  To: sip:user@[2001:db8::10]
  From: sip:user@example.com;tag=81x2
  Via: SIP/2.0/UDP [2001:db8::20];branch=z9hG4bKas3-111
  Call-ID: SSG9559905523997077@hlau_4100
  Contact: "Caller" <sip:caller@[2001:db8::20]>
  CSeq: 8612 INVITE
  Max-Forwards: 70 
  Content-Type: application/sdp
  Content-Length: 268

  v=0
  o=assistant 971731711378798081 0 IN IP6 2001:db8::20
  s=Live video feed for today's meeting
  c=IN IP6 2001:db8::20
  t=3338481189 3370017201
  m=audio 6000 RTP/AVP 2
  a=rtpmap:2 G726-32/8000
  m=video 6024 RTP/AVP 107
  a=rtpmap:107 H263-1998/90000
 ]]></artwork></figure>

 </section> <!-- ipv6-in-sdp -->

 <section title="Multiple IP addresses in SIP headers"
          anchor="mult-ip-in-header">

 <t>Th request below is valid and well-formed according to the grammar in
 <xref target="RFC3261"/>.  The Via list contains a mix of IPv4 addresses 
 and IPv6 references.</t>

 <t>Message Details: mult-ip-in-header</t>
 <figure><artwork><![CDATA[
  BYE sip:user@host.example.net SIP/2.0
  Via: SIP/2.0/UDP [2001:db8::9:1]:6050;branch=z9hG4bKas3-111
  Via: SIP/2.0/UDP 192.0.2.1;branch=z9hG4bKjhja8781hjuaij65144
  <allOneLine>
  Via: SIP/2.0/TCP [2001:db8::9:255];branch=z9hG4bK451jj;
  received=192.0.2.200
  </allOneLine>
  Call-ID: 997077@lau_4100
  Max-Forwards: 70 
  CSeq: 89187 BYE
  To: sip:user@example.net;tag=9817--94
  From: sip:user@example.com;tag=81x2
  Content-Length: 0

 ]]></artwork></figure>

</section> <!-- mult-ip-in-body -->

 <section title="Multiple IP addresses in SDP"
          anchor="mult-ip-in-sdp">

 <t>The request below is valid and well-formed according to the grammar
 in <xref target="RFC3261"/>.  The SDP contains multiple media lines, 
 and each media line is identified by a different network connection 
 address.</t>

 <t>Message Details: mult-ip-in-sdp</t>
 <figure><artwork><![CDATA[
  INVITE sip:user@[2001:db8::10] SIP/2.0
  To: sip:user@[2001:db8::10]
  From: sip:user@example.com;tag=81x2
  Via: SIP/2.0/UDP [2001:db8::9:1];branch=z9hG4bKas3-111
  Call-ID: SSG9559905523997077@hlau_4100
  Contact: "Caller" <sip:caller@[2001:db8::9:1]>
  Max-Forwards: 70
  CSeq: 8912 INVITE
  Content-Type: application/sdp
  Content-Length: 181

  v=0
  o=bob 280744730 28977631 IN IP4 host.example.com
  s=
  t=0 0
  m=audio 22334 RTP/AVP 0
  c=IN IP4 192.0.2.1
  m=video 6024 RTP/AVP 107
  c=IN IP6 2001:db8::1
  a=rtpmap:107 H263-1998/90000
 ]]></artwork></figure>

 </section> <!-- mult-ip-in-sdp -->

 <section title="IPv4-mapped IPv6 addresses" 
          anchor="IPv4-mapped-IPv6">
 
 <t>An IPv4-mapped IPv6 address is usually represented with the last 32-
  bits appearing as a dotted-decimal IPv4 address; e.g., ::ffff:192.0.2.1.
  A SIP implementation receiving a message that contains such a mapped address
  must be prepared to parse it successfully.  An IPv4-mapped IPv6
  address may appear in signaling, or the SDP carried by the signaling
  message, or in both.  If a port number is part of the URI represented
  by the IPv4-mapped IPv6 address, then it must appear outside the delimiting
  "]" (cf. <xref target="port-unambiguous"/>).</t>

  <t>The message below is well-formed according to the grammar in
  <xref target="RFC3261"/>.  The Via list contains two Via headers, both
  of which include an IPv4-mapped IPv6 address.  An IPv4-mapped IPv6 address 
  also appears in the Contact header and the SDP.  The topmost Via header 
  includes a port number that is appropriately delimited by "]".</t>

  <t>Message Details: ipv4-mapped-ipv6</t>
  <figure><artwork><![CDATA[
   INVITE sip:user@example.com SIP/2.0
   To: sip:user@example.com
   From: sip:user@east.example.com;tag=81x2
   Via: SIP/2.0/UDP [::ffff:192.0.2.10]:19823;branch=z9hG4bKbh19
   Via: SIP/2.0/UDP [::ffff:192.0.2.2];branch=z9hG4bKas3-111
   Call-ID: SSG9559905523997077@hlau_4100
   Contact: "T. desk phone" <sip:ted@[::ffff:192.0.2.2]>
   CSeq: 612 INVITE
   Max-Forwards: 70
   Content-Type: application/sdp
   Content-Length: 236

   v=0
   o=assistant 971731711378798081 0 IN IP6 ::ffff:192.0.2.2
   s=Call me soon, please!
   c=IN IP6 ::ffff:192.0.2.2
   t=3338481189 3370017201
   m=audio 6000 RTP/AVP 2
   a=rtpmap:2 G726-32/8000
   m=video 6024 RTP/AVP 107
   a=rtpmap:107 H263-1998/90000
  ]]></artwork></figure>
  
 </section> <!-- IPv4-mapped-IPv6 -->

 <section title="IPv6 reference bug in RFC3261 ABNF"
          anchor="ipv6-bug-abnf">

 <t>It is possible to follow the IPv6reference production rule of RFC3261
 ABNF -- the relevant portion of which is reproduced at the top of
 <xref target="par-tor-tes"/> -- and arrive at the following construct:</t>
 
 <t>[2001:db8:::192.0.2.1]</t>

 <t>Note the extra colon before the IPv4 address in the above construct.  
 The correct construct, of course, is:</t>

 <t>[2001:db8::192.0.2.1]</t>

 <t>The ABNF pertaining to IPv6 references in RFC3261 was derived from
 RFC 2373 <xref target="RFC2373"/>, which has been obsoleted by 
 RFC 4291 <xref target="RFC4291"/>.  The specific behavior
 of inserting an extra colon was inherited from RFC 2373, and has been
 remedied in RFC 4291.  However, following the <xref target="RFC1122">
 Robustness Principle</xref>, an implementation must tolerate both of
 the above constructs.</t>

 <t>The message below includes an extra colon in the IPv6 reference.
 A SIP implementation receiving such a message may exhibit robustness
 by successfully parsing the IPv6 reference (it can choose to delete the
 extra colon when parsing the IPv6 reference.)</t>

 <t>Message Details: ipv6-bug-abnf-3-colons</t>
 <figure><artwork><![CDATA[
  OPTIONS sip:user@[2001:db8:::192.0.2.1] SIP/2.0
  To: sip:user@[2001:db8:::192.0.2.1]
  From: sip:user@example.com;tag=810x2
  Via: SIP/2.0/UDP lab1.east.example.com;branch=z9hG4bKas3-111
  Call-ID: G9559905523997077@hlau_4100
  CSeq: 689 OPTIONS
  Max-Forwards: 70
  Content-Length: 0
 ]]></artwork></figure>

 <t>The next message has the correct syntax for the IPv6 reference in
 the R-URI.</t>

 <t>Message Details: ipv6-correct-abnf-2-colons</t>
 <figure><artwork><![CDATA[
  OPTIONS sip:user@[2001:db8::192.0.2.1] SIP/2.0
  To: sip:user@[2001:db8::192.0.2.1]
  From: sip:user@example.com;tag=810x2
  Via: SIP/2.0/UDP lab1.east.example.com;branch=z9hG4bKas3-111
  Call-ID: G9559905523997077@hlau_4100
  CSeq: 689 OPTIONS
  Max-Forwards: 70
  Content-Length: 0
 ]]></artwork></figure>

 </section> <!-- ipv6-abnf-bug -->

 </section> <!-- par-tor-tes -->

 <section title="Security considerations" anchor="sec-cons">

  <t>This document presents examples of SIP messages with IPv6 references 
  contained in the signaling headers and SDP payload.  While this document
  may clarify the behavior of SIP elements processing a message with
  IPv6 references, it does not normatively change the base SIP 
  <xref target="RFC3261"/> specification in any way.  Consequently, all 
  security considerations in <xref target="RFC3261"/> apply.</t>

  <t>Parsers must carefully consider edge conditions and malicious input as
  part of their design.  Attacks on many Internet systems use crafted input
  to cause implementations to behave in undesirable ways.  Many of the messages
  in this draft are designed to stress a parser implementation at points
  traditionally used for such attacks.  This document does not, however,
  attempt to be comprehensive.  It contains some common pitfalls that the
  authors have discovered while parsing IPv6 identifiers in SIP 
  implementations.</t>

 </section> <!-- sec-cons -->

 <section title="IANA considerations" anchor="iana">

  <t>This document does not contain any actions for IANA. </t> 

 </section> <!-- iana -->

 <section title="Acknowledgments">

  <t>The authors thank Jeroen van Bemmel, Dennis Bijwaard, Gonzalo
  Camarillo, Bob Gilligan, Alan Jeffrey, Larry Kollasch, Erik Nordmark, 
  Kumiko Ono, Pekka Pessi, Jon Peterson and other members of the SIP-
  related working groups for input provided during the construction 
  of the document and discussion of the test cases.</t>

  <t>A.B. Nataraju and A.C. Mahendran provided working group last call
  comments.</t>

  <t>Mohamed Boucadair and Brian Carpenter suggested new test cases
  for inclusion in the document.</t>

 </section> <!-- ack -->

</middle>

<back>
 <references title="Normative references">
   &rfc1122;
   &rfc3261;
   &rfc3330;
   &rfc3489;
   &rfc4475;
   &rfc4566;
 </references>
 <references title="Informative references">
  &rfc2373;
  &rfc4291;
  <reference anchor="ID.sip-trans">
   <front>
    <title>IPv6 Transition in the Session Initiation Protocol (SIP)</title>
    <author initials="G." surname="Camarillo"><organization/></author>
    <author initials="K." surname="El Malki"><organization/></author>
    <author initials="V." surname="Gurbani"><organization/></author>
    <date month="August" year="2007"/>
   </front>
   <seriesInfo name="Internet-Draft"
               value="draft-ietf-sipping-v6-transition-07.txt"/>
   <format type="TXT"
        target="http://www.ietf.org/internet-drafts/draft-ietf-sipping-v6-transition-07.txt"/>
 </reference>

 <reference anchor="Email-SIPit">
  <front>
   <title>preliminary report: SIPit 18</title>
   <author initials="R." surname="Sparks"><organization/></author>
   <date month="April" year="2006"/>
  </front>
  <seriesInfo name="Electronic Mail archived at"
     value="http://www1.ietf.org/mail-archive/web/sip/current/msg14103.html"/>
 </reference>

 </references>

 <section title="Bit-exact archive of each test message"
          anchor="appendix">

 <t>The following text block is an encoded, gzip compressed TAR archive of
 files that represent each of the example messages discussed in
 <xref target="par-tor-tes"/>.</t>

 <t>To recover the compressed archive file intact, the text of this document
 may be passed as input to the following Perl script (the output should be
 redirected to a file or piped to "tar -xzvf -").</t>

 <t><figure><artwork><![CDATA[
 #!/usr/bin/perl
 use strict;
 my $bdata = "";
 use MIME::Base64;
 while(<>) {
   if (/-- BEGIN MESSAGE ARCHIVE --/ .. /-- END MESSAGE ARCHIVE --/) {
        if ( m/^\s*[^\s]+\s*$/) {
            $bdata = $bdata . $_;
        }
   }
 }
 print decode_base64($bdata);
 ]]></artwork></figure></t>

 <t>Alternatively, the base-64 encoded block can be edited by hand to remove
 document structure lines and fed as input to any base-64 decoding utility.</t>

 <section title="Encoded reference messages">
 </section> 

  <t><figure><artwork><![CDATA[
  -- BEGIN MESSAGE ARCHIVE --
  H4sICPujD0cAA21zZy50YXIA7Vpbc6M2GPUzv0Ldl74UWzckIHUnbXY39XS760ncz
  HQ6mY5sFBuvDRSwN+mvrwAb303c2GQ34byAjYSEpHO+i1Rv1E4OCCnkEKorRJyl1+
  R2dk1RQ6oE4RhxRNT/CCHGa8bpu1arTaJYhKrJ6ef+3nJ+PJDhnufzD8ku+LidPB3
  qDTeYUn0sgkA6urpnx28DIggZpbvmHyFOF/NPWTL/FFFcg8fvyiZe+fy3Pt60Ou9A
  5Ab2JJLhubwX42Ak6z1/DK5b7QauQ63j21sLaO9Df7z8SERxfen5WSz6TRPdY+3GF
  fb8dY0/3rbBX7Z9p2AjS/1Tx3UEb9W9iclZNxReb9D81xpc0u5v3QGyimvj27VqIi
  K60hDtQoxGeuutqn19aRmGZUHDwMSyOOT8fDASk7+pWpvahe/Fohfb4E2nDhwZfQb
  BwPfkG/Bj8m2xdM43W/xJu7iW/9iAIQyyQdR+F/f6ez/8IkInsgHP3iu9WO88BNIG
  imIjtydi1/cakRPkTz9Irx8PbIAJ07RpE2p+U0SRq9alFwOLI06UKiLCTW6Z0EQAq
  vZAq83Aep+0qJl8MBhLEPm+9wNQ8yAi+Z3Wa+6qETcJISY1ETItQAhPGIoh0sZNMX
  FcHzC1lsFVp934+aYNsCaaYRworbAxuOSY6QQ3TFVCFZ+6jkyKY5oXV5ReVFA/wK+
  YqWmxLLNhJRzRnnvtV5jpP9O7wjldGwX6DyklSv8Z5AZEmPNE/7FBWKX/JeDq3WXr
  uvPuKlVxrEbedrqmreh6uPo/TvgXbVg2eqJubxXcTMiTN8hwpuC99Mf5Utso12/LV
  GsSzIdhQ5Sh9rJlasb/vu+fTgCK+W8s+I9pyn9OKv+vDKzwf5kg8LZSgFegADP+u5
  6uXNITtVEU/0GO5/zHkKX2X7m8vOJ/CViP/x4jAatlnqwCGB4tfCvgvGppTnrziHE
  bMw+L25Y7pGK2D+5Ugix+upPSAXd+CGLfEQ/fRyqUk7Hr9RcR3ErdKnqr8ETUG+PJ
  KNbdIDEBAymcvSL3/1Dk/6l1l+s/wjDN/xECK/0vAb/8uST+A38pgefJOJf/IifOZ
  tCAO0R8o26e81urMBwMhclNNBhOhDtkBqJ0tXLnYq1hbBjrpoMaaDg8C2VPKlV1mn
  mmKzETc2syMyB7nMjMRFjI5EAN0HYHWI1Pat8S91HXLfooO/jVOZcr/D+RC1jEf85
  Zzn+MMv9PWc6K/yXgK/D/nh4FPtoBtNKwbzffc5fwMA8QmWjuAXb9LsAm5JRyAtWd
  pRY3QZnnR8GKwCYRdNRUThwEMHfZMCZk4YTBueNHF6q5213b4iSiIh+u3gj8MNbFu
  Ov2J/4kOsUaK8z/GLn9R4Rl9l+NYMX/ErA7/2MbkH8bSaCDcj47yP9ak0Az/k+8Ey
  rAIfynGKX8p8So+F8C9uR/UwGo+P/S+T91hT6Pl/RAhGKse77uyJE7PlIbhfxni/1
  fg6X7Pwzzav+nDHxqd1qfPl4/3/ZPHqqvBfabkrAuB0fdDrKWN4QwArNxefFCsJX/
  X9x4cEQFKOQ/Xth/I4v/GcMV/8vAPP93IPdTgncdzh7EkWWgKMH35A3ilOJEUTzJ7
  L10ehdifv5r0tdF17vTid7zR7531CigmP/Z+W/MGUvPfSUygKvzX2Vg2f6vJ/cWp3
  OLE4FLZYsFAW5ThJHoovrGEeIC8u8NC7LzuaaVG/OdG70L+j/3fJSNGf97fqgUOM4
  0AB9ZAwr5j1jOf+UFpPZfSUDF/xKwj/8H0L9if4UKFSp8Y/gPJmWg1AA6AAA=
  -- END MESSAGE ARCHIVE --
  ]]></artwork></figure></t>
 </section> <!-- appendix -->

</back>
</rfc>

<!--  LocalWords:  xml DOCTYPE rfc stylesheet xsl href xslt toc symrefs docName
 -->
<!--  LocalWords:  iprnotified sortrefs DOCNAME ipr abbrev IPv Gurbani fullname
 -->
<!--  LocalWords:  Vijay Alcatel Rm Boulton Fawr Mellons EA Estacado workgroup
 -->
<!--  LocalWords:  WG xref interoperability doc conv RFCs lt allOneLine gt DNS
 -->
<!--  LocalWords:  markup reallylongsecondvalue CDATA reallylong AAAA RRs trans
 -->
<!--  LocalWords:  outbound tes Backus Naur ABNF userinfo hostport uri hostname
 -->
<!--  LocalWords:  hexpart hexseq HEXDIG ipv hG bKas SSG hlau CSeq octets reg
 -->
<!--  LocalWords:  conflated delim SIPit Vias param bd ya SDP sdp IP RTP AVP ip
 -->
<!--  LocalWords:  rtpmap mult bKjhja hjuaij bK jj lau addresse bKbh abnf IANA
 -->
<!--  LocalWords:  iana Jeroen Bemmel Bijwaard Gonzalo Camarillo Kollasch Ono
 -->
<!--  LocalWords:  Nordmark Kumiko Pekka Pessi Nataraju Mahendran Mohamed ack
 -->
<!--  LocalWords:  Boucadair Malki seriesInfo ietf
 -->
