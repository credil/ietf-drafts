<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
    <!ENTITY rfc3688 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml'>
    <!ENTITY rfc4741 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4741.xml'>
    <!ENTITY xmlspec PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml4/reference.W3C.REC-xml-20001006'>
    <!ENTITY yangspec PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-netmod-yang.xml'>
    <!ENTITY netconfspec PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-netconf-4741bis.xml'>

]>

<rfc 
   category="std" 
   docName="draft-ietf-netconf-with-defaults-05" 
   ipr="pre5378Trust200902">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc strict="yes"?>
<?rfc comments="no" ?>
<?rfc inline="no" ?>
<?rfc editing="no" ?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="no" ?>
<?rfc compact="yes"?>
<?rfc iprnotified="no"?>

 <front>
  <title abbrev="with-defaults">
   With-defaults capability for NETCONF
  </title>

  <author fullname="Andy Bierman" 
          initials="A.B."
          surname="Bierman">
   <organization>InterWorking Labs</organization>
   <address>
    <postal>
     <street>303 Potrero Street, Suite 52</street>
     <city>Santa Cruz</city>
     <region>CA</region>
     <code>95060-2760</code>
     <country>USA</country>
    </postal>
    <phone>+1 831 460 7010</phone>
    <email>andyb@iwl.com</email>
   </address>
  </author>
  
  <author fullname="Balazs Lengyel" initials="B. L."
   surname="Lengyel">
   <organization>Ericsson</organization>
   <address>
    <postal>
     <street></street>
     <city>Budapest</city>
     <region></region>
     <code></code>
     <country>Hungary</country>
    </postal>
    <email>balazs.lengyel@ericsson.com</email>
   </address>
  </author>
  
  <date />
  <area>OPS</area>
  <workgroup>NETCONF</workgroup>
  <keyword>with-defaults</keyword>
  <keyword>XML</keyword>
  <abstract>
   <t>
    The NETCONF protocol defines ways to read configuration data
    from a NETCONF server. Part of this data is not set by the NETCONF client, 
    but rather a default value is used. In many situations the 
    NETCONF client has a priori knowledge about default data, so the NETCONF 
    server does not need to send it to the client. In other situations the 
    NETCONF client will need this data as part of the NETCONF &lt;rpc-reply> messages. 
    This document defines a capability-based extension to 
    the NETCONF protocol that allows the NETCONF client to control whether 
    default values are part of NETCONF &lt;rpc-reply> messages or &lt;copy-config> output to the target URL.
   </t>
  </abstract>
 </front>

 <middle>
  <section title="Introduction">
   <t>
    The NETCONF protocol <xref target="RFC4741"/> defines ways to read configuration data
    from a NETCONF server. Part of this data is not set by the NETCONF client, 
    but rather a default value is used. In many situations the 
    NETCONF client has a priori knowledge about default data, so the NETCONF 
    server does not need to send it to the client. A priori knowledge can be 
    e.g., a document formally describing the data models supported by the NETCONF server. 
    <vspace blankLines="1"/>
    A networking device may have a large number of default values. 
    Often the default values are not interesting or specifically defined 
    with a "reasonable" value, so that the management user does not have to handle them.
    For these reasons it is quite common for networking devices to
    suppress the output of parameters having the default value.
    <vspace blankLines="1"/>
    However there are use-cases when a NETCONF client 
    will need the default data from the node:
    <vspace blankLines="1"/>
    <list style="symbols">
     <t>The management application often needs a single, definitive and complete set of configuration 
      values that determine how the a networking device works.</t>
     <t>Documentation about default values can be  unreliable or unavailable.</t>
     <t>Some management applications might not have the capabilities to 
      correctly parse and interpret formal data models.</t>
     <t>Human users might want to understand the received 
      data without consultation of the documentation.</t>
    </list>
    <vspace blankLines="1"/>
    In all these cases the NETCONF client will need default data as part of the NETCONF &lt;rpc-reply> messages. 
    <vspace blankLines="1"/>
    This document defines a capability-based extension to 
    the NETCONF protocol that allows the NETCONF client to control whether 
    default data is part of NETCONF &lt;rpc-reply> messages.
   </t>
  <section title="Terminology">
    <t>
     The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
     "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
     and "OPTIONAL" in this document are to be interpreted as
     described in <xref target="RFC2119"/>.
    </t>
    <t>
     <list style="hanging">
      <t hangText="Data model schema:">
       A document or set of documents describing the 
       data models supported by the NETCONF server.
      </t>
      <t hangText="Management Application:">
        A computer program running outside the NETCONF server  
        that configures or supervises the NETCONF server. 
        A management application can reach the device e.g. via the NETCONF, CLI or SNMP.
      </t>
      <t hangText="Default data:">
        Data specified in the data model schema as default, 
        that is set or used by the device whenever the NETCONF client or 
        other management application/user does not provide a specific 
        value for the relevant data item.             
        Default data MAY or MAY NOT be stored as part of a configuration datastore.
      </t>       
      <t hangText="Explicitly set data:">
        Data that is set to any value by a NETCONF client or 
        other management application by the way of an actual management operation,
        including any data model schema default value.
        Any value set by the NETCONF server which is not the schema defined default value
        is also considered explicitly set data.
       </t>
     </list>      
    </t>     
    <t>
     In addition the following terms are defined in RFC 4741 and are not redefined here:
     <list style="symbols">
      <t>client</t>
      <t>operation</t>
      <t>RPC</t>
      <t>RPC request</t>
      <t>RPC response</t>
      <t>server</t>
     </list>
    </t>     
  </section>
   <section title="Current handling of default data" anchor="basicHandling">
    <t>
     NETCONF does not define whether default data is part of the
     datastore/data model, or if it is meta-data that influences the
     behavior of the NETCONF server, but is not actually part of
     the datastore.  This document is intended to support either
     type of implementation, without deciding which approach is better.      
     <vspace blankLines="1"/>
     As a consequence of this approach,  
     NETCONF servers that do not implement the :with-defaults capability may or may not 
     return default data. 
     <vspace blankLines="1"/>
     Different NETCONF servers report default data in different ways. This 
     document specifies the following three basic modes:
     <vspace blankLines="1"/>
     <list style="hanging">
      <t hangText="report-all:">
        All default data is always reported.
      </t>
      <t hangText="trim:">
        Values are not reported if they match the default value (as
        specified in the data model schema).
      </t>
      <t hangText="explicit:">
        Report only values that match the definition of explicitly set data.
      </t>
     </list>  
    </t>
   </section>   
  </section>
  <section title="With-defaults Capability">
   <section title="Overview"><t>
    The :with-defaults capability indicates that the NETCONF server makes it possible 
    for the NETCONF client to control whether default data is part of NETCONF 
    &lt;rpc-reply> messages. The capability affects both 
    configuration and state data (while acknowledging that the usage of default 
    values for state data is less prevalent). 
    Sending of default data is controlled for each individual operation separately. 
    <vspace blankLines="1"/>
    A NETCONF server implementing the :with-defaults capability MUST indicate 
    its basic behavior, whether it sends default data in 
    the absence of any specific request from the NETCONF client; and MUST support the 
    'report-all' handling mode and MAY support other modes.  
    <vspace blankLines="1"/>
    A server indicating 'explicit' either in the basic or the also-supported parameter 
    MUST be able to differentiate between normal default data and explicitly set data.
   </t>
   </section>
   <section title="Dependencies"><t>None</t></section>
   <section title="Conformance">
     <t>Every NETCONF server SHOULD implement this capability.</t>
   </section>
   <section title="Capability Identifier" anchor="capabilityIdChapter">
    <t>
     urn:ietf:params:netconf:capability:with-defaults:1.0
     <vspace blankLines="1"/>
     The identifier MUST have a parameter: "basic-mode". This indicates how 
     the server reports default data in &lt;rpc-reply> messages, in the case the 
     client does not specify the required behavior in the &lt;rpc> request.
     The allowed values of this parameter are 
     report-all, trim, explicit as listed in <xref target="basicHandling"/>. 
    </t>
    <t>
     The identifier MAY have another parameter: "also-supported". This parameter 
     indicates which additional default handling modes the server supports. 
     The value of the parameter is a comma separated list of one or two modes 
     that are supported beside the mode indicated in the basic parameter.
     Possible modes are taken from the list in <xref target="basicHandling"/>.
    </t>
    <t>
      In addition to these parameters, the identifier MUST have the YANG 'module' 
      and 'revision' parameters if the ietf-with-defaults YANG module is supported,
      as defined in section 5.6.4 of <xref target="I-D.ietf-netmod-yang" />.
    </t>
    <t>Example:
     <vspace blankLines="1"/>
     urn:ietf:params:netconf:capability:with-defaults:1.0?module=ietf-netconf-with-defaults&amp;revision=2010-03-05&amp;basic-mode=report-all    
     <vspace blankLines="1"/>
     urn:ietf:params:netconf:capability:with-defaults:1.0?module=ietf-netconf-with-defaults&amp;revision=2010-03-05&amp;basic-mode=report-all&amp;also-supported=trim,explicit    
    </t>
   </section>
   <section title="New Operations">
     <t>None</t>
   </section>  
   <section title="Modifications to Existing Operations">
    <t>
     A new &lt;with-defaults> XML <xref target="W3C.REC-xml-20001006" /> 
     child element is added to the method-name element. 
     This is the element that indicates the type of the 
      operation e.g. &lt;get>, &lt;get-config> or &lt;copy-config>.
      If the  &lt;with-defaults> element is present, it controls the 
      reporting of default data. The server MUST return 
      default data in the NETCONF &lt;rpc-reply> messages according to the value of the element.
     </t>
     <t>
      Allowed values of the with-defaults element are taken from 
      the list in <xref target="basicHandling"/>. The allowed values are 
      restricted to the values that the device indicates 
      support for in the with-defaults capability in the basic and also-supported parameters.   
     </t>
     <t>
      If an unsupported value is used, the NETCONF server SHALL 
      return an &lt;rpc-reply> with an &lt;rpc-error> element. 
      The &lt;error-tag> SHALL be 'operation-not-supported', and
      the &lt;error-app-tag> SHALL be 'with-defaults-mode-not-supported'.
     </t>
     <t>
      If the &lt;with-defaults> element is not present, 
      the server follows its basic behavior as indicated 
      by the capability identifier's parameter see <xref target="capabilityIdChapter"/>.
     </t>
    <t>    
     Affected operations:
     <list style="symbols">
      <t>&lt;get></t>
      <t>&lt;get-config></t>
      <t>&lt;copy-config></t>
     </list>
     <vspace blankLines="1"/>
     &lt;copy-config> is only affected if the target of the operation is a URL. 
     If the target is a NETCONF datastore (running, candidate or startup) the capability has no effect; 
     the with-defaults parameter, if present, SHALL be silently ignored.
     <vspace blankLines="1"/>
     Other operations that return configuration data SHOULD also handle default 
     data according to the rules set in this document, and explicitly state this in their documentation. 
     If this is not specified in the document defining the respective operation, 
     the default handling rules described herein do not affect these operations.
    </t>
    <t>
     The following example shows a &lt;get-config&gt; operation
     which is using the 'with-defaults' element.
     The client is retrieving the 'interfaces' object,
     defined in the example.com data model.
     (In this simple example, the 'name' field is defined
     as the key, and the 'mtu' field is the only other
     data in the &lt;interface&gt; element).
     The default value of mtu is  '1500'. The basic default handling for the server is "trim".
     As the 'with-defaults'
     element has the value 'report-all', the mtu is returned not just for eth0 but also for eth1.
    </t>   
    <t>
     <figure anchor="with_defaults_example">
      <artwork>
       <![CDATA[
    <rpc message-id="102"
         xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
      <get-config>
        <source>
           <running/>
        </source>
        <filter type="subtree">
          <interfaces xmlns="http://example.com/interfaces/1.2"/>
        </filter>
        <with-defaults 
          xmlns="urn:ietf:params:netconf:capability:with-defaults:1.0">
          report-all
        </with-defaults>
      </get-config>
    </rpc>
 
    <rpc-reply message-id="102" 
         xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
      <data>
        <interfaces xmlns="http://example.com/interfaces/1.2">
          <interface>
            <name>eth0</name>
            <mtu>8192</mtu>
          </interface>
          <interface>
            <name>eth1</name>
            <mtu>1500</mtu>
          </interface>
        </interfaces>
      </data>
    </rpc-reply>
 ]]>
      </artwork>
     </figure>
    </t>
   </section>
   <section title="Interactions with Other Capabilities"><t>None</t></section>  
  </section>

  <section title="YANG Module">
   <t>
     The following YANG module defines the addition of the with-defaults element 
     to the &lt;get>,  &lt;get-config> and &lt;copy-config> operations. 
     The YANG language is defined in <xref target="I-D.ietf-netmod-yang"/>.
     The above operations are defined in YANG in <xref target="I-D.ietf-netconf-4741bis"/>.
     Every NETCONF server SHOULD implement this YANG module.
   </t>
   <t>
-- RFC Ed.: Insert license information for code as appropriate
   </t>
   <t>
    <figure>
     <artwork><![CDATA[

<CODE BEGINS> file="ietf-netconf-with-defaults.yang"

module ietf-netconf-with-defaults {

   namespace "urn:ietf:params:netconf:capability:with-defaults:1.0";

   prefix nwd;

   import ietf-netconf { prefix nc; }

   organization
    "IETF NETCONF (Network Configuration Protocol) Working Group";

   contact
    "WG Web:   <http://tools.ietf.org/wg/netconf/>
     WG List:  <mailto:netconf@ietf.org>

     WG Chair: Bert Wijnen
               <mailto:bertietf@bwijnen.net>

     WG Chair: Mehmet Ersue
               <mailto:mehmet.ersue@nsn.com>

     Editor: Andy Bierman
             <mailto:andyb@iwl.com>

     Editor: Balazs Lengyel
             <mailto:balazs.lengyel@ericsson.com>";

   description
    "This module defines a capability-based extension to the 
     NETCONF protocol that allows the NETCONF client to control
     whether default values are part of NETCONF 
     <rpc-reply> messages or <copy-config> output to the target URL.


     Copyright (c) 2010 IETF Trust and the persons identified as
     the document authors.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";
   // RFC Ed.: replace XXXX with actual RFC number and remove this note

   // RFC Ed.: remove this note
   // Note: extracted from draft-ietf-netmod-with-defaults-05.txt

   revision 2010-03-05 {
     description
       "Initial version.";
     reference
      "RFC XXXX: With-defaults capability for NETCONF";
   }
   // RFC Ed.: replace XXXX with actual RFC number and remove this note
   
   typedef with-defaults-mode {
      description 
        "Possible modes to report default data in 
         rpc-reply messages.";
      type enumeration {
         enum report-all {
             description 
               "All default data is always reported.";
         }
         enum trim {
             description 
               "Values are not reported if they match the default.";
         }
         enum explicit {
             description 
               "Report values that match the definition of 
                explicitly set data.";
         }
     }      
   }

   grouping with-defaults-parameters {
     leaf with-defaults {
       description
         "The explicit defaults processing mode requested.";
       type with-defaults-mode;
     }
   }

   // extending the get-config operation
   augment /nc:get-config/nc:input {
       uses with-defaults-parameters;
   }

   // extending the get operation
   augment /nc:get/nc:input {
       uses with-defaults-parameters;
   }

   // extending the copy-config operation
   augment /nc:copy-config/nc:input {
       uses with-defaults-parameters;
   }

}

<CODE ENDS>
                    ]]></artwork>
    </figure>
    <vspace blankLines="1"/>
   </t>   
  </section>

  <section anchor="IANA" title="IANA Considerations">
   <t>This document registers one capability identifier URN from the 
    'Network Configuration Protocol <xref target="RFC4741"/> Capability URNs' registry, 
    and registers the same URN for the NETCONF XML namespace in 
    the "IETF XML registry" <xref target="RFC3688"></xref>. 
    Note that the capability URN is compliant to <xref target="RFC4741"></xref> section 10.3.</t>
   <texttable>
    <ttcol  align="left" width="20%">Index</ttcol>
    <ttcol align="left">Capability Identifier</ttcol>
    <c>:with-defaults</c>
    <c>urn:ietf:params:netconf:capability:with-defaults:1.0</c>
   </texttable>
  </section>
  <section anchor="Security" title="Security Considerations">
   <t>
    This document defines a minor extension to existing
    NETCONF protocol operations. It does not introduce
    any new or increased security risks into the management system.
   </t>
   <t>
    The 'with-defaults' capability
    gives client control over the retrieval of particular
    types of XML data from a configuration database.
    They only suppress data that can already be retrieved
    with the standard protocol operations, and do not
    add any data to the configuration database.
   </t>
  </section>  

  <section title="Acknowledgements">
   <t>Thanks to Martin Bjorklund, Sharon Chisholm, Phil Shafer, Juergen Schoenwaelder, Washam Fan and 
    many other members of the NETCONF WG for providing important input to this document.</t>
  </section>
 </middle>

 <back>
  <references title="Normative References">
    &rfc2119;
    &rfc3688;
    &rfc4741;
    &netconfspec;
    &yangspec;
    &xmlspec;
  </references>

  <section title="Open Issues">
    <t>
      This section will be removed.  The open issues are closed in this
      revision of the draft, pending working group approval.
    </t>
    <t>
     Is the definition of defaults OK?  
     [The definition of explicitly set default data has been changed
      to 'explicitly set data', and now aligns with the YANG definition.]
    </t>
   <t>Shall we wait for YANG and 4741bis and make the YANG normative? [Yes.]</t>
   <t>Shall we make with-defaults mandatory?
      [No. It is SHOULD, not MUST.]
   </t>
  </section>


  <section title="Change Log"> 
    <t>
      -- RFC Ed.: remove this section before publication.
    </t>
    <section title="-00">
      <t>Created from draft-bierman-netconf-with-defaults-01.txt</t>
      <t>
        It was decided by the NETCONF mailing list, that with-defaults should be a 
        sub-element of each affected operation. 
        While this violates the XSD of RFC4741 this is acceptable and follows 
        the ideas behind NETCONF and YANG.
        <vspace blankLines="1"/>
        Hopefully it will be clarified in the 4741bis RFC whether such extensions are allowed.
      </t>
    </section>
    <section title="00-01">
      <t>Changed value set of with-default capability and element</t>
      <t>Added version to URI</t>
    </section>
    <section title="01-02">
      <t>report-all made mandatory</t>
      <t>Placeholder for YAM added, XSD will be removed when 4741 provides the NETCONF YAM</t>
      <t>with-defaults is valid for state data as well 
        (if state data has a defined default which might not be so frequent).
        The definition of explicit was modified for state data.
      </t>
    </section>
    <section title="02-03">
      <t>Clarifications</t>
      <t>YAM added</t>
      <t>Use the same URN for the capability and the XML namespace to 
        accommodate YANG, and avoid two separate URN/URIs being advertised 
        in the HELLO message, for such a small function.</t>
    </section>
    <section title="03-04">
      <t>Clarifications</t>
      <t>Added non-netconf interfaces to the definition of explicitly set default data</t>
    </section>
    <section title="04-05">
      <t>Updated I-D and YANG module boiler-plate.</t>
      <t>Removed redundant 'with-defaults' YANG feature.</t>
      <t>Changed definition of 'explicit' mode to match the YANG definition</t>
      <t>Removed XSD because the YANG is normative and the XSD is unconstrained,
        and does not properly extend the 3 affected NETCONF operations.
      </t>
      <t>Made the YANG module a normative section instead of non-normative appendix.</t>
      <t>Changed YANG from an informative to a normative reference,</t>
      <t>Changed 4741bis from an informative to a normative reference because the YANG
         module imports the ietf-netconf module in order to augment some RPC operations.</t>
      <t>Updated capability requirements to include YANG module capability parameters.</t>
      <t>Added a description statement to the with-defaults leaf definition.</t>
      <t>Update open issues section; ready to close all open issues.</t>
    </section>
  </section>
 </back>
</rfc>

