<?xml version="1.0"?>
<?rfc toc="yes"?>
<rfc ipr="trust200902" docName="draft-ietf-dhc-leasequery-by-remote-id-06.txt">
<front>
<title abbrev="Query by Remote ID">
DHCPv4 Leasequery by Relay Agent Remote ID
</title>

<author initials='P' fullname="Pavan Kurapati" surname="Kurapati">
<organization>Juniper Networks Ltd.</organization>
<address>
<postal>
<street>Embassy Prime Buildings, C.V.Raman Nagar</street>
<city>Bangalore</city> <code>560 093</code>
<country>India</country>
<phone>+91 80 41904709</phone>
</postal>
<uri>http://www.juniper.net/</uri>
<email>kurapati@juniper.net</email>
</address>
</author>

<author initials='R' fullname="D.T.V Ramakrishna Rao" surname="Desetti">
<organization>Infosys Technologies Ltd.</organization>
<address>
<postal>
<street>44 Electronics City, Hosur Road</street>
<city>Bangalore</city> <code>560 100</code>
<country>India</country>
<phone>+91 80 28520261</phone>
</postal>
<uri>http://www.infosys.com/</uri>
<email>ramakrishnadtv@infosys.com</email>
</address>
</author>

<author initials='B' fullname="Bharat Joshi" surname="Joshi">
<organization>Infosys Technologies Ltd.</organization>
<address>
<postal>
<street>44 Electronics City, Hosur Road</street>
<city>Bangalore</city> <code>560 100</code>
<country>India</country>
<phone>+91 80 28520261</phone>
</postal>
<uri>http://www.infosys.com/</uri>
<email>bharat_joshi@infosys.com</email>
</address>
</author>

<date year="2010"/>
<area></area>
<workgroup>DHC Working Group</workgroup>
<keyword>DHCP</keyword>
<abstract>
<t>
	Some Relay Agents extract lease information from the DHCP messages
   exchanged between the client and DHCP server.  This lease information
   is used by relay agents for various purposes like antispoofing and
   prevention of flooding.  RFC 4388 defines a mechanism for relay
   agents to retrieve the lease information from the DHCP server as and
   when this information is lost.  The existing leasequery mechanism is
   data driven, which means that a relay agent can initiate the
   leasequery only when it starts receiving data from/to the clients.
   In certain scenarios, this model is not scalable.  This document
   first looks at issues in existing mechanism and then proposes a new
   query type, query by Remote ID, to address these issues.

</t>
</abstract>
</front>

<middle>
<section title="Introduction">
<t>
   DHCP relay agents snoop DHCP messages and append a relay agent
   information option before relaying them to the configured DHCP
   Server.  In this process, some relay agents also glean the lease
   information sent by the server and maintain this locally.  This
   information is used to prevent spoofing attempts from clients and
   also sometimes to install routing information.  When a relay agent
   reboots, this information is lost.  RFC 4388 <xref target='RFC4388'/> has defined a
   mechanism to retrieve this lease information from the DHCP server.
   The existing query types defined by RFC 4388 <xref target='RFC4388'/> are data-
   driven.  When a client sends data upstream, the relay agent can query
   the server about the related lease information, based on the source
   MAC/IP address.  These mechanisms do not scale well when there are
   thousands of clients connected to the relay agent.  In the data-
   driven model, DHCP Leasequery does not provide the full, consolidated
   active Lease informations associated with a given connection/circuit
   which will result in inefficient anti-spoofing.  The relay agent also
   has to contend with considerable resources for negative caching
   specially under spoofing attacks.

</t>
<t>
   We need a mechanism for a relay agent to retrieve the consolidated
   lease information for a given connection/circuit before upstream
   traffic is sent by the clients. 
</t>
<figure anchor="DSLAM as Relay Agent">
<artwork>
           +--------+     
           |  DHCP  |     +--------------+
           | Server |-...-|    DSLAM     |
           |        |     |  Relay Agent |
           +--------+     +--------------+
                             |        |
                         +------+   +------+
                         |Modem1|   |Modem2|
                         +------+   +------+
                            |        |    |
                         +-----+  +-----+ +-----+
                         |Host1|  |Host2| |Host3|
                         +-----+  +-----+ +-----+
</artwork>
</figure>
<t>
   For example, when a DSLAM acting as a Relay Agent is rebooted, it
   should query the server for the lease information for all the
   connections/circuits.  Also, as shown in the above figure, there
   could be multiple clients on one DSL circuit.  The relay agent should
   get the lease information of all the clients connected to a DSL
   circuit.  This is possible by introducing a new query type based on
   the Remote ID sub-option of the Relay Agent Information option. This
   document talks about the motivation for the new query type and the
   method to perform it.
</t>
</section>

<section title="Terminology">
<t>
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 <xref target='RFC2119'/>.
</t>

<t>
   This document uses the following terms:
</t>

<list style="symbols">
<t>
         "Access Concentrator"
</t>
</list>
<t>
          An access concentrator is a router or switch at the broadband
          access provider's edge of a public broadband access network.
          This document assumes that the access concentrator includes
          the DHCP relay agent functionality.
</t>

<list style="symbols">
<t>
        "DHCP client"
</t>
</list>
<t>
          A DHCP client is an Internet host using DHCP to obtain
          configuration parameters such as a network address.
</t>

<list style="symbols">
<t>
         "DHCP relay agent"
</t>
</list>
<t>

          A DHCP relay agent is a third-party agent that transfers
          Bootstrap Protocol (BOOTP) and DHCP messages between clients
          and servers residing on different subnets, per RFC 951 <xref target='RFC951'/>
		  and RFC 1542 <xref target='RFC1542'/>.
</t>
<list style="symbols">
<t>
         "DHCP server"
</t>
</list>
<t>

          A DHCP server is an Internet host that returns configuration
          parameters to DHCP clients.
</t>

<list style="symbols">
<t>
	"Fast path"
</t>
</list>
<t>
	Data transfer which happens through Network Processor or an ASIC which 
	are programmed to forward the data at very high speeds.
</t>

<list style="symbols">
<t>
	"Gleaning"
</t>
</list>

<t>
     Gleaning is the extraction of location information from DHCP
     messages, as the messages are forwarded by the DHCP relay agent
     function.
</t>

<list style="symbols">
<t>

        "Location information"
</t>
</list>
<t>
          Location information is information needed by the access
          concentrator to forward traffic to a broadband-accessible
          host.  This information includes knowledge of the host
          hardware address, the port or virtual circuit that leads to
          the host, and/or the hardware address of the intervening
          subscriber modem.
</t>

<list style="symbols">
<t>
         "MAC address"
</t>
</list>
<t>

          In the context of a DHCP packet, a MAC address consists of the
          following fields: hardware type "htype", hardware length
          "hlen", and client hardware address "chaddr".
</t>

<list style="symbols">
<t>
	"Slow path"
</t>
</list>
<t>
	Data transfer which happens through the control plane. Typically this 
	has very limited buffers to store data and the speeds are very low 
	compared to fast path data transfer.
</t>
<list style="symbols">
<t>

         "Upstream"
</t>
</list>
<t>
          Upstream is the direction from the broadband subscriber
          towards the access concentrator.
</t>
</section>

<section title="Motivation">
<t>
   Consider a typical access concentrator (e.g., DSLAM) working also as
   a DHCP relay agent.  A "Fast path" and a "slow path" generally exist
   in most networking boxes.  Fast path processing is done in a network
   processor or an ASIC (Application Specific Integrated Circuit).  Slow
   path processing is done in a normal processor.  As much as possible,
   regular data forwarding should be done in the fast path.  Slow path
   processing should be reduced as it may become a bottleneck.
</t>
<t>
   For an access concentrator having multiple access ports, multiple IP
   addresses may be assigned using DHCP to a single port and the number
   of clients on a port may be unknown.  The access concentrator may
   also not know the network portions of the IP addresses that are
   assigned to its DHCP clients.
</t>
<t>
   The access concentrator gleans IP address or other information from
   DHCP negotiations for antispoofing and other purposes.  The
   antispoofing itself is done in fast path.  Access concentrator keeps
   track of only one list of IP addresses: list of IP addresses that are
   assigned by DHCP server; upstream traffic from all other IP addresses
   is dropped.  If a client starts its data transfer after its DHCP
   negotiations have been gleaned by the access concentrator, no
   legitimate packets will be dropped because of antispoofing.  In other
   words, antispoofing is effective (no legitimate packets are dropped
   and all spoofed packets are dropped) and efficient (antispoofing is
   done in the fast path).  The intention is to achieve similar
   effective and efficient antispoofing in the lease query scenario also
   when an access concentrator loses its gleaned information (for
   example, because of a reboot).
</t>

<t>
   After a deep analysis, we found that the three existing query types
   supported by RFC 4388 <xref target='RFC4388'/> do not provide effective and efficient
   antispoofing for the above scenario and a new mechanism is required.
</t>

<t>
The existing query types
</t>
<list style="symbols">
<t>
      necessitate a data-driven approach: the lease queries can only be
      done when the access concentrator receives data. This results in
      increased outage time for clients
</t>
<t>
      results in excessive negative caching, consuming a lot of resources
      under a spoofing attack
</t>
<t>
      results in antispoofing being done in the slow path instead of the
      fast path
</t>
</list>

</section>

<section title="Protocol Details">
<t> This section talks about the protocol details for query by 
    Remote ID. Most of the message handlings are similar to RFC 4388 <xref target='RFC4388'/> and 
    this section highlights only the differences. Reader is advised to
    go through RFC 4388 <xref target='RFC4388'/> before going through this section for complete
    understanding of the protocol.
</t>
<t> A DHCPLEASEQUERY specified in this document specifies a lease query by
    Remote ID unless otherwise specified.
</t>
<t>
   RFC 3046 <xref target='RFC3046'/> defines two sub-options for the Relay Agent
   Information option.  Sub-option 1 corresponds to the Circuit ID that
   identifies the local circuit of the access concentrator.  This sub-
   option is unique to the relay agent.  Sub-option 2 corresponds to the
   Remote ID that identifies the remote host end of the circuit.  This
   is globally unique in the network.
</t>
<t>
   This document defines a new query type based on the Remote ID sub-
   option.  Suppose that the access concentrator (e.g., DSLAM) lost the
   lease information when it was rebooted.  When the access concentrator
   comes up, it would initiate (for each connection/circuit) a
   dhcp lease query by Remote ID as defined in this section. For this query, the requester 
   supplies only an option 82 which will include only a Remote ID 
   sub-option in the DHCPLEASEQUERY message.
</t>
<t>
   The DHCP server MUST reply with a DHCPLEASEACTIVE message if there
   is an active lease corresponding to the Remote ID that is present
   in the DHCPLEASEQUERY message.  Otherwise, the server MUST reply with a 
   DHCPLEASEUNKNOWN message. Servers that do not implement DHCPLEASEQUERY 
   based on Remote ID SHOULD simply not respond.

</t>

<section title="Sending the DHCPLEASEQUERY Message">
<t>

   The DHCPLEASEQUERY message is typically sent by an access
   concentrator.  The DHCPLEASEQUERY message uses the DHCP message
   format as described in RFC 2131 <xref target='RFC2131'/>, and uses message
   number 10 in the DHCP Message Type option (option 53).  The DHCPLEASEQUERY
   message has the following pertinent message contents:
</t>
<list style="symbols">
<t>

       The giaddr and Parameter Request List option are set as explained in
section 6.2 of RFC 4388 <xref target='RFC4388'/>.

</t>
<t>

        There MUST be a Relay Agent Information option (option 82) with
	only a Remote ID sub-option (sub-option 2) in the DHCPLEASEQUERY
	message.
</t>
<t>
        The ciaddr field MUST be set to zero.
</t>
<t>
        The values of htype, hlen, and chaddr MUST be set to zero.
</t>
<t>
        The Client Identifier option (option 61) MUST NOT appear in the
        packet.
</t>
</list>

<t>

   The DHCPLEASEQUERY message SHOULD be sent to a DHCP server which is
   known to possess authoritative information concerning the Remote ID.
   The DHCPLEASEQUERY message MAY be sent to more than one DHCP server,
   and in the absence of information concerning which DHCP server might
   possess authoritative information concerning the Remote ID, it SHOULD
   be sent to all DHCP servers configured for the associated relay agent
   (if any are known).
</t>
</section>
<section title="Responding to the DHCPLEASEQUERY Message">
<t>

   There are two possible responses to a DHCPLEASEQUERY message:
</t>
<list style="symbols">
<t>
       DHCPLEASEUNKNOWN
</t>
</list>
<t>
   The DHCPLEASEUNKNOWN message indicates that the client associated with
   the Remote ID suboption of the DHCPLEASEQUERY message is not
   allocated any lease or it is not managed by the server. 
</t>

<list style="symbols">
<t>
       DHCPLEASEACTIVE
</t>
</list>
<t>
   The DHCPLEASEACTIVE message indicates that the server not only knows
   the client specified in the DHCPLEASEQUERY message, but also knows
   that there is an active lease for that client.
</t>
</section>

<section title="Building a DHCPLEASEACTIVE or DHCPLEASEUNKNOWN message">

<t>

   A DHCPLEASEACTIVE message is built by populating information pertaining to
   the client associated with the IP address specified in the ciaddr field. 
</t>

<t>
   In the case where more than one IP address has been involved in a
   DHCP message exchange with the client specified by the Remote
   ID, then the list of all those IP addresses MUST be returned in the
   associated-ip option, whether or not that option was requested as
   part of the Parameter Request List option.
</t>

<t>

   In a DHCPLEASEUNKNOWN response message, the DHCP server MUST echo the
   Option 82 received in the DHCPLEASEQUERY message.  No other options
   are returned for these messages. 

</t>

<t>
   For all other options that are specified in Parameter Request List, 
   the processing is same as mentioned in section 6.4.2 of RFC 4388 <xref target='RFC4388'/>.
</t>
</section>

<section title="Determining the IP address to be used in response">
<t>
   The IP address placed in the ciaddr field of a DHCPLEASEACTIVE message
   MUST be the IP address with the latest client-last-transaction-time
   associated with the client described by the Remote ID specified in the
   DHCPLEASEQUERY message.
</t>
<t>
   If there is only a single IP address that fulfills this criteria,
   then it MUST be placed in the ciaddr field of the DHCPLEASEACTIVE
   message.
</t>
<t>
   In the case where more than one IP address has been accessed by the
   client specified by the Remote ID, then
   the DHCP server MUST return the IP address returned to the client in
   the most recent transaction with the client unless the DHCP server
   has been configured by the server administrator to use some other
   preference mechanism.
</t>
</section>

<section title="Sending a DHCPLEASEACTIVE or DHCPLEASEUNKNOWN Message">
<t>

   The server unicasts the DHCPLEASEACTIVE or DHCPLEASEUNKNOWN message to the
   address specified in giaddr field of DHCPLEASEQUERY message.
</t>
</section>

<section title="Receiving a  DHCPLEASEACTIVE or DHCPLEASEUNKNOWN Message">
<t>

   When a DHCPLEASEACTIVE message is received in response to the
   DHCPLEASEQUERY message, it means that there is currently an active
   lease associated with the Remote ID in the DHCP server. The access
   concentrator SHOULD use the information in the "htype", "hlen", and
   "chaddr" fields of the DHCPLEASEACTIVE as well as Relay Agent
   Information option information included in the packet to refresh its
   location information for this IP address.  An access concentrator is
   likely to query by IP address for all the IP addresses specified in
   the associated-ip option in the response, if any, at this point in
   time.

</t>
<t>
   When a DHCPLEASEUNKNOWN message is received by an access concentrator
   that had sent out a DHCPLEASEQUERY message, it means that the DHCP
   server does not have definitive information concerning the DHCP
   client specified in the Remote ID sub-option of the
   DHCPLEASEQUERY message.  The Access Concentrator MAY store this
   information for future use.  However, a DHCPLEASEQUERY SHOULD NOT be
   attempted with the same Remote ID sub-option.
    
</t>

<t>
   For leasequery by Remote ID, the impact of negative caching is
   greatly reduced as the response leads to "definitive" information on
   all the hosts connected behind the connection.  Note that in the case
   of data-driven approach <xref target='RFC4388'/>, a host spoofing several IP addresses can
   lead to negative caching of greater magnitude.  Another important
   change this draft brings is the removal of "periodic" leasequeries
   generated from negative caching caused by DHCPLEASEUNKNOWN.  Since
   the information obtained through query by Remote ID is complete,
   there is no need of attempting leasequery again for the same
   connection.
</t>
</section>

<section title="Receiving No Response to the DHCPLEASEQUERY Message">
<t>

   When an access concentrator receives no response to a
   DHCPLEASEQUERY message, it should be handled in the same manner 
   as suggested in RFC 4388 <xref target='RFC4388'/>.
</t>
</section>

<section title="Lease Binding Data Storage Requirements">
<artwork>
Implementation Note:
</artwork>
<t>
	To generate replies for a lease query by Remote ID effeciently, a DHCP
	server should index the lease binding data structures using Remote ID.
</t>
</section>

<section title="Using the DHCPLEASEQUERY Message with Multiple DHCP Servers">
<t>

	This scenario should be handled in the same way it is done in RFC 4388 <xref target='RFC4388'/>.
</t>
</section>
</section>
<section title="RFC 4388 Considerations">
<t>
   This document is compatible with RFC 4388 <xref target='RFC4388'/> based
   implementations, which means that a client that supports this
   extension can work with a server not supporting this document,
   provided it uses RFC 4388 <xref target='RFC4388'/> defined query types.  Also, a
   server supporting this document can work with a client not supporting
   this query type.  However, there are some changes that this document
   proposes with respect to RFC 4388 <xref target='RFC4388'/>. Implementers extending
   RFC 4388 <xref target='RFC4388'/> implementations to support this document, should
   take note of the following points:
</t>
<list style="symbols">
<t>
There may be cases where a query by IP address/MAC address/Client
      Identifier has an option 82 containing Remote ID.  In that case,
      the query will still be recognized as query by IP address/MAC
      address/Client Identifier as specified by RFC 4388 <xref target='RFC4388'/>.
</t>
<t>
Section 6.4 of RFC 4388 <xref target='RFC4388'/> suggests that a DHCPLEASEUNKNOWN
      MUST NOT have any other option present.  But for a query by Remote
      ID, option 82 MUST be present in the reply.

</t>
</list>
</section>
<section title="Security Considerations">
<t>
	This document does not introduce any new security concerns beyond
   those specified in the original leasequery protocol RFC 4388 <xref target='RFC4388'/>
    specifications. 
</t>
</section>

<section title="IANA Considerations">
<t>
	This document does not introduce any new namespaces for the IANA to manage.
</t>
</section>
<section title="Acknowledgments">
<t>
Copious amounts of text in this document are derived from RFC 4388 <xref target='RFC4388'/>.
Kim Kinnear, Damien Neil, Stephen Jacob and Alfred Hoenes provided valuable feedback on this document
</t>
</section>
</middle>


<back>

<references title="Normative Reference">

<reference anchor='RFC2119'>
<front>
<title abbrev='RFC Keyword'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
</author>
<date month='March' year='1997' />
</front>
<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
</reference>

<reference anchor='RFC4388'>
<front>
<title abbrev='DHCP Lease Query'>Dynamic Host Configuration Protocol (DHCP) Leasequery</title>
<author initials='R.' surname='Woundy' fullname='Rich Woundy'>
<organization>Comcast Cable</organization>
</author>
<author initials='K.' surname='Kinnear' fullname='Kim Kinnear'>
<organization>Cisco Systems</organization>
</author>
<date month='February' year='2006' />
</front>
<seriesInfo name='RFC' value='4388' />
</reference>

<reference anchor='RFC2131'>
<front>
<title abbrev='DHCP'>Dynamic Host Configuration Protocol </title>
<author initials='R.' surname='Droms' fullname='Ralph Droms'>
<organization>Bucknell University</organization>
</author>
<date month='March' year='1997' />
</front>
<seriesInfo name='RFC' value='2131' />
</reference>

<reference anchor='RFC3046'>
<front>
<title abbrev='DHCP Relay Agent'>DHCP Relay Agent Information Option</title>
<author initials='M.' surname='Patrick' fullname='Michael Patrick'>
<organization>Motorola Broadband Communications Sector</organization>
</author>
<date month='January' year='2001' />
</front>
<seriesInfo name='RFC' value='3046' />
</reference>

</references>

<references title="Informative Reference">

<reference anchor='RFC951'>
<front>
<title abbrev='BOOTP'>Bootstrap Protocol (BOOTP)</title>
<author initials='B.' surname='Croft' fullname='Bill Croft'>
<organization>Stanford University</organization>
</author>
<author initials='J.' surname='Gilmore' fullname='John Gilmore'>
<organization>Sun Microsystems</organization>
</author>
<date month='September' year='1985' />
</front>
<seriesInfo name='RFC' value='951' />
</reference>

<reference anchor='RFC1542'>
<front>
<title abbrev='Ext of BOOTP'>Clarifications and Extensions for the Bootstrap Protocol</title>
<author initials='W.' surname='Wimer' fullname='Walt Wimer'>
<organization>Carnegie Mellon University </organization>
</author>
<date month='October' year='1993' />
</front>
<seriesInfo name='RFC' value='1542' />
</reference>

<reference anchor='RFC2132'>
<front>
<title abbrev='DHCP Options'>DHCP Options and BOOTP Vendor Extensions</title>
<author initials='R.' surname='Droms' fullname='Ralph Droms'>
<organization>Bucknell University</organization>
</author>
<author initials='S.' surname='Alexander' fullname='Steve Alexander'>
<organization>Silicon Graphics, Inc.</organization>
</author>
<date month='March' year='1997' />
</front>
<seriesInfo name='RFC' value='2132' />
</reference>

</references>
</back>
</rfc>
