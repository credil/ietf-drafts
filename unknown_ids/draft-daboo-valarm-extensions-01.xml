<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="../../rfc2629.xslt"?><!DOCTYPE rfc SYSTEM 'rfc2629.dtd' [<!ENTITY rfc2119 PUBLIC '' 'bibxml/reference.RFC.2119.xml'><!ENTITY rfc3261 PUBLIC '' 'bibxml/reference.RFC.3261.xml'><!ENTITY rfc3860 PUBLIC '' 'bibxml/reference.RFC.3860.xml'><!ENTITY rfc3966 PUBLIC '' 'bibxml/reference.RFC.3966.xml'><!ENTITY rfc4791 PUBLIC '' 'bibxml/reference.RFC.4791.xml'><!ENTITY id2445bis PUBLIC '' 'bibxml3/reference.I-D.ietf-calsify-rfc2445bis.xml'>]> <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?><?rfc toc="yes"?><?rfc comments="yes"?><?rfc inline="yes"?><?rfc symrefs="yes"?><?rfc sortrefs="yes"?><?rfc compact="yes"?><?rfc subcompact="no"?><?rfc tocdepth="2"?><?rfc strict="yes"?><rfc category="std" ipr='trust200902' docName='draft-daboo-valarm-extensions-01'>    <front>        <title abbrev="VALARM Extensions">VALARM Extensions for iCalendar</title>        <author initials="C." surname="Daboo" fullname="Cyrus Daboo">            <organization abbrev="Apple">                Apple Inc.            </organization>            <address>                <postal>                    <street>                        1 Infinite Loop                    </street>                    <city>                        Cupertino                    </city>                    <region>                        CA                    </region>                    <code> 95014 </code>                    <country>                        USA                    </country>                </postal>                <email>                    cyrus@daboo.name                </email>                <uri>                    http://www.apple.com/                </uri>            </address>        </author><!--   <author initials="B." surname="Desruisseaux"          fullname="Bernard Desruisseaux">    <organization abbrev="Oracle">Oracle Corporation</organization>    <address>      <postal>        <street>600 blvd. de Maisonneuve West</street>        <street>Suite 1900</street>        <city>Montreal</city>        <region>QC</region>        <code>H3A 3J2</code>        <country>CA</country>      </postal>      <email>bernard.desruisseaux@oracle.com</email>      <uri>http://www.oracle.com/</uri>    </address>  </author> -->        <date />        <area>Applications</area>        <keyword>alarms</keyword>        <keyword>calendaring</keyword>        <keyword>iCalendar</keyword>        <keyword>CalDAV</keyword>        <abstract>            <t>                This document defines a set of extensions to the iCalendar VALARM component to enhance use of alarms and improve interoperability between clients and servers.            </t>        </abstract>    </front>    <middle>        <section title='Introduction'>            <t>                The <xref target="I-D.ietf-calsify-rfc2445bis">iCalendar</xref> specification defines a set of components used to describe calendar data. One of those is the "VALARM" component which appears as a sub-component of "VEVENT" and "VTODO" components. The "VALARM" component is used to specify a reminder for an event or to-do. Different alarm actions are possible, as are different ways to specify how the alarm is triggered.            </t>            <t>                As iCalendar has become more widely used and as client-server protocols such as <xref target="RFC4791">CalDAV</xref> have become more popular, several issues with "VALARM" components have arisen. Most of these relate to the need to extend the existing "VALARM" component with new properties and behaviors to allow clients and servers to accomplish specific tasks in an interoperable manner. For example, clients typically need a way to specify that an alarm has been dismissed by a calendar user, or has been "snoozed" by a set amount of time. To date, this has been done through the use of custom "X-" properties specific to each client implementation, leading to poor interoperability.            </t>            <t>                This specification defines a set of extensions to "VALARM" components to cover common requirements for alarms not currently addressed in iCalendar. Each extension is defined in a separate section below. For the most part, each extension can be supported independently of the others, though in some cases one extension will require another. In addition, this specification describes mechanisms by which clients can interoperably implement common features such as "snoozing".            </t>        </section>        <section title='Conventions Used in This Document'>            <t>                The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target='RFC2119' />.            </t>            <t>                When XML element types in the namespaces "DAV:" and "urn:ietf:params:xml:ns:caldav" are referenced in this document outside of the context of an XML fragment, the string "DAV:" and "CALDAV:" will be prefixed to the element type names respectively.            </t>        </section>        <section title="Extensible syntax for VALARM" anchor="syntax">            <t>                Section 3.6.6 of <xref target="I-D.ietf-calsify-rfc2445bis"/> defines the syntax for "VALARM" components and properties within them. However, as written, it is hard to extend this by adding, e.g., a new property common to all types of alarm. Since many of the extensions defined in this document need to extend the base syntax, an alternative form for the base syntax is defined here, with the goal of simplifying specification of the extensions.            </t>            <t>                A "VALARM" calendar component is re-defined by the following notation:          <figure><artwork name="abnf"><![CDATA[     alarmcext  = "BEGIN" ":" "VALARM" CRLF                  alarmprop                  "END" ":" "VALARM" CRLF     alarmprop  = *(                ; the following are REQUIRED,                ; but MUST NOT occur more than once                action / trigger /                ; one set of action properties MUST be                ; present and MUST match the action specified                ; in the ACTION property                actionprops /                ; the following is OPTIONAL,                ; and MAY occur more than once                x-prop / iana-prop                )                     actionprops = audiopropext / disppropext / emailpropext     audiopropext  = *(                ; 'duration' and 'repeat' are both OPTIONAL,                ; and MUST NOT occur more than once each,                ; but if one occurs, so MUST the other                duration / repeat /                ; the following is OPTIONAL,                ; but MUST NOT occur more than once                attach                )     disppropext = *(                ; the following are REQUIRED,                ; but MUST NOT occur more than once                description /                ; 'duration' and 'repeat' are both OPTIONAL,                ; and MUST NOT occur more than once each,                ; but if one occurs, so MUST the other                duration / repeat                )     emailpropext = *(                ; the following are all REQUIRED,                ; but MUST NOT occur more than once                description / summary /                ; the following is REQUIRED,                ; and MAY occur more than once                attendee /                ; 'duration' and 'repeat' are both OPTIONAL,                ; and MUST NOT occur more than once each,                ; but if one occurs, so MUST the other                duration / repeat                )]]></artwork>          </figure>        </t>        </section>        <section title="VALARM Unique Identifier">            <t>                Several of the other extensions in this specification require identifying a specific instance of a "VALARM" component in an iCalendar stream. To aid that, this extension adds a "UID" property to "VALARM" components to allow a unique identifier to specified. The value of this unique identifier can then be used to refer uniquely to the "VALARM" component.            </t>            <t>                The "UID" property defined here follows the definition in Section 3.8.4.7 of <xref target="I-D.ietf-calsify-rfc2445bis"/>. In particular it MUST be a globally unique identifier.             </t>            <t>                The "VALARM" component defined in <xref target="syntax"/> is extended here as:                <figure>                <artwork name="abnf">        alarmprop  /= *(                   ; the following is OPTIONAL,                   ; but MUST NOT occur more than once                   uid                   )                </artwork>                </figure>            </t>        </section>        <section title="VALARM URI Action">            <t>                Currently "VALARM" components have actions for audio, display and email. New types of action are of interest, e.g., SMS, instant messaging, etc. Rather then specify separate actions for these, an alternative is to define a "URI" action that allows any URI scheme to be used as an action, where it makes sense. Thus URI schemes for IM <xref target="RFC3860"/>, SIP <xref target="RFC3261"/>, TEL <xref target="RFC3966"/> etc could be used.            </t>            <t>                This extension defines a new "URI" property value for use with the "ACTION" property in "VALARM" components. A new set of action properties is defined for "VALARM" components based on this new action as defined by the syntax below.                <figure>                <artwork name="abnf">        actionvalue /= "URI"                    ; Adds a new action for a "VALARM"        actionprop  /= uriprop                    ; Re-defines the "VALARM" component to include                    ; "uriprop" as a new set of action properties         uriprop     = *(                    ; the following is REQUIRED,                    ; but MUST NOT occur more than once                    uri /                    ; 'duration' and 'repeat' are both OPTIONAL,                    ; and MUST NOT occur more than once each,                    ; but if one occurs, so MUST the other                    duration / repeat                    )                </artwork>                </figure>            </t>        </section>        <section title="VALARM Agent Property">            <t>                With the advent of a standard client/server protocol for calendaring and scheduling data (<xref target="RFC4791"/>) there is a need to specify which client or server should handle the presentation of an alarm when it is triggered. For example, calendar users want to be able to receive alarms at all times, even when their desktop client might be unavailable. Since the server is "always on", a service running on the server could monitor alarm status and, when appropriate, trigger those alarms. In addition it may be important for only the server or the client to be set to handle an alarm - and in some cases only specific servers or clients.            </t>            <t>                To address this need, this specification defines an "ALARM-AGENT" iCalendar property that can be added to any "VALARM" component. This property specifies whether a client or server or both should be responsible for processing the alarm when it triggers. In addition, a "URI" property parameter can be added to uniquely identify the client or server that should process the alarm. This is defined by the syntax below.                <figure>                <artwork name="abnf">        alarmprop  /= *(                   ; the following is OPTIONAL,                   ; and MAY occur more than once                   alarm-agent                   )                </artwork>                </figure>            </t>            <section title="Alarm Agent Property" anchor="ALARM-AGENT">                <t>                    <list style="hanging">                        <t hangText="Property Name:">                            ALARM-AGENT                        </t>                        <t hangText="Purpose:">                            This property specifies whether a client, server, both or none gets to process an alarm when it is triggered.                         </t>                        <t hangText="Value Type:">                            TEXT                         </t>                        <t hangText="Property Parameters:">                            IANA, non-standard, and URI property parameters can be specified on this property.                         </t>                        <t hangText="Conformance:">                            This property can be specified within "VALARM" calendar components.                         </t>                        <t hangText="Description:">                            This property is used to specify who is responsible for processing an alarm when it is triggered. When the value "SERVER" is specified, only a server that has a copy of the event is responsible. When the value "CLIENT" is specified, only a client that has a copy of the event is responsible. When the value "BOTH" is specified, either a client or server is responsible. When the value "NONE" is specified, neither a client nor server is responsible (i.e., the alarm action is never carried out when it triggers).                                                        <vspace blankLines="1" />                            If the "URI" property parameter is specified for "SERVER" or "CLIENT" values, then only the client or server identified by the "URI" value is responsible. Clients or servers that are not responsible for the alarm SHOULD NOT process the alarm action when it is triggered. If multiple clients or servers need to be specified, then the "ALARM-AGENT" property should be included multiple times in the "VALARM" component, with each one containing the appropriate "URI" property parameter value to identify each client or server.                                                        <vspace blankLines="1" />                            In the absence of this property clients and servers can choose to process the alarm themselves as appropriate when it triggers.                                                        <vspace blankLines="1" />                            This property MAY occur more than once to allow multiple processors of an alarm.                        </t>                        <t hangText="Format Definition:">                            This property is defined by the following notation:                             <figure>                                <artwork name="abnf">     alarm-agent     = "ALARM-AGENT" alarmagentparam ":"                     alarmagentvalue CRLF          alarmagentparam = *(                     ; the following is OPTIONAL,                     ; but MUST NOT occur more than once                     (";" uriparam) /                     ; the following is OPTIONAL,                     ; and MAY occur more than once                     (";" other-param)                     )     alarmagentvalue = "SERVER" / "CLIENT" / "BOTH" / "NONE"                     / iana-token / x-name                                </artwork>                            </figure>                        </t>                        <t hangText="Example:">                            The following is an example of this property:                             <figure>                                <artwork>     ALARM-AGENT:SERVER                                </artwork>                            </figure>                        </t>                    </list>                </t>            </section>            <section title="URI Property Parameter" anchor="URI-PARAM">                <t>                    <list style="hanging">                        <t hangText="Property Name:">                            URI                        </t>                        <t hangText="Purpose:">                            This property parameter specifies a URI that is related to the property it is applied to.                         </t>                        <t hangText="Format Definition:">                            This property is defined by the following notation:                             <figure>                                <artwork name="abnf">     uriparam   = "URI" "=" DQUOTE uri DQUOTE                                </artwork>                            </figure>                        </t>                        <t hangText="Description:">                            This property parameter is used to specify a URI that is associated with the property it is applied to. Each property that allows this parameter to be specified MUST indicate what the value of the URI represents.                        </t>                        <t hangText="Example:">                            The following is an example of this property:                             <figure>                                <artwork>     ALARM-AGENT;URI="http://calendar.example.com":SERVER                                </artwork>                            </figure>                        </t>                    </list>                </t>            </section>        </section>        <section title="VALARM Status Property">            <t>                There is currently no way for a "VALARM" component to indicate the status of the alarm (e.g., whether it has been triggered or not). With the advent of a standard client/server protocol for calendaring and scheduling data (<xref target="RFC4791"/>) it is quite possible for an event with an alarm to exist on multiple clients in addition to the server. If each of those is responsible for performing the action when an alarm triggers then multiple "alerts" are generated by different devices. In such a situation a calendar user would like to be able to "dismiss" the alarm on one device and have it dismissed on the others too.            </t>            <t>                Finally, with recurring events that have alarms, it is important to know when the last alarm in the recurring set was triggered, so that the client can determine whether past alarms have been missed.            </t>            <t>                To address these needs, this specification adds the following:                <list style="symbols">                    <t>a "STATUS" property to "VALARM" components with values to indicate wether an alarm is active, inactive, or completed (dismissed).</t>                    <t>a "LAST-TRIGGERED" property to "VALARM" components to indicate when the alarm was last triggered.</t>                </list>                This is defined by the syntax below.                <figure>                <artwork name="abnf">        alarmprop       /= *(                        ; the following are OPTIONAL,                        ; but MUST NOT occur more than once                        status / last-triggered                        )                           statvalue       /= statvalue-alarm        statvalue-alarm = "ACTIVE"    ; Indicates alarm is active and                                      ; waiting to be triggered.                        / "CANCELLED" ; Indicates alarm is inactive                                      ; and won't be triggered.                        / "COMPLETED" ; Indicates alarm has triggered                                      ; and been dismissed.        ; Status values for a "VALARM"                        </artwork>                </figure>            </t>            <section title="Last Triggered Property" anchor="LAST-TRIGGERED">                <t>                    <list style="hanging">                        <t hangText="Property Name:">                            LAST-TRIGGERED                        </t>                        <t hangText="Purpose:">                            This property specifies the UTC date and time at which the corresponding alarm was last triggered.                         </t>                        <t hangText="Value Type:">                            DATE-TIME                          </t>                        <t hangText="Property Parameters:">                            IANA and non-standard property parameters can be specified on this property.                         </t>                        <t hangText="Conformance:">                            This property can be specified within "VALARM" calendar components.                         </t>                        <t hangText="Description:">                            This property is used to specify when an alarm was last triggered. This allows clients to track repeating alarms or alarms on recurring events or to-dos to ensure that the right number of missed alarms can be tracked.                        </t>                        <t hangText="Format Definition:">                            This property is defined by the following notation:                             <figure>                                <artwork name="abnf">    last-triggered = "LAST-TRIGGERED" lasttrigparam ":" datetime CRLF         lasttrigparam  = *(                     ; the following is OPTIONAL,                     ; and MAY occur more than once                      (";" other-param)                     )                                </artwork>                            </figure>                        </t>                        <t hangText="Example:">                            The following is an example of this property:                             <figure>                                <artwork>     LAST-TRIGGERED:20090604T084500Z                                </artwork>                            </figure>                        </t>                    </list>                </t>            </section>        </section>        <section title="Snoozing Alarms">            <t>                Users often want to "snooze" an alarm. That process effectively creates a new alarm to be triggered a set amount of time after the original being "snoozed". To accomplish this, clients SHOULD create a new "VALARM" component within the same component of the "VALARM" that was triggered and is being "snoozed". The new "VALARM" MUST be set to trigger by the user's chosen "snooze" interval after the original alarm triggered.            </t>        </section>        <section title="Default Alarms in CalDAV">            <t>                Users often want to have a default alarm applied to new events that they create or to new invitations that arrive on a <xref target='RFC4791'>CalDAV</xref> server. Since this behavior is expected to occur no matter which client a user is using, it is beneficial if the server itself is responsible for managing the creation of the default alarm.</t>            <t>                This specification defines four new WebDAV properties that can be used to specify different sets of default alarms. Clients can store "VALARM" components in these properties to setup the defaults. When a new event or todo is created on the server, the server will automatically add the default, as appropriate. When a new event or todo invitation is delivered to the calendar user, the server will automatically add the default alarm, as appropriate.            </t>            <t>                The four new WebDAV properties are:                <list style='hanging'>                    <t hangText="CALDAV:default-alarm-vevent-datetime">A default alarm applied to "VEVENT" components whose "DTSTART" property value is "DATE-TIME"</t>                    <t hangText="CALDAV:default-alarm-vevent-date">A default alarm applied to "VEVENT" components whose "DTSTART" property value is "DATE"</t>                    <t hangText="CALDAV:default-alarm-vtodo-datetime">A default alarm applied to "VTODO" components whose "DUE" or "DTSTART" property value is "DATE-TIME"</t>                    <t hangText="CALDAV:default-alarm-vtodo-date">A default alarm applied to "VTODO" components whose "DUE" or "DTSTART" property value is "DATE", or when neither of those properties is present</t>                </list>            </t>            <t>                The WebDAV properties are defined on a calendar user's "calendar home" collection, or on individual calendar collections. When events or tasks are created in a calendar, the server will first inspect the WebDAV properties on the calendar collection to see if the appropriate property is present. If it is, the server will use the value of that property to set the default in the new component. If the property is not present on the calendar collection, the server will determine whether the property is present on the calendar home collection that contains the calendar collection. If present on the calendar home, the property value there is used as the default.            </t>            <t>            	The WebDAV property value MUST be one or more "VALARM" components or the empty string. If an empty string is used, no default alarms are applied. TODO: more detail here            </t>        </section>        <section title='Security Considerations'>            <t>TODO:talk about importance of stripping VALARMs from incoming iTIP. Talk about VALARMs being used to "spam" - particularly nasty if the server handles it.            </t>        </section>        <section title='IANA Considerations'>            <t>TODO: tables registering new properties, parameters and values.</t>            <!--            <section title='Property Registrations'>                <t>                    This documents defines the following new iCalendar properties to be added to the registry defined in Section 8.2.3 of <xref target="I-D.ietf-calsify-rfc2445bis" />:                </t>                <texttable>                    <ttcol>                        Property                    </ttcol>                    <ttcol>                        Status                    </ttcol>                    <ttcol>                        Reference                    </ttcol>                    <c>                        -                    </c>                    <c>                        -                    </c>                    <c>                        RFCXXXX                    </c>                </texttable>            </section>            <section title='Paramater Registrations'>                <t>                    This documents defines the following new iCalendar properties to be added to the registry defined in Section 8.2.3 of <xref target="I-D.ietf-calsify-rfc2445bis" />:                </t>                <texttable>                    <ttcol>                        Property                    </ttcol>                    <ttcol>                        Status                    </ttcol>                    <ttcol>                        Reference                    </ttcol>                    <c>                        -                    </c>                    <c>                        -                    </c>                    <c>                        RFCXXXX                    </c>                </texttable>            </section>        -->        </section>        <section title='Acknowledgments'>            <t>                This specification came about via discussions at the Calendaring and Scheduling Consortium. Also, thanks to the following for providing feedback: Bernard Desruisseaux, Mike Douglass, Ciny Joy.            </t>        </section>    </middle>    <back>        <references title='Normative References'>            &rfc2119; &rfc4791; &id2445bis;        </references>        <references title='Informative References'>            &rfc3261; &rfc3860; &rfc3966;        </references>        <section title="Change History (To be removed by RFC Editor before publication)">            <t>                Changes in -01:                <list style='numbers'>                    <t>Removed DESCRIPTION as an allowed property in the URI alarm.</t>                    <t>Added statement about what to do when ALARM-AGENT is not present.</t>                    <t>Allow multiple ALARM-AGENT properties to be present.</t>                    <t>Removed SNOOZE-UNTIL - snoozing now accomplished by creating a new VALARM.</t>                    <t>Remove VALARM by reference section.</t>                    <t>Added more detail to CalDAV default alarms.</t>                </list>            </t>        </section>    </back></rfc>