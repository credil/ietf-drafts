<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'>
<?rfc toc="yes"?>
<?rfc compact="no"?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<rfc ipr="trust200902" category="std" docName="draft-bierman-netmod-system-mgmt-00" >
    <front>
    <title abbrev="YANG System Management">YANG Data Model for System Management</title>

    <author initials="A" surname="Bierman" fullname='Andy Bierman' >
      <organization>Brocade</organization>
      <address>
        <email>andy.bierman@brocade.com</email>
      </address>
    </author>
    <author initials="M" surname="Bjorklund" fullname='Martin Bjorklund' >
      <organization>Tail-f Systems</organization>
      <address>
        <email>mbj@tail-f.com</email>
      </address>
    </author>
	<date/>
    <abstract>
	<t>
This document defines a YANG data model for the configuration
and identification of the management system of a device.
	</t>
</abstract>
</front>
<middle>
<section title="Introduction">
    <t>
This document defines a YANG <xref target="RFC6020"/> data model for the
configuration and identification of the management system of a device.
    </t>
    <t>
Devices which are managed by NETCONF and perhaps other mechanisms
have common properties which need to be configured and monitored
in a standard way.
    </t>
    <t>
The YANG module defined in this document provides the
following features:
    </t>
<t>
 <list style="symbols">
 <t>
system administrative data configuration
 </t>
 <t>
system identification monitoring
 </t>
 <t>
system time-of-day configuration and monitoring
 </t>
 <t>
user authentication configuration
 </t>
 <t>
local users configuration
 </t>
 </list>
</t>
<section title="Terminology">
    <t>
The keywords &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;,
&quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;, &quot;NOT RECOMMENDED&quot;, &quot;MAY&quot;, and
&quot;OPTIONAL&quot; in this document are to be interpreted as described in BCP
14, <xref target="RFC2119"/>.
    </t>
<section title="Terms">
    <t>
The following terms are used within this document:
    </t>
<t>
 <list style="symbols">
 <t>
system: This term refers to the embodiment 
of the entire set of management interfaces that a 
single NETCONF server is supporting
at a given moment.  The set of physical entities
managed by a single NETCONF server can be static
or it can change dynamically.
 </t>
 </list>
</t>
</section>
</section>
</section>
<section title="Objectives">
<section title="System Identification">
    <t>
There are many common properties used to identify devices,
operating systems, software versions, etc. that need to 
be supported in the system data module.  
These objects are defined
as operational data and intended to be specific to the
device vendor.
    </t>
    <t>
Some user-configurable administrative strings are also
provided such as the system location and description.
    </t>
</section>
<section title="System Time Management">
    <t>
The management of the date and time used by the system
must be supported.  Use of one or more NTP servers
to automatically set the system date and time must be possible.
Utilization of the Timezone database <xref target="I-D.lear-iana-timezone-database"/>
must also be supported.
    </t>
</section>
<section title="User Authentication">
    <t>
The authentication mechanism must support password authentication over
RADIUS, to support deployment scenarios with centralized
authentication servers.  Additionally, local users must be supported,
for scenarios when no centralized authentication server exists, or for
situations where the centralized authentication server cannot be
reached from the device.
    </t>
    <t>
Since the mandatory transport protocol for NETCONF is SSH
<xref target="I-D.ietf-netconf-rfc4742bis"/> the authentication model must support
SSH&apos;s &quot;publickey&quot; and &quot;password&quot; authentication methods <xref target="RFC4252"/>.
    </t>
    <t>
The model for authentication configuration should be flexible enough
to support authentication methods defined by other standard documents
or by vendors.
    </t>
</section>
</section>
<section title="System Data Model">
    <t>
[FIXME: this section currently just talks about authentication.
Add description of the rest of the data model, like we do in
snmp-cfg?  Otherwise, rename this section to Authentication ...]
    </t>
    <t>
[FIXME: introduce a set of submodules to allow for future enhancements
of the system data model?]
    </t>
<section title="User Authentication Model">
    <t>
This document defines three authentication methods for use with
NETCONF:
    </t>
<t>
 <list style="symbols">
 <t>
publickey for local users over SSH
 </t>
 <t>
password for local users over any transport
 </t>
 <t>
password for RADIUS users over any transport
 </t>
 </list>
</t>
    <t>
Additional methods may be defined by other standard documents or by
vendors.
    </t>
    <t>
This document defines two optional YANG features, &apos;local&#8209;users&apos; and
&apos;radius&apos;, which the server advertises to indicate support for
configuring local users on the device, and for configuring RADIUS
access, respectively.
    </t>
    <t>
The authentication parameters defined in this document are primarily
used to configure authentication of NETCONF users, but MAY also be
used by other interfaces, e.g., a Command Line Interface or a
Web-based User Interface.
    </t>
</section>
<section title="SSH Public Key Authentication">
    <t>
If the NETCONF server advertises the &apos;local&#8209;users&apos; feature,
configuration of local users and their SSH public keys is supported in
the /system/authentication/user list.
    </t>
    <t>
Public key authentication is requested by the SSH client.  The SSH
server looks up the user name provided by the client in the /system/
authentication/user list, and verifies the key as described in
<xref target="RFC4253"/>.
    </t>
    <t>
If the &apos;local&#8209;users&apos; feature is supported, then when a NETCONF client
starts an SSH session towards the server, using the &quot;publickey&quot;
authentication &apos;method name&apos; <xref target="RFC4252"/>, the SSH server looks up the
user name given in the SSH authentication request in the /system/
authentication/user list,
    </t>
</section>
<section title="Local User Password Authentication">
    <t>
If the NETCONF server advertises the &apos;local&#8209;users&apos; feature,
configuration of local users and their passwords is supported in the
/system/authentication/user list.
    </t>
    <t>
For NETCONF transport protocols that support password authentication,
the leaf-list &apos;user&#8209;authentication&#8209;order&apos; is used to control if local
user password authentication should be used.
    </t>
    <t>
In SSH, password authentication is requested by the client.  Other
NETCONF transport protocols may also support password authentication.
    </t>
    <t>
When local user password authentication is requested, the NETCONF
transport looks up the user name provided by the client in the
/system/ authentication/user list, and verifies the password.
    </t>
</section>
<section title="RADIUS Password Authentication">
    <t>
If the NETCONF server advertises the &apos;radius&apos; feature, the device
supports user authentication RADIUS.
    </t>
    <t>
For NETCONF transport protocols that support password authentication,
the leaf-list &apos;user&#8209;authentication&#8209;order&apos; is used to control if RADIUS
password authentication should be used.
    </t>
    <t>
In SSH, password authentication is requested by the client.  Other
NETCONF transport protocols may also support password authentication.
    </t>
</section>
</section>
<section title="System YANG module" anchor="module">
    <t>
RFC Ed.: update the date below with the date of RFC publication and
remove this note.
    </t>
    <t>
This YANG module imports YANG extensions from ... and references ...
[Editor&apos;s Note: add proper references]
    </t>
<t>&lt;CODE BEGINS> file "ietf-system@2011-06-02.yang"</t>
	<figure>
	    <artwork><![CDATA[
module ietf-system {
  namespace "urn:ietf:params:xml:ns:yang:ietf-system";
  prefix "sys";

  import ietf-inet-types {
    prefix inet;
  }

  import ietf-netconf-acm {
    prefix nacm;
  }

  import ietf-yang-types {
    prefix yang;
  }

  organization
    "IETF NETMOD (NETCONF Data Modeling Language) Working Group";

  contact
    "WG Web:   <http://tools.ietf.org/wg/netmod/>
     WG List:  <mailto:netmod@ietf.org>

     WG Chair: David Kessens
               <mailto:david.kessens@nsn.com>

     WG Chair: Juergen Schoenwaelder
               <mailto:j.schoenwaelder@jacobs-university.de>

     Editor:   Andy Bierman
               <mailto:andy.bierman@brocade.com>

     Editor:   Martin Bjorklund
               <mailto:mbj@tail-f.com>";

  description
    "This module contains a collection of YANG definitions for the
     configuration and identification of the management system of a
     device.

     Copyright (c) 2011 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.

  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  revision 2011-06-02 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: A YANG Data Model for System Management";
  }
  
  /*
   * Typedefs
   */ 

   typedef crypt-hash {
     type string {
       pattern "$0$.* | $1|5|6$[a-zA-Z0-9./]{2,16}$.*";
     }
     description
       "The crypt-hash type is used to store passwords using
        a hash function.  This type is implemented in various UNIX
        systems as the function crypt(3).

        When a clear text value is set to a leaf of this type, the
        server calculates a password hash, and stores the result
        in the datastore.  Thus, the password is never stored in
        clear text.

        When a leaf of this type is read, the stored password hash is
        returned.

        A value of this type matches one of the forms:

          $0$<clear text password>
          $<id>$<salt>$<password hash>

       The '$0$' prefix signals that the value is clear text.  When
       such a value is received by the server, a hash value is
       calculated, and the string '$<id>$<salt>$' is prepended to the
       result, where <salt> is a random 2-16 characters long salt
       used to generate the digest.  This value is stored in the
       configuration data store.

       If a value starting with '$<id>$<salt>$' is received, the
       server knows that the value already represents a hashed value,
       and stores it as is in the data store.

       When a server needs to verify a password given by a user, it
       finds the stored password hash string for that user, extracts
       the salt, and calculates the hash with the salt and given
       password as input.  If the calculated hash value is the same
       as the stored value, the password given by the client is
       correct.

       This type defines the following hash functions:

         id | hash function | feature
         ---+---------------+-------------------
          1 | MD5           | crypt-hash-md5
          5 | SHA-256       | crypt-hash-sha-256
          6 | SHA-512       | crypt-hash-sha-512

       The server indicates support for the different hash functions
       by advertising the corresponding feature.";
     reference
       "Wikipedia: http://en.wikipedia.org/wiki/Crypt_(Unix)
        RFC 1321: The MD5 Message-Digest Algorithm
        FIPS.180-3.2008: Secure Hash Standard";
   }

  /*
   * Features
   */

  feature authentication {
    description
      "Indicates that the device can be configured
       to do authentication of users.";
  }

  feature radius {
    if-feature authentication;
    description
      "Indicates that the device can be
       configured to act as a NAS and authenticate users
       with RADIUS.";
    reference
      "RFC 2865: Remote Authentication Dial In User Service (RADIUS)
       RFC 5607: Remote Authentication Dial-In User Service (RADIUS)
                 Authorization for Network Access Server (NAS)
                 Management";
  }

  feature local-users {
    if-feature authentication;
    description
      "Indicates that the device supports
       local user authentication.";
  }

  feature crypt-hash-md5 {
    description
      "Indicates that the device supports the MD5
       hash function in 'crypt-hash' values";
    reference "RFC 1321: The MD5 Message-Digest Algorithm";
  }

  feature crypt-hash-sha-256 {
    description
      "Indicates that the device supports the SHA-256
       hash function in 'crypt-hash' values";
    reference "FIPS.180-3.2008: Secure Hash Standard";
  }

  feature crypt-hash-sha-512 {
    description
      "Indicates that the device supports the SHA-512
       hash function in 'crypt-hash' values";
    reference "FIPS.180-3.2008: Secure Hash Standard";
  }

  feature ntp {
    description
      "Indicates that the device can be configured
       to use one or more NTP servers to set the 
       system date and time.";
  }

  feature tz-database {
    description
      "Indicates that the local timezone on the device
       can be configured to use the TZ database
       to set the timezone and manage daylight savings time.";
    reference
      "TZ Database  http://www.twinsun.com/tz/tz-link.htm
       Maintaining the Timezone Database
       http://www.ietf.org/id/draft-lear-iana-timezone-database-04.txt
      ";
  }

  feature tz-enumeration {
    description
      "Indicates that the local timezone on the device
       can be configured using the timezone enumeration
       strings as an alias for an UTC offset.";
    reference
      "Wikipedia: http://en.wikipedia.org/wiki/"
    + "List_of_time_zone_abbreviations";
  }

  /*
   * Identities
   */
  
  identity authentication-method {
    description
      "Base identity for user authentication methods.";
  }
  
  identity radius {
    base authentication-method;
    description
      "Indicates user authentication using RADIUS.";
    reference
      "RFC 2865: Remote Authentication Dial In User Service (RADIUS)
       RFC 5607: Remote Authentication Dial-In User Service (RADIUS)
                 Authorization for Network Access Server (NAS)
                 Management";
  }

  identity local-users {
    base authentication-method;
    description
      "Indicates password-based authentication of locally
       configured users.";
  }


  /*
   * Top-level container
   */

  container system {
    description
      "System group configuration.";
    
    leaf contact { 
      type string {
        length "0..255";
      }
      default "";
      reference
        "RFC 3418 - Management Information Base (MIB) for the
                    Simple Network Management Protocol (SNMP)
                    SNMPv2-MIB.sysContact";
    }
    
    leaf name {
      type string {
        length "0..255";
      }
      default "";
      reference
        "RFC 3418 - Management Information Base (MIB) for the
                    Simple Network Management Protocol (SNMP)
                    SNMPv2-MIB.sysName";
    }
    
    leaf location {
      type string {
        length "0..255";
      }
      default "";
      reference
        "RFC 3418 - Management Information Base (MIB) for the
                    Simple Network Management Protocol (SNMP)
                    SNMPv2-MIB.sysLocation";
    }

    container platform {
      description
        "Contains vendor-specific information for
         identifying the system platform and operating system.";
      reference
        "GNU coreutils homepage:
           http://www.gnu.org/software/coreutils
         Wikipedia: http://en.wikipedia.org/wiki/Uname";

      config false;

      leaf os-name {
        type string;
        description
          "The name of the operating system in use,
           for example 'Linux'";
        reference
          "uname --kernel-name";
      }

      leaf os-release {
        type string;
        description
          "The current release level of the operating
           system in use.  This string MAY indicate
           the OS source code revision.";
        reference
          "uname --kernel-release";
      }

      leaf os-version {
        type string;
        description
          "The current version level of the operating
           system in use.  This string MAY indicate
           the specific OS build date and target variant
           information.";
        reference
          "uname --kernel-version";
      }

      leaf machine {
        type string;
        description 
          "A vendor-specific identifier string representing
           the hardware in use.";
        reference
          "uname --machine";
      }

      leaf nodename {
        type string;
        description
          "The host name of this system.";
        reference
          "uname --nodename";
      }
    }

    container clock {
      description
        "Configuration and monitoring of the system
         date and time properties.";

      leaf current-datetime {
        description 
          "The current system date and time.";
        type yang:date-and-time;
        config false;
      }

      leaf boot-datetime {
        description
          "The system date and time when the NETCONF
           server last restarted.";
        type yang:date-and-time;
        config false;
      }

      choice timezone-info {
        description
          "Configure the system timezone information.";

        leaf tz-database-id {
          if-feature tz-database;
          description
            "The TZ database location identifier string
             to use for the system, such as 'Europe/Stockholm'.";
          type string;
        }

        leaf tz-enumeration-id {
          if-feature tz-enumeration;
          description
            "The timezone enumeration string to use
             for the system, such as 'CET'.";
          type string; 
          // FIXME: use TimezoneEnum typedef instead
          // see http://en.wikipedia.org/wiki/
          //           List_of_time_zone_abbreviations
        }

        leaf utc-offset {
          description
            "The number of minutes to add to UTC time to
             identify the timezone for this system.
             For example, 'UTC - 8:00 hours' would be
             represented as '-480'.";
          type int16 {
            range "-1439 .. 1439";
          }
        }
      }
    }

    container ntp {
      if-feature ntp;

      description
        "Configuration of the NTP client.";

      leaf use-ntp {
        description
          "Indicates that the system should attempt
           to synchronize the system clock with an
           NTP server from the 'ntp-server' list.";
        type boolean;
        default true;
      }

      list ntp-server {
        description
          "List of NTP servers to use for
           system clock synchronization.  If 'use-ntp'
           is 'true', then the system will attempt to
           contact and utilize the specified NTP servers.";

        key address;

        leaf address {
          description
            "The IP address or domain name of the NTP server.";
          type inet:host;
        }

        // TBD: add more parameters here
        // and/or vendors can add parameters via augment 
      }
    }

    container dns {
      description
        "Configuration of the DNS resolver.

         The 'domain' keyword of /etc/resolv.conf is not supported,
         since it is equivalent to 'search' with a single domain.";

      leaf-list search {
        type inet:host;
        ordered-by user;
      }
      leaf-list server {
        type inet:ip-address;
        ordered-by user;
        description
          "Addresses of the name servers that the resolver should
           query.

           Implementations MAY limit the number of entries in this
           leaf list.";
      }
      container options {
        description
          "Resolver options.  The set of available options has been
           limited to those that are generally available across
           different resolver implementations, and generally useful.";
        leaf ndots {
          type uint8;
          default "1";
        }
        leaf timeout {
          type uint8;
          units "seconds";
          default "5";
        }
        leaf attempts {
          type uint8;
          default "2";
        }
      }
    }

    container authentication {
      nacm:secure;
      if-feature authentication;

       description
         "The authentication configuration subtree.";

       leaf-list user-authentication-order {
         type identityref {
           base authentication-method;
         }
         must '(. = "sys:radius" and ../radius/server) or'
            + '(. != "sys:radius")' {
           error-message
             "When 'radius' is used, a radius server
              must be configured.";
         }
         ordered-by user;

         description
           "When the device authenticates a user with
            a password, it tries the authentication methods in this
            leaf-list in order.  If authentication with one method
            fails, the next method is used.  If no method succeeds,
            the user is denied access.

            If the 'radius' feature is advertised by the NETCONF
            server, the 'radius' identity can be added to this
            list.

            If the 'local-users' feature is advertised by the
            NETCONF server, the 'local-users' identity can be
            added to this list.";
       }

       container radius {
         if-feature radius;

         description
           "The RADIUS configuration for authentication.";

         list server {
           key address;
           ordered-by user;

           description
             "The RADIUS server configuration used by
              the device.";

           leaf address {
             type inet:host;
             description
               "The address of the RADIUS server.";
           }
           leaf port {
             type inet:port-number;
             default "1812";
             description
              "The port number of the RADIUS server.";
           }
           leaf shared-secret {
             type string;
             nacm:very-secure;
             description
               "The shared secret which is known to both the RADIUS
                client and server.";
             reference
               "RFC 2865: Remote Authentication Dial In User Service";
           }
         }
         container options {
           description
             "RADIUS client options.";

           leaf timeout {
             type uint8;
             units "seconds";
             default "5";
             description
               "The number of seconds the device will wait for a
                response from a RADIUS server before trying with a
                different server.";
           }
           leaf attempts {
             type uint8;
             default "2";
             description
               "The number of times the device will send a query to
                the RADIUS servers before giving up.";
           }
         }
       }

       list user {
         if-feature local-users;
         key name;

         description
           "The list of local users configured on this device.";
         
         leaf name {
           type string;
           description
            "The user name string identifying this entry.";
         }
         leaf password {
           type crypt-hash;
           description
             "The password for this entry.";
         }
         leaf ssh-dsa {
           type binary;
           description
             "The public DSA key for this entry.";
         }
         leaf ssh-rsa {
           type binary;
           description
             "The public RSA key for this entry.";
         }
       }
     }
  }

  rpc set-current-datetime {
    nacm:secure;
    description
      "Manually set the /system/clock/current-datetime leaf
       to the specified value.

       If the /system/ntp/ntp-in-use leaf exists and
       is set to 'true', then this operation will
       fail with error-tag 'operation-failed',
       and error-app-tag value of 'ntp-active'";
    input {
      leaf current-datetime {
        description 
          "The current system date and time.";
        type yang:date-and-time;
        mandatory true;
      }
    }
  }


}


	    ]]></artwork>
	</figure>
<t>&lt;CODE ENDS></t>
</section>
<section title="IANA Considerations" anchor="iana">
    <t>
This document registers a URI in the IETF XML registry
<xref target="RFC3688"/>. Following the format in RFC 3688, the following
registration is requested to be made.
    </t>
	<figure>
	    <artwork><![CDATA[
     URI: urn:ietf:params:xml:ns:yang:ietf-system

     Registrant Contact: The NETMOD WG of the IETF.

     XML: N/A, the requested URI is an XML namespace.
	    ]]></artwork>
	</figure>
    <t>
This document registers a YANG module in the YANG Module Names
registry <xref target="RFC6020"/>.
    </t>
	<figure>
	    <artwork><![CDATA[
  name:         ietf-system
  namespace:    urn:ietf:params:xml:ns:yang:ietf-system
  prefix:       sys
  reference:    RFC XXXX
	    ]]></artwork>
	</figure>
</section>
<section title="Security Considerations">
    <t>
TBD.
    </t>
</section>
</middle>
<back>
<references title="Normative References">

  <reference anchor="RFC2119">
    <front>
      <title>Key words for use in RFCs to Indicate Requirement Levels</title>
      <author initials="S." surname="Bradner" fullname="S.  Bradner">
        <organization>Harvard University</organization>
      </author>
      <date month="March" year="1997"/>
      <abstract>
        <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized.  This document defines these words as they should be interpreted in IETF documents.</t>
      </abstract>
    </front>
    <seriesInfo name="BCP" value="14"/>
    <seriesInfo name="RFC" value="2119"/>
    <format type="TXT" octets="4723" target="ftp://ftp.isi.edu/in-notes/rfc2119.txt"/>
  </reference>
  
  <reference anchor='RFC3688'>
    <front>
      <title>The IETF XML Registry</title>
      <author initials='M.' surname='Mealling' fullname='M. Mealling'>
        <organization /></author>
      <date year='2004' month='January' />
      <abstract>
        <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t></abstract></front>
    
    <seriesInfo name='BCP' value='81' />
    <seriesInfo name='RFC' value='3688' />
    <format type='TXT' octets='17325' target='http://www.rfc-editor.org/rfc/rfc3688.txt' />
  </reference>
  
<reference anchor="RFC4252">
  <front>
    <title>The Secure Shell (SSH) Authentication Protocol</title>
    <author initials="T." surname="Ylonen" fullname="T. Ylonen">
      <organization/>
    </author>
    <author initials="C." surname="Lonvick" fullname="C. Lonvick">
      <organization/>
    </author>
    <date year="2006" month="January"/>
    <abstract>
      <t>The Secure Shell Protocol (SSH) is a protocol for secure remote login and other secure network services over an insecure network.  This document describes the SSH authentication protocol framework and public key, password, and host-based client authentication methods.  Additional authentication methods are described in separate documents.  The SSH authentication protocol runs on top of the SSH transport layer protocol and provides a single authenticated tunnel for the SSH connection protocol. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4252"/>
  <format type="TXT" octets="34268" target="http://www.rfc-editor.org/rfc/rfc4252.txt"/>
</reference>

<reference anchor="RFC4253">
  <front>
    <title>The Secure Shell (SSH) Transport Layer Protocol</title>
    <author initials="T." surname="Ylonen" fullname="T. Ylonen">
      <organization/>
    </author>
    <author initials="C." surname="Lonvick" fullname="C. Lonvick">
      <organization/>
    </author>
    <date year="2006" month="January"/>
    <abstract>
      <t>The Secure Shell (SSH) is a protocol for secure remote login and other secure network services over an insecure network.&lt;/t&gt;&lt;t&gt; This document describes the SSH transport layer protocol, which typically runs on top of TCP/IP. The protocol can be used as a basis for a number of secure network services. It provides strong encryption, server authentication, and integrity protection. It may also provide compression.&lt;/t&gt;&lt;t&gt; Key exchange method, public key algorithm, symmetric encryption algorithm, message authentication algorithm, and hash algorithm are all negotiated.&lt;/t&gt;&lt;t&gt; This document also describes the Diffie-Hellman key exchange method and the minimal set of algorithms that are needed to implement the SSH transport layer protocol. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4253"/>
  <format type="TXT" octets="68263" target="http://www.rfc-editor.org/rfc/rfc4253.txt"/>
</reference>

<reference anchor="I-D.ietf-netconf-rfc4742bis">
  <front>
    <title>Using the NETCONF Configuration Protocol over Secure Shell (SSH)</title>
    <author initials="M" surname="Wasserman" fullname="Margaret Wasserman">
      <organization/>
    </author>
    <author initials="T" surname="Goddard" fullname="Ted Goddard">
      <organization/>
    </author>
    <date month="March" day="14" year="2011"/>
    <abstract>
      <t>This document describes a method for invoking and running the NETCONF protocol within a Secure Shell (SSH) session as an SSH subsystem. This document obsoletes RFC 4742.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-rfc4742bis-08"/>
  <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-ietf-netconf-rfc4742bis-08.txt"/>
</reference>

<!--
 curl http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-lear-iana-timezone-database-04.xml > .ref; xmllint -\-format .ref | grep -v '\?xml'

-->

<reference anchor="I-D.lear-iana-timezone-database">
  <front>
    <title>IANA Procedures for Maintaining the Timezone Database</title>
    <author initials="E" surname="Lear" fullname="Eliot Lear">
      <organization/>
    </author>
    <author initials="P" surname="Eggert" fullname="Paul Eggert">
      <organization/>
    </author>
    <date month="May" day="18" year="2011"/>
    <abstract>
      <t>Timezone information serves as a basic protocol element in protocols, such as the calendaring suite and DHCP.  The Timezone (TZ) Database specifies the indices used in various protocols, as well as their semantic meanings, for all localities throughout the world.  This database has been meticulously maintained and distributed free of charge by a group of volunteers, coordinated by a single volunteer who is now planning to retire.  This memo specifies IANA procedures involved with maintenance of the TZ database and associated code, including how to submit proposed updates, how decisions for inclusion of those updates are made, and the selection of a designated expert BY AND FOR the timezone community.  The intent of this memo is, to the extent possible, document existing practice and provide a means to ease succession.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-lear-iana-timezone-database-04"/>
  <format type="TXT" target="http://www.ietf.org/internet-drafts/draft-lear-iana-timezone-database-04.txt"/>
</reference>



  <reference anchor="RFC6020">
    <front>
      <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
      <author initials="M." surname="Bjorklund" fullname="M. Bjorklund">
        <organization/>
      </author>
      <date year="2010" month="October"/>
      <abstract>
        <t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS TRACK]</t>
      </abstract>
    </front>
    <seriesInfo name="RFC" value="6020"/>
    <format type="TXT" octets="324178" target="http://www.rfc-editor.org/rfc/rfc6020.txt"/>
  </reference>

</references>

</back></rfc>
