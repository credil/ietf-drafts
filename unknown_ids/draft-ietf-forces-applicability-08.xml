<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v5 rel. 3 U (http://www.xmlspy.com)
     by Daniel M Kohn (private) -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd"  [
<!ENTITY  rfc3654 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3654.xml'>
<!--
<!ENTITY % rfc2629 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml'>
-->
<!ENTITY % rfc3746 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3746.xml'>

<!ENTITY % rfc3015 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3015.xml'>
<!ENTITY % rfc3292 PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3292.xml'>


<!ENTITY FE-MODEL SYSTEM
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-forces-model-16.xml">
<!ENTITY FORCES-PROTOCOL SYSTEM
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-forces-protocol-22.xml">
<!ENTITY % FORCES-MIB PUBLIC ''
'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-forces-mib-10.xml'>

]>

<?xml-stylesheet type="text/xsl" "?>
<rfc category="info" docName="draft-ietf-forces-applicability-08" ipr="pre5378Trust200902">
	<?rfc toc="yes" ?>
	<?rfc symrefs="yes" ?>
	<?rfc sortrefs="yes"?>
	<?rfc iprnotified="no" ?>
	<?rfc strict="yes" ?>
	<?rfc compact="yes" ?>
	<front>
		<title>ForCES Applicability Statement</title>
		<author initials="A." surname="Crouch" fullname="Alan Crouch">
			<organization>Intel</organization>
			<address> 
			    <postal>
                    <street>2111 NE 25th Avenue</street>
                    <city>Hillsboro, OR 97124 USA</city>
                    <code></code>
                    <country>USA</country>
                 </postal>
                 <phone>+1 503 264 2196</phone>
                 <email>alan.crouch@intel.com</email>      
			</address>
		</author>
		<author initials="H." surname="Khosravi" fullname="Hormuzd Khosravi">
			<organization>Intel</organization>
			<address> 
			    <postal>
                    <street>2111 NE 25th Avenue</street>
                    <city>Hillsboro, OR 97124 USA</city>
                    <code></code>
                    <country>USA</country>
                 </postal>
                 <phone>1-503-264-0334 </phone>
                 <email>hormuzd.m.khosravi@intel.com</email>      
			</address>
		</author>
		<author initials="A." surname="Doria" fullname="Avri Doria">
			<organization>LTU</organization>
			<address> 
			    <postal>
                    <street>Lulea University of Technology</street>
                    <city></city>
                    <code></code>
                    <country>Sweden</country>
                 </postal>
                 <phone>+46 73 277 1788</phone>
                 <email>avri@acm.org</email>      
			</address>
		</author>
		<author initials="X." surname="Wang" fullname="Xin-ping Wang">
			<organization>Huawei </organization>
			<address>
			    <postal>
                    <street></street>
                    <city>Beijing</city>
                    <code></code>
                    <country>China</country>
                 </postal>
                 <phone>+86 10 82836067</phone>
                 <email>carly.wang@huawei.com</email>
			</address>
		</author>
                <author fullname="Kentaro Ogawa" initials="K." surname="Ogawa">
                        <organization>NTT Corporation</organization>
	                <address>
	                    <postal>
                    <street>3-9-11 Midori-cho</street>
		    <city>Musashino-shi, Tokyo</city>
                    <code>180-8585</code>
		    <country>Japan</country>
        	</postal>
	        <email>ogawa.kentaro@lab.ntt.co.jp</email>
	               </address>
                </author>
		<date month="February" year="2010"/>
		<area></area>
		<workgroup>forces</workgroup>
		<abstract>
			<t>The ForCES protocol defines a standard framework and mechanism for 
			the interconnection between Control Elements and Forwarding Elements 
            in IP routers and similar devices.  In this document we describe the 
            applicability of the ForCES model and protocol.  We provide example 
            deployment scenarios and functionality, as well as document 
            applications that would be inappropriate for ForCES.</t>
		</abstract>	
	</front>
	<middle>
		<section title="Purpose">
		<t>The purpose of the ForCES Applicability Statement is to capture the 
		intent of the ForCES protocol <xref target="I-D.ietf-forces-protocol" />
		designers as to how the protocol could be used (in conjunction with the
		ForCES model <xref target="I-D.ietf-forces-model" />).  
		</t>
		</section>
		<section title="Overview">
		<t>The ForCES protocol defines a standard framework and mechanism for 
		the  exchange  of  information  between  the  logically  separate 
		functionality of the control and data forwarding planes of IP 
		routers and similar devices.  It focuses on the communication 
		necessary for separation of control plane functionality such as 
		routing protocols, signaling protocols, and admission control from 
		data  forwarding  plane  per-packet  activities  such  as  packet 
		forwarding, queuing, and header editing. </t>	
		<t>This document defines the applicability of the ForCES mechanisms. It 
		describes types of configurations and settings where ForCES is most 
		appropriately applied.  This document also describes scenarios and 
		configurations where ForCES would not be appropriate for use.</t>
		
		</section>
		<section title="Terminology">
		<t>A set of terminology associated with ForCES is defined in [3, 4]. 
		That terminology is reused here and the reader is directed to [3, 4] 
		for the following definitions: </t>
		<t>o    CE: Control Element. </t>
		<t>o    FE: Forwarding Element. </t>
		<t>o    ForCES: ForCES protocol.</t>
		<t>o    TML: Transport Mapping Layer.</t>
		</section>
		<section title="Applicability to IP Networks">
		<t>The purpose of this section is to list the areas of ForCES
        applicability in IP network devices.  Relatively low end routing systems
        may be implemented on simple hardware which performs both
        control and packet forwarding functionality.  ForCES may not make
        sense for such devices.</t>
		<t>Higher end routing systems typically distribute work amongst
        interface processing elements, and these devices (FEs) therefore need to
        communicate with the control element(s) to perform their job.  ForCES
        provides a standard way to do this communication.</t>
		<t>The remainder of this section lists the applicable services which 
		ForCES may support, applicable FE functionality, applicable CE-FE 
		link scenarios, and applicable topologies in which ForCES may be 
		deployed. </t>
			<section title="Applicable Services">
			<t>In this section we describe the applicability of ForCES for the 
			following control-forwarding plane services: </t>
			<t>o    Discovery, Capability Information Exchange </t>
			<t>o    Topology Information Exchange</t>
			<t>o    Configuration </t>
			<t>o    Routing Exchange</t>
			<t>o    QoS Exchange</t>
			<t>o    Security Exchange</t>
			<t>o    Filtering Exchange</t>
			<t>o    Encapsulation/Tunneling Exchange</t>
			<t>o    NAT and Application-level Gateways</t>
			<t>o    Measurement and Accounting</t>
			<t>o    Diagnostics</t>
			<t>o    CE Redundancy or CE Failover</t>
				<section title="Discovery, Capability Information Exchange">
				<t>Discovery is the process by which CEs and FEs learn of each other's 
				existence.  ForCES assumes that CEs and FEs already know sufficient 
				information to begin communication in a secure manner.  
				The ForCES protocol is only applicable after CEs and FEs have found 
				each other.  ForCES makes no assumption about whether discovery was 
				performed using a dynamic protocol or merely static configuration.</t>
				<t>During the discovery phase, CEs and FEs exchange capability 
				information with each other.  For example, the FEs express the 
				number of interface ports they provide, as well as the static and 
				configurable attributes of each port. </t>
				<t>In addition to initial configuration, the CEs and FEs also 
				exchange dynamic configuration changes using ForCES.  For example, 
				FEs asynchronously inform the CE of an increase/decrease in 
				available resources or capabilities on the FE. </t>
				</section>
				<section title="Topology Information Exchange">
				<t>In this context, topology information relates to how the FEs are 
				interconnected with each other with respect to packet forwarding. 
				Topology discovery is outside the scope of the ForCES 
				protocol. An implementation can choose its own method of topology 
				discovery (for example use a standard topology discovery protocol like 
				LLDP, BFD; or apply a static topology configuration policy). Once the 
				topology is established, ForCES protocol may be 
				used to transmit the resulting information to the CE. </t>
				</section>
				<section title="Configuration">
				<t>ForCES is used to perform FE configuration.  For example, CEs set 
				configurable FE attributes such as IP addresses, etc. for their 
				interfaces. </t>
				</section>
				<section title="Routing Exchange">
				<t>ForCES may be used to deliver packet forwarding information 
				resulting from CE routing calculations.  For example, CEs may send 
				forwarding table updates to the FEs, so that they can make 
				forwarding decisions. FEs may inform the CE in the event of a 
				forwarding table miss. </t>
				</section>
				<section title="QoS Exchange">
				<t>ForCES may be used to exchange QoS capabilities between CEs and FEs. 
				For example, an FE may express QoS capabilities to the CE.  Such 
				capabilities might include metering, policing, shaping, and queuing 
				functions.  The CE may use ForCES to configure these capabilities.</t>
				</section>
				<section title="Security Exchange">
				<t>ForCES may be used to exchange Security information between CEs and 
				FEs. For example, the FE may use ForCES to express the types of 
				encryption that it is capable of using in an IPsec tunnel.  The CE 
				may use ForCES to configure such a tunnel.</t>
				</section>
				<section title="Filtering Exchange and Firewalls">
				<t>ForCES may be used to exchange filtering information.  For example, 
				FEs may use ForCES to express the filtering functions such as 
				classification and action that they can perform, and the CE may 
				configure these capabilities.</t>
				</section>
				<section title="Encapsulation, Tunneling Exchange">
				<t>ForCES may be used to exchange encapsulation capabilities of an FE, 
				such as tunneling, and the configuration of such capabilities.</t>
				</section>
				<section title="NAT and Application-level Gateways">
				<t>ForCES may be used to exchange configuration information for Network 
				Address Translators.  Whilst ForCES is not specifically designed for 
				the configuration of application-level gateway functionality, this 
				may be in scope for some types of application-level gateways.</t>
				</section>
				<section title="Measurement and Accounting">
				<t>ForCES may be used to exchange configuration information regarding 
				traffic measurement and accounting functionality.  In this area, 
				ForCES may overlap somewhat with functionality provided by 
				alternative network management mechanisms such as SNMP.  In some 
				cases ForCES may be used to convey information to the CE to be 
				reported externally using SNMP.</t>
				</section>
				<section title="Diagnostics">
				<t>ForCES may be used for CEs and FEs to exchange diagnostic 
				information. For example, an FE can send self-test results to the 
				CE.</t>
				</section>
				<section title="Redundancy and Failover">
				<t>The ForCES architecture includes mechanisms which allow
                                for multiple redundant CEs and FEs in a ForCES NE.
                                The ForCES model LFB definitions provide sufficient component
                                details via component identifiers to be universally unique within
                                an NE. The ForCES protocol includes mechanisms to facilitate
                                transactions as well as atomicity across the NE.</t>
                                <t>Given the above it is possible to deploy redundant CEs and
                                FEs which incorporate failover.</t>
				</section>
			</section>
			<section title="CE-FE Link Capability">
			<t>When using ForCES, the bandwidth of the CE-FE link is a 
			consideration, and cannot be ignored.  For example, sending a full 
			routing table is reasonable over a high bandwidth link, but could be
			non-trivial over a lower-bandwidth link.  ForCES should be sufficiently future-proof to be applicable in 
			scenarios where routing tables grow to several orders of magnitude 
			greater than their current size.  
			However, we also note that not all IP routers need full routing 
			tables.</t>
			</section>
			<section title="CE/FE Locality">
			<t>	ForCES is intended for environments where one of the following 
			applies: </t>
			<t>o  The control interconnect is some form of local bus, switch, or 
			LAN, where reliability is high, closely controlled, and not 
			susceptible to external disruption that does not also affect the CEs 
			and/or FEs.</t>
			<t>o  The control interconnect shares fate with the FE's forwarding 
			function.  Typically this is because the control connection is also 
			the FE's primary packet forwarding connection, and so if that link 
			goes down, the FE cannot forward packets anyway.</t>
			<t>The key guideline is that the reliability of the device should not 
			be significantly reduced by the separation of control and forwarding 
			functionality. </t>
			<t>Taking this into account, ForCES is applicable in the following CE/FE
            localities:</t>
            <t>o single box NE: chassis with multiple CEs and FEs setup. ForCES is applicable 
			in localities consisting of control and forwarding elements which are components 
			in the same physical box.</t>
			<t>Example: a network element with a single control blade, and one or 
			more forwarding blades, all present in the same chassis and sharing 
			an interconnect such as Ethernet or PCI.  In this locality, the 
			majority of the data traffic being forwarded typically does not 
			traverse the same links as the ForCES control traffic.</t>
            <t>o multiple boxes: separated CE and FE where physical locality could be same 
			rack, room, building, or long distance which could span across continents and oceans.
			ForCES is applicable in localities consisting of control and forwarding elements which 
			are separated by a single hop or multiple hops in the network.</t>
			</section>
		</section>
		
		<section title="Security Considerations">
		<t>The ForCES architecture allows for a variety of security levels[6].
             

   When operating under a secured physical environment, or for other operational 
                concerns (in some cases performance issues) the operator may turn off 
                all the security functions between CE and FE. When the operator makes 
                a decision to secure the path between the FE and CE then the operator
                chooses from one of the options provided by the TML. Security choices
                provided by the TML take effect during the pre-association phase of
                the ForCES protocol. An operator may choose to use all, some or none of
                the security services provided by the TML in a CE-FE connection.
                A ForCES NE is required to provide CE/FE node authentication services,
                and may provide message integrity and confidentially services.
                The NE may provide these services by employing IPSEC or TLS depending
                on the choice of TML used in the deployment of the NE.</t>
		</section>
		<section title="ForCES Manageability">
			<t>From one perspective, it is a single network element; 
                        as an example if the ForCES NE is specifically a router
                        that needs to be managed then it is managed in essentially
                        the same way any router is managed. From another perspective element 
			management can view the individual entities and interfaces that make 
			up a ForCES NE.</t>
			<section title="NE as an atomic element">
			<t>From the ForCES requirements RFC 3654, Section 4, point 4:</t>
			<t>		A NE must support the appearance of a single functional device. </t>	
			<t>As a single functional device a ForCES NE runs protocols and each of 
			the protocols has it own existing manageability aspects that are 
			documented elsewhere. As an example, router would also have
                        a configuration interface.  When viewed in this manner, the NE is                                   controlled as a single routing entity and no new management beyond
                        what is already available for routers and routing protocols
                        would be required for a ForCES NE. </t>
			</section>	
			<section title="NE as composed of manageable elements">
			<t>When viewed as a decomposed set of elements from the management 
			perspective, the ForCES NE is divided into a set of one of more 
			Control Elements, Forwarding Elements and the interfaces between 
			them. The interface functionality between the CE and the FE is 
			provided by the ForCES protocol.  As with all IETF protocols a MIB 
			is provided for the purposes of managing the protocol.</t>
			<t>Additionally the architecture makes provision for configuration 
			control of the individual CEs and FEs. This is handled by elements 
			named FE manager (FEM) and the CE manager (CEM). Specifically from 
			the ForCES requirements 
			RFC [RFC 3654], Section 4, point 4: </t>
			<t>However, external entities (e.g., FE managers and CE managers) 
			may have direct access to individual ForCES protocol elements  
			for providing information to transition them from the  
			pre-association to post-association phase.</t>
			</section>
			<section title="ForCES Protocol MIB">
			<t>The ForCES MIB <xref target="I-D.ietf-forces-mib" /> is a 
			primarily read-only MIB that captures 
			information related to the ForCES protocol. This includes  
			state information about the associations between CE(s) and  
			FE(s) in the NE.</t>
			<t>The ForCES MIB does not include information that is specified in 
			other MIBs, such as packet counters for interfaces, etc.</t>
			<t>More specifically, the information in the ForCES MIB relative to 
			associations includes:</t>
			<t>- identifiers of the elements in the association</t>   
			<t>- state of the association</t>   
			<t>- configuration parameters of the association</t>   
			<t>- statistics of the association </t>
				<section title="MIB Management of an FE">
				<t>While it is possible to manage a FE from a element manager, several 
				requirements relating to this have been included in the ForCES 
				Requirements.</t>
				<t>From the ForCES Requirements [RFC 3654], Section 4, point 14:</t>
				<t>1. The ability for a management tool (e.g., SNMP) to be used  
				to read (but not change) the state of FE should not be 
				precluded.</t>
				<t>2. It must not be possible for management tools  
				(e.g., SNMP, etc) to change the state of a FE in a manner  
				that affects overall NE behavior without the CE being  
				notified.</t>
				<t>The ForCES Requirements [RFC 3654], Section 5.7, goes further in 
				discussing the manner in which FEs should handle management requests 
				that are specifically directed to the FE: </t>
				<t>For a ForCES NE that is an IP router, RFC 1812 [2] also
                                dictates that "Routers must be manageable  
				by SNMP". In general, for the post-association phase, most  
				external management tasks (including SNMP) should be done  
				through interaction with the CE in order to support the 
				appearance of a single functional device. Therefore, it is 
				recommended that an SNMP agent be implemented by CEs and 
				that the SNMP messages received by FEs be redirected to their 
				CEs. AgentX framework defined in RFC 2741 ([6]) may be applied 
				here such that CEs act in the role of master agent to process 
				SNMP protocol messages while FEs act in the role of subagent  
				to provide access to the MIB objects residing on FEs.  AgentX 
				protocol messages between the master agent (CE) and the  
				subagent (FE) are encapsulated and transported via ForCES,  
				just like data packets from any other application layer 
				protocols.</t>
				</section>	
			</section>		
			<section title="The FEM and CEM">
			<t>Though out of scope for the initial ForCES specification effort, the 
			ForCES architecture include two entities, the CE Manager (CEM) and 
			the FE Manager (FEM).   
			From the ForCES Protocols Specification <xref target="I-D.ietf-forces-protocol" />.</t>
			<t>CE Manager (CEM) - A logical entity responsible for generic CE 
			management tasks.  It is particularly used during the pre-association
			phase to determine with which FE(s) a CE  
			should communicate.</t>
			<t>FE Manager (FEM) - A logical entity responsible for generic  
			FE management tasks.  It is used during pre-association phase  
			to determine with which CE(s) an FE should communicate.</t>
			</section>	
		</section>
		<section title="Contributors">
			<t>The following are the contributors who were instrumental in the creation
			of earlier releases of this document or who gave good suggestions to this document.</t>
			<t>Mark Handley, ICIR.</t>
		</section>
<!--
		<section title="References">
			<section title="Normative References">
			<t>1. S. Bradner, "The Internet Standards Process -Revision 3", RFC 
			2026, October 1996.</t>
            <t>2. S. Bradner, "Keywords for use in RFCs to Indicate Requirement 
			Levels", RFC2119 (BCP), IETF, March 1997. </t>
            <t>3. Khosravi, et al., "Requirements for Separation of IP Control and 
			Forwarding" RFC 3654, November 2003.</t>
			<t>4. L. Yang, et al., "ForCES Architectural Framework" RFC 3746, 
			April 2004. </t>
			<t>5. Yang, L., Halpern, J., Gopal, R., DeKok, A., Haraszti, Z.,and S. 
			Blake, "ForCES Forwarding Element Model", Feb. 2005. </t>
			<t>6. A. Doria, et al., "ForCES Protocol Specification",draft-ietf-
			forces-protocol-22.txt, March 2009.</t>
			</section>

			<section title="Informative References">
			<t>7. A. Doria, F. Hellstrand, K. Sundell, T. Worster, "General Switch 
			Management Protocol (GSMP) V3" RFC 3292, June 2002. </t>
			<t>8. Andersson et al., "LDP Specification" RFC 3036, January 2001</t>
            <t>9. F. Cuervo et al., "Megaco Protocol Version 1.0" RFC 3015, November 
			2000 </t>
			</section>	
		</section>
-->

		<section title="IANA Considerations">
			<t>This document has no IANA actions.		</t>
			<t>[RFC Editor: please remove this section prior to publication.]</t>
		</section>	
		
		<section title="Acknowledgments">
			<t>Many of the colleagues in our companies and participants in the
			ForCES mailing list have provided invaluable input into this work.
			Particular thanks to Jamal Hadi Salim.
		</t>
		</section>	
	</middle>
	<back>
<references title="Normative References">
<!-- 5378 is a replacement for 2026; why is it here? 
&rfc5378;
-->

&rfc3654;
&FE-MODEL;
&FORCES-MIB;
&FORCES-PROTOCOL;
&rfc2629;
&rfc3746;


</references>
<references title="Informative References">

&rfc3292;
&rfc3015;
</references>
	</back>
</rfc>
