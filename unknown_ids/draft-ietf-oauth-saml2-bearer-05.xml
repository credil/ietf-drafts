<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'>
<?xml-stylesheet type='text/xsl' 'rfc2629.xslt ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->                                                                                         
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std"
     docName="draft-ietf-oauth-saml2-bearer-05"
     ipr="trust200902">
    <!-- category values: std, bcp, info, exp, and historic
ipr values: full3667, noModification3667, noDerivatives3667
you can add the attributes updates="NNNN" and obsoletes="NNNN"
they will automatically be output with "(if approved)" -->

    <!-- ***** FRONT MATTER ***** -->

    <front>
        <!-- The abbreviated title is used in the page header - it is only necessary if the
 full title is longer than 39 characters -->

        <title abbrev="OAuth SAML Assertion Profiles">SAML 2.0 Bearer Assertion Profiles for OAuth 2.0</title>

        <!-- add 'role="editor"' below for the editors if appropriate -->
        <author fullname="Brian Campbell" initials="B." role="editor" surname="Campbell">
            <organization>Ping Identity Corp.</organization>
            <address>
                <email>brian.d.campbell@gmail.com</email>
            </address>
        </author>

        <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
            <organization>Salesforce.com</organization>
            <address>
                <email>cmortimore@salesforce.com</email>
            </address>
        </author>

        <date month="Aug" year="2011"/>

        <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
           in the current day for you. If only the current year is specified, xml2rfc will fill
       in the current day and month for you. If the year is not the current one, it is
       necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
       purpose of calculating the expiry date).  With drafts it is normally sufficient to
       specify just the year. -->

        <!-- Meta-data Declarations -->

        <area>Internet</area>

        <workgroup>&nbsp;</workgroup> 

        <!-- WG name at the upperleft corner of the doc,
IETF is fine for individual submissions.
If this element is not present, the default is "Network Working Group",
which is used by the RFC Editor as a nod to the history of the IETF. -->

        <keyword>OAuth</keyword>
        <keyword>SAML</keyword>
        <keyword>Assertion</keyword>


        <!-- Keywords will be incorporated into HTML output
files in a meta tag but they have no effect on text or nroff
output. If you submit your draft to the RFC Editor, the
keywords will be used for the search engine. -->

        <abstract>
            <t>This specification defines the use of a SAML 2.0 Bearer Assertion as means for requesting an OAuth 2.0 access
                token as well as for use as a means of client authentication.
            </t>
        </abstract>
    </front>

    <middle>
        <section title="Introduction">

            <t>The <xref target="OASIS.saml-core-2.0-os">Security Assertion Markup Language (SAML) 2.0</xref>
                is an XML-based framework that allows identity and security information to be shared across security domains.
                The SAML specification, while primarily targeted at providing cross domain Web browser single sign-on,
                was also designed to be modular and extensible to facilitate use in other contexts.
            </t>

            <t>    
              The Assertion, an XML security token, is a fundamental construct of SAML that is often adopted
                for use in other protocols and specifications.
                An Assertion is generally issued by an identity provider and consumed by a service provider who relies
                on its content to identify the Assertion's subject for security related purposes.
            </t>

            <t>
                <xref target="I-D.ietf.oauth-v2">The OAuth 2.0 Authorization Protocol</xref>
                provides
                a method for making authenticated HTTP requests to a resource using an access token.
                Access tokens are issued to third-party clients by an
                authorization server (AS) with the (sometimes implicit) approval of the resource owner.
                In OAuth, an authorization grant is an abstract term used to describe
                intermediate credentials that represent the resource owner
                authorization.  An authorization grant is used by the client to obtain an access token.
                Several authorization grant types are defined to support a wide range
                of client types and user experiences.
                OAuth also allows for the definition of new extension grant types
                to support additional clients or to provide a bridge between OAuth and other trust frameworks.
                Finally, OAuth allows the definition of additional authentication mechanisms to be used by clients when interacting with the authorization server.
            </t>

            <t>The <xref target="I-D.ietf.oauth-assertions">OAuth 2.0 Assertion Profile</xref> is an abstract extension to OAuth 2.0 that provides a general
               framework for the use of assertions as client credentials and/or authorization grants with OAuth 2.0.
               This specification profiles the <xref target="I-D.ietf.oauth-assertions">OAuth 2.0 Assertion Profile</xref> to define an extension grant type that usues a SAML 2.0 Bearer Assertion to
               request an OAuth 2.0 access token as well as for use as client credentials.
               The format and processing rules for the SAML Assertion defined in this specification are intentionally similar,
               though not identical, to those in the Web Browser SSO Profile defined in <xref target="OASIS.saml-profiles-2.0-os">SAML Profiles</xref>.
               This specification is reusing, to the extent reasonable, concepts and patterns from that well-established Profile.
            </t>

            <t>This document defines how a SAML Assertion can be used to request an access token when a client wishes to utilize an existing trust
               relationship, expressed through the semantics of (and digital signature calculated over) the SAML Assertion,
               without a direct user approval step at the authorization server.  It also defines how a SAML Assertion can be used as a client authentication mechanism.
               The use of an Assertion for client authentication is orthogonal and separable from
               using an Assertion as an authorization grant and can be used either in combination or in isolation.
            </t>
            <t>The process by which the client obtains the SAML Assertion, prior to exchanging it with the authorization server or using it for client authentication, is out of scope.</t>

            <section title="Notational Conventions">
                <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                    "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
                    document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.
                </t>
                <t>
                    Unless otherwise noted, all the protocol parameter names and values are case sensitive.
                </t>
            </section>
        </section>
        <section title="HTTP Parameter Bindings for Transporting Assertions">
            <t>
              The <xref target="I-D.ietf.oauth-assertions">OAuth 2.0 Assertion Profile</xref> defines generic HTTP parameters for transporting assertions during interactions with a token endpoint.
              This section defines the values of those parameters for use with SAML 2.0 Bearer Assertions. 
            </t>
            <section title="Using SAML Assertions as Authorization Grants">
              <t>To use a SAML Bearer Assertion as an authorization grant, use the following paramter values and encodings.</t>
              <t>The value of "grant_type" parameter MUST be "urn:ietf:params:oauth:grant-type:saml2-bearer"</t>
              <t>
                The value of the "assertion" parameter MUST contain a single SAML 2.0 Assertion. The SAML Assertion XML data MUST be encoded using base64url,
                where the encoding adheres to the definition in Section 5 of <xref target="RFC4648">RFC4648</xref>
                and where the padding bits are set to zero.
                To avoid the need for subsequent encoding steps (by <xref target='W3C.REC-html401-19991224'>"application/x-www-form-urlencoded"</xref>, for example),
                the base64url encoded data SHOULD NOT be line wrapped and pad characters ("=") SHOULD NOT be included.
              </t>
            </section>
            <section title="Using SAML Assertions for Client Authentication">
              <t>To use a SAML Bearer Assertion for client authentication grant, use the following paramter values and encodings.</t>
              <t>The value of "client_assertion_type" parameter MUST be "urn:ietf:params:oauth:client-assertion-type:saml2-bearer"</t>
              <t>
                The value of the "client_assertion" parameter MUST contain a single SAML 2.0 Assertion. The SAML Assertion XML data MUST be encoded using base64url,
                where the encoding adheres to the definition in Section 5 of <xref target="RFC4648">RFC4648</xref>
                and where the padding bits are set to zero.
                To avoid the need for subsequent encoding steps (by <xref target='W3C.REC-html401-19991224'>"application/x-www-form-urlencoded"</xref>, for example),
                the base64url encoded data SHOULD NOT be line wrapped and pad characters ("=") SHOULD NOT be included.
              </t>
            </section>
        </section>

        <section anchor="assertion_reqs" title="Assertion Format and Processing Requirements">
                <t>
                  In order to issue an access token response as described in <xref target="I-D.ietf.oauth-v2">The OAuth 2.0 Authorization Protocol</xref>
                  or to rely on an assertion for client authentication,
                  the authorization server MUST validate the Assertion according to the criteria below.
                  Application of additional restrictions and policy are at the discretion of the authorization server.
                </t>
                <t>
                    <list style="symbols">
                        <t>The Assertion's &lt;Issuer&gt; element MUST contain a unique identifier for the entity that
                            issued the Assertion. 
                        </t>
                        <t>The Assertion MUST contain an &lt;AudienceRestriction&gt; element with an &lt;Audience&gt;
                            element containing a URI reference that identifies the
                            authorization server, or the service provider SAML entity of its controlling domain, as an
                            intended audience. The token endpoint URL of the authorization server MAY be used as an
                            acceptable value for an &lt;Audience&gt; element.
                            The authorization server MUST verify that it is an intended audience for
                            the Assertion.
                        </t>
                        <t>The Assertion MUST contain a &lt;Subject&gt; element. The subject MAY identify the resource owner for
                            whom the access token is being requested.
                            For client authentication, the Subject MUST be the client_id of the OAuth client.  When using
                            assertions as an authorization grant, the Subject SHOULD identify
                            an authorized accessor for whom the access token is being requested (typically the resource owner, or an authorized delegate).
                            Additional information identifying the subject/principal of the transaction MAY be included in an &lt;AttributeStatement&gt;.
                        </t>

                        <t>
                          The Assertion MUST have an expiry that limits the time window during which the it can be used.
                          The expiry can be expressed either as the NotOnOrAfter attribute
                          of the &lt;Conditions&gt; element or as the NotOnOrAfter attribute of a suitable &lt;SubjectConfirmationData&gt; element.
                          <vspace blankLines='1'/>
                          If the Assertion has a NotOnOrAfter attribute on the &lt;Conditions&gt; element,
                          the authorization server MUST verify that the NotOnOrAfter instant has not
                          passed, subject to allowable clock skew between systems.  The
                          authorization server SHOULD reject assertions with an expiry instant that is unreasonably far in the future.

                          <vspace blankLines='1'/>

                          If the Assertion does not have a NotOnOrAfter attribute on the &lt;Conditions&gt; element, then
                          the Assertion's &lt;Subject&gt; element MUST contain at least one &lt;SubjectConfirmation&gt;
                          element that allows the authorization server to confirm it as a Bearer Assertion.
                          Conditions for bearer subject confirmation are described below.

                          <list style="symbols">
                            <t>The &lt;SubjectConfirmation&lt; MUST have a Method attribute with a value of
                              "urn:oasis:names:tc:SAML:2.0:cm:bearer" and MUST contain a &lt;SubjectConfirmationData&gt;
                              element.
                            </t>
                            <t>The &lt;SubjectConfirmationData&gt; element MUST have a Recipient attribute with a value
                              indicating the token endpoint URL of the authorization server. The authorization server MUST
                              verify that the value of the Recipient attribute matches the token endpoint
                              URL (or an acceptable alias) to which the Assertion was delivered.
                            </t>
                            <t>The &lt;SubjectConfirmationData&gt; element MUST have a NotOnOrAfter attribute
                              that limits the window during which the Assertion can be confirmed. The authorization server
                              MUST verify that the NotOnOrAfter instant has not passed, subject to allowable clock skew between systems.
                              The authorization server MAY ensure that Bearer Assertions are not replayed, by maintaining
                              the set of used ID values for the length of time for which the Assertion would be considered
                              valid based on the NotOnOrAfter attribute in the &lt;SubjectConfirmationData&gt;.
                              The authorization server MAY reject assertions with a NotOnOrAfter instant that is unreasonably far in the future.
                            </t>
                            <t>
                              The &lt;SubjectConfirmationData&gt; element MAY also contain an Address attribute limiting
                              the client address from which the Assertion can be delivered.
                              Verification of the Address is at the discretion of the authorization server.
                            </t>
                          </list>
                        </t>

                        <t>If the Assertion issuer authenticated the subject, the Assertion SHOULD contain a single &lt;AuthnStatement&gt;
                            representing that authentication event.
                        </t>
                        <t>If the Assertion was issued with the intention that the presenter act autonomously on behalf of
                            the subject, an &lt;AuthnStatement&gt; SHOULD NOT be included.
                            The presenter SHOULD be identified in the &lt;NamseID&gt; or similar element, the &lt;SubjectConfirmation&gt; element, or by other available means like <xref
                              target="OASIS.saml-deleg-cs"/>.
                        </t>
                        <t>
                            Other statements, in particular &lt;AttributeStatement&gt; elements, MAY be included in the
                            Assertion.
                        </t>

                        <t>The Assertion MUST be digitally signed by the issuer and the authorization server MUST verify
                            the signature.
                        </t>
                        <t>Encrypted elements MAY appear in place of their plain text counterparts as defined in
                            <xref target="OASIS.saml-core-2.0-os"/>.
                        </t>
                        <t>The authorization server MUST verify that the Assertion is valid in all other respects per
                            <xref target="OASIS.saml-core-2.0-os"/>, such as (but not limited to) evaluating all content within the Conditions element including the NotOnOrAfter and NotBefore attributes, rejecting unknown condition types, etc.
                        </t>
                    </list>
                </t>
                <section title="Authorization Grant Processing">
                  <t>If present, the authorization server MUST also validate the client credentials.</t>    
                  <t>Authorization servers SHOULD issue access tokens with a limited
                     lifetime and require clients to refresh them by requesting a new
                     access token using the same assertion, if it is still valid, or with a new assertion.
                     The authorization server SHOULD NOT issue a refresh token.</t>
                    <t>If the Assertion is not valid, or its subject confirmation requirements cannot be met, the
                    authorization server MUST construct an error response as defined in <xref target="I-D.ietf.oauth-v2"/>.
                    The value of the error parameter MUST be the "invalid_grant" error code. The authorization server
                    MAY include additional information regarding the reasons the Assertion was considered invalid using the
                    error_description or error_uri parameters.
                          <figure>
                              <preamble>For example:</preamble>
                                <artwork>
            <![CDATA[
HTTP/1.1 400 Bad Request
Content-Type: application/json
Cache-Control: no-store

{
  "error":"invalid_grant",
  "error_description":"Audience validation failed"
}
]]>
                              </artwork>
                            </figure>
                  </t>
                </section>
                <section title="Client Authentication Processing">

                  <t>If the client Assertion is not valid, or its subject confirmation requirements cannot be met, the
                  authorization server MUST construct an error response as defined in <xref target="I-D.ietf.oauth-v2"/>.
                  The value of the error parameter MUST be the "invalid_client" error code. The authorization server
                  MAY include additional information regarding the reasons the Assertion was considered invalid using the
                  error_description or error_uri parameters.

            </t>
          </section>

            </section>

             <section anchor="example" title="Authorization Grant Example (non-normative)">
                <t>Though non-normative, the following examples illustrate what a conforming Assertion and access token request would look like.
                </t>
      <figure title='Example SAML 2.0 Assertion' anchor='assertion'>
          <preamble>
              Below is an example SAML 2.0 Assertion (whitespace formatting is for
              display purposes only):

          </preamble>
                <artwork>
<![CDATA[
<Assertion IssueInstant="2010-10-01T20:07:34.619Z"
  ID="ef1xsbZxPV2oqjd7HTLRLIBlBb7"
  Version="2.0"
  xmlns="urn:oasis:names:tc:SAML:2.0:assertion">
 <Issuer>https://saml-idp.example.com</Issuer>
 <ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  [...omitted for brevity...]
 </ds:Signature>
 <Subject>
  <NameID
    Format="urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress">
   brian@example.com
  </NameID>
  <SubjectConfirmation
    Method="urn:oasis:names:tc:SAML:2.0:cm:bearer">
   <SubjectConfirmationData
     NotOnOrAfter="2010-10-01T20:12:34.619Z"
     Recipient="https://authz.example.net/token.oauth2"/>
   </SubjectConfirmation>
  </Subject>
  <Conditions>
    <AudienceRestriction>
      <Audience>https://saml-sp.example.net</Audience>
    </AudienceRestriction>
  </Conditions>
  <AuthnStatement AuthnInstant="2010-10-01T20:07:34.371Z">
    <AuthnContext>
      <AuthnContextClassRef>
        urn:oasis:names:tc:SAML:2.0:ac:classes:X509
      </AuthnContextClassRef>
    </AuthnContext>
  </AuthnStatement>
</Assertion>]]>
                </artwork>
              </figure>
                <figure anchor="http" title="Example Request">
            <preamble>
              To present the Assertion shown in the previous example as part of an access token request, for example,
               the client might make the following HTTPS request (line breaks are for
              display purposes only):
            </preamble>
            <artwork>
              <![CDATA[
POST /token.oauth2 HTTP/1.1
Host: authz.example.net
Content-Type: application/x-www-form-urlencoded

grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Asaml2-
bearer&assertion=PEFzc2VydGlvbiBJc3N1ZUluc3RhbnQ9IjIwMTEtMDU
[...omitted for brevity...]aG5TdGF0ZW1lbnQ-PC9Bc3NlcnRpb24-]]>
            </artwork>
          </figure>
            </section>

        <section anchor="Security" title="Security Considerations">
            <!--<t>All drafts are required to have a security considerations section.
                See
                <xref target="RFC3552">RFC 3552</xref>
                for a guide.
            </t>   -->
          <t>No additional considerations beyond those described within the <xref target="I-D.ietf.oauth-v2">OAuth 2.0 Protocol Framework</xref>
            and in the <xref target="OASIS.saml-sec-consider-2.0-os">Security and Privacy Considerations for the OASIS Security Assertion Markup Language (SAML) V2.0</xref>.</t>
          <!-- "8. Security considerations - you could probably just refer to the core
            OAuth spec and to the SAML spec here, but see RFC 3552 for insights."  - Peter Saint-Andre -->
        </section>
        <section title='IANA Considerations'>
          <section title='Sub-Namspace Registration of urn:ietf:params:oauth:grant-type:saml2-bearer'>
            <t>
              This is a request to IANA to please register the value grant-type:saml2-bearer in the
              registry urn:ietf:params:oauth established in <xref target="I-D.ietf.oauth-urn-sub-ns"/>

              <list style='symbols'>
                <t>URN: urn:ietf:params:oauth:grant-type:saml2-bearer</t>
                <t>Common Name: SAML 2.0 Bearer Assertion Grant Type Profile for OAuth 2.0</t>
                <t>Change controller: IETF</t>
                <t>Description: [[this document]]</t>
              </list>
            </t>
          </section>
          <section title='Sub-Namspace Registration of urn:ietf:params:oauth:client-assertion-type:saml2-bearer'>
            <t>
              This is a request to IANA to please register the value client-assertion-type:saml2-bearer in the
              registry urn:ietf:params:oauth established in <xref target="I-D.ietf.oauth-urn-sub-ns"/>

              <list style='symbols'>
                <t>URN: urn:ietf:params:oauth:client-assertion-type:saml2-bearer</t>
                <t>Common Name: SAML 2.0 Bearer Assertion Profile for OAuth 2.0 Client Authentication </t>
                <t>Change controller: IETF</t>
                <t>Description: [[this document]]</t>
              </list>
            </t>
          </section>
        </section>
        <appendix title='Contributors'>
            <t>
                The following people contributed wording and concepts to this document:
                Paul Madsen, Patrick Harding, Peter Motykowski, Eran Hammer-Lahav, Peter Saint-Andre, Ian Barnett, Eric Fazendin, Torsten Lodderstedt, Susan Harper, Scott Tomilson, Scott Cantor, Michael Jones, Hannes Tschofenig and David Waite.
            </t>
        </appendix>
      <appendix title='Document History'>
        <t>
          [[ to be removed by RFC editor before publication as an RFC ]]
        </t>
        <t>
             draft-ietf-oauth-saml2-bearer-05
             <list style='symbols'>
               <t>Allow for subject confirmation data to be optional when Conditions contain audience and NotOnOrAfter</t>
               <t>
                 Rework most of the spec to profile draft-ietf-oauth-assertions for both authn and authz including (but not limited to):
                 <list style='symbols'>
                 <t>remove requirement for issuer to be urn:oasis:names:tc:SAML:2.0:nameid-format:entity</t>
                 <t>change wording on Subject requirements</t>
                </list>
               </t>
               <t>using a MAY, explicitly say that the Audience can be token endpoint URL of the authorization server</t>
               <t>Change title to be more generic (allowing for client authn too)</t>
               <t>added client authentication to the abstract</t>
               <t>register and use urn:ietf:params:oauth:grant-type:saml2-bearer for grant type rather than http://oauth.net/grant_type/saml/2.0/bearer</t>
               <t>register urn:ietf:params:oauth:client-assertion-type:saml2-bearer</t>
               <t>remove scope paramter as it is defined in http://tools.ietf.org/html/draft-ietf-oauth-assertions</t>
               <t>remove assertion param registration because it [should] be in http://tools.ietf.org/html/draft-ietf-oauth-assertions</t> 
               <t>fix typo(s) and update/add references</t>
            </list>
        </t>
        <t>
             draft-ietf-oauth-saml2-bearer-04
             <list style='symbols'>
               <t>
                 Changed the grant_type URI from "http://oauth.net/grant_type/assertion/saml/2.0/bearer" to
                 "http://oauth.net/grant_type/saml/2.0/bearer" - dropping the word assertion from the path.
                 Recent versions of draft-ietf-oauth-v2 no longer refer to extension grants using the word assertion so
                 this URI is more reflective of that.  It also more closely aligns with the grant type URI in
                 draft-jones-oauth-jwt-bearer-00 which is "http://oauth.net/grant_type/jwt/1.0/bearer".
               </t>
               <t>Added "case sensitive" to scope definition to align with draft-ietf-oauth-v2-15/16.</t>
               <t>Updated to reference draft-ietf-oauth-v2-16</t>
            </list>
        </t>
        <t>
              draft-ietf-oauth-saml2-bearer-03
              <list style='symbols'>
                <t>Cleanup of some editorial issues.</t>
              </list>
         </t>
         <t>
              draft-ietf-oauth-saml2-bearer-02
              <list style='symbols'>
                <t>Added scope parameter with text copied from draft-ietf-oauth-v2-12 (the reorg of draft-ietf-oauth-v2-12 made it so scope wasn't really inherited by this spec anymore) </t>
                <t>Change definition of the assertion parameter to be more generally applicable per the suggestion near the end of http://www.ietf.org/mail-archive/web/oauth/current/msg05253.html</t>
                <t>Editorial changes based on feedback</t>
              </list>
        </t>

        <t>
              draft-ietf-oauth-saml2-bearer-01
              <list style='symbols'>
                <t>Update spec name when referencing draft-ietf-oauth-v2 (The OAuth 2.0 Protocol Framework -> The OAuth 2.0 Authorization Protocol)</t>
                <t>
                  Update wording in Introduction to talk about extension grant types rather than the assertion grant type which is a term no longer used in OAuth 2.0
                </t>
                <t>Updated to reference draft-ietf-oauth-v2-12 and denote as work in progress</t>
                <t>Update Parameter Registration Request to use similar terms as draft-ietf-oauth-v2-12 and remove Related information part</t>
                <t>Add some text giving discretion to AS on rejecting assertions with unreasonably long validity window.</t>
              </list>
        </t>
        <t>
              draft-ietf-oauth-saml2-bearer-00
              <list style='symbols'>
                <t>Added Parameter Registration Request for "assertion" to IANA Considerations.</t>
                <t>
                  Changed document name to draft-ietf-oauth-saml2-bearer in anticipation of becoming a OAUTH WG item.
                </t>
                <t>Attempt to move the entire definition of the 'assertion' parameter into this draft (it will no longer be defined in OAuth 2 Protocol Framework). </t>
              </list>
        </t>
        <t>
              draft-campbell-oauth-saml-01
              <list style='symbols'>
                <t>
                  Updated to reference draft-ietf-oauth-v2-11 and reflect changes from -10 to -11.
                </t>
                <t>Updated examples.</t>
                <t>
                  Relaxed processing rules to allow for more than one SubjectConfirmation element.
                </t>
                <t>
                  Removed the 'MUST NOT contain a NotBefore attribute' on SubjectConfirmationData.
                </t>
                <t>
                  Relaxed wording that ties the subject of the Assertion to the resource owner.
                </t>
                <t>Added some wording about identifying the client when the subject hasn't directly authenticated including an informative reference to SAML V2.0 Condition for Delegation Restriction.</t>
                <t>
                  Added a few examples to the language about verifying that the
                    Assertion is valid in all other respects.
                </t>
                <t>
                  Added some wording to the introduction about the similarities to Web SSO in the format and processing rules
                </t>
                <t>
                  Changed the grant_type (was assertion_type) URI from http://oauth.net/assertion_type/saml/2.0/bearer
                  to http://oauth.net/grant_type/assertion/saml/2.0/bearer
                </t>
                <t>Changed title to include "Grant Type" in it.</t>
                <t>Editorial updates based on feedback from the WG and others (including capitalization of Assertion when referring to SAML).</t>
              </list>
        </t>
        <t>
              draft-campbell-oauth-saml-00
              <list style='symbols'>
                <t>
                  Initial I-D
                </t>
              </list>
        </t>
      </appendix>
    </middle>                                                                                           


    <!--  *****BACK MATTER ***** -->

    <back>
        <!-- References split into informative and normative -->

        <!-- see http://www.rfc-editor.org/policy.html#policy.refs -->

        <!-- There are 2 ways to insert reference entries from the citation libraries:
1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
  (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

Both are cited textually in the same manner: by using xref elements.
If you use the PI option, xml2rfc will, by default, try to find included files in the same
directory as the including file. You can also define the XML_LIBRARY environment variable
with a value containing a set of directories to search.  These can be either in the local
filing system or remote ones accessed by http (http://domain/dir/... ).-->

        <references title="Normative References">
            <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml' ?>
            <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.4648.xml' ?>
            <?rfc include='http://xml.resource.org/public/rfc/bibxml2/reference.OASIS.saml-core-2.0-os.xml' ?>

            <!--<?rfc include='http://xml.resource.org/public/rfc/bibxml3/reference.I-D.hammer-oauth2.xml' ?>-->

            <reference anchor="I-D.ietf.oauth-assertions">
                <front>
                    <title abbrev='oauth-assertions'>OAuth 2.0 Assertion Profile</title>
                    <author initials='C.' surname='Mortimore' fullname='Chuck Mortimore' role='editor'/>
                    <author initials='B.' surname='Campbell' fullname='Brian Campbell' />
                    <author initials='M.' surname='Jones' fullname='Michael Jones'/>
                    <author initials="Y." surname="Goland" fullname="Yaron Goland"/>
                    <date year="2011" month="July"/>
                </front>
                <seriesInfo name="ID" value="draft-ietf-oauth-assertions-00 (work in progress)"/>
                <format type='TXT' target='http://tools.ietf.org/html/draft-ietf-oauth-assertions-00.txt'/>
                <format type='HTML' target='http://tools.ietf.org/html/draft-ietf-oauth-assertions-00.html'/>
            </reference>

            <reference anchor="I-D.ietf.oauth-urn-sub-ns">
                <front>
                    <title abbrev='oauth-urn-sub-ns'>An IETF URN Sub-Namespace for OAuth</title>
                    <author initials='B.' surname='Campbell' fullname='Brian Campbell' role='editor'/>
                    <author initials='H.' surname='Tschofenig' fullname='Hannes Tschofenig'/>
                    <date year="2011" month="Aug"/>
                </front>
                <seriesInfo name="ID" value="draft-campbell-oauth-urn-sub-ns-01 (work in progress)"/>
                <format type='TXT' target='http://tools.ietf.org/html/draft-campbell-oauth-urn-sub-ns-01.txt'/>
                <format type='HTML' target='http://tools.ietf.org/html/draft-campbell-oauth-urn-sub-ns-01.html'/>
            </reference>

            <reference anchor="I-D.ietf.oauth-v2">
                <front>
                    <title abbrev='OAuth2'>The OAuth 2.0 Authorization Protocol</title>
                    <author initials='E.' surname='Hammer-Lahav' fullname='Eran Hammer-Lahav' role='editor'/>
                    <author initials='D.' surname='Recordon' fullname='David Recordon'/>
                    <author initials='D.' surname='Hardt' fullname='Dick Hardt'/>
                    <date year="2011" month="May"/>
                </front>
                <seriesInfo name="ID" value="draft-ietf-oauth-v2-16 (work in progress)"/>
                <format type='TXT' target='http://tools.ietf.org/id/draft-ietf-oauth-v2-20.txt'/>
                <format type='HTML' target='http://tools.ietf.org/id/draft-ietf-oauth-v2-20.html'/>
            </reference>

        </references>
      <references title="Informative References">
        <?rfc include='http://xml.resource.org/public/rfc/bibxml2/reference.OASIS.saml-sec-consider-2.0-os.xml' ?>
        <?rfc include='http://xml.resource.org/public/rfc/bibxml4/reference.W3C.REC-html401-19991224.xml' ?>
        <?rfc include='http://xml.resource.org/public/rfc/bibxml2/reference.OASIS.saml-profiles-2.0-os.xml' ?>
        <reference anchor="OASIS.saml-deleg-cs">
            <front>
                <title abbrev='SAML2 DEL'>SAML V2.0 Condition for Delegation Restriction</title>
                <author initials='S.' surname='Cantor' fullname='Scott Cantor' role='editor'></author>
            
                <date year="2009" month="Nov"/>
            </front>
            <format type='TXT' target='http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-delegation-cs-01.html'/>
            <format type='HTML' target='http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-delegation-cs-01.pdf'/>
        </reference>
      </references>
    </back>
</rfc>

    