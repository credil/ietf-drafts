<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc strict="no" ?>
<?rfc symrefs="yes" ?>

<rfc category="exp" ipr="trust200811" docName="draft-ietf-rserpool-mib-09.txt">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>


<front>

<title abbrev="RSerPool MIB">
Reliable Server Pooling: Management Information Base using SMIv2
</title>

<author initials="T." surname="Dreibholz" fullname="Thomas Dreibholz">
 <organization abbrev="University of Duisburg-Essen">University of Duisburg-Essen, Institute for Experimental Mathematics</organization>
 <address>
  <postal>
   <street>Ellernstrasse 29</street>
   <city>45326 Essen</city>
   <region>Nordrhein-Westfalen</region>
   <country>Germany</country>
  </postal>
  <phone>+49-201-1837637</phone>
  <facsimile>+49-201-1837673</facsimile>
  <email>dreibh@iem.uni-due.de</email>
  <uri>http://www.iem.uni-due.de/~dreibh/</uri>
 </address>
</author>

<author initials="J." surname="Mulik" fullname="Jaiwant Mulik">
 <organization>Delaware State University</organization>
 <address>
  <postal>
   <street>CIS Department</street>
   <street>Room 306A, Science Center North</street>
   <street>1200 N. DuPont Hwy</street>
   <city>Dover</city> <region>DE</region>
   <code>19904</code>
   <country>USA</country>
  </postal>
  <phone>+1-302-857-7910</phone>
  <facsimile>+1-302-857-6552</facsimile>
  <email>jaiwant@mulik.com</email>
  <uri>http://netlab.cis.desu.edu</uri>
 </address>
</author>

<!--
<author initials="P." surname="Conrad" fullname="Phillip Conrad">
<organization>University of Delaware</organization>
<address>
<postal>
   <street>103 Smith Hall</street>
   <city>Newark</city>
   <code>DE 19716</code>
   <country>USA</country>
</postal>
<phone>+1 302 831 8622</phone>
<email>conrad@acm.org</email>
</address>
</author>

<author initials="K." surname="Pinzhoffer" fullname="Kevin Pinzhoffer">
<organization>Temple University</organization>
<address>
<postal>
 <street>CIS Department</street>
 <street>Room 303, Computer Building (038-24)</street>
 <street>1805 N. Broad St.</street>
 <city>Philadelphia</city> <region>PA</region>
 <code>19122</code>
 <country>USA</country>
</postal>
<phone>+1 215 204 3197</phone>
<email>kpinzhof@temple.edu</email>
</address>
</author>
-->


<date day="6" month="January" year="2009" />
<keyword>Internet-Draft</keyword>


<abstract>
<t>
 RSerPool <xref target="RFC5351" /> is a framework to provide
 reliable server pooling. This document defines a SMIv2 compliant Management
 Information Base (MIB) providing access to managed objects in an RSerPool
 implementation.
</t>
</abstract>

</front>


<middle>


<section anchor="intro" title="Introduction">
<t>
 This memo defines a Management Information Base (MIB) module which
 describes managed objects for RSerPool implementations.
</t>
</section>


<section title="The Reliable Server Pooling (RSerPool) Framework">
<t>
 For a detailed overview of the documents that describe the current
 Reliable Server Pooling (RSerPool) framework, please refer to
 <xref target="RFC3237" />,
 <xref target="RFC5351" />,
 <xref target="RFC5352" />,
 <xref target="RFC5353" />,
 <xref target="RFC5354" />,
 <xref target="RFC5355" /> and
 <xref target="RFC5356" />.
 A more informal introduction can be found at <xref target="RSerPoolPage" />
 as well as in <xref target="Dre2006" />, <xref target="LCN2005" /> and
 <xref target="IJHIT2008" />.
</t>
</section>


<section title="The Internet-Standard Management Framework">
<t>
 For a detailed overview of the documents that describe the current
Internet-Standard Management Framework, please refer to section 7 of
RFC 3410 <xref target="RFC3410" />.
</t><t>
 Managed objects are accessed via a virtual information store, termed
 the Management Information Base or MIB.  MIB objects are generally
 accessed through the Simple Network Management Protocol (SNMP).
 Objects in the MIB are defined using the mechanisms defined in the
 Structure of Management Information (SMI).  This memo specifies a MIB
 module that is compliant to the SMIv2, which is described in STD 58,
 RFC 2578 <xref target="RFC2578" />, STD 58,
 RFC 2579 <xref target="RFC2579" /> and
 STD 58,
 RFC 2580 <xref target="RFC2580" />.
</t>
</section>


<section anchor="structure" title="Structure of the MIB">
<t>
 The following diagram illustrates the structure of the MIB.
</t>

<figure>
<preamble>Structure of MIB</preamble>
<artwork>

   +--rserpoolMIB(?????)
   |
   +--enrpServers(1)
   |  |
   |  +--enrpServerTable(1)
   |  |  |
   |  |  +--enrpServerEntry(1)
   |  |     |  Index: enrpServerIndex
   |  |     |
   |  |     +-- ---- Unsigned  enrpServerIndex(1)
   |  |     |        Range: 1..-1
   |  |     +-- -R-- String    enrpServerOperationScope(2)
   |  |     |        Textual Convention: OperationScopeType
   |  |     +-- -R-- Unsigned  enrpServerIdentifier(3)
   |  |     |        Textual Convention: ENRPServerIdentifierType
   |  |     |        Range: 1..-1
   |  |     +-- -RW- String    enrpServerDescription(4)
   |  |     |        Size: 0..255
   |  |     +-- -R-- TimeTicks enrpServerUptime(5)
   |  |     +-- -R-- Unsigned  enrpServerPort(6)
   |  |     |        Range: 1..65535
   |  |     +-- -R-- Unsigned  enrpServerASAPAnnouncePort(7)
   |  |     |        Range: 1..65535
   |  |     +-- -R-- EnumVal   enrpServerASAPAnnounceAddrType(8)
   |  |     |        Textual Convention: InetAddressType
   |  |     |        Values: unknown(0), ipv4(1), ipv6(2), ipv4z(3),
   |  |     |                   ipv6z(4), dns(16)
   |  |     +-- -R-- String    enrpServerASAPAnnounceAddr(9)
   |  |     |        Textual Convention: InetAddress
   |  |     |        Size: 0..255
   |  |     +-- -R-- Unsigned  enrpServerENRPAnnouncePort(10)
   |  |     |        Range: 1..65535
   |  |     +-- -R-- EnumVal   enrpServerENRPAnnounceAddrType(11)
   |  |     |        Textual Convention: InetAddressType
   |  |     |        Values: unknown(0), ipv4(1), ipv6(2), ipv4z(3),
   |  |     |                   ipv6z(4), dns(16)
   |  |     +-- -R-- String    enrpServerENRPAnnounceAddr(12)
   |  |              Textual Convention: InetAddress
   |  |              Size: 0..255
   |  |
   |  +--enrpServerPoolTable(3)
   |  |  |
   |  |  +--enrpServerPoolEntry(1)
   |  |     |  Index: enrpServerIndex, enrpServerPoolIndex
   |  |     |
   |  |     +-- ---- Unsigned  enrpServerPoolIndex(1)
   |  |     |        Range: 1..-1
   |  |     +-- -R-- String    enrpServerPoolHandle(2)
   |  |              Textual Convention: PoolHandleType
   |  |
   |  +--enrpServerPoolElementTable(4)
   |  |  |
   |  |  +--enrpServerPoolElementEntry(1)
   |  |     |  Index: enrpServerIndex, enrpServerPoolIndex,
   |  |     |            enrpServerPoolElementIndex
   |  |     |
   |  |     +-- ---- Unsigned  enrpServerPoolElementIndex(1)
   |  |     |        Range: 1..-1
   |  |     +-- -R-- Unsigned  enrpServerPoolElementIdentifier(2)
   |  |     |        Textual Convention: PoolElementIdentifierType
   |  |     |        Range: 1..-1
   |  |     +-- -R-- Unsigned  enrpServerASAPTransportPort(3)
   |  |     |        Range: 1..65535
   |  |     +-- -R-- Unsigned  enrpServerUserTransportProtocol(4)
   |  |     |        Range: 0..255
   |  |     +-- -R-- Unsigned  enrpServerUserTransportPort(5)
   |  |     |        Range: 1..65535
   |  |     +-- -R-- EnumVal   enrpServerUserTransportUse(6)
   |  |     |        Textual Convention: TransportUseType
   |  |     |        Values: dataOnly(0), dataPlusControl(1)
   |  |     +-- -R-- Unsigned  enrpServerPolicyID(7)
   |  |     |        Textual Convention: PolicyIDType
   |  |     |        Range: 0..255
   |  |     +-- -R-- String    enrpServerPolicyDescr(8)
   |  |     |        Size: 0..255
   |  |     +-- -R-- Unsigned  enrpServerPolicyWeight(9)
   |  |     |        Textual Convention: PolicyWeightType
   |  |     |        Range: 0..-1
   |  |     +-- -R-- Unsigned  enrpServerPolicyLoad(10)
   |  |     |        Textual Convention: PolicyLoadType
   |  |     |        Range: 0..16777215
   |  |     +-- -R-- Unsigned  enrpServerPolicyLoadDegradation(11)
   |  |     |        Textual Convention: PolicyLoadType
   |  |     |        Range: 0..16777215
   |  |     +-- -R-- TimeTicks enrpServerRegistrationLife(12)
   |  |     +-- -R-- Unsigned  enrpServerHomeENRPServer(13)
   |  |              Textual Convention: ENRPServerIdentifierType
   |  |              Range: 1..-1
   |  |
   |  +--enrpServerASAPAddrTable(5)
   |  |  |
   |  |  +--enrpServerASAPAddrTableEntry(1)
   |  |     |  Index: enrpServerIndex, enrpServerPoolIndex,
   |  |     |            enrpServerPoolElementIndex,
   |  |     |            enrpServerASAPAddrTableIndex
   |  |     |
   |  |     +-- ---- Unsigned  enrpServerASAPAddrTableIndex(1)
   |  |     |        Range: 1..-1
   |  |     +-- -R-- EnumVal   enrpServerASAPL3Proto(2)
   |  |     |        Textual Convention: InetAddressType
   |  |     |        Values: unknown(0), ipv4(1), ipv6(2), ipv4z(3),
   |  |     |                   ipv6z(4), dns(16)
   |  |     +-- -R-- String    enrpServerASAPL3Addr(3)
   |  |              Textual Convention: InetAddress
   |  |              Size: 0..255
   |  |
   |  +--enrpServerUserAddrTable(6)
   |  |  |
   |  |  +--enrpServerUserAddrTableEntry(1)
   |  |     |  Index: enrpServerIndex, enrpServerPoolIndex,
   |  |     |            enrpServerPoolElementIndex,
   |  |     |            enrpServerUserAddrTableIndex
   |  |     |
   |  |     +-- ---- Unsigned  enrpServerUserAddrTableIndex(1)
   |  |     |        Range: 1..-1
   |  |     +-- -R-- EnumVal   enrpServerUserL3Proto(2)
   |  |     |        Textual Convention: InetAddressType
   |  |     |        Values: unknown(0), ipv4(1), ipv6(2),
   |  |     |                   ipv4z(3), ipv6z(4), dns(16)
   |  |     +-- -R-- String    enrpServerUserL3Addr(3)
   |  |     |        Textual Convention: InetAddress
   |  |     |        Size: 0..255
   |  |     +-- -R-- String    enrpServerUserL3Opaque(4)
   |  |              Textual Convention: OpaqueAddressType
   |  |
   |  +--enrpServerENRPAddrTable(7)
   |  |  |
   |  |  +--enrpServerENRPAddrTableEntry(1)
   |  |     |  Index: enrpServerIndex, enrpServerENRPAddrTableIndex
   |  |     |
   |  |     +-- ---- Unsigned  enrpServerENRPAddrTableIndex(1)
   |  |     |        Range: 1..-1
   |  |     +-- -R-- EnumVal   enrpServerENRPL3Proto(2)
   |  |     |        Textual Convention: InetAddressType
   |  |     |        Values: unknown(0), ipv4(1), ipv6(2), ipv4z(3),
   |  |     |                   ipv6z(4), dns(16)
   |  |     +-- -R-- String    enrpServerENRPL3Addr(3)
   |  |              Textual Convention: InetAddress
   |  |              Size: 0..255
   |  |
   |  +--enrpServerPeerTable(8)
   |  |  |
   |  |  +--enrpServerPeerEntry(1)
   |  |     |  Index: enrpServerPeerIndex
   |  |     |
   |  |     +-- ---- Unsigned  enrpServerPeerIndex(1)
   |  |     |        Range: 1..-1
   |  |     +-- -R-- Unsigned  enrpServerPeerIdentifier(2)
   |  |     +-- -R-- Unsigned  enrpServerPeerPort(3)
   |  |     |        Range: 1..65535
   |  |     +-- -R-- TimeTicks enrpServerPeerLastHeard(4)
   |  |
   |  +--enrpServerPeerAddrTable(9)
   |     |
   |     +--enrpServerPeerAddrTableEntry(1)
   |        |  Index: enrpServerPeerIndex,
   |        |         enrpServerPeerAddrTableIndex
   |        |
   |        +-- ---- Unsigned  enrpServerPeerAddrTableIndex(1)
   |        |        Range: 1..-1
   |        +-- -R-- EnumVal   enrpServerPeerL3Proto(2)
   |        |        Textual Convention: InetAddressType
   |        |        Values: unknown(0), ipv4(1), ipv6(2), ipv4z(3),
   |  |     |                   ipv6z(4), dns(16)
   |        +-- -R-- String    enrpServerPeerL3Addr(3)
   |                 Textual Convention: InetAddress
   |                 Size: 0..255
   |
   +--poolElements(2)
   |  |
   |  +--poolElementTable(1)
   |  |  |
   |  |  +--poolElementEntry(1)
   |  |     |  Index: poolElementIndex
   |  |     |
   |  |     +-- ---- Unsigned  poolElementIndex(1)
   |  |     |        Range: 1..-1
   |  |     +-- -R-- String    poolElementOperationScope(2)
   |  |     |        Textual Convention: OperationScopeType
   |  |     +-- -R-- String    poolElementPoolHandle(3)
   |  |     |        Textual Convention: PoolHandleType
   |  |     +-- -R-- Unsigned  poolElementIdentifier(4)
   |  |     |        Textual Convention: PoolElementIdentifierType
   |  |     |        Range: 1..-1
   |  |     +-- -RW- String    poolElementDescription(5)
   |  |     |        Size: 0..255
   |  |     +-- -R-- TimeTicks poolElementUptime(6)
   |  |     +-- -R-- Unsigned  poolElementASAPTransportPort(7)
   |  |     |        Range: 1..65535
   |  |     +-- -R-- Unsigned  poolElementUserTransportProtocol(8)
   |  |     |        Range: 0..255
   |  |     +-- -R-- Unsigned  poolElementUserTransportPort(9)
   |  |     |        Range: 1..65535
   |  |     +-- -R-- EnumVal   poolElementUserTransportUse(10)
   |  |     |        Textual Convention: TransportUseType
   |  |     |        Values: dataOnly(0), dataPlusControl(1)
   |  |     +-- -RW- Unsigned  poolElementPolicyID(11)
   |  |     |        Textual Convention: PolicyIDType
   |  |     |        Range: 0..255
   |  |     +-- -RW- String    poolElementPolicyDescr(12)
   |  |     |        Size: 0..255
   |  |     +-- -RW- Unsigned  poolElementPolicyWeight(13)
   |  |     |        Textual Convention: PolicyWeightType
   |  |     |        Range: 0..-1
   |  |     +-- -R-- Unsigned  poolElementPolicyLoad(14)
   |  |     |        Textual Convention: PolicyLoadType
   |  |     |        Range: 0..16777215
   |  |     +-- -RW- Unsigned  poolElementPolicyLoadDegradation(15)
   |  |     |        Textual Convention: PolicyLoadType
   |  |     |        Range: 0..16777215
   |  |     +-- -RW- TimeTicks poolElementRegistrationLife(16)
   |  |     +-- -R-- Unsigned  poolElementHomeENRPServer(17)
   |  |              Textual Convention: ENRPServerIdentifierType
   |  |              Range: 1..-1
   |  |
   |  +--poolElementASAPAddrTable(2)
   |  |  |
   |  |  +--poolElementASAPAddrTableEntry(1)
   |  |     |  Index: poolElementIndex, poolElementASAPAddrTableIndex
   |  |     |
   |  |     +-- ---- Unsigned  poolElementASAPAddrTableIndex(1)
   |  |     |        Range: 1..-1
   |  |     +-- -R-- EnumVal   poolElementASAPL3Proto(2)
   |  |     |        Textual Convention: InetAddressType
   |  |     |        Values: unknown(0), ipv4(1), ipv6(2), ipv4z(3),
   |  |     |                   ipv6z(4), dns(16)
   |  |     +-- -R-- String    poolElementASAPL3Addr(3)
   |  |              Textual Convention: InetAddress
   |  |              Size: 0..255
   |  |
   |  +--poolElementUserAddrTable(6)
   |     |
   |     +--poolElementUserAddrTableEntry(1)
   |        |  Index: poolElementIndex, poolElementUserAddrTableIndex
   |        |
   |        +-- ---- Unsigned  poolElementUserAddrTableIndex(1)
   |        |        Range: 1..-1
   |        +-- -R-- EnumVal   poolElementUserL3Proto(2)
   |        |        Textual Convention: InetAddressType
   |        |        Values: unknown(0), ipv4(1), ipv6(2), ipv4z(3),
   |        |                   ipv6z(4), dns(16)
   |        +-- -R-- String    poolElementUserL3Addr(3)
   |        |        Textual Convention: InetAddress
   |        |        Size: 0..255
   |        +-- -R-- String    poolElementUserL3Opaque(4)
   |                 Textual Convention: OpaqueAddressType
   |
   +--poolUsers(3)
   |  |
   |  +--poolUserTable(1)
   |     |
   |     +--poolUserEntry(1)
   |        |  Index: poolUserIndex
   |        |
   |        +-- ---- Unsigned  poolUserIndex(1)
   |        |        Range: 1..-1
   |        +-- -R-- String    poolUserOperationScope(2)
   |        |        Textual Convention: OperationScopeType
   |        +-- -R-- String    poolUserPoolHandle(3)
   |        |        Textual Convention: PoolHandleType
   |        +-- -RW- String    poolUserDescription(4)
   |        |        Size: 0..255
   |        +-- -R-- TimeTicks poolUserUptime(5)
   |
   +--rserpoolMIBConformance(4)
   |
   +--rserpoolMIBCompliances(1)
   |  |
   |  +--rserpoolMIBCompliance(1)
   |
   +--rserpoolMIBGroups(2)
   |
   +--enrpServerGroup(1)
   +--poolElementGroup(2)
   +--poolUserGroup(3)

</artwork>
</figure>

<t>
 As the figure shows, the MIB consists of three main branches: "enrpServers",
 "poolElements" and "poolUsers". The first branch,
 "enrpServers" is used to access managed objects in the set of ENRP
 servers running on a given host. While it is assumed that it does not
 make much sense to run multiple ENRP servers for the same operation
 scope on one host, running multiple ENRP servers for different
 operation scopes is very likely when the ENRP server processes run
 on routers. Therefore, the MIB has to be able to manage multiple
 ENRP servers on the same host.

 "poolElements" is used to access managed objects in the
 set of Pool Elements that are running on a given host and the third
 branch, "poolUsers" is used to access managed objects in the set of
 Pool Users that are running on a given host.

 In fact, the structure of the three branches is very similar. Because the two
 branches are so similar, we describe only the first branch in detail, and
 provide a summary description of the second and third branch.
 We now proceed with a description of the branches.
</t>

<section anchor="ENRPServersBranch" title="Access to managed objects on ENRP servers">
<t>
 The first branch describes managed objects at a set of ENRP servers.
 Any given ENRP server of this set will, at a certain moment in time,
 have registration information for a set of active pools. Each of these
 pools in turn may have a list of pool elements that are
 registered under that pool. To allow this information to be
 retrieved via SNMP, the ERNP server branch of the RSerPool MIB uses the
 table-in-table technique described in <xref target="SNMPMIBS" />.

 Specifically, the ENRP servers branch creates four levels of nesting,
 as indicated in the following diagram:
</t>
<figure>
<preamble>Nesting of ENRP Server Branch</preamble>
<artwork>

Nesting Structure:

 Level 1: enrpServerTable

 Level 2:    enrpServerPoolTable
 Level 3:       enrpServerPoolElementTable
 Level 4:          enrpServerASAPAddrListTable
                   enrpServerUserAddrListTable

 Level 2:    enrpServerENRPAddrListTable

 Level 2:    enrpServerPeerTable
 Level 3:       enrpServerPeerAddrListTable

</artwork>
</figure>

<t>

The ENRP servers branch contains a table of the host's ENRP server instances.
Its purpose is to provide an index to an ENRP server for all other tables.
Each "conceptual row" in the enrpServerTable contains the server's ENRP
Identifier, the number of pools, PEs and peers, the amount of ENRP endpoint
addresses, the server's uptime and a textual description of the server.

The poolTable contains a single entry for each pool that is currently
registered. Each "conceptual row" in the enrpServerPoolTable consists of a
enrpServerPoolTableEntry, with two elements: a enrpServerPoolIndex and an
OCTET STRING representation of the pool handle. The enrpServerPoolIndex is
simply an integer that is used to index into the enrpServerPoolTable and
the enrpServerPoolElementTable. The value of this integer is between zero
and (poolCount - 1). Note that the value of enrpServerPoolIndex is defined
as "not-accessible" in the MAX-ACCESS clause; this is a standard technique
used when defining a table-in-table data structure.

The third element on the ENRP servers branch is the enrpServerPoolElementTable.
Because the enrpServerPoolElementTable is the "inner" table of the
table-in-table structure, its index consists of a pair, as indicated in the
clause
"INDEX { enrpServerIndex, enrpServerPoolIndex, enrpServerPoolElementIndex }".
The fourth element of the ENRP servers branch takes the nesting to one
additional level, listing the various addresses associated with a particular
enrpServerPoolElement in form of ASAP endpoint addresses and user transport
addresses, and thus are indexed by the 4-tuples
"INDEX { enrpServerIndex, enrpServerPoolIndex, enrpServerPoolElementIndex,
enrpServerASAPAddrListTableIndex }" and
"INDEX { enrpServerIndex, enrpServerPoolIndex, enrpServerPoolElementIndex,
enrpServerUserAddrListTableIndex }".

The ENRP endpoint addresses of an ENRP server are bound to its instance
in the enrpServerENRPAddrListTable by
"INDEX { enrpServerIndex, enrpServerENRPAddrListTableIndex }".

Finally, an ENRP server has a peer table of its known peers. They are bound
to a server instance by the enrpServerPeerTable; analogously, the addresses
of a peer are bound to a peerTable's entry in the peerAddrListTable.
</t>
</section>


<section anchor="PoolElementsBranch" title="Access to managed objects on Pool Elements">
<t>

The construction of the Pool Elements branch is very similar to the
pool elements table of the ENRP servers branch. But instead of grouping
the pool elements into pools (which does not make sense here), the
pool elements table is the top of the hierarchy and each pool element
entry specifies its operation scope and pool handle.

That is, the nesting structure is as follows:

<figure><artwork>
 Level 1:    poolElementTable
 Level 2:       poolElementASAPAddrListTable
                poolElementUserAddrListTable
</artwork></figure>

The description of the contained structures is the same as for the ENRP servers
branch.

</t>
</section>


<section anchor="PoolUsersBranch" title="Access to managed objects on Pool Users">
<t>

For the pool users branch, it is only necessary to list the pool users,
including their operation scope and pool handle.

</t>
</section>

</section>


<section anchor="definition" title="Definitions">
<figure>
<artwork>

RSERPOOL-MIB DEFINITIONS ::= BEGIN

IMPORTS
MODULE-IDENTITY,
OBJECT-TYPE,
mib-2,
TimeTicks,
Unsigned32
FROM SNMPv2-SMI
TEXTUAL-CONVENTION
FROM SNMPv2-TC
MODULE-COMPLIANCE, OBJECT-GROUP
FROM SNMPv2-CONF
InetAddressType, InetAddress
FROM INET-ADDRESS-MIB;


-- ## Module definition ###########################################
rserpoolMIB MODULE-IDENTITY
LAST-UPDATED "200901061012Z" -- January 06, 2009
ORGANIZATION "IEM-TdR, UNIVERSITY OF DUISBURG-ESSEN"
CONTACT-INFO
" THOMAS-DREIBHOLZ

Postal:  University of Duisburg-Essen
Institute for Experimental Mathematics
Ellernstrasse 29
D-45326 Essen
Germany
Phone: +49-201-183-7637
Fax: +49-201-183-7673
Email: dreibh@iem.uni-due.de

JAIWANT-MULIK

Postal:  Delaware State University
CIS Department
1200 N. DuPont Hw
Dover, DE
USA 19904
Phone: +1-302-857-7910
Fax: +1-302-857-6552
Email: jaiwant@mulik.com"
DESCRIPTION
"The MIB module for managing a RSerPool implementation"
REVISION "200901061012Z" -- January 06, 2009
DESCRIPTION
"Version 09, published as draft-ietf-rserpool-mib-09.txt."
::= { mib-2 xxxxxxxx } -- To be IANA Assigned!!!



-- ## RSerPool type definitions ###################################
ENRPServerIdentifierType ::= TEXTUAL-CONVENTION
DISPLAY-HINT "x"
STATUS       current
DESCRIPTION  "The ID of an ENRP server"
SYNTAX       Unsigned32 (1..4294967295)

OperationScopeType ::= TEXTUAL-CONVENTION
DISPLAY-HINT "1024t"
STATUS       current
DESCRIPTION  "The ID of an operation scope"
SYNTAX       OCTET STRING

PoolHandleType ::= TEXTUAL-CONVENTION
DISPLAY-HINT "1024t"
STATUS       current
DESCRIPTION  "The pool handle"
SYNTAX       OCTET STRING

PoolElementIdentifierType ::= TEXTUAL-CONVENTION
DISPLAY-HINT "x"
STATUS       current
DESCRIPTION  "The pool element ID"
SYNTAX       Unsigned32 (1..4294967295)

PolicyIDType ::= TEXTUAL-CONVENTION
DISPLAY-HINT "x"
STATUS       current
DESCRIPTION  "The ID of the pool policy"
SYNTAX       Unsigned32 (0..255)

PolicyLoadType ::= TEXTUAL-CONVENTION
DISPLAY-HINT "d"
STATUS       current
DESCRIPTION  "The load status of a pool element"
SYNTAX       Unsigned32 (0..16777215)

PolicyWeightType ::= TEXTUAL-CONVENTION
DISPLAY-HINT "d"
STATUS       current
DESCRIPTION  "The weight of a pool element"
SYNTAX       Unsigned32 (0..4294967295)

TransportUseType ::= TEXTUAL-CONVENTION
STATUS       current
DESCRIPTION "The load status of a pool element"
SYNTAX       INTEGER {
dataOnly(0),
dataPlusControl(1)
}

OpaqueAddressType ::= TEXTUAL-CONVENTION
DISPLAY-HINT "1024t"
STATUS       current
DESCRIPTION  "Opaque address"
SYNTAX       OCTET STRING


-- ## Top-level definitions #######################################
enrpServers  OBJECT IDENTIFIER ::= { rserpoolMIB 1 }
poolElements OBJECT IDENTIFIER ::= { rserpoolMIB 2 }
poolUsers    OBJECT IDENTIFIER ::= { rserpoolMIB 3 }



-- ################################################################
-- #### ENRP Servers Section                                   ####
-- ################################################################

-- ## Definition of the ENRP server table #########################
enrpServerTable OBJECT-TYPE
SYNTAX     SEQUENCE OF ENRPServerEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"The table listing of ENRP servers."
::= { enrpServers 1 }

enrpServerEntry OBJECT-TYPE
SYNTAX     ENRPServerEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An ENRP server entry in the table listing of ENRP
servers."
INDEX { enrpServerIndex }
::= { enrpServerTable 1 }

ENRPServerEntry ::= SEQUENCE {
enrpServerIndex                Unsigned32,
enrpServerOperationScope       OperationScopeType,
enrpServerIdentifier           ENRPServerIdentifierType,
enrpServerDescription          OCTET STRING,
enrpServerUptime               TimeTicks,
enrpServerPort                 Unsigned32,
enrpServerASAPAnnouncePort     Unsigned32,
enrpServerASAPAnnounceAddrType InetAddressType,
enrpServerASAPAnnounceAddr     InetAddress,
enrpServerENRPAnnouncePort     Unsigned32,
enrpServerENRPAnnounceAddrType InetAddressType,
enrpServerENRPAnnounceAddr     InetAddress }

enrpServerIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An integer to uniquely identify an ENRP server."
::= { enrpServerEntry 1 }

enrpServerOperationScope OBJECT-TYPE
SYNTAX     OperationScopeType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The definition of the operation scope of this ENRP server."
::= { enrpServerEntry 2 }

enrpServerIdentifier OBJECT-TYPE
SYNTAX     ENRPServerIdentifierType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The ENRP server identifier of this ENRP server."
::= { enrpServerEntry 3 }

enrpServerDescription OBJECT-TYPE
SYNTAX     OCTET STRING (SIZE (0..255))
MAX-ACCESS read-write
STATUS     current
DESCRIPTION
"A textual description of this ENRP server, e.g. its location
and a contact address of its administrator."
::= { enrpServerEntry 4 }

enrpServerUptime OBJECT-TYPE
SYNTAX     TimeTicks
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The ENRP service uptime of this ENRP server."
::= { enrpServerEntry 5 }

enrpServerPort OBJECT-TYPE
SYNTAX     Unsigned32 (1..65535)
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The SCTP port number of the ENRP protocol endpoint of
this ENRP server."
::= { enrpServerEntry 6 }

enrpServerASAPAnnouncePort OBJECT-TYPE
SYNTAX     Unsigned32 (1..65535)
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The destination UDP port number ASAP multicast announce
messages are sent to."
::= { enrpServerEntry 7 }

enrpServerASAPAnnounceAddrType OBJECT-TYPE
SYNTAX     InetAddressType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The network-layer protocol ASAP multicast
announce messages are sent over."
::= { enrpServerEntry 8 }

enrpServerASAPAnnounceAddr OBJECT-TYPE
SYNTAX     InetAddress
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The destination multicast IP address ASAP multicast
announce messages are sent to."
::= { enrpServerEntry 9 }

enrpServerENRPAnnouncePort OBJECT-TYPE
SYNTAX     Unsigned32 (1..65535)
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The destination UDP port number ENRP multicast announce
messages are sent to."
::= { enrpServerEntry 10 }

enrpServerENRPAnnounceAddrType OBJECT-TYPE
SYNTAX     InetAddressType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The network-layer protocol ENRP multicast
announce messages are sent over."
::= { enrpServerEntry 11 }

enrpServerENRPAnnounceAddr OBJECT-TYPE
SYNTAX     InetAddress
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The destination multicast IP address ENRP multicast
announce messages are sent to."
::= { enrpServerEntry 12 }



-- ## Definition of the pool table ################################
enrpServerPoolTable OBJECT-TYPE
SYNTAX     SEQUENCE OF ENRPServerPoolEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"The table listing of pools."
::= { enrpServers 3 }

enrpServerPoolEntry OBJECT-TYPE
SYNTAX     ENRPServerPoolEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"The pool entry in the table listing of pools."
INDEX { enrpServerIndex, enrpServerPoolIndex }
::= { enrpServerPoolTable 1 }

ENRPServerPoolEntry ::= SEQUENCE {
enrpServerPoolIndex  Unsigned32,
enrpServerPoolHandle PoolHandleType }

enrpServerPoolIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An integer to uniquely identify a pool."
::= { enrpServerPoolEntry 1 }

enrpServerPoolHandle OBJECT-TYPE
SYNTAX     PoolHandleType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The pool handle of this pool."
::= { enrpServerPoolEntry 2 }


-- ## Definition of the pool element table ########################
enrpServerPoolElementTable OBJECT-TYPE
SYNTAX     SEQUENCE OF ENRPServerPoolElementEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"The table listing of pool elements."
::= { enrpServers 4 }

enrpServerPoolElementEntry OBJECT-TYPE
SYNTAX     ENRPServerPoolElementEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A pool element in the table listing of pool elements."
INDEX { enrpServerIndex,
enrpServerPoolIndex,
enrpServerPoolElementIndex }
::= { enrpServerPoolElementTable 1 }

ENRPServerPoolElementEntry ::= SEQUENCE {
enrpServerPoolElementIndex       Unsigned32,
enrpServerPoolElementIdentifier  PoolElementIdentifierType,
enrpServerASAPTransportPort      Unsigned32,
enrpServerUserTransportProtocol  Unsigned32,
enrpServerUserTransportPort      Unsigned32,
enrpServerUserTransportUse       TransportUseType,
enrpServerPolicyID               PolicyIDType,
enrpServerPolicyDescr            OCTET STRING,
enrpServerPolicyWeight           PolicyWeightType,
enrpServerPolicyLoad             PolicyLoadType,
enrpServerPolicyLoadDegradation  PolicyLoadType,
enrpServerRegistrationLife       TimeTicks,
enrpServerHomeENRPServer         ENRPServerIdentifierType }


enrpServerPoolElementIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An integer to uniquely identify a pool element. Note,
that uniqueness of a pool element identifier in the pool
is not enforced, therefore this index is required here!"
::={ enrpServerPoolElementEntry 1 }

enrpServerPoolElementIdentifier OBJECT-TYPE
SYNTAX     PoolElementIdentifierType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The pool element identifier of this pool element."
::={ enrpServerPoolElementEntry 2 }

enrpServerASAPTransportPort OBJECT-TYPE
SYNTAX     Unsigned32 (1..65535)
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The SCTP port number of the ASAP endpoint of this pool
element."
::= { enrpServerPoolElementEntry 3 }

enrpServerUserTransportProtocol OBJECT-TYPE
SYNTAX     Unsigned32 (0..255)
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The transport protocol number of the service endpoint
of this pool element."
::= { enrpServerPoolElementEntry 4 }

enrpServerUserTransportPort OBJECT-TYPE
SYNTAX     Unsigned32 (1..65535)
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The transport protocol's port number of the service
endpoint of this pool element."
::= { enrpServerPoolElementEntry 5 }

enrpServerUserTransportUse OBJECT-TYPE
SYNTAX     TransportUseType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The transport use of the service endpoint of this pool
element."
::= { enrpServerPoolElementEntry 6 }

enrpServerPolicyID OBJECT-TYPE
SYNTAX     PolicyIDType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The pool policy of this pool element."
::= { enrpServerPoolElementEntry 7 }

enrpServerPolicyDescr OBJECT-TYPE
SYNTAX     OCTET STRING (SIZE (0..255))
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The textual description of the pool policy of this pool
element."
::= { enrpServerPoolElementEntry 8 }

enrpServerPolicyWeight OBJECT-TYPE
SYNTAX     PolicyWeightType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The pool policy's weight parameter for this pool element."
::= { enrpServerPoolElementEntry 9 }

enrpServerPolicyLoad OBJECT-TYPE
SYNTAX     PolicyLoadType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The pool policy's load status for this pool element."
::= { enrpServerPoolElementEntry 10 }

enrpServerPolicyLoadDegradation OBJECT-TYPE
SYNTAX     PolicyLoadType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The pool policy's load degradation parameter for this pool
element."
::= { enrpServerPoolElementEntry 11 }

enrpServerRegistrationLife OBJECT-TYPE
SYNTAX     TimeTicks
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The registration life of this pool element."
::= { enrpServerPoolElementEntry 12 }

enrpServerHomeENRPServer OBJECT-TYPE
SYNTAX     ENRPServerIdentifierType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The ID of the home ENRP server of this pool element."
::= { enrpServerPoolElementEntry 13 }


-- ## Definition of the ASAP transport address list table #########
enrpServerASAPAddrTable OBJECT-TYPE
SYNTAX     SEQUENCE OF ENRPServerASAPAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A table listing of all IP addresses of the ASAP transport
endpoint."
::= { enrpServers 5 }

enrpServerASAPAddrTableEntry  OBJECT-TYPE
SYNTAX     ENRPServerASAPAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An IP address of the ASAP transport endpoint."
INDEX { enrpServerIndex,
enrpServerPoolIndex,
enrpServerPoolElementIndex,
enrpServerASAPAddrTableIndex }
::= { enrpServerASAPAddrTable 1 }

ENRPServerASAPAddrTableEntry ::= SEQUENCE {
enrpServerASAPAddrTableIndex Unsigned32,
enrpServerASAPL3Proto            InetAddressType,
enrpServerASAPL3Addr             InetAddress }

enrpServerASAPAddrTableIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A unique identifier for the IP address of an ASAP transport
endpoint."
::= { enrpServerASAPAddrTableEntry 1 }

enrpServerASAPL3Proto OBJECT-TYPE
SYNTAX     InetAddressType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The network-layer protocol (IPv4 or IPv6) of an IP address of
an ASAP transport endpoint."
::= { enrpServerASAPAddrTableEntry 2 }

enrpServerASAPL3Addr OBJECT-TYPE
SYNTAX     InetAddress
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The IP address of an ASAP transport endpoint."
::= { enrpServerASAPAddrTableEntry 3 }


-- ## Definition of the user transport address list table #########
enrpServerUserAddrTable OBJECT-TYPE
SYNTAX     SEQUENCE OF ENRPServerUserAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A table listing of all IP addresses of the user
transport endpoint."
::= { enrpServers 6 }

enrpServerUserAddrTableEntry  OBJECT-TYPE
SYNTAX     ENRPServerUserAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An IP address of the user transport endpoint."
INDEX { enrpServerIndex,
enrpServerPoolIndex,
enrpServerPoolElementIndex,
enrpServerUserAddrTableIndex }
::= { enrpServerUserAddrTable 1 }

ENRPServerUserAddrTableEntry ::= SEQUENCE {
enrpServerUserAddrTableIndex Unsigned32,
enrpServerUserL3Proto  InetAddressType,
enrpServerUserL3Addr   InetAddress,
enrpServerUserL3Opaque OpaqueAddressType }

enrpServerUserAddrTableIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A unique identifier for the IP address of an user transport
endpoint."
::= { enrpServerUserAddrTableEntry 1 }

enrpServerUserL3Proto OBJECT-TYPE
SYNTAX     InetAddressType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The network-layer protocol (IPv4 or IPv6) of an IP address of
an user transport endpoint."
::= { enrpServerUserAddrTableEntry 2 }

enrpServerUserL3Addr OBJECT-TYPE
SYNTAX     InetAddress
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The IP address of an user transport endpoint."
::= { enrpServerUserAddrTableEntry 3 }

enrpServerUserL3Opaque OBJECT-TYPE
SYNTAX     OpaqueAddressType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The opaque address of an user transport endpoint."
::= { enrpServerUserAddrTableEntry 4 }


-- ## Definition of ENRP address list table #######################
enrpServerENRPAddrTable OBJECT-TYPE
SYNTAX     SEQUENCE OF ENRPServerENRPAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A table listing of all IP addresses of the ENRP
transport endpoint."
::= { enrpServers 7 }

enrpServerENRPAddrTableEntry  OBJECT-TYPE
SYNTAX     ENRPServerENRPAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An IP address of the ENRP transport endpoint."
INDEX { enrpServerIndex,
enrpServerENRPAddrTableIndex }
::= { enrpServerENRPAddrTable 1 }

ENRPServerENRPAddrTableEntry ::= SEQUENCE {
enrpServerENRPAddrTableIndex Unsigned32,
enrpServerENRPL3Proto            InetAddressType,
enrpServerENRPL3Addr             InetAddress }

enrpServerENRPAddrTableIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A unique identifier for the IP address of an ENRP transport
endpoint."
::= { enrpServerENRPAddrTableEntry 1 }

enrpServerENRPL3Proto OBJECT-TYPE
SYNTAX     InetAddressType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The network-layer protocol (IPv4 or IPv6) of an IP address of
an ENRP transport endpoint."
::= { enrpServerENRPAddrTableEntry 2 }

enrpServerENRPL3Addr OBJECT-TYPE
SYNTAX     InetAddress
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The IP address of an ENRP transport endpoint."
::= { enrpServerENRPAddrTableEntry 3 }


-- ## Definition of peer table ####################################
enrpServerPeerTable OBJECT-TYPE
SYNTAX     SEQUENCE OF ENRPServerPeerEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"The table listing of a peer table."
::= { enrpServers 8 }

enrpServerPeerEntry OBJECT-TYPE
SYNTAX     ENRPServerPeerEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A peer entry in the table listing of a peer table."
INDEX { enrpServerPeerIndex }
::= { enrpServerPeerTable 1 }

ENRPServerPeerEntry ::= SEQUENCE {
enrpServerPeerIndex      Unsigned32,
enrpServerPeerIdentifier Unsigned32,
enrpServerPeerPort       Unsigned32,
enrpServerPeerLastHeard  TimeTicks }

enrpServerPeerIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A unique identifier for a peer entry in the table listing
of a peer table."
::= { enrpServerPeerEntry 1 }

enrpServerPeerIdentifier OBJECT-TYPE
SYNTAX     Unsigned32
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The ENRP identifier of this peer."
::= { enrpServerPeerEntry 2 }

enrpServerPeerPort OBJECT-TYPE
SYNTAX     Unsigned32 (1..65535)
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The SCTP port number of the ENRP transport endpoint of this peer."
::= { enrpServerPeerEntry 3 }

enrpServerPeerLastHeard OBJECT-TYPE
SYNTAX     TimeTicks
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The time since the reception of the last ENRP Peer Presence
message of this peer."
::= { enrpServerPeerEntry 4 }


-- ## Definition of peer address list table #######################
enrpServerPeerAddrTable OBJECT-TYPE
SYNTAX     SEQUENCE OF ENRPServerPeerAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A table listing of the peer endpoint addresses."
::= { enrpServers 9 }

enrpServerPeerAddrTableEntry  OBJECT-TYPE
SYNTAX     ENRPServerPeerAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A table listing of all IP addresses of the ENRP
transport endpoint of a peer referenced by peerIndex."
INDEX { enrpServerPeerIndex,
enrpServerPeerAddrTableIndex }
::= { enrpServerPeerAddrTable 1 }

ENRPServerPeerAddrTableEntry ::= SEQUENCE {
enrpServerPeerAddrTableIndex Unsigned32,
enrpServerPeerL3Proto            InetAddressType,
enrpServerPeerL3Addr             InetAddress }

enrpServerPeerAddrTableIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A unique identifier for the IP address of a peer ENRP
transport endpoint."
::= { enrpServerPeerAddrTableEntry 1 }

enrpServerPeerL3Proto OBJECT-TYPE
SYNTAX     InetAddressType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The network-layer protocol (IPv4 or IPv6) of an IP address of
a peer ENRP transport endpoint."
::= { enrpServerPeerAddrTableEntry 2 }

enrpServerPeerL3Addr OBJECT-TYPE
SYNTAX     InetAddress
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The IP address of a peer ENRP transport endpoint."
::= { enrpServerPeerAddrTableEntry 3 }



-- ################################################################
-- #### Pool Elements Section                                  ####
-- ################################################################

-- ## Definition of the pool element table ########################
poolElementTable OBJECT-TYPE
SYNTAX     SEQUENCE OF PoolElementEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"The table listing of pool elements."
::= { poolElements 1 }

poolElementEntry OBJECT-TYPE
SYNTAX     PoolElementEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A pool element in the table listing of pool elements."
INDEX { poolElementIndex }
::= { poolElementTable 1 }

PoolElementEntry ::= SEQUENCE {
poolElementIndex                 Unsigned32,
poolElementOperationScope        OperationScopeType,
poolElementPoolHandle            PoolHandleType,
poolElementIdentifier            PoolElementIdentifierType,
poolElementDescription           OCTET STRING,
poolElementUptime                TimeTicks,
poolElementASAPTransportPort     Unsigned32,
poolElementUserTransportProtocol Unsigned32,
poolElementUserTransportPort     Unsigned32,
poolElementUserTransportUse      TransportUseType,
poolElementPolicyID              PolicyIDType,
poolElementPolicyDescr           OCTET STRING,
poolElementPolicyWeight          PolicyWeightType,
poolElementPolicyLoad            PolicyLoadType,
poolElementPolicyLoadDegradation PolicyLoadType,
poolElementRegistrationLife      TimeTicks,
poolElementHomeENRPServer        ENRPServerIdentifierType }


poolElementIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An integer to uniquely identify a pool element. Note,
that uniqueness of a pool element identifier in the pool
is not enforced, therefore this index is required here!"
::={ poolElementEntry 1 }

poolElementOperationScope OBJECT-TYPE
SYNTAX     OperationScopeType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The operation scope of this pool element."
::= { poolElementEntry 2 }

poolElementPoolHandle OBJECT-TYPE
SYNTAX     PoolHandleType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The pool handle of this pool element."
::={ poolElementEntry 3 }

poolElementIdentifier OBJECT-TYPE
SYNTAX     PoolElementIdentifierType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The pool element identifier of this pool element."
::={ poolElementEntry 4 }

poolElementDescription OBJECT-TYPE
SYNTAX     OCTET STRING (SIZE (0..255))
MAX-ACCESS read-write
STATUS     current
DESCRIPTION
"A textual description of this pool element, e.g. its location
and a contact address of its administrator."
::= { poolElementEntry 5 }

poolElementUptime OBJECT-TYPE
SYNTAX     TimeTicks
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The ENRP service uptime of this pool element."
::= { poolElementEntry 6 }

poolElementASAPTransportPort OBJECT-TYPE
SYNTAX     Unsigned32 (1..65535)
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The SCTP port number of the ASAP endpoint of this pool
element."
::= { poolElementEntry 7 }

poolElementUserTransportProtocol OBJECT-TYPE
SYNTAX     Unsigned32 (0..255)
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The transport protocol number of the service endpoint
of this pool element."
::= { poolElementEntry 8 }

poolElementUserTransportPort OBJECT-TYPE
SYNTAX     Unsigned32 (1..65535)
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The transport protocol's port number of the service
endpoint of this pool element."
::= { poolElementEntry 9 }

poolElementUserTransportUse OBJECT-TYPE
SYNTAX     TransportUseType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The transport use of the service endpoint of this pool
element."
::= { poolElementEntry 10 }

poolElementPolicyID OBJECT-TYPE
SYNTAX     PolicyIDType
MAX-ACCESS read-write
STATUS     current
DESCRIPTION
"The pool policy of this pool element."
::= { poolElementEntry 11 }

poolElementPolicyDescr OBJECT-TYPE
SYNTAX     OCTET STRING (SIZE (0..255))
MAX-ACCESS read-write
STATUS     current
DESCRIPTION
"The textual description of the pool policy of this pool
element."
::= { poolElementEntry 12 }

poolElementPolicyWeight OBJECT-TYPE
SYNTAX     PolicyWeightType
MAX-ACCESS read-write
STATUS     current
DESCRIPTION
"The pool policy's weight parameter for this pool element.
This field is read/write."
::= { poolElementEntry 13 }

poolElementPolicyLoad OBJECT-TYPE
SYNTAX     PolicyLoadType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The pool policy's load status for this pool element."
::= { poolElementEntry 14 }

poolElementPolicyLoadDegradation OBJECT-TYPE
SYNTAX     PolicyLoadType
MAX-ACCESS read-write
STATUS     current
DESCRIPTION
"The pool policy's load degradation parameter for this pool
element."
::= { poolElementEntry 15 }

poolElementRegistrationLife OBJECT-TYPE
SYNTAX     TimeTicks
MAX-ACCESS read-write
STATUS     current
DESCRIPTION
"The registration life of this pool element."
::= { poolElementEntry 16 }

poolElementHomeENRPServer OBJECT-TYPE
SYNTAX     ENRPServerIdentifierType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The ID of the home ENRP server of this pool element."
::= { poolElementEntry 17 }


-- ## Definition of the ASAP transport address list table #########
poolElementASAPAddrTable OBJECT-TYPE
SYNTAX     SEQUENCE OF PoolElementASAPAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A table listing of all IP addresses of the ASAP transport
endpoint."
::= { poolElements 2 }

poolElementASAPAddrTableEntry  OBJECT-TYPE
SYNTAX     PoolElementASAPAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An IP address of the ASAP transport endpoint."
INDEX { poolElementIndex,
poolElementASAPAddrTableIndex }
::= { poolElementASAPAddrTable 1 }

PoolElementASAPAddrTableEntry ::= SEQUENCE {
poolElementASAPAddrTableIndex Unsigned32,
poolElementASAPL3Proto            InetAddressType,
poolElementASAPL3Addr             InetAddress }

poolElementASAPAddrTableIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A unique identifier for the IP address of an ASAP transport
endpoint."
::= { poolElementASAPAddrTableEntry 1 }

poolElementASAPL3Proto OBJECT-TYPE
SYNTAX     InetAddressType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The network-layer protocol (IPv4 or IPv6) of an IP address of
an ASAP transport endpoint."
::= { poolElementASAPAddrTableEntry 2 }

poolElementASAPL3Addr OBJECT-TYPE
SYNTAX     InetAddress
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The IP address of an ASAP transport endpoint."
::= { poolElementASAPAddrTableEntry 3 }


-- ## Definition of the user transport address list table #########
poolElementUserAddrTable OBJECT-TYPE
SYNTAX     SEQUENCE OF PoolElementUserAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A table listing of all IP addresses of the user
transport endpoint."
::= { poolElements 6 }

poolElementUserAddrTableEntry  OBJECT-TYPE
SYNTAX     PoolElementUserAddrTableEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An IP address of the user transport endpoint."
INDEX { poolElementIndex,
poolElementUserAddrTableIndex }
::= { poolElementUserAddrTable 1 }

PoolElementUserAddrTableEntry ::= SEQUENCE {
poolElementUserAddrTableIndex Unsigned32,
poolElementUserL3Proto        InetAddressType,
poolElementUserL3Addr         InetAddress,
poolElementUserL3Opaque       OpaqueAddressType }

poolElementUserAddrTableIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A unique identifier for the IP address of an user transport
endpoint."
::= { poolElementUserAddrTableEntry 1 }

poolElementUserL3Proto OBJECT-TYPE
SYNTAX     InetAddressType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The network-layer protocol of an IP address of
an user transport endpoint. Set to unknown for opaque address."
::= { poolElementUserAddrTableEntry 2 }

poolElementUserL3Addr OBJECT-TYPE
SYNTAX     InetAddress
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The IP address of an user transport endpoint."
::= { poolElementUserAddrTableEntry 3 }

poolElementUserL3Opaque OBJECT-TYPE
SYNTAX     OpaqueAddressType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The opaque address of an user transport endpoint."
::= { poolElementUserAddrTableEntry 4 }



-- ################################################################
-- #### Pool Users Section                                     ####
-- ################################################################

-- ## Definition of the pool user table ###########################
poolUserTable OBJECT-TYPE
SYNTAX     SEQUENCE OF PoolUserEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"The table listing of pool users."
::= { poolUsers 1 }

poolUserEntry OBJECT-TYPE
SYNTAX     PoolUserEntry
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"A pool user in the table listing of pool users."
INDEX { poolUserIndex }
::= { poolUserTable 1 }

PoolUserEntry ::= SEQUENCE {
poolUserIndex          Unsigned32,
poolUserOperationScope OperationScopeType,
poolUserPoolHandle     PoolHandleType,
poolUserDescription    OCTET STRING,
poolUserUptime         TimeTicks }

poolUserIndex OBJECT-TYPE
SYNTAX     Unsigned32 (1..4294967295)
MAX-ACCESS not-accessible
STATUS     current
DESCRIPTION
"An integer to uniquely identify a pool user."
::={ poolUserEntry 1 }

poolUserOperationScope OBJECT-TYPE
SYNTAX     OperationScopeType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The operation scope of this pool user."
::= { poolUserEntry 2 }

poolUserPoolHandle OBJECT-TYPE
SYNTAX     PoolHandleType
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The pool handle of this pool user."
::={ poolUserEntry 3 }

poolUserDescription OBJECT-TYPE
SYNTAX     OCTET STRING (SIZE (0..255))
MAX-ACCESS read-write
STATUS     current
DESCRIPTION
"A textual description of this pool user, e.g. its location
and a contact address of its administrator."
::= { poolUserEntry 4 }

poolUserUptime OBJECT-TYPE
SYNTAX     TimeTicks
MAX-ACCESS read-only
STATUS     current
DESCRIPTION
"The ENRP service uptime of this pool user."
::= { poolUserEntry 5 }



-- ## MIB conformance and compliance ##############################
rserpoolMIBConformance OBJECT IDENTIFIER ::= { rserpoolMIB 4 }

rserpoolMIBCompliances OBJECT IDENTIFIER ::= {
rserpoolMIBConformance 1
}
rserpoolMIBGroups      OBJECT IDENTIFIER ::= {
rserpoolMIBConformance 2
}


rserpoolMIBCompliance MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement RSerPool."
MODULE  -- this module
MANDATORY-GROUPS { enrpServerGroup,
poolElementGroup,
poolUserGroup }
::= { rserpoolMIBCompliances 1 }

enrpServerGroup OBJECT-GROUP
OBJECTS { enrpServerOperationScope,
enrpServerIdentifier,
enrpServerDescription,
enrpServerUptime,
enrpServerPort,
enrpServerASAPAnnouncePort,
enrpServerASAPAnnounceAddr,
enrpServerASAPAnnounceAddrType,
enrpServerENRPAnnounceAddrType,
enrpServerENRPAnnouncePort,
enrpServerENRPAnnounceAddr,

enrpServerPoolHandle,
enrpServerPoolElementIdentifier,

enrpServerASAPTransportPort,
enrpServerUserTransportProtocol,
enrpServerUserTransportUse,
enrpServerUserTransportPort,
enrpServerPolicyID,
enrpServerPolicyDescr,
enrpServerPolicyWeight,
enrpServerPolicyLoad,
enrpServerPolicyLoadDegradation,
enrpServerRegistrationLife,
enrpServerHomeENRPServer,

enrpServerASAPL3Proto,
enrpServerASAPL3Addr,

enrpServerUserL3Proto,
enrpServerUserL3Addr,
enrpServerUserL3Opaque,

enrpServerENRPL3Proto,
enrpServerENRPL3Addr,

enrpServerPeerIdentifier,
enrpServerPeerPort,
enrpServerPeerLastHeard,
enrpServerPeerL3Proto,
enrpServerPeerL3Addr }
STATUS current
DESCRIPTION "The group of ENRP servers"
::= { rserpoolMIBGroups 1 }

poolElementGroup OBJECT-GROUP
OBJECTS { poolElementOperationScope,
poolElementPoolHandle,
poolElementIdentifier,
poolElementDescription,
poolElementUptime,
poolElementASAPTransportPort,
poolElementUserTransportProtocol,
poolElementUserTransportPort,
poolElementUserTransportUse,
poolElementPolicyID,
poolElementPolicyDescr,
poolElementPolicyWeight,
poolElementPolicyLoad,
poolElementPolicyLoadDegradation,
poolElementRegistrationLife,
poolElementHomeENRPServer,

poolElementASAPL3Proto,
poolElementASAPL3Addr,

poolElementUserL3Proto,
poolElementUserL3Addr,
poolElementUserL3Opaque }
STATUS current
DESCRIPTION "The group of pool elements"
::= { rserpoolMIBGroups 2 }

poolUserGroup OBJECT-GROUP
OBJECTS { poolUserOperationScope,
poolUserPoolHandle,
poolUserDescription,
poolUserUptime }
STATUS current
DESCRIPTION "The group of pool users"
::= { rserpoolMIBGroups 3 }


END

</artwork>
</figure>

</section>


<section anchor="securityConsiderations" title="Security Considerations">
<t>
 SNMPv1 by itself is not a secure environment.  Even if the network itself is
 secure (for example by using IPSec), there is no control as to who
 on the secure network is allowed to access and GET/SET
 (read/change/create/delete) the objects in this MIB.
</t>
<t>
 It is recommended that the implementers consider the security features as
 provided by the SNMPv3 framework. Specifically, the use of the User-based
 Security Model RFC 3414 <xref target="RFC3414" /> and the View-based Access
 Control Model RFC 3415 <xref target="RFC3415" /> is recommended.
</t>
<t>
 It is then a customer/user responsibility to ensure that the SNMP entity giving
 access to an instance of this MIB, is properly configured to give access to the
 objects only to those principals (users) that have legitimate rights to indeed
 GET or SET (change/create/delete) them.
</t>
</section>


<section anchor="IANAConsiderations" title="IANA Considerations">
<t>
 IANA will need to assign an OID prefix for the RSerPool MIB.
</t>
</section>


<section anchor="acks" title="Acknowledgments">
<t>
   The authors would like to express a special note of
   thanks to Phillip Conrad and Kevin Pinzhoffer
   for their efforts in the early formation of this draft.
   Also, the authors would like to thank
   Nihad Cosic, Dirk Hoffstadt, Michael Kohnen, Jobin Pulinthanath,
   Randall Stewart, Michael Tuexen and Xing Zhou
   for their support.
</t>
</section>


</middle>


<back>

<references title='Normative References'>
<?rfc include="reference.RFC.3237" ?>
<?rfc include="reference.RFC.5351" ?>
<?rfc include="reference.RFC.5352" ?>
<?rfc include="reference.RFC.5353" ?>
<?rfc include="reference.RFC.5354" ?>
<?rfc include="reference.RFC.5355" ?>
<?rfc include="reference.RFC.5356" ?>
<?rfc include="reference.RFC.3414" ?>
<?rfc include="reference.RFC.3415" ?>
<?rfc include="reference.RFC.2578" ?>
<?rfc include="reference.RFC.2579" ?>
<?rfc include="reference.RFC.2580" ?>
<?rfc include="reference.RFC.3410" ?>
</references>


<references title='Informative References'>
<?rfc include="reference.RSerPoolPage" ?>
<?rfc include="reference.Dre2006" ?>
<?rfc include="reference.LCN2005" ?>
<?rfc include="reference.IJHIT2008" ?>
<?rfc include="reference.SNMPMIBS" ?>
</references>

</back>

</rfc>
