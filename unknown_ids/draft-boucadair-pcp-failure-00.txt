


PCP working group                                           M. Boucadair
Internet-Draft                                            France Telecom
Intended status: Standards Track                               F. Dupont
Expires: July 10, 2011                       Internet Systems Consortium
                                                                R. Penno
                                                        Juniper Networks
                                                         January 6, 2011


             Port Control Protocol (PCP) Failure Scenarios
                     draft-boucadair-pcp-failure-00

Abstract

   This document identifies and analyses several PCP failure scenarios.
   A procedure to retrieve the mapping(s) from the PCP Server is
   proposed.  This procedure relies upon the use of two new PCP OpCodes:
   GET and GETNEXT.

Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on July 10, 2011.

Copyright Notice

   Copyright (c) 2011 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal



Boucadair, et al.         Expires July 10, 2011                 [Page 1]

Internet-Draft            PCP Failure Scenarios             January 2011


   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  PCP Failure Scenarios  . . . . . . . . . . . . . . . . . . . .  3
     2.1.  Change of the IP Address of The PCP Server . . . . . . . .  3
     2.2.  Application Crash  . . . . . . . . . . . . . . . . . . . .  3
     2.3.  PCP Client Crash . . . . . . . . . . . . . . . . . . . . .  4
     2.4.  Change of the Internal IP Address  . . . . . . . . . . . .  4
     2.5.  Change of the CPE WAN IP Address . . . . . . . . . . . . .  5
     2.6.  Restart or Failure of the PCP Server . . . . . . . . . . .  5
       2.6.1.  Basic Rule . . . . . . . . . . . . . . . . . . . . . .  5
       2.6.2.  Clear PCP Mappings . . . . . . . . . . . . . . . . . .  6
       2.6.3.  State Redundancy is Enabled  . . . . . . . . . . . . .  6
       2.6.4.  Cold-Standby without State Redundancy  . . . . . . . .  6
       2.6.5.  Anycast Redundancy Mode  . . . . . . . . . . . . . . .  6
   3.  PCP State Synchronization Overview . . . . . . . . . . . . . .  6
   4.  GET and GETNEXT OpCodes  . . . . . . . . . . . . . . . . . . .  7
     4.1.  Message Format . . . . . . . . . . . . . . . . . . . . . .  7
     4.2.  New Result Codes . . . . . . . . . . . . . . . . . . . . .  8
     4.3.  GET: Retrieving One Single Mapping . . . . . . . . . . . .  9
     4.4.  GETNEXT: Retrieve the Mapping Table  . . . . . . . . . . .  9
       4.4.1.  Filter . . . . . . . . . . . . . . . . . . . . . . . .  9
       4.4.2.  Mapping Table Order  . . . . . . . . . . . . . . . . . 10
       4.4.3.  Behavior . . . . . . . . . . . . . . . . . . . . . . . 10
       4.4.4.  Misc . . . . . . . . . . . . . . . . . . . . . . . . . 11
     4.5.  Flow Examples  . . . . . . . . . . . . . . . . . . . . . . 11
   5.  Security Considerations  . . . . . . . . . . . . . . . . . . . 17
   6.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 17
   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 17
     7.1.  Normative References . . . . . . . . . . . . . . . . . . . 17
     7.2.  Informative References . . . . . . . . . . . . . . . . . . 17
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 18









Boucadair, et al.         Expires July 10, 2011                 [Page 2]

Internet-Draft            PCP Failure Scenarios             January 2011


1.  Introduction

   This document discusses several failure scenarios that may occurs
   when deploying PCP.

   The purpose is to kick off discussion about these concerns and to
   integrate a consolidated version into the base PCP specification
   document [I-D.ietf-pcp-base].


2.  PCP Failure Scenarios

2.1.  Change of the IP Address of The PCP Server

   When a new IP address is used to reach its PCP Server, the PCP Client
   MUST re-create all of its mappings using the newly discovered IP
   address.

   The PCP Client MUST undertake the same process as per refreshing an
   existing mapping (see [I-D.ietf-pcp-base]); the only difference is
   the PCP Requests are sent to a distinct IP address.  No specific
   behavior is required from the PCP Server for handling these requests.

2.2.  Application Crash

   When a fatal error is encountered by an application relying on PCP to
   open pinholes on an upstream device, and upon the restart of that
   application, the PCP Client should issue appropriate requests to
   refresh the mappings of that application (e.g., clear old mappings
   and install new ones using the new port number used by the
   application).

   If a distinct port number is used by the application to bound its
   service (i.e., a new internal port number is to be signaled in PCP),
   the PCP Server may honor the refresh requests if the per-subscriber
   quota is not exceeded.  A distinct external port number would be
   assigned by the PCP Server due to the presence of "stale" mapping(s)
   associated with the "old" port number.

   To avoid this inconvenience induced by stale mappings, the PCP Client
   MAY clear the "old" mappings before issuing the refresh requests; but
   this would require the PCP Client to store the information about the
   "old" port number.  This may not be easy in some scenarios because
   the PCP Client may handle PCP requests on behalf of several
   applications and no means to identify the requesting application may
   be supported.  Means to identify the application are implementation-
   specific and are out of scope of this document.




Boucadair, et al.         Expires July 10, 2011                 [Page 3]

Internet-Draft            PCP Failure Scenarios             January 2011


   It is NOT RECOMMENDED for a PCP Client to issue a request to delete
   all the mappings associated with an internal IP address since other
   applications and PCP Client(s) may use the same internal IP address
   to instruct their pinholes in the PCP Server.

      [Ed.  This is in fact about the "application ID" idea.]

2.3.  PCP Client Crash

   The PCP Client may encounter a fatal error leading to its restart.
   In such case, the internal IP address and port numbers used by
   requesting applications are not impacted.  Therefore, the PCP
   mappings as maintained by the PCP Server are accurate and there is no
   need to refresh them.

   On the PCP Client side, a new UDP port should be assigned to issue
   PCP requests.  As a consequence, if outstanding requests have been
   sent to the PCP Server, the responses are likely to be lost.

      [Ed.  This is true only for the first NAT in a chain (or of course
      for one NAT chains).  For second and further NAT in a chain we
      have again a sub-case of the amnesic client issue.]

   If the PCP Client stores its mapping in a persistent memory, there is
   no need to retrieve the list of active mappings from the PCP Server.
   If several PCP Clients are co-located on the same host, related PCP
   mapping tables should be uniquely distinguished (e.g., a PCP Client
   does not delete pinholes instructed by another PCP Client.)

   If the PCP Client (or the application) is crashing, it should be
   allocating short PCP lifetimes until it is debugged and running
   properly.  If it is never debugged and never running properly, it
   should continue to request short PCP lifetimes.

      [Ed.  This is in the base-02 now.]

2.4.  Change of the Internal IP Address

   When a new IP address is assigned to a host embedding a PCP Client,
   the PCP Client MUST install on the PCP Server all the mappings it
   manages, using the new assigned IP address as the internal IP
   address.  The hinted external port number won't be assigned by the
   PCP Server since a "stale" mapping is already instantiated by the PCP
   Server (but it is associated with a distinct internal IP address).

   Depending on the configured policies, the PCP Server may honor all or
   part of the requests received from the PCP Client.  Upon receipt of
   the response from the PCP Server, the PCP Client MUST update its



Boucadair, et al.         Expires July 10, 2011                 [Page 4]

Internet-Draft            PCP Failure Scenarios             January 2011


   local PCP state with the new assigned port numbers and external IP
   address.

      [Ed.  Note: Do we need to support means to clear stale mappings
      first?  This may have an impact if the quota is exceed due to the
      presence of stale mappings.]

   A PCP Client may be used to manage pinholes on behalf of a third
   party (i.e., the PCP Client and the third party are not co-located on
   the same host).  If a new internal IP address is assigned to that
   third party (e.g., webcam), the PCP Client SHOULD be instructed to
   delete the old mapping(s) and create new one(s) using the new
   assigned internal IP address.

2.5.  Change of the CPE WAN IP Address

   The change of the IP address of the WAN interface of the CPE would
   have an impact on the accuracy of the mappings instantiated in the
   PCP Server:

   o  For the DS-Lite case [I-D.ietf-softwire-dual-stack-lite]: if a new
      IPv6 address is used by the B4 element when encapsulating IPv4
      packets in IPv6 ones, the mappings SHOULD be refreshed: If the PCP
      Client is embedded in the B4, the refresh operation is triggered
      by the change of the B4 IPv6 address.  This would be more
      complicated when the PCP Client is located in a device behind the
      B4.

         [Ed.  Note: how an IPv4 host behind a DS-Lite CPE is aware that
         a new IPv6 address is used by the B4?]

   o  For the NAT64 case [I-D.ietf-behave-v6v4-xlate-stateful], any
      change of the assigned IPv6 prefix delegated to the CPE will be
      detected by the PCP Client (because this leads to the allocation
      of a new IPv6 address).  The PCP Client has to undertake the
      operation described in Section 2.4.

2.6.  Restart or Failure of the PCP Server

   This section covers failure scenarios encountered by the PCP Server.

2.6.1.  Basic Rule

   In any situation the PCP Server loses all or part of its PCP state,
   the Epoch value MUST be reset when replying to received requests.
   Doing so would allow PCP Client to audit its mapping table.

   If the state is not lost, the PCP Server MUST NOT reset the Epoch



Boucadair, et al.         Expires July 10, 2011                 [Page 5]

Internet-Draft            PCP Failure Scenarios             January 2011


   value returned to requesting PCP Clients.

2.6.2.  Clear PCP Mappings

   When a command line or a configuration change is enforced to clear
   all or a subset of PCP mappings maintained by the PCP Server, the PCP
   Server MUST reset its Epoch to zero value.

2.6.3.  State Redundancy is Enabled

   When state redundancy is enabled, the state is not lost during
   failure events.  Failures are therefore transparent to requesting PCP
   Clients.  When a backup device takes over, Epoch MUST NOT be reset to
   zero.

2.6.4.  Cold-Standby without State Redundancy

   In this section we assume that a redundancy mechanisms is configured
   between a primary PCP-controlled device and a backup one but without
   activating any state synchronization for the PCP-instructed mappings
   between the backup and the primary devices.

   If the primary PCP-controlled device fails and the backup one takes
   over, the PCP Server MUST reset the Epoch to zero value.  Doing so
   would allow PCP Clients to detect the loss of states in the PCP
   Server and proceed to state synchronization.

2.6.5.  Anycast Redundancy Mode

   When an anycast-based mode is deployed (i.e., the same IP address is
   used to reach several PCP Servers) for redundancy reasons, the change
   of the PCP Server which handles the requests of a given PCP Client
   won't be detected by that PCP Client.

   Relying on the Epoch to detect the loss of state won't help in this
   scenario to re-create missing mappings.

   Proprietary solutions MAY be envisaged to coordinate amongst
   anycasted PCP Servers; otherwise the use of the anycast is NOT
   RECOMMENDED.


3.  PCP State Synchronization Overview

   The following sketches the state synchronization logic:






Boucadair, et al.         Expires July 10, 2011                 [Page 6]

Internet-Draft            PCP Failure Scenarios             January 2011


   o  The PCP Client/host/application maintains state;

   o  The PCP Server maintains state;

   o  If the PCP Client (resp., the PCP Server) crashes and restarts it
      just have to synchronize with the PCP Server (resp., the PCP
      Client);

   o  If both crash then one has to use stable storage and we fall back
      in the previous case as soon as we know which one (the Epoch value
      gives this information);

   o  PCP Server -> PCP Client synchronization requires a GET mechanism
      to retrieve the state from the PCP Server;

   o  PCP Client -> PCP Server synchronization is done by a re-create or
      refresh of the state.  The PCP Client MAY retrieve the PCP Server
      state in order to prevent stale mappings.


4.  GET and GETNEXT OpCodes

   This section defines two new PCP OpCodes called: GET and GETNEXT.
   These PCP methods are used by the PCP Client to retrieve a mapping or
   to walk through the mapping table maintained by the PCP Server and
   retrieves a list of mapping entries it instantiated.

4.1.  Message Format

   The layout of GET and GETNEXT OpCodes request is shown in Figure 1.
   Figure 2 shows the message format of GET and GETNEXT response.




















Boucadair, et al.         Expires July 10, 2011                 [Page 7]

Internet-Draft            PCP Failure Scenarios             January 2011


        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |  Protocol     |          Reserved                             |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                                                               |
       : Pinhole Internal IP address (32 or 128, depending on OpCode)  :
       |                                                               |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                                                               |
       : Assigned external IP address (32 or 128, depending on OpCode) :
       |                                                               |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                          all zeros                            |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |       internal port           |    assigned external port     |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


           Figure 1: GET/GETNEXT: Message format of the request

        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |  Protocol     |          Reserved                             |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                                                               |
       : Pinhole Internal IP address (32 or 128, depending on OpCode)  :
       |                                                               |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                                                               |
       : Assigned external IP address (32 or 128, depending on OpCode) :
       |                                                               |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                       Remaining lifetime                      |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |       internal port           |    assigned external port     |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


           Figure 2: GET/GETNEXT: Message format of the response

4.2.  New Result Codes


      TBD - NO_MAPPING_FOUND, e.g., there is no matching mapping.
      TBD - NO_MORE_MAPPING, e.g., there is no greater matching mapping.




Boucadair, et al.         Expires July 10, 2011                 [Page 8]

Internet-Draft            PCP Failure Scenarios             January 2011


                Figure 3: GET/GETNEXT-Specific Result Codes

4.3.  GET: Retrieving One Single Mapping

   In order to retrieve a mapping with known attributes (e.g., the
   internal IP address, internal port number and the protocol), the PCP
   Client issues a GET request having these attributes set to their
   known values, and all others fields set to wildcard values (i.e.,
   zero).  The lifetime field SHOULD be set to zero and MUST be ignored
   on reception.

   Upon receipt of the request, the PCP Server checks whether a mapping
   matching the given attributes exists.  If one mapping is found a GET
   response enclosing the mapping information is returned to the PCP
   Client.  If no mapping is found, the PCP Server returns back a GET
   response with result code set to NO_MAPPING_FOUND.  If more than one
   mapping is found, the PCP Server returns back a GET response with
   result code set to AMBIGUOUS, and the PCP Client can retry with a
   more specific GET request.

      [Ed.  Two sets of attributes characterize a mapping (they are used
      to lookup a mapping with an incoming or outgoing packet): the
      internal set (internal address and port, and protocol) and the
      external set (external address and port, and protocol).  If End-
      point Independent Mode is not used, the remote peer address and
      port (i.e., REMOTE_PEER) can be needed too.

      When a PCP GET response indicating an error code equal to
      AMBIGUOUS is received, the PCP Client may adopt two strategies:
      The REMOTE_PEER option can be used to narrow the lockup; the PCP
      Client issues a GET request with a REMOTE_PEER filter set to a
      valid IP address (and port); or the PCP Client issues a GETNEXT
      request having all known attributes set (i.e., the internal IP
      address, internal port number and the protocol).  The PCP Client
      and the PCP Server undertake the procedure specified in
      Section 4.4 to retrieve all the mappings having the same (internal
      IP address, internal port number and the protocol).  REMOTE_PEER
      option can be used to retrieve its value.]

4.4.  GETNEXT: Retrieve the Mapping Table

   The GETNEXT operation allows a PCP Client to incrementally retrieve
   the an image of the PCP Server's mapping table.

4.4.1.  Filter

   A filter denotes a set of attributes indicated by the PCP Client to a
   PCP Server in a GETNEXT request.  Only mappings matching that filter



Boucadair, et al.         Expires July 10, 2011                 [Page 9]

Internet-Draft            PCP Failure Scenarios             January 2011


   will be returned to the requesting PCP Client.

   Currently the only defined filter is the value of the internal IP
   address field; e.g.- with a not wildcard (i.e., not zero) internal IP
   address in GETNEXT requests, the PCP Server should return all the
   mappings having an internal IP address equal to this address.

4.4.2.  Mapping Table Order

   A PCP Server MUST define a fixed order between mappings with the all
   zero mapping as the minimum element.  It MAY use a lexicographical
   order on mapping attributes.

      [Ed.  To prevent the removal of a pinhole in the PCP Server due to
      a PCP Client failure, mappings with lower remaining lifetime MAY
      be returned first.]

      [Ed.  The problem is this order is not stable: a mapping deletion
      or renewal will change the order and mess a slow retrieval.]

4.4.3.  Behavior

   To retrieve the mapping table, GETNEXT is used by a PCP Client to
   retrieve the first mapping from the PCP Server matching the filter
   (i.e., internal IP address).  When issuing the GETNEXT request, the
   internal IP address is set to a valid IP address or the wildcard
   (zero).  All the remaining fields SHOULD be set to zero.

   The PCP Server returns the first mapping matching the filter
   indicated by the PCP Client.  The PCP Server indicates in the GETNEXT
   response all the information related to the mapping.

   Upon receipt of the response, the PCP Client retrieves the enclosed
   mapping and stores it in its mapping table image.  Then GETNEXT
   request is sent by the PCP Client.  All the fields of the GETNEXT
   request except the filtering fields and the remaining lifetime are
   copied from the received GETNEXT response from the PCP Server.

   When GETNEXT request is received by the PCP Server, it reads the
   enclosed mapping and proceeds to a lookup of its mapping table to
   find the mapping having the attributes indicated in the GETNEXT
   request.  If none is found it returns the first matching mapping, if
   more than one is found it returns back a GETNEXT response with result
   code set to AMBIGUOUS.  If one is found, it returns either the next
   matching mapping when it exists, or a GETNEXT response with result
   code set to NO_MORE_MAPPING.

   This procedure is repeated by the PCP Client until retrieving all its



Boucadair, et al.         Expires July 10, 2011                [Page 10]

Internet-Draft            PCP Failure Scenarios             January 2011


   mappings from the PCP Server.  Termination is indicated by
   NO_MORE_MAPPING.

   The REMOTE_PEER option can be used to get its value.  Two strategies
   are possible for the PCP client: either it includes a REMOTE_PEER
   option in all GETNEXT requests, or it waits for an AMBIGUOUS error
   and uses a REMOTE_PEER option to solve conflicts.

      [Ed.  Wildcard REMOTE_PEER value is not defined in the pcp-base
      document.]

      [Ed.  Wildcard protocol to indicate ANY protocol is not defined in
      the pcp-base document.]

4.4.4.  Misc

   This section will be completed latter:

   * lock or not the mapping table in the server side?

   * with locks, when to unlock?

   * postpone PINxy requests until the synchronization process is
   completed?

4.5.  Flow Examples

   As an illustration example, let's consider the following mapping
   table is maintained by the PCP Server:

   +-----+--------------+----------+-----------+----------+------------+
   | Pro |  Internal IP | Internal |  External | External |  Remaining |
   |     |    Address   |   Port   |     IP    |   Port   |  Lifetime  |
   |     |              |          |  Address  |          |            |
   +-----+--------------+----------+-----------+----------+------------+
   | UDP | 198.51.100.1 |   25655  | 192.0.2.1 |   15659  |    1659    |
   | TCP | 198.51.100.2 |   12354  | 192.0.2.1 |   32654  |    3600    |
   | TCP | 198.51.100.2 |   8596   | 192.0.2.1 |   25659  |    6000    |
   | UDP | 198.51.100.1 |   19856  | 192.0.2.1 |   42654  |    7200    |
   | TCP | 198.51.100.1 |   15775  | 192.0.2.1 |   32652  |    9000    |
   +-----+--------------+----------+-----------+----------+------------+

                    Table 1: Excerpt of a mapping table

   As shown in Table 1, the PCP Server sorts the mapping table using the
   internal IP address and the remaining lifetime.

   Figure 5 illustrates the exchange that occurs when a PCP Client tries



Boucadair, et al.         Expires July 10, 2011                [Page 11]

Internet-Draft            PCP Failure Scenarios             January 2011


   to retrieve the information related to a non-existing mapping.
   Figure 5 shows an example of a PCP Client which retrieves
   successfully an existing mapping from the PCP Server.

                    +------+                           +------+
                    | PCP  |                           | PCP  |
                    |Client|                           |Server|
                    +------+                           +------+
                       |       (1) PCP GET Request         |
                       |           protocol= TCP           |
                       | internal-ip-address= 198.51.100.1 |
                       |        internal-port= 59864       |
                       |---------------------------------->|
                       |                                   |
                       |        (2) PCP GET Response       |
                       |       error= NO_MAPPING_FOUND     |
                       |<----------------------------------|
                       |                                   |


                Figure 4: Example of a failed GET operation

   Figure 5 shows an example of a PCP Client which retrieves
   successfully an existing mapping from the PCP Server.



























Boucadair, et al.         Expires July 10, 2011                [Page 12]

Internet-Draft            PCP Failure Scenarios             January 2011


                    +------+                           +------+
                    | PCP  |                           | PCP  |
                    |Client|                           |Server|
                    +------+                           +------+
                       |       (1) PCP GET Request         |
                       |           protocol= TCP           |
                       | internal-ip-address= 198.51.100.1 |
                       |        internal-port= 25655       |
                       |---------------------------------->|
                       |                                   |
                       |      (2) PCP GET Response         |
                       |           protocol= TCP           |
                       | internal-ip-address= 198.51.100.1 |
                       |        internal-port= 25655       |
                       |   external-ip-address= 192.0.2.1  |
                       |        external-port= 15659       |
                       |       remaining-lifetime= 1659    |
                       |<----------------------------------|
                       |                                   |
                       |      (3) PCP PIN44 Request        |
                       |           protocol= TCP           |
                       | internal-ip-address= 198.51.100.1 |
                       |        internal-port= 25655       |
                       |   external-ip-address= 192.0.2.1  |
                       |        external-port= 15659       |
                       |       requested-lifetime= 0       |
                       |---------------------------------->|
                       |                                   |

              Figure 5: Example of a successful GET operation

   In reference to Figure 6, the PCP Server returns first the mapping
   having the internal address equal to 192.0.2.1 with the lower
   remaining lifetime.

















Boucadair, et al.         Expires July 10, 2011                [Page 13]

Internet-Draft            PCP Failure Scenarios             January 2011


                    +------+                           +------+
                    | PCP  |                           | PCP  |
                    |Client|                           |Server|
                    +------+                           +------+
                       |       (1) PCP GETNEXT Request     |
                       | internal-ip-address= 198.51.100.2 |
                       |---------------------------------->|
                       |                                   |
                       |       (2) PCP GETNEXT Response    |
                       |           protocol= TCP           |
                       | internal-ip-address= 198.51.100.2 |
                       |        internal-port= 12354       |
                       |   external-ip-address= 192.0.2.1  |
                       |        external-port= 32654       |
                       |       remaining-lifetime= 3600    |
                       |<----------------------------------|
                       |                                   |
                       |       (3) PCP GETNEXT Request     |
                       |           protocol= TCP           |
                       | internal-ip-address= 198.51.100.2 |
                       |        internal-port= 12354       |
                       |   external-ip-address= 192.0.2.1  |
                       |        external-port= 32654       |
                       |---------------------------------->|
                       |                                   |
                       |       (4) PCP GETNEXT Response    |
                       |           protocol= TCP           |
                       | internal-ip-address= 198.51.100.2 |
                       |        internal-port= 8596        |
                       |   external-ip-address= 192.0.2.1  |
                       |        external-port= 25659       |
                       |       remaining-lifetime= 6000    |
                       |<----------------------------------|
                       |                                   |
                       |       (5) PCP GETNEXT Request     |
                       |           protocol= TCP           |
                       | internal-ip-address= 198.51.100.2 |
                       |        internal-port= 8596        |
                       |   external-ip-address= 192.0.2.1  |
                       |        external-port= 25659       |
                       |---------------------------------->|
                       |                                   |
                       |      (6) PCP GETNEXT Response     |
                       |        error= NO_MORE_MAPPING     |
                       |<----------------------------------|
                       |                                   |

                     Figure 6: Flow example of GETNEXT



Boucadair, et al.         Expires July 10, 2011                [Page 14]

Internet-Draft            PCP Failure Scenarios             January 2011


   In reference to Figure 7, the PCP Server returns first the mapping
   having the internal address equal to 192.0.2.2 with the lower
   remaining lifetime.  In this example, the same internal port is used
   for TCP and UDP.















































Boucadair, et al.         Expires July 10, 2011                [Page 15]

Internet-Draft            PCP Failure Scenarios             January 2011


                    +------+                           +------+
                    | PCP  |                           | PCP  |
                    |Client|                           |Server|
                    +------+                           +------+
                       |       (1) PCP GETNEXT Request     |
                       | internal-ip-address= 198.51.100.1 |
                       |---------------------------------->|
                       |                                   |
                       |       (2) PCP GETNEXT Response    |
                       |           protocol= UDP           |
                       | internal-ip-address= 198.51.100.1 |
                       |        internal-port= 25655       |
                       |   external-ip-address= 192.0.2.1  |
                       |        external-port= 15659       |
                       |       remaining-lifetime= 1659    |
                       |<----------------------------------|
                       |                                   |
                       |       (3) PCP GETNEXT Request     |
                       |           protocol= UDP           |
                       | internal-ip-address= 198.51.100.1 |
                       |        internal-port= 25655       |
                       |   external-ip-address= 192.0.2.1  |
                       |        external-port= 15659       |
                       |---------------------------------->|
                       |                                   |
                       |       (4) PCP GETNEXT Response    |
                       |           protocol= TCP           |
                       | internal-ip-address= 198.51.100.1 |
                       |        internal-port= 25655       |
                       |   external-ip-address= 192.0.2.1  |
                       |        external-port= 32652       |
                       |       remaining-lifetime= 9000    |
                       |<----------------------------------|
                       |                                   |
                       |       (5) PCP GETNEXT Request     |
                       |           protocol= TCP           |
                       | internal-ip-address= 198.51.100.1 |
                       |        internal-port= 25655       |
                       |   external-ip-address= 192.0.2.1  |
                       |        external-port= 32652       |
                       |---------------------------------->|
                       |                                   |
                       |      (6) PCP GETNEXT Response     |
                       |        error= NO_MORE_MAPPING     |
                       |<----------------------------------|
                       |                                   |

       Figure 7: Flow example of GETNEXT: same internal port number



Boucadair, et al.         Expires July 10, 2011                [Page 16]

Internet-Draft            PCP Failure Scenarios             January 2011


5.  Security Considerations

   TBD.

      [Ed.  Two comments:

      *  About the stable storage if this scenario is possible:

         1.  subscriber A gets a mapping

         2.  the PCP Server crashes and reboots

         3.  subscriber B gets the same mapping

         then the PCP Server MUST keep its state in a stable storage,
         i.e., it MUST NOT forget mappings.

      *  About GET/GETNEXT, typically if a PCP Client is allowed to
         delete a mapping it SHOULD be allowed to retrieve it; and if it
         is not allowed to delete a mapping it MUST NOT be allowed to
         retrieve it.]


6.  IANA Considerations

   TBD.


7.  References

7.1.  Normative References

   [I-D.ietf-pcp-base]
              Wing, D., "Port Control Protocol (PCP)",
              draft-ietf-pcp-base-02 (work in progress), January 2011.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

7.2.  Informative References

   [I-D.ietf-behave-v6v4-xlate-stateful]
              Bagnulo, M., Matthews, P., and I. Beijnum, "Stateful
              NAT64: Network Address and Protocol Translation from IPv6
              Clients to IPv4 Servers",
              draft-ietf-behave-v6v4-xlate-stateful-12 (work in
              progress), July 2010.




Boucadair, et al.         Expires July 10, 2011                [Page 17]

Internet-Draft            PCP Failure Scenarios             January 2011


   [I-D.ietf-softwire-dual-stack-lite]
              Durand, A., Droms, R., Woodyatt, J., and Y. Lee, "Dual-
              Stack Lite Broadband Deployments Following IPv4
              Exhaustion", draft-ietf-softwire-dual-stack-lite-06 (work
              in progress), August 2010.


Authors' Addresses

   Mohamed Boucadair
   France Telecom
   Rennes,   35000
   France

   Email: mohamed.boucadair@orange-ftgroup.com


   Francis Dupont
   Internet Systems Consortium

   Email: fdupont@isc.org


   Reinaldo Penno
   Juniper Networks
   1194 N Mathilda Avenue
   Sunnyvale, California  94089
   USA

   Email: rpenno@juniper.net





















Boucadair, et al.         Expires July 10, 2011                [Page 18]


