<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2506 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2506.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2234 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2234.xml">
<!ENTITY RFC2804 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2804.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3264 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3264.xml">
<!ENTITY RFC4574 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4574.xml">
<!ENTITY RFC3840 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3840.xml">
<!ENTITY RFC3841 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3841.xml">
<!ENTITY RFC4508 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4508.xml">
<!ENTITY RFC4579 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4579.xml">
<!ENTITY RFC6341 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6341.xml">
<!ENTITY I-D.ietf-siprec-architecture SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-architecture.xml">
<!ENTITY I-D.ietf-siprec-metadata SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-metadata.xml">
<!ENTITY I-D.eckel-siprec-rtp-rec SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.eckel-siprec-rtp-rec.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-siprec-protocol-00" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Session Recording Protocol">Session Recording Protocol</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Leon Portman" initials="L.P." role="editor"
            surname="Portman">
      <organization>NICE Systems</organization>
      <address>
        <postal>
          <street>8 Hapnina</street>
          <city>Ra'anana</city>
          <code>43017</code>
          <country>Israel</country>
        </postal>
        <email>leon.portman@nice.com</email>
      </address>
    </author>

    <author fullname="Henry Lum" initials="H." surname="Lum" role="editor">
      <organization>Genesys, Alcatel-Lucent</organization>
      <address>
        <postal>
          <street>1380 Rodick Road, Suite 200</street>
          <city>Markham</city>
		  <region>Ontario</region>
          <code>L3R4G5</code>
          <country>Canada</country>
        </postal>
        <email>henry.lum@genesyslab.com</email>
      </address>
    </author>

<author initials="A." surname="Johnston" fullname="Alan Johnston">
<organization>Avaya</organization>
 <address>
  <postal><street></street>
   <city>St. Louis</city><region>MO</region><code>63124</code> 
  </postal>
  <email>alan.b.johnston@gmail.com</email>
  </address>
</author>

<author initials="A." surname="Hutton" fullname="Andrew Hutton">
<organization>Siemens Enterprise Communications</organization>
<address>
<email> 
andrew.hutton@siemens-enterprise.com
</email>
</address>
</author>

    <date month="August" day="15" year="2011" />
    <area>RAI</area>
    <workgroup>SIPREC</workgroup>
    <keyword>siprec</keyword>
    <abstract>
	  <t>The Session Recording Protocol is used for establishing recording session and reporting of the metadata of the communication session.</t>
	  <t>This document specifies the Session Recording Protocol.  The protocol is used between Session Recording Client (SRC) and Session Recording Server (SRS).</t>
    </abstract>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
      <t>Communication Session (CS) recording requires establishment of the recording session between communication system and recording system. In order to allow access to such recordings, the metadata about the CS shall be sent from the SRC to the SRS.</t>

      <t>The SIP-based Media Recording Requirements <xref target="RFC6341"/> list a set of requirements that need to be met by session recording protocols.  The Session Recording Protocol, which is specified in this document, meets these requirements.</t>

      <t>The remainder of this document is organized as follows: Section 2 defines the terminology used throughout this document, Section 3 discusses the scope of the Session Recording Protocol, Section 4 provides a non-normative overview of recording operations, Section 5 provides normative description of SIP extensions for the Recording Session, Section 6 provides normative description of SIP extensions for recording-aware user agents.</t>
 
    </section>

	<section anchor="Definitions" title="Definitions">
	  <t>This document refers to the core definitions provided in the architecture document <xref target="I-D.ietf-siprec-architecture"/>.</t>
	</section>
	
	<section title="Scope">
	    <t>The scope of the Session Recording Protocol includes the establishment of the recording sessions and the reporting of the metadata.  The scope also includes extensions supported by Record-aware User Agents such as indication of recording. The following items, which are not an exhaustive list, do not represent the protocol itself and are considered out of the scope of the Session Recording Protocol:</t>
		<t><list style="symbols">
		<t>Recording policies that determine whether the CS should be recorded</t>
		<t>Retention policies that determine how long a recording is stored</t>
		<t>Searching and accessing the recorded media and metadata</t>
		<t>Delivering recording session metadata through non-SIP mechanism</t>
		</list>
		</t>
	  </section>

	<section anchor="Overview" title="Overview of operations">
	   <t>This section is informative and provides a description of recording operations.</t>
	   
	   <t>As mentioned in the architecture document <xref target="I-D.ietf-siprec-architecture"/>, there are a couple of types of call flows based on the location of the Session Recording Client. The following sample call flows provide a quick overview of the operations between the SRC and the SRS.</t>
	   
	<section title="Delivering recorded media">
	   
       <t>When the SRC is deployed as a B2BUA, the SRC can route call requests from UA(A) to UA(B). As a SIP B2BUA, the SRC has access to the media path between the user agents.  When the SRC is aware that it should be recording the conversation, the SRC may bridge the media between UA(A) and UA(B).  The SRC then establishes the Recording Session with the SRS and sends replicated media towards the SRS.</t>
	   
   	   <t>An endpoint can also be acting as the SRC, and the endpoint itself will be establishing the Recording Session to the SRS.  Since the endpoint has access to the media in the Communication Session, the endpoint can send replicated media towards the SRS.</t>
	   
	   <t>The following is a sample call flow that shows the SRC establishing a recording session towards the SRS. The call flow is essentially identical when the SRC is a B2BUA or as the endpoint itself.  Note that the SRC can choose when to establish the Recording Session independent of the Communication Session, even though the following call flow suggests that the SRC is establishing the Recording Session (message #5) after the Communication Session is established.</t>

	   
	   <figure><artwork>
<![CDATA[
UA A           SRC                    UA B                    SRS
 |(1)CS INVITE  |                       |                      |
 |------------->|                       |                      |
 |              |(2)CS INVITE           |                      |
 |              |---------------------->|                      |
 |              |               (3)OK   |                      |
 |              |<----------------------|                      |
 |        (4)OK |                       |                      |
 |<-------------|                       |                      |
 |              |(5)RS INVITE with SDP  |                      |
 |              |--------------------------------------------->|
 |              |                       |       (6)OK with SDP |
 |              |<---------------------------------------------|
 |(7)CS RTP     |                       |                      |
 |=============>|======================>|                      |
 |<=============|<======================|                      |
 |              |(8)RS RTP              |                      |
 |              |=============================================>|
 |              |=============================================>|
 |(9)CS BYE     |                       |                      |
 |------------->|                       |                      |
 |              |(10)CS BYE             |                      |
 |              |---------------------->|                      |
 |              |(11)RS BYE             |                      |
 |              |--------------------------------------------->|
 |              |                       |                      |

         Figure 1: Basic Recording Call flow
]]>								 
	   </artwork></figure>  
	</section>
    <section title="Conference focus as an SRC">	
	   <t>A conference focus may also act as an SRC since it has access to all the media from each conference participant.  In this example, a user agent may REFER the conference focus to the SRS, and the SRC may choose to mix media streams from all participants as a single media stream towards the SRS.  In order to tell the conference focus to start a recording session to the SRS, the user agent can include the srs feature tag in the Refer-To header as per <xref target="RFC4508"/>.</t>
	   
	   <figure><artwork>
<![CDATA[
 UA A                 Focus                 UA B                SRS
   |                  (SRC)                  |                   |
   |                    |                    |                   |
   |      (already in a conference)          |                   |
   |<==================>|<==================>|                   |
   |(1)REFER sip:Conf-ID Refer-To:<SRS>;srs  |                   |
   |------------------->|                                        |
   |(2)202 Accepted     |                                        |
   |<-------------------|                                        |
   |  (3)NOTIFY (Trying)|                                        |
   |<-------------------|                                        |
   |(4)200 OK           |                                        |
   |------------------->|                                        |
   |                    |(5)RS INVITE Contact:Conf-ID;isfocus    |
   |                    |--------------------------------------->|
   |                    |                              (6)200 OK |
   |                    |<---------------------------------------|
   |                    | (7)RTP (mixed or unmixed)              |
   |                    |=======================================>|
   |     (8)NOTIFY (OK) |                                        |
   |<-------------------|                                        |
   |(9)200 OK           |                                        |
   |------------------->|                                        |

  Figure 2: Recording call flow - SRC as a conference focus
]]>	   
	   </artwork></figure>
	</section>
	
	<section title="Delivering recording metadata">
		<t>Certain metadata, such as the attributes of the recorded media stream, are already included in the SDP of the recording session.  This information is reused as part of the metadata.  The SRC may provide an initial metadata snapshot about recorded media streams in the initial INVITE content in the recording session.  Subsequent metadata updates can be represented as a stream of events in UPDATE or reINVITE requests sent by the SRC.  These metadata updates are normally incremental updates to the initial metadata snapshot to optimize on the size of updates, however, the SRC may also decide to send a new metadata snapshot anytime.</t>
		
		<t>The SRS also has the ability to send a request to the SRC to request to receive a new metadata snapshot update when the SRS fails to understand the current stream of incremental updates for whatever reason (ie. SRS gets a syntax/semantic error in metadata update, the SRS crashes and restarts), and the SRS may attach a reason along with the snapshot request.  This request allows both SRC and SRS to restart the states with a new metadata snapshot so that further metadata incremental updates will be based on the latest metadata snapshot.  Similar to the metadata content, the metadata snapshot request is transported as content in UPDATE or INVITE sent by the SRS in the recording session.</t>
		
	    <figure><artwork>
<![CDATA[
  SRC                                                   SRS
   |                                                     |
   |(1) INVITE (metadata snapshot)                       |
   |---------------------------------------------------->|
   |                                           (2)200 OK |
   |<----------------------------------------------------|
   |(3) ACK                                              |
   |---------------------------------------------------->|
   |(4) RTP                                              |
   |====================================================>|
   |(5) UPDATE (metadata update 1)                       |
   |---------------------------------------------------->|
   |                                          (6) 200 OK |
   |<----------------------------------------------------|
   |(7) UPDATE (metadata update 2)                       |
   |---------------------------------------------------->|
   |                                          (8) 200 OK |
   |<----------------------------------------------------|
   |              (9) UPDATE (metadata snapshot request) |
   |<----------------------------------------------------|
   |                                        (10) 200 OK  |
   |---------------------------------------------------->|
   |      (11) INVITE (metadata snapshot 2 + SDP offer)  |
   |---------------------------------------------------->|
   |                            (12) 200 OK (SDP answer) |
   |<----------------------------------------------------|
   | (13) UPDATE (metadata update 1 based on snapshot 2) |
   |---------------------------------------------------->|
   |                                         (14) 200 OK |
   |<----------------------------------------------------|
   
       Figure 3: Delivering metadata via SIP UPDATE
]]>								 
	   </artwork></figure>
	
	</section>
	   
	</section>
	
	<section anchor="extensions" title="SIP Extensions for Recording Session">

       <t>The following sections describe SIP extensions for the Recording Session.</t>

	   <t>The From header must contain the identity of the SRC or the SRS.  Participants information is not recorded in the From or To header; they are included in the metadata information.</t>
	   
	   <t>Note that a recording session does not have to live within the scope of a single communication session. As outline in REQ-005 of <xref target="RFC6341"/>, the recording session can be established in the absence of a communication session.  In this case, the SRC MUST pre-allocate a recorded media stream and offer an SDP with at least one m= line to establish a persistent recording session. When the actual call arrives, the SRC can map recorded media stream to participant media and minimize media clipping.</t>
	   
	   <t>Recorded media from multiple communication sessions MAY be handled in a single recording session.  The SRC provides a reference of each recorded media stream to the metadata described in the next section.</t>

<section title="Callee Capabilities Extensions for SIP Recording">
<t>
This section discusses how the callee capabilities defined in <xref target="RFC3840" /> can be extended for SIP call recording. 
</t><t>
SIP Callee Capabilities defines feature tags which are used to represent characteristics and capabilities of a UA.  From RFC 3840:
</t><t>
<list><t>
  "Capability and characteristic information about a UA is carried as parameters of
   the Contact header field.  These parameters can be used within
   REGISTER requests and responses, OPTIONS responses, and requests and
   responses that create dialogs (such as INVITE)."
</t></list>
</t><t>
Note that feature tags are also used in dialog modifying requests and responses such as re-INVITE and responses to a re-INVITE, and UPDATE.  The 'isfocus' feature tag, defined in <xref target="RFC4579" /> is similar semantically to this case: it indicates that the UA is acting as a SIP conference focus, and is performing a specific action (mixing) on the resulting media stream.  This information is available from OPTIONS queries, dialog package notifications, and the SIP registration event package.
</t><t>
Two new feature tags are introduced: 'src' and 'srs'.
</t>
<section title='src Feature Tag'>
<t>
The 'src' feature tag is used in Contact URIs by the Session Recording Client (SRC) related to recording sessions.  A Session Recording Server uses the presence of this feature tag in dialog creating and modifying requests and responses to confirm that the dialog being created is for the purpose of a Recording Session. In addition, a registrar could discover that a UA is an SRC based on the presence of this feature tag in a registration.  Other SIP Recording extensions and behaviors can be triggered by the presence of this feature tag.
</t><t>
Note that we could use a single feature tag, such as 'recording' used by either an SRC or SRS to identify that the session is a recording session.  However, due to the differences in functionality and behavior between an SRC and SRS, using only one feature tag for both is not ideal.  For instance, if a routing mistake resulted in a request from a SRC being routed back to another SRC, if only one feature tag were defined, they would not know right away about the error and could become confused.  With separate feature tags, they would realize the error immediately and terminate the session.  Also, call logs would clearly show the routing error.
</t>
  <t>
    To ensure a recording session is redirected to an SRS, an SRC can utilize the SIP Caller Preferences extensions, defined in <xref target="RFC3841" />.  The presence of a Accept-Contact: *;sip.srs allows a UA to request that the INVITE be routed to an SRS.  Note that to be completely sure, the SRC would need to include a Require: prefs header field in the request.
  </t>

</section>

<section title='srs Feature Tag'>
<t>
The 'srs' feature tag is used in Contact URIs by the Session Recording Server (SRS) related to recording sessions.  A Session Recording Client uses the presence of this feature tag in dialog creating and modifying requests and responses to confirm that the dialog being created is for the purpose of a Recording Session (REQ-30). In addition, a registrar could discover that a UA is an SRS based on the presence of this feature tag in a registration. Other SIP Recording extensions and behaviors can be triggered by the presence of this feature tag.
</t>
<t>
To ensure a recording session is redirected to an SRC, an SRS can utilize the SIP Caller Preferences extensions, defined in <xref target="RFC3841" />.  The presence of a Accept-Contact: *;sip.src allows a UA to request that the INVITE be routed to an SRC.  Note that to be completely sure, the SRS would need to include a Require: prefs header field in the request.
</t>
</section>
</section>

    <section title="recording-session Options Tag">
      <t>Since SIP Caller Preferences extensions are optional to implement for routing proxies, there is no guarantee that a recording session will be routed an SRC or SRS. We introduce the use of the recording-session option tag as a mechanism to ensure only an SRC or an SRS would be able to accept recording sessions. An SRC or an SRS SHOULD include the recording-session option tag in the Require header so that other types of user agents can simply reject the INVITE request with a 420 Bad Extension.</t>
    </section>

    <section title="SDP handling">
	   <t>Following the SDP offer/answer model in <xref target="RFC3264"/>, this section describes the conventions used in the recording session for SDP handling.</t>
	   
       <t>SRC must provide an SDP offer in the initial INVITE to the SRS. SRC can include one or more media streams to the SRS.  The SRS must respond with the same number of media descriptors in the SDP body of the 200 OK.</t>
	   
	   <t>The SRC should use a=sendonly attribute as the SRC does not expect to receive media from the SRS.  As SRS only receives RTP streams from SRC, the 200 OK response will normally contain SDP with a=recvonly attribute.</t>
	   
	   <t>Since the SRC may send recorded media of different participants (or even mixed streams) to the SRS, the SDP must provide a label on each media stream in order to identify the recorded stream with the rest of the metadata.  The a=label attribute <xref target="RFC4574"/> will be used to identify each recorded media stream, and the label name is mapped to the Media Stream Reference in the metadata in <xref target="I-D.ietf-siprec-metadata"/>.  Note that a participant may have multiple streams (audio and video) and each stream is labeled separately.</t>
	   
    <figure><artwork>
	<![CDATA[
           v=0
           o=SRS 0 0 IN IP4 172.22.3.8
           s=SRS
           c=IN IP4 172.22.3.8
           t=0 0
           m=audio 12241 RTP/AVP 0 4 8
           a=sendonly
           a=label:1
           m=audio 12242 RTP/AVP 98
           a=rtpmap:98 H264/90000
           a=fmtp:98 ...
           a=sendonly
           a=label:2
           m=audio 12243 RTP/AVP 0 4 8
           a=sendonly
           a=label:3
           m=audio 12244 RTP/AVP 98
           a=rtpmap:98 H264/90000
           a=fmtp:98 ...
           a=sendonly
           a=label:4

    Figure 4: Sample SDP with audio and video streams
]]>
   </artwork></figure>
	   
	   <t>To remove a recorded media stream from the recording session, send a reINVITE and set the port to zero in the m= line.</t>
	   <t>To add a recorded media stream, send a reINVITE and add a new m= line.</t>
	   
       <t>The SRS may respond with a=inactive attribute as part of the SDP in the 200 OK response when the SRS is not ready to receive recorded media.  The SRS can send re-INVITE to update the SDP with a=recvonly when it is ready to receive media.</t>
	   
       <t>The following sequence diagram shows an example of SRS responds with SDP that contain a=inactive, and then later update media information update with re-INVITE.</t>

   <figure><artwork>
<![CDATA[
  SRC                                                   SRS
   |                                                     |
   |(1) INVITE (SDP offer)                               |
   |---------------------------------------------------->|
   |                         (2)200 OK with SDP inactive |
   |<----------------------------------------------------|
   |(3) ACK                                              |
   |---------------------------------------------------->|
   |                      ...                            |
   |                     (4) re-INVITE with SDP recvonly |
   |<----------------------------------------------------|
   |(5)200 OK with SDP sendonly                          |
   |---------------------------------------------------->|
   |                                             (6) ACK |
   |<----------------------------------------------------|
   |(7) RTP                                              |
   |====================================================>|
   |                      ...                            |
   |(8) BYE                                              |
   |---------------------------------------------------->|
   |                                             (9) OK  |
   |<----------------------------------------------------|
    
	   Figure 5: SRS to offer with a=inactive
]]>
   </artwork></figure>

        </section>
		
		<section title="RTP handling">
		
		<t>[This is a placeholder section to specify any protocol impacts or recommendations for RTP usage in the session recording protocol. The details are listed in <xref target="I-D.eckel-siprec-rtp-rec"/>]</t>
		
		</section>
		
		<section title="Metadata">

		<t>The format of the full metadata will be described as part of the mechanism in <xref target="I-D.ietf-siprec-metadata"/>.</t>
		
		<t>As mentioned in the previous section, the SDP of the recording session describes the properties of media for all recorded media streams. The label attribute contains a reference to the rest of the metadata information.</t>
		
	    <t>For all basic metadata information such as communication session, participants and call identifiers, they can be included in the initial INVITE request sent by the SRC. Metadata can be included as content in the INVITE or UPDATE request.  A new "disposition-type" of Content-Disposition is defined for this purpose and the value is "recording-session".</t>

        <t>The following is an example for RS establishment between SRC and SRS with metadata as content.</t>
      
   <figure><artwork>
<![CDATA[
    INVITE sip:97753210@10.240.3.10:5060 SIP/2.0
    From: <sip:2000@10.226.240.3>;tag=35e195d2-947d-4585-946f-098392474
    To: <sip:Recorder@10.240.3.10>
    Call-ID: d253c800-b0d1ea39-4a7dd-3f0e20a@10.226.240.3
    CSeq: 101 INVITE
    Date: Thu, 26 Nov 2009 02:38:49 GMT
    Supported: timer
    Max-Forwards: 70
    Min-SE: 90
    Session-Expires: 1800
    Require: recording-session
    Contact: <sip:2000@10.226.240.3:5060;transport=tcp>;src
    Via: SIP/2.0/TCP 10.226.240.3:5060;branch=z9hG4bKdf6b622b648d9
    Content-Type: multipart/mixed;boundary=foobar
    Content-Length: [length]
    
    --foobar
    Content-Type: application/sdp
    
    v=0
    o=SRS 0 0 IN IP4 10.226.240.3
    c=IN IP4 10.226.240.3
    t=0 0
    m=audio 12241 RTP/AVP 0 4 8
    a=sendonly
    a=label:1
    
    --foobar
    Content-Type: application/rs-metadata
    Content-Disposition: recording-session
    
    [metadata content]

        Figure 6: Sample INVITE request for the recording session
]]>
   </artwork></figure>
   
        <t>Further updates to recording metadata can be delivered as a sequence events reported in SIP UPDATE or reINVITE requests and the SRS must receive the sequence of events in order.  Since there can only be a single INVITE or UPDATE transaction happening at a time within a SIP dialog, using sequence number CSeq in the dialog can be a reliable way for the SRS to identify the receipt of the next metadata update.</t>
		
		<t>At any time during Recording Session, the SRC can send a new metadata snapshot in a SIP reINVITE request along with an SDP offer.  All subsequent metadata updates will be based on the new metadata snapshot.</t>
		
   </section>
       <section anchor="metadata_request" title="Requesting for metadata snapshot">
	   
	     <t>The SRS can send a request for metadata snapshot any time after the Recording Session has been established.  Typically, the SRS sends such as request in the case where the SRS is failing to process further metadata incremental updates.  Failure scenarios can include failure to internal SRS error or failure to match metadata update sequence. 
        Certain errors, such syntax errors or semantic errors in the metadata information, are likely caused by an error on the SRC side, and it is likely the same error will occur again when a new snapshot is requested. In order to avoid repeating the same error with snapshot requests, it is RECOMMENDED that the SRS terminate the recording session when a syntax error or semantic error occurs in the metadata.</t>

         <t>Similar to delivering metadata, the SRS sends the metadata snapshot request as content in UPDATE or INVITE requests or responses. The same disposition type "recording-session" is used to note that the content represents content sent by the SRS. The format of the content is application/rs-metadata-request, and the body format is chosen to be a simple text-based format with header and values. The following shows an example:</t>

   <figure><artwork>
<![CDATA[
    UPDATE sip:2000@10.226.240.3:5060 SIP/2.0
    To: <sip:2000@10.226.240.3>;tag=35e195d2-947d-4585-946f-098392474
    From: <sip:Recorder@10.240.3.10>;tag=1234567890
    Call-ID: d253c800-b0d1ea39-4a7dd-3f0e20a@10.226.240.3
    CSeq: 1 UPDATE
    Supported: timer
    Max-Forwards: 70
    Min-SE: 90
    Session-Expires: 1800
    Require: recording-session
    Contact: <sip:Recorder@10.240.3.10:5060>;srs
    Via: SIP/2.0/UDP 10.240.3.10:5060;branch=z9hG4bKdf6b622b648d9
    Content-Disposition: recording-session
    Content-Type: application/rs-metadata-request
    Content-Length: [length]
    
    Reason: SRS internal error

        Figure 7: Metadata Request
]]>
   </artwork></figure>
   
		 
		 <t>The SRS MAY include the reason why a metadata snapshot request is being made to the SRC in the Reason header. This header is free form text mainly designed for logging purposes on the SRC side. The body format also allows additional extension headers to be included by the SRS in the snapshot request to convey additional information to the SRC. The processing of the content by the SRC is entirely optional since the content is for logging only, and the snapshot request itself is indicated by the use of the application/rs-metadata-request content type.</t>
	   
	     <t>When the SRC receives the request for a metadata snapshot, the SRC MUST provide a metadata snapshot in a separate INVITE transaction, along with an SDP offer. All subsequent metadata updates sent by the SRC MUST be based on the new metadata snapshot.</t>
	   

     <section title="Formal Syntax">
     <t>The formal syntax for the application/rs-metadata-request MIME is described below using the augmented Backus-Naur Form (BNF) as described in <xref target="RFC2234"/>.</t>


   <t>snapshot-request = srs-reason-line CRLF [ *opt-srs-headers ]</t>

   <t>srs-reason-line  = "Reason" HCOLON srs-reason</t>
   <t>srs-reason = [TEXT-UTF8-TRIM]</t>

   <t>opt-srs-headers = CRLF 1*(extension-header CRLF)</t>

     </section>
	   </section>
		
	   <section anchor="realtime_control" title="Recording Pause and Resume">
		 <t>To temporarily discontinue streaming and collection of recorded media from the SRC to the SRS, the SRC sends a reINVITE and set a=inactive for each recorded media stream to be paused.</t>
		 
		 <t>To resume streaming and collection of recorded media, the SRC sends a reINVITE and set a=sendonly for each recorded media stream to resume.</t>
		 
		 <t>Note that when a media stream in the CS is muted/unmuted, this information is conveyed in the metadata by the SRC.  The SRC SHOULD not modify the recorded media stream with a=inactive for mute since this operation is reserved for pausing the RS media.</t>
       </section>

   </section>
   
   <section anchor="recording_aware_UA" title="Extensions for Recording-aware User Agents">
     <t>The following sections describe SIP and SDP extensions for recording-aware UA.</t>

     <section title="SIP Extensions">
       <section title="Recording awareness">
         <t>A recording-aware UA SHOULD indicate that it can accept reporting of recording indication in media level SDP provided in the previous section. A new option tag "record-aware" is introduced to indicate such awareness.</t>

         <t>A UA that has indicated recording awareness by including the record-aware option tag in a transmitted Supported header field MUST provide at its user interface an indication whether recording is on or off for a given medium based on the most recently received a=record SDP attribute for that medium.</t>

         <t>Some user agents that are automatons (eg. IVR, media server, PSTN gateway) may not have a user interface to render recording indication. When such user agent indicates recording awareness, the UA SHOULD render recording indication through other means, such as passing an inband tone on the PSTN gateway, putting the recording indication in a log file, or raising an application event in a VoiceXML dialog. These user agents MAY also choose not to indicate recording awareness, thereby relying on whatever mechanism an SRC chooses to indicate recording, such as playing a tone inband.</t>

         <t>When a UA has not indicated that it is recording aware, an SRC MUST provide recording indications, where SRC is required to do so based on policies, through other means such as playing a tone inband.</t>

       </section>

     </section>

     <section title="SDP Extensions">
       
     <section title="Providing recording indication">
       <t>While there are existing mechanisms for providing an indication that a CS is being recorded, these mechanisms are usually delivered on the CS media streams such as playing an in-band tone or an announcement to the participants.  A new SDP attribute is introduced to allow a recording-aware UA to render recording indication at the user interface.</t>

       <t>The 'record' SDP attribute appears at the media level in either SDP offer or answer.  The recording indication applies to the specified media stream only, for example, only the audio portion of the call is recorded in an audio/video call. The following is the ABNF of the 'record' attribute:</t>

       <t>
         <list style="hanging">
           <t>record-attr      = "a=record:" indication</t>
           <t>indication       = "on" / "off" / "paused"</t>
         </list>
       </t>

       <t>
         <list style="hanging">
           <t hangText="on">Recording is in progress.</t>
           <t hangText="off">No recording is in progress.</t>
           <t hangText="paused">Recording is in progress by media is paused.</t>
         </list>
       </t>

       <t>The recording attribute is a declaration by the endpoints in the session to indicate whether recording is taking place. For example, if a UA (A) is initiating a call to UA (B) and UA (A) is also an SRC that is performing the recording, then UA (A) provides the recording indication in the SDP offer with a=record:on. When UA (B) receives the SDP offer, UA (B) will see that recording is happening on the other endpoint of this session. If UA (B) does not wish to perform recording itself, UA (B) provides the recording indication as a=record:off in the SDP answer.</t>

       <t>Whenever the recording indication needs to change, such as termination of recording, then the UA MUST initiate a reINVITE to update the SDP attribute to a=record:off. The following call flow shows an example of the offer/answer with the recording indication attribute.</t>
       <figure>
         <artwork>
           <![CDATA[
 UA A                                                   UA B
 (SRC)                                                   |
   |                                                     |
   |                [SRC recording starts]               |
   |(1) INVITE (SDP offer + a=record:on)                 |
   |---------------------------------------------------->|
   |                  200 OK (SDP answer + a=record:off) |
   |<----------------------------------------------------|
   |(3) ACK                                              |
   |---------------------------------------------------->|
   |(4) RTP                                              |
   |<===================================================>|
   |               [SRC stops recording]                 |
   |(5) re-INVITE (SDP + a=record:off)                   |
   |---------------------------------------------------->|
   |                      (6) 200 OK (SDP + a=record:off)|
   |<----------------------------------------------------|
   |                                             (6) ACK |
   |---------------------------------------------------->|
    
	   Figure 8: Recording indication example
]]>
   </artwork></figure>

     <t>If a call is traversed through one or more SIP B2BUA, and it happens that there are more than one SRC in the call path, the recording indication attribute does not provide any hint as to which SRC is performing the recording, meaning the endpoint only knows that the call is being recorded.
       This attribute is also not used as an indication to negotiate which SRC in the call path will perform recording and is not used as a request to start/stop recording if there are multiple SRCs in the call path.
     </t>

	 </section>

	 
	 
	 <section title="Recording preference">
	   <t>A recording-aware UA involved in a CS MAY request the CS to be recorded or not recorded.  This indication of recording preference can be sent at session establishment time or during the session.</t>
	   
	   <t>A new SDP attribute "recordpref" is introduced. The SDP attribute appears at the media level and can only appear in an SDP offer.  The recording indication applies to the specified media stream only. The following is the ABNF of the recordpref attribute:</t>

	   <t><list style="hanging">
	   <t>recordpref-attr      = "a=recordpref:" pref</t>
	   <t>pref       = "on" / "off" / "pause" / "nopreference"</t>
	   </list>
	   </t>
	   
	   <t><list style="hanging">
	     <t hangText="on">Request for recording if it has not already been started. If the recording is currently paused, request to resume recording.</t>
		 <t hangText="off">Request for no recording. If recording has already been started, then this preference indicates a request to stop recording.</t>
		 <t hangText="pause">Request to pause recording if recording is currently in progress.</t>
		 <t hangText="nopreference">To indicate that the UA has no preference on recording. While the absence of this attribute indirectly implies the lack of preference, using this value allows the UA to explicitly state no preference to being recorded.</t>
	   </list></t>	   	   
	 </section>
     </section>

   </section>
   
   <section anchor="iana" title="IANA Considerations">
     <section title="Registration of Option Tags">
       <t>This specification registers two option tags. The required information for this registration, as specified in <xref target="RFC3261"/>, is as follows.</t>
       <section title="recording-session Option Tag">
         <t>
           <list>
             <t>Name: recording-session</t>
             <t>Description: This option tag is for identifying the SIP session for the purpose of recording session only. This is typically not used in a Supported header. When present in a Require header in a request, it indicates that the UAS MUST be either a SRC or SRS capable of handling the contexts of a recording session.</t>
           </list>
         </t>
       </section>
       <section title="record-aware Option Tag">
         <t>
           <list>
             <t>Name: record-aware</t>
             <t>Description: This option tag is to indicate the ability for the user agent to receive recording indicators in media level SDP. When present in a Supported header, it indicates that the UA can receive recording indicators in media level SDP.</t>
           </list>
         </t>
       </section>
     </section>
     
     <section title="Registration of media feature tags">
       <t>
         This document registers two new media feature tags in the SIP tree per the process defined in <xref target="RFC2506"/> and <xref target="RFC3840"/>
       </t>
       <section title="src feature tag">
         <t>
           <list>
             <t>Media feature tag name: sip.src</t>
             <t>ASN.1 Identifer: 25</t>
             <t>Summary of the media feature indicated by this tag: This feature tag indicates that the user agent is a Session Recording Client for the purpose for Recording Session.</t>
             <t>Values appropriate for use with this feature tag: boolean</t>
             <t>The feature tag is intended primarily for use in the following applications, protocols, services, or negotiation mechanisms: This feature tag is only useful for a Recording Session.</t>
             <t>Examples of typical use: Routing the request to a Session Recording Server.</t>
             <t>Security Considerations: Security considerations for this media feature tag are discussed in Section 11.1 of RFC 3840.</t>
           </list>
         </t>
       </section>
       <section title="srs feature tag">
         <t>
           <list>
             <t>Media feature tag name: sip.srs</t>
             <t>ASN.1 Identifer: 26</t>
             <t>Summary of the media feature indicated by this tag: This feature tag indicates that the user agent is a Session Recording Server for the purpose for Recording Session.</t>
             <t>Values appropriate for use with this feature tag: boolean</t>
             <t>The feature tag is intended primarily for use in the following applications, protocols, services, or negotiation mechanisms: This feature tag is only useful for a Recording Session.</t>
             <t>Examples of typical use: Routing the request to a Session Recording Client.</t>
             <t>Security Considerations: Security considerations for this media feature tag are discussed in Section 11.1 of RFC 3840.</t>
           </list>
         </t>
       </section>
     </section>

     <section title="New Content-Disposition Parameter Registrations">
       <t>This document registers a new "disposition-type" value in Content-Disposition header: recording-session.</t>
       <t>recording-session   the body describes the metadata information about the recording session</t>
     </section>
	 <section title="Media Type Registration">
	 <section title="Registration of MIME Type application/rs-metadata">
     <t>This document registers the application/rs-metadata MIME media type in order to describe the recording session metadata. This media type is defined by the following information:</t>
     <t>Media type name: application</t>
     <t>Media subtype name: rs-metadata</t>
     <t>Required parameters: none</t>
     <t>Options parameters: none</t>
   </section>
	 <section title="Registration of MIME Type application/rs-metadata-request">
     <t>This document registers the application/rs-metadata-request MIME media type in order to describe a recording session metadata snapshot request. This media type is defined by the following information:</t>
     <t>Media type name: application</t>
     <t>Media subtype name: rs-metadata-request</t>
     <t>Required parameters: none</t>
     <t>Options parameters: none</t>
   </section>
	 </section>
	 <section title="SDP Attributes">
	 <t>This document registers the following new SDP attributes.</t>
	 <section title="'record' SDP Attribute">
     <t>Attribute name: record</t>
     <t>Long form attribute name: Recording Indication</t>
     <t>Type of attribute: media level</t>
     <t>Subject to charset: no</t>
     <t>This attribute provides the recording indication for the session or media stream.</t>
     <t>Allowed attribute values: on, off, paused</t>
   </section>
	 <section title="'recordpref' SDP Attribute">
     <t>Attribute name: recordpref</t>
     <t>Long form attribute name: Recording Preference</t>
     <t>Type of attribute: media level</t>
     <t>Subject to charset: no</t>
     <t>This attribute provides the recording indication for the session or media stream.</t>
     <t>Allowed attribute values: on, off, pause, nopreference</t>
   </section>
	 </section>
   </section>

	<section anchor="Security" title="Security Considerations">
	<t>The recording session is fundamentally a standard SIP dialog <xref target="RFC3261"/>, therefore, the recording session can reuse any of the existing SIP security mechanism available for securing the recorded media as well as metadata.</t>
	
	   <section anchor="authentication" title="Authentication and Authorization">
	   <t>The recording session reuses the SIP mechanism to challenge requests that is based on HTTP authentication.  The mechanism relies on 401 and 407 SIP responses as well as other SIP header fields for carrying challenges and credentials.</t>
	   
	   <t>The SRS may have its own set of recording policies to authorize recording requests from the SRC. The use of recording policies is outside the scope of the Session Recording Protocol.</t>
       </section>

	</section>

    <section anchor="acknowledgement" title="Acknowledgements">
      <t>We want to thank John Elwell, Paul Kyzivat, Partharsarathi R, Ram Mohan R, Charles Eckel, Hadriel Kaplan, Adam Roach for their valuable comments and inputs to this document.</t>
    </section>
    
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      &RFC2506;
      
      &RFC2119;

        &RFC2234;

        &RFC2804;

	    &RFC3261;
		
		&RFC3264;
		
		&RFC4574;

		&RFC3840;

		&RFC3841;
		
        &RFC6341;

	    &I-D.ietf-siprec-metadata;
	    
    </references>

    <references title="Informative References">
	  &I-D.ietf-siprec-architecture;
	
	  &I-D.eckel-siprec-rtp-rec;
	
      &RFC4508;
	
	  &RFC4579;

	  
    </references>
  </back>
</rfc>
