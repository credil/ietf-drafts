<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY rfc2119 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
  <!ENTITY rfc3688 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml'>
  <!ENTITY rfc5277 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5277.xml'>
  <!ENTITY rfc6020 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6020.xml'>
  <!ENTITY rfc6021 PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6021.xml'>
  <!ENTITY netconfspec PUBLIC '' 
	   'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-netconf-4741bis.xml'>

  ]>

<rfc 
   category="std" 
   docName="draft-ietf-netconf-system-notifications-02" 
   ipr="trust200902">

  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc strict="yes"?>
  <?rfc comments="no" ?>
  <?rfc inline="no" ?>
  <?rfc editing="no" ?>
  <?rfc toc="yes"?>
  <?rfc tocompact="yes"?>
  <?rfc tocdepth="4"?>
  <?rfc symrefs="yes"?>
  <?rfc sortrefs="no" ?>
  <?rfc compact="yes"?>
  <?rfc iprnotified="no"?>

  <front>
    <title abbrev="NETCONF Events">
      Network Configuration Protocol Notification Events
    </title>

    <author fullname="Andy Bierman" 
            initials="A.B."
            surname="Bierman">
      <organization>Brocade</organization>
      <address>
	<email>andy.bierman@brocade.com</email>
      </address>
    </author>
    
    <date />
    <area>OPS</area>
    <workgroup>NETCONF</workgroup>
    <keyword>system</keyword>
    <keyword>notifications</keyword>
    <keyword>XML</keyword>
    <abstract>
      <t>
	The NETCONF protocol provides mechanisms to manipulate configuration
        datastores.  However, client applications often need to be aware
        of common events such as a change in NETCONF capabilities, 
        which may impact management applications.
        Standard mechanisms are needed to support the monitoring of
        the events within the NETCONF server.
	This document defines a YANG module 
	which allows a NETCONF client to 
        receive notifications for some common events.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
	The NETCONF protocol <xref target="I-D.ietf-netconf-4741bis"/>
        provides mechanisms to manipulate configuration
        datastores.  However, client applications often need to be aware
        of common events such as a change in NETCONF capabilities, 
        which may impact management applications.
        Standard mechanisms are needed to support the monitoring of
        the events within the NETCONF server.
	This document defines a YANG module 
        <xref target="RFC6020"/>
	which allows a NETCONF client to 
        receive notifications for some common events.
      </t>
      <section title="Terminology">
	<t>
	  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
	  "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
	  and "OPTIONAL" in this document are to be interpreted as
	  described in <xref target="RFC2119"/>.
	</t>
	<t>
	  The following terms are defined in <xref target="I-D.ietf-netconf-4741bis"/>:
	  <list style="symbols">
	    <t>client</t>
            <t>datastore</t>
	    <t>operation</t>
	    <t>server</t>
	  </list>
	</t>
	<t>
	  The following terms are defined in <xref target="RFC5277"/>:
	  <list style="symbols">
	    <t>event</t>
            <t>stream</t>
            <t>subscription</t>
	  </list>
	</t>
        <t>
	  The following term is defined in 
          <xref target="RFC6020"/>:
	  <list style="symbols">
	    <t>data node</t>
	  </list>
	</t>
      </section>
    </section>

    <section title="YANG Module for Notifications">
      <section title="Overview">
        <t>
	  The YANG module defined within this document specifies
          a small number of notification event messages
          for use within the 'NETCONF' stream, and accessible to
          clients via the subscription mechanism in <xref target="RFC5277"/>.
        </t>
        <t>
	  The YANG language is defined in 
          <xref target="RFC6020"/>.
        </t>
        <section title="Notifications">
          <t>
            This module defines some events for the 'NETCONF' stream
            to notify a client application that the
            NETCONF server state has changed.
            <list style="symbols">
              <t>
                netconf-config-change: Generated when the NETCONF
                server detects that the &lt;running&gt; 
                or &lt;startup&gt; configuration datastore
                has changed.  Summarizes each edit being reported.
              </t>
              <t>
                netconf-capability-change: Generated when the NETCONF server 
                capabilities are changed.
                Indicates which capabilities have been added, deleted, 
                and/or modified.
              </t>
              <t>
                netconf-session-start: Generated when a NETCONF session is started.
                Indicates the identity of the user that started the session.
              </t>
              <t>
                netconf-session-end: Generated when a NETCONF server
                detects that a session has terminated.
                Indicates the identity of the user that owned the session,
                and why the session was terminated.
              </t>
              <t>
                netconf-confirmed-commit: Generated when a NETCONF confirmed-commit
                event occurs.  Indicates the current state of the confirmed-commit
                operation in progress.
              </t>
            </list>
          </t>
        </section>
      </section>

      <section title="Definitions" anchor="YANGMOD">
        <t>
	  <figure>
	    <artwork><![CDATA[

<CODE BEGINS> file="ietf-netconf-events@2010-11-15.yang"

module ietf-netconf-events {

   namespace 
     "urn:ietf:params:xml:ns:yang:ietf-netconf-events";

   prefix nce;

   import ietf-inet-types { prefix inet; }
   import ietf-netconf { prefix nc; }

   organization
    "IETF NETCONF (Network Configuration Protocol) Working Group";

   contact
    "WG Web:   <http://tools.ietf.org/wg/netconf/>
     WG List:  <mailto:netconf@ietf.org>

     WG Chair: Bert Wijnen
               <mailto:bertietf@bwijnen.net>

     WG Chair: Mehmet Ersue
               <mailto:mehmet.ersue@nsn.com>

     Editor: Andy Bierman
             <mailto:andy.bierman@brocade.com>";

   description
    "This module defines an YANG data model for use with the 
     NETCONF protocol that allows the NETCONF client to 
     receive common events.

     Copyright (c) 2010 IETF Trust and the persons identified as
     the document authors.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";
   // RFC Ed.: replace XXXX with actual RFC number and remove this note

   // RFC Ed.: remove this note
   // Note: extracted from 
   // draft-ietf-netconf-system-notifications-02.txt

   revision 2010-11-15 {
     description
       "Initial version.";
     reference
      "RFC XXXX: NETCONF Notification Events";
   }
   // RFC Ed.: replace XXXX with actual 
   // RFC number and remove this note


  grouping common-session-parms {

    leaf user-name {
      description 
        "Name of the user for the session.";
      type string;
    }

    leaf session-id {
      description "Identifier of the session.";
      type nc:session-id-or-zero-type;
      mandatory true;
    }

    leaf remote-host {
      description
        "Address of the remote host for the session.";
      type inet:ip-address;
    }
  }


  grouping changed-by-parms {
    container changed-by {
      description
        "Indicates who caused this change.
        If caused by internal action, then the
        empty leaf 'server' will be present.
        If caused by a management session, then
        the name, remote host address, and session ID
        of the session that made the change will be reported.";
      choice server-or-user {
        leaf server {
          type empty;
          description
            "If present, the change was caused 
             by the server.";
        }

        case by-user {
          uses common-session-parms;
        }
      } // choice server-or-user
    } // container changed-by-parms;
  }


  notification netconf-config-change {
    description
      "Generated when the <running> or <startup> configuration 
       database is changed.";

    uses changed-by-parms;

    leaf target-database {
      type enumeration {
        enum running {
          description "The running database has changed.";
        }
        enum startup {
          description "The startup database has changed";
        }
      }
      description
        "Indicates which configuration database has changed.";
      default "running";
    }

    list edit {
      description
        "An edit record will be present for each distinct
        edit operation on the target database.";

      leaf target {
        type instance-identifier;
        description
          "Topmost node associated with the configuration change.
           A server SHOULD set this object to the node within 
           the database which is being altered.  A server MAY
           set this object to one of the ancestors of the actual
           node that was changed, or omit this object, if the 
           exact node is not known.";
      }

      leaf operation {
        type nc:edit-operation-type;
        description 
           "Type of edit operation performed.
            A server MUST set this object to the NETCONF edit 
            operation performed on the target database.";
      }
    } // list edit
  } // notification netconf-config-change


  notification netconf-capability-change {
    description
      "Generated when a <capability> is added, deleted,
       or modified.";

    uses changed-by-parms;

    leaf-list added-capability {
      type inet:uri;
      description
        "List of capabilities that have just been added.";
    }

    leaf-list deleted-capability {
      type inet:uri;
      description
        "List of capabilities that have just been deleted.";
    }

    leaf-list modified-capability {
      type inet:uri;
      description
        "List of capabilities that have just been modified.
         A capability is considered to be modified if the
         base URI for the capability has not changed, but
         one or more of the parameters encoded at the end of
         the capability URI has changed.";
    }
  } // notification netconf-capability-change


  notification netconf-session-start {
    description
      "Generated when a new NETCONF session is started.";
    uses common-session-parms;
  } // notification netconf-session-start


  notification netconf-session-end {
    description
      "Generated when a NETCONF session is terminated.";

    uses common-session-parms;

    leaf killed-by {
      when "../termination-reason = 'killed'";
      type nc:session-id-type;
      description
        "Session ID that issued the <kill-session>
        if the session was terminated by this operation.";
    }

    leaf termination-reason {
      type enumeration {
        enum "closed" {
          value 0;
          description
            "The session was terminated with 
            the NETCONF <close-session> operation.";
        }
        enum "killed" {
          value 1;
          description
            "The session was terminated with 
            the NETCONF <kill-session> operation.";
        }
        enum "dropped" {
          value 2;
          description
            "The session was terminated because
            the transport layer connection was
            unexpectedly closed.";
        }
        enum "timeout" {
          value 3;
          description
            "The session was terminated because
            of inactivity, either waiting for
            the <hello> or <rpc> messages.";
        }
        enum "bad-hello" {
          value 4;
          description
            "The client's <hello> message was invalid.";
        }
        enum "other" {
          value 5;
          description
            "The session was terminated for
            some other reason.";
        }
      }
      mandatory "true";
      description "Reason the session was terminated.";
    }
  } // notification netconf-session-end


  notification netconf-confirmed-commit {
    description
      "Generated when a confirmed-commit event occurs.";
    reference 
      "I-D draft-ietf-netconf-4741bis section 8.4";

    uses common-session-parms {
      refine session-id {
        mandatory false;
      }
    }

    leaf confirm-event {
      description
        "Indicates the event that caused the notification.";
      type enumeration {
        enum "start" {
          value 0;
          description
            "The confirm-commit procedure has started.";
        }
        enum "cancel" {
          value 1;
          description
            "The confirm-commit procedure has been canceled,
            due to the session being terminated, or an
            explicit <cancel-commit> operation.";
        }
        enum "timeout" {
          value 2;
          description
            "The confirm-commit procedure has been canceled,
            due to the confirm-timeout interval expiring.
            The common session parameters will not be present
            in this sub-mode.";
        }
        enum "extend" {
          value 3;
          description
            "The confirm-commit timeout has been extended.";
        }
        enum "complete" {
          value 4;
          description
            "The confirm-commit procedure has been completed.";
        }
      }
      mandatory "true";
    }

    leaf timeout {
      when 
       "../confirm-event = 'start' or ../confirm-event = 'extend'";
      description
       "The configured timeout value if the event type
        is 'start' or 'extend'.  This value represents the
        the approximate number of seconds from the event
        time when the 'timeout' event might occur.";
      units "seconds";
      type uint32;
    }     
  } // notification netconf-confirmed-commit

}

<CODE ENDS>
                  ]]></artwork>
	  </figure>
	  <vspace blankLines="1"/>
        </t>
      </section> 
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>
        This document registers one XML namespace URN
	in the 'IETF XML registry', following the format 
        defined in <xref target="RFC3688"/>. 
	<vspace blankLines="1"/>
        <list>
          <t>URI: urn:ietf:params:xml:ns:yang:ietf-netconf-events</t>
        </list>
	<vspace blankLines="1"/>
        Registrant Contact: The NETCONF WG of the IETF.
	<vspace blankLines="1"/>
        XML: N/A, the requested URI is an XML namespace.
      </t>
      <t>
	This document registers one module name 
        in the 'YANG Module Names' registry,
	defined in <xref target="RFC6020" /> .  
	<vspace blankLines="1"/>
        <list>
          <t>name: ietf-netconf-events</t>
          <t>prefix: nce</t>
          <t>namespace: urn:ietf:params:xml:ns:yang:ietf-netconf-events</t>
          <t>RFC: XXXX // RFC Ed.: replace XXXX and remove this comment</t>
        </list>
      </t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
	This document defines a YANG module for reporting of
        particular system events.
        Although unlikely, it is possible that data obtained from this module could
        be used in an attack of some kind, although no specific
        information in this module is considered sensitive.
      </t>
      <t>
        TBD: follow Security Consideration guidelines from new template text.
      </t>
    </section>  

<!--
    <section title="Acknowledgements">
      <t>
      </t>
    </section>
-->

  </middle>

  <back>
    <references title="Normative References">
      &rfc2119;
      &rfc3688;
      &rfc5277;
      &rfc6020;
      &rfc6021;
      &netconfspec;
    </references>

    <section title="Change Log"> 
      <t>
	-- RFC Ed.: remove this section before publication.
      </t>

      <section title="01-02">
        <t>
          Renamed module NETCONF Events instead of NETCONF system notifications.
          Note that ietf-netconf-notfications is being reserved for the XML content
          defined in RFC 5277.
        </t>
        <t>
          Made changes based on mailing list comments and latest WG consensus.
        </t>
        <t>
          Filled in IANA section.
        </t>
      </section>

      <section title="00-01">
        <t>
          Removed sys-startup notification.
        </t>
        <t>
          Make changed-by into a grouping, and added usage to sys-config-change
          notification.
        </t>
        <t>
          Added target-database leaf to sys-config-change to distinguish
          between running and startup changes.
        </t>
        <t>
          Removed 'bad-start' from termination-reason leaf in sys-session-end
          notification.
        </t>
      </section>

      <section title="00">
        <t>
          Initial version, based on
          draft-bierman-netconf-system-monitoring-00.txt.
        </t>
      </section>

    </section>
  </back>
</rfc>

