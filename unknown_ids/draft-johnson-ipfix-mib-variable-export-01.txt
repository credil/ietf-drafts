


IPFIX Working Group                                           A. Johnson
Internet-Draft                                                 B. Claise
Intended status: Standards Track                               P. Aitken
Expires: October 9, 2011                              Cisco System, Inc.
                                                        J. Schoenwaelder
                                                Jacobs University Bremen
                                                           April 7, 2011


            Exporting MIB Variables using the IPFIX Protocol
               draft-johnson-ipfix-mib-variable-export-01

Abstract

   This document specifies a way to complement IPFIX Flow Records with
   Management Base (MIB) objects, avoiding the need to define new IPFIX
   Information Elements for existing Management Information Base objects
   that are already fully specified.

   This method requires an extension to the current IPFIX protocol.  New
   Template Set and Options Template Sets are specified to allow the
   export of Simple Network Management Protocol (SNMP) MIB Objects along
   with IPFIX Information Elements.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on October 9, 2011.

Copyright Notice

   Copyright (c) 2011 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents



Johnson, et al.          Expires October 9, 2011                [Page 1]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Motivation and Architectural Model . . . . . . . . . . . . . .  3
   3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  5
   4.  MIB OID Extended Template Formats  . . . . . . . . . . . . . .  6
     4.1.  MIB OID Extended Template Record Format  . . . . . . . . .  6
     4.2.  MIB OID Extended Options Template Record Format  . . . . .  7
     4.3.  MIB OID Extended Field Specifier Format  . . . . . . . . .  8
       4.3.1.  Standard Field Specifier Format  . . . . . . . . . . .  8
       4.3.2.  Extended Field Specifier Format for non-indexed
               MIB Object . . . . . . . . . . . . . . . . . . . . . .  9
       4.3.3.  Extended Field Specifier Format for Indexed MIB
               Object . . . . . . . . . . . . . . . . . . . . . . . . 11
     4.4.  Identifying the SNMP Context . . . . . . . . . . . . . . . 15
     4.5.  Template Management  . . . . . . . . . . . . . . . . . . . 15
   5.  Example Use Cases  . . . . . . . . . . . . . . . . . . . . . . 15
     5.1.  Non-indexed MIB Object: Detailing CPU Load History . . . . 15
     5.2.  Indexed MIB Objects: Output Interface Queue Size in
           PSAMP Packet Report  . . . . . . . . . . . . . . . . . . . 18
     5.3.  Indexed MIB Objects with an OID as indexed: ...  . . . . . 21
   6.  Configuration Considerations . . . . . . . . . . . . . . . . . 22
   7.  The Collecting Process's Side  . . . . . . . . . . . . . . . . 22
   8.  Applicability  . . . . . . . . . . . . . . . . . . . . . . . . 22
   9.  Security Considerations  . . . . . . . . . . . . . . . . . . . 23
   10. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 23
   11. References . . . . . . . . . . . . . . . . . . . . . . . . . . 23
     11.1. Normative References . . . . . . . . . . . . . . . . . . . 23
     11.2. Informative References . . . . . . . . . . . . . . . . . . 24
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 24












Johnson, et al.          Expires October 9, 2011                [Page 2]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


1.  Introduction

   There is growing interest in using IPFIX as a push mechanism for
   exporting management information.  Using a push protocol such as
   IPFIX instead of a polling protocol like SNMP is especially
   interesting in situations, where large chunks of repetitive data need
   to be exported periodically.

   While initially targeted at different problems, there is a large
   parallel between the information transported via IPFIX and SNMP.
   Furthermore, certain Management Information Base (MIB) objects are
   highly relevant to flows as they are understood today.  For example,
   in the IPFIX information model [RFC5102], Information Elements coming
   from the SNMP world have already been specified, e.g.,
   ingressInterface and egressInterface both refer to the ifIndex
   defined in [RFC2863].

   Rather than mapping existing MIB objects to IPFIX Information
   Elements on a case by case basis, it would be advantageous to enable
   the export of any existing or future MIB objects as part of an IPFIX
   Flow Record.  This way, the duplication of data models [RFC3444],
   both as SMI MIB objects and IPFIX Information Elements, out of the
   same information model [RFC3444] would be avoided.

   In this document, new Template Sets for Flow Records and Options
   Records are specified to allow Templates to contain any combination
   of fields defined by traditional IPFIX Information Elements and/or
   MIB Object Identifiers.  The MIB Object Identifiers can reference
   either non-indexed or indexed MIB objects.  When an indexed MIB
   object is exported, a method to identify how that MIB object was
   indexed is specified so that the full meaning of the information
   being exported can be conveyed.  A set of example use cases is used
   to illustrate how these specifications can be used.


2.  Motivation and Architectural Model

   Most Flow Records contain the ingressInterface and/or the
   egressInterface Information Element.  These Information Elements
   carry an ifIndex value, a MIB object defined in [RFC2863].  In order
   to retrieve additional information about the identified interface, a
   Collector could simply poll relevant objects from the device running
   the Exporter via SNMP.  However, approach has several problems:

   o  It requires implementing a mediation function between two data
      models, i.e., MIB objects and IPFIX Information Elements.





Johnson, et al.          Expires October 9, 2011                [Page 3]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


   o  Confirming the validity of simple mappings (e.g., ifIndex to
      ifName) requires to either check on a regular basis that the
      Exporter's network management system did not reload, or to impose
      ifIndex persistence across an Exporter's reload.

   o  Synchronization problems occur since counters carried in Flow
      Records and counters carried in SNMP messages are retrieved from
      the Exporter at different points in time amd thus can't be
      correlated.  In the best case, assuming very tight integration of
      an IPFIX Collector with and SNMP polling engine, SNMP data is
      retrieved shortly after Data Records have been received, which
      implies the sum of the active or inactive timeouts (if not null)
      plus the time to export the Flow Record to the Collector.  If,
      however, the SNMP data is retrieved by a generic Network
      Management Station (NMS) polling interface statistics, then the
      time lag between IPFIX counters and SNMP counters can be
      significant.

   The intended scope of this work is the addition of MIB variable(s) to
   IPFIX Information Elements in Flow Records, in order to complement
   the Flow Records with useful and already standardized information.

   The intended goal of this work is not a replacement of SNMP
   notifications, even if the specifications in this document could
   potentially allow this.  Since IPFIX is a push mechanism, initiated
   from the Exporter with no acknowledgment method, this specification
   does not provide the ability to execute configuration changes.

   The Distributed Management Expression MIB [RFC2982], which is a
   mechanism to create new MIB variables based on the content of
   existing ones, could also be advantageous in this context of this
   specification.  Indeed, newly created MIB object (for example, the
   link utilization MIB variable), created with the Distributed
   Management Expression MIB [RFC2982] could nice complement Flow
   Records.

   Another advantage of exporting MIB objects via IPFIX is that IPFIX
   would benefit from an extended series of types to be exported.  The
   simple and application-wide data types specified in SMIv2 [RFC2578],
   along with a new textual conventions, can be exported within IPFIX
   and then decoded in the Collector.










Johnson, et al.          Expires October 9, 2011                [Page 4]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


                 +------+  +-------+  +.........+  +.....+
                 | SNMP |  | IPFIX |  : NETCONF :  : CLI :
                 +------+  +-------+  +.........+  +.....+
                     |         |           |          |
               +--------------------------------------------+
               | Instrumentation (specified in MIB modules) |
               +--------------------------------------------+

                       Figure 1: Architectural Model

   The overall architectural model is depicted in Figure 1.  The IPFIX
   Exporter accesses the device's instrumentation, which follows the
   specifications contained in MIB modules.  Other management interfaces
   such as NETCONF or the device's Command Line Interface (CLI) may
   provide access to the same instrumentation.


3.  Terminology

   IPFIX-specific terminology (Information Element, Template, Template
   Record, Options Template Record, Template Set, Collector, Exporter,
   Flow Record, etc.) used in this document is defined in Section 2 of
   [RFC5101].  As in [RFC5101], these IPFIX-specific terms have the
   first letter of a word capitalized.

   This document prefers the more generic term "Data Record" as opposed
   to "Flow Record" as this specification allows the export of MIB
   objects.

   MIB Object Identifier (MIB OID)

        An ASCII character sequences of decimal non-negative sub-
        identifier values.  Each sub-identifier value MUST NOT exceed
        2^32-1 (4294967295) and MUST NOT have leading zeros.  Sub-
        identifiers are separated by single dots and without any
        intermediate whitespace.

   MIB Object Identifier Information Element

        An IPFIX Information Element ("MIBObjectIdentifierMarker") that
        denotes that a MIB Object Identifier is exported in the
        (Options) Template Record.

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   [RFC2119].




Johnson, et al.          Expires October 9, 2011                [Page 5]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


4.  MIB OID Extended Template Formats

   Extended Template Record Formats are required to send data defined by
   MIB Object Identifiers.  New Template Sets are required for these
   extended Template Record Formats.

4.1.  MIB OID Extended Template Record Format

   The format of the MIB Object Identifier Extended Template Record is
   shown in Figure 2.  It consists of a Template Record Header and one
   or more Field Specifiers.

           +---------------------------------------------------+
           | Template Record Header                            |
           +---------------------------------------------------+
           | Field Specifier                                   |
           +---------------------------------------------------+
           | Field Specifier                                   |
           +---------------------------------------------------+
                                 ...
           +---------------------------------------------------+
           | Field Specifier                                   |
           +---------------------------------------------------+

      Figure 2: MIB Object Identifier Extended Template Record Format

   A MIB Object Identifier Extended Template Record MUST contain at
   least one MIB Object Identifier Extended Field Specifier.  It MAY
   also contain any combination of IANA-assigned and/or Enterprise-
   Specific Information Element identifiers as specified in [RFC5101].

   The format of the Template Record Header is shown in Figure 3.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |         Template ID (> 255)   |         Field Count           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                  Figure 3: Template Record Header Format

   Where:

      Template ID

         Template ID of this Template Record.  This value is greater
         than 255.




Johnson, et al.          Expires October 9, 2011                [Page 6]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


      Field Count

         Number of all fields in this Template Record.

   At this level of detail the layout of the Template Record Format, as
   specified in [RFC5101], and the MIB Object Identifier Extended
   Template Record Format are identical.  It is only the structure of
   the Field Specifiers that is different (see Section 4.3).

4.2.  MIB OID Extended Options Template Record Format

   The format of the MIB Object Identifier Extended Options Template
   Record is shown in Figure 4.  It consists of an Options Template
   Record Header and one or more Field Specifiers.

           +---------------------------------------------------+
           | Options Template Record Header                    |
           +---------------------------------------------------+
           | Field Specifier                                   |
           +---------------------------------------------------+
           | Field Specifier                                   |
           +---------------------------------------------------+
                                 ...
           +---------------------------------------------------+
           | Field Specifier                                   |
           +---------------------------------------------------+

     Figure 4: MIB Object Identifier Options Extended Template Record
                                  Format

   A MIB Object Identifier Extended Options Template Record MUST contain
   at least one MIB Object Identifier Extended Field Specifier, which
   MAY be a scope field.  It MAY also contain any combination of IANA-
   assigned and/or Enterprise-Specific Information Element identifiers.

   The format of the Options Template Record Header is shown in
   Figure 5.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |         Template ID (> 255)   |         Field Count           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      Scope Field Count        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

              Figure 5: Options Template Record Header Format




Johnson, et al.          Expires October 9, 2011                [Page 7]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


   Where:

      Template ID

         Template ID of this Template Record.  This value is greater
         than 255.

      Field Count

         Number of all fields in this Template Record, including the
         Scope Fields.

      Scope Field Count

         Number of scope fields in this Options Template Record.  The
         Scope Fields are normal Fields except that they are interpreted
         as Scope at the Collector.  The Scope Field Count MUST NOT be
         zero for an Options Template Record.

   As with the Template Record Format, the only difference between the
   standard Options Template Record Format as defined in [RFC5101] and
   the MIB Object Identifier Extended Template Options Record Format is
   the structure of the Field Specifier (see Section 4.3).

4.3.  MIB OID Extended Field Specifier Format

   This section specifies how the Field Specifier format in [RFC5101] is
   extended to allow fields to be defined using a specified MIB Object.
   First for a MIB Object Identifier that is a non-indexed MIB object,
   then for an indexed MIB object.

   The Field Specifier formats are shown in Figure 6 to Figure 10 below.

4.3.1.  Standard Field Specifier Format

   The Field Specifier format in Figure 6, along with the associated
   definitions, has been copied from [RFC5101], for an easier comparison
   with the MIB Object Identifier Extended Field Specifier Format in
   Figure 7 and Figure 10.

   When sending an IANA-assigned and/or Enterprise-Specific Information
   Element identifier, the Field Specifier Format is the same as shown
   below.








Johnson, et al.          Expires October 9, 2011                [Page 8]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |E|  Information Element ident. |        Field Length           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                      Enterprise Number                        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                 Figure 6: Standard Field Specifier format

   Where:

      E

         Enterprise bit.  This is the first bit of the Field Specifier.
         If this bit is zero, the Information Element Identifier
         identifies an IETF specified Information Element, and the four
         octet Enterprise Number field MUST NOT be present.  If this bit
         is one, the Information Element identifier identifies an
         enterprise-specific Information Element, and the Enterprise
         Number filed MUST be present.

      Information Element identifier

         A numeric value that represents the type of the Information
         Element.  Refer to [RFC5102].

      Field Length

         The length of the corresponding encoded Information Element, in
         octets.  Refer to [RFC5102].  The field length may be smaller
         than the definition in [RFC5102] if reduced size encoding is
         used.  The value 65535 is reserved for variable length
         Information Element.

      Enterprise Number

         IANA enterprise number [PEN] of the authority defining the
         Information Element identifier in this Template Record.

4.3.2.  Extended Field Specifier Format for non-indexed MIB Object

   When a MIB object is to be exported, a special Information Element
   value is used to show that the extended Field Specifier is being
   used, as shown in Figure 7:






Johnson, et al.          Expires October 9, 2011                [Page 9]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |E|         MIB OID IE          |         Field Length          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Index Count = 0|MIB Obj. ID Len|    MIB Object Identifier ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              ... MIB Object Identifier continued              |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 7: MIB Object Identifier Extended Field Specifier Format for a
              non-indexed MIB Object with an OID length < 255

   Where:

      E

         Enterprise bit.  This is the first bit of the Field Specifier.
         If this bit is zero, the Information Element Identifier
         identifies an IETF specified Information Element, and the four
         octet Enterprise Number field MUST NOT be present.  If this bit
         is one, the Information Element identifier identifies an
         enterprise-specific Information Element, and the Enterprise
         Number filed MUST be present.

      MIB OID IE

         Special IPFIX Information Element, MIBObjectIdentifierMarker,
         that denotes that a MIB object is exported in the (Options)
         Template Record.  When the MIB Object Identifier Information
         Element (MIB OID IE) is used, the MIB Object Identifier must be
         specified in the Field Specifier for the Collecting Process to
         be able to decode the Records.

      Field Length

         The definition is as [RFC5101].

      Index Count

         The number of indexes for a MIB object, and zero for a non-
         indexed MIB object.

      MIB Object Identifier Length

         The length of the textual representation of the MIB Object
         Identifier that follows.  This is encoded in the same manner as
         the variable length encoding in [RFC5101].  If the length of



Johnson, et al.          Expires October 9, 2011               [Page 10]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


         the MIB Object Identifier is greater than or equal to 255
         octets, the length is encoded into 3 octets before the MIB
         Object Name.  The first octet is 255 and the length is carried
         in the second and third octets (as shown in Figure 8).

      MIB Object Identifier

         The textual representation of a MIB object identifier as
         defined in Section 3.

   If the MIB Object Identifier is longer than 254 characters then the
   length MUST be extended.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |E|         MIB OID IE          |        Field Length           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Index Count = 0|      255      | MIB Object Identifier Length  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                  MIB Object Identifier ...                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 8: MIB Object Identifier Extended Field Specifier Format for a
             non-indexed MIB Object with an OID length >= 255

4.3.3.  Extended Field Specifier Format for Indexed MIB Object

   The mechanism for "Extended Field Specifier Format for non-indexed
   MIB Object" in Section 4.3.2 can be used for exporting any MIB
   objects, including the indexed MIB objects.  However, per the nature
   of indexing in MIB module, every indexed object is specified by a new
   MIB Objet Identifier, which in turn implies that a new Template
   Record must be used for every indexed object.  For example, the
   ifInOctets for the interface represented by the interface ifIndex 1
   is ifInOctets.1, the ifInOctets for the interface represented by the
   interface ifIndex 2 is ifInOctets.2, ... which causes the mechanism
   for "Extended Field Specifier Format for non-indexed MIB Object" to
   export indexed MIB objects completely inefficient.

   When an indexed MIB object is exported in IPFIX, the meaning of the
   exported value each index SHOULD be identified.  This index (or
   indexes) MAY be an IPFIX Information Element or MIB Object
   Identifier.  Note that the IPFIX Information Element MAY be an
   enterprise-specific Information Element.  In all cases, MIB index
   information elements MUST be consistent with the MIB definition.





Johnson, et al.          Expires October 9, 2011               [Page 11]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |E|         MIB OID IE          |         Field Length          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  Index Count  |MIB Obj. ID Len|    MIB Object Identifier ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              ... MIB Object Identifier continued              |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |E| Index Information Element 1 |E| Index Information Element 2 |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                       Enterprise Number                       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                 ...

   Figure 9: MIB Object Identifier Extended Field Specifier Format with
             an indexed MIB Object using a IPFIX I.E. as Index

   Where:

      E

         Enterprise bit.  In the special case of a MIB Object Identifier
         export, the Enterprise bit MUST always be 0, even if the
         exported MIB object is specified in a proprietary MIB,
         therefore containing the private enterprise number in its OID.
         For any indexes identified using Information Elements the
         Enterprise bit can be 1, indicating that an Enterprise Number
         will follow the Information Element.

      MIB OID IE

         Special IPFIX Information Element, MIBObjectIdentifierMarker,
         that denotes that a MIB object is exported in the (Options)
         Template Record.  When the MIB Object Identifier Information
         Element (MIB OID IE) is used, the MIB Object Identifier must be
         specified in the Field Specifier for the Collecting Process to
         be able to decode the Records.

      Field Length

         The definition is as [RFC5101].

      Index Count

         The number of indexes for a MIB object, and zero for a non-
         indexed MIB object.  The index count MUST be consistent with
         the INDEX definition of the corresponding MIB module.



Johnson, et al.          Expires October 9, 2011               [Page 12]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


      MIB Object Identifier Length

         The length of the textual representation of the MIB Object
         Identifier that follows.  This is encoded in the same manner as
         the variable length encoding in [RFC5101].  If the length of
         the MIB Object Identifier is greater than or equal to 255
         octets, the length is encoded into 3 octets before the MIB
         Object Name.  The first octet is 255 and the length is carried
         in the second and third octets (as shown in Figure 8).

      MIB Object Identifier

         The textual representation of a MIB object identifier as
         defined in Section 3.

   A MIB Object Identifier MAY be used as an index and sent as described
   in Figure 10.  If a MIB Object Identifier with an index is used as an
   index then its indexes will not be identified.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |E|         MIB OID IE          |         Field Length          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  Index Count  | MIB OID Len 1 |  MIB Object Identifier 1 ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             ... MIB Object Identifier 1 continued             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |E|         MIB OID IE          | MIB OID Len 2 | MIB OID 2 ... |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             ... MIB Object Identifier 2 continued             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                 ...

   Figure 10: MIB Object Identifier Extended Field Specifier Format with
         a MIB Index using a normal MIB Object Identifier as index

   Where:

      E

         Enterprise bit.  In the special case of a MIB Object Identifier
         export, the Enterprise bit MUST always be 0, even if the
         exported MIB object is specified in a proprietary MIB,
         therefore containing the private enterprise number in its OID.
         For any indexes identified using Information Elements the
         Enterprise bit can be 1, indicating that an Enterprise Number
         will follow the Information Element.



Johnson, et al.          Expires October 9, 2011               [Page 13]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


      MIB OID IE

         Special IPFIX Information Element, MIBObjectIdentifierMarker,
         that denotes that a MIB object is exported in the (Options)
         Template Record.  When the MIB Object Identifier Information
         Element (MIB OID IE) is used, the MIB Object Identifier must be
         specified in the Field Specifier for the Collecting Process to
         be able to decode the Records.

      Field Length

         The definition is as [RFC5101].

      Index Count

         The number of indexes for a MIB object, and zero for a non-
         indexed MIB object.

      MIB Object Identifier Length 1

         The length of the textual representation of the MIB Object
         Identifier being exported.  This is encoded in the same manner
         as the variable length encoding in [RFC5101].  If the length of
         the MIB Object Identifier is greater than or equal to 255
         octets, the length is encoded into 3 octets before the MIB
         Object Name.  The first octet is 255 and the length is carried
         in the second and third octets.

      MIB Object Identifier 1

         The textual representation of a MIB object identifier as
         defined in Section 3.

      MIB Object Identifier Length 2

         The length of the textual representation of the MIB Object
         Identifier being used as an index.  This is encoded in the same
         manner as the variable length encoding in [RFC5101].  If the
         length of the MIB Object Identifier is greater than or equal to
         255 octets, the length is encoded into 3 octets before the MIB
         Object Name.  The first octet is 255 and the length is carried
         in the second and third octets.

      MIB Object Identifier 2

         The textual representation of a MIB object identifier as
         defined in Section 3.




Johnson, et al.          Expires October 9, 2011               [Page 14]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


4.4.  Identifying the SNMP Context

   Each MIB OID is looked up in a specific context, usually the default
   context.  If exporting a MIB OID value that isn't in the default
   context then the context string MUST be identified and associated
   with the MIB OID.  This can be done on a per template basis by
   exporting an Options Template Record.

   A new IPFIX Information Element has been allocated for this
   purpose...

4.5.  Template Management

   Templates are managed as per [RFC5101].

   The Set ID field MUST contain the value TBD1 for any Template Set
   that contains a MIB Object Identifier Extended Field Specifier.  The
   Template Withdrawal Message for such a Template must also use a Set
   ID field containing the value TBD1.

   The Set ID field MUST contain the value TBD2 for any Option Template
   Set that contains a MIB Object Identifier Extended Field Specifier.
   The Template Withdrawal Message for such an Option Template must also
   use a Set ID field containing the value TBD2.


5.  Example Use Cases

5.1.  Non-indexed MIB Object: Detailing CPU Load History

   The CPU Usage of a remote network device could be monitored by
   configuring it to periodically send CPU usage information to a
   centralized Collector.  In this example, the Exporter would send an
   IPFIX Message every 30 minutes that contained Data Records detailing
   the CPU 1 minute busy average at 1 minute intervals.

   The table of data that is to be exported would look like:














Johnson, et al.          Expires October 9, 2011               [Page 15]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


             +-------------------------+---------------------+
             |        TIMESTAMP        | CPU BUSY PERCENTAGE |
             +-------------------------+---------------------+
             | StartTime +   0 seconds |         10%         |
             | StartTime +  60 seconds |         14%         |
             | StartTime + 120 seconds |         19%         |
             | StartTime + 180 seconds |         16%         |
             | StartTime + 240 seconds |         23%         |
             | StartTime + 300 seconds |         29%         |
             +-------------------------+---------------------+

                          Table 1: CPU Usage Data

   The Template Record for such a Data Record will detail two
   Information Elements:

   1.  flowStartSeconds from [RFC5102], Information Element 150: The
       absolute timestamp of the first packet of this Flow.

   2.  cpmCPUTotal1minRev from the proprietary CISCO-PROCESS-MIB, Object
       ID "1.3.6.1.4.1.9.9.109.1.1.1.1.7", The overall CPU busy
       percentage in the last one-minute period

   Figure 11 shows the exported Template Set detailing the Template
   Record for exporting CPU Load (see Section 5.1).


























Johnson, et al.          Expires October 9, 2011               [Page 16]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = TBD1        |          Length = 47          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Template ID = 256      |        Field Count = 2        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |E|   IE = flowStartSeconds     |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|   MIBObjectIdentiferMarker  |        Field Length 1         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Index Count = 0|MIB OID Len=29 |    MIB Object Identifier ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |               = "1.3.6.1.4.1.9.9.109.1.1.1.1.7"               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           MIB Object Identifier continued     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                Figure 11: Example of CPU Load Template Set

   Figure 12 shows the start of the data set for exporting the CPU Load
   information (see Section 5.1).



















Johnson, et al.          Expires October 9, 2011               [Page 17]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = 256         |         Length = 256          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    StartTime +   0 seconds                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              10                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    StartTime +  60 seconds                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              14                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    StartTime + 120 seconds                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              19                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    StartTime + 180 seconds                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              16                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                   ...

                Figure 12: Example of CPU Load Template Set

5.2.  Indexed MIB Objects: Output Interface Queue Size in PSAMP Packet
      Report

   If a PSAMP Packet Report [RFC5476] was generated on any dropped
   packets on an interface then it may be desirable to know if the send
   queue on the output interface was full.  This could be done be
   sending the size of the send queue (ifOutQLen) in the same Data
   Record as the PSAMP Packet Report.

   The exported data would look like:

   +-----------+-----------+--------+-----------+----------------------+
   |  SCR ADDR |  DST ADDR |   PAK  |   OUTPUT  |     OUTPUT Q. LEN    |
   |           |           |   LEN  |    I/F    |      (ifOutQLen)     |
   +-----------+-----------+--------+-----------+----------------------+
   | 192.0.2.1 | 192.0.2.3 |   150  |  Eth 1/0  |          45          |
   | 192.0.2.4 | 192.0.2.9 |   350  |  Eth 1/0  |          45          |
   | 192.0.2.3 | 192.0.2.9 |   650  |  Eth 1/0  |          23          |
   | 192.0.2.4 | 192.0.2.6 |   350  |  Eth 1/1  |           0          |
   +-----------+-----------+--------+-----------+----------------------+

   Table 2: Packet Report with Interface Output Queue Length (ifOutQLen)
                                   Data



Johnson, et al.          Expires October 9, 2011               [Page 18]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


   The MIB object for the Interface Output Queue Length, ifOutQLen
   ("1.3.6.1.2.1.2.2.1.21"), is indexed by the ifIndex interface index
   as detailed in the IF-MIB [RFC2863].  If, for example, the interface
   index of "Eth 1/0" in our example is 15, the full MIB Object
   Identifier for (ifOutQLen) would be "1.3.6.1.2.1.2.2.1.21.15".
   Without a method to specify the index the full MIB OID would have to
   be used, which would mean specifying a new Template Record.  Rather
   than send a separate Template Record for each Interface Index, it
   would be much more convenient to identify the index in the Data
   Record itself.

   In fact, only how the indexed object was indexed is necessary,
   although it is often useful to specify the index value.  In our
   example we identify the Egress Interface, but for other uses it may
   be sufficient to know that the ifOutQLen value was taken for the
   interface that the packet was switched out of, without identifying
   the actual interface.

   The Template Record for our example Data Record would contain the
   following Information Elements:

   1.  sourceIPv4Address

   2.  destinationIPv4Address

   3.  totalLengthIPv4

   4.  egressInterface

   5.  ifOutQLen indexed by: egressInterface

   Figure 13 shows the exported Template Set detailing the Template for
   exporting a PSAMP Report with Interface Output Queue Length
   (ifOutQLen) (see Section 5.2).

















Johnson, et al.          Expires October 9, 2011               [Page 19]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = TBD1        |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Template ID = 257      |        Field Count = 5        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|   IE = sourceIPv4Address    |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = destinationIPv4Address |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|    IE = totalLengthIPv4     |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|    IE = egressInterface     |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|   MIBObjectIdentifierMark   |        Field Length 1         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | Index Count=1 |MIB OID Len=20 |    MIB Object Identifier ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    = "1.3.6.1.2.1.2.2.1.21"                   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | ... MIB OID continued         |0|    IE = egressInterface     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

             Figure 13: Example of PSAMP Report with ifOutQLen

   Figure 14 shows the exported Template Set detailing the Template for
   exporting a PSAMP Report with Interface Output Queue Length
   (ifOutQLen) but using the ifIndex MIB object as the exported index,
   rather than the Egress Interface Information Element.















Johnson, et al.          Expires October 9, 2011               [Page 20]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Set ID = TBD1        |          Length               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Template ID = 257      |        Field Count = 5        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|   IE = sourceIPv4Address    |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0| IE = destinationIPv4Address |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|    IE = totalLengthIPv4     |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|    IE = egressInterface     |        Field Length = 4       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |0|IE=MIBObjectIdentifierMarker |        Field Length 1         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | Index Count=1 |MIB OID Len=20 |    MIB Object Identifier ...  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                    = "1.3.6.1.2.1.2.2.1.21"                   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | ... MIB OID continued         |0|IE=MIBObjectIdentifierMarker |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        MIB Object Identifier = "1.3.6.1.2.1.2.2.1.1"          |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           ...  MIB Object Identifier continued ...            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      ...  MIB Object Identifier continued     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Figure 14: Example of PSAMP Report with ifOutQLen using ifIndex from
                       IF-MIB as an index [RFC2578]

5.3.  Indexed MIB Objects with an OID as indexed: ...

   To be completed





Johnson, et al.          Expires October 9, 2011               [Page 21]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


6.  Configuration Considerations

   When configuring a MIB OID for export, consideration should be given
   to whether the SNMP Context String should also be configurable.  If a
   non-default Context String is used then it should be associated with
   the fields as per Section 4.4.


7.  The Collecting Process's Side

   This section describes the Collecting Process when using SCTP and PR-
   SCTP as the transport protocol.  Any necessary changes to the
   Collecting Process specifically related to TCP or UDP transport
   protocols are specified in section 10 of RFC 5101.

   The specifications in section 9 of RFC 5101 also apply to Collector's
   that implement this specification.  In addition, the following
   specifications should be noted.

   A Collecting Process that implements this specification MUST be able
   to receive Set IDs TBD1 and TBD2, as specified in this document.

   A Collecting Process that implements this specification MUST have
   access to MIB modules in order to look up the received MIB Object
   Identifiers and find the type and name of MIB OID fields used in
   received templates.  It should be noted that since reduced length
   encoding MAY be used by the Exporting Process then the Collecting
   Process cannot assume a received size for a field is the maximum size
   it should expect for that field.

   If a Collecting Process receives a MIB Object ID that it cannot
   decode, it SHOULD log an error.

   If a Collecting Process receives a MIB Object ID for an indexed MIB
   Object but isn't sent the appropriate number of indexes then it
   SHOULD log an error, but it MAY use the Template Record to decode the
   Data Records as the associated indexes are purely semantic
   information.


8.  Applicability

   Making available the many and varied items from MIB modules opens up
   a wide range of possible applications for the IPFIX protocol, some
   quite different from the usual flow information.  Some potential
   enhancements for traditional applications are detailed below:

   Some monitoring applications periodically export an interface id to



Johnson, et al.          Expires October 9, 2011               [Page 22]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


   interface name mapping using IPFIX Options Templates.  This could be
   expanded to include the MIB object "ifInUcastPkts" of the IF-MIB
   [RFC2863] indexed using the ingressInterface Information Element, as
   a index.  This would give the input statistics for each interface
   which can be compared to the flow information to ensure the sampling
   rate is expected.  Or, if there is no sampling, to ensure that all
   the expected packets are being monitored.


9.  Security Considerations

   For this extension to the IPFIX protocol, the same security
   considerations as for the IPFIX protocol apply [RFC5101].

   The access to MIB objects is controlled by the configuration of the
   IPFIX exporter.  This is consistent with the way IPFIX controls
   access to other Information Elements in general.  The configuration
   of an IPFIX exporter determines which MIB objects are included in
   IPFIX flow records sent to certain collectors.  Network operators
   should take care that only MIB objects are included in IPFIX flow
   records that the receiving flow collector is allowed to receive.


10.  IANA Considerations

   IPFIX Messages use two fields with assigned values.  These are the
   IPFIX Version Number, indicating which version of the IPFIX Protocol
   was used to export an IPFIX Message, and the IPFIX Set ID, indicating
   the type for each set of information within an IPFIX Message.

   The previously reserved Set ID values of TBD1 and TBD2 are used as
   specified in this document.  All other Set ID values are reserved for
   future use.  Set ID values above 255 are used for Data Sets.

   A new Information Element, "MIBObjectIdentifierMarker", needs to be
   reserved.


11.  References

11.1.  Normative References

   [PEN]      IANA, "Private Enterprise Numbers registry",
              <http://www.iana.org/assignments/enterprise-numbers>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.




Johnson, et al.          Expires October 9, 2011               [Page 23]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


   [RFC2578]  McCloghrie, K., Ed., Perkins, D., Ed., and J.
              Schoenwaelder, Ed., "Structure of Management Information
              Version 2 (SMIv2)", STD 58, RFC 2578, April 1999.

   [RFC2863]  McCloghrie, K. and F. Kastenholz, "The Interfaces Group
              MIB", RFC 2863, June 2000.

   [RFC5101]  Claise, B., "Specification of the IP Flow Information
              Export (IPFIX) Protocol for the Exchange of IP Traffic
              Flow Information", RFC 5101, January 2008.

   [RFC5102]  Quittek, J., Bryant, S., Claise, B., Aitken, P., and J.
              Meyer, "Information Model for IP Flow Information Export",
              RFC 5102, January 2008.

11.2.  Informative References

   [RFC2982]  Kavasseri, R., "Distributed Management Expression MIB",
              RFC 2982, October 2000.

   [RFC3444]  Pras, A. and J. Schoenwaelder, "On the Difference between
              Information Models and Data Models", RFC 3444,
              January 2003.

   [RFC5476]  Claise, B., Johnson, A., and J. Quittek, "Packet Sampling
              (PSAMP) Protocol Specifications", RFC 5476, March 2009.


Authors' Addresses

   Andrew Johnson
   Cisco System, Inc.
   96 Commercial Quay
   Commercial Street
   Edinburgh,   EH6 6LX
   UK

   Phone: +44 131 561 3641
   Email: andrjohn@cisco.com












Johnson, et al.          Expires October 9, 2011               [Page 24]

Internet-Draft     Exporting MIB Variables with IPFIX         April 2011


   Benoit Claise
   Cisco System, Inc.
   De Kleetlaan 6a b1
   Diegem,   1813
   Belgium

   Phone: +32 2 704 5622
   Email: bclaise@cisco.com


   Paul Aitken
   Cisco System, Inc.
   96 Commercial Quay
   Commercial Street
   Edinburgh,   EH6 6LX
   UK

   Phone: +44 131 561 3616
   Email: paitken@cisco.com


   Juergen Schoenwaelder
   Jacobs University Bremen
   Campus Ring 1
   Bremen,   28725
   Germany

   Phone: +49 421 200-3587
   Email: j.schoenwaelder@jacobs-university.de






















Johnson, et al.          Expires October 9, 2011               [Page 25]

