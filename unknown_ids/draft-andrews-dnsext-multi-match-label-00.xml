<?xml version="1.0"?>
<?rfc compact="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc toc="yes" ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<rfc ipr="trust200902" docName="draft-andrews-dnsext-multi-match-label-00">
  <front>
    <title>Multi Match Label</title>
    <author initials="M.P." surname="Andrews" fullname="Mark P. Andrews">
      <organization abbrev="ISC">Internet Systems Consortium</organization>
      <address>
        <postal>
          <street>950 Charter Street</street>
          <city>Redwood City</city>
          <region>CA</region>
          <code>94063</code>
          <country>US</country>
        </postal>
        <email>marka@isc.org</email>
      </address>
    </author>
    <date day="30" month="July" year="2010"/>
    <abstract>
      <t>
	Idn users have expressed a need to have multiple labels be treated
	as one in the DNS.  This document presents a method to do this by
	defining a new label type that ties a set of labels together that
	need to be treated indentically.
      </t>
    </abstract>
  </front>
  <middle>
    <section toc="yes" anchor="introduction" title="Introduction">
      <t>
	Multi Match Labels (MML) are intended to be used in owner names
	of records in the DNS to combine RFC 1035 labels that should be
	treated identically in a zone.
      </t>
    </section>
    <section toc="yes" anchor="wire" title="Wire Format">
      <t>
        The MML has label type {TBD}.  Following
        the label type there is a count of the number of sub labels,
        upto 255, (Note we could reduce this below 63 and encode in the
        first octet) followed by a series of RFC 1035 sub labels that
	make up the MML.
      </t>
      <figure>
        <artwork>
                                    1  1  1  1  1  1
      0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |      TBD              |     COUNT             |
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
    |     LEN               |                       |
    +--+--+--+--+--+--+--+--+                       |
    /              SUB LABEL                        /
    |                       +--+--+--+--+--+--+--+--+
    |                       |     LEN               |
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--|
    |                                               |
    /              SUB LABEL                        /
    /                                               /
    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
         </artwork>
      </figure>
      <t>
	When used in a domain name, MMLs extend the maximum length of
	a domain name to 1024 octets with the restriction that all domain
	names constructed using the MML are still restricted to 255
	octets.  The makes the effective length of the MML be the length
	of the longest sub label in the MML.
      </t>
    </section>
    <section toc="yes" anchor="master" title="Master File Format">
    <t>	
	[To be fully described].
    </t>
    <t>	
	e.g. {sublabel1,sublabel2,sublabel3}  
    </t>
    </section>
    <section toc="yes" anchor="signaling" title="Signaling client support for MML">
      <t>
	Client side support for MML support is signaled using EDNS version 1.
	Clients that do not signal that they support MML labels will receive
	the RFC 1035 sub labels that match the query name.
      </t>
    </section>
    <section toc="yes" anchor="dnssec" title="Interaction with DNSSEC">
      <t>
	The cannonical format of a MML is the MML with each sub label
	in cannonical format as per RFC 4035.
      </t>
      <t>
	Zones that use MML labels need to use DNSSEC algorithm types
	that signal the potential use of MML.  MML zones are treated
	as insecure by validators that are not MML aware.
      </t>
      <t>
        NSEC and NSEC3 chains are constructed as if all of the combinations
	of names in owner name exists seperately for all MMLs within the
	zone.  MMLs within the zone name are NOT expanded but are kept as
	MMLs.  This permits name error (NXDOMAIN) to be returned.  
      </t>
      <t>
	If the zone name contains MMLs the signer name and be any of the
	RFC 1035 names the MML maps to.
      </t>
    </section>
    <section toc="yes" anchor="parent" title="Interaction with non MML parent zones">
      <t>
	The parent zone delegates each of the zone names that makes up
	the names in the MML named zone.
      </t>
    </section>
    <section toc="yes" anchor="child" title="Interaction with non MML child zones">
      <t>
	The child server implements all of the potential zones names.
      </t>
    </section>
    <section toc="yes" anchor="iana" title="IANA Considerations">
      <t>
	TBD
      </t>
    </section>
    <section toc="yes" anchor="security" title="Security Considerations">
      <t>
	TBD
      </t>
    </section>
  </middle>
</rfc>
