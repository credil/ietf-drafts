




Internet-Draft                                                  Yang Shi
<draft-yangshi-capwap-base-mib-00.txt>       Hangzhou H3C Tech. Co., Ltd
Intended Status: Standards Track                              D. Perkins
Expires: January 31, 2007                                       SNMPinfo
                                                                Long Gao
                                             Hangzhou H3C Tech. Co., Ltd
                                                           July 31, 2007

                        CAPWAP Protocol Base MIB
                 <draft-yangshi-capwap-base-mib-00.txt>

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

Abstract

   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it describes managed objects for modeling the Control
   And Provisioning of Wireless Access Points (CAPWAP) Protocol.











Shi & D. Perkins        Expires January 31, 2008                [Page 1]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


Table of Contents

   1.  Introduction .................................................. 1
   2.  The Internet-Standard Management Framework .................... 1
   3.  Terminology ................................................... 1
   4.  Feature Checklist ............................................. 1
   5.  Outline ....................................................... 1
   6.  Brief Description of MIB Objects .............................. 1
      6.1.  capwapWTPStateTable ...................................... 1
      6.2.  capwapWTPTable ........................................... 1
      6.3.  capwapRadioTable......... ................................ 1
      6.4.  capwapStationTable ....................................... 1
      6.5.  capwapWTPRebootStatsTable ................................ 1
      6.6.  capwapRadioStatsTable .................................... 1
   7.  Application of the Interfaces Group to CAPWAP ................. 1
      7.1.  Support of the CAPWAP by ifTable ......................... 1
   8.  CAPWAP MIB Module Definitions ................................. 1
   9.  Security Considerations ....................................... 1
   10. IANA Considerations ........................................... 1
      10.1.  IANA Considerations for CAPWAP-MIB ...................... 1
      10.2.  IANA Considerations for iftype of 'WTP radio template'... 1
   11. Acknowledgements .............................................. 1
   12. References .................................................... 1
      12.1.  Normative References .................................... 1
      12.2.  Informative References .................................. 1

1.  Introduction

   Current work is under way in the IETF to specify the CAPWAP Protocol
   [I-D.ietf-capwap-protocol-specification], which enables an Access
   Controller (AC) to manage a collection of Wireless Termination Points
   (WTPs).

   We describe in this document a MIB module that can be used to manage
   CAPWAP implementations.  This MIB module covers both configuration
   and WTP status-monitoring aspects of CAPWAP.

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

2.  The Internet-Standard Management Framework

   For a detailed overview of the documents that describe the current
   Internet-Standard Management Framework, please refer to section 7 of
   RFC 3410 [RFC3410].

   Managed objects are accessed via a virtual information store, termed



Shi & D. Perkins        Expires January 31, 2008                [Page 2]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


   the Management Information Base or MIB.  MIB objects are generally
   accessed through the Simple Network Management Protocol (SNMP).
   Objects in the MIB are defined using the mechanisms defined in the
   Structure of Management Information (SMI).  This memo specifies a MIB
   module that is compliant to the SMIv2, which is described in STD 58,
   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580
   [RFC2580].

3.  Terminology

   This document uses terminology from the document describing the
   CAPWAP Protocol specification [I-D.ietf-capwap-protocol-
   specification].  WTPs are viewed as remote RF interfaces controlled
   by the AC via CAPWAP protocol. The CAPWAP protocol supports two modes
   of operation: Split and Local MAC.  In Split MAC mode all L2 wireless
   data and management frames are encapsulated via the CAPWAP protocol
   and exchanged between the AC and the WTP. The Local MAC mode of
   operation allows for the data frames to be either locally bridged, or
   tunneled as 802.3 frames.  From AC, administrator could centrally
   control WTPs configuration and monitor their status. CAPWAP use DTLS
   protocol to implement control channel security.

4.  Feature Checklist

   The CAPWAP Protocol MIB module (CAPWAP-MIB) is designed to satisfy
   the following requirements and constraints:

   -  From AC to centrally manage and monitor WTPs;

   -  As a generic mechanism, the MIB module is independent of a
      specific WTP radio technology.

   -  The MIB module supports to configure CAPWAP protocol parameters;

   -  The MIB module supports to show WTPs current state;

   -  The MIB module provides the information of AC, WTPs, radio and
      station objects' basic property and their relationship;

   -  The counters are provided for WTP, radio's reboot event, hardware
      event failure and so on.

   -  The MIB module provides the various notification like channel up,
      join failure and so on.

5.  Outline

   The agent in AC will support the CAPWAP-MIB, SNMP could get all



Shi & D. Perkins        Expires January 31, 2008                [Page 3]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


   information mentioned in the feature checklist via AC.

6.  Brief Description of MIB Objects

   Sections 6.1 - 6.6 describe objects pertaining to CAPWAP.  The MIB
   objects were derived from the CAPWAP protocol document [I-D.ietf-
   capwap-protocol-specification].

6.1.  capwapWTPStateTable

   The WTPs status table is used to indicate each WTP's CAPWAP FSM
   state.

6.2.  capwapWTPTable

   The WTPs table is used for providing property and configuration
   information in details for WTPs in running state.

6.3.  capwapRadioTable

   The radio table is used for providing radio's administrator status,
   operational status and wireless binding type.

6.4.  capwapStationTable

   The station table is used for providing stations' basic property
   information.

6.5.  capwapWTPRebootStatsTable

   The WTP reboot statistic table is used for collecting WTP reboot
   count, link failure count, hardware failure count and so on.

6.6.  capwapRadioStatsTable

   The WTP radio statistic table is used for collecting radio reset
   count, channel change count, hardware failure count and so on.

7.  Application of the Interfaces Group to CAPWAP MIB

   The MIB design for radio is important, as radio has tight
   relationship with wireless binding technology.  For any wireless
   binding technology, for example, 802.11, it's MIB standard will use
   ifIndex as table index for configuation, statistic data. (See
   [RFC2863] for the definition if ifIndex.)  So ifIndex is bridge
   between CAPWAP MIB and a specific wireless binding's standard MIB.
   In the 802.11 MIB, ifindex could be a wireless air interface.
   According to CAPWAP application, administrator should prepare radio's



Shi & D. Perkins        Expires January 31, 2008                [Page 4]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


   configuration before WTP connect to AC.  How administrator identify a
   radio before WTP connect to AC?  The method is: Administrator could
   create a logic interface of "WTP radio template" type as defined in
   [IANAifType-MIB].  Under it, Administrator could configure parameter
   for specific wireless binding, such as beacon interval for 802.11
   binding, this logic interface has a ifindex which could corresponding
   to ifindex in the 802.11 MIB standard.  With this ifindex, we could
   easily reuse any wireless binding's MIB for radio object.

7.1.  Support of the CAPWAP by ifTable

   Some specific interpretations of ifTable for CAPWAP MIB follow.

   Object        Use for the CAPWAP MIB.

   ifIndex       Each interface of 'WTP radio template' type may be
                 represented by an ifEntry.

   ifDescr       Description of the interface of 'WTP radio template'
                 type.

   ifType        It is required to be assigned by the IANA.

   ifPhysAddress Unused.

   ifAdminStatus Alway up.

   ifOperStatus  Alway up.

   ifName        'WTP radio interface'.

   ifAlias       'WTP radio interface'.

   The interface is to maintain radio's configuration, so other
   statistic object such as ifInErrors are not required and value could
   be always zero.

8.  CAPWAP MIB Module Definitions

CAPWAP-MIB DEFINITIONS ::= BEGIN

IMPORTS
   MacAddress, DisplayString, TEXTUAL-CONVENTION, TruthValue, TimeStamp
       FROM SNMPv2-TC

   NOTIFICATION-GROUP, OBJECT-GROUP, MODULE-COMPLIANCE
       FROM SNMPv2-CONF




Shi & D. Perkins        Expires January 31, 2008                [Page 5]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


   MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE, mib-2, Integer32,
   IpAddress, Unsigned32, Counter32
       FROM SNMPv2-SMI;

capwapMIB MODULE-IDENTITY
   LAST-UPDATED "200707310000Z"        -- July 31, 2007
   ORGANIZATION "IETF CAPWAP working Group"
   CONTACT-INFO
       "Yang Shi
        H3C, Digital Technology Plaza, NO.9 Shangdi 9th Street,Haidian
        District,Beijing,China(100085)
        Email:  young@h3c.com

        David T. Perkins
        228 Bayview Dr
        San Carlos, CA 94070
        USA
        Phone: +1 408 394-8702
        Email:  dperkins@snmpinfo.com

        Long Gao
        H3C, Digital Technology Plaza, NO.9 Shangdi 9th Street,Haidian
        District,Beijing,China(100085)
        Email:  gaolong@h3c.com"
   DESCRIPTION
       "Copyright (C) 2007 The Internet Society.  This version of
        the MIB module is part of RFC xxx; see the RFC itself
        for full legal notices.

        This MIB module contains managed object definitions for
        the CAPWAP Protocol."
   REVISION    "200707310000Z"
   DESCRIPTION
       "Initial version published as RFC xxx"
        ::= { mib-2 999901 }

-- EdNote: Replace 999901 with a real OID once it is
-- allocated & remove this note.


-- Textual Conventions

CapwapWTPId ::= TEXTUAL-CONVENTION
   STATUS      current
   DESCRIPTION
       "Represents a unique identifier of a WTP instance."
   SYNTAX      OCTET STRING (SIZE (6))




Shi & D. Perkins        Expires January 31, 2008                [Page 6]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


CapwapStationId ::= TEXTUAL-CONVENTION
   STATUS      current
   DESCRIPTION
       "Represents a unique identifier of a station instance."
   SYNTAX      OCTET STRING (SIZE (6))

CapwapRadioId ::= TEXTUAL-CONVENTION
   STATUS      current
   DESCRIPTION
       "Represents a unique identifier of a radio on a WTP."
   SYNTAX      Unsigned32 (1..4294967295)

CapwapWTPTunnelMode ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
        "Represents the tunneling mode for station data that are
         supported by the WTP.
         The possible value could be:
          localBridging(1) - Local Bridging Mode,
          dot3Tunnel(2)    - 802.3 Frame Tunnel Mode,
          nativeTunnel(3)  - Native Frame Tunnel Mode."
    REFERENCE
        "Section 4.6.41. of CAPWAP Protocol Specification, RFC xxx."
    SYNTAX      INTEGER { localBridging(1), dot3Tunnel(2),
                          nativeTunnel(3)}

CapwapWTPMACType ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
        "Represents the MAC mode of operation supported by the WTP.
         The possible value could be:
          localMAC(1) - Local-MAC Mode,
          splitMAC(2) - Split-MAC Mode."
    REFERENCE
        "Section 4.6.44. of CAPWAP Protocol Specification, RFC xxx."
    SYNTAX      INTEGER { localMAC(1), splitMAC(2) }

CapwapWTPRadioTemplateIfIndex ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
        "Represents the TC for a ifindex of 'WTP radio template'
         interface type."
    SYNTAX      Integer32 (1..2147483647)

CapwapChannelType::= TEXTUAL-CONVENTION
    STATUS     current
    DESCRIPTION
        "Represents the channel type for CAPWAP protocol.



Shi & D. Perkins        Expires January 31, 2008                [Page 7]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


         The following values are supported:
          data(1)    - data Channel
          control(2) - control Channel."
    SYNTAX    INTEGER { data(1), control(2) }

CapwapWTPAuthenMethod ::= TEXTUAL-CONVENTION
    STATUS     current
    DESCRIPTION
        "The attribute represents the authentication credential type
         for WTP.
         The following values are supported:
           clear(1) - cleartext and no authentication,
           x509(2)  - X.509 Certificate Based,
           psk(3)   - Pre-Shared Secret,
           other(8) - Other method, for example, vendor specific.
         As mandatory requirement, CAPWAP control channel
         authentication should use DTLS, and either by certificate or
         PSK. For data channel, DTLS is optional."
    SYNTAX    INTEGER { clear(1), x509(2), psk(3), other(8) }

-- Top level components of this MIB

capwapObjects OBJECT IDENTIFIER
    ::= { capwapMIB 1 }
capwapConformance OBJECT IDENTIFIER
    ::= { capwapMIB 2 }
capwapNotifications OBJECT IDENTIFIER
    ::= { capwapMIB 0}

-- Object Groups

-- for State:
capwapObjectState OBJECT IDENTIFIER
    ::= { capwapObjects 1 }

-- for statistics:
capwapObjectsStats OBJECT IDENTIFIER
    ::= { capwapObjects 2 }

-- for notifications

capwapNotifyVarObjects OBJECT IDENTIFIER
    ::= { capwapObjects 3 }


-- AC state Group

capwapACState OBJECT IDENTIFIER



Shi & D. Perkins        Expires January 31, 2008                [Page 8]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    ::= { capwapObjectState 1 }

capwapACWTPSessions OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the total number of WTPs which are connecting to
         AC."
    REFERENCE
        "Section 4.6.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapACState 1 }

capwapACWTPSessionsLimit  OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the maximum number of WTP sessions supported by
         the AC."
    REFERENCE
        "Section 4.6.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapACState 2 }

capwapACStationSessions  OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the total number of stations which are accessing
         the wireless service."
    REFERENCE
        "Section 4.6.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapACState 3 }

capwapACStationSessionsLimit  OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the maximum number of station sessions supported by
         the AC."
    REFERENCE
        "Section 4.6.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapACState 4 }

capwapACDataChannelSecOptions  OBJECT-TYPE
    SYNTAX      Integer32



Shi & D. Perkins        Expires January 31, 2008                [Page 9]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the security policy supported for CAPWAP data
         channel.
         The AC MAY support more than one option, represented by the bit
         field below.
         clear(1)  -  Clear Text,
         dtls(2)   -  DTLS,
         vendor(3) -  vendor specific."
    REFERENCE
       "Section 4.6.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapACState 5 }

capwapACWTPAuthenOptions  OBJECT-TYPE
    SYNTAX      Integer32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the authentication credentia type supported by the
         AC for control channel.
         The AC MAY support more than one option, represented by the bit
         field below.
         x509(1) -  X.509 Certificate Based
         psk(2)  -  Pre-Shared Secret."
    REFERENCE
       "Section 4.6.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapACState 6 }

capwapACHwVersion  OBJECT-TYPE
    SYNTAX      OCTET STRING(SIZE(32))
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the AC's hardware version number."
    REFERENCE
        "Section 4.6.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapACState 7 }

capwapACSwVersion  OBJECT-TYPE
    SYNTAX      OCTET STRING(SIZE(32))
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the AC's software version number."
    REFERENCE
        "Section 4.6.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapACState 8 }



Shi & D. Perkins        Expires January 31, 2008               [Page 10]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


capwapWTPFallbackEnable OBJECT-TYPE
    SYNTAX      TruthValue
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
        "Represents enable or disable automatic CAPWAP fallback in the
         event that a WTP detects its preferred AC, and is not currently
         connected to it."
    REFERENCE
        "Section 4.6.40. of CAPWAP Protocol Specification, RFC xxx."
    DEFVAL      { true }
    ::= { capwapACState 9 }

capwapWTPACNameList OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
        "Represent the name list of ACs and use semicolon to separate AC
         name. The AC name could be configured with the order of
         Primary AC, secondary AC and so on. WTP will try to connect to
         AC name in the list one by one till it connected to one AC."
    REFERENCE
        "Section 4.6.5. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapACState 10 }

capwapMaxFailedDTLSSessionRetry OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represent the maximum number of failed DTLS session
         establishment attempts before the CAPWAP device enters a silent
         period."
    REFERENCE
        "Section 4.7.7. of CAPWAP Protocol Specification, RFC xxx."
    DEFVAL      { 3 }
    ::= { capwapACState 11 }

capwapWTPIdleTimeout OBJECT-TYPE
    SYNTAX      Unsigned32
    UNITS       "kbtyes"
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represent the time out parameter for WTP idle state."
    REFERENCE
        "Section 4.8.5. of CAPWAP Protocol Specification, RFC xxx."



Shi & D. Perkins        Expires January 31, 2008               [Page 11]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    DEFVAL      { 300 }
    ::= { capwapACState 12 }

capwapWTPMaxDiscoveries OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represent the maximum number of Discovery Request messages
        that will be sent after a WTP boots"
    REFERENCE
        "Section 4.8.6. of CAPWAP Protocol Specification, RFC xxx."
    DEFVAL      { 10 }
    ::= { capwapACState 13 }

capwapWTPMaxRetransmit OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represent the maximum number of retransmissions for a given
         CAPWAP packet before the link layer considers the peer dead."
    REFERENCE
        "Section 4.8.7. of CAPWAP Protocol Specification, RFC xxx."
    DEFVAL      { 5 }
    ::= { capwapACState 14 }

capwapWTPReportInterval OBJECT-TYPE
    SYNTAX      Unsigned32
    UNITS       "second"
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the interval for WTP send report."
    REFERENCE
        "Section 4.8.8. of CAPWAP Protocol Specification, RFC xxx."
    DEFVAL      { 120 }
    ::= { capwapACState 15 }

-- End of AC state group


-- capwapWTPStateTable table

capwapWTPStateTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF CapwapWTPStateEntry
    MAX-ACCESS  not-accessible
    STATUS      current



Shi & D. Perkins        Expires January 31, 2008               [Page 12]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    DESCRIPTION
        "This table provides the state information for WTPs which are
         accessing to AC via CAPWAP protocol."
    ::= { capwapObjectState 2 }

capwapWTPStateEntry  OBJECT-TYPE
    SYNTAX      CapwapWTPStateEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "An entry in this table is created by AC for each WTPs which are
         accessing to AC via CAPWAP protocol."
    INDEX { capwapWTPId }
    ::= { capwapWTPStateTable 1 }

CapwapWTPStateEntry ::= SEQUENCE {
    capwapWTPId          CapwapWTPId,
    capwapWTPIPAddress   IpAddress,
    capwapWTPSerialId    OCTET STRING,
    capwapWTPState       INTEGER }

capwapWTPId OBJECT-TYPE
    SYNTAX      CapwapWTPId
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "Represents the identifier of a WTP."
    ::= { capwapWTPStateEntry 1 }

capwapWTPIPAddress OBJECT-TYPE
    SYNTAX      IpAddress
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the IP address of a WTP."
    ::= { capwapWTPStateEntry 2 }

capwapWTPSerialId OBJECT-TYPE
    SYNTAX      OCTET STRING(SIZE(128))
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the serial number of a WTP."
    REFERENCE
        "Section 4.6.38. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPStateEntry 3 }

capwapWTPState  OBJECT-TYPE



Shi & D. Perkins        Expires January 31, 2008               [Page 13]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    SYNTAX      INTEGER {
                 dtls(1), join(2), image(3), configure(4),
                 run(5), clear(6)
                }
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents WTP current state according to CAPWAP
         protocol's FSM.
         The following values are supported:
          dtls(1)      - DTLS negotiation process
          join(2)      - WTP is joining with AC,
          image(3)     - WTP is downloading software,
          configure(4) - WTP is getting configuration for AC,
          run(5)       - WTP come to run state,
          clear(6)     - WTP is recovery default configuration."
    REFERENCE
        "Section 2.3.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPStateEntry 4 }

-- End of capwapWTPStateTable Table


-- capwapWTPTable Table

capwapWTPTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF CapwapWTPEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "The table provides information for WTPs in running state."
    ::= { capwapObjectState 3 }

capwapWTPEntry  OBJECT-TYPE
    SYNTAX      CapwapWTPEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "An entry in this table is created by AC during CAPWAP protocol
         process."
    INDEX { capwapWTPCurrId }
    ::= { capwapWTPTable 1 }

CapwapWTPEntry ::= SEQUENCE {
    capwapWTPCurrId               CapwapWTPId,
    capwapWTPName                 DisplayString,
    capwapWTPLocation             DisplayString,
    capwapWTPManufacturerId       OBJECT IDENTIFIER,



Shi & D. Perkins        Expires January 31, 2008               [Page 14]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    capwapWTPModelId              Unsigned32,
    capwapWTPBoardId              Unsigned32,
    capwapWTPBoardRevision        Unsigned32,
    capwapWTPBaseMACAddress       MacAddress,
    capwapWTPTunnelModeOptions    CapwapWTPTunnelMode,
    capwapWTPMACTypeOptions       CapwapWTPMACType,
    capwapWTPDiscoveryType        INTEGER,
    capwapWTPRadiosInUseNumber    Unsigned32,
    capwapWTPRadioNumLimit        Unsigned32,
    capwapWTPSwVersion            OCTET STRING,
    capwapWTPSwSize               Unsigned32,
    capwapWTPHwVersion            OCTET STRING,
    capwapWTPStaticIPEnable       TruthValue,
    capwapWTPStaticIP             IpAddress,
    capwapWTPNetmask              IpAddress,
    capwapWTPGateway              IpAddress }

capwapWTPCurrId OBJECT-TYPE
    SYNTAX      CapwapWTPId
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "Represents the unique identifier of a WTP Which is
         in running state."
    ::= { capwapWTPEntry 1 }

capwapWTPName  OBJECT-TYPE
    SYNTAX      DisplayString
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
        "Represents the name of a WTP."
    REFERENCE
        "Section 4.6.45. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 2 }

capwapWTPLocation  OBJECT-TYPE
    SYNTAX      DisplayString
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
        "Represents the name of a WTP."
    REFERENCE
        "Section 4.6.28. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 3 }

capwapWTPManufacturerId  OBJECT-TYPE
    SYNTAX      OBJECT IDENTIFIER



Shi & D. Perkins        Expires January 31, 2008               [Page 15]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "SMI Network Management Private Enterprise Codes, which are
         assigned by the IANA. NMS could know which vendor
         manufactures the WTP."
    REFERENCE
        "Section 4.6.39. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 4 }

capwapWTPModelId  OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the WTP Model Number."
    REFERENCE
        "Section 4.6.38. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 5 }

capwapWTPBoardId  OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the WTP hardware identifier."
    REFERENCE
        "Section 4.6.38. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 6 }

capwapWTPBoardRevision  OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the revision number of the board."
    REFERENCE
        "Section 4.6.38. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 7 }

capwapWTPBaseMACAddress  OBJECT-TYPE
    SYNTAX      MacAddress
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the WTP's Base MAC Address, which MAY be assigned
         to the primary Ethernet interface."
    REFERENCE



Shi & D. Perkins        Expires January 31, 2008               [Page 16]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


        "Section 4.6.38. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 8 }

capwapWTPTunnelModeOptions  OBJECT-TYPE
    SYNTAX      CapwapWTPTunnelMode
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the tunneling modes for station data that are
         supported by the WTP.
         The WTP MAY support more than one option, represented by the
         bit field below.
          localBridging(1) - Local Bridging Mode,
          dot3Tunnel(2)    - 802.3 Frame Tunnel Mode,
          nativeTunnel(3)  - Native Frame Tunnel Mode."
    REFERENCE
        "Section 4.6.41. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 9 }

capwapWTPMACTypeOptions  OBJECT-TYPE
    SYNTAX      CapwapWTPMACType
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the MAC mode of operation supported by the WTP.
         The WTP MAY support more than one option, represented by the
         bit field below.
          localMAC(1) - Local-MAC Mode,
          splitMAC(2) - Split-MAC Mode."
    REFERENCE
        "Section 4.6.44. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 10 }

capwapWTPDiscoveryType OBJECT-TYPE
    SYNTAX      INTEGER {
                 unknown(1), staticConfig(2), dhcp(3), dns(4), acRef(5)
                }
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents how WTP discovered the AC.
         The following values are supported:
          unknown(1)    - the method is unknown,
          staticConfig(2)  - static IP configuration,
          dhcp(3)       - DHCP,
          dns(4)        - DNS,
          acRef(5)      - AC Referral."
    REFERENCE



Shi & D. Perkins        Expires January 31, 2008               [Page 17]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


        "Section 4.6.20. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 11 }

capwapWTPRadiosInUseNumber OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of radios which are in use."
    REFERENCE
        "Section 4.6.39. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 12 }

capwapWTPRadioNumLimit OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the maximum radio number could be supported by WTP."
    REFERENCE
        "Section 4.6.39. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 13 }

capwapWTPSwVersion OBJECT-TYPE
    SYNTAX      OCTET STRING(SIZE(32))
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the name of WTP software."
    REFERENCE
        "Section 4.6.39. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 14 }

capwapWTPSwSize OBJECT-TYPE
    SYNTAX      Unsigned32
    UNITS       "kbtyes"
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the size of WTP software."
    REFERENCE
        "Section 9.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 15 }

capwapWTPHwVersion OBJECT-TYPE
    SYNTAX      OCTET STRING(SIZE(32))
    MAX-ACCESS  read-only
    STATUS      current



Shi & D. Perkins        Expires January 31, 2008               [Page 18]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    DESCRIPTION
        "Represents the version of WTP hardware."
    REFERENCE
        "Section 4.6.39. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 16 }

capwapWTPStaticIPEnable OBJECT-TYPE
    SYNTAX      TruthValue
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
        "Represents whether the WTP should use a static IP address
         or not. A value of zero disables the static IP address,
         while a value of one enables it."
    REFERENCE
        "Section 4.6.49. of CAPWAP Protocol Specification, RFC xxx."
    DEFVAL      { false }
    ::= { capwapWTPEntry 17 }

capwapWTPStaticIP OBJECT-TYPE
    SYNTAX      IpAddress
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
        "When capwapWTPStaticIPEnable is true, it represents the static
         IP address to assign to the WTP."
    REFERENCE
        "Section 4.6.49. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 18 }

capwapWTPNetmask OBJECT-TYPE
    SYNTAX      IpAddress
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
        "When capwapWTPStaticIPEnable is true, it represents the netmask
         to assign to the WTP."
    REFERENCE
        "Section 4.6.49. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 19 }

capwapWTPGateway OBJECT-TYPE
    SYNTAX      IpAddress
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
        "When capwapWTPStaticIPEnable is true, it represents the gateway
         to assign to the WTP."



Shi & D. Perkins        Expires January 31, 2008               [Page 19]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    REFERENCE
        "Section 4.6.49. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPEntry 20 }

-- End of capwapWTPTable table


-- capwapRadioTable Table

capwapRadioTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF CapwapRadioEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "The table will describe WTP and radio's relation-ship."
    ::= { capwapObjectState 4 }

capwapRadioEntry  OBJECT-TYPE
    SYNTAX      CapwapRadioEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "Each entry contains each radio's information for a specific
         WTP."
    INDEX { capwapWTPCurrId, capwapRadioId }
    ::= { capwapRadioTable 1 }

CapwapRadioEntry ::= SEQUENCE {
    capwapRadioId                    CapwapRadioId,
    capwapWTPRadioTemplateIfIndex    CapwapWTPRadioTemplateIfIndex,
    capwapWirelessBinding            INTEGER,
    capwapAdminStatusEnable          TruthValue,
    capwapOperStatus                 TruthValue
    }

capwapRadioId OBJECT-TYPE
    SYNTAX      CapwapRadioId
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "Represents the identifier of a radio on a WTP, and only
         requires unique on a WTP.
         For example, WTP A and WTP B will use same value for
         capwapRadioId for their first radio."
    REFERENCE
        "Section 4.6.31. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioEntry 1 }




Shi & D. Perkins        Expires January 31, 2008               [Page 20]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


capwapWTPRadioTemplateIfIndex OBJECT-TYPE
    SYNTAX      CapwapWTPRadioTemplateIfIndex
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
        "Represents the ifindex for a interface of 'WTP radio template'
         interface type.
         Before WTPs connect to AC and get configuration, administrator
         will prepare configuration for them. For radio related
         configuration, administrator could create a logical interface
         in 'WTP radio template' interface type, and
         configure radio parameter under it.
         The configuration and statistic paramter depend on
         wireless binding type for radio.
         The 'WTP radio template interface' provides a way to
         uniquely identify each radio by logical at AC side.
         As most MIBs use ifindex to identify a interface for
         configuration and statistic data, for example, 802.11 MIB,
         it will be very easy to reuse other MIBs like 802.11 MIB by
         this way.
         Require IANA to assign a ifType for 'WTP radio template'."
    ::= { capwapRadioEntry 2 }

capwapWirelessBinding OBJECT-TYPE
    SYNTAX INTEGER { none(1), dot11(2), dot16(3), epc(4) }
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the wireless binding type for radio.
         The following values are supported:
          none(1)  - No any wireless bingding defined.
          dot11(2) - IEEE 802.11.
          dot16(3) - IEEE 802.16.
          epc(4)   - EPCGlobal."
    REFERENCE
        "Section 4.3. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioEntry 3 }

capwapAdminStatusEnable OBJECT-TYPE
    SYNTAX      TruthValue
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
        "Represents the administrator status of radio, whether
         it is enabled or not."
    REFERENCE
        "Section 4.6.31. of CAPWAP Protocol Specification, RFC xxx."
    DEFVAL      { true }



Shi & D. Perkins        Expires January 31, 2008               [Page 21]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    ::= { capwapRadioEntry 4 }

capwapOperStatus OBJECT-TYPE
    SYNTAX      TruthValue
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the operational status of radio, whether
         it is enabled or not."
    REFERENCE
        "Section 4.6.32. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioEntry 5 }

-- End of capwapRadioTable Table


-- capwapStationTable Table

capwapStationTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF CapwapStationEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "This table contains the information of stations which are
         associating with the specific radio on the WTP."
    ::= { capwapObjectState 5 }

capwapStationEntry OBJECT-TYPE
    SYNTAX      CapwapStationEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "Each entry contains information of each station's association
         information."
    INDEX { capwapWTPCurrId, capwapRadioId, capwapStationId }
    ::= { capwapStationTable 1 }

CapwapStationEntry ::= SEQUENCE {
    capwapStationId           CapwapStationId,
    capwapStationAddedTime    TimeStamp,
    capwapStationVlanName     OCTET STRING
    }

capwapStationId OBJECT-TYPE
    SYNTAX      CapwapStationId
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION



Shi & D. Perkins        Expires January 31, 2008               [Page 22]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


        "Represents the identifier of the station."
    REFERENCE
        "Section 4.6.8. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapStationEntry 1 }

capwapStationAddedTime OBJECT-TYPE
    SYNTAX      TimeStamp
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "This is the time stamp for the very first time when the station
         is added."
    REFERENCE
        "Section 4.6.8. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapStationEntry 2 }

capwapStationVlanName OBJECT-TYPE
    SYNTAX      OCTET STRING (SIZE(32))
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents Vlan name to which the station is associated."
    REFERENCE
        "Section 4.6.8. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapStationEntry 3 }

-- End of capwapStationTable Table


--  capwapWTPRebootStatTable

capwapWTPRebootStatsTable  OBJECT-TYPE
    SYNTAX      SEQUENCE OF CapwapWTPRebootStatsEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "The table will provide WTP reboot statistic data."
    ::= {capwapObjectsStats 1 }

capwapWTPRebootStatsEntry  OBJECT-TYPE
    SYNTAX      CapwapWTPRebootStatsEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "Each entry of the table will provide the reboot statistic data
         for a specific WTP."
    INDEX { capwapWTPCurrId }
    ::= { capwapWTPRebootStatsTable 1 }



Shi & D. Perkins        Expires January 31, 2008               [Page 23]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


CapwapWTPRebootStatsEntry ::= SEQUENCE {
    capwapWTPRebootCount            Counter32,
    capwapWTPInitCount              Counter32,
    capwapWTPLinkFailureCount       Counter32,
    capwapWTPSwFailureCount         Counter32,
    capwapWTPHwFailureCount         Counter32,
    capwapWTPOtherFailureCount      Counter32,
    capwapWTPUnknownFailureCount    Counter32,
    capwapWTPLastFailureType        INTEGER
    }

capwapWTPRebootCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of reboots that have occurred due to a
         WTP crash.  A value of 65535 implies that this information is
         not available on the WTP."
    REFERENCE
        "Section 4.6.48. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPRebootStatsEntry 1 }

capwapWTPInitCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of reboots that have occurred at the
         request of a CAPWAP protocol message, such as a change in
         configuration that required a reboot or an explicit CAPWAP
         protocol reset request.  A value of 65535 implies that this
         information is not available on the WTP."
    REFERENCE
        "Section 4.6.48. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPRebootStatsEntry 2 }

capwapWTPLinkFailureCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that a CAPWAP protocol
         connection with an AC has failed due to link failure."
    REFERENCE
        "Section 4.6.48. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPRebootStatsEntry 3 }




Shi & D. Perkins        Expires January 31, 2008               [Page 24]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


capwapWTPSwFailureCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that a CAPWAP protocol
         connection with an AC has failed due to software related
         reasons."
    REFERENCE
        "Section 4.6.48. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPRebootStatsEntry 4 }

capwapWTPHwFailureCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that a CAPWAP protocol
         connection with an AC has failed due to hardware related
         reasons."
    REFERENCE
        "Section 4.6.48. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPRebootStatsEntry 5 }

capwapWTPOtherFailureCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that a CAPWAP protocol
         connection with an AC has failed due to known reasons, other
         than AC initiated, link, sofware or hardware failure."
    REFERENCE
        "Section 4.6.48. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPRebootStatsEntry 6 }

capwapWTPUnknownFailureCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that a CAPWAP protocol
         connection with an AC has failed for unknown reasons."
    REFERENCE
        "Section 4.6.48. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPRebootStatsEntry 7 }

capwapWTPLastFailureType OBJECT-TYPE



Shi & D. Perkins        Expires January 31, 2008               [Page 25]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    SYNTAX      INTEGER {
                 notSupport(1), acInit(2), linkfailure(3),
                 swFailure(4), hwFailure(5),other(6), unknown(255)
                }
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "The failure type of the most recent WTP failure.
         The following values are supported:
          notSupport(1)    - Not Supported,
          acInit(2)        - AC Initiated,
          linkFailure(3)   - Link Failure,
          swFailure(4)     - Software Failure,
          hwFailure(5)     - Hardware Failure,
          otherFailure(6)  - Other Failure,
          unknown(255)     - Unknown (e.g., WTP doesn't keep track
                             of info)."
    REFERENCE
        "Section 4.6.48. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapWTPRebootStatsEntry 8 }

--  End of capwapWTPRebootStatsTable table


--  capwapRadioStatsTable table

capwapRadioStatsTable  OBJECT-TYPE
    SYNTAX      SEQUENCE OF CapwapRadioStatsEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "The table provides statistics on radio behavior and reasons
         why the WTP radio has been reset."
    ::= { capwapObjectsStats 2 }

capwapRadioStatsEntry  OBJECT-TYPE
    SYNTAX      CapwapRadioStatsEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "Each entry of the table will provide the statistic data of
         event happend on a specific radio of a WTP."
    INDEX { capwapWTPCurrId, capwapRadioId }
    ::= { capwapRadioStatsTable 1 }

CapwapRadioStatsEntry ::= SEQUENCE {
    capwapRadioResetCount            Counter32,
    capwapRadioSwFailCount           Counter32,



Shi & D. Perkins        Expires January 31, 2008               [Page 26]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    capwapRadioHwFailCount           Counter32,
    capwapRadioOtherFailCount        Counter32,
    capwapRadioUnknownFailCount      Counter32,
    capwapRadioConfigUpdateCount     Counter32,
    capwapRadioChannelChangeCount    Counter32,
    capwapRadioBandChangeCount       Counter32,
    capwapRadioCurrentNoiseFloor     Integer32,
    capwapRadioDecryptErrorCount     Counter32,
    capwapRadioTxQueueLevel          Integer32,
    capwapRadioRFLinkFramesPerSec    Counter32,
    capwapRadioLastFailType          INTEGER }

capwapRadioResetCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that that the radio has been
         reset."
    REFERENCE
        "Section 4.6.47. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioStatsEntry 1 }

capwapRadioSwFailCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that the radio has failed due
         to software related reasons."
    REFERENCE
        "Section 4.6.47. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioStatsEntry 2 }

capwapRadioHwFailCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that the radio has failed due
         to hardware related reasons."
    REFERENCE
        "Section 4.6.47. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioStatsEntry 3 }

capwapRadioOtherFailCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only



Shi & D. Perkins        Expires January 31, 2008               [Page 27]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    STATUS      current
    DESCRIPTION
        "Represents the number of times that the radio has failed due to
         known reasons, other than software or hardware failure."
    REFERENCE
        "Section 4.6.47. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioStatsEntry 4 }

capwapRadioUnknownFailCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that the radio has failed for
         unknown reasons."
    REFERENCE
        "Section 4.6.47. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioStatsEntry 5 }

capwapRadioConfigUpdateCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that the radio configuration has
         been updated."
    REFERENCE
        "Section 4.6.47. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioStatsEntry 6 }

capwapRadioChannelChangeCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that the radio channel has
         been changed."
    REFERENCE
        "Section 4.6.47. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioStatsEntry 7 }

capwapRadioBandChangeCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of times that the radio has changed
         frequency bands."



Shi & D. Perkins        Expires January 31, 2008               [Page 28]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    REFERENCE
        "Section 4.6.47. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioStatsEntry 8 }

capwapRadioCurrentNoiseFloor OBJECT-TYPE
    SYNTAX      Integer32
    UNITS       "dbm"
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the noise floor of the radio receiver in units of
         dBm."
    ::= { capwapRadioStatsEntry 9 }

capwapRadioDecryptErrorCount OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of decryption errors that occurred on the
         WTP.  Note that this field is only valid in cases where the WTP
         provides encryption/decryption services."
    REFERENCE
        "Section 4.6.47. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioStatsEntry 10 }

capwapRadioTxQueueLevel OBJECT-TYPE
    SYNTAX      Integer32 (0..100)
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the percentage of Wireless Transmit queue
         utilization,calaculated as the sum of utilized transmit queue
         lengths divided by the sum of maximum transmit queue lengths,
         multiplied by 100."
    REFERENCE
        "Section 4.6.46. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapRadioStatsEntry 11 }

capwapRadioRFLinkFramesPerSec OBJECT-TYPE
    SYNTAX      Counter32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the number of frames transmitted or received per
         second by the WTP over the aur interface."
    REFERENCE
        "Section 4.6.46. of CAPWAP Protocol Specification, RFC xxx."



Shi & D. Perkins        Expires January 31, 2008               [Page 29]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    ::= { capwapRadioStatsEntry 12 }

capwapRadioLastFailType OBJECT-TYPE
    SYNTAX      INTEGER {
                 notSupport(1),
                 swFailure(2),
                 hwFailure(3),
                 otherFailure(4),
                 unknown(255)
                }
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
        "Represents the failure type of the most recent radio failure.
         The following values are supported:
          notSupport(1)   - Not Supported,
          swFailure(2)    - Software Failure,
          hwFailure(3)    - Hardware Failure,
          otherFailure(4) - Other Failure,
          unknown(255)    - Unknown."
    ::= { capwapRadioStatsEntry 13 }

--  End of capwapRadioStatsTable table


-- Notifications

capwapChannelUp NOTIFICATION-TYPE
    OBJECTS     { capwapWTPId,
                  capwapChannelType,
                  capwapWTPAuthenMethod }
    STATUS      current
    DESCRIPTION
        "This notification is sent by AC when a CAPWAP channel
         established.The notification is separated for data or control
         channel."
    ::= { capwapNotifications 1 }

capwapChannelDown NOTIFICATION-TYPE
    OBJECTS     { capwapWTPId, capwapChannelDownReason }
    STATUS      current
    DESCRIPTION
        "This notification is sent by AC when CAPWAP channel becomes
         down."
    ::= { capwapNotifications 2 }

capwapDecryptErrorReport NOTIFICATION-TYPE
    OBJECTS     { capwapWTPId,



Shi & D. Perkins        Expires January 31, 2008               [Page 30]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


                  capwapRadioId,
                  capwapIdEntryNum,
                  capwapStationIdList }
    STATUS      current
    DESCRIPTION
        "This notification is generated when a WTP that has occurred
         decryption error since the last report."
    REFERENCE
        "Section 4.6.15. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifications 3 }

capwapJoinFailure NOTIFICATION-TYPE
    OBJECTS     { capwapWTPId, capwapJoinFailureReason }
    STATUS      current
    DESCRIPTION
        "This notification is generated when a WTP fails to join."
    REFERENCE
        "Section 4.6.33. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifications 4 }

capwapImageUpgradeFailure NOTIFICATION-TYPE
    OBJECTS     { capwapWTPId, capwapImageFailureReason }
    STATUS      current
    DESCRIPTION
        "This notification is generated when a WTP fails to update
         software image."
    REFERENCE
        "Section 4.6.33. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifications 5 }

capwapConfigMsgError NOTIFICATION-TYPE
    OBJECTS     { capwapWTPId, capwapConfigMsgErrorType,
                  capwapMsgErrorElements }
    STATUS      current
    DESCRIPTION
        "This notification is generated when a WTP received message
         elements in the Configuration Status Response which it was
         unable to apply locally."
    REFERENCE
        "Section 4.6.34. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifications 6 }

capwapRadioOperableStatus NOTIFICATION-TYPE
    OBJECTS     { capwapWTPId,
                  capwapRadioId,
                  capwapRadioOperStatusFlag,
                  capwapRadioFailureReason }
    STATUS      current



Shi & D. Perkins        Expires January 31, 2008               [Page 31]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    DESCRIPTION
        "The notification will notify which radio become inoperable
         or operable."
    REFERENCE
        "Section 4.6.32. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifications 7 }

capwapWTPAuthenticationFailure NOTIFICATION-TYPE
    OBJECTS     { capwapWTPId,
                  capwapChannelType,
                  capwapWTPAuthenMethod,
                  capwapWTPAuthenFailureReason }
    STATUS      current
    DESCRIPTION
        "The notification will notify the authentication failure event,
         and provides the reason for it."
    REFERENCE
        "Section 2.3.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifications 8 }


-- objects used only in notifications

capwapChannelType OBJECT-TYPE
    SYNTAX      CapwapChannelType
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "Represents the channel type for CAPWAP protocol."
    ::= { capwapNotifyVarObjects 1 }

capwapWTPAuthenMethod OBJECT-TYPE
    SYNTAX      CapwapWTPAuthenMethod
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "Represents authentication method for Channel."
    ::= { capwapNotifyVarObjects 2 }

capwapChannelDownReason OBJECT-TYPE
    SYNTAX      INTEGER { timeout(1), rekeyfailure(2), apReboot(3) }
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "Represents the reason for Channel down.
         The following values are supported:
          timeout(1)       - The keep alive is timeout,
          rekeyfailure(2)  - Rekey process is failed, channel will be



Shi & D. Perkins        Expires January 31, 2008               [Page 32]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


                             broken.
          apReboot(3)      - AC reboot WTP."
    ::= { capwapNotifyVarObjects 3 }

capwapIdEntryNum OBJECT-TYPE
    SYNTAX      Unsigned32
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "Represents the entry number of station id in the
         capwapStationIdList."
    REFERENCE
        "Section 4.6.15. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifyVarObjects 4 }

capwapStationIdList OBJECT-TYPE
    SYNTAX      OCTET STRING
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "Represents the list of station id."
    REFERENCE
        "Section 4.6.15. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifyVarObjects 5 }

capwapWTPAuthenFailureReason OBJECT-TYPE
    SYNTAX      INTEGER {
                 keyMismatch(1), invalidCA(2), micError(3),
                 timeout(4), unknown(8)
                }
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "Represents reason for WTP authorization failure.
         The following values are supported:
          keyMismatch(1) - WTP's and AC's key is not matched,
          invalidCA(2)   - ca is not valide,
          micError(3)    - detect mic error,
          timeout(4)     - WaitDTLS Timer is timeout,
          unknown(8)     - Unknown reason."
    REFERENCE
        "Section 2.3.1. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifyVarObjects 6 }

capwapRadioOperStatusFlag OBJECT-TYPE
    SYNTAX INTEGER { operable(1), inoperable(2) }
    MAX-ACCESS  accessible-for-notify
    STATUS      current



Shi & D. Perkins        Expires January 31, 2008               [Page 33]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    DESCRIPTION
        "Represents the operation status of a radio.
         The following values are supported:
          inoperable(0) - To indicate radio is inoperable, and
                          capwapRadioFailureReason object will
                          give reason in details,
          operable(1)   - To indicate radio is operable."
    REFERENCE
        "Section 4.6.32. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifyVarObjects 7 }

capwapRadioFailureReason OBJECT-TYPE
    SYNTAX      INTEGER {
                 hwError(1), swError(2), adminSet(3), unknown(8)
                }
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "Represents errors caused by configuration operation.
         The following values are supported
          hwError(1)  - Radio Failure,
          swError(2)  - Software Failure,
          adminSet(3) - Administratively Set,
          unknown(8)  - Unknown reason."
    REFERENCE
        "Section 4.6.32. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifyVarObjects 8 }

capwapJoinFailureReason  OBJECT-TYPE
    SYNTAX      INTEGER {
                 unspecified(1), resDepletion(2), unknownSource(3),
                 incorrectData(4), sessionInUse(5), notSupportHw(6),
                 notSupportBinding(7)
                }
    MAX-ACCESS  accessible-for-notify
    STATUS      current
    DESCRIPTION
        "The following join failure types are supported:
         unspecified(1)       - unspecified failure reason,
         resDepletion(2)      - Resource Depletion,
         unknownSource(3)     - Unknown Source,
         incorrectData(4)     - Incorrect Data,
         sessionInUse(5)      - Session ID already in use,
         notSupportHw(6)      - WTP Hardware not supported,
         notSupportBinding(7) - Binding Not Supported."
    REFERENCE
        "Section 4.6.33. of CAPWAP Protocol Specification, RFC xxx."
    ::= { capwapNotifyVarObjects 9 }



Shi & D. Perkins        Expires January 31, 2008               [Page 34]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


capwapImageFailureReason  OBJECT-TYPE
   SYNTAX      INTEGER {
                invalidChecksum(1),
                invalidLength(2),
                other(3),
                inUse(4)
                }
   MAX-ACCESS  accessible-for-notify
   STATUS      current
   DESCRIPTION
        "The following software upgrade failure types are supported:
         invalidChecksum(1) - Invalid Checksum,
         invalidLength(2)   - Invalid Data Length,
         other(3)           - Other Error,
         inUse(4)           - Image Already Present."
   REFERENCE
        "Section 4.6.33. of CAPWAP Protocol Specification, RFC xxx."
   ::= { capwapNotifyVarObjects 10 }

capwapConfigMsgErrorType  OBJECT-TYPE
   SYNTAX      INTEGER {
                unknownElement(1), unsupportedElement(2),
                unknownValue(3), unsupportedValue(4)
               }
   MAX-ACCESS  accessible-for-notify
   STATUS      current
   DESCRIPTION
        "The following software upgrade failure types are supported:
         unknownElement(1)     - Unknown Message Element,
         unsupportedElement(2) - Unsupported Message Element,
         unknownValue(3)       - Unknown Message Element Value,
         unsupportedValue(4)   - Unsupported Message Element Value."
   REFERENCE
        "Section 4.6.34. of CAPWAP Protocol Specification, RFC xxx."
   ::= { capwapNotifyVarObjects 11 }

capwapMsgErrorElements  OBJECT-TYPE
   SYNTAX      DisplayString
   MAX-ACCESS  accessible-for-notify
   STATUS      current
   DESCRIPTION
        "Represents the message element sent by the AC in the
         Configuration Status Response message that caused the error."
   REFERENCE
        "Section 4.6.34. of CAPWAP Protocol Specification, RFC xxx."
   ::= { capwapNotifyVarObjects 12 }

-- Conformance statements



Shi & D. Perkins        Expires January 31, 2008               [Page 35]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


-- Module Conformance

capwapGroups OBJECT IDENTIFIER
    ::= { capwapConformance 1 }

capwapCompliances OBJECT IDENTIFIER
    ::= { capwapConformance 2 }

-- Object and Notification groups

capwapACNodeGroup    OBJECT-GROUP
    OBJECTS {
        capwapACWTPSessions,
        capwapACWTPSessionsLimit,
        capwapACStationSessions,
        capwapACStationSessionsLimit,
        capwapACDataChannelSecOptions,
        capwapACWTPAuthenOptions,
        capwapACHwVersion,
        capwapACSwVersion
    }
    STATUS  current
    DESCRIPTION
        "The collection of objects which are used to represent
         basic property for AC from CAPWAP protocol perspective."
    ::= { capwapGroups 1 }

capwapWTPStateGroup    OBJECT-GROUP
    OBJECTS {
        capwapWTPIPAddress,
        capwapWTPSerialId,
        capwapWTPState
    }
    STATUS  current
    DESCRIPTION
        "The collection of objects which are used to represent
         WTP state information."
    ::= { capwapGroups 2 }

capwapWTPsGroup    OBJECT-GROUP
    OBJECTS {
        capwapWTPFallbackEnable,
        capwapWTPACNameList,
        capwapMaxFailedDTLSSessionRetry,
        capwapWTPIdleTimeout,
        capwapWTPMaxDiscoveries,
        capwapWTPMaxRetransmit,
        capwapWTPReportInterval,



Shi & D. Perkins        Expires January 31, 2008               [Page 36]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


        capwapWTPName,
        capwapWTPLocation,
        capwapWTPManufacturerId,
        capwapWTPModelId,
        capwapWTPTunnelModeOptions,
        capwapWTPMACTypeOptions,
        capwapWTPDiscoveryType,
        capwapWTPRadiosInUseNumber,
        capwapWTPRadioNumLimit,
        capwapWTPSwVersion,
        capwapWTPSwSize,
        capwapWTPHwVersion
    }
    STATUS  current
    DESCRIPTION
        "The collection of objects which are used to represent
         configuration,version and property information for WTP
         in running state."
    ::= { capwapGroups 3 }

capwapRadiosGroup    OBJECT-GROUP
    OBJECTS {
        capwapWTPRadioTemplateIfIndex,
        capwapWirelessBinding,
        capwapAdminStatusEnable,
        capwapOperStatus
    }
    STATUS  current
    DESCRIPTION
        "The collection of objects which are used to represent
         wireless binding type, administrator status and operational
         status for radio."
    ::= { capwapGroups 4 }

capwapStationsGroup    OBJECT-GROUP
    OBJECTS {
        capwapStationAddedTime,
        capwapStationVlanName
    }
    STATUS  current
    DESCRIPTION
        "The collection of objects which are used to represent
         stations' basic property."
    ::= { capwapGroups 5 }

capwapWTPsPhysicalGroup   OBJECT-GROUP
    OBJECTS {
        capwapWTPBoardId,



Shi & D. Perkins        Expires January 31, 2008               [Page 37]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


        capwapWTPBoardRevision,
        capwapWTPBaseMACAddress
    }
    STATUS  current
    DESCRIPTION
        "Collection of objects that represent hardware information of
         WTP."
    ::= { capwapGroups 6 }

capwapWTPsLayer3Group   OBJECT-GROUP
    OBJECTS {
        capwapWTPStaticIPEnable,
        capwapWTPStaticIP,
        capwapWTPNetmask,
        capwapWTPGateway
    }
    STATUS  current
    DESCRIPTION
        "Collection of objects that represent layer3 information of
         WTP."
    ::= { capwapGroups 7 }

capwapWTPRebootStatsGroup    OBJECT-GROUP
    OBJECTS {
        capwapWTPRebootCount,
        capwapWTPInitCount,
        capwapWTPLinkFailureCount,
        capwapWTPSwFailureCount,
        capwapWTPHwFailureCount,
        capwapWTPOtherFailureCount,
        capwapWTPUnknownFailureCount,
        capwapWTPLastFailureType
    }
    STATUS  current
    DESCRIPTION
        "The collection of objects which are used for collecting
         WTP reboot count, link failure count, hardware failure
         count and so on."
    ::= { capwapGroups 8 }

capwapRadioStatsGroup    OBJECT-GROUP
    OBJECTS {
        capwapRadioResetCount,
        capwapRadioSwFailCount,
        capwapRadioHwFailCount,
        capwapRadioOtherFailCount,
        capwapRadioUnknownFailCount,
        capwapRadioConfigUpdateCount,



Shi & D. Perkins        Expires January 31, 2008               [Page 38]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


        capwapRadioChannelChangeCount,
        capwapRadioBandChangeCount,
        capwapRadioCurrentNoiseFloor,
        capwapRadioDecryptErrorCount,
        capwapRadioTxQueueLevel,
        capwapRadioRFLinkFramesPerSec,
        capwapRadioLastFailType
    }
    STATUS  current
    DESCRIPTION
        "The collection of objects which are used for collecting
         radio reset count, channel change count, hardware failure
         count and so on"
    ::= { capwapGroups 9 }

capwapNofificationGroup    NOTIFICATION-GROUP
    NOTIFICATIONS {
        capwapChannelUp,
        capwapChannelDown,
        capwapDecryptErrorReport,
        capwapJoinFailure,
        capwapImageUpgradeFailure,
        capwapConfigMsgError,
        capwapRadioOperableStatus,
        capwapWTPAuthenticationFailure
    }
    STATUS  current
    DESCRIPTION
        "Collection of notifications in this MIB."
    ::= { capwapGroups 10 }

capwapNotifyVarGroup    OBJECT-GROUP
    OBJECTS {
        capwapWTPId,
        capwapRadioId,
        capwapChannelType,
        capwapWTPAuthenMethod,
        capwapChannelDownReason,
        capwapIdEntryNum,
        capwapStationIdList,
        capwapWTPAuthenFailureReason,
        capwapRadioOperStatusFlag,
        capwapRadioFailureReason,
        capwapJoinFailureReason,
        capwapImageFailureReason,
        capwapConfigMsgErrorType,
        capwapMsgErrorElements
    }



Shi & D. Perkins        Expires January 31, 2008               [Page 39]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


    STATUS  current
    DESCRIPTION
        "Objects used for notification."
    ::= { capwapGroups 11 }


-- Compliance statements

capwapFullCompliance MODULE-COMPLIANCE
   STATUS current
   DESCRIPTION
       "Compliance statement for agents that support the
        configuration and monitoring of CAPWAP MIB."
   MODULE -- this module

      MANDATORY-GROUPS    { capwapACNodeGroup,
                            capwapWTPStateGroup,
                            capwapWTPsGroup,
                            capwapRadiosGroup,
                            capwapStationsGroup }
      GROUP capwapWTPsPhysicalGroup
      DESCRIPTION
          "This group is optional."

      GROUP capwapWTPsLayer3Group
      DESCRIPTION
          "This group is optional."

      GROUP capwapWTPRebootStatsGroup
      DESCRIPTION
          "This group is mandatory."

      GROUP capwapRadioStatsGroup
      DESCRIPTION
          "This group is mandatory."

      GROUP capwapNofificationGroup
      DESCRIPTION
          "This group is optional."

      GROUP capwapNotifyVarGroup
      DESCRIPTION
          "This group is optional. If capwapNofificationGroup is
           supported, this group must be implemented."

      OBJECT      capwapWirelessBinding
      SYNTAX      INTEGER { none(1) }
      DESCRIPTION



Shi & D. Perkins        Expires January 31, 2008               [Page 40]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


          "A value other than none(1) need not be supported if there is
           no wireless binding defined for technologies used."
   ::= { capwapCompliances 1 }

END

9.  Security Considerations

   There are a number of management objects defined in this MIB module
   with a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on
   network operations.  These are the tables and objects and their
   sensitivity/vulnerability:

   -   Unauthorized changes to the capwapWTPTable, capwapRadioTable,
       writable objects under capwapACs group may disrupt allocation of
       resources in the network.

   Some of the readable objects in this MIB module (i.e., objects with a
   MAX-ACCESS other than not-accessible) may be considered sensitive or
   vulnerable in some network environments.  It is thus important to
   control even GET and/or NOTIFY access to these objects and possibly
   to even encrypt the values of these objects when sending them over
   the network via SNMP.  These are the tables and objects and their
   sensitivity/vulnerability:

   -   The capwapWTPTable exposes WTP's important information like
       IP address,software version, hardware version and so on.

   -   The capwapWTPRebootStatTable exposes WTP's failure information.

   -   The capwapRadioStatsTable exposes radio's failure information.

   SNMP versions prior to SNMPv3 did not include adequate security.
   Even if the network itself is secure (for example by using IPSec),
   even then, there is no control as to who on the secure network is
   allowed to access and GET/SET (read/change/create/delete) the objects
   in this MIB module.

   It is RECOMMENDED that implementers consider the security features as
   provided by the SNMPv3 framework (see [RFC3410], section 8),
   including full support for the SNMPv3 cryptographic mechanisms (for
   authentication and privacy).

   Further, deployment of SNMP versions prior to SNMPv3 is NOT
   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to



Shi & D. Perkins        Expires January 31, 2008               [Page 41]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


   enable cryptographic security.  It is then a customer/operator
   responsibility to ensure that the SNMP entity giving access to an
   instance of this MIB module is properly configured to give access to
   the objects only to those principals (users) that have legitimate
   rights to indeed GET or SET (change/create/delete) them.

10.  IANA Considerations

10.1.  IANA Considerations for CAPWAP-MIB

   The MIB module in this document uses the following IANA-assigned
   OBJECT IDENTIFIER values recorded in the SMI Numbers registry:

   Descriptor        OBJECT IDENTIFIER value
   ----------        -----------------------

   capwapMIB         { mib-2 XXX }

   Editor's Note (to be removed prior to publication):  the IANA is
   requested to assign a value for "XXX" under the 'mib-2' subtree and
   to record the assignment in the SMI Numbers registry.  When the
   assignment has been made, the RFC Editor is asked to replace "XXX"
   (here and in the MIB module) with the assigned value and to remove
   this note.

10.2.  IANA Considerations for iftype of 'WTP radio template'

   Require IANA to assign a iftype for 'WTP radio template' type.

11.  Acknowledgements

   The authors wish to thank Margaret Wasserman,David Harrington,
   Yu liu, Sachin Dutta, Yujin Zhao, Haitao Zhang, and Xiansen Cai.

12.  References

12.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2578]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
              Rose, M., and S. Waldbusser, "Structure of Management
              Information Version 2 (SMIv2)", STD 58, RFC 2578, April
              1999.

   [RFC2579]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
              Rose, M., and S. Waldbusser, "Textual Conventions for



Shi & D. Perkins        Expires January 31, 2008               [Page 42]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


              SMIv2", STD 58, RFC 2579, April 1999.

   [RFC2580]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
              Rose, M., and S. Waldbusser, "Conformance Statements for
              SMIv2", STD 58, RFC 2580, April 1999.

   [IANAifType-MIB]
              Internet Assigned Numbers Authority (IANA), "IANAifType
              Textual Convention definition",
               http://www.iana.org/assignments/ianaiftype-mib.

   [RFC2863]  McCloghrie, K. and F. Kastenholz, "The Interfaces Group
              MIB", RFC 2863, June 2000.

   [I-D.ietf-capwap-protocol-specification]
              Pat Calhoun, "CAPWAP Protocol Specification",
              draft-ietf-capwap-protocol-specification
              (work in progress), June 2007.
12.2.  Informational References

   [RFC3410]  Case, J., Mundy, R., Partain, D., and B. Stewart,
              "Introduction and Applicability Statements for Internet-
              Standard Management Framework", RFC 3410, December 2002.

Authors' Addresses

   Yang Shi
   H3C, Digital Technology Plaza, NO.9 Shangdi 9th Street,Haidian
   District,Beijing,China(100085)
   Email:  young@h3c.com

   David T. Perkins
   228 Bayview Dr
   San Carlos, CA 94070
   USA
   Phone: +1 408 394-8702
   Email:  dperkins@snmpinfo.com

   Long Gao
   H3C, Digital Technology Plaza, NO.9 Shangdi 9th Street,Haidian
   District,Beijing,China(100085)
   Email:  gaolong@h3c.com









Shi & D. Perkins        Expires January 31, 2008               [Page 43]




Internet-Draft          CAPWAP Protocol Base MIB            31 July 2007


Full Copyright Statement

   Copyright (C) The IETF Trust (2007).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided
   on an "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE
   REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY,
   THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,
   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT
   THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR
   ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A
   PARTICULAR PURPOSE.

Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed
   to pertain to the implementation or use of the technology
   described in this document or the extent to which any license
   under such rights might or might not be available; nor does it
   represent that it has made any independent effort to identify any
   such rights.  Information on the procedures with respect to
   rights in RFC documents can be found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use
   of such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository
   at http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention
   any copyrights, patents or patent applications, or other
   proprietary rights that may cover technology that may be required
   to implement this standard.  Please address the information to the
   IETF at ietf-ipr@ietf.org.










Shi & D. Perkins        Expires January 31, 2008               [Page 44]


