


6LoWPAN Working Group                                         C. Bormann
Internet-Draft                                   Universitaet Bremen TZI
Intended status: Standards Track                        October 23, 2010
Expires: April 26, 2011


    6LoWPAN Generic Compression of Headers and Header-like Payloads
                      draft-bormann-6lowpan-ghc-01

Abstract

   This short I-D provides a complete design for a simple addition to
   6LoWPAN Header Compression that enables the compression of generic
   headers and header-like payloads.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on April 26, 2011.

Copyright Notice

   Copyright (c) 2010 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Bormann                  Expires April 26, 2011                 [Page 1]

Internet-Draft                 6lowpan-ghc                  October 2010


Table of Contents

   1.  The Header Compression Coupling Problem  . . . . . . . . . . .  3
     1.1.  Terminology  . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  6LoWPAN-GHC  . . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  Examples . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
   4.  Integrating 6LoWPAN-GHC into 6LoWPAN-HC  . . . . . . . . . . . 11
     4.1.  Compressing extension headers  . . . . . . . . . . . . . . 11
   5.  IANA considerations  . . . . . . . . . . . . . . . . . . . . . 12
   6.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 13
   7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 14
   8.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 15
     8.1.  Normative References . . . . . . . . . . . . . . . . . . . 15
     8.2.  Informative References . . . . . . . . . . . . . . . . . . 15
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 16




































Bormann                  Expires April 26, 2011                 [Page 2]

Internet-Draft                 6lowpan-ghc                  October 2010


1.  The Header Compression Coupling Problem

   [I-D.ietf-6lowpan-hc] defines a scheme for header compression in
   6LoWPAN [RFC4944] packets.  As with most header compression schemes,
   a new specification is needed for every new kind of header that needs
   to be compressed.  In addition, [I-D.ietf-6lowpan-hc] does not define
   an extensibility scheme like the ROHC profiles defined in ROHC
   [RFC3095] [RFC5795].  This leads to the difficult situation that
   [I-D.ietf-6lowpan-hc] tends to be reopened and reexamined each time a
   new header receives consideration (or an old header is changed and
   reconsidered) in the 6lowpan/roll/core cluster of IETF working
   groups.  At this rate, [I-D.ietf-6lowpan-hc] will never get completed
   (fortunately, by now it has passed WGLC, but the underlying problem
   remains unsolved).

   The purpose of the present contribution is to plug into
   [I-D.ietf-6lowpan-hc] as is, using its NHC (next header compression)
   concept.  We add a slightly less efficient, but vastly more general
   form of compression for headers of any kind and even for header-like
   payloads such as those exhibited by routing protocols, DHCP, etc.
   The objective is to arrive at something that can be defined on a
   single page and implemented in a couple of lines of code, as opposed
   to a general data compression scheme such as that defined in
   [RFC1951].

1.1.  Terminology

   In this document, the key words "MUST", "MUST NOT", "REQUIRED",
   "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
   and "OPTIONAL" are to be interpreted as described in BCP 14 [RFC2119]
   and indicate requirement levels for compliant CoAP implementations.

   The term "byte" is used in its now customary sense as a synonym for
   "octet".

















Bormann                  Expires April 26, 2011                 [Page 3]

Internet-Draft                 6lowpan-ghc                  October 2010


2.  6LoWPAN-GHC

   The format of a compressed header or payload is a simple bytecode.  A
   compressed header consists of a sequence of pieces, each of which
   begins with a code byte, which may be followed by zero or more bytes
   as its argument.  Some code bytes cause bytes to be laid out in the
   destination buffer, some simply modify some decompression variables.

   At the start of decompressing a header or payload within a L2 packet
   (= fragment), variables "sa" and "na" are initialized as zero.

   The code bytes are defined as follows:

   +----------+---------------------------------------------+----------+
   | code     | Action                                      | Argument |
   | byte     |                                             |          |
   +----------+---------------------------------------------+----------+
   | 0kkkkkkk | Append k = 0b0kkkkkkk bytes of data in the  | The k    |
   |          | bytecode argument (k < 96)                  | bytes of |
   |          |                                             | data     |
   |          |                                             |          |
   | 0110iiii | Append all bytes (possibly filling an       |          |
   |          | incomplete byte with zero bits) from        |          |
   |          | Context i                                   |          |
   |          |                                             |          |
   | 0111iiii | Append 8 bytes from Context i; i.e., the    |          |
   |          | context value truncated/extended to 8       |          |
   |          | bytes, and then append 0000 00FF FE00       |          |
   |          | (i.e., 14 bytes total)                      |          |
   |          |                                             |          |
   | 1000nnnn | Append 0b0000nnnn+2 bytes of zeroes         |          |
   |          |                                             |          |
   | 1001nnnn | reserved                                    |          |
   |          |                                             |          |
   | 101nssss | sa += 0b0ssss000, na += 0b0000n000          |          |
   |          |                                             |          |
   | 11nnnkkk | n = na+0b00000nnn+2; s = 0b00000kkk+sa+n;   |          |
   |          | append n bytes from previously output       |          |
   |          | bytes, starting s bytes to the left of the  |          |
   |          | current output pointer; set sa = 0, na = 0  |          |
   +----------+---------------------------------------------+----------+

   For the purposes of the backreferences, the expansion buffer is
   initialized with the pseudo-header as defined in [RFC2460], at the
   end of which the target buffer begins.  These pseudo-header bytes are
   therefore available for backreferencing, but not copied into the
   final result.




Bormann                  Expires April 26, 2011                 [Page 4]

Internet-Draft                 6lowpan-ghc                  October 2010


3.  Examples

   This section demonstrates some relatively realistic examples derived
   from actual PCAP dumps taken at previous interops.  Unfortunately,
   for these dumps, no context information was available, so the
   relatively powerful effect of context-based compression is not shown.
   (TBD: Add a couple DHCP examples.)

   Figure 1 shows a quite short RPL control message that obviously
   cannot be improved much.

   IP header:
    60 00 00 00 00 08 3a ff fe 80 00 00 00 00 00 00
    02 1c da ff fe 00 20 24 ff 02 00 00 00 00 00 00
    00 00 00 00 00 00 00 1a
   Payload:
    9b 00 6b de 00 00 00 00
   Pseudoheader:
    fe 80 00 00 00 00 00 00 02 1c da ff fe 00 20 24
    ff 02 00 00 00 00 00 00 00 00 00 00 00 00 00 1a
    00 00 00 08 00 00 00 3a
   copy: 04 9b 00 6b de
   4 nulls: 82
   Compressed:
    04 9b 00 6b de 82
   Was 8 bytes; compressed to 6 bytes, compression factor 1.33

                      Figure 1: A simple RPL example

   Figure 2 shows a longer RPL control message that is improved a bit
   more (but would likely benefit additionally from a context
   reference).  Note that the compressed output exposes an inefficiency
   in the simple-minded compressor used to generate it; this does not
   devalue the example since constrained nodes are quite likely to make
   use of simple-minded compressors.
















Bormann                  Expires April 26, 2011                 [Page 5]

Internet-Draft                 6lowpan-ghc                  October 2010


   IP header:
    60 00 00 00 00 5c 3a ff fe 80 00 00 00 00 00 00
    02 1c da ff fe 00 30 23 ff 02 00 00 00 00 00 00
    00 00 00 00 00 00 00 1a
   Payload:
    9b 01 7a 5f 00 f0 01 00 88 00 00 00 20 02 0d b8
    00 00 00 00 00 00 00 ff fe 00 fa ce 04 0e 00 14
    09 ff 00 00 01 00 00 00 00 00 00 00 08 1e 80 20
    ff ff ff ff ff ff ff ff 00 00 00 00 20 02 0d b8
    00 00 00 00 00 00 00 ff fe 00 fa ce 03 0e 40 00
    ff ff ff ff 20 02 0d b8 00 00 00 00
   Pseudoheader:
    fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23
    ff 02 00 00 00 00 00 00 00 00 00 00 00 00 00 1a
    00 00 00 5c 00 00 00 3a
   copy: 09 9b 01 7a 5f 00 f0 01 00 88
   3 nulls: 81
   copy: 04 20 02 0d b8
   7 nulls: 85
   ref(52): ff fe 00 -> ref 101nssss 0 6/11nnnkkk 1 1: a6 c9
   copy: 08 fa ce 04 0e 00 14 09 ff
   2 nulls: 80
   copy: 01 01
   7 nulls: 85
   copy: 06 08 1e 80 20 ff ff
   ref(2): ff ff -> ref 11nnnkkk 0 0: c0
   ref(4): ff ff ff ff -> ref 11nnnkkk 2 0: d0
   4 nulls: 82
   ref(48): 20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 fa ce
    -> ref 101nssss 1 4/11nnnkkk 6 0: b4 f0
   copy: 03 03 0e 40
   ref(9): 00 ff -> ref 11nnnkkk 0 7: c7
   ref(28): ff ff ff -> ref 101nssss 0 3/11nnnkkk 1 1: a3 c9
   ref(24): 20 02 0d b8 00 00 00 00
    -> ref 101nssss 0 2/11nnnkkk 6 0: a2 f0
   Compressed:
    09 9b 01 7a 5f 00 f0 01 00 88 81 04 20 02 0d b8
    85 a6 c9 08 fa ce 04 0e 00 14 09 ff 80 01 01 85
    06 08 1e 80 20 ff ff c0 d0 82 b4 f0 03 03 0e 40
    c7 a3 c9 a2 f0
   Was 92 bytes; compressed to 53 bytes, compression factor 1.74

                      Figure 2: A longer RPL example








Bormann                  Expires April 26, 2011                 [Page 6]

Internet-Draft                 6lowpan-ghc                  October 2010


   Figure 3 shows an the effect of compressing a simple ND neighbor
   solicitation (again, no context-based compression).

   IP header:
    60 00 00 00 00 30 3a ff 20 02 0d b8 00 00 00 00
    00 00 00 ff fe 00 3b d3 fe 80 00 00 00 00 00 00
    02 1c da ff fe 00 30 23
   Payload:
    87 00 a7 68 00 00 00 00 fe 80 00 00 00 00 00 00
    02 1c da ff fe 00 30 23 01 01 3b d3 00 00 00 00
    1f 02 00 00 00 00 00 06 00 1c da ff fe 00 20 24
   Pseudoheader:
    20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 3b d3
    fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23
    00 00 00 30 00 00 00 3a
   copy: 04 87 00 a7 68
   4 nulls: 82
   ref(32): fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23
    -> ref 101nssss 1 2/11nnnkkk 6 0: b2 f0
   copy: 04 01 01 3b d3
   4 nulls: 82
   copy: 02 1f 02
   5 nulls: 83
   copy: 02 06 00
   ref(24): 1c da ff fe 00 -> ref 101nssss 0 2/11nnnkkk 3 3: a2 db
   copy: 02 20 24
   Compressed:
    04 87 00 a7 68 82 b2 f0 04 01 01 3b d3 82 02 1f
    02 83 02 06 00 a2 db 02 20 24
   Was 48 bytes; compressed to 26 bytes, compression factor 1.85

                   Figure 3: An ND neighbor solicitation



















Bormann                  Expires April 26, 2011                 [Page 7]

Internet-Draft                 6lowpan-ghc                  October 2010


   Figure 4 shows the compression of an ND neighbor advertisement.

   IP header:
    60 00 00 00 00 30 3a fe fe 80 00 00 00 00 00 00
    02 1c da ff fe 00 30 23 20 02 0d b8 00 00 00 00
    00 00 00 ff fe 00 3b d3
   Payload:
    88 00 26 6c c0 00 00 00 fe 80 00 00 00 00 00 00
    02 1c da ff fe 00 30 23 02 01 fa ce 00 00 00 00
    1f 02 00 00 00 00 00 06 00 1c da ff fe 00 20 24
   Pseudoheader:
    fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23
    20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 3b d3
    00 00 00 30 00 00 00 3a
   copy: 05 88 00 26 6c c0
   3 nulls: 81
   ref(48): fe 80 00 00 00 00 00 00 02 1c da ff fe 00 30 23
    -> ref 101nssss 1 4/11nnnkkk 6 0: b4 f0
   copy: 04 02 01 fa ce
   4 nulls: 82
   copy: 02 1f 02
   5 nulls: 83
   copy: 02 06 00
   ref(24): 1c da ff fe 00 -> ref 101nssss 0 2/11nnnkkk 3 3: a2 db
   copy: 02 20 24
   Compressed:
    05 88 00 26 6c c0 81 b4 f0 04 02 01 fa ce 82 02
    1f 02 83 02 06 00 a2 db 02 20 24
   Was 48 bytes; compressed to 27 bytes, compression factor 1.78

                  Figure 4: An ND neighbor advertisement




















Bormann                  Expires April 26, 2011                 [Page 8]

Internet-Draft                 6lowpan-ghc                  October 2010


   Figure 5 shows the compression of an ND router solicitation.  Note
   that the relatively good compression is not caused by the many zero
   bytes in the link-layer address of this particular capture (which are
   unlikely to occur in practice): 7 of these 8 bytes are copied from
   the pseudo header (the 8th byte cannot be copied as the universal/
   local bit needs to be inverted).

   IP header:
    60 00 00 00 00 18 3a ff fe 80 00 00 00 00 00 00
    ae de 48 00 00 00 00 01 ff 02 00 00 00 00 00 00
    00 00 00 00 00 00 00 02
   Payload:
    85 00 90 65 00 00 00 00 01 02 ac de 48 00 00 00
    00 01 00 00 00 00 00 00
   Pseudoheader:
    fe 80 00 00 00 00 00 00 ae de 48 00 00 00 00 01
    ff 02 00 00 00 00 00 00 00 00 00 00 00 00 00 02
    00 00 00 18 00 00 00 3a
   copy: 04 85 00 90 65
   ref(33): 00 00 00 00 01 -> ref 101nssss 0 3/11nnnkkk 3 4: a3 dc
   copy: 02 02 ac
   ref(42): de 48 00 00 00 00 01
    -> ref 101nssss 0 4/11nnnkkk 5 3: a4 eb
   6 nulls: 84
   Compressed:
    04 85 00 90 65 a3 dc 02 02 ac a4 eb 84
   Was 24 bytes; compressed to 13 bytes, compression factor 1.85

                                 Figure 5

   Figure 6 shows the compression of an ND router advertisement.  The
   indefinite lifetime is compressed to four bytes by backreferencing;
   this could be improved (at the cost of minor additional decompressor
   complexity) by including some simple runlength mechanism.

















Bormann                  Expires April 26, 2011                 [Page 9]

Internet-Draft                 6lowpan-ghc                  October 2010


   IP header:
    60 00 00 00 00 60 3a ff fe 80 00 00 00 00 00 00
    10 34 00 ff fe 00 11 22 fe 80 00 00 00 00 00 00
    ae de 48 00 00 00 00 01
   Payload:
    86 00 55 c9 40 00 0f a0 1c 5a 38 17 00 00 07 d0
    01 01 11 22 00 00 00 00 03 04 40 40 ff ff ff ff
    ff ff ff ff 00 00 00 00 20 02 0d b8 00 00 00 00
    00 00 00 00 00 00 00 00 20 02 40 10 00 00 03 e8
    20 02 0d b8 00 00 00 00 21 03 00 01 00 00 00 00
    20 02 0d b8 00 00 00 00 00 00 00 ff fe 00 11 22
   Pseudoheader:
    fe 80 00 00 00 00 00 00 10 34 00 ff fe 00 11 22
    fe 80 00 00 00 00 00 00 ae de 48 00 00 00 00 01
    00 00 00 60 00 00 00 3a
   copy: 0c 86 00 55 c9 40 00 0f a0 1c 5a 38 17
   2 nulls: 80
   copy: 06 07 d0 01 01 11 22
   4 nulls: 82
   copy: 06 03 04 40 40 ff ff
   ref(2): ff ff -> ref 11nnnkkk 0 0: c0
   ref(4): ff ff ff ff -> ref 11nnnkkk 2 0: d0
   4 nulls: 82
   copy: 04 20 02 0d b8
   12 nulls: 8a
   copy: 04 20 02 40 10
   ref(38): 00 00 03 -> ref 101nssss 0 4/11nnnkkk 1 3: a4 cb
   copy: 01 e8
   ref(24): 20 02 0d b8 00 00 00 00
    -> ref 101nssss 0 2/11nnnkkk 6 0: a2 f0
   copy: 02 21 03
   ref(84): 00 01 00 00 00 -> ref 101nssss 0 9/11nnnkkk 3 7: a9 df
   ref(40): 00 20 02 0d b8 00 00 00 00 00 00 00
    -> ref 101nssss 1 3/11nnnkkk 2 4: b3 d4
   ref(120): ff fe 00 11 22
    -> ref 101nssss 0 14/11nnnkkk 3 3: ae db
   Compressed:
    0c 86 00 55 c9 40 00 0f a0 1c 5a 38 17 80 06 07
    d0 01 01 11 22 82 06 03 04 40 40 ff ff c0 d0 82
    04 20 02 0d b8 8a 04 20 02 40 10 a4 cb 01 e8 a2
    f0 02 21 03 a9 df b3 d4 ae db
   Was 96 bytes; compressed to 58 bytes, compression factor 1.66

                   Figure 6: An ND router advertisement







Bormann                  Expires April 26, 2011                [Page 10]

Internet-Draft                 6lowpan-ghc                  October 2010


4.  Integrating 6LoWPAN-GHC into 6LoWPAN-HC

   6LoWPAN-GHC is intended to plug in as an NHC format for 6LoWPAN-HC
   [I-D.ietf-6lowpan-hc].  This section shows how this can be done
   (without supplying the detailed normative text yet, although it could
   be implemented from this page).

   GHC is by definition generic and can be applied to different kinds of
   packets.  All the examples given above are for ICMPv6 packets; it is
   trivial to define an NHC format for ICMPv6 based on GHC.

   In addition it may be useful to include an NHC format for UDP, as
   many headerlike payloads (e.g., DHCPv6) are carried in UDP.
   [I-D.ietf-6lowpan-hc] already defines an NHC format for UDP
   (11110CPP).  What remains to be done is to define an analogous NHC
   byte formatted, e.g. as shown in Figure 7, and simply reference the
   existing specification, indicating that for 0b11010cpp NHC bytes, the
   UDP payload is not supplied literally but compressed by 6LoWPAN-GHC.

                      0   1   2   3   4   5   6   7
                    +---+---+---+---+---+---+---+---+
                    | 1 | 1 | 0 | 1 | 0 | C |   P   |
                    +---+---+---+---+---+---+---+---+

                 Figure 7: A possible NHC byte for UDP GHC

   To stay in the same general numbering space, we propose 0b11011111 as
   the NHC byte for IPCMPv6 GHC.

4.1.  Compressing extension headers

   If the compression of specific extension headers is considered
   desirable, this can be added in a similar way, e.g. as in Figure 8
   (however, probably only EID 0 to 3 need to be assigned).  As there is
   no easy way to extract the length field from the GHC-encoded header
   before decoding, this would make detecting the end of the extension
   header somewhat complex.  The easiest (and most efficient) approach
   is to completely elide the length field (in the same way NHC already
   elides the next header field in certain cases) and reconstruct it
   only on decompression.  Instead, the reserved bytecode 0b10010000
   would be assigned as a stop marker.

                      0   1   2   3   4   5   6   7
                    +---+---+---+---+---+---+---+---+
                    | 1 | 0 | 1 | 1 |    EID    |NH |
                    +---+---+---+---+---+---+---+---+

          Figure 8: A possible NHC byte for extension header GHC



Bormann                  Expires April 26, 2011                [Page 11]

Internet-Draft                 6lowpan-ghc                  October 2010


5.  IANA considerations

   In the IANA registry for the LOWPAN_NHC header type, IANA would need
   to add the assigments in Figure 9.

    10110IIN: Extension header GHC*)               [RFCthis]
    11010CPP: UDP GHC                              [RFCthis]
    11011111: ICMPv6 GHC                           [RFCthis]

                Figure 9: IANA assignments for the NHC byte

   *) if the functionality of Section 4.1 is made part of this document.







































Bormann                  Expires April 26, 2011                [Page 12]

Internet-Draft                 6lowpan-ghc                  October 2010


6.  Acknowledgements

   Colin O'Flynn has repeatedly insisted that some form of compression
   for ICMPv6 and ND packets might be beneficial.  He actually has his
   own draft, [I-D.oflynn-6lowpan-icmphc], which compresses better, but
   addresses basic ICMPv6/ND only and needs a much longer spec (around
   17 pages of detailed spec, as compared to the single page here).
   This motivated the author to try something simple, yet general.

   The examples given are based on pcap files that Colin O'Flynn and
   Owen Kirby provided.








































Bormann                  Expires April 26, 2011                [Page 13]

Internet-Draft                 6lowpan-ghc                  October 2010


7.  Security Considerations

   (To be worked out.  Probably mostly about the need to avoid buffer
   overflows and out-of-area references during decompression.)















































Bormann                  Expires April 26, 2011                [Page 14]

Internet-Draft                 6lowpan-ghc                  October 2010


8.  References

8.1.  Normative References

   [I-D.ietf-6lowpan-hc]
              Hui, J. and P. Thubert, "Compression Format for IPv6
              Datagrams in 6LoWPAN Networks", draft-ietf-6lowpan-hc-13
              (work in progress), September 2010.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2460]  Deering, S. and R. Hinden, "Internet Protocol, Version 6
              (IPv6) Specification", RFC 2460, December 1998.

   [RFC4944]  Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler,
              "Transmission of IPv6 Packets over IEEE 802.15.4
              Networks", RFC 4944, September 2007.

8.2.  Informative References

   [I-D.oflynn-6lowpan-icmphc]
              O'Flynn, C., "ICMPv6/ND Compression for 6LoWPAN Networks",
              draft-oflynn-6lowpan-icmphc-00 (work in progress),
              July 2010.

   [RFC1951]  Deutsch, P., "DEFLATE Compressed Data Format Specification
              version 1.3", RFC 1951, May 1996.

   [RFC3095]  Bormann, C., Burmeister, C., Degermark, M., Fukushima, H.,
              Hannu, H., Jonsson, L-E., Hakenberg, R., Koren, T., Le,
              K., Liu, Z., Martensson, A., Miyazaki, A., Svanbro, K.,
              Wiebke, T., Yoshimura, T., and H. Zheng, "RObust Header
              Compression (ROHC): Framework and four profiles: RTP, UDP,
              ESP, and uncompressed", RFC 3095, July 2001.

   [RFC5795]  Sandlund, K., Pelletier, G., and L-E. Jonsson, "The RObust
              Header Compression (ROHC) Framework", RFC 5795,
              March 2010.












Bormann                  Expires April 26, 2011                [Page 15]

Internet-Draft                 6lowpan-ghc                  October 2010


Author's Address

   Carsten Bormann
   Universitaet Bremen TZI
   Postfach 330440
   Bremen  D-28359
   Germany

   Phone: +49-421-218-63921
   Fax:   +49-421-218-7000
   Email: cabo@tzi.org








































Bormann                  Expires April 26, 2011                [Page 16]

