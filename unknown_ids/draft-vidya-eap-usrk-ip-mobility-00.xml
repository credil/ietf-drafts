<?xml version="1.0" encoding="UTF-8"?>
 <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
 <!DOCTYPE rfc SYSTEM "file:/C:/Documents%20and%20Settings/ldondeti/My%20Documents/Standards/IETF/Current%20IETF%20I-Ds/rfc2629.dtd"[
 <!ENTITY rfc2119 PUBLIC '' 
 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
 <!ENTITY rfc3748 PUBLIC '' 
 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3748.xml'>
 <!ENTITY rfc4306 PUBLIC '' 
 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4306.xml'>
 <!ENTITY eapkeying SYSTEM 
 "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-eap-keying.xml">
 <!ENTITY emskderiv SYSTEM
 "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-hokey-emsk-hierarchy.xml">
 <!ENTITY erp SYSTEM
 "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-hokey-erx.xml">
 <!ENTITY hmip6 SYSTEM
 "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-mipshop-4140bis.xml">
 <!ENTITY fmip6 SYSTEM
 "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-mipshop-fmipv6-rfc4068bis.xml">
 <!ENTITY rfc2434 PUBLIC '' 
 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2434.xml'>
 <!ENTITY rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
 <!ENTITY rfc3775 PUBLIC '' 
 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3775.xml'>
 <!ENTITY rfc3344 PUBLIC '' 
 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3344.xml'>

 ]>
 <?rfc toc="yes"?>
 <?rfc compact="yes"?>
 <?rfc subcompact="no"?>
 <?rfc sortrefs="yes" ?>
 <?rfc symrefs="no"?>
 <?rfc comments="yes"?>
 <?rfc inline="no"?>
<rfc ipr="full3978" docName="draft-vidya-eap-usrk-ip-mobility-00">
    <front>
        <title abbrev="draft-vidya-eap-usrk-ip-mobility">EAP-Based Keying for IP Mobility Protocols</title>
        <author fullname="Vidya Narayanan" initials="V" surname="Narayanan">
            <organization>Qualcomm, Inc.</organization>
            <address> <postal> 
                <street>5775 Morehouse Dr</street> 
                <city>San Diego</city>
                <region>CA</region>
                <country>USA</country>
            </postal>
                <email>vidyan@qualcomm.com</email>
            </address>
        </author>
        <date month="June" year="2007"/>
        <area> </area>
        <workgroup>Network Working Group</workgroup>
        <keyword>Internet-Draft</keyword>
        <keyword>Mobile IP</keyword>
        <keyword>EAP</keyword>
        <keyword>Authentication</keyword>
        <abstract>
            <t>EAP <xref target="RFC3748"/> is increasingly used for network access authentication
                in various networks. Also, key generating EAP methods are being adopted in various
                systems for the purposes of cryptographic protection between an EAP peer and an
                enforcement point in the network. Key generating EAP methods produce an MSK and an
                EMSK in accordance with <xref target="RFC3748"/>. The MSK is meant for use by the
                EAP lower layer at the peer and the authenticator and is used differently by various
                lower layers. The EMSK hierarchy is defined in <xref
                    target="I-D.ietf-hokey-emsk-hierarchy"/>. The EMSK hierarchy is meant to be
                extensible to derive keys for various usages. This document defines the key
                hierarchy and key derivations for using the EMSK hierarchy for keying in IP mobility
                protocols. </t>
        </abstract>
    </front>
    <middle>
        <section title="Introduction" anchor="intro">
            <section title="EAP Keying Overview">
                <t>EAP-based authentication is being adopted in several networks for access control
                    purposes. Key generating EAP methods are often used to allow some key material
                    to be available for cryptographic access enforcement in various lower layers. As
                    defined in <xref target="RFC3748"/>, key generating EAP methods produce a Master
                    Session Key (MSK) and an Extended Master Session Key (EMSK) and the MSK is
                    provided to the lower layer. Several lower layers use the MSK in various
                    different ways. </t>
                <t>The EMSK hierarchy for EAP is defined in <xref
                        target="I-D.ietf-hokey-emsk-hierarchy"/>. The EMSK hierarchy is meant to be
                    extensible to derive keys for various usages. In accordance with the defined
                    EMSK hierarchy, Usage Specific Root Keys (USRK) and Domain Specific Root Keys
                    (DSRK) may be derived from the EMSK. USRKs are meant to be defined for specific
                    usages and the scope of the key will be determined by the EAP Server (or the
                    home AAA server) of the peer. On the other hand, the DSRKs are limited in scope
                    to a specific domain and are meant to be distributed to local AAA servers in
                    different domains. The DSRK may then be used to derive various Domain Specific
                    USRKs (DS-USRK), which are defined for specific usages within the domain for
                    which the DSRK is valid. </t>
            </section>
            <section title="Motivation for EAP-Based Keying in IP Mobility Protocols"
                anchor="motivation">
                <t>Several IP mobility protocols require cryptographic key material for
                    authentication of signaling messages. When one or more of these protocols is
                    used in a system by end devices that perform network access authentication using
                    EAP, it is plausible to derive keys for use in such mobility protocols using the
                    EMSK key hierarchy. This prevents the need for having any pre-configured key
                    material being available for each of these protocols used.</t>
                <t>The need for pre-configured keying material leads to some malpractices in
                    practical usage. For instance, greater the number of pre-configured keys
                    required, the more re-use of a single key across various usages tend to occur.
                    This potentially leads to lack of appropriate cryptographic independence across
                    various keys derived from a given PSK. Also, PSKs tend to be configured and kept
                    around for long periods of time, due to management issues with frequent
                    refreshes. Consequently, it proves to be a disadvantage in several systems to
                    have to require a PSK to be available between an end node and network entities
                    for every application that may be used by the end node. </t>
                <t>Traditionally, most of the IP mobility protocols have used symmetric keys for
                    message authentication between the end nodes and the mobility agent (the entity
                    in the network terminating the mobility signaling and enabling IP mobility
                    management for the end node). These symmetric keys may either be pre-configured
                    at the end node and the mobility agent or may be dynamically derived from a
                    different pre-configured key between the end node and a AAA server. For ease of
                    credential management, a AAA-based credential is often used in various systems.
                    For example, Mobile IPv4 <xref target="RFC3344"/> allows derivation of an MN-HA
                    key based on an available shared MN-AAA key between the MN and the AAA server.
                    Mobile IPv6 <xref target="RFC3775"/> recommends the use of IPsec for securing
                    the messaging. In that case, IKEv2 with EAP for client authentication is often
                    used as a means for keying IPsec, since EAP allows re-use of AAA-based
                    credentials. It is also plausible that manually keyed IPsec is used between the
                    MN and the HA, in which case, there needs to be a PSK between the MN and HA.
                    Similarly, HMIP <xref target="I-D.ietf-mipshop-4140bis"/> also recommends the
                    use of IPsec keyed using IKEv2 with EAP for client authentication. Further,
                    FMIPv6 <xref target="I-D.ietf-mipshop-fmipv6-rfc4068bis"/> also requires
                    protection of signaling messages using symmetric keys between a mobile node and
                    an access router. These symmetric keys may be derived using AAA-based
                    mechanisms, in which case, the MN and AAA server are expected to share a PSK. </t>
                <t>Since the AAA server responsible for distributing key material for mobility
                    agents is the same as the EAP or ERP server that already shares key material
                    with the MN, a mechanism of using the EAP-derived keys to provide key material
                    for other uses provides a meaningful means of avoiding the need for additional
                    PSKs between the MN and AAA server. </t>

            </section>
            <section title="Scope" anchor="scope">
                <t>This document describes EAP-based key derivations for the following protocols -
                    Mobile IPv4, Mobile IPv6, Hierarchical Mobile IPv6, Fast Mobile IPv4, Fast
                    Mobile IPv6. The USRK labels required for these protocols as well as derivation
                    of keys needed between the MN and the corresponding mobility agents are
                    described. Further, the properties of the various keys and usage guidelines are
                    also specified. It is, however, left to other individual documents to describe
                    the exact signaling mechanisms that will trigger this keying process and enable
                    key delivery to mobility agents. </t>
                <t>The scope of this document is limited to the protocols listed above. Also, the
                    scope is limited to the case where the EMSK or DSRK holder is deriving the
                    appropriate USRKs for the end node and distributing any keys derived from the
                    USRKs to appropriate mobility agents. </t>
            </section>
        </section>
        <section title="Terminology">
            <t> The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
                "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
                interpreted as described in RFC 2119 <xref target="RFC2119"/>. </t>
            <t> This document uses terminology defined in <xref target="RFC3775"/>, <xref
                    target="I-D.ietf-mipshop-4140bis"/>, <xref
                    target="I-D.ietf-mipshop-fmipv6-rfc4068bis"/>, <xref target="RFC3748"/> and
                    <xref target="I-D.ietf-hokey-emsk-hierarchy"/>. </t>
            <t> In addition, this document uses the following terms: </t>
            <t>
                <list style="hanging">
                    <t hangText="Mobility Agent">
                        <vspace blankLines="1"/> A mobility agent is an entity maintaining state
                        about the location of the mobile nodes. Examples of mobility agents include
                        the Mobile IP Home Agent (HA), the HMIP MAP, the FMIP PAR, etc. </t>
                </list>
            </t>
        </section>

        <section title="Overview of EAP-Based Keying for IP Mobility Protocols" anchor="overview">
            <t>As described in <xref target="motivation"/>, there is good reason for bootstrapping
                the keys needed for IP mobility protocols using EAP generated key material. The
                basic assumption here is that EAP is used for access authentication between the
                mobile node and a AAA server that is also responsible for providing or managing keys
                for the IP mobility services provided in the network. Alternately, EAP
                Re-authentication Protocol (ERP) <xref target="I-D.ietf-hokey-erx"/> may be used
                between the MN and the ERP Server that is responsible for providing key material for
                IP mobility services. </t>
            <t>For the purpose of this document , the terms "Mobile Node (MN)", "Peer" and "End
                Node" are interchangeably used. </t>

            <section title="Requirements" anchor="reqs">
                <t>The following requirements need to be met in order to use the mechanism described
                    here for EAP-based keying of IP mobility protocols. </t>
                <t>
                    <list style="symbols">
                        <t>The EMSK or DSRK holder is also the entity responsible for deriving any
                            keys required for use between the mobile node and a mobility agent. </t>
                        <t>There must be a secure channel for key transport between the mobility
                            agent requesting a Mobility Usage Session Key (MUSK) and the AAA server
                            that is deriving and distributing the key. </t>
                    </list>
                </t>

            </section>

            <t>
                <figure title="EAP-Based IP Mobility Keying Architecture" anchor="key_arch">
                    <artwork><![CDATA[

  -----------------------------------------
 |                          Home System    |
 |                                         |
 |    ----------------     -------------   |
 |   | Mobility Agent |   |  AAA Server |  |
 |    ----------------     -------------   |
 |                                         |
  -----------------------------------------
             |              |
             |              |
           --------------------
          (                    )
          (     IP Network     )
          (                    )
           --------------------
             |              |
             |              |
  -----------------------------------------
 |                         Local System    |
 |                                         |
 |    ----------------     -------------   |
 |   | Mobility Agent |   |  ERP Server |  |
 |    ----------------     -------------   |
 |                                         |
  -----------------------------------------
                |
                |
         -------------
        | Mobile Node | 
         -------------

]]>
                    </artwork>
                </figure>
            </t>

            <t><xref target="key_arch"/> shows the various components that enable EAP-based IP
                mobility keying. It is assumed that the MN uses EAP for authentication upon
                attachment to the network at any point prior to starting any IP mobility sessions
                with one or more mobility agents. It is further assumed that a key generating EAP
                method is used in the EAP exchange, resulting in an EMSK being available at the MN
                as well as at the home AAA server. A Domain Specific Root Key (DSRK) may also be
                available at a local AAA server in accordance with <xref
                    target="I-D.ietf-hokey-emsk-hierarchy"/>. </t>

            <t>When a valid EMSK or DSRK is available, usage specific root keys may be derived from
                those for different uses, in accordance with <xref
                    target="I-D.ietf-hokey-emsk-hierarchy"/>. This document proposes the derivation
                of USRKs that are needed for host-based IP mobility protocols. For each protocol, a
                separate label for root key generation is registered in this document. Further, the
                framework for derivation of integrity and mobility session keys is also provided. </t>

        </section>

        <section title="Key Hierarchy and Derivation Framework" anchor="key_hierarchy">
            <t>
                <figure title="EAP Based IP Mobility Key Hierarchy" anchor="key_hier">
                    <artwork><![CDATA[

                EMSK/DSRK
                    |
                    |
              Mobility Root Key (MRK)
                    |
                    |
          +----------------------------+
          |                            |
  Mobility Integrity Key (MIK)    Mobility Usage Session Key (MUSK)
                        ]]>
                    </artwork>
                </figure>
            </t>
            <t><xref target="key_hier"/> shows the key hierarchy for deriving IP mobility related
                keys from EAP-based keys. The keys may be derived from the EMSK or the DSRK,
                depending on whether the keys are being derived at the home domain or the local
                domain. </t>
            <section title="Mobility Root Key (MRK) Derivation and Properties">
                <section title="MRK Derivation">
                    <t>The Mobility Root Key (MRK) is calculated in accordance with the USRK
                        derivation described in <xref target="I-D.ietf-hokey-emsk-hierarchy"/> as
                        shown below: </t>
                    <t>MRK = KDF(Key, Mobility Key Label, Optional Data, Length)</t>
                    <t>where,</t>
                    <t>Key = EMSK or DSRK </t>
                    <t>Mobility Key Label = the specific label defined for the particular IP
                        mobility protocol</t>
                    <t>Optional Data = NULL</t>
                    <t>Length = 2 byte unsigned integer in network byte order of the output key
                        length in octets</t>
                    <t>The KDF is as defined in <xref target="I-D.ietf-hokey-emsk-hierarchy"/> and
                        the default PRF used is HMAC-SHA-256. Alternatively, the PRF used MAY be the
                        same as that used by the EAP method - using the PRF from the EAP method
                        provides algorithm agility. </t>

                    <t>The MRK-Name is calculated as follows, in accordance with <xref
                            target="I-D.ietf-hokey-emsk-hierarchy"/>.</t>
                    <t>MRK_Name = prf-64( EAP Session-ID, Mobility Key Label ), where prf-64 is the
                        first 64 bits from the output</t>
                    <t> The following mobility key labels are specified in this document. </t>
                    <t>
                        <list style="symbols">
                            <t>MIP4: "Mobile IPv4 Root Key"</t>
                            <t>MIP6: "Mobile IPv6 Root Key"</t>
                            <t>HMIPv6: "Hierarchical Mobile IPv6 Root Key"</t>
                            <t>FMIPv6: "Fast Mobile IPv6 Root Key"</t>
                        </list>
                    </t>
                    <t>Based on the above labels, the following are the specific root keys defined
                        for the various IP mobility protocols: </t>
                    <t>
                        <list style="symbols">
                            <t>MIP4-RK = KDF (Key, "Mobile IPv4 Root Key", Optional Data, Length) </t>
                            <t>MIP6-RK = KDF (Key, "Mobile IPv6 Root Key", Optional Data, Length)</t>
                            <t>HMIP6-RK = KDF (Key, "Hierarchical Mobile IPv6 Root Key", Optional
                                Data, Length)</t>
                            <t>FMIP6-RK = KDF (Key, "Fast Mobile IPv6 Root Key", Optional Data,
                                Length)</t>
                        </list>
                    </t>
                    <t>where, Optional Data is NULL and length is a 2 byte unsigned integer in
                        network byte order of the output key length in octets, as described above.
                    </t>
                </section>

                <section title="MRK Properties">
                    <t> The MRK has the following properties. These properties apply to the MRK
                        regardless of the parent key used to derive it. <list style="symbols">
                            <t> The length of the MRK MUST be at least 64 bytes. </t>
                            <t> The MRK is to be used only as a root key for the corresponding IP
                                mobility protocol and MUST never be used to directly protect any
                                data. </t>
                            <t> The MRK is only used for derivation of MIK and MUSK as specified in
                                this document. </t>
                            <t> The MRK must remain on the MN and the server that derived it and
                                MUST NOT be transported to any other entity. </t>
                            <t> The MRK is cryptographically separate from any other key derived
                                from its parent key. </t>
                            <t> The lifetime of the MRK is never greater than that of its parent
                                key. The MRK is expired when the parent key expires and removed from
                                use at that time. </t>
                        </list>
                    </t>
                </section>

            </section>

            <section title="Mobility Integrity Key (MIK) Derivation and Properties">
                <section title="MIK Derivation">
                    <t>The Mobility Integrity Key (MIK) is the key used to protect any exchange
                        between the MN and the server deriving the MRK, to prove possession of the
                        MRK and authorize distribution of key material to a mobility agent. </t>
                    <t> The MIK is derived from the MRK using the prf+ operation defined in RFC4306
                            <xref target="RFC4306"/> as follows. </t>
                    <t> MIK = prf+ (MRK, "Mobility Integrity Key") </t>
                    <t> The PRF used MAY be the same as that used by the EAP method - using the PRF
                        from the EAP method provides algorithm agility. Otherwise, the default PRF
                        used is HMAC-SHA-256. </t>
                    <t> The MIK name is derived as follows. </t>
                    <t> MIK_name = prf-64 (MRK, "MIK Name") </t>
                    <t> where prf-64 is the first 64 bits from the output of the PRF. The PRF is the
                        same as that used in the derivation of the MIK.</t>
                </section>
                <section title="MIK Properties">
                    <t> The MIK has the following properties. <list style="symbols">
                            <t> The length of the MIK depends on the MAC algorithm used in
                                protecting the exchange between the MN and the AAA server used to
                                prove possession of the MRK. The MAC algorithm used MAY be specified
                                in the corresponding mobility protocol message sent by the peer. The
                                default MAC algorithm is HMAC-SHA-256.</t>
                            <t> The MIK MUST only be used for authentication of message exchange
                                between the MN and the server that derived the MRK. This exchange
                                may occur through the mobility agent. </t>
                            <t> The MIK MUST NOT be used to derive any other keys. </t>
                            <t> The MIK must remain on the MN and the server that derived it and
                                MUST NOT be transported to any other entity. </t>
                            <t> The MIK is cryptographically separate from any other keys derived
                                from the MRK. </t>
                            <t> The lifetime of the MIK is never greater than that of its parent
                                key. The MIK is expired when the MRK expires and removed from use at
                                that time. </t>
                        </list>
                    </t>
                </section>
            </section>

            <section title="Mobility Usage Session Key (MUSK) Derivation and Properties">
                <section title="MUSK Derviation">
                    <t>The Mobility Usage Session Key (MUSK) is the key that is delivered to a
                        mobility agent for a particular mobility session between the MN and the
                        agent. This key may be used to protect the mobility signaling messages
                        between the MN and the mobility agent. The derivation of this key may be
                        triggered by signaling exchange specific to the mobility protocol that
                        requires the key and is not defined in this document An example of MUSK may
                        be the MN-HA Key as used in Mobile IPv4. </t>
                    <t> This document only specifies the framework for the MUSK derivation. The
                        actual inputs for the derivations are expected to be specified in documents
                        that define the actual protocol exchange that leads to the derivation. </t>
                    <t> The MUSK is derived from the MRK, using the prf+ operation defined in
                        RFC4306 <xref target="RFC4306"/>, as follows. </t>
                    <t> MUSK = prf+ (MRK, "Mobility Usage Session Key", Mobility Agent Identity,
                        Optional Data) </t>
                    <t> The PRF used MAY be the same as that used by the EAP method - using the PRF
                        from the EAP method provides algorithm agility. Otherwise, the default PRF
                        used is HMAC-SHA-256. </t>
                    <t>The inclusion of the mobility agent identity ensures the distribution of
                        different keys to different mobility agents that the MN may be using. This
                        identity may be in any form as specified by the documents that specify the
                        inputs for MUSK derivation in any specific IP mobility protocol. Examples of
                        Mobility Agent Identity are IP address, FQDN, etc. </t>
                    <t>It is RECOMMENDED that the optional data contain some freshness parameter
                        such as a nonce or a sequence number. </t>
                    <t> The MUSK name is derived as follows. </t>
                    <t> MUSK_name = prf-64 (MRK, "MUSK Name") </t>
                    <t> where prf-64 is the first 64 bits from the output of the PRF. The PRF is the
                        same as that used in the derivation of the MUSK.</t>
                </section>
                <section title="MUSK Properties">
                    <t>A MUSK has the following properties. </t>
                    <t>
                        <list style="symbols">
                            <t> The length of the MUSK depends on the MAC algorithm used in
                                protecting the intended mobility protocol exchanges between the MN
                                and the mobility agent. The MAC algorithm used MAY be specified in
                                the corresponding mobility protocol message sent by the peer or may
                                be pre-specified by the specific protocol. The default MAC algorithm
                                is HMAC-SHA-256. </t>
                            <t> The MUSK is cryptographically separate from any other keys derived
                                from the MRK. </t>
                            <t> The lifetime of the MUSK is less than or equal to that of the MRK.
                                It MUST NOT be greater than the lifetime of the MRK. </t>
                            <t> If a new MRK is derived, subsequent MUSKs must be derived from the
                                new MRK. Previously delivered MUSKs may still be used until the
                                expiry of the lifetime. </t>
                            <t> A given MUSK MUST NOT be shared by multiple mobility agents. </t>
                        </list>
                    </t>

                </section>

            </section>


        </section>



        <section title="Security Considerations" anchor="SecCons">
            <t>This document describes the use of EAP-based keys for IP mobility protocol keying.
                This provides a means of avoiding the need for multiple pre-shared keys being
                present between the MN and the AAA server. It may provide an optimization in some
                cases by making the key management of the IP mobility protocol simpler, but, that is
                rather a side effect. The following security considerations must be evaluated
                carefully before choosing EAP-based IP mobility keying mechanisms. </t>
            <t>In general, all the security considerations described in <xref
                    target="I-D.ietf-hokey-emsk-hierarchy"/> apply to this document as well. In addition,
                the following considerations apply. </t>
            <section title="Key Distribution">
                <t>The mobility agent is often a different entity from the one that acted as the NAS
                    or EAP authenticator during the EAP exchange that produced the EMSK. In order to
                    avoid mobility agents obtaining keys for mobile nodes that are not requesting
                    any mobility service from them, it is recommended that the MUSK be distributed
                    after some exchange between the MN and AAA server corresponding to the mobility
                    agent in question. For instance, this may be a mobility protocol exchange
                    between the MN and the mobility agent that contains some information protected
                    with the MIK, that can be verified by the AAA server. This basically allows peer
                    consent to be verified prior to distribution of a given key. </t>
                <t>Without peer consent, it is possible that a MUSK given out is never used. It may
                    be that it does not pose any particular problem in some systems, but, that may
                    depend on other factors. One example is whether the distribution of MUSK is in
                    any way related to any accounting or billing for the MN. Verifying peer consent
                    prior to MUSK distribution provides better security in such cases. </t>
            </section>
            <section title="Revocation of Keys">
                <t>Once an MUSK is handed out to a mobility agent, it may continue to be used until
                    its lifetime expires. This may be true even if a new EMSK is available before
                    that. However, if the EMSK is revoked for some reason and the peer (MN) is no
                    longer given access, continuing to use the MUSK may pose a security risk. In
                    many systems, once the EAP credentials or keys are revoked and the peer is no
                    longer allowed to access the system, the peer will be denied access to any other
                    service in the system as well and hence, the availability of MUSKs at a mobility
                    agent may not pose a risk. But, if the MN is able to use the IP mobility service
                    after its EAP key material has been revoked, the corresponding MUSKs SHOULD also
                    be revoked. This places a burden on AAA servers in such systems to be stateful
                    about the entities to which MUSKs have been handed out and is often undesirable.
                    However, this is assumed to be a rare requirement, since it is expected that the
                    peer will automatically be denied any service once its EAP key material is
                    revoked. </t>
            </section>

        </section>
        <section title="Acknowledgements" anchor="ack">
            <t>Thanks to Lakshminath Dondeti for his review and comments on this document. </t>
        </section>
    </middle>
    <back>
        <references> &rfc2119; &rfc3748; &rfc4306; &rfc3775; &rfc3344; &erp;
            &hmip6; &fmip6; &emskderiv;</references>
    </back>
</rfc>
