<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced. 
    An alternate method (rfc include) is described in the references. --><!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3501 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3501.xml">
<!ENTITY RFC2177 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2177.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-magicaltux-imap4-idleplus-00" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN" 
    they will automatically be output with "(if approved)" -->
  <!-- ***** FRONT MATTER ***** -->
  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
        full title is longer than 39 characters -->
    <title abbrev="IMAP4 IDLEPLUS extension">IMAP4 IDLEPLUS extension</title>
    <!-- add 'role="editor"' below for the editors if appropriate -->
    <author fullname="Mark Karpeles" initials="M.K." role="editor" surname="MagicalTux">
      <organization>K.K. Tibanne</organization>
      <address>
        <postal>
          <street>Fleur Tsuzuki 102</street>
          <street>5-24-30 Kugayama</street>
          <city>Suginami</city>
          <region>Toyko</region>
          <code>168-0082</code>
          <country>JP</country>
        </postal>
        <phone>+81 3 4550 1529</phone>
        <email>mark@tibanne.com</email>
        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>
    <date year="2010"/>
    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
        in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->
    <!-- Meta-data Declarations -->
    <area>General</area>
    <workgroup>Internet Engineering Task Force</workgroup>
    <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->
    <keyword>imap idle</keyword>
    <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->
    <abstract>
      <t>This document describes a new extension for IMAP4 servers. This new extension aims to extend the functions provided by the existing IDLE extension (RFC 2177) to better fit needs of current IMAP4 clients by allowing monitoring of multiple folders.</t>
      <t>Comments are solicited and should be addressed to the author.</t>
    </abstract>
  </front>
  <middle>
    <section title="Introduction">
      <t>Most modern IMAP4rev1 <xref target="RFC3501">RFC&nbsp;3501</xref> clients support so-called push-imap way to receive emails in realtime in the form of IMAP IDLE <xref target="RFC2177">RFC&nbsp;2177</xref>. Those clients usually want to receive real time notification of new emails or deleted emails in more than one imap folder, which is not supported by IMAP IDLE. To workaround this limitation, those clients will open one connection per monitored folder and cause unneeded load on those servers.</t>
      <t>A typical user will have INBOX, Draft and Sent folders. This can increase dramatically if the user makes use of folders to filter mails, causing some users to have up to 30 folders (and idle IMAP connections via TCP).</t>
      <t>This draft proposes a new way for IMAP clients to receive change notifications on many folders without having to keep many open connections to the IMAP server.</t>
      <section title="Conventions">
        <t>In examples, "C:" and "S:" indicate lines sent by the client and server respectively. If a single "C:" or "S:" label applies to multiple lines, then the line breaks between those lines are for editorial clarity only and are not part of the actual protocol exchange.</t>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
       "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
       document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>
    <section title="IMAP Protocol Changes">
      <t>The IDLEPLUS extension is present in any IMAP server implementation that returns "IDLEPLUS" as one of the supported capabilities to the CAPABILITY command.</t>
      <t>The IDLEPLUS extension defines an additional command.</t>
    </section>
    <section title="Specifications">
      <section title="IDLEPLUS Command">
        <t>
          <list hangIndent="16" style="hanging">
            <t hangText="Arguments:">none</t>
            <t hangText="Responses:">continuation data will be requested; the client sends the continuation data "DONE" to end the command</t>
            <t hangText="Result:">
              <list hangIndent="4" style="hanging">
                <t hangText="OK">IDLE completed after client sent "DONE"</t>
                <t hangText="NO">failure: the server will not allow the IDLEPLUS command at this time</t>
                <t hangText="BAD">command unknown or arguments invalid</t>
              </list>
            </t>
          </list>
        </t>
        <t>The IDLEPLUS command may be used with any IMAP4 server implementation that returns "IDLEPLUS" as one of the supported capabilities to the CAPABILITY command. If the server does not advertise the IDLEPLUS capability, the client MUST NOT use the IDLEPLUS command and may either poll for mailbox updates or connect multiple times to the IMAP server and use IDLE command from <xref target="RFC2177">RFC 2177</xref>. In particular, the client MUST continue to be able to accept unsolicited untagged responses to ANY command, as specified in the base IMAP specification.</t>
        <t>The IDLEPLUS command is sent from the client to the server when the client is ready to accept unsolicited mailbox update messages. The server requests a response to the IDLE command using the continuation ("+") response. The IDLE command remains active until the client responds to the continuation, and as long as an IDLE command is active, the server is now free to send untagged EXISTS, EXPUNGE, and other messages at any time.</t>
        <t>Untagged responses by IDLEPLUS are slightly different from those expected by calls to IDLE. Those are detailed in <xref target="idleplus_responses">IDLEPLUS Responses</xref>.</t>
        <t>The IDLEPLUS command is terminated by the receipt of a "DONE" continuation from the client; such response satisfies the server's continuation request. At that point, the server MAY send any remaining queued untagged responses and then MUST immediately send the tagged response to the IDLEPLUS command and prepare to process other commands. As in the base specification, the processing of any new command may cause the sending of unsolicited untagged responses, subject to the ambiguity limitations. The client MUST NOT send a command while the server is waiting for the DONE, since the server will not be able to distinguish a command from a continuation.</t>
        <t>The server MAY consider a client inactive if it has an IDLEPLUS command running, and if such a server has an inactivity timeout it MAY log the client off implicitly at the end of its timeout period. Because of that, clients using IDLEPLUS are advised to terminate the IDLEPLUS and re-issue it at least every 29 minutes to avoid being logged off. This still allows a client to receive immediate mailbox updates even though it need only "poll" at half hour intervals.</t>
      </section>
      <section anchor="idleplus_responses" title="IDLEPLUS Responses">
        <t>When in IDLEPLUS mode the server will send different kinds of untagged responses to the client. Each untagged response is made of the message UID, the response type and the folder in which the message is stored. The mailbox name MUST NOT contain 8bit characters. Mailbox names containing non-ASCII characters should be encoded with the IMAP modified UTF-7 syntax.</t>
        <t>The server MUST send untagged response for any activity in any of the user's subscribed folders. It MAY send untagged responses for activity in other folders, in which case the client MUST ignore messages it has no need for. The server SHOULD notify the client about message modified in other namespaces, unless this is technically not possible. In this case the server MUST notify the client of which namespaces cannot be monitored with the "EXCLUDES" tag in the continuation response.</t>
        <t>While the server has to provide past events to the client when entering IDLEPLUS, it MAY discard elements older than 30 minutes that were not transmitted to the client to avoid keeping too much data in memory. Additionally the server SHOULD start keeping track of those events after the first call of IDLEPLUS to avoid unnecessary load.</t>
        <t>In each case it is up to the client to interrupt the IDLEPLUS call and fetch informations about the changes (enveloppe of the new message for EXISTS or flags of the message for STORED).</t>
        <section title="EXISTS">
          <t>The EXISTS untagged response signals the arrival of a new message in the specified mailbox.</t>
        </section>
        <section title="EXPUNGE">
          <t>The EXPUNGE untagged response signals the deletion of a message in the specified mailbox.</t>
        </section>
        <section title="STORED">
          <t>The STORED untagged response signals a message has been changed. This usually means the flags of a given message were changed, for example if the message has been read or deleted (but not expunged yet). Even use of the ".SILENT" store suffix will still cause this untagged response.</t>
        </section>
      </section>
      <section title="Example">
        <t>
          <figure>
            <artwork><![CDATA[
C: A001 SELECT INBOX
S: * FLAGS (Deleted Seen)
S: * 3 EXISTS
S: * 0 RECENT
S: * OK [UIDVALIDITY 1]
S: A001 OK SELECT completed
C: A002 IDLEPLUS
S: + idling [EXCLUDES #news]
...time passes; new mail arrives...
S: * 884 EXISTS "Some Folder"
S: * 71 EXISTS INBOX
C: DONE
S: A002 OK IDLEPLUS terminated
...another client deletes mail 884 from Some Folder
C: A003 UID FETCH 71 ALL
S: * 4 FETCH (...)
S: A003 OK UID FETCH completed
C: A004 IDLE
S: * 884 EXPUNGE "Some Folder"
S: + idling [EXCLUDES #news]
]]></artwork>
          </figure>
        </t>
      </section>
    </section>
    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The editor would like to thank anyone helping to make this document into a RFC as this is his first attempt.</t>
    </section>
    <!-- Possibly a 'Contributors' section ... -->
    <section anchor="IANA" title="IANA Considerations">
      <t>The IDLEPLUS protocol keyworld needs to be registered in the imap4-capabilities registry via an IETF Review.</t>
    </section>
    <section anchor="Security" title="Security Considerations">
      <t>It is believed that this extension doesn't add any security considerations that are not already present in <xref target="RFC3501">the base IMAP protocol</xref></t>
    </section>
  </middle>
  <!--  *****BACK MATTER ***** -->
  <back>
    <!-- References split into informative and normative -->
    <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
    2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
       (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    directory as the including file. You can also define the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->
    <references title="Normative References"><!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
     &RFC2119;

   </references>
    <references title="Informative References"><!-- Here we use entities that we defined at the beginning. -->

     &RFC3501;

     &RFC2177;

   </references>
  </back>
</rfc>
