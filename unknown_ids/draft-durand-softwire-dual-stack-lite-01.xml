<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
<!ENTITY I-D.bound-dstm-exp SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.bound-dstm-exp.xml">
<!ENTITY I-D.droms-softwires-snat SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.droms-softwires-snat.xml">
<!ENTITY I-D.durand-dual-stack-lite SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.durand-dual-stack-lite.xml">
<!ENTITY RFC4966 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4966.xml">
<!ENTITY RFC2766 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2766.xml">
<!ENTITY RFC2663 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2663.xml">
<!ENTITY RFC2993 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2993.xml">
<!ENTITY RFC4787 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4787.xml">
<!ENTITY I-D.ietf-behave-tcp SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-behave-tcp.xml">
<!ENTITY I-D.ietf-behave-nat-icmp SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-behave-nat-icmp.xml">
<!ENTITY I-D.cheshire-nat-pmp SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.cheshire-nat-pmp.xml">
<!ENTITY I-D.dhankins-softwire-tunnel-option SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.dhankins-softwire-tunnel-option.xml">
<!ENTITY I-D.bajko-v6ops-port-restricted-ipaddr-assign SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.bajko-v6ops-port-restricted-ipaddr-assign.xml">
<!ENTITY I-D.ymbk-aplusp SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ymbk-aplusp.xml">
<!ENTITY I-D.despres-sam SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.despres-sam.xml">
<!ENTITY I-D.nishitani-cgn SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.nishitani-cgn.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-durand-softwire-dual-stack-lite-01" ipr="full3978">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Dual-stack lite">Dual-stack lite broadband deployments post IPv4 exhaustion</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Alain Durand" initials="A.D." role=""
            surname="Durand">
      <organization>Comcast</organization>

      <address>
        <postal>
          <street>1500 Market st</street>

          <!-- Reorder these if your country does things differently -->

          <city>Philadelphia</city>

          <region>PA</region>

          <code>19102</code>

          <country>USA</country>
        </postal>


        <email>alain_durand@cable.comcast.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

  <author fullname="Ralph Droms" initials="R."

           surname="Droms">

     <organization>Cisco</organization>



     <address>

       <postal>

         <street>1414 Massachusetts Avenue</street>



         <!-- Reorder these if your country does things differently -->



         <city>Boxborough</city>



         <region>MA</region>



         <code>01714</code>



         <country>US</country>

       </postal>



       <phone>+1 978.936.1674</phone>



       <email>rdroms@cisco.com</email>



       <!-- uri and facsimile elements may also be added -->

     </address>

   </author>

   <author fullname="Brian Haberman" initials="B." surname="Haberman">
<organization abbrev="JHU APL">Johns Hopkins University Applied Physics Lab</organization>

       <address>
         <postal>
           <street>11100 Johns Hopkins Road</street>

           <city>Laurel</city>

           <region>MD</region>

           <code>20723-6099</code>

           <country>US</country>
         </postal>
  <phone>+1 443 778 1319</phone>
         <email>brian@innovationslab.net</email>
      </address>
       
 
     </author>


     <author fullname="James Woodyatt" initials="J.H" surname="Woodyatt">
       <organization abbrev='Apple'>Apple Inc.</organization>
       <address>
         <postal>
           <street>1 Infinite Loop</street>
           <city>Cupertino</city>
           <region>CA</region>
           <code>95014</code>
           <country>US</country>
         </postal>
         <email>jhw@apple.com</email>
       </address>
     </author>


    <date year="2008" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>NAT</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>      The common thinking for more than 10 years has been that the transition to IPv6 will be based on the dual stack model and that most things would be converted this way before we ran out of IPv4.</t>

<t>It has not happened. The IANA free pool of IPv4 addresses will be depleted soon, well before any significant IPv6 deployment will have occurred.</t>

<t>
This document revisits the dual-stack model and introduces the dual-stack lite technology aimed at better aligning the costs and benefits of deploying IPv6. Dual-stack lite will provide the necessary bridge between the two protocols, offering an evolution path of the Internet post IANA IPv4 depletion.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>This document presents views on IP deployments after the exhaustion of IPv4 addresses and some of the necessary technologies to 
      achieve it. The views expressed are the authors' personal opinions and in no way imply that Comcast plans to deploy or that Cisco will implement the technologies described here.</t>

      <section title="Requirements language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
      
    <section title="Terminology">
    <t>
    This document makes a distinction between a dual-stack capable and a dual-stack provisioned device. The former is a device that has code that implements both IPv4 and IPv6, from the network layer to the applications. The later is a similar device that has been provisioned with both an IPv4 and an IPv6 address on its interface(s). This document will also further refine this notion by distinguishing between interfaces provisioned directly by the service provider from those provisioned by the customer.
    </t>
    </section>

   <section title="IPv4 exhaustion coming sooner than expected">
<t>
Global public IPv4 addresses coming from the IANA free pool are running out faster than many predicted a few years ago. The current model shows that exhaustion could happen as early as 2010 or 2011. See http://ipv4.potaroo.net for more details.
Those projection are based on the assumption that tomorrow is going to be very similar to today, i.e., looking at recent address consumption figures is a good indicator of future consumption patterns. This of course, does not take into account any new large scale deployment of IP technology or any human reaction when facing an upcoming shortage. </t>

<t>
The prediction of the exact date of exhaustion of the IANA free pool is outside the scope of this document, however one conclusion must be drawn from that study: there will be in the near future a point where new global public IPv4 addresses will not be available in large enough quantity thus any new broadband deployment may have to consider the option of not provisioning any (global) IPv4 addresses to the WAN facing interface of edge devices. However, the classic IPv6 deployment model known as "dual stack provisioning" can be a non starter in such environments. </t>
   </section>

</section>

   <section title="Handling the legacy">

     <t>The dual-stack lite technology is intended for maintaining
     connectivity to legacy IPv4 devices and networks after the
     exhaustion of the IPv4 address space while service
     provider networks make a transition to IPv6-only deployments.
     This section describes some of the specific legacy scenarios
     addressed by dual-stack lite.</t>

   <section title="Legacy edges of the Internet for broadband customers">
<t>
Broadband home customers have a mix and match of IP enabled devices. 
The most recent operating systems (e.g., Windows Vista, Mac OS X and
various versions of Linux) can operate in an IPv6-only environment;
however most of the legacy devices can't. Windows XP, for example, cannot process DNS requests over IPv6 transport. Expecting broadband customers to massively upgrade their software (and in most cases the corresponding hardware) to deploy IPv6 is a very tall order. </t>
   </section>

   <section title="Content and Services available on the Internet">
<t>
IPv6 deployment has taken a very long time to take off, so the current
situation is that almost none of the content and services available on
the Internet are accessible over IPv6. This situation will probably change in the future, but for now, one has to make the assumption that most of the traffic generated by (and to) broadband customers will be sent to (and originated by) IPv4 nodes.</t>
   </section>
   
      <section title="Additional impact on new broadband deployment">
<t>
Even when considering new, green field, broadband deployments, such as always-on 4G, service providers have to face the same situation as described above, that is, content and services available on the Internet are, today, generally accessible only over IPv4 and not IPv6. This makes adoption of IPv6 for green field deployment difficult. Solutions like NAT-PT, now deprecated, do not provide, as of today, a satisfying and scalable answer.</t>
   </section>
   

   <section title="Burden on service providers">
<t>
As a conclusion, broadband service providers may be faced with the
situation where they have IPv4 customers who need to communicate with
IPv4 servers on the Internet but may not have any IPv4 addresses left
to assign to those customers.  A service providers may also be in a
situation where it wants to deploy IPv6 in its core network, avoiding
the use of scarce IPv4 addresses.  However, without some form of
backward compatibility with IPv4, the cost and the benefits of
deploying IPv6 are not aligned, making incremental IPv6 deployment
very difficult.</t>
   </section>
   </section>



<section title="Expectations for dual-stack lite deployment">

<section title="Expectations for home gateway based scenarios">
<t>
This section mainly address home style networks characterized by the presence of a home gateway.</t>

<t>
Legacy, unmodified, IPv4-only devices inside the home network are expected to keep using RFC1918 address space, a-la 192.168.0.0/16 and should be able to access the IPv4 Internet in a similar way they do it today through a home gateway IPv4 NAT.</t>

<t>Unmodified IPv6 capable devices are expected to be able to reach directly the IPv6 Internet, without going through any translation. It is expected that most IPv6 capable devices will also be IPv4 capable and will simply be configured with an IPv4 RFC1918 style address within the home network and access the IPv4 Internet the same way as the legacy IPv4-only devices within the home.</t>

<t>IPv6-only devices that do not include code for an IPv4 stack are outside of the scope of this document.</t>

<t>It is expected that the home gateway is either software upgradable, replaceable or provided by the service provider as part of a new contract. Outside of early IPv6 deployments done prior to IPv4 exhaustion using some form of tunnel, this is pretty much a requirement to deploy any IPv6 service to the home. It is expected that this home gateway will be a dual stack capable device that would only be provisioned with IPv6 on its WAN side. IPv4 and IPv6 are expected to be locally provisioned on any LAN interfaces of such devices. IPv4 addresses on such interfaces are expected to be RFC1918. The key point here is that the service provider will not provision any IPv4 addresses for those home gateway devices.
</t>

</section>

<section title="Expectations for devices directly connected to the broadband service provider network">
<t>
Under this deployment model, devices directly connected to the broadband service provider network without the presence of a home gateway will have to be dual stack capable devices. The service provider facing interface(s) of such device will only be provisioned with IPv6. IPv4 may or may not be provisioned locally on other interfaces of such devices. Similarly to the above section, the key point here is that the service provider will not provision any IPv4 addresses for those directly connected devices.
</t>

<t>It is expected that directly connected devices will implement code to support the dual-stack lite functionality. The minimum support required is an IPv4 over IPv6 tunnel.</t>

<t>IPv4-only devices and IPv6-only devices are specifically left out of scope for this document. It is expected that most modern device directly connected to the service provider network would not have memory constraints to implement both stack. </t>
</section>
   
<section title="Application expectations">
<t>
Most applications that today work transparently through an IPv4 home gateway NAT should keep working the same way. However, it is not expected that applications that requires specific port assignment or port mapping from the NAT box will keep working. Details and recommendations for application behavior are outside the scope of this document and should be discussed in the behave working group.
</t>
</section>

<section title="Service provider network expectations">
<t>
The dual-stack lite deployment model is based on the notion that IPv4 addresses will be shared by several customers. This implies that the NAT functionality will move from the home gateway to a device hosted within the service provider network. It is important to observe that this functionality does not have to be performed deep in the core of the network and that it might be better implemented close to the aggregation point of customer traffic.
</t>
</section>

</section>


<section title="Dual-stack lite">
<t>
The core ideas behind dual-stack lite are:

  <list style="symbols">
    <t>Move from a deployment model where a globally unique IPv4
    address is provisioned per customer and shared among several
    devices within that customer premise to a deployment model where
    that globally unique IPv4 address is shared among many customers</t>
    <t>Provide transport of IPv4 traffic to customers over a core
    network that uses only IPv6
    </t>
  </list>
Instead of relying on a cascade of NATs or NAT-PT, the dual-stack lite
model is built on IPv4 over IPv6 tunnels to cross the network to reach
a carrier-grade IPv4-IPv4 NAT. As such, it simplifies the management of
the service provider network by using only IPv6 and provides the
customer the benefit of having only one layer of NAT. The additional
benefit of this model is to gradually introduce IPv6 in the Internet
by making it virtually backward compatible with IPv4.
</t>

<section title="Domain of application">
<t>
The dual-stack lite deployment model has been designed with broadband
networks in mind. It is certainly applicable to other domains although
the authors do not make any specific claim of suitability.
</t>
</section>

<section title="Dual-stack lite interface">
<t>
A dual-stack lite interface on a dual-stack capable device is modeled as a point to point IPv4 over IPv6 tunnel. Its configuration requires that the device is provisioned with IPv6 but does not require it to be provisioned with a global IPv4 by the service provider.
</t>

<t>
Any locally unique IPv4 address can be configured on the subscriber
network end of the dual-stack lite tunnel. In the case of dual-stack
lite in which the tunnel endpoint is in a host <xref
target="host-based-arch"/>, it is recommended that dual-stack lite
implementations use the well known value a.b.c.d (to be defined by
IANA) as the IPv4 host side of the tunnel and a.b.c.d+1 (TBD by IANA) as the address of the IPv4 default gateway, with a netmask to cover a /30 network.
</t>

<t>Note: because of this static configuration using well known values, there is no need to run a DHCPv4 client on a Dual-stack lite interface.</t>

<t>
The service provider network end point of a dual-stack lite interface
is the IPv6 address of a dual-stack lite carrier-grade NAT within the
service provider network.
</t>
</section>


<section title="Dual-stack lite device">
<t>
A dual-stack lite device is a dual-stack capable device implementing a dual-stack lite interface. In the absence of better routing information, a dual-stack lite device will configure a static IPv4 default route over the dual-stack lite interface.</t>
</section>


<section title="Dual-stack lite home router">
<t>
A dual-stack lite home router is a dual-stack capable home router implementing a dual-stack lite interface layered on top of its WAN interface. In the absence of better routing information, a dual-stack lite home router will configure a static IPv4 default route over the dual-stack lite interface. The dual-stack lite home router can use the IPv4 address a.b.c.d (TBD by IANA) to source its own IPv4 packets, embedded into the IPv6 tunnel. If the dual-stack lite home router need to configure a router pointing to an IPv4 default router, it can use the value a.b.c.d+1 (TBD by IANA) for that purpose with a prefix It also configure a.b.c.d+1 (TBD by IANA), with a netmask to cover a /30 network.
</t>
<t>
Note: a dual-stack lite home router SHOULD NOT perform any IPv4 address translation. It should simply act as a router and pass packets from the LAN to the dual-stack lite interface and back without changing any address. The dual-stack lite router will have to take into account the lowered MTU of the tunnel and possibly perform IPv4 fragmentation.
</t>
</section>

<section title="Dual-stack lite router">
<t>
The concept of a dual-stack lite home router can be extended to any IPv4 router serving as a gateway between a leaf IP domain and the rest of the Internet.
</t>
</section>


<section title="Discovery of the dual-stack lite carrier-grade NAT device">
<t>
The IPv6 address of a dual-stack lite carrier-grade NAT device can be
configured on a dual-stack lite interface using a variety of methods,
ranging from an out-of-band mechanism, manual configuration, a
to-be-defined DHCPv6 option <xref target="I-D.dhankins-softwire-tunnel-option" /> or a to-be-defined IPv6 router
advertisement. It is expected that over time some or all the above
methods, as well as others, will be defined. The requirements and specifications of such methods are out of scope for this document.
</t>
</section>


<section title="Dual-stack lite carrier-grade NAT">
<t>
A dual-stack lite carrier grade NAT is a special IPv4 to IPv4 NAT deployed within the service provider network. It is reachable by customers via a series of point to point IPv4 over IPv6 tunnels.
</t>

<t>
A dual-stack lite carrier-grade NAT uses a combination of the IPv6 source address of the tunnel and the inner IPv4 source address to establish and maintain the IPv4 NAT mapping table.
</t>

<t>
A dual-stack lite carrier-grade NAT does not have to perform any IPv6-IPv6, IPv6-IPv4 or IPv4-IPv6 NAT.
</t>

<t>A dual-stack lite carrier-grade NAT can use the IPv4 address a.b.c.d+1 (TBD by IANA) in the IPv4 ICMP packets it will originate toward a dual-stack lite client to enable meaningful ping and traceroute results.</t>


</section>



</section>

<section title="Example architectures">

     <t>The underlying technology behind dual-stack lite is the combination of two
     well-known technologies: NAT and tunneling. This combination can be best described using the
     terminology developed in the softwire working group as Softwire NAT, or SNAT.</t>
     
     <t>Two architectures can be deployed for dual-stack lite. One is
     targeting the legacy installed base of IPv4 only hosts (and dual-stack capable hosts) sitting behind a gateway. The second is targeting dual-stack capable hosts initiating the tunnel themselves. </t>

   <section title="Router-based architecture">
   <t>This architecture is targeted at residential broadband deployments but can be adapted easily to other types of deployment where the installed base of IPv4-only device is important.</t>
   

     <t>As illustrated in <xref target="gnat-arch"/>, this dual-stack
     lite deployment model consists of three components: the
     dual-stack lite home router, the dual-stack lite carrier-grade
     NAT and a softwire between the softwire initiator (SI) in the
     dual-stack lite home router and the softwire concentrator (SC) in
     the dual-stack lite carrier-grade NAT.  The dual-stack lite
     carrier-grade NAT performs IPv4-IPv4 NAT translations to
     multiplex multiple subscribers through a single global IPv4
     address.  Overlapping address spaces used by subscribers are
     disambiguated through the identification of tunnel endpoints.</t>
    
     
     <figure align="center" anchor="gnat-arch" title="SNAT gateway-based architecture">
       <preamble></preamble>
       <artwork align="left"><![CDATA[

                +-----------+                   
                |    Host   |                   
                +-----+-----+                   
                      |10.0.0.1
                      |                        
                      |                         
                      |10.0.0.2                 
            +---------|---------+               
            |         |         |
            |dual-stack lite home router
            |+--------+--------+|
            ||     SNAT SI     ||               
            |+--------+--------+|               
            +--------|||--------+               
                     |||2001:0:0:1::1            
                     |||
                     |||<-IPv4-in-IPv6 softwire
                     |||                         
              -------|||-------                   
            /        |||        \
           |   ISP core network  |              
            \        |||        /
              -------|||-------
                     |||                        
                     |||2001:0:0:2::1            
            +--------|||--------+
            |dual-stack lite carrier-grade NAT
            |+--------+--------+|               
            ||     SNAT SC     ||
            |+--------+--------+|
            |       |NAT|       |
            |       +-+-+       |
            +---------|---------+               
                      |129.0.0.1                
                      |
              --------|--------                   
            /         |         \
           |       Internet      |              
            \         |         /
              --------|--------
                      |                         
                      |128.0.0.1                
                +-----+-----+
                | IPv4 Host |                   
                +-----------+                   
           ]]></artwork>

       <postamble></postamble>
     </figure>

  <t>Notes:
  <list style='symbols'>
    <t>The dual-stack lite home router is not required to be on the
    same link as the host</t> 
    <t>The dual-stack lite home router could be replaced by a
    dual-stack lite router in the service provider network</t>
  </list>
  </t>
  
     <t>The resulting solution accepts an IPv4 datagram that is
     translated into an IPv4-in-IPv6 softwire datagram for
     transmission across the softwire.  At the corresponding
     endpoint, the IPv4 datagram is decapsulated, and the translated
     IPv4 address is inserted based on a translation from the
     softwire.</t>


   <section title="Example message flow">
     <t>In the example shown in <xref target="outbound-dg" />, the
     translation tables in the dual-stack lite carrier-grade NAT is
     configured to forward between IP/TCP (10.0.0.1/10000) and IP/TCP
     (129.0.0.1/5000).  That is, a datagram received by the dual-stack
     lite home router from the host at address 10.0.0.1, using TCP DST
     port 10000 will be translated a datagram with IP SRC address
     129.0.0.1 and TCP SRC port 5000 in the Internet.</t>

     <figure align="center" anchor="outbound-dg" title="Outbound Datagram">
       <preamble></preamble>

       <artwork align="left"><![CDATA[
                +-----------+                   
                |    Host   |                   
                +-----+-----+                   
                   |  |10.0.0.1
   IPv4 datagram 1 |  |                        
                   |  |                         
                   v  |10.0.0.2                 
            +---------|---------+               
            |         |         |
            |dual-stack lite home router
            |+--------+--------+|
            ||     SNAT SI     ||               
            |+--------+--------+|               
            +--------|||--------+               
                   | |||2001:0:0:1::1            
    IPv6 datagram 2| |||
                   | |||<-IPv4-in-IPv6 softwire
                   | |||                         
              -----|-|||-------                   
            /      | |||        \
           |   ISP core network  |              
            \      | |||        /
              -----|-|||-------
                   | |||                        
                   | |||2001:0:0:2::1            
            +------|-|||--------+
            |dual-stack lite carrier-grade NAT
            |      v |||        |               
            |+--------+--------+|               
            ||     SNAT SC     ||
            |+--------+--------+|
            |       |NAT|       |
            |       +-+-+       |
            +---------|---------+               
                   |  |129.0.0.1                
   IPv4 datagram 3 |  |
              -----|--|--------                   
            /      |  |         \
           |       Internet      |              
            \      |  |         /
              -----|--|--------
                   |  |                         
                   v  |128.0.0.1                
                +-----+-----+
                | IPv4 Host |                   
                +-----------+                   
           ]]></artwork>

       <postamble></postamble>
     </figure>

     <texttable title="Datagram header contents">
	<ttcol align="right">Datagram</ttcol>
	<ttcol align="right">Header field</ttcol>
	<ttcol align="left">Contents</ttcol>
	
	<c>IPv4 datagram 1</c>
	<c>IPv4 Dst</c>
	<c>128.0.0.1</c>
	<c></c>
	<c>IPv4 Src</c>
	<c>10.0.0.1</c>
	<c></c>
	<c>TCP Dst</c>
	<c>80</c>
	<c></c>
	<c>TCP Src</c>
	<c>10000</c>
	<c>---------------</c>
	<c>------------</c>
	<c>-------------</c>
	<c>IPv6 Datagram 2</c>
	<c>IPv6 Dst</c>
	<c>2001:0:0:2::1</c>
	<c></c>
	<c>IPv6 Src</c>
	<c>2001:0:0:1::1</c>
	<c></c>
	<c>IPv4 Dst</c>
	<c>128.0.0.1</c>
	<c></c>
	<c>IPv4 Src</c>
	<c>10.0.0.1</c>
	<c></c>
	<c>TCP Dst</c>
	<c>80</c>
	<c></c>
	<c>TCP Src</c>
	<c>10000</c>
	<c>---------------</c>
	<c>------------</c>
	<c>-------------</c>
	<c>IPv4 datagram 3</c>
	<c>IPv4 Dst</c>
	<c>128.0.0.1</c>
	<c></c>
	<c>IPv4 Src</c>
	<c>129.0.0.1</c>
	<c></c>
	<c>TCP Dst</c>
	<c>80</c>
	<c></c>
	<c>TCP Src</c>
	<c>5000</c>
     </texttable>

     <t>When datagram 1 is received by the dual-stack lite home router, the SI function
     encapsulates the datagram in datagram 2 and forwards it to
     the dual-stack lite carrier-grade NAT over the softwire.</t>

     <t>When it receives datagram 2, the SC in the dual-stack lite carrier-grade NAT hands the
     IPv4 datagram to the NAT, which determines from its translation
     table that the datagram received on Softwire_1 with TCP SRC port
     10000 should be translated to datagram 3 with IP SRC address
     129.0.0.1 and TCP SRC port 5000.</t>

     <t><xref target="inbound-dg" /> shows an inbound message received
     at the dual-stack lite carrier-grade NAT.  When the NAT function
     in the dual-stack lite carrier-grade NAT receives datagram 1, it
     looks up the IP/TCP DST in its translation table.  In the example
     in Figure 3, the NAT translates the TCP DST port to 10000, sets
     the IP DST address to 10.0.0.1 and hands the datagram to the SC
     for transmission over Softwire_1.  The SI in the dual-stack lite
     home router decapsulates IPv4 datagram from the inbound softwire
     datagram, and forwards it to the host.</t>

     <figure align="center" anchor="inbound-dg" title="Inbound Datagram">
       <preamble></preamble>

       <artwork align="left"><![CDATA[
                +-----------+                   
                |    Host   |                   
                +-----+-----+                   
                   ^  |10.0.0.1
   IPv4 datagram 3 |  |                        
                   |  |                         
                   |  |10.0.0.2                 
            +---------|---------+               
            |       +-+-+       |
            |dual-stack lite home router
            |+--------+--------+|
            ||     SNAT SI     ||               
            |+--------+--------+|               
            +--------|||--------+               
                   ^ |||2001:0:0:1::1            
   IPv6 datagram 2 | |||
                   | |||<-IPv4-in-IPv6 softwire
                   | |||                         
              -----|-|||-------                   
            /      | |||        \
           |   ISP core network  |              
            \      | |||        /
              -----|-|||-------
                   | |||                        
                   | |||2001:0:0:2::1            
            +------|-|||--------+
            |dual-stack lite carrier-grade NAT
            |+--------+--------+|               
            ||     SNAT SC     ||
            |+--------+--------+|
            |       |NAT|       |
            |       +-+-+       |
            +---------|---------+               
                   ^  |129.0.0.1                
   IPv4 datagram 1 |  |
              -----|--|--------                   
            /      |  |         \
           |       Internet      |              
            \      |  |         /
              -----|--|--------
                   |  |                         
                   |  |128.0.0.1                
                +-----+-----+
                | IPv4 Host |                   
                +-----------+                               
           ]]></artwork>

       <postamble></postamble>
     </figure>

     <texttable title="Datagram header contents">
	<ttcol align="right">Datagram</ttcol>
	<ttcol align="right">Header field</ttcol>
	<ttcol align="left">Contents</ttcol>
	
	<c>IPv4 datagram 1</c>
	<c>IPv4 Dst</c>
	<c>129.0.0.1</c>
	<c></c>
	<c>IPv4 Src</c>
	<c>128.0.0.1</c>
	<c></c>
	<c>TCP Dst</c>
	<c>5000</c>
	<c></c>
	<c>TCP Src</c>
	<c>80</c>
	<c>---------------</c>
	<c>------------</c>
	<c>-------------</c>
	<c>IPv6 Datagram 2</c>
	<c>IPv6 Dst</c>
	<c>2001:0:0:1::1</c>
	<c></c>
	<c>IPv6 Src</c>
	<c>2001:0:0:2::1</c>
	<c></c>
	<c>IPv4 Dst</c>
	<c>10.0.0.1</c>
	<c></c>
	<c>IP Src</c>
	<c>128.0.0.1</c>
	<c></c>
	<c>TCP Dst</c>
	<c>10000</c>
	<c></c>
	<c>TCP Src</c>
	<c>80</c>
	<c>---------------</c>
	<c>------------</c>
	<c>-------------</c>
	<c>IPv4 datagram 3</c>
	<c>IPv4 Dst</c>
	<c>10.0.0.1</c>
	<c></c>
	<c>IPv4 Src</c>
	<c>128.0.0.1</c>
	<c></c>
	<c>TCP Dst</c>
	<c>10000</c>
	<c></c>
	<c>TCP Src</c>
	<c>80</c>
     </texttable>

</section>

  

   <section title="Translation details">
     <t>The dual-stack lite carrier-grade NAT has a NAT that
     translates between softwire/port pairs and IPv4-address/port
     pairs.  The same translation is applied to IPv4 datagrams
     received on the device's external interface and from the softwire
     endpoint in the device.</t>

     <t>In <xref target="outbound-dg"/>, the translator network
     interface in the dual-stack lite carrier-grade NAT is on the
     Internet, and the softwire interface connects to the dual-stack
     lite home router.  The dual-stack lite carrier-grade NAT
     translator is configured as follows:

     <list style="hanging">
	<t hangText="Network interface:">Translate IPv4 destination
	address and TCP destination port to the softwire identifier
	and TCP destination port</t>

	<t hangText="Softwire interface:">Translate softwire
	identifier and TCP source port to IPv4 source address and TCP
	source port</t>
     </list>
     </t>

     <t>Here is how the translation in <xref target="inbound-dg"/>
     works:

     <list style="symbols">
	<t>Datagram 1 is received on the dual-stack lite carrier-grade NAT translator network
	interface.  The translator looks up the IPv4-address/port
	pair in its translator table, rewrites the IPv4 destination address
	to 10.0.0.1 and the TCP source port to 10000, and hands the
	datagram to the SE to be forwarded over the softwire.</t>
	
	<t>The IPv4 datagram is received on the dual-stack lite home router SI.  The SI
	function extracts the IPv4 datagram and the dual-stack lite home router forwards
	datagram 3 to the host.</t>
     </list>
     </t>
 
     <texttable title="dual-stack lite carrier-grade NAT translation table">
	<ttcol align="right">Softwire/IPv4/Port</ttcol>
	<ttcol align="left">IPv4/Port</ttcol>
	<c>Softwire_1/10.0.0.1/TCP 10000</c>
	<c>129.0.0.1/TCP 5000</c>
     </texttable>
   </section>

</section>

<section anchor="host-based-arch" title="Host based architecture">
<t>
This architecture is targeted at new, large scale deployments of dual-stack capable devices implementing a dual-stack lite interface.
</t>

   
     <t>As illustrated in <xref target="gnat-arch2"/>, this dual-stack
     lite deployment model consists of three components: the
     dual-stack lite host, the dual-stack lite carrier-grade NAT and a
     softwire between the softwire initiator (SI) in the host and the
     softwire concentrator (SC) in the dual-stack lite carrier-grade
     NAT. The dual-stack lite host is assumed to have IPv6 service and
     can exchange IPv6 traffic with the dual-stack lite carrier-grade
     NAT.</t>
     <t>The dual-stack lite carrier-grade NAT performs IPv4-IPv4 NAT
     translations to multiplex multiple subscribers through a single
     global IPv4 address.  Overlapping IPv4 address spaces used by the
     dual-stack lite hosts are disambiguated through the
     identification of tunnel endpoints.</t>
     
     <t>In this situation, the dual-stack lite host configures the
     well known IPv4 address a.b.c.d (TBD by IANA) on it dual-stack
     lite interface acting as the SI. It also configure a.b.c.d+1 (TBD
     by IANA) as the address of its default gateway, with a netmask to
     cover a /30 network.</t>
     
     <figure align="center" anchor="gnat-arch2" title="SNAT host-based architecture">
       <preamble></preamble>

       <artwork align="left"><![CDATA[

                             
            +-------------------+               
            |                   |
            |Host  a.b.c.d      |               
            |+--------+--------+|
            ||     SNAT SI     ||               
            |+--------+--------+|               
            +--------|||--------+               
                     |||2001:0:0:1::1            
                     |||
                     |||<-IPv4-in-IPv6 softwire
                     |||                         
              -------|||-------                   
            /        |||        \
           |   ISP core network  |              
            \        |||        /
              -------|||-------
                     |||                        
                     |||2001:0:0:2::1            
            +--------|||--------+
            |dual-stack lite carrier-grade NAT
            |+--------+--------+|               
            ||     SNAT SC     ||
            |+--------+--------+|
            |       |NAT|       |
            |       +-+-+       |
            +---------|---------+               
                      |129.0.0.1                
                      |
              --------|--------                   
            /         |         \
           |       Internet      |              
            \         |         /
              --------|--------
                      |                         
                      |128.0.0.1                
                +-----+-----+
                | IPv4 Host |                   
                +-----------+                   
           ]]></artwork>

       <postamble></postamble>
     </figure>

  
     <t>The resulting solution accepts an IPv4 datagram that is
     translated into an IPv4-in-IPv6 softwire datagram for
     transmission across the softwire.  At the corresponding
     endpoint, the IPv4 datagram is decapsulated, and the translated
     IPv4 address is inserted based on a translation from the
     softwire.</t>


   <section title="Example message flow">
     <t>In the example shown in <xref target="outbound-dg2" />, the
     translation tables in the dual-stack lite carrier-grade NAT is
     configured to forward between IP/TCP (a.b.c.d/10000) and IP/TCP
     (129.0.0.1/5000).  That is, a datagram received from the host at
     address a.b.c.d, using TCP DST port 10000 will be translated a
     datagram with IP SRC address 129.0.0.1 and TCP SRC port 5000 in
     the Internet.</t>

     <figure align="center" anchor="outbound-dg2" title="Outbound Datagram">
       <preamble></preamble>

       <artwork align="left"><![CDATA[
                
            +-------------------+               
            |                   |
            |Host a.b.c.d       |               
            |+--------+--------+|
            ||     SNAT SI     ||               
            |+--------+--------+|               
            +--------|||--------+               
                   | |||2001:0:0:1::1            
    IPv6 datagram 1| |||
                   | |||<-IPv4-in-IPv6 softwire
                   | |||                         
              -----|-|||-------                   
            /      | |||        \
           |   ISP core network  |              
            \      | |||        /
              -----|-|||-------
                   | |||                        
                   | |||2001:0:0:2::1            
            +------|-|||--------+
            |dual-stack lite carrier-grade NAT
            |      v |||        |
            |+--------+--------+|               
            ||     SNAT SC     ||
            |+--------+--------+|
            |       |NAT|       |
            |       +-+-+       |
            +---------|---------+               
                   |  |129.0.0.1                
   IPv4 datagram 2 |  |
              -----|--|--------                   
            /      |  |         \
           |       Internet      |              
            \      |  |         /
              -----|--|--------
                   |  |                         
                   v  |128.0.0.1                
                +-----+-----+
                | IPv4 Host |                   
                +-----------+                   
           ]]></artwork>

       <postamble></postamble>
     </figure>

     <texttable title="Datagram header contents">
	<ttcol align="right">Datagram</ttcol>
	<ttcol align="right">Header field</ttcol>
	<ttcol align="left">Contents</ttcol>
	

	<c>IPv6 Datagram 1</c>
	<c>IPv6 Dst</c>
	<c>2001:0:0:2::1</c>
	<c></c>
	<c>IPv6 Src</c>
	<c>2001:0:0:1::1</c>
	<c></c>
	<c>IPv4 Dst</c>
	<c>128.0.0.1</c>
	<c></c>
	<c>IPv4 Src</c>
	<c>a.b.c.d</c>
	<c></c>
	<c>TCP Dst</c>
	<c>80</c>
	<c></c>
	<c>TCP Src</c>
	<c>10000</c>
	<c>---------------</c>
	<c>------------</c>
	<c>-------------</c>
	<c>IPv4 datagram 2</c>
	<c>IPv4 Dst</c>
	<c>128.0.0.1</c>
	<c></c>
	<c>IPv4 Src</c>
	<c>129.0.0.1</c>
	<c></c>
	<c>TCP Dst</c>
	<c>80</c>
	<c></c>
	<c>TCP Src</c>
	<c>5000</c>
     </texttable>

     <t>When sending an IPv4 packet, the dual-stack lite host
     encapsulates it in datagram 1 and forwards it to
     the dual-stack lite carrier-grade NAT over the softwire.</t>

     <t>When it receives datagram 1, the SC in the dual-stack lite
     carrier-grade NAT hands the IPv4 datagram to the NAT, which
     determines from its translation table that the datagram received
     on Softwire_1 with TCP SRC port 10000 should be translated to
     datagram 3 with IP SRC address 129.0.0.1 and TCP SRC port
     5000.</t>

     <t><xref target="inbound-dg2" /> shows an inbound message
     received at the dual-stack lite carrier-grade NAT.  When the NAT
     function in the dual-stack lite carrier-grade NAT receives
     datagram 1, it looks up the IP/TCP DST in its translation table.
     In the example in Figure 3, the NAT translates the TCP DST port
     to 10000, sets the IP DST address to a.b.c.d and hands the
     datagram to the SC for transmission over Softwire_1.  The SI in
     the dual-stack lite home router decapsulates IPv4 datagram from
     the inbound softwire datagram, and forwards it to the host.</t>

     <figure align="center" anchor="inbound-dg2" title="Inbound Datagram">
       <preamble></preamble>

       <artwork align="left"><![CDATA[
               
            +-------------------+               
            |                   |
            |Host a.b.c.d       |               
            |+--------+--------+|
            ||     SNAT SI     ||               
            |+--------+--------+|               
            +--------|||--------+               
                   ^ |||2001:0:0:1::1            
   IPv6 datagram 2 | |||
                   | |||<-IPv4-in-IPv6 softwire
                   | |||                         
              -----|-|||-------                   
            /      | |||        \
           |   ISP core network  |              
            \      | |||        /
              -----|-|||-------
                   | |||                        
                   | |||2001:0:0:2::1            
            +------|-|||--------+
            |dual-stack lite carrier-grade NAT
            |      | |||        |
            |+--------+--------+|               
            ||     SNAT SC     ||
            |+--------+--------+|
            |       |NAT|       |
            |       +-+-+       |
            +---------|---------+               
                   ^  |129.0.0.1                
   IPv4 datagram 1 |  |
              -----|--|--------                   
            /      |  |         \
           |       Internet      |              
            \      |  |         /
              -----|--|--------
                   |  |                         
                   |  |128.0.0.1               
                +-----+-----+
                | IPv4 Host |                   
                +-----------+                               
           ]]></artwork>

       <postamble></postamble>
     </figure>

     <texttable title="Datagram header contents">
	<ttcol align="right">Datagram</ttcol>
	<ttcol align="right">Header field</ttcol>
	<ttcol align="left">Contents</ttcol>
	
	<c>IPv4 datagram 1</c>
	<c>IPv4 Dst</c>
	<c>129.0.0.1</c>
	<c></c>
	<c>IPv4 Src</c>
	<c>128.0.0.1</c>
	<c></c>
	<c>TCP Dst</c>
	<c>5000</c>
	<c></c>
	<c>TCP Src</c>
	<c>80</c>
	<c>---------------</c>
	<c>------------</c>
	<c>-------------</c>
	<c>IPv6 Datagram 2</c>
	<c>IPv6 Dst</c>
	<c>2001:0:0:1::1</c>
	<c></c>
	<c>IPv6 Src</c>
	<c>2001:0:0:2::1</c>
	<c></c>
	<c>IPv4 Dst</c>
	<c>a.b.c.d</c>
	<c></c>
	<c>IP Src</c>
	<c>128.0.0.1</c>
	<c></c>
	<c>TCP Dst</c>
	<c>10000</c>
	<c></c>
	<c>TCP Src</c>
	<c>80</c>
     </texttable>


   </section>
   
      <section title="Translation details">
     <t>The translations happening in the dual-stack lite
     carrier-grade NAT are the same as in the previous examples. The
     well known IPv4 address a.b.c.d used by all the hosts are
     disambiguated by the IPv6 source address of the softwire.</t>
     </section>
   
   
</section>
</section>
<section title="Encapsulations">
<t>In its simplest deployment model, dual-stack lite only requires IPv4 in IPv6 encapsulation. In more complex scenario where a site gateway would play the role of the softwire initiator, more complex encapsulation might be desired. Thus dual-stack lite hosts, dual-stack lite home gateway and dual-stack lite NAT devices must at minimum implement IPv4 in IPv6 encapsulation. On top of that, dual-stack lite NAT devices should be able to support other encapsulation, like L2TPv2/v3, GRE, MPLS,...</t>
</section>

<section title="Carrier-grade NAT considerations">
<t>
A dual-stack lite carrier-grade NAT SHOULD implement behavior conforming to the best current practice, currently documented in <xref target="RFC4787"/>, <xref target="I-D.ietf-behave-tcp"/> and <xref target="I-D.ietf-behave-nat-icmp"/>. Other requirements for carrier-grade NATs can be found in <xref target="I-D.nishitani-cgn" />. DISCUSSION: those requirements need to be harmonized.</t>
<section title="Per customer port allocation">
<t>Because IPv4 addresses will be share among customers and potentially a large address space reduction factor may be applied, in average, only a limited number N of TCP or UDP port numbers will be available per customer. This means that applications opening a very large number of TCP ports may have a harder time to work. For example, it has been reported that a very well know web site was using AJAX techniques and was opening up to 69 TCP ports per web page. If we make the hypothesis of an address space reduction of a factor 100 (one IPv4 address per 100 customers), and 65k ports per IPv4 addresses available, that makes a total of N=650 ports available simultaneously to be shared among the various devices behind the dual-stack lite tunnel end-point.
</t>
<t>
There is an important operational difference if those N ports are pre-allocated in a cookie-cutter fashion versus allocated on demand by incoming connections. This is a difference between an average of N ports and a maximum of N ports. Note that an hybrid system can be design where a limited number of ports are pre-allocated to customers for special applications and the others are reserved for dynamic allocations.
</t>
</section>

<section title="ALG">
<t>
Concerns have been expressed that any type of carrier-grade NAT could stifle innovation by making it harder to deploy ALGs, and, as such, it would be better to architect the NAT at the edges of the network rather than in the core.  Such an edge based architecture (SAM <xref target="I-D.despres-sam" />, A+P <xref target="I-D.ymbk-aplusp" />) would require significantly more complexity to be placed either in the end host or in the home gateway than simply having an interface that encapsulate IPv4 in IPv6. This complexity may be an heavy price to pay considering that most recent applications have been developped to work without any ALG support at all, as illustrated by the trend to now use HTTP as transport...  More over, as was stated during the Montreal IETF interim meeting, what really matters is not so much the placement of the NAT itself, but the control over the ALG. For that reason, the carrier-grade NAT SHOULD avoid performing any ALG on unknown protocols and provide a method for edge devices to learn about the external binding (IPv4 address+port) that will be used by the carrier-grade NAT to translate the packets and then perform any necessary ALG.</t>
<t>DISCUSSION: A carrier-grade NAT MAY implement ALGs supporting all the classic applications, e.g. FTP, RTSP/RTP, IPsec and PPTP VPN pass-through, etc.</t>

<t>Manual port forwarding or UPnP IGD may or may not be supported. 
</t>
</section>

<section title="On-demand port reservation">
<t>A port mapping protocol might be developed to run between a dual-stack lite host (or a dual-stack lite router) and the dual-stack lite carrier-grade NAT to reserve at connection time a binding with an external IPv4 address and a port number, and for use by privately addressed hosts to determine the which public address the NAT will pair with it. In a dual-stack lite router, such a protocol could serve as a proxy for <xref target="UPnP-IGD">UPnP IGD</xref> or <xref target="I-D.cheshire-nat-pmp">NAT-PMP</xref>.</t>
</section>

<section title="Pre-allocating ports">
<t>
An alternate mechanism would be to use a DHCPv4 option to request the allocation of a (small) block of port number on a shared IPv4 address. Such a mechanism is described in <xref target="I-D.bajko-v6ops-port-restricted-ipaddr-assign" /></t>
<t>
An even simpler mechanism would be to enable a user to pre-register a limited number of external mappings on the service provider web site.
</t>
</section>
</section>

<section title="Future work">
<t>The items described bellow could be included in a future version of this document or be the object of a separate document.</t>

<section title="Multicast considerations">
<t>
This document only describes unicast IPv4 as IPv4 Multicast is not widely deployed in broadband networks. Some multicast IPv4 considerations might to be discussed as well in a future revision of this document.
</t>
</section>

<section title="3rd party carrier-grade NAT">
<t>The dual-stack lite architecture can be easily extended to support 3rd party carrier-grade NATs. The dual-stack lite interface just need to be pointed to the IPv6 address of that 3rd party carrier-grade NAT instead of the IPv6 address of the service provider carrier-grade NAT. Implementation of dual-stack lite should enable users to override the mechanism used for automatic discovery of the carrier grade NAT and, for example, manually enter the DNS name of the selected carrier-grade NAT.</t>
</section>


<section title="Interface initialization">
<t>The initialization sequence of each interface of a dual-stack lite node need to be analyzed and heuristics need to be defined to determined if each interface operates in IPv4 mode, IPv6 mode, dual-stack mode or dual-stack lite mode. The absence/presence of the DHCPv6 option discussed above in requests/responses could be a trigger to decide in which mode to operate.</t>
</section>

</section>

<section title="Comparison with an architecture with multiple-layers of NAT">
<t>
An alternative architecture could consist on layering multiple levels of IPv4-IPv4 NAT toward the edges of the service provider network. Such architecture has a key advantage: it would work with any existing IPv4 home gateway. However, it would have a number of drawbacks:
</t>
<t>
<list style="symbols">
<t>Each NAT device in the path will have its own application level gateways, increasing the odds of failure or miss-configuration.</t>
<t>The larger private IPv4 address space available today is Net 10.0.0.0/8. It can in theory accommodate for about 16 million addresses, in practice, with an 80% allocation efficiency, it can address about 13 million devices. This may not be  enough for existing and future large scale deployments, thus multiple overlapping copies of Net 10 might have to be used simultaneously. This in itself create more complexity:
<list style="symbols">
<t>If multiple copies of Net 10 are in use, network troubleshooting gets more difficult. One first need to figure out in which Net 10 realm the customer is before sending a ping to a home gateway to test it. This means that provisioning systems need to be modified to include this information.</t>
<t>Multiple overlapping copies of Net 10 often intersect in some places with routers and firewalls. The configuration of such devices need to carefully take into accounts the overlapping address space. Debugging problems created by miss-configuration can be time consuming.</t>
</list></t>
<t>Both legacy customers with global IPv4 addresses and new customers with private IPv4 addresses may be connected to the same aggregation router. That router will have to make the decision to send packets directly to the Internet or via a translator based on the source address of those packets, which is known as source-based routing. Although not impossible to implement, this adds complexity to the management of the network.</t>
</list>
</t>
<t>None of the issues described above are show stoppers, but put together, they seriously increase the complexity of the management of the network.</t>
</section>


<section title="Comparison with NAT-PT (or its potential replacements)">
<t>
NAT-PT <xref target="RFC2766"></xref> deals with the translation from IPv6 to IPv4 and vice versa. As such, it would not help solving the problem of offering IPv4 service to legacy IPv4 hosts. NAT-PT is targeted at green field IPv6 deployments, allowing them to access services and content on the IPv4 Internet. In that sense, NAT-PT could be in competition with dual-stack lite for green field deployment of new devices directly connected to the broadband service provider network.
</t>
<t>In this situation, NAT-PT has the advantage of enabling to remove entirely the IPv4 stack on edge devices. This may be critical on sensor type devices with a very small memory footprint. However, it is unclear if such devices really need to have access to the whole global IPv4 Internet in the first place or if they only need to communicate with servers that can be made IPv6 enable.</t>
<t>In the more general case, dual-stack lite has several advantages over NAT-PT:
</t>
<t>
<list style="symbols">
<t>Dual-stack lite does not require any hack to the DNS. In other words, there is no need to synthesize fake AAAA records to represent IPv4 addresses. This make DNSsec works more reliably.</t>
<t>Because of the DNS ALG hack, NAT-PT places restriction on the topology, in most cases requiring that all exiting traffic go through a single point of contention. Because there is no DNS ALG with dual-stack lite and because each dual-stack lite device can be directed independently to a different dual-stack lite NAT, the dual-stack lite architecture can scale better.</t>
<t>ALG sometimes need to manipulate literal IP address in the payload of packets. In the case of an IPv4-IPv4 NAT, this is a simple 32 bit field replacement. In the case of IPv6-IPv4 (or IPv4-IPv6) NAT, a 128 bit field need to be substituted by a 32 bit field (or vice versa). This makes NAT-PT ALG more complex than dual-stack lite NAT ALG.</t>
</list>
</t>
<t>For more detail on NAT-PT related issues, see <xref target="RFC4966"></xref>.</t>
</section>

<section title="Comparison with DSTM">
<t>
DSTM <xref target="I-D.bound-dstm-exp"></xref> was addressing IPv6 backward compatibility with IPv4 by providing a temporary IPv4 address to dual-stack nodes. Connectivity was also provided by the way of IPv4 over IPv6 tunnels. However, DSTM was relying on nodes acquiring and  releasing IPv4 addresses on a need to have basis. It is the authors' opinion that such mechanism may not provide the necessary savings in address space for large scale broadband deployments.
</t>
</section>


    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The authors would like to acknowledge the role of Mark
      Townsley for his input on the overall architecture of this
      technology by pointing this work in the direction of <xref
      target="I-D.droms-softwires-snat"></xref>.  Note that this
      document results from a merging of <xref
      target="I-D.durand-dual-stack-lite"/> and <xref
      target="I-D.droms-softwires-snat"></xref>.Also to be
      acknowledged are the many discussions with a number of people
      including Shin Miyakawa, Katsuyasu Toyama, Akihide Hiura,
      Takashi Uematsu, Tetsutaro Hara, Yasunori Matsubayashi, Ichiro
      Mizukoshi. The author would also like to thank David Ward, Jari
      Arkko, Thomas Narten and Geoff Huston for their constructive
      feedback. A special thank you goes to Dave Thaler for his review and comments.
      </t>

    </section>


    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">

      <t>This draft request IANA to allocate a well know IPv4 a.b.c.d/30 network prefix. The IPv4 address a.b.c.d is reserved for sourcing IPv4 packets inside on IPv6 tunnel. The IPv4 address a.b.c.d+1 is reserved as the IPv4 address of the default router for such dual-stack lite hosts.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Security issues associated with NAT have long been documented. See <xref target="RFC2663"></xref> and <xref target="RFC2993"></xref>.</t>
      <t>However, moving the NAT functionality from the home gateway to the core of the service provider network and sharing IPv4 addresses among customers create additional requirements when logging data for abuse treatment. With any architecture where an IPv4 address does not uniquely represent an end host, IPv4 addresses and a timestamps are no longer sufficient to identify a particular broadband customer. Additional information like TCP port numbers will be be required for that purpose.
      </t>
<t>
Similarly, some attack mitigation techniques put an IPv4 address in a "penalty box" for a period of time ifan abnormal behavior is observed. Such techniques may need to be revisited as they would impact more than just one user (presumably the offender) at a time.
</t>
    </section>
   
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative references">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;

    </references>
    
    <references title="Informative references">

&RFC2663;
&RFC2766;
&RFC2993;
&RFC4966;
&I-D.bound-dstm-exp;
&I-D.droms-softwires-snat;
&I-D.durand-dual-stack-lite;
&RFC4787;
&I-D.ietf-behave-tcp;
&I-D.ietf-behave-nat-icmp;
&I-D.cheshire-nat-pmp;
&I-D.dhankins-softwire-tunnel-option;
&I-D.bajko-v6ops-port-restricted-ipaddr-assign;
&I-D.ymbk-aplusp;
&I-D.despres-sam;
&I-D.nishitani-cgn;
        <reference anchor='UPnP-IGD'
         target='http://www.upnp.org/standardizeddcps/igd.asp'>
          <front>
        	  <title>Universal Plug and Play Internet Gateway Device Standardized
        	  Gateway Device Protocol</title>
        	  <author fullname='UPnP Forum'>
        	    <organization>UPnP Forum</organization>
        	  </author>
        	  <date month='September' year='2006'/>
        	</front>
        </reference>

    </references>



  </back>
</rfc>
