<?xml version="1.0"?>

<?rfc strict="yes"?>
<?rfc toc="yes" ?>
<?rfc tocompact="yes" ?>
<?rfc symrefs="yes" ?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<rfc ipr="pre5378Trust200902" category="info">
<front>
	<title>SIP endpoint security case study</title>
	<author initials="H." surname="Scholz" fullname="Hendrik Scholz">
		<organization abbrev="freenet">freenet Cityline GmbH</organization>
		<address>
			<postal>
				<street>Am Germaniahafen 1-7</street>
				<city>Kiel</city>
				<code>24143</code>
				<country>Germany</country>
			</postal>
			<phone>+49 (0) 431 9020 552</phone>
			<email>hendrik.scholz@freenet.ag</email>
			<uri>http://freenet.ag</uri>
		</address>
	</author>
	<date month="June" year="2009"/>

	<area>Real-time Applications and Infrastructure</area>

	<workgroup>RUCUS</workgroup>
	<keyword>RFC</keyword>
	<keyword>Request for Comments</keyword>
	<keyword>I-D</keyword>
	<keyword>Internet-Draft</keyword>
	<keyword>VoIP</keyword>
	<keyword>Security</keyword>
	<keyword>Threats</keyword>

	<abstract>
	<t>SIP endpoints are subject to unwanted communication often perceived as Spam over Internet Telephony (SPIT). This document describes caveats on various layers which can be abused to send unsolicited messages. As a result users receive a degraded experience. The issues found are based on case studies of various events seen in VoIP provider networks.
	</t>
	</abstract>
</front>
<middle>
<section title="Introduction">
<t>Broadband access providers often ship access devices (IADs) which
are by default VoIP enabled. Reasons for this are manifold are out of the scope of this document. The customer may or may not know about the VoIP feature set.
</t>
<t>The SIP user agents may suffer from implementation issues which are not necesarilly shortcomings of the SIP standards but rather poor implementations.
</t>
<t>In order to succesfully create a SIP dialog or make a remote phone ring the attacker needs to know the destination IP and port as well as the Contact the endpoint registered itself with. If the IP or port is wrong the message would not reach the remote SIP stack. If the requested URI does not exist the UAS should return a 404 (Not Found). Other security mechanisms (packet filter) or transport limitations (NAT bindings) may prevent communication as well.
</t>
</section>
<section title="IP layer">
<t>In order to conduct a successful attack the attacker needs to know where to direct traffic to. In case of devices on the end customer premises the port density per device is rather low (i.e. one or two lines) compared to commercially used SIP trunks. To make up for this drawback the attacker has to target more devices and thus IP addresses.</t>
<section title="IP Range Guessing">
<t>SIP accounts may be tied to IP access products, i.e. part of Triple Play. In these cases an attacker only needs to identify IP ranges handed out to end customers. SIP services then may also be reachable on the same public IP address. IP access providers get assigned certain network ranges which they dynamically or statically hand out to their customers. These ranges are known to the public and can be abused. An attacker would gather list of IP ranges and attack these. Success rates are higher (80% during tests) compared to random IP addresses.</t>
</section>
<section title="Packet filtering">
<t>The SIP standard allows for direct (peer-to-peer) communication between SIP devices. In most scenarios a centralized approach with a SIP registrar is deployed, though. The SIP endpoint registers itself on a registrar server which is usually colocated in the ISPs datacenter. All signaling is inbound from that particular SIP registrar IP address or set of IP addresses.</t>
<t>Large deployments usually rely on such a registrar as proxy and sometimes a B2BUA. In these scenarios the SIP endpoint would only receive inbound traffic from these configured IP addresses. All other traffic can be considered unsolicited. A device used in such an environment should ignore the rogue traffic and not pass it on to the SIP stack. Filtering rogue traffic on the SIP layer (i.e. by looking at Via headers) does not work as the Via header can be spoofed. In addition filtering on the SIP layer forces the device to parse potentially malicious messages.
</t>
</section>
</section>
<section title="SIP layer">
<t>An attacker, just as any other SIP User-Agent, has to craft his own SIP requests and subsequent messages. He might choose to set, skip or modify header fields and values in order to confuse the victim.</t>
<section title="Perceived Identity">
<t>The calling party ID shown to the end user (i.e. in his phone display) cannot be assumed to be a strong identity as per <xref target="RFC4474"/>.</t>
<t>While not compliant with recommendations UASes do pull the Caller ID based on one or more of these headers. Trust levels or priorities do differ between devices.
<list style="symbols">
<t>From displayname</t>
<t>From URI</t>
<t>Remote-Party-ID</t>
<t>P-Asserted-Identity</t>
</list>
</t>
<t>Even when an ISP implements identity checks and verifies certain headers an atacker may still set false information inside SIP signaling. As an example an ITSP may compare the From URI against the credentials provided in the challenge authentication. But the ITSP may let the From displayname pass through to the remote end. The remote device then displays the unverified information carried in the displayname rather than the From URI.
</t>
</section>
<!--
<section title="Message Integrity">
<t>to be done</t>
</section>
-->
</section>
<section title="Implementation Shortcomings">
<t>Even with a flawless definition of SIP signaling devices are prone to mistakes. Problems arise due incomplete or defective implementations.</t>
<section title="Incomplete Implementations">
<t>SIP features various transport mechanisms for the caller identity. Mechanisms include the From header (as per <xref target="RFC3261"/>), the expired Remote-Party-ID draft and the P-Asserted-Identity suite (<xref target="RFC3323"/>, <xref target="RFC3325"/>).
</t>
<t>A originator may choose to use an old mechnism (i.e. Remote-Party-ID) to signal a connected party. The intermediate entities are based on P-Asserted-Identityt and thus fail to check the Remote-Party-ID header. The terminating endpoint only supports Remote-Party-ID or prefers it over other headers. As a result the Remote-Party-ID can be freely set by the caller.</t>
</section>
<section title="Defective Implementations">
<section title="Mapping from AORs to connected phones">
<t>To assure reachability for incoming sessions SIP endpoints frequently register themselves on a SIP registrar. Registration requires a username and credientials. On the SIP network these credentials map to a reachable SIP URI often perceived as phone number. During the registration process a unique but reusable Contact URI is used to identify a certain SIP account. An incoming call from the SIP network to the endpoint carries this Contact URI.</t>
<t>
SIP devices that connect more than just one account usually allow to
map usernames (and thus Contacts) to handsets. If the Contact of an incoming request does match a known line the handset may ring. If the Contact does not match a 404 Not Found must be returned.</t>
<t>Multiple devices are known to not properly check the received Contact of incomfing call setups. If the Contact is not locally known the devices fall back to ring all connected handsets. This misbehaviour allows an attacker to get around the requirement to know the current Contact of the victim.
</t>
</section>
</section>
</section>
<section title="Case studies">
<t>This section describes real world attacks based on the issues described in the previous sections.</t>
<section title="German 5199362832664 case">
<t>In early September 2008 German VoIP users started to complain about their phones ringing at random times while displaying the Caller ID 5199362832664, though sometimes with a modified prefix.
</t>
<t>This case affected customers mostly based in Germany running on DSL lines. Affected devices were VoIP enabled DSL broadband routers.
</t>
<t>Analysis of the attack by various groups lead to the same conclusions. Klaus Darilion summed up the findings in <xref target="refs.ipcom"/>. The attacker crafted non-compliant SIP messages and sent these from one apparently unspoofed IP address (213.130.74.70 in Bulgaria) to millions of destinations. Destination IP addresses were blocks assigned to the large DSL and VoIP providers in Germany.
</t>
<t>The SIP stack on DSL routers used usually runs on the external dynamic IP address and listens on port 5060/UDP. The attacker directed the messages to this port and thus reached an huge number of devices. The signaled Contact in the Request URI was not locally known but the devices fell back to ring all connected phones instead.
</t>
</section>
<section title="DSL/VoIP router 0 Byte bug">
<t>A SIP enabled DSL router tried to suppress malicous inbound SIP traffic by comparing the IP carried in the SIP Via header to the one configured in the SIP settings. This behaviour required that messages from untrusted sources had to be parsed and interpreted by the SIP stack.
</t>
<t>The attack in this case was to send an empty UDP message to the SIP device. The device pushed the message up into the SIP stack which immediately crashed. This resulted in the registered accounts being not reachable anymore.
</t>
</section>
</section>
<section title="Security Considerations">
<t>This document does not introduce new risks but rather lists known problems.</t>
</section>
</middle>
<back>
	<references title="Informative References">
		<?rfc include="reference.RFC.4474.xml"?>
		<?rfc include="reference.RFC.3261.xml"?>
		<?rfc include="reference.RFC.3323.xml"?>
		<?rfc include="reference.RFC.3325.xml"?>
		<reference anchor="refs.ipcom" target="http://www.ipcom.at/fileadmin/public/2008-10-22_Analysis_of_a_VoIP_Attack.pdf">
			<front>
				<title>Analysis of a VoIP Attack</title>
					<author initials="K." surname="Darilion" fullname="Klaus Darilion">
				<organization/>
				</author>
				<date month="October" year="2008"/>
			</front>
		</reference>
	</references>
</back>
</rfc>
