


Pseudo Wire Edge to Edge Emulation                           O. Nicklass
Internet-Draft                                    Nokia Siemens Networks
Intended status: Standards Track                          April 29, 2008
Expires: October 31, 2008


       Managed Objects for TDM over Packet Switched Network (PSN)
                     draft-ietf-pwe3-tdm-mib-10.txt

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on October 31, 2008.

Copyright Notice

   Copyright (C) The IETF Trust (2008).

Abstract

   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it describes managed objects for pseudo wire
   encapsulation for structured or unstructured TDM (T1, E1, T3, E3)
   circuits over a Packet Switch Network (PSN).






Nicklass                Expires October 31, 2008                [Page 1]

Internet-Draft             Manage TDM over PSN                April 2008


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Conventions  . . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  4
   4.  The Internet-Standard Management Framework . . . . . . . . . .  4
   5.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
   6.  TDM MIB module usage . . . . . . . . . . . . . . . . . . . . .  5
     6.1.  Structure of TDM MIB . . . . . . . . . . . . . . . . . . .  5
     6.2.  TDM Connection configuration Procedure . . . . . . . . . .  6
     6.3.  TDM PW Monitoring  . . . . . . . . . . . . . . . . . . . .  6
   7.  Example of actual TDM PW Setup . . . . . . . . . . . . . . . .  7
   8.  Object definition  . . . . . . . . . . . . . . . . . . . . . .  9
   9.  Security considerations  . . . . . . . . . . . . . . . . . . . 37
   10. IANA considerations  . . . . . . . . . . . . . . . . . . . . . 39
   11. References . . . . . . . . . . . . . . . . . . . . . . . . . . 39
     11.1. Normative references . . . . . . . . . . . . . . . . . . . 39
     11.2. Informative references . . . . . . . . . . . . . . . . . . 41
   12. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 41
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 41
   Intellectual Property and Copyright Statements . . . . . . . . . . 42






























Nicklass                Expires October 31, 2008                [Page 2]

Internet-Draft             Manage TDM over PSN                April 2008


1.  Introduction

   This document describes a model for managing TDM pseudo wires, i.e.
   TDM data encapsulated for transmission over a Packet Switched Network
   (PSN).  The term TDM in this document is limited to the scope of PDH
   hierarchy.  It is currently specified to carry any TDM Signals in
   either Structure Agnostic Transport mode (E1, T1, E3 and T3) or in
   Structure Aware Transport mode (E1, T1 and NxDS0) as defined in PWE3
   TDM Requirements document [RFC4197].

   This document is closely related to [SATOP], [TDMOIP] and [CESOPSN]
   which describe the encapsulation of TDM signals and provide the
   Circuit Emulation Service over a Packet Switched Network (PSN).

   The TDM management model consists of several MIB modules, following
   the layering model described in the PWE3 Architecture [RFC3985]
   document.  The TDM MIB module described in this document works
   closely with the MIB modules described in [DS3MIB], [DS1MIB],
   [DS0MIB], [IFMIB], [PWMIB] and the textual conventions defined in
   [PWTC].  The conceptual layering and relationship among all those is
   described in Figure 1 below.  A TDM connection will be a pseudo-wire
   (PW) connection.  It will not be treated as an interface and will
   therefore not be represented in the ifTable.


                       Figure 1:Conceptual Layering

                            +-------------------+
                            |     TDM MIB       |  DS1MIB, DS3MIB,
                            +-------------------+  DS0MIB
                                     |
                            +-------------------+  PW-TDM-MIB,
               Service      |    TDM PW MIB     |  PW-CESOPSN-MIB,
                Layer       +-------------------+  PW-TDMOIP-MIB

              - - - - - - - - - - -  | - - - - - - - - - - - - - - -
               Generic      +-------------------+
                 PW         | Generic PW MIBS   |  PW-TC-MIB,
                Layer       +-------------------+  PW-MIB
              - - - - - - - - - - - -| - - - - - - - - - - - - - - -
                            +-------------------+
                PSN VC      |   MPLS VC MIBS    |  PW-MPLS-MIB
                Layer       +-------------------+
              - - - - - - - - - - - -| - - - - - - - - - - - - - - -
                            +-------------------+
                 PSN        |    MPLS MIBs      |  MPLS-TE-STD-MIB,
                Layer       +-------------------+  MPLS-LSR-STD-MIB




Nicklass                Expires October 31, 2008                [Page 3]

Internet-Draft             Manage TDM over PSN                April 2008


                                 Figure 1

   Comments should be made directly to PWE3 group at pwe3@ietf.org.


2.   Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC-2119 [BCP14].


3.  Terminology

   The Basic terminology used to refer to transmission direction in this
   document is taken from [SATOP] draft that describes a mechanism for
   transporting Structure-Agnostic (TDM) bit-streams over a packet-
   oriented network.  For simplifying this document the terminology is
   used for structure and unstructured TDM as well.

   "PSN-bound" references the traffic direction where TDM data is
   received, adapted to packet based on number of payload bytes per
   packet, assigned a relevant TDM header (Sequence numbers, flags, and
   timestamps (if the RTP header is used)), prepended multiplexing layer
   and PSN headers and sent into the PSN.

   Conversely, The "CE-bound" references the traffic direction where
   packets are received from the PSN, packet payloads are reassembled by
   including a jitter buffer where payload of the received TDM packets
   is stored prior to play-out to the TDM line.  The size of this buffer
   SHOULD be locally configurable to allow accommodation to the PSN-
   specific packet delay variation.

   The CE-bound TDM inter-working function (IWF) SHOULD use the sequence
   number in the control word for detection of lost (LOPS) and mis-
   ordered packets.  If the RTP header is used, the RTP sequence numbers
   MAY be used for the same purposes.


4.  The Internet-Standard Management Framework

   For a detailed overview of the documents that describe the current
   Internet-Standard Management Framework, please refer to section 7 of
   RFC 3410 [RFC3410].

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  MIB objects are generally
   accessed through the Simple Network Management Protocol (SNMP).



Nicklass                Expires October 31, 2008                [Page 4]

Internet-Draft             Manage TDM over PSN                April 2008


   Objects in the MIB are defined using the mechanisms defined in the
   Structure of Management Information (SMI).  This memo specifies a MIB
   module that is compliant to the SMIv2, which is described in STD 58,
   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580
   [RFC2580].


5.  Overview

   This MIB module is designed to satisfy the following requirements and
   constraints:
   1.  Fits within the architecture defined by [RFC3985] and [PWMIB].
   2.  The MIB module supports edge-to-edge emulation of any TDM
       connections.
   3.  The MIB module configures the connection.  The connection
       specific behavior is provided via the supplement MIB modules.
   4.  The MIB module reports various alarms, counters and status
       objects.


6.  TDM MIB module usage

6.1.  Structure of TDM MIB

   The MIB consists of five tables;

   -The TDM PW Table (pwTDMTable) contains generic TDM information
   regarding the PW connection.  It contains the ifIndex of the TDM
   interface, an index to an entry in the generic configuration table
   (pwTDMCfgTable), an index to an entry in the specific configuration
   table (pwCXXXCfgTable, where XXX can be TDMoIP or CESoPSN), config
   error indications, and various status indications.  The two indices
   of the two configuration tables are providing the connection
   parameters.  The TDM interface can be a full link of any TDM type
   like E1 or DS3 for example, or the interface of the bundle holding
   the collection of time slots to be transmitted.  Based on the TDM PW
   type the relevant pwXXXCfgTable from the relevant MIB module will be
   used.  The specific types are:
   o  17 Structure-agnostic E1 over Packet
   o  18 Structure-agnostic T1 (DS1) over Packet
   o  19 Structure-agnostic E3 over Packet
   o  20 Structure-agnostic T3 (DS3) over Packet
   o  21 CESoPSN basic mode (XXX=CESoPSN)
   o  22 TDMoIP AAL1mode (XXX=TDMoIP)
   o  23 CESoPSN TDM with CAS (XXX=CESoPSN)
   o  24 TDMoIP AAL2 Mode (XXX=TDMoIP)

   - The TDM generic parameter Table (pwTDMCfgTable, ) contains TDM



Nicklass                Expires October 31, 2008                [Page 5]

Internet-Draft             Manage TDM over PSN                April 2008


   generic configurable parameters for any TDM Type.

   - The TDM Performance Current Table (pwTDMPerfCurrentTable) contains
   TDM statistics for the current 15-minute period.

   - The TDM Performance Interval Table (pwTDMPerfIntervalTable)
   contains TDM statistics for historical intervals (usually 96 15-
   minute entries to cover a 24 hour period).

   - The TDM Performance one day Interval Table
   (pwTDMPerf1DayIntervalTable) contains TDM statistics for historical
   intervals accumulated per day.  Usually 30 1-Day entries to cover a
   monthly period.

6.2.  TDM Connection configuration Procedure

   Configuring a TDM PW involves the following steps:

   First Configure the parameters of the interface specific layer using
   DS1-MIB and or DS3-MIB.

   Next, if applicable, create a bundle of Time Slots using DS0 Bundle
   MIB [DS0MIB].

   Next, create an entry in the pwTable and configure the PSN tunnels:

   - Follow steps as defined in [PWMIB].

   NOTE: The agent should create an entry in the pwTDMTable for any
   entry created in the pwTable with pwType equal to a value between
   (17) to (24).

   Next complete the TDM PW configuration:

   - If necessary, create an entry in the relevant pwXXXCfgTable and in
   the pwTDMTable (suitable entries may already exist in both tables).

   - Set the index of the relevant pwXXXCfgTable entry and of the
   relevant pwTDMCfgTable entry in the pwTDMTable.

6.3.  TDM PW Monitoring

   Upon making the TDM PW operational, the pwTDMPerfCurrentTable,
   pwTDMPerfIntervalTable, and PwTDMPerf1DayIntervalTable can be used to
   monitor the various counters, indicators, and conditions of the PW.
   All performance parameters are accumulated in daily intervals and in
   fifteen minute intervals.  The number of daily intervals kept by the
   agent are based on the specific implementation.  The fifteen minute



Nicklass                Expires October 31, 2008                [Page 6]

Internet-Draft             Manage TDM over PSN                April 2008


   intervals up to 96 intervals (24 hours worth) are all kept by the
   agent.  Fewer than 96 intervals of data will be available if the
   agent has been restarted within the last 24 hours.  Performance
   parameters continue to be collected when the interface is down.
   There is no requirement for an agent to ensure fixed relationship
   between the start of a fifteen minute interval and any wall clock;
   however some agents may align the fifteen minute intervals with
   quarter hours.  Performance parameters are of types PerfCurrentCount
   and PerfIntervalCount.  These textual conventions are all Gauge32,
   and they are used because it is possible for these objects to
   decrease.


7.  Example of actual TDM PW Setup

   This section provides an example of using the various MIB objects
   described in the following section to set up a TDM PW connection.

   First example, setting a connection of DS1 type.  Second example
   setting a connection with bandwidth of 3 DS0 (time slots).

   While those examples are not meant to illustrate all options of the
   MIB, they are intended as an aid to understanding some of the key
   concepts.  See [PWMIB] for an example of setting up PSN Tunnels.

   First example:
   1.  Configure the DS1 interface using DS1-MIB.
   2.  If needed, Create an entry in the pwTDMCfgTable (assuming index =
       10); Verify that there are no errors in the configuration using
       the relevant object.
   3.  Get a new pwIndexNext [PWMIB] and create a new pwTable entry
       using the value of pwIndexNext (assume here, the PW index = 20).
   4.  Set the pwType [PWMIB] of the new entry to the relevant value
       (17) or (18).  This should create a new entry in the pwTDMTable.
   5.  Configure the newly created TDM PW with the required pointers,
       indices, the relevant entry in pwTDMCfgTable (index 10).

   In [DS1MIB] dsx1IfIndex (ifIndex = 5)













Nicklass                Expires October 31, 2008                [Page 7]

Internet-Draft             Manage TDM over PSN                April 2008


     In pwTDMCfgTable entry: Set the connection characteristic
     parameters:

     {

     pwTDMCfgPayloadSize     = 43 -- payload bytes
     pwTDMCfgPktReorder      = FALSE
     pwTDMCfgRtpHdrUsed      = FALSE
     pwTDMCfgJtrBfrDepth     = 30000 -- micro-seconds

     }

     In pwTDMTable entry: Set the relevant ifIndex, the generic
     TDM Index and the specific TDM index to complete creation:

     {
       pwTDMIfIndex          = 5    -- IfIndex of associated entry
                                      -- in DS1 table
       pwGenTDMCfgIndex      = 10   -- Index of associated entry
                                      -- in pwTDMCfgTable.
       pwRelTDMCfgIndex      = 0    -- No Index in associated entry
                                      -- in pwXXXCfgTable.
     }

   Verify that there are no error bits set in pwTDMConfigError.

   Second example:
   1.  Configure the DS1 interface using DS1-MIB.
   2.  set up a bundle and get its dsx0BundleIfIndex.  Setting up the
       bundle should involve using IFMIB properly.
   3.  Since structured TDMoIP circuit is defined, the next MIB module
       to be used is TDMoIP-MIB.
   4.  If needed, Create an entry in the pwTDMCfgTable (assuming index =
       7):
   5.  If needed, Create an entry in the pwXXXCfgTable (index = 11).
       XXX can be TDMoIP or CESoPSN
   6.  Verify that there are no error in the configuration using the
       relevant object when signaling is in use.
   7.  Get a new pwIndexNext [PWMIB] and create a new pwTable entry
       using the value of pwIndexNext.
   8.  Set the pwType [PWMIB] of the new entry to (24).  This should
       create a new entry in the pwTDMTable.
   9.  Configure the newly created TDM PW with the required pointers,
       indices and the relevant entries in pwTDMCfgTable and in
       pwXXXCfgTable (assuming indexes 7 and 11).






Nicklass                Expires October 31, 2008                [Page 8]

Internet-Draft             Manage TDM over PSN                April 2008


     In [DS1MIB] dsx1IfIndex (ifIndex)   = 5
     In [DS0MIB] dsx0BundleIfIndex       = 8

     In pwTDMTable entry: Set the relevant ifIndex, the generic
     TDM Index and the specific TDM index to complete creation:

     {
       pwTDMIfIndex          =  8   -- IfIndex of associated entry
                                    -- in DS0 table
       pwGenTDMCfgIndex     =  7   -- Index of associated entry
                                    -- in pwTDMCfgTable.
       pwRelTDMCfgIndex     = 11   -- Index of associated entry
                                    -- in pwXXXCfgTable.
       -- pwXXXCfgTable might be an implementation specific table too.
     }

     Verify that there are no error bits set in pwTDMConfigError.


8.   Object definition



   PW-TDM-MIB DEFINITIONS ::= BEGIN

   IMPORTS
     MODULE-IDENTITY, OBJECT-TYPE,
     Integer32, Counter32, Unsigned32, mib-2
        FROM SNMPv2-SMI

     MODULE-COMPLIANCE, OBJECT-GROUP
        FROM SNMPv2-CONF

     TEXTUAL-CONVENTION, TruthValue,  RowStatus, StorageType,
      TimeStamp
        FROM SNMPv2-TC

     InterfaceIndexOrZero
        FROM IF-MIB                 -- [IFMIB]

     SnmpAdminString
        FROM SNMP-FRAMEWORK-MIB     -- [RFC3411]

     PerfCurrentCount, PerfIntervalCount
        FROM PerfHist-TC-MIB

     pwIndex
        FROM PW-STD-MIB



Nicklass                Expires October 31, 2008                [Page 9]

Internet-Draft             Manage TDM over PSN                April 2008


     PwCfgIndexOrzero
        FROM PW-TC-STD-MIB;

   -- The TDM MIB

     pwTDMMIB MODULE-IDENTITY

     LAST-UPDATED "200804290000Z"
     ORGANIZATION "Pseudo-Wire Emulation Edge-to-Edge (PWE3)
                   Working Group"
     CONTACT-INFO
         "        Orly Nicklass
          Postal: Nokia Siemens Networks
                  3 Hanagar st. Neve Ne'eman
                  Hod-Hasharon, Israel
                  Email: orly.nicklass@nsn.com

          The PWE3 Working Group (email distribution pwe3@ietf.org,
          http://www.ietf.org/html.charters/pwe3-charter.html)
          "

     DESCRIPTION
         "This MIB contains managed object definitions for
          encapsulating TDM (T1,E1, T3, E3, NxDS0) as
          pseudo-wires over packet-switching networks (PSN).

          This MIB supplements the PW-STD-MIB as in: Zelig, D.,
          Nadeau,T. 'Pseudo Wire (PW) Management Information Base'.
          The PW-STD-MIB contains structures and MIB associations
          generic to Pseudo-Wire (PW) emulation. PW-specific
          MIBs (such as this) contain config and stats for specific
          PW types.

          Copyright (C) The IETF Trust (2007). This version
          of this MIB module is part of RFC yyyy; see the RFC
          itself for full legal notices.
   -- RFC Ed.: replace yyyy with actual RFC number & remove this
          note"

     REVISION  "200804290000Z"
     DESCRIPTION
         "Initial version published as part of RFC YYYY."
   -- RFC Editor: please replace YYYY with IANA assigned value, and
   -- delete this note.

     ::= { mib-2 XXX }
   -- RFC Editor: replace XXX with IANA-assigned number & remove this
   -- note. Please see IANA considerations section



Nicklass                Expires October 31, 2008               [Page 10]

Internet-Draft             Manage TDM over PSN                April 2008


   -- Local Textual conventions
      PwTDMCfgIndex ::= TEXTUAL-CONVENTION
        STATUS      current
        DESCRIPTION
             "Index into the relevant pwXXXCfgTable."
        SYNTAX Unsigned32 (1..4294967295)



   -- Notifications
   pwTDMNotifications OBJECT IDENTIFIER
                                ::= { pwTDMMIB 0 }
   -- Tables, Scalars
   pwTDMObjects       OBJECT IDENTIFIER
                                ::= { pwTDMMIB 1 }
   -- Conformance
   pwTDMConformance   OBJECT IDENTIFIER
                                ::= { pwTDMMIB 2 }

   -- TDM PW table

   pwTDMTable OBJECT-TYPE
     SYNTAX        SEQUENCE OF PwTDMEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "This table contains basic information including ifIndex,
          and pointers to entries in the relevant TDM config
          tables for this TDM PW."
     ::= { pwTDMObjects 1 }

   pwTDMEntry OBJECT-TYPE
     SYNTAX        PwTDMEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "This table is indexed by the same index that was
          created for the associated entry in the PW Table
          (in the PW-STD-MIB).

            - The PwIndex.

          An entry is created in this table by the agent for every
          entry in the pwTable with a pwType equal to one of the
          following:
          e1Satop(17), t1Satop(18), e3Satop(19), t3Satop(20),
          basicCesPsn(21), basicTdmIp(22),  tdmCasCesPsn(23),
          tdmCasTdmIp(24).



Nicklass                Expires October 31, 2008               [Page 11]

Internet-Draft             Manage TDM over PSN                April 2008


          Unless otherwise specified, all writeable objects in this
          table MUST NOT be changed after row activation in the
          generic pwTable (see [PWMIB])and values must persist
          after reboot."

     INDEX  { pwIndex }

        ::= { pwTDMTable 1 }

   PwTDMEntry ::= SEQUENCE {

        pwTDMRate                      Integer32,
        pwTDMIfIndex                   InterfaceIndexOrZero,
        pwGenTDMCfgIndex               PwCfgIndexOrzero,
        pwRelTDMCfgIndex               PwCfgIndexOrzero,

        pwTDMConfigError               BITS,
        pwTDMTimeElapsed               Integer32,
        pwTDMValidIntervals            Integer32,
        pwTDMValidDayIntervals         Integer32,
        pwTDMLastEsTimeStamp           TimeStamp
        }

   pwTDMRate OBJECT-TYPE
     SYNTAX     Integer32
     MAX-ACCESS    read-write
     STATUS        current
     DESCRIPTION
         "The parameter represents the bit-rate of the TDM service
          in multiples of the 'basic' 64 Kbit/s rate [TDMCP-EXT].
          It complements the definition of pwType used in
          PW-STD-MIB.
          For structure-agnostic the following should be used:
          a) Satop E1 - 32
          b) Satop T1 emulation:
             i)   MUST be set to 24 in the basic emulation mode
             ii)  MUST be set to 25 for the 'Octet-aligned T1'
                  emulation mode
          c) Satop E3 - 535
          d) Satop T3 - 699
          For all kinds of structure-aware emulation, this parameter
          MUST be set to N where N is the number of DS0 channels
          in the corresponding attachment circuit."
     REFERENCE
      "TDMCP-EXT"
     DEFVAL { 32 }
     ::= { pwTDMEntry 1 }




Nicklass                Expires October 31, 2008               [Page 12]

Internet-Draft             Manage TDM over PSN                April 2008


   pwTDMIfIndex OBJECT-TYPE
     SYNTAX        InterfaceIndexOrZero
     MAX-ACCESS    read-write
     STATUS        current
     DESCRIPTION
         "This is a unique index within the ifTable. It represents
          the interface index of the full link or the interface
          index for the bundle holding the group of
          time slots to be transmitted via this PW connection.

          A value of zero indicates an interface index that has yet
          to be determined.
          Once set, if the TDM ifIndex is (for some reason) later
          removed, the agent SHOULD delete the associated PW rows
          (e.g., this pwTDMTable entry). If the agent does not
          delete the rows,  the agent MUST set this object to
          zero."
     ::= { pwTDMEntry 2 }

   pwGenTDMCfgIndex OBJECT-TYPE
     SYNTAX        PwCfgIndexOrzero
     MAX-ACCESS    read-write
     STATUS        current
     DESCRIPTION
         "Index to the generic parameters in the TDM configuration
          table that appears in this MIB module. It is likely that
          multiple TDM PWs of the same characteristic will share
          a single TDM Cfg entry."
     ::= { pwTDMEntry 3 }

   pwRelTDMCfgIndex OBJECT-TYPE
     SYNTAX        PwCfgIndexOrzero
     MAX-ACCESS    read-write
     STATUS        current
     DESCRIPTION
         "Index to the relevant TDM configuration table entry
          that appears in one of the related MIB modules
          such as TDMoIP or CESoPSN. It is likely that
          multiple TDM PWs of the same characteristic will share
          a single configuration entry of the relevant type.
          The value 0 implies no entry in other related MIB"
     ::= { pwTDMEntry 4 }

   pwTDMConfigError OBJECT-TYPE
     SYNTAX BITS {
           notApplicable                 ( 0),
           tdmTypeIncompatible           ( 1),
           peerRtpIncompatible           ( 2),



Nicklass                Expires October 31, 2008               [Page 13]

Internet-Draft             Manage TDM over PSN                April 2008


           peerPayloadSizeIncompatible   ( 3)
           }
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Any of the bits are set if the local configuration is
          not compatible with the peer configuration as available
          from the various parameters options. Setting is done based
          on signaling, or else value (0) will be set.

          -tdmTypeIncompatible bit is set if the local configuration
          is not carrying the same TDM type as the peer configuration.

          -peerRtpIncompatible bit is set if the local configuration
          is configured to send RTP packets for this PW, and the
          remote is not capable of accepting RTP packets.

          -peerPayloadSizeIncompatible bit is set if the local
          configuration is not carrying the same Payload Size as the
          peer configuration.  "
     ::= { pwTDMEntry 5}

   pwTDMTimeElapsed OBJECT-TYPE
      SYNTAX  Integer32 (1..900)
      MAX-ACCESS  read-only
      STATUS  current
      DESCRIPTION
          "The number of seconds, including partial seconds,
           that have elapsed since the beginning of the current
           measurement period. If, for some reason, such as an
           adjustment in the system's time-of-day clock, the
           current interval exceeds the maximum value, the
           agent will return the maximum value."
      ::= { pwTDMEntry 6}

   pwTDMValidIntervals OBJECT-TYPE
      SYNTAX  Integer32 (0..96)
      MAX-ACCESS  read-only
      STATUS  current
      DESCRIPTION
          "The number of previous 15-minute intervals for which data
           was collected.
           An agent with TDM capability must be capable of supporting
           at least n intervals. The minimum value of n is 4, The
           default of n is 32 and the maximum value of n is 96.
           The value will be n unless the measurement was (re-)
           started within the last (n*15) minutes, in which case
           the value will be the number of complete 15 minute



Nicklass                Expires October 31, 2008               [Page 14]

Internet-Draft             Manage TDM over PSN                April 2008


           intervals for which the agent has at least some data.
           In certain cases(e.g., in the case where the agent is
           a proxy) it is possible that some intervals are unavailable.
           In this case, this interval is the maximum interval number
           for which data is available. "
      ::= { pwTDMEntry 7}

   pwTDMValidDayIntervals OBJECT-TYPE
      SYNTAX  Integer32 (0..30)
      MAX-ACCESS  read-only
      STATUS  current
      DESCRIPTION
          "The number of previous days for which data
           was collected.
           An agent with TDM capability must be capable of supporting
           at least n intervals. The minimum value of n is 1, The
           default of n is 1 and the maximum value of n is 30."
      ::= { pwTDMEntry 8}

   pwTDMLastEsTimeStamp OBJECT-TYPE
     SYNTAX      TimeStamp
     MAX-ACCESS  read-only
     STATUS      current
     DESCRIPTION
         "The value of sysUpTime at the most recent occasion at
          which the TDM PW entered the ES or SES state."
     ::= { pwTDMEntry 11}

   -- End of TDM PW table

   -- PW Generic TDM PW Configuration Table

   pwTDMCfgIndexNext OBJECT-TYPE
     SYNTAX            Unsigned32
     MAX-ACCESS        read-only
     STATUS            current
     DESCRIPTION
         "This object contains the value to be used for
          pwTDMCfgIndex when creating entries in the
          pwTDMCfgTable. The value 0 indicates that no
          unassigned entries are available.  To obtain the
          value of pwTDMCfgIndexNext for a new entry in the
          pwTDMCfgTable, the manager issues a management
          protocol retrieval operation. The agent will
          determine through its local policy when this
          index value will be made available for reuse."

     ::= { pwTDMObjects 2 }



Nicklass                Expires October 31, 2008               [Page 15]

Internet-Draft             Manage TDM over PSN                April 2008


   pwTDMCfgTable   OBJECT-TYPE
     SYNTAX                  SEQUENCE OF PwTDMCfgEntry
     MAX-ACCESS              not-accessible
     STATUS                  current
     DESCRIPTION
         "This table contains a set of parameters that may be
          referenced by one or more TDM PWs in pwTDMTable."

     ::= { pwTDMObjects 3 }

   pwTDMCfgEntry   OBJECT-TYPE
     SYNTAX            PwTDMCfgEntry
     MAX-ACCESS        not-accessible
     STATUS            current
     DESCRIPTION
         "These parameters define the characteristics of a
          TDM PW. They are grouped here to ease NMS burden.
          Once an entry is created here it may be re-used
          by many PWs.
          Unless otherwise specified, all objects in this table
          MUST NOT be changed after row activation (see [PWMIB])
          if the row index is in use by an entry in pwTDMTable.
          Rows must persist after reboot."

     INDEX  { pwTDMCfgIndex }

        ::= { pwTDMCfgTable 1 }

   PwTDMCfgEntry ::= SEQUENCE {
        pwTDMCfgIndex                    PwTDMCfgIndex,
        pwTDMCfgRowStatus                RowStatus,
        pwTDMCfgPayloadSize              Unsigned32,
        pwTDMCfgPktReorder               TruthValue,
        pwTDMCfgRtpHdrUsed               TruthValue,
        pwTDMCfgJtrBfrDepth              Unsigned32,
        pwTDMCfgPayloadSuppression       INTEGER,

        pwTDMCfgConsecPktsInSynch        Unsigned32,
        pwTDMCfgConsecMissPktsOutSynch   Unsigned32,
        pwTDMCfgSetUp2SynchTimeOut       Unsigned32,

        pwTDMCfgPktReplacePolicy         INTEGER,

        pwTDMCfgAvePktLossTimeWindow     Integer32,
        pwTDMCfgExcessivePktLossThreshold   Unsigned32,

        pwTDMCfgAlarmThreshold           Unsigned32,
        pwTDMCfgClearAlarmThreshold      Unsigned32,



Nicklass                Expires October 31, 2008               [Page 16]

Internet-Draft             Manage TDM over PSN                April 2008


        pwTDMCfgMissingPktsToSes         Unsigned32,

        pwTDMCfgTimestampMode            INTEGER,
        pwTDMCfgStorageType              StorageType,
        pwTDMCfgPktFiller                Unsigned32,
        pwTDMCfgName                     SnmpAdminString
        }

   pwTDMCfgIndex   OBJECT-TYPE
     SYNTAX        PwTDMCfgIndex
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "Index to an entry in this table. When an NMS creates
          a new entry/row in this table, it best makes use of
          the value of the pwTDMCfgIndexNext object in order to
          find a free or available index value."
     ::= { pwTDMCfgEntry 1 }

   pwTDMCfgRowStatus    OBJECT-TYPE
     SYNTAX               RowStatus
     MAX-ACCESS           read-create
     STATUS               current
     DESCRIPTION
         "Object used for creating, modifying, and deleting
          a row from this table. The following objects cannot be
          modified if the entry is in use and the status is active:
          pwTDMCfgPayloadSize, pwTDMCfgRtpHdrUsed,
          pwTDMCfgJtrBfrDepth, and pwTDMCfgPayloadSuppression.
          The row cannot be deleted if the entry is in use"
     ::= { pwTDMCfgEntry 2 }

   pwTDMCfgPayloadSize OBJECT-TYPE
     SYNTAX        Unsigned32
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "The value of this object indicates the PayLoad Size (in bytes)
          to be defined during the PW setUp. Upon TX, implementation
          must be capable of carrying that amount of bytes.
          Upon RX, when the LEN field is set to 0, the payload of
          packet  MUST assume this size, and if the actual
          packet size is inconsistent with this length,
          the packet MUST be considered to be malformed. "
     ::= { pwTDMCfgEntry 4 }

   pwTDMCfgPktReorder OBJECT-TYPE
     SYNTAX        TruthValue



Nicklass                Expires October 31, 2008               [Page 17]

Internet-Draft             Manage TDM over PSN                April 2008


     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "If set True: as CE bound packets are queued in the
          jitter buffer, out of order packets are re-ordered. The
          maximum sequence number differential (i.e., the range in
          which re-sequencing can occur) is dependant on the depth
          of the jitter buffer. See pwTDMCfgJtrBfrDepth.

          NOTE: Some implementations may not support this feature.
          The agent should then reject a SET request for true."
     ::= { pwTDMCfgEntry 5 }

   pwTDMCfgRtpHdrUsed OBJECT-TYPE
     SYNTAX        TruthValue
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "If set to False: an RTP header is not pre-pended to the
          TDM packet."
     REFERENCE
      "SATOP"
     DEFVAL { false }
     ::= { pwTDMCfgEntry 6 }

   pwTDMCfgJtrBfrDepth OBJECT-TYPE
     SYNTAX        Unsigned32
     UNITS         "microsecond"
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "The size of this buffer SHOULD be locally
          configured to allow accommodation to the PSN-specific packet
          delay variation.

          If configured to a value not supported by the
          implementation, the agent MUST return an error code
          'jtrBfrDepth' in 'pwTDMConfigError '

          NOTE: jitter buffers are a limited resource to
          be managed. The actual size should be at least twice as big
          as the value of pwTDMCfgJtrBfrDepth "
     DEFVAL { 3000 }

     ::= { pwTDMCfgEntry 7 }

   pwTDMCfgPayloadSuppression  OBJECT-TYPE
     SYNTAX        INTEGER



Nicklass                Expires October 31, 2008               [Page 18]

Internet-Draft             Manage TDM over PSN                April 2008


                    {
                       enable  ( 1),
                       disable ( 2)
                    }
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "Selecting 'enable' means: Payload suppression is allowed.
          Payload MAY be omitted in order to conserve bandwidth.
          Selecting 'disable' means: no suppresion under any
          condition.
          Object  MAY be changed at any time."
    DEFVAL { disable }

     ::= { pwTDMCfgEntry 8 }

   pwTDMCfgConsecPktsInSynch          OBJECT-TYPE
     SYNTAX        Unsigned32 (1..10)
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "The number of consecutive packets with sequential
          sequence numbers that are required to exit the
          LOPS state.
          Object  MAY be changed only when the related PW is
          defined as not active."
     REFERENCE
         "SATOP"
     DEFVAL { 2 }
     ::= { pwTDMCfgEntry 9 }

   pwTDMCfgConsecMissPktsOutSynch  OBJECT-TYPE
     SYNTAX        Unsigned32 (1..15)
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "The number of consecutive missing packets that are
          required to enter the LOPS state.
          Object  MAY be changed only when the related PW is
          defined as not active."
     REFERENCE
         "SATOP"
     DEFVAL { 10 }
     ::= { pwTDMCfgEntry 10 }

   pwTDMCfgSetUp2SynchTimeOut OBJECT-TYPE
     SYNTAX        Unsigned32
     UNITS         "millisecond"



Nicklass                Expires October 31, 2008               [Page 19]

Internet-Draft             Manage TDM over PSN                April 2008


     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "The amount of time the host should wait before declaring the
          pseudo wire in down state,  if the number of consecutive
          TDM packets that have been received after changing the
          adminstrative status to up and after finalization of
          signaling (if supported) between the two PEs is smaller
          than pwTDMCfgConsecPktsInSynch. Once the the pw has
          OperStatus of 'up' this parameter is no longer valid. This
          parameter is defined to ensure that the host does not
          prematurely inform failure of the pw. In particular pw 'down'
          notifications should not be sent before expiration of this
          timer. This parameter is valid only after adminisrative
          changes of the status of the pw. If the pw fails due to
          network impairments a 'down' notification should be sent.
          Object  MAY be changed only when the related PW is
          defined as not active."
     DEFVAL {5000}
     ::= { pwTDMCfgEntry 11 }

   pwTDMCfgPktReplacePolicy OBJECT-TYPE
     SYNTAX        INTEGER
                         {
                          allOnes (1),
                          implementationSpecific(2),
                          filler (3)  --user defined
                          }
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "This parameter determines the value to be played when CE bound
          packets have over/underflow the jitter buffer, or are missing
          for any reason. This byte pattern is sent(played)on
          the TDM line. Selecting implementationSpecific(2) implies
          agent specific algorithm. Selecting filler(3) requires setting
          of pwTDMCfgPktFiller.
          Object  MAY be changed only when the related PW is
          defined as not active."
     DEFVAL { allOnes } -- Play AIS
     ::= { pwTDMCfgEntry 12 }

   pwTDMCfgAvePktLossTimeWindow OBJECT-TYPE
     SYNTAX        Integer32
     UNITS         "millisecond"
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION



Nicklass                Expires October 31, 2008               [Page 20]

Internet-Draft             Manage TDM over PSN                April 2008


         "The length of time over which the average packet
          loss rate should be computed to detect Excessive packet
          loss rate.
          Object  MAY be changed only when the related PW is
          defined as not active."
     ::= { pwTDMCfgEntry 13}

   pwTDMCfgExcessivePktLossThreshold OBJECT-TYPE
     SYNTAX        Unsigned32
     UNITS         "Percent"
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "Excessive packet loss rate is detected by computing the
          average packetloss rate over a pwTDMCfgAvePktLossTimeWindow
          amount of time and comparing it with this threshold value.
          The rate is expressed in precentage.
          Object  MAY be changed only when the related PW is
          defined as not active."
     ::= { pwTDMCfgEntry 14 }


   pwTDMCfgAlarmThreshold OBJECT-TYPE
     SYNTAX        Unsigned32
     UNITS         "milisec"
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "Alarms are only reported when the defect state persists
          for the length of time specified by this object.
          Object  MAY be changed only when the related PW is
          defined as not active."
     DEFVAL { 2500 }
     ::= { pwTDMCfgEntry 15 }

   pwTDMCfgClearAlarmThreshold OBJECT-TYPE
     SYNTAX        Unsigned32
     UNITS         "milisec"
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "Alarm MUST be cleared after the corresponding defect is
          undetected for the amount of time specified by this object.
          Object  MAY be changed only when the related PW is
          defined as not active."
     DEFVAL { 10000 }
     ::= { pwTDMCfgEntry 16 }




Nicklass                Expires October 31, 2008               [Page 21]

Internet-Draft             Manage TDM over PSN                April 2008


   pwTDMCfgMissingPktsToSes OBJECT-TYPE
     SYNTAX        Unsigned32
     UNITS         "Percent"
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "Percent of missing packets detected (consecutive or not)
          within a 1 second window to cause a Severely Error
          Second (SES) to be counted.
          Object  MAY be changed only when the related PW is
          defined as not active."
     DEFVAL { 30 }
     ::= { pwTDMCfgEntry 17 }

   pwTDMCfgTimestampMode  OBJECT-TYPE
     SYNTAX        INTEGER
                    {
                     notApplicable (1),
                     absolute      (2),
                     differential  (3)
                    }

     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "Timestamp generation MAY be used in one of the following
          modes:
          1. Absolute mode: the PSN-bound IWF sets timestamps
           using the clock recovered from the incoming TDM attachment
           circuit. As a consequence, the timestamps are closely
           correlated with the sequence numbers. All TDM implementations
           that support usage of the RTP header MUST support this mode.
          2. Differential mode: Both IWFs have access to a common high-
           quality timing source, and this source is used for timestamp
           generation. Support of this mode is OPTIONAL.
           Object  MAY be changed only when the related PW is
           defined as not active."

     ::= { pwTDMCfgEntry 18 }

   pwTDMCfgStorageType  OBJECT-TYPE
     SYNTAX            StorageType
     MAX-ACCESS        read-create
     STATUS            current
     DESCRIPTION
         "This variable indicates the storage type for this
          row. Conceptual rows having the value permanent(4) must
          allow write-access to all columnar objects."



Nicklass                Expires October 31, 2008               [Page 22]

Internet-Draft             Manage TDM over PSN                April 2008


     ::= { pwTDMCfgEntry 19 }

   pwTDMCfgPktFiller OBJECT-TYPE
      SYNTAX        Unsigned32 (0..255)
      MAX-ACCESS    read-create
      STATUS        current
      DESCRIPTION
          "Filler byte pattern played out on the TDM
          interface if pwTDMCfgPktReplacePolicy
          was set to filler(3).
          Object  MAY be changed only when the related PW is
          defined as not active."
      DEFVAL
          { 255 } -- Play all ones, equal to AIS indications.
      ::= { pwTDMCfgEntry 20 }


   pwTDMCfgName OBJECT-TYPE
     SYNTAX        SnmpAdminString
     MAX-ACCESS    read-create
     STATUS        current
     DESCRIPTION
         "A descriptive string, prefereably unique name, to an entry
         in this table.
         Object  MAY be changed at any time."
     ::= { pwTDMCfgEntry 21 }

   -- End of Table

   -- The following counters work together to integrate
   -- errors and the lack of errors on the TDM PW. An error is
   -- caused by a missing packet. Missing packet can be a result
   -- of: packet loss in the network, (uncorrectable) packet out
   -- of sequence, packet length error, jitter buffer overflow,
   -- and jitter buffer underflow. The result is declaring whether
   -- or not the TDM PW is in Loss of Packet (LOPS) state.

   -- TDM PW Performance Current Table.

   pwTDMPerfCurrentTable OBJECT-TYPE
     SYNTAX        SEQUENCE OF PwTDMPerfCurrentEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "The current 15 minute interval counts are in
          this table.

          This table provides per TDM PW performance information."



Nicklass                Expires October 31, 2008               [Page 23]

Internet-Draft             Manage TDM over PSN                April 2008


     ::= { pwTDMObjects 5 }

   pwTDMPerfCurrentEntry OBJECT-TYPE
     SYNTAX        PwTDMPerfCurrentEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "An entry in this table is created by the agent for every
          pwTDMTable entry. After 15 minutes, the contents of this
          table entry are copied to a new entry in the
          pwTDMPerfInterval table and the counts in this entry
          are reset to zero."

     INDEX  { pwIndex }

     ::= { pwTDMPerfCurrentTable 1 }

   PwTDMPerfCurrentEntry ::= SEQUENCE {

        pwTDMPerfCurrentMissingPkts         PerfCurrentCount,
        pwTDMPerfCurrentPktsReOrder         PerfCurrentCount,
        pwTDMPerfCurrentJtrBfrUnderruns     PerfCurrentCount,
        pwTDMPerfCurrentMisOrderDropped     PerfCurrentCount,
        pwTDMPerfCurrentMalformedPkt        PerfCurrentCount,

        pwTDMPerfCurrentESs                 PerfCurrentCount,
        pwTDMPerfCurrentSESs                PerfCurrentCount,
        pwTDMPerfCurrentUASs                PerfCurrentCount,
        pwTDMPerfCurrentFC                  PerfCurrentCount
     }

   pwTDMPerfCurrentMissingPkts OBJECT-TYPE
     SYNTAX        PerfCurrentCount
     MAX-ACCESS    read-only
     STATUS       current
     DESCRIPTION
         "Number of missing packets (as detected via control word
          sequence number gaps)."
     ::= { pwTDMPerfCurrentEntry 1 }

   pwTDMPerfCurrentPktsReOrder OBJECT-TYPE
     SYNTAX        PerfCurrentCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of sequence (via control
          word sequence number), but successfully re-ordered.
          Note: some implementations may not support this Feature."



Nicklass                Expires October 31, 2008               [Page 24]

Internet-Draft             Manage TDM over PSN                April 2008


     ::= { pwTDMPerfCurrentEntry 2 }

   pwTDMPerfCurrentJtrBfrUnderruns OBJECT-TYPE
     SYNTAX        PerfCurrentCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of times a packet needed to be played
          out and the jitter buffer was empty."
     ::= { pwTDMPerfCurrentEntry 3 }

   pwTDMPerfCurrentMisOrderDropped OBJECT-TYPE
     SYNTAX        PerfCurrentCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of order(via control word
          sequence numbers), and could not be re-ordered, or could
          not fit in the jitter buffer."
      ::= { pwTDMPerfCurrentEntry 4 }

   pwTDMPerfCurrentMalformedPkt OBJECT-TYPE
     SYNTAX        PerfCurrentCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected with unexpected size, or
          bad headers' stack"
     ::= { pwTDMPerfCurrentEntry 5 }

   pwTDMPerfCurrentESs OBJECT-TYPE
      SYNTAX       PerfCurrentCount
      MAX-ACCESS   read-only
      STATUS       current
      DESCRIPTION
          "The counter associated with the number of Error
           Seconds encountered. Any malformed packet, seq. error, LOPS
           and similar are considered as error second"
      ::= { pwTDMPerfCurrentEntry 6 }

   pwTDMPerfCurrentSESs OBJECT-TYPE
      SYNTAX        PerfCurrentCount
      MAX-ACCESS    read-only
      STATUS        current
      DESCRIPTION
          "The counter associated with the number of
           Severely Error Seconds encountered. "
      ::= { pwTDMPerfCurrentEntry 7 }



Nicklass                Expires October 31, 2008               [Page 25]

Internet-Draft             Manage TDM over PSN                April 2008


   pwTDMPerfCurrentUASs OBJECT-TYPE
      SYNTAX        PerfCurrentCount
      MAX-ACCESS    read-only
      STATUS        current
      DESCRIPTION
          "The counter associated with the number of
           Unavailable Seconds encountered. Any consequtive
           ten seconds of SES are counted as one UAS"
      ::= { pwTDMPerfCurrentEntry 8 }

   pwTDMPerfCurrentFC OBJECT-TYPE
      SYNTAX        PerfCurrentCount
      MAX-ACCESS    read-only
      STATUS        current
      DESCRIPTION
          "TDM Failure Counts (FC-TDM). The number of TDM failure
           events. A failure event begins when the LOPS failure
           is declared, and ends when the failure is cleared. A
           failure event that begins in one period and ends in
           another period is counted only in the period in which
           it begins."
      ::= { pwTDMPerfCurrentEntry 9 }

   -- End TDM PW Performance Current Interval Table


   -- TDM PW Performance Interval Table.

   pwTDMPerfIntervalTable OBJECT-TYPE
     SYNTAX        SEQUENCE OF PwTDMPerfIntervalEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "This table provides performance information per TDM PW
          similar to the pwTDMPerfCurrentTable above. However,
          these counts represent historical 15 minute intervals.
          Typically, this table will have a maximum of 96 entries
          for a 24 hour period, but is not limited to this. "
     ::= { pwTDMObjects 6 }

   pwTDMPerfIntervalEntry OBJECT-TYPE
     SYNTAX        PwTDMPerfIntervalEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "An entry in this table is created by the agent for
          every pwTDMPerfCurrentEntry that is 15 minutes old.
          The contents of the Current entry are copied to the new



Nicklass                Expires October 31, 2008               [Page 26]

Internet-Draft             Manage TDM over PSN                April 2008


          entry here. The Current entry, then resets its counts
          to zero for the next current 15 minute interval. "

     INDEX  { pwIndex, pwTDMPerfIntervalNumber }

     ::= { pwTDMPerfIntervalTable 1 }

   PwTDMPerfIntervalEntry ::= SEQUENCE {
        pwTDMPerfIntervalNumber           Unsigned32,
        pwTDMPerfIntervalValidData        TruthValue,
        pwTDMPerfIntervalDuration         Unsigned32,

        pwTDMPerfIntervalMissingPkts      PerfIntervalCount,
        pwTDMPerfIntervalPktsReOrder      PerfIntervalCount,
        pwTDMPerfIntervalJtrBfrUnderruns  PerfIntervalCount,
        pwTDMPerfIntervalMisOrderDropped  PerfIntervalCount,
        pwTDMPerfIntervalMalformedPkt     PerfIntervalCount,

        pwTDMPerfIntervalESs              PerfIntervalCount,
        pwTDMPerfIntervalSESs             PerfIntervalCount,
        pwTDMPerfIntervalUASs             PerfIntervalCount,
        pwTDMPerfIntervalFC               PerfIntervalCount
        }

   pwTDMPerfIntervalNumber OBJECT-TYPE
     SYNTAX        Unsigned32 (1..96)
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "A number (normally between 1 and 96 to cover a 24 hour
          period) which identifies the interval for which the set
          of statistics is available. The interval identified by 1
          is the most recently completed 15 minute interval, and
          the interval identified by N is the interval immediately
          preceding the one identified by N-1. The minimum range of
          N is 1 through 4. The default range is 1 through 32. The
          maximum value of N is 1 through 96."
     ::= { pwTDMPerfIntervalEntry 1 }

   pwTDMPerfIntervalValidData OBJECT-TYPE
     SYNTAX        TruthValue
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "This variable indicates if the data for this interval
          is valid."
     ::= { pwTDMPerfIntervalEntry 2 }




Nicklass                Expires October 31, 2008               [Page 27]

Internet-Draft             Manage TDM over PSN                April 2008


   pwTDMPerfIntervalDuration OBJECT-TYPE
      SYNTAX      Unsigned32
      UNITS       "seconds"
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
        "The duration of a particular interval in seconds,
         Adjustments in the system's time-of-day clock, may
         cause the interval to be greater or less than, the
         normal value. Therefore this actual interval value
         is provided."
      ::= { pwTDMPerfIntervalEntry 3 }

   pwTDMPerfIntervalMissingPkts OBJECT-TYPE
     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of missing packets (as detected via control
          word sequence number gaps)."
     ::= { pwTDMPerfIntervalEntry 4 }

   pwTDMPerfIntervalPktsReOrder OBJECT-TYPE
     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of sequence (via control
          word sequence number), but successfully re-ordered.
          Note: some implementations may not support this
          Feature."
     ::= { pwTDMPerfIntervalEntry 5 }

   pwTDMPerfIntervalJtrBfrUnderruns OBJECT-TYPE
     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of times a packet needed to be played
          out and the jitter buffer was empty."
     ::= { pwTDMPerfIntervalEntry 6 }

   pwTDMPerfIntervalMisOrderDropped OBJECT-TYPE
     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of order(via control word



Nicklass                Expires October 31, 2008               [Page 28]

Internet-Draft             Manage TDM over PSN                April 2008


          sequence numbers), and could not be re-ordered, or could
          not fit in the jitter buffer."
     ::= { pwTDMPerfIntervalEntry 7 }

   pwTDMPerfIntervalMalformedPkt OBJECT-TYPE
     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected with unexpected size, or
          bad headers' stack"
     ::= { pwTDMPerfIntervalEntry 8 }


   pwTDMPerfIntervalESs OBJECT-TYPE
     SYNTAX       PerfIntervalCount
     MAX-ACCESS   read-only
     STATUS       current
     DESCRIPTION
         "The counter associated with the number of Error
          Seconds encountered."
     ::= { pwTDMPerfIntervalEntry 9 }

   pwTDMPerfIntervalSESs OBJECT-TYPE
     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "The counter associated with the number of
          Severely Error Seconds encountered."
     ::= { pwTDMPerfIntervalEntry 10 }

   pwTDMPerfIntervalUASs OBJECT-TYPE
     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "The counter associated with the number of
          Unavailable Seconds encountered."
     ::= { pwTDMPerfIntervalEntry 11 }

   pwTDMPerfIntervalFC OBJECT-TYPE
     SYNTAX        PerfIntervalCount
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "TDM Failure Counts (FC-TDM). The number of TDM failure
          events. A failure event begins when the LOPS failure



Nicklass                Expires October 31, 2008               [Page 29]

Internet-Draft             Manage TDM over PSN                April 2008


          is declared, and ends when the failure is cleared. A
          failure event that begins in one period and ends in
          another period is counted only in the period in which
          it begins."
     ::= { pwTDMPerfIntervalEntry 12 }

   -- End TDM PW Performance Interval Table


   -- TDM PW 1day Performance Table

   pwTDMPerf1DayIntervalTable OBJECT-TYPE
     SYNTAX        SEQUENCE OF PwTDMPerf1DayIntervalEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "This table provides performance information per TDM PW
          similar to the pwTDMPerfIntervalTable above. However,
          these counters represent historical 1 day intervals up to
          one full month. The table consists of real time data, as
          such it is not persistence across re-boot."
     ::= { pwTDMObjects 7 }

   pwTDMPerf1DayIntervalEntry OBJECT-TYPE
     SYNTAX        PwTDMPerf1DayIntervalEntry
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "An entry is created in this table by the agent
          for every entry in the pwTDMTable table."

     INDEX  { pwIndex,pwTDMPerf1DayIntervalNumber }

        ::= { pwTDMPerf1DayIntervalTable 1 }

   PwTDMPerf1DayIntervalEntry ::= SEQUENCE {
        pwTDMPerf1DayIntervalNumber                Unsigned32,
        pwTDMPerf1DayIntervalValidData             TruthValue,
        pwTDMPerf1DayIntervalDuration              Unsigned32,
        pwTDMPerf1DayIntervalMissingPkts           Counter32,
        pwTDMPerf1DayIntervalPktsReOrder           Counter32,
        pwTDMPerf1DayIntervalJtrBfrUnderruns       Counter32,
        pwTDMPerf1DayIntervalMisOrderDropped       Counter32,
        pwTDMPerf1DayIntervalMalformedPkt          Counter32,

        pwTDMPerf1DayIntervalESs                   Counter32,
        pwTDMPerf1DayIntervalSESs                  Counter32,
        pwTDMPerf1DayIntervalUASs                  Counter32,



Nicklass                Expires October 31, 2008               [Page 30]

Internet-Draft             Manage TDM over PSN                April 2008


        pwTDMPerf1DayIntervalFC                    Counter32
        }

   pwTDMPerf1DayIntervalNumber OBJECT-TYPE
     SYNTAX        Unsigned32 (1..30)
     MAX-ACCESS    not-accessible
     STATUS        current
     DESCRIPTION
         "The number of interval, where 1 indicates current day
          measured period and 2 and above indicate previous days
          respectively"
     ::= { pwTDMPerf1DayIntervalEntry 1 }

   pwTDMPerf1DayIntervalValidData OBJECT-TYPE
     SYNTAX        TruthValue
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "This variable indicates if the data for this interval
          is valid."
     ::= { pwTDMPerf1DayIntervalEntry 2 }

   pwTDMPerf1DayIntervalDuration OBJECT-TYPE
     SYNTAX      Unsigned32
     UNITS       "seconds"
     MAX-ACCESS  read-only
     STATUS      current
     DESCRIPTION
       "The duration of a particular interval in seconds,
        Adjustments in the system's time-of-day clock, may
        cause the interval to be greater or less than, the
        normal value. Therefore this actual interval value
        is provided."
     ::= { pwTDMPerf1DayIntervalEntry 3 }

   pwTDMPerf1DayIntervalMissingPkts OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
       "Number of missing packets (as detected via control word
        sequence number gaps)."
     ::= { pwTDMPerf1DayIntervalEntry 4 }

   pwTDMPerf1DayIntervalPktsReOrder OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current



Nicklass                Expires October 31, 2008               [Page 31]

Internet-Draft             Manage TDM over PSN                April 2008


     DESCRIPTION
         "Number of packets detected out of sequence (via control
          word sequence number), but successfully re-ordered.
          Note: some implementations may not support this
          feature."
     ::= { pwTDMPerf1DayIntervalEntry 5 }

   pwTDMPerf1DayIntervalJtrBfrUnderruns OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of times a packet needed to be played
          out and the jitter buffer was empty."
     ::= { pwTDMPerf1DayIntervalEntry 6 }

   pwTDMPerf1DayIntervalMisOrderDropped OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected out of order(via control word
          sequence numbers), and could not be re-ordered, or could
          not fit in the jitter buffer."
     ::= { pwTDMPerf1DayIntervalEntry 7 }

   pwTDMPerf1DayIntervalMalformedPkt OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "Number of packets detected with unexpected size, or
          bad headers' stack."
     ::= { pwTDMPerf1DayIntervalEntry 8 }


   pwTDMPerf1DayIntervalESs OBJECT-TYPE
     SYNTAX       Counter32
     MAX-ACCESS   read-only
     STATUS       current
     DESCRIPTION
         "The counter associated with the number of Error
          Seconds encountered."
     ::= { pwTDMPerf1DayIntervalEntry 9 }

   pwTDMPerf1DayIntervalSESs OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only



Nicklass                Expires October 31, 2008               [Page 32]

Internet-Draft             Manage TDM over PSN                April 2008


     STATUS        current
     DESCRIPTION
         "The counter associated with the number of Severely
          Error Seconds."
     ::= { pwTDMPerf1DayIntervalEntry 10 }

   pwTDMPerf1DayIntervalUASs OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "The counter associated with the number of
          UnAvailable Seconds.

          NOTE: When first entering the UAS state, the number
          of SES To UAS is added to this object, then as each
          additional UAS occurs, this object increments by one."

     ::= { pwTDMPerf1DayIntervalEntry 11 }

   pwTDMPerf1DayIntervalFC OBJECT-TYPE
     SYNTAX        Counter32
     MAX-ACCESS    read-only
     STATUS        current
     DESCRIPTION
         "TDM Failure Counts (FC-TDM). The number of TDM failure
          events. A failure event begins when the LOPS failure
          is declared, and ends when the failure is cleared."
     ::= { pwTDMPerf1DayIntervalEntry 12 }

   -- End of PW TDM Performance table

   -- Conformance Information


   pwTDMCompliances OBJECT IDENTIFIER ::= { pwTDMConformance 1 }
   pwTDMGroups      OBJECT IDENTIFIER ::= { pwTDMConformance 2 }

   pwTDMModuleCompliance MODULE-COMPLIANCE
      STATUS  current
      DESCRIPTION
          "The compliance statement for agent that support TDM PW
           over PSN operation."

      MODULE  -- this module
          MANDATORY-GROUPS { pwTDMGroup,
                             pwTDMPerfCurrentGroup,
                             pwTDMPerfIntervalGroup,



Nicklass                Expires October 31, 2008               [Page 33]

Internet-Draft             Manage TDM over PSN                April 2008


                             pwTDMPerf1DayIntervalGroup
                           }

                     OBJECT pwGenTDMCfgIndex
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set an index pointer
                         is not required."

                     OBJECT pwRelTDMCfgIndex
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set the an index pointer
                         is not required."

                     OBJECT pwTDMCfgPktReorder
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set the packet reordering
                         is not required.If the feature is not
                         supported, the value set by the agent MUST
                         be FALSE"

                     OBJECT pwTDMCfgRtpHdrUsed
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set whether to use the
                          RTP header or not is not required."

                     OBJECT pwTDMCfgPayloadSuppression
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set this object is not
                          required."

                     OBJECT pwTDMCfgPktReplacePolicy
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set the replace policy
                         is not required."

                     OBJECT pwTDMCfgStorageType
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set the storage type is
                         not required."

                     OBJECT pwTDMCfgPktFiller



Nicklass                Expires October 31, 2008               [Page 34]

Internet-Draft             Manage TDM over PSN                April 2008


                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set the Filler pattern
                         is not required."

                     OBJECT pwTDMCfgName
                     MIN-ACCESS read-only
                     DESCRIPTION
                         "The ability to set the an Aliase
                         is not required."

      ::= { pwTDMCompliances 1 }

   -- Units of conformance.

   pwTDMGroup OBJECT-GROUP
     OBJECTS {
              pwTDMRate,
              pwTDMIfIndex,
              pwGenTDMCfgIndex,
              pwRelTDMCfgIndex,
              pwTDMConfigError,
              pwTDMTimeElapsed,
              pwTDMValidIntervals,
              pwTDMValidDayIntervals,

              pwTDMLastEsTimeStamp,

              pwTDMCfgIndexNext,

              pwTDMCfgRowStatus,

              pwTDMCfgPayloadSize,
              pwTDMCfgPktReorder,
              pwTDMCfgRtpHdrUsed,
              pwTDMCfgJtrBfrDepth,
              pwTDMCfgPayloadSuppression,
              pwTDMCfgConsecPktsInSynch,
              pwTDMCfgConsecMissPktsOutSynch,
              pwTDMCfgSetUp2SynchTimeOut,

              pwTDMCfgPktReplacePolicy,

              pwTDMCfgAvePktLossTimeWindow ,
              pwTDMCfgExcessivePktLossThreshold,

              pwTDMCfgAlarmThreshold ,
              pwTDMCfgClearAlarmThreshold,



Nicklass                Expires October 31, 2008               [Page 35]

Internet-Draft             Manage TDM over PSN                April 2008


              pwTDMCfgMissingPktsToSes,

              pwTDMCfgTimestampMode,
              pwTDMCfgStorageType,
              pwTDMCfgPktFiller,
              pwTDMCfgName
              }
     STATUS  current
     DESCRIPTION
         "Collection of objects for basic TDM PW config and
          status."
     ::= { pwTDMGroups 1 }

   pwTDMPerfCurrentGroup OBJECT-GROUP
     OBJECTS {
              pwTDMPerfCurrentMissingPkts,
              pwTDMPerfCurrentPktsReOrder,
              pwTDMPerfCurrentJtrBfrUnderruns,
              pwTDMPerfCurrentMisOrderDropped,
              pwTDMPerfCurrentMalformedPkt,

              pwTDMPerfCurrentESs,
              pwTDMPerfCurrentSESs,
              pwTDMPerfCurrentUASs,
              pwTDMPerfCurrentFC
              }
     STATUS  current
     DESCRIPTION
         "Collection of current statistics objects for TDM PWs."
     ::= { pwTDMGroups 2 }


   pwTDMPerfIntervalGroup OBJECT-GROUP
     OBJECTS {
              pwTDMPerfIntervalValidData,
              pwTDMPerfIntervalDuration,

              pwTDMPerfIntervalMissingPkts,
              pwTDMPerfIntervalPktsReOrder,
              pwTDMPerfIntervalJtrBfrUnderruns,
              pwTDMPerfIntervalMisOrderDropped,
              pwTDMPerfIntervalMalformedPkt,

              pwTDMPerfIntervalESs,
              pwTDMPerfIntervalSESs,
              pwTDMPerfIntervalUASs,
              pwTDMPerfIntervalFC




Nicklass                Expires October 31, 2008               [Page 36]

Internet-Draft             Manage TDM over PSN                April 2008


     }
     STATUS  current
     DESCRIPTION
            "Collection of Interval statistics objects for TDM PWs."
     ::= { pwTDMGroups 3 }


   pwTDMPerf1DayIntervalGroup OBJECT-GROUP
     OBJECTS {
              pwTDMPerf1DayIntervalValidData,
              pwTDMPerf1DayIntervalDuration,
              pwTDMPerf1DayIntervalMissingPkts,
              pwTDMPerf1DayIntervalPktsReOrder,
              pwTDMPerf1DayIntervalJtrBfrUnderruns,
              pwTDMPerf1DayIntervalMisOrderDropped,
              pwTDMPerf1DayIntervalMalformedPkt,

              pwTDMPerf1DayIntervalESs,
              pwTDMPerf1DayIntervalSESs,
              pwTDMPerf1DayIntervalUASs,
              pwTDMPerf1DayIntervalFC
              }
     STATUS  current
     DESCRIPTION
            "Collection of Daily statistics objects for TDM PWs."
     ::= { pwTDMGroups 4 }



   END





9.  Security considerations

   It is clear that this MIB module is potentially useful for monitoring
   of TDM PWs.  This MIB can also be used for configuration of certain
   objects, and anything that can be configured can be incorrectly
   configured, with potentially disastrous results.

   There are a number of management objects defined in this MIB module
   with a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on
   network operations.  These are the tables and objects and their



Nicklass                Expires October 31, 2008               [Page 37]

Internet-Draft             Manage TDM over PSN                April 2008


   sensitivity/vulnerability:

   The pwTDMTable and pwTDMCfgTable contain objects of TDM PW parameters
   on a Provider Edge (PE) device.  Unauthorized access to objects in
   these tables could result in disruption of traffic on the network.

   The use of stronger mechanisms such as SNMPv3 security should be
   considered where possible.  Specifically, SNMPv3 VACM and USM MUST be
   used with any SNMPV3 agent, which implements this MIB module.
   Administrators should consider whether read access to these objects
   should be allowed, since read access may be undesirable under certain
   circumstances.

   Some of the readable objects in this MIB module "i.e., objects with a
   MAX-ACCESS other than not-accessible" may be considered sensitive or
   vulnerable in some network environments.  It is thus important to
   control even GET and/or NOTIFY access to these objects and possibly
   to even encrypt the values of these objects when sending them over
   the network via SNMP.  These are the tables and objects and their
   sensitivity/vulnerability:

   The pwTDMTable, pwTDMPerfCurrentTable, pwTDMPerfIntervalTable and
   pwTDMPerf1DayIntervalTable collectively show the TDM pseudo wire
   connectivity topology and its performance characteristics.

   If an Administrator does not want to reveal this information, then
   these tables should be considered sensitive/vulnerable.

   SNMP versions prior to SNMPv3 did not include adequate security.
   Even if the network itself is secure "for example by using IPsec",
   even then, there is no control as to who on the secure network is
   allowed to access and GET/SET "read/change/create/delete" the objects
   in this MIB module.

   It is RECOMMENDED that implementers consider the security features as
   provided by the SNMPv3 framework "see [RFC3410], section 8",
   including full support for the SNMPv3 cryptographic mechanisms "for
   authentication and privacy".

   Further, deployment of SNMP versions prior to SNMPv3 is NOT
   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to
   enable cryptographic security.  It is then a customer/operator
   responsibility to ensure that the SNMP entity giving access to an
   instance of this MIB module, is properly configured to give access to
   the objects only to those principals "users" that have legitimate
   rights to indeed GET or SET "change/create/delete" them.





Nicklass                Expires October 31, 2008               [Page 38]

Internet-Draft             Manage TDM over PSN                April 2008


10.  IANA considerations

   The MIB module in this document uses the following IANA-assigned
   OBJECT IDENTIFIER values recorded in the SMI Numbers registry:

   Descriptor OBJECT IDENTIFIER value

   ---------- -----------------------

   pwTDMMIB { mib-2 XXX }

   Editor's Note (to be removed prior to publication): the IANA is
   requested to assign a value for "XXX" under the mib-2 subtree and to
   record the assignment in the SMI Numbers registry.  When the
   assignment has been made, the RFC Editor is asked to replace "XXX"
   (here and in the MIB module) with the assigned value and to remove
   this note.


11.  References

11.1.  Normative references





























Nicklass                Expires October 31, 2008               [Page 39]

Internet-Draft             Manage TDM over PSN                April 2008


   [SATOP]      Vainshtein A. ,Stein Y., "Structure-Agnostic TDM
                over Packet (SAToP)", RFC 4553, June 2006.

   [TDMCP-EXT]  Vainshtein A, Stein Y., "Control Protocol Extensions
                for Setup of TDM Pseudowires", work-in-progress.

   [PWMIB]      Zelig D., Nadeau T., "Pseudo Wire (PW) Management
                Information Base", work-in-progress.

   [PWTC]       Nadeau, T., Zelig D. "Definitions for Textual
                Conventions and OBJECT-IDENTITIES for Pseudo-Wires
                Management", work-in-progress.

   [DS1MIB]     Nicklass O. " Definitions of Managed Objects
                for the DS1, E1, DS2 and E2 Interface Types", RFC 4805,
                September 2004

   [DS3MIB]     Nicklass O. "Definitions of Managed Objects for
                the DS3/E3 Interface Types", RFC 3896, September 2004

   [DS0MIB]     Fowler, D., "Definitions of Managed Objects for
                the DS0 and DS0Bundle Interface Types", RFC 2494,
                January 1999.

   [IFMIB]      McCloghrie, K. and F. Kastenholz, "The Interfaces
                Group MIB", RFC 2863,  June 2000.

   [RFC2578]    McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
                J., Rose, M. and S. Waldbusser, "Structure of
                Management Information Version 2 (SMIv2)", STD 58, RFC
                2578, April 1999.

   [RFC2579]    McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
                J., Rose, M. and S. Waldbusser, "Textual Conventions
                for SMIv2", STD 58, RFC 2579, April 1999.

   [RFC2580]    McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
                J., Rose, M. and S. Waldbusser, "Conformance
                Statements for SMIv2", STD 58, RFC 2580, April 1999.

   [RFC3411]    D. Harrington, R. Presuhn,B. Wijnen "An Architecture
                for Describing Simple Network Management Protocol
                (SNMP) Management Frameworks", RFC 3411, December 2002

   [BCP14]      S. Bradner, "Key words for use in RFCs to Indicate
                Requirement Levels", RFC 2119 (BCP 14), March 1997





Nicklass                Expires October 31, 2008               [Page 40]

Internet-Draft             Manage TDM over PSN                April 2008


11.2.  Informative references


   [RFC4197]    M. Riegel, et al, "Requirements for Edge-to-Edge
                Emulation of TDM Circuits over Packet Switching
                Networks (PSN)", RFC 4197,October 2005.

   [RFC3985]    Bryant S., Pate P., "PWE3 Architecture", RFC 3985,
                March 2005.

   [TDMOIP]     Y(J) Stein, Shashoua R., Insler, M. Anavi "TDM
                over IP", work in progress.

   [CESOPSN]    Vainshtein A. et al, "Structured TDM Circuit
                Emulation Service over Packet Switched Network
                (CESoPSN)", work in progress.

   [RFC3410]    Case, J., Mundy, R., Partain, D. and B. Stewart,
                "Introduction and Applicability Statements for
                Internet-Standard Management Framework", RFC 3410,
                December 2002.


12.  Acknowledgements

   This document was produced by the PWE3 Working Group.  Special thanks
   to Yaakov Stein, Doron Tzur, Sasha Vainshtein; and Ron Cohen; for
   close review and good suggestions.


Author's Address

   Orly Nicklass
   Nokia Siemens Networks
   3 Hanagar St.
   Hod Hasharon
   ISRAEL

   Phone: +972 9 7751290
   Email: orly.nicklass@nsn.com











Nicklass                Expires October 31, 2008               [Page 41]

Internet-Draft             Manage TDM over PSN                April 2008


Full Copyright Statement

   Copyright (C) The IETF Trust (2008).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Acknowledgment

   Funding for the RFC Editor function is provided by the IETF
   Administrative Support Activity (IASA).





Nicklass                Expires October 31, 2008               [Page 42]

