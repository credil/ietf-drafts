<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced.
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-sweet-uri-zoneid-00" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title abbrev="IPv6 Zone IDs in Literals and URIs">Representing IPv6 Zone Identifiers in Address Literals and Uniform Resource Identifiers</title>

    <author fullname="Michael Sweet" initials="M." role="editor" surname="Sweet">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <region>California</region>
          <code>95014</code>
          <country>United States</country>
        </postal>
        <email>msweet@apple.com</email>
      </address>
    </author>

    <author fullname="Brian Carpenter" initials="B." surname="Carpenter">
      <organization>University of Auckland</organization>
      <address>
        <postal>
          <street>Department of Computer Science</street>
          <region>PB 92019</region>
          <city>Auckland</city>
          <code>1142</code>
          <country>New Zealand</country>
        </postal>
        <email>brian.e.carpenter@gmail.com</email>
      </address>
    </author>

    <author fullname="Stuart Cheshire" initials="S." surname="Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <region>California</region>
          <code>95014</code>
          <country>United States</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>

    <author fullname="Robert M. Hinden" initials="R.M." surname="Hinden">
      <organization>Check Point Software Technologies, Inc.</organization>
      <address>
        <postal>
          <street>800 Bridge Parkway</street>
          <city>Redwood City</city>
          <region>California</region>
          <code>94065</code>
          <country>United States</country>
        </postal>
        <email>bob.hinden@gmail.com</email>
      </address>
    </author>

    <date year="2013" />
    <area>Internet</area>
    <workgroup>Internet Engineering Task Force</workgroup>
    <keyword>IPv6 Link-Local</keyword>
    <abstract>
      <t>This document describes how the zone identifier of an IPv6 scoped address, defined as &lt;zone_id&gt; in the IPv6 Scoped Address Architecture (RFC 4007), can be represented in a literal IPv6 address and in a Uniform Resource Identifier that includes such a literal address. It updates the URI Generic Syntax specification (RFC 3986) accordingly.</t>
      <t>[ Editor's note: This draft adds the IPvFuture format used by CUPS since 2005, addresses some misconceptions of how zoneid's are not useful to HTTP servers, and is intended to replace RFC 6874. ]</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The <xref target="RFC3986">Uniform Resource Identifier (URI) syntax specification</xref> defined how a literal IPv6 address can be represented in the "host" part of a URI. Two months later, the <xref target="RFC4007">IPv6 Scoped Address Architecture specification</xref> extended the text representation of limited-scope IPv6 addresses such that a zone identifier may be concatenated to a literal address, for purposes described in that specification. Zone identifiers are especially useful in contexts in which literal addresses are typically used, for example, during fault diagnosis, when it may be essential to specify which interface is used for sending to a link-local address. It should be noted that zone identifiers have purely local meaning within the node in which they are defined, often being the same as IPv6 interface names. They are completely meaningless for any other node. Today, they are meaningful only when attached to addresses with less than global scope, but it is possible that other uses might be defined in the future.</t>
      <t>The <xref target="RFC4007">IPv6 Scoped Address Architecture specification</xref> does not specify how zone identifiers are to be represented in URIs. Practical experience has shown that this feature is useful, in particular when using a web browser for debugging with link-local addresses, but because it is undefined, it is not implemented consistently in URI parsers or in browsers.</t>
      <t>Some versions of some browsers directly accept the <xref target="RFC4007">IPv6 Scoped Address syntax</xref> for scoped IPv6 addresses embedded in URIs, i.e., they have been coded to interpret a "%" sign following the literal address as introducing a <xref target="RFC4007">zone identifier</xref>, instead of introducing two hexadecimal characters representing some <xref target="RFC3986">percent-encoded octet</xref>. Clearly, interpreting the "%" sign as introducing a zone identifier is very convenient for users, although it formally breaches the established <xref target="RFC3986">URI syntax</xref>. This document defines an alternative approach that respects and extends the rules of URI syntax, and IPv6 literals in general, to be consistent.</t>
      <t>Thus, this document updates the <xref target="RFC3986">URI syntax specification</xref> by adding two syntaxes that allow a zone identifier to be included in a literal IPv6 address within a URI. The first extends the <xref target="RFC5234">ABNF</xref> syntax to allow for a direct inclusion of the zone ID while the second is backwards-compatible with the original syntax defined in RFC 3986.</t>
      <t>It should be noted that in contexts other than a user interface, a zone identifier is mapped into a numeric zone index or interface number. The MIB textual convention InetZoneIndex [RFC4001] and the socket interface [RFC3493] define this as a 32-bit unsigned integer. The mapping between the human-readable zone identifier string and the numeric value is a host-specific function that varies between operating systems. The present document is concerned only with the human-readable string.</t>
      <t>Several alternative solutions were considered while this document was developed. Appendix A briefly describes the various options and their advantages and disadvantages.</t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">"Key words for use in RFCs to Indicate Requirement Levels"</xref>.</t>
      </section>
    </section>

    <section title="Specification">
      <t>According to <xref target="RFC4007">IPv6 Scoped Address syntax</xref>, a zone identifier is attached to the textual representation of an IPv6 address by concatenating "%" followed by &lt;zone_id&gt;, where &lt;zone_id&gt; is a string identifying the zone of the address. However, the IPv6 Scoped Address Architecture specification gives no precise definition of the character set allowed in &lt;zone_id&gt;. There are no rules or de facto standards for this. For example, the first Ethernet interface in a host might be called %0, %1, %en1, %eth0, or whatever the implementer happened to choose.</t>
      <t>In a URI, a literal IPv6 address is always embedded between "[" and "]". This document specifies how a &lt;zone_id&gt; can be appended to the address. According to URI syntax [RFC3986], "%" is always treated as an escape character in a URI, so, according to the established URI syntax [RFC3986] any occurrences of literal "%" symbols in a URI MUST be percent-encoded and represented in the form "%25". Thus, the scoped address fe80::a%en1 would appear in a URI as http://[fe80::a%25en1].</t>
      <t>However, since parsers based on the <xref target="RFC5234">ABNF</xref> in the <xref target="RFC3986">URI syntax specification</xref> will not allow a URI of that form, an <xref target="LITERAL-ZONE">alternate format based on the IPvFuture rule</xref> can be used where the address is prefixed with "v1." and the "+" character is used as the separator between the address and &lt;zone_id&gt;. Thus, the alternate form of the scoped address fe80::a%en1 would appear in a URI as http://[v1.fe80::a+en1]. Note: This format, originally proposed in 2005, was adopted by <xref target="CUPS">CUPS</xref> and has subsequently become widely implemented for printing.</t>
      <t>[ Editor's note: Would it be appropriate to provide adoption numbers here (hundreds of millions of devices)? ]</t>
      <t>A &lt;zone_id&gt; SHOULD contain only ASCII characters classified as <xref target="RFC3986">"unreserved" for use in URIs</xref>. This excludes characters such as "]" or even "%" that would complicate parsing. However, the syntax described below does allow such characters to be percent-encoded, for compatibility with existing devices that use them.</t>
      <t>If an operating system uses any other characters in zone or interface identifiers that are not in the "unreserved" character set, they MUST be represented using <xref target="RFC3986">percent encoding</xref>.</t>
      <t>We now present the necessary formal syntax.</t>
      <t>The <xref target="RFC3986">URI syntax specification</xref> formally defined the IPv6 literal format in <xref target="RFC5234">ABNF</xref> by the following rule:</t>
      <figure>
        <artwork><![CDATA[
IP-literal = "[" ( IPv6address / IPvFuture  ) "]"
	]]></artwork>
      </figure>
      <t>To provide support for a zone identifier, the existing syntax of IPv6address is retained, and a zone identifier may be added optionally to any literal address. This syntax allows flexibility for unknown future uses. The rule quoted above from the <xref target="RFC3986">previous URI syntax specification</xref> is replaced by three rules:</t>
      <figure>
        <artwork><![CDATA[
IP-literal = "[" ( IPv6address / IPv6addrz / IPvFuture  ) "]"

ZoneID = 1*( unreserved / pct-encoded )

IPv6addrz = IPv6address "%25" ZoneID / "v1." IPv6address "+" ZoneID
	]]></artwork>
      </figure>
      <t>This syntax fills the gap that is described at the end of Section 11.7 of the <xref target="RFC4007">IPv6 Scoped Address Architecture specification</xref>. </t>
      <t>The established rules for <xref target="RFC5952">textual representation of IPv6 addresses</xref> SHOULD be applied in producing URIs.</t>
      <t>The <xref target="RFC3986">URI syntax specification</xref> states that URIs have a global scope, but that in some cases their interpretation depends on the end-user's context. URIs including a ZoneID are to be interpreted only in the context of the host at which they originate, since the ZoneID is of local significance only.</t>
      <t>The <xref target="RFC4007">IPv6 Scoped Address Architecture specification</xref> offers guidance on how the ZoneID affects interface/address selection inside the IPv6 stack. Note that the behaviour of an IPv6 stack, if it is passed a non-null zone index for an address other than link-local, is undefined.</t>
    </section>

    <section title="Web Browsers">
      <t>This section discusses how web browsers might handle this syntax extension. Unfortunately, there is no formal distinction between the syntax allowed in a browser's input dialogue box and the syntax allowed in URIs. For this reason, no normative statements are made in this section.</t>
      <t>Due to the lack of defined syntax, web browsers have been inconsistent in providing for ZoneIDs. Many have no support, but there are examples of ad hoc support. For example, some versions of Firefox allowed the use of a ZoneID preceded by a bare "%" character, but this feature was removed for consistency with established syntax [RFC3986]. As another example, some versions of Internet Explorer allow use of a ZoneID preceded by a "%" character encoded as "%25", still beyond the syntax allowed by the established rules [RFC3986]. This syntax extension is in fact used internally in the Windows operating system and some of its APIs.</t>
      <t>It is desirable for all browsers to recognise a ZoneID preceded by a percent-encoded "%". In the spirit of "be liberal with what you accept", we also suggest that URI parsers accept bare "%" signs when possible (i.e., a "%" not followed by two valid and meaningful hexadecimal characters). This would make it possible for a user to copy and paste a string such as "fe80::a%en1" from the output of a "ping" command and have it work. On the other hand, "%ee1" would need to be manually rewritten to "fe80::a%25ee1" to avoid any risk of misinterpretation.</t>
      <t>Such bare "%" signs are for user interface convenience, and need to be turned into properly encoded characters (where "%25" encodes "%") before the URI is used in any protocol or HTML document. And while URIs including a ZoneID have no meaning outside the originating node, the address values can be used to construct subsequent valid URIs on behalf of the originating node. It is therefore highly desirable for a browser to retain the ZoneID in any URI included in an HTTP request.</t>
      <t>[ Editor's note: Reworded the previous paragraph from RFC 6874 to indicate a preference for including the ZoneID. ]</t>
      <t>The normal diagnostic usage for the ZoneID syntax will cause it to be entered in the browser's input dialogue box. Thus, URIs including a ZoneID are unlikely to be encountered in HTML documents. However, if they do (for example, in a diagnostic script coded in HTML), it would be appropriate to treat them exactly as above.</t>
    </section>

    <section title="Security Consideration">
      <t>The security considerations from the URI syntax specification [RFC3986] and the IPv6 Scoped Address Architecture specification [RFC4007] apply. In particular, this URI format creates a specific pathway by which a deceitful zone index might be communicated, as mentioned in the final security consideration of the Scoped Address Architecture specification. It is emphasised that the format is intended only for debugging purposes, but of course this intention does not prevent misuse.</t>
      <t>To limit this risk, implementations MUST NOT allow use of this format except for well-defined usages, such as sending to link-local addresses under prefix fe80::/10. At the time of writing, this is the only well-defined usage known.</t>
      <t>An HTTP client, proxy, or other intermediary MUST NOT remove any ZoneID attached to an outgoing URI so that URIs generated by the receiving host for the sending host retain the sending host's ZoneID information</t>
      <t>[ Editor's note: The previous paragraph has the opposite conformance requirement from RFC 6874. ]</t>
    </section>

    <section title="Acknowledgements">
      <t>The lack of this format was first pointed out by Margaret Wasserman some years ago, and more recently by Kerry Lynn. A previous draft document by <xref target="LITERAL-ZONE">Martin Duerst and Bill Fenner</xref> discussed this topic but was not finalised.</t>
      <t>Valuable comments and contributions were made by Karl Auer, Carsten Bormann, Benoit Claise, Stephen Farrell, Brian Haberman, Ted Hardie, Tatuya Jinmei, Yves Lafon, Barry Leiba, Radia Perlman, Tom Petch, Tomoyuki Sahara, Juergen Schoenwaelder, Dave Thaler, Martin Thomson, and Ole Troan.</t>
      <t>Brian Carpenter was a visitor at the Computer Laboratory, Cambridge University during part of this work.</t>
    </section>

  </middle>

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search. These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <?rfc include="reference.RFC.2119.xml"?>
      <?rfc include="reference.RFC.3986.xml"?>
      <?rfc include="reference.RFC.4007.xml"?>
      <?rfc include="reference.RFC.5234.xml"?>
      <?rfc include="reference.RFC.5952.xml"?>

<!--      <reference anchor="min_ref">
        <front>
          <title>Minimal Reference</title>

          <author initials="authInitials" surname="authSurName">
            <organization></organization>
          </author>

          <date year="2006" />
        </front>
      </reference> -->
    </references>

    <references title="Informative References">
      <reference anchor="CUPS">
        <front>
          <title>CUPS software</title>
          <author initials="M." surname="Sweet">
            <organization>Apple Inc.</organization>
          </author>
          <date year="2005" month="October" day="21" />
        </front>
      </reference>
      <reference anchor="LITERAL-ZONE">
        <front>
          <title>A Format for IPv6 Scope Zone Identifiers in Literal URIs</title>
          <author initials="B." surname="Fenner">
            <organization>AT&amp;T Labs -- Research</organization>
          </author>
          <author initials="M." surname="Duerst">
            <organization>World Wide Web Consortium</organization>
          </author>
          <date year="2005" month="October" day="21" />
        </front>
      </reference>
      <?rfc include="reference.RFC.3493.xml"?>
      <?rfc include="reference.RFC.4001.xml"?>
    </references>

    <section title="Options Considered">
      <t>The syntax defined above allows a ZoneID to be added to any IPv6 address. The 6man WG discussed and rejected an alternative in which the existing syntax of IPv6address would be extended by an option to add the ZoneID only for the case of link-local addresses. It was felt that the solution presented in this document offers more flexibility for future uses and is more straightforward to implement.</t>
      <t>The various syntax options considered are now briefly described.</t>
      <t>[ Editor's note: I reversed items 4 and 5 from RFC 6874 and adjusted the example to match the alternate syntax used in CUPS. ]</t>
      <t>
        <list style="hanging">
	  <t hangText="1.">Leave the problem unsolved.</t>
	  <t>This would mean that per-interface diagnostics would still have to be performed using ping or ping6:</t>
	  <t>ping fe80::a%en1</t>
	  <t>Advantage: works today.</t>
	  <t>Disadvantage: less convenient than using a browser.</t>

	  <t hangText="2.">Simply use the percent character:</t>
	  <t>http://[fe80::a%en1]</t>
	  <t>Advantage: allows use of browser; allows cut and paste.</t>
	  <t>Disadvantage: invalid syntax under RFC 3986; not acceptable to URI community.</t>

	  <t hangText="3.">Simply use an alternative separator:</t>
	  <t>http://[fe80::a-en1]</t>
	  <t>Advantage: allows use of browser; simple syntax.</t>
	  <t>Disadvantage: Requires all IPv6 address literal parsers and generators to be updated in order to allow simple cut and paste; inconsistent with existing tools and practice.</t>
	  <t>Note: The initial proposal for this choice was to use an underscore as the separator, but it was noted that this becomes effectively invisible when a user interface automatically underlines URLs.</t>

	  <t hangText="4.">Retain the percent character already specified for introducing zone identifiers for IPv6 Scoped Addresses [RFC4007], and then percent-encode it when it appears in a URI, according to the already-established URI syntax rules [RFC 3986]:</t>
	  <t>http://[fe80::a%25en1]</t>
	  <t>Advantage: allows use of browser; consistent with general URI syntax.</t>
	  <t>Disadvantage: somewhat ugly and confusing; doesn't allow simple cut and paste.</t>
	  <t>This is the primary format chosen for standardization.</t>

	  <t hangText="5.">Simply use the "IPvFuture" syntax left open in RFC 3986:</t>
	  <t>http://[v1.fe80::a+en1]</t>
	  <t>Advantage: allows use of browser, compatible with RFC 3986-based URI parsers.</t>
	  <t>Disadvantage: ugly; doesn't allow simple cut and paste.</t>
	  <t>This is the alternate format chosen for standardization.</t>
	</list>
      </t>
    </section>
    <section title="Change History">
      <t>[ RFC Editor: This section to be deleted before RFC publication ]</t>
      <t>August 27, 2013 - draft-sweet-uri-zoneid-00</t>
      <t>[ Changes are from published RFC 6874 text ]</t>
      <t>
        <list style="symbols">
          <t>Abstract: Added editor's note explaining why we need to update RFC 6874</t>
          <t>Section 1: Update to talk about having two formats.</t>
          <t>Section 2: Provide example and define IPvFuture format as an alternate, RFC 3986-compatible encoding.</t>
          <t>Section 3: Reword to encourage browsers to retain the ZoneID as an aid for getting usable server-generated URIs.</t>
          <t>Section 4: Change conformance to MUST NOT remove ZoneID.</t>
          <t>Section 6.2: Add reference to CUPS.</t>
          <t>Appendix A: Put the IPvFuture example at the end, make it match the correct IPvFuture format, and note it at the alternate syntax.</t>
        </list>
      </t>
    </section>
  </back>
</rfc>
