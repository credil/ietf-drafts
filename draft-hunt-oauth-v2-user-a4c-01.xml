<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-hunt-oauth-v2-user-a4c-01"
     ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="OAuth 2.0 UA4C">OAuth 2.0 User Authentication and Consent
    For Clients</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Phil Hunt" initials="P." role="editor" surname="Hunt">
      <organization>Oracle</organization>

      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>

    <author fullname="Tony Nadalin" initials="T." surname="Nadalin">
      <organization>Microsoft</organization>

      <address>
        <email>tonynad@microsoft.com</email>
      </address>
    </author>

    <date month="August" year="2013"/>

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>Security Area</area>

    <workgroup>OAuth</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>Authentication</keyword>

    <keyword>Internet-Draft</keyword>

    <keyword>User</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This specification defines a new OAuth2 endpoint that enables user
      authentication session and consent information to be shared with client
      applications.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Section 4.1 of the OAuth 2.0 Authorization Framework <xref
      target="RFC6749"/> defines the "Authorization Code Grant" flow which
      defines a redirect flow, typically via a web browser, that enables
      confidential clients to obtain access and refresh tokens. As part of
      this flow, resource owners are authenticated via the user agent so that
      their consent may be obtained. This flow defines the "Authentication
      Code Grant" extension which enables clients to request re-authentication
      and makes authentication session information available to the client in
      a standardized format.</t>

      <t>This document focuses on extending OAuth2 to provide authentication
      session information only. The specification does not define a
      standardized resource owner profile information API. It is assumed that
      other APIs such as the SCIM API <xref target="I-D.ietf-scim-api"/> or
      <xref target="OIDC">Open Identity Connect</xref> could be used for this
      purpose. As part of the session information, a subject profile URL may
      optionally be provided.</t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section anchor="AuthenticateGrant" title="Authenticate Code Grant">
      <t>The Authentication Code Grant type is used in exactly the same manor
      as the Authorization Code Grant <xref target="RFC6749">Section
      4.1</xref> and has the same features and conditions. The Authorization
      Code Grant extends the features available by making it possible for
      clients to test and request re-authenticaiton and authorization as well
      as obtain login session information at the end of the grant flow.</t>

      <section anchor="Authentication_Request" title="Authentication Request">
        <t>In addition to the parameters defined in <xref
        target="RFC6749">Section 4.1.1</xref>, the following additional
        parameters are defined:<list hangIndent="8" style="hanging">
            <t hangText="min_alv">OPTIONAL. A value of "1", "2", "3", or "4".
            The minimum requested authentication assurance level as defined by
            <xref target="ISO29115"/> (see also <xref
            target="NIST_SP-800-63-2"/>). If the authorization server is
            unable to meet or exceed the requested authentication assurance
            level, the server SHALL return an <spanx style="verb">unsupported_response_type</spanx>
            error per <xref target="RFC6749">section 4.1.2.1</xref>. [[should
            there be a specific error_uri value for alv not supported?]] When
            the value is omitted, the authorization server MAY choose any
            authentication assurance level.</t>

            <t hangText="prompt"><vspace blankLines="0"/>OPTIONAL. Space
            delimited, case sensitive list of ASCII string values that
            specifies whether the Authorization Server prompts the End-User
            for reauthentication and consent. The defined values are:<list
                hangIndent="8" style="hanging">
                <t hangText="none">The suthorization server MUST NOT display
                any authentication or consent user interface pages. An error
                is returned if the End-User is not already authenticated or
                the Client does not have pre-configured consent for the
                requested Claims or does not fulfill other conditions for
                processing. This can be used as a method to check for existing
                authentication and/or consent.</t>

                <t hangText="login">Regardless of the current user
                authentication state, the Authorization Server SHOULD prompt
                the End-User for reauthentication. If it cannot prompt the
                End-User, it MUST return an error.</t>

                <t hangText="select_account">The Authorization Server SHOULD
                prompt the End-User to select a user account. This allows an
                End-User who has multiple accounts at the Authorization Server
                to select amongst the multiple accounts that they might have
                current sessions for. If it cannot prompt the End-User, it
                MUST return an error.</t>
              </list></t>

            <!--

            <t hangText="display">OPTIONAL. ASCII string value that specifies
            how the Authorization Server displays the authentication and
            consent user interface pages to the End-User. The defined values
            are:<list hangIndent="8" style="hanging">
                <t hangText="page">The Authorization Server SHOULD display
                authentication and consent UI consistent with a full
                User-Agent page view. If the display parameter is not
                specified this is the default display mode.</t>

                <t hangText="popup">The Authorization Server SHOULD display
                authentication and consent UI consistent with a popup
                User-Agent window. The popup User-Agent window SHOULD be 450
                pixels wide and 500 pixels tall.</t>

                <t hangText="touch">The Authorization Server SHOULD display
                authentication and consent UI consistent with a device that
                leverages a touch interface. The Authorization Server MAY
                attempt to detect the touch device and further customize the
                interface.</t>

                <t hangText="wap">The Authorization Server SHOULD display
                authentication and consent UI consistent with a "feature
                phone" type display.</t>
              </list></t>

	    -->

            <t hangText="hint"><vspace blankLines="0"/>OPTIONAL. A helpful
            text message that should be displayed to the user during a
            re-authentication or re-authorization process.</t>
          </list></t>

        <t>For xample, the client directs the user-agent to make the following
        HTTP request using TLS (with extra line breaks for display purposes
        only):<figure>
            <artwork align="left">    GET /authenticate?
    response_type=code
    &amp;client_id=s6BhdRkqt3
    &amp;redirect_uri=https%3A%2F%2Fclient.example.com%2Fcb
    &amp;state=af0ifjsldkj
    &amp;prompt=login
    Host: server.example.com
</artwork>
          </figure></t>

        <t>The authorization server MUST:<list style="symbols">
            <t>Perform the normal OAuth2 authorization process,</t>

            <t>MAY elect not to request consent if no access token is to be
            issued (i.e. this is an authentication only request),</t>

            <t>MUST re-authenticate the user if <spanx style="verb">prompt</spanx>
            contains the parameter "login",</t>

            <t>MUST obtain consent from the user if <spanx style="verb">prompt</spanx>
            contains the parameter "consent", and,</t>

            <t>MUST return an error if <spanx style="verb">prompt</spanx>
            contains "none" and the user is not currently authenticated.</t>
          </list></t>
      </section>

      <section title="Authentication Response">
        <t>The response is identical to the one described in <xref
        target="RFC6749">Section 4.1.2</xref>.</t>

        <section title="Error Responses">
          <t>In addition to those defined in <xref target="RFC6749">Section
          4.1.2.1</xref>, an additional "error" type is defined.
          "unauthenticated_user", MUST be returned after an authentication
          request parameter <spanx style="verb">prompt</spanx> is provided
          containing value "none" and the user is found to be currently
          unauthenticated.</t>
        </section>
      </section>

      <section title="Access Token Request">
        <t>The access token request is identical to the one described in <xref
        target="RFC6749">Section 4.1.3</xref>. In cases where there is no
        associated resource API and an access token is not to be issued, the
        normal OAuth2 token request is still made.</t>
      </section>

      <section title="Access Token Response">
        <t>If the access token request is valid and authorized, the
        authorization server issues an access token and optional refresh token
        as described in <xref target="RFC6749">Section 5.1</xref>with the
        exception that the issuance of access_token is OPTIONAL. If the
        request client authentication failed or is invalid, the authorization
        server returns an error response as described in Section 5.2.</t>

        <t>In addition to the parameters described in Section 5, a <xref
        target="I-D.ietf-oauth-json-web-token">JSON Web Token (JWT)</xref>
        known as an <spanx style="verb">id_token</spanx> is returned
        containing the following possible claims: <list hangIndent="8"
            style="hanging">
            <t anchor="sub" hangText="sub">REQUIRED. An identifier for the
            authenicated subject. The same identifier MUST be return for the
            same authenticated user on the same client_id. The authenticated
            user's "sub" value MAY change for different client_id values.</t>

            <t anchor="sub_url" hangText="profile">OPTIONAL. A URL which can
            be used to access the authenticated subject user profile data. The
            URL MUST point to the same user profile as the one that was
            authenticated. The URL MUST be valid for the duration of the
            associated access token and refresh_tokens lifetimes. [[Editors
            note: Should this be a structured value to indicate the API type
            (SCIM, OIDC, HTML) and to optionally return multiple API
            representations]]</t>

            <t hangText="amr">OPTIONAL. Authentication Methods References.
            JSON array of strings that are identifiers for authentication
            methods used in the authentication. For instance, values might
            indicate that both password and OTP authentication methods were
            used. The definition of particular values to be used in the amr
            Claim is beyond the scope of this specification. Parties using
            this claim will need to agree upon the meanings of the values
            used, which may be context-specific. The amr value is an array of
            case sensitive strings. The following is a list of valid
            values:<list hangIndent="12" style="hanging">
                <t hangText="pwd">Password authentication, either by user or
                service if client_secret is used.</t>

                <t hangText="rsa">If authentication was based on the proof of
                an rsa key. This includes if authentication was performed by a
                self-signed JWT with a service owned x509 certificate.</t>

                <t hangText="rsa">One time password.</t>

                <t hangText="mfa">Multiple factor authentication was used.
                When this is used the other authentication methods will also
                be included.</t>

                <t hangText="fed">A federated authentication assertion (e.g.
                JWT or SAML) was used.[[should original federated assertion be
                attached?]]</t>

                <t hangText="none">No authentication was performed. [[This
                would not really be used for the amr, but an equivalent claim
                that indicates the client authentication method. So for native
                clients &lsquo;none&rsquo; would be the auth method]]</t>
              </list></t>

            <t hangText="auth_time">REQUIRED. The time at which the subject
            user was authenticated expressed in number of seconds from
            1970-01-01T0:0:0Z as measured in UTC until the date/time. See
            <xref target="RFC3339"/> for details regarding date/times in
            general and UTC in particular. 'lat' MAY be a time earlier than
            when the session information was issued as defined by 'iat".</t>

            <t hangText="iat">REQUIRED. The time at which the response or the
            session token was issued expressed in number of seconds from
            1970-01-01T0:0:0Z as measured in UTC until the date/time. See
            <xref target="RFC3339"/> for details regarding date/times in
            general and UTC in particular.<xref target="RFC3339"/> for details
            regarding date/times in general and UTC in particular.</t>

            <t hangText="exp">REQUIRED. The time at which the user
            authenticated session (login) expires expressed in number of
            seconds from 1970-01-01T0:0:0Z as measured in UTC until the
            date/time. See <xref target="RFC3339"/> for details regarding
            date/times in general and UTC in particular. Note "expires_in"
            referes to the normal access token lifespan whereas "exp" refers
            to the lifespace of the user login session.</t>

            <t hangText="alv">OPTIONAL. The authentication assurance level as
            described by <xref target="ISO29115"/> (see also <xref
            target="NIST_SP-800-63-2"/>).</t>

            <t hangText="iss">REQUIRED for session token. An identifier
            representing the issuer of the authentication. MAY be the
            authorization endpoint URL.</t>

            <t hangText="aud">REQUIRED for session_token. Contains the
            client_id of the client receiving the assertion.</t>
          </list></t>

        <t>An non-normative example successful response using session (with
        carriage returns for readability):<figure>
            <artwork align="left">     HTTP/1.1 200 OK
     Content-Type: application/json;charset=UTF-8
     Cache-Control: no-store
     Pragma: no-cache
     {
       "access_token":"2YotnFZFEjr1zCsicMWpAA",
       "token_type":"example",
       "expires_in":3600,
       "refresh_token":"tGzv3JOkF0XG5Qx2TlKWIA",
       "id_token":"eyJhbGciOiJub25lIn0.
eyAic3ViIjoiNWRlZGNjOGItNzM1Yy00MDVmLWUwMjlmIiwicHJvZmlsZSI6Imh0
dHBzOi8vZXhhbXBsZS5jb20vVXNlcnMvNWRlZGNjOGItNzM1Yy00MDVmLWUwMjlm
IiwiYXV0aF90aW1lIjoiMTM2Nzk1NjA5NiIsImV4cCI6IjEzNjgwNDI0OTYiLCJh
bHYiOiIyIiwiaWF0IjoiMTM2Nzk1NjA5OCIsImlzcyI6Imh0dHBzOi8vc2VydmVy
LmV4YW1wbGUuY29tIiwiYXVkIjoiczZCaGRSa3F0MyIsImV4YW1wbGVfc2Vzc2lv
bl9wYXJhbWV0ZXIiOiJleGFtcGxlX3ZhbHVlIn0=."
     }</artwork>
          </figure><figure>
            <preamble>As per the JWT specification, the encoded <spanx
            style="verb">id_token</spanx> is separated into parts by the ".",
            the first part (<spanx style="verb">eyJhbGciOiJub25lIn0</spanx>)
            indicates the signature algorithm and in this case decodes
            as:</preamble>

            <artwork>{"alg":"none"}</artwork>
          </figure><figure>
            <preamble>The claimset is then decoded as:</preamble>

            <artwork>{
  "sub":"5dedcc8b-735c-405f-e029f",
  "profile":"https://example.com/Users/5dedcc8b-735c-405f-e029f",
  "auth_time":"1367956096",
  "exp":"1368042496",
  "alv":"2",
  "iat":"1367956098",
  "iss":"https://server.example.com",
  "aud":"s6BhdRkqt3",
  "example_session_parameter":"example_value"
}</artwork>
          </figure></t>

        <t>If the <spanx style="verb">id_token</spanx> contains the claim
        <spanx style="verb">alv</spanx> and its value is higher than "2", the
        <spanx style="verb">id_token</spanx> MUST be signed (has a signature
        alg value other than "none) AND validated.</t>

        <t>All claims defined above MUST be understood before proceeding.
        Additional claims/parameters that are not understood MAY be
        ignored.</t>

        <t>The client MUST confirm the "auth_time" is not future dated and
        "exp" is not a date currently in the past.</t>
      </section>
    </section>

    <section title="Privacy Considerations">
      <t>Profile url values issued in the id_token and MAY be directed
      identifiers. In other words, the identifier/url returned is valid only
      for the "aud" indicated. This prevents multiple clients and non-OAuth
      clients from being able to gather and correlate information about
      individuals authenticated by the OAuth Authrization Server.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>Thanks to members of the OAuth WG for their contributions and
      comments.</t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>No IANA request registration is anticipated at this time.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>This draft carries the same risk profiles as those outlined in the
      Security Considerations for <xref target="RFC6749"/> and OAuth2 Threat
      Model <xref target="RFC6819"/>.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.6749.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.3339.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.6755.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-oauth-json-web-token-11.xml'?>

      &RFC2119;

      <reference anchor="ISO29115">
        <front>
          <title>ISO/IEC 29115:2013 Information technology -- Security
          techniques -- Entity authentication assurance framework</title>

          <author fullname="Dick Brackney" initials="D." role="editor"
                  surname="Brackney">
            <organization>ITU-T, Microsoft</organization>
          </author>

          <author fullname="Erika McCallister" initials="E." role="editor"
                  surname="NIST">
            <organization>ISO, NIST</organization>
          </author>

          <date/>
        </front>

        <format target="http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=45138"
                type="TXT"/>
      </reference>
    </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->

      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.6819.xml'?>

      <?rfc include='http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-scim-api-01.xml'?>

      <reference anchor="OIDC">
        <front>
          <title>OpenID Connect Basic Client Profile 1.0 - draft 28</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization>NRI</organization>
          </author>

          <author fullname="John Bradley" initials="J.">
            <organization>Ping Identity</organization>
          </author>

          <author fullname="Mike Jones" initials="M." surname="Jones">
            <organization>Microsoft</organization>
          </author>

          <author fullname="B. de Medeiros" initials="B."
                  surname="de Medeiros">
            <organization>Google</organization>
          </author>

          <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
            <organization>Salesforce</organization>
          </author>

          <date/>
        </front>

        <seriesInfo name="OpenID Connect Specs"
                    value="http://openid.net/connect/"/>

        <format target="http://openid.net/specs/openid-connect-basic-1_0.html"
                type="TXT"/>
      </reference>

      <reference anchor="NIST_SP-800-63-2">
        <front>
          <title>DRAFT NIST Special Publication 800-63-2: Electronic
          Authentication Guideline</title>

          <author fullname="William E. Burr" initials="W.E." surname="Burr">
            <organization>NIST Computer Security Division, Information
            Technology Laboratory</organization>
          </author>

          <author fullname="Donna F. Dodson" initials="D.F." surname="Dodson">
            <organization>NIST Computer Security Division, Information
            Technology Laboratory</organization>
          </author>

          <author fullname="Elaine M. Newton" initials="E.M." surname="Newton">
            <organization>NIST Computer Security Division, Information
            Technology Laboratory</organization>
          </author>

          <author fullname="Ray A. Perlner" initials="R.A." surname="Perlner">
            <organization>NIST Computer Security Division, Information
            Technology Laboratory</organization>
          </author>

          <author fullname="W. Timothy Polk" initials="W.T." surname="Polk">
            <organization>NIST Computer Security Division, Information
            Technology Laboratory</organization>
          </author>

          <author fullname="Sabari Gupta" initials="S." surname="Newton">
            <organization>Electrosoft Services, Inc.</organization>
          </author>

          <author fullname="Emad A. Nabbus" initials="E.A." surname="Nabbus">
            <organization>Electrosoft Services, Inc.</organization>
          </author>

          <date month="February" year="2013"/>
        </front>

        <format target="http://csrc.nist.gov/publications/drafts/800-63-2/sp800_63_2_draft.pdf"
                type="PDF"/>
      </reference>

      &I-D.narten-iana-considerations-rfc2434bis;

      <!-- A reference written by by an organization not a person. -->
    </references>

    <!-- Change Log

v00 2013-04-09  PJH   Initial version
v01 2013-08-15  PJH   Added iat to contrast/clarify relation with lat attribute, 
                      Now returning session information as id_token
                      Removed Display function as not needed for authn only
                      Added minimum ALV function.
  -->
  </back>
</rfc>
