<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2434 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2434.xml">
<!ENTITY RFC3688 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml">
<!ENTITY RFC3986 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4589 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4589.xml">
<!ENTITY RFC5545 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5545.xml">
<!ENTITY I-D.daboo-icalendar-extensions SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.daboo-icalendar-extensions.xml">
<!ENTITY W3C.REC-xml-20060816 SYSTEM "http://xml.resource.org/public/rfc/bibxml4/reference.W3C.REC-xml-20060816.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="5"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" docName="draft-douglass-calendar-extension-03" ipr="trust200902">
  <front>
    <title abbrev="Event Publishing Extensions to iCalendar">Event Publishing Extensions to iCalendar</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <author initials="M." surname="Douglass" fullname="Michael Douglass">
      <organization abbrev="RPI">Rensselaer Polytechnic Institute</organization>
      <address>
        <postal>
          <street>110 8th Street</street>
          <city>Troy</city>
          <region>NY</region>
          <code>12180</code>
          <country>USA</country>
        </postal>
        <email>douglm@rpi.edu</email>
        <uri>http://www.rpi.edu/</uri>
      </address>
    </author>

    <date year="2013" />

    <area>Applications</area>

    <keyword>icalendar</keyword>

    <keyword>properties</keyword>

    <abstract>
      <t>
        This specification introduces a number of new iCalendar properties
        which are of particular use for event publishers and in social
        networking.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
        The currently existing iCalendar standard <xref target='RFC5545'/> lacks
        useful methods for referencing additional, external information
        relating to calendar components.
      </t>

      <t>
        This document defines a number of properties referencing external
        information that can provide additional information about an iCalendar
        component. The intent is to allow interchange of such information between  
        applications or systems (e.g., between clients, between client and  server, 
        and between servers). Formats such as VCARD are likely to be
        most useful. 
      </t>

      <t>
        In addition a new property is defined to support HTML descriptions. 
      </t>

      <section anchor="conventions" title='Conventions Used in This Document'>
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
          NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
          "MAY", and "OPTIONAL" in this document are to be interpreted as
          described in <xref target='RFC2119'/>.
        </t>
      </section>
    </section>

    <section title="Typed References">
      <t>
        The properties defined here can all reference external meta-data which  
        may be used by applications to
        provide enhanced value to users. By providing type information  
        as parameters, clients and servers are able to discover interesting 
        references and make use of them, perhaps for indexing or the 
        presentation of additional related information for the user. 
      </t>

      <t>
        These properties are designed to handle common use cases in event 
        publication. It is generally important to provide information about the 
        organizers of such events. Sponsors wish to be referenced in a 
        prominent manner. In social calendaring it is often important to 
        identify the active associates in the event, for example a school 
        sports team, and the inactive associates, for example the parents.
      </t>

      <t>
        The <xref target='RFC5545'/> LOCATION property provides only
        an unstructured single text value for specifying the location where an event
        (or "TODO" item) will occur. This is inadequate for use cases where
        structured location information (e.g. address, region, country, 
        postal code) is required or preferred, and limits widespread adoption of
        iCalendar in those settings. 
      </t>

      <t>
        Using STRUCTURED-LOCATION, information about a number of interesting 
        locations can be communicated, for example, parking, restaurants and
        the venue. Servers and clients can retrieve the objects when
        storing the event and use them to index by geographic location.
      </t>
      
      <t>
        When a calendar client receives a calendar component it can search the 
        set of supplied properties looking for those of particular interest.
        The TYPE and FMTTYPE parameters, if supplied, can be used to help the 
        selection.
      </t>

      <section title="Use Cases">
        <t>
          The main motivation for these properties has been event publication but 
          there are opportunities for use elsewhere. The following use cases will
          describe some possible scenarios.
        </t>
        
        <section title="Piano Concert Performance">
          <t>
            In putting together a concert there are many associates: piano tuner,
            performer, stage hands etc. In addition there are sponsors and various 
            contacts to be provided. There will also be a number of related locations.
            A number of events can be created, all of
            which relate to the performance in different ways. 
          </t>
          
          <t>
            There may be an iTip meeting request for the piano tuner who will arrive 
            before the performance. Other members of staff may also receive meeting
            requests.
          </t>
          
          <t>
            An event can also be created for publication which will have an ASSOCIATE
            reference to the pianist providing vcard information about the performer.
            This event would also hold information about parking, local subway stations
            and the venue itself. In addition, there will be sponsorship information 
            for sponsors of the event and perhaps paid sponsorship properties
            essentially advertising local establishments.
          </t>
        </section>
        
        <section title="Itineraries">
          <t>
            These properties also provide opportunities for the travel industry.
            When booking a flight the SPONSOR property can be used to provide 
            references to businesses at the airports and to car hire businesses
            at the destination.
          </t>
          
          <t>
            The embedded location information can guide the traveller at the airport
            or to their final destination. The contact information can provide
            detailed information about the booking agent, the airlines and car hire 
            companies and the hotel. 
          </t>
        </section>
      </section>
    </section>

    <section title="Modifications to Calendar Components">
      <t>
        The following changes to the syntax defined in 
        <xref target='RFC5545'>iCalendar</xref> are made here. New elements are 
        defined in subsequent sections. 
      <figure>
        <artwork name="abnf"><![CDATA[

eventprop /= *(
              ;
              ; The following are OPTIONAL,
              ; and MAY occur more than once.
              ;
              styleddescription / strucloc / strucres / associate
              ;
              )

todoprop /= *(
             ;
             ; The following are OPTIONAL,
             ; and MAY occur more than once.
             ;
             styleddescription / strucloc / strucres / associate
             ;
             )

jourprop /= *(
             ;
             ; The following are OPTIONAL,
             ; and MAY occur more than once.
             ;
             styleddescription / associate
             ;
             )
]]></artwork>
      </figure></t>
    </section>
    
    <section anchor="relating_properties"
             title="Relating Component Properties">
      <t>
        Within a single component we sometimes need to specify which properties
        are related to each other and their state. For example, by relating a 
        STYLED-DESCRIPTION property to the DESCRIPTION property and saving an
        indication of state, clients can know if one of them has changed and 
        notify the user. 
      </t>
      
      <t>
        This specification defines two new property parameters to enable this
        relating of properties, GROUP and HASH.
      </t>
      
      <t>
        The GROUP parameter provides identifiers for each group within
        the component in which it is specified. It may be specified on any property.
      </t>
      
      <t>
        The HASH parameter is intended to facilitate backwards compatability, 
        allowing clients aware of the new STYLED-DESCRIPTION property to determine
        if an older client has modified the DESCRIPTION.  
      </t>
      
      <t>
        The value of HASH is the base-64 encoded hashed value of the property 
        to which the current property is related
      </t>
      
      <t>
        In the example below a STYLED-DESCRIPTION property is related to the 
        DESCRIPTION property both of which have a GROUP value of "DESC". 
        If the DESCRIPTION property value is changed then the hash-value stored 
        with the STYLED-DESCRIPTION will no longer match.
      </t>
  
      <t hangText="Example:">
        <figure>
          <artwork><![CDATA[
       DESCRIPTION;GROUP=DESC:Some Text
       STYLED-DESCRIPTION;GROUP=DESC;HASH="zlWCFIxvDBKCM1uH317Uvkt
        4E5k=,SHA-1":<p>Some Text</p>
]]></artwork>
        </figure>
      </t>
    </section>
               
    <section anchor="new_property_parameters"
             title="New Property Parameters">
      <section anchor="parameter_hash"
               title="Hash">
        <t>
          <list style='hanging'>
            <t hangText="Parameter name:">
              HASH
            </t>
  
            <t hangText="Purpose:">
              To specify the hash value and method of the DESCRIPTION.
            </t>
  
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>
  
                <artwork type="abnf">
       hashparam = "HASH" "="    /
                      DQUOTE hashval "," hashname DQUOTE
       ; A structured value with the following components:
       hashval = *QSAFE-CHAR
       ; Base64 encoded hash of the value of the property referenced by 
       ; the idval segment
       hashname = *QSAFE-CHAR
       ; Name of the hash function used to calculate the hash value
                </artwork>
              </figure>
            </t>
  
            <t hangText="Description:">
              This parameter can be specified on STYLED-DESCRIPTION and is used 
              to detect changes in that property to enable the values of all 
              variants to be kept synchronized. 
            </t>
      
            <t>
              The text value is a hash 
              value (encoded as a base-64 string), followed by a token describing
              the algorithm used to calculate the hash value. Algorithm
              names from the IANA Hash Function Textual Names registry [] MUST 
              be used.
            </t>
            
            <t>
              Each element of the value is separated by a COMMA character, 
            </t>
            
            <t>
              Clients maintaining multiple versions of a description MAY use
              this parameter to indicate that the associated 
              STYLED-DESCRIPTION property needs to be updated, Removing the
              parameter indicates that the property may be out of synch.
            </t>
          </list>
        </t>
      </section>
       
      <section anchor="parameter_group"
               title="Group">
        <t>
          <list style='hanging'>
            <t hangText="Parameter name:">
              GROUP
            </t>
  
            <t hangText="Purpose:">
              To identify groups of properties.
            </t>
  
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>
  
                <artwork type="abnf">
  groupparam   = "GROUP" "=" paramtext *("," paramtext)
                </artwork>
              </figure>
            </t>
  
            <t hangText="Description:">
              This parameter can be specified on any property. It is used
              to identify properties which are related to other 
              properties within the same component.
            </t>
            
            <t>
              Rather than adding extra parameters to properties the GROUP parameter
              allow one or more properties to provide extra metadata. For example
              we may wish to relate some form of status property to an ATTENDEE
              to describe the status of a task. 
            </t>
            
            <t>
              It is the responsibility of calendar applications to maintain the
              relationships between grouped items. Deleting one member of a 
              group may imply deleting others or removing GROUP parameters from 
              other properties. 
            </t>
          </list>
        </t>
      </section>

      <section anchor="parameter_loctype"
               title="Loctype">
        <t>
          <list style='hanging'>
            <t hangText="Parameter name:">
              LOCTYPE
            </t>
  
            <t hangText="Purpose:">
              To specify the type of location.
            </t>
  
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>
  
                <artwork type="abnf">
  loctypeparam   = "LOCTYPE" "=" param-value
                </artwork>
              </figure>
            </t>
  
            <t hangText="Description:">
              This parameter MAY be specified on STRUCTURED-LOCATION and
              provides a way to differentiate multiple properties. For example, 
              it allows event producers to provide location information for 
              the venue and the parking.
            </t>
            
            <t>
              Values for this parameter are taken from the values defined in 
              <xref target='RFC5545'/>. New location types SHOULD be 
              registered in the manner laid down in that specification
            </t>
          </list>
        </t>
      </section>

      <section anchor="parameter_assoctype"
               title="Assoctype">
        <t>
          <list style='hanging'>
            <t hangText="Parameter name:">
              ASSOCTYPE
            </t>
  
            <t hangText="Purpose:">
              To specify the type of associate.
            </t>
  
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>
  
                <artwork type="abnf">
  assoctypeparam   = "ASSOCTYPE" "=" param-value
                </artwork>
              </figure>
            </t>
  
            <t hangText="Description:">
              This parameter MAY be specified on the ASSOCIATE property, and
              defines the type of association. Allowable values are defined
              in <xref target="associate_types"/>.
            </t>
          </list>
        </t>
      </section>

      <section anchor="parameter_restype"
               title="Restype">
        <t>
          <list style='hanging'>
            <t hangText="Parameter name:">
              RESTYPE
            </t>
  
            <t hangText="Purpose:">
              To specify the type of resource.
            </t>
  
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>
  
                <artwork type="abnf">
  restypeparam   = "RESTYPE" "=" param-value
                </artwork>
              </figure>
            </t>
  
            <t hangText="Description:">
              This parameter MAY be specified on STRUCTURED-RESOURCE and
              provides a way to differentiate multiple properties.
            </t>
            
            <t>
              Values for this parameter are taken from the values defined in 
              [todo]. New resource types SHOULD be 
              registered in the manner laid down in that specification
            </t>
          </list>
        </t>
      </section>
      
      <section anchor="parameter_order"
               title="Order">
        <t>
          <list style='hanging'>
            <t hangText="Parameter name:">
              ORDER
            </t>
  
            <t hangText="Purpose:">
              To define ordering for the associated property.
            </t>
  
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>
  
                <artwork type="abnf">
  orderparam    = "ORDER" "=" integer ;Must be in the range [1..100]
                </artwork>
              </figure>
            </t>
  
            <t hangText="Description:">
              The ORDER parameter is OPTIONAL and is used to indicate the
              relative ordering of the corresponding instance of a property.
              Its value MUST be an integer between 1 and 100 that
              quantifies the order.  Lower values correspond to a
              higher level of ordering, with 1 being the highest.
            </t>

            <t>
              When the parameter is absent, the default MUST be to interpret the
              property instance as being at the lowest level of ordering.
            </t>

            <t>
              Note that the value of this parameter is to be interpreted only in
              relation to values assigned to other corresponding instances of 
              the same property in the same entity. A given value, or the 
              absence of a value, MUST NOT be interpreted on its own.
            </t>

            <t>
              This parameter MAY be applied to any property that allows multiple
              instances.
            </t>
          </list>
        </t>
      </section>
      
      <section anchor="parameter_label"
               title="Label">
        <t>
          <list style='hanging'>
            <t hangText="Parameter name:">
              LABEL
            </t>
  
            <t hangText="Purpose:">
              To provide a human readable label.
            </t>
  
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This parameter is defined by the following notation:
                </preamble>
  
                <artwork type="abnf">
  labelparam     = "LABEL" "=" DQUOTE text DQUOTE
                </artwork>
              </figure>
            </t>
  
            <t hangText="Description:">
              This parameter MAY be specified on STYLED-DESCRIPTION, ASSOCIATE,
              STRUCTURED-LOCATION and STRUCTURED-RESOURCE and
              provides a human readable label, perhaps for icons or links..
            </t>
          </list>
        </t>
      </section>
    </section>

    <section anchor="new_properties"
             title="New Properties">
      <section anchor="associate"
               title="Associate">
        <t>
          <list style='hanging'>
            <t hangText="Property name:">
              ASSOCIATE
            </t>
  
            <t hangText="Purpose:">
              This property provides a typed reference to external information 
              about associates in an event or optionally a plain text typed value.
            </t>
  
            <t hangText="Value type:">
              The default value type for this property is URI.  The
              value type can also be set to TEXT to indicate plain text
              content.
            </t>
  
            <t hangText="Property Parameters:">
              Non-standard, label, assoctype, order or format type parameters 
              can be specified on this property.
            </t>
  
            <t hangText="Conformance:">
              This property MAY be specified in any iCalendar component.
            </t>
  
            <t hangText="Description:">
              When used in a component the value of this property points to
              information about an event associate. This is NOT an attendee
              in a scheduling sense and the ATTENDEE property may in fact be 
              specified in addition. Associates in events can be individuals
              or organizations, for example a soccer team, the spectators, or
              the musicians.
            </t>
  
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>
  
                <artwork>
  associate     = "ASSOCIATE" assocparam 
                    (
                      ";" "VALUE" "=" "URI"
                      ":" uri)  /
                    (
                      ";" "VALUE" "=" "TEXT"
                      ":" text
                    )
                    CRLF

  assocparam      = *(

                  ; the following are OPTIONAL
                  ; but MUST NOT occur more than once

                  (";" fmttypeparam) /
                  (";" labelparam) /
                  (";" orderparam) /
                  (";" assoctypeparam) /
                  (";" groupparam) /

                  ; the following is OPTIONAL
                  ; and MAY occur more than once

                  (";" other-param)

                  )

                </artwork>
              </figure>
            </t>
  
            <t hangText="Note:">
              When the ORDER parameter is supplied it defines the ordering of
              ASSOCIATE properties with the same value for the TYPE parameter.
            </t>
  
            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example of this property.  It points to a
                  VCARD providing information on an event associate.
                </preamble>
  
                <artwork>
                 ASSOCIATE;ASSOCTYPE=PRINCIPAL_PERFORMER:
                   http://dir.example.com/vcard/aviolinist.vcf
                </artwork>
              </figure>
            </t>
  
            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example referring to a
                  VCARD providing information on the primary contact.
                </preamble>
  
                <artwork>
                 ASSOCIATE;FMTTYPE=text/vcard;
                   ASSOCTYPE=PRIMARY-CONTACT;LABEL=A contact:
                   http://dir.example.com/vcard/contacts/contact1.vcf
                </artwork>
              </figure>
            </t>
  
            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example of the property used to link to
                  VCARD information on the event planner.
                </preamble>
  
                <artwork>
                 ASSOCIATE;FMTTYPE=text/vcard;
                   ASSOCTYPE=PLANNER-CONTACT;LABEL=ClownsIsUs:
                   http://dir.example.com/vcard/clowns-is-us.vcf
                </artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>
      
      <section anchor="styled-description"
               title="Styled-Description">
        <t>
          <list style='hanging'>
            <t hangText="Property name:">
              STYLED-DESCRIPTION
            </t>
  
            <t hangText="Purpose:">
              This property provides for one or more rich-text descriptions to 
              replace or augment that provided by the DESCRIPTION property.
            </t>
  
            <t hangText="Value type:">
              There is no default value type for this property.  The value type
              can be set to URI or TEXT. Other text-based value types
              can be used when defined in the future. Clients MUST ignore any properties
              with value types they do not understand.
            </t>
  
            <t hangText="Property Parameters:">
              IANA, non-standard, hash, id, alternate text
              representation, and language property parameters can be specified
              on this property.
            </t>
  
            <t hangText="Conformance:">
              The property can be specified multiple times in the "VEVENT", "VTODO",
      "VJOURNAL", or "VALARM" calendar components.
            </t>
  
            <t hangText="Description:">
              This property is used in the "VEVENT" and "VTODO" to
              capture lengthy textual descriptions associated with the activity.
              This property is used in the "VJOURNAL" calendar component to
              capture one or more textual journal entries.
              This property is used in the "VALARM" calendar component to
              capture the display text for a DISPLAY category of alarm, and to
              capture the body text for an EMAIL category of alarm.
            </t>
            
            <t>
              VALUE=TEXT is used to provide rich-text variants of the plain-text
              DESCRIPTION property.
            </t>
            
            <t>
              VALUE=URI is used to provide a link to rich-text content which is 
              expected to be displayed inline as part of the event.
            </t>
            
            <t>
              The "HASH" parameter value is calculated from the value of any  
              "DESCRIPTION" property present in the same component. If no  
              "DESCRIPTION" is present, then the "HASH" parameter MUST NOT be present.
            </t>
            
            <t>
              The intent of this property is limited to providing a styled and/or
              language specific version of the DESCRIPTION property. The URL 
              property should be used to link to websites or other related information.
            </t>

            <t>
              Applications MAY attempt to guess the media type of the
              resource via inspection of its content if and only if the media
              type of the resource is not given by the "FMTTYPE" parameter.  If
              the media type remains unknown, calendar applications SHOULD treat
              it as type "text/html".
            </t>

            <t>
              Multiple STYLED-DESCRIPTION properties may be used to provide
              different formats or different language variants. The GROUP 
              paramater may be used to relate members of the group This is useful
              for VJOURNAL for example which allows multiple, unrelated, 
              DESCRIPTION properties.
            </t>  
            
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>
  
                <artwork>
  styleddescription = "STYLED-DESCRIPTION" styleddescparam ":" 
                    (
                      ";" "VALUE" "=" "URI"
                      ":" uri)  /
                    (
                    (
                      ";" "VALUE" "=" "TEXT"
                      ":" text
                    )
                    CRLF

  styleddescparam   = *(
                 ;
                 ; The following are OPTIONAL,
                 ; but MUST NOT occur more than once.
                 ;
                 (";" altrepparam) / (";" languageparam) / 
                 (";" fmttypeparam) / (";" hashparam) / 
                 (";" groupparam) / 
  
                 ; the following is OPTIONAL
                 ; and MAY occur more than once
  
                 (";" other-param)

                </artwork>
              </figure>
            </t>
  
            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example of this property.  It points to an
                  html description.
                </preamble>
  
                <artwork>
       STYLED-DESCRIPTION;VALUE=URI:http://example.org/desc001.html
                </artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>      
      
      <section anchor="structured-location"
               title="Structured-Location">
        <t>
          <list style='hanging'>
            <t hangText="Property name:">
              STRUCTURED-LOCATION
            </t>
  
            <t hangText="Purpose:">
              This property provides a typed reference to external information 
              about the location of an event or optionally a plain text typed value.
            </t>
  
            <t hangText="Value type:">
              There is no default value type for this property.  The value type
              can be set to URI or TEXT. Other text-based value types
            </t>
  
            <t hangText="Property Parameters:">
              IANA, non-standard, label, loctype or format type parameters can be
              specified on this property.
            </t>
  
            <t hangText="Conformance:">
              This property MAY be specified zero or more times in any iCalendar 
              component.
            </t>
  
            <t hangText="Description:">
              When used in a component the value of this property provides
              information about the event venue or of related services such as
              parking, dining, stations etc..
            </t>
            
            <t>
              When a LABEL parameter is supplied the language of the label must
              match that of the content and of the LANGUAGE parameter if present.
            </t>
  
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>
  
                <artwork>
  strucloc        = "STRUCTURED-LOCATION" struclocparam 
                    (
                      ";" "VALUE" "=" "URI"
                      ":" uri)  /
                    (
                    (
                      ";" "VALUE" "=" "TEXT"
                      ":" text
                    )
                    CRLF

  struclocparam   = *(

                  ; the following are OPTIONAL
                  ; but MUST NOT occur more than once

                  (";" fmttypeparam) /
                  (";" labelparam) /
                  (";" languageparam) /
                  (";" loctypeparam) /
                  (";" groupparam) /

                  ; the following is OPTIONAL
                  ; and MAY occur more than once

                  (";" other-param)

                  )

                </artwork>
              </figure>
            </t>
  
            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example of this property.  It points to a
                  venue.
                </preamble>
  
                <artwork>
                 STRUCTURED-LOCATION;LABEL="The venue":
                   http://dir.example.com/venues/big-hall.vcf
                </artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>
      
      <section anchor="structured-resource"
               title="Structured-Resource">
        <t>
          <list style='hanging'>
            <t hangText="Property name:">
              STRUCTURED-RESOURCE
            </t>
  
            <t hangText="Purpose:">
              This property provides a typed reference to external information 
              about a resource or optionally a plain text typed value.
            </t>
  
            <t hangText="Value type:">
              The default value type for this property is URI.  The
              value type can also be set to TEXT to indicate plain text
              content.
            </t>
  
            <t hangText="Property Parameters:">
              IANA, non-standard, label, restype or format type parameters can be
              specified on this property.
            </t>
  
            <t hangText="Conformance:">
              This property MAY be specified zero or more times in any iCalendar 
              component.
            </t>
  
            <t hangText="Description:">
              When used in a component the value of this property provides
              information about resources used for the event.
            </t>
            
            <t>
              When a LABEL parameter is supplied the language of the label must
              match that of the content and of the LANGUAGE parameter if present.
            </t>
  
            <t hangText="Format Definition:">
              <figure>
                <preamble>
                  This property is defined by the following notation:
                </preamble>
  
                <artwork>
  strucres       = "STRUCTURED-LOCATION" strucresparam (":" uri)  /
                    (
                      ";" "VALUE" "=" "TEXT"
                      ":" text
                    )
                    CRLF

  strucresparam  = *(

                  ; the following are OPTIONAL
                  ; but MUST NOT occur more than once

                  (";" fmttypeparam) /
                  (";" labelparam) /
                  (";" languageparam) /
                  (";" restypeparam) /
                  (";" groupparam) /

                  ; the following is OPTIONAL
                  ; and MAY occur more than once

                  (";" other-param)

                  )

                </artwork>
              </figure>
            </t>
  
            <t hangText="Example:">
              <figure>
                <preamble>
                  The following is an example of this property. It refers to a
                  projector.
                </preamble>
  
                <artwork>
                 STRUCTURED-RESOURCE;restype="projector":
                   http://dir.example.com/projectors/3d.vcf
                </artwork>
              </figure>
            </t>
          </list>
        </t>
      </section>
    </section>

    <section anchor="associate_types"
             title="Associate Types">
      <t>
        This section describes types of association and provide registered
        values for the ASSOCIATE property ASSOCTYPE parameter.
      </t>
      <t>
        <list style='hanging'>
          <t hangText="ACTIVE:" >
            An associate taking an active role - for example a team member.
          </t>
          
          <t hangText="INACTIVE:">
            An associate taking an inactive part - for example an audience member.
          </t>
          
          <t hangText="SPONSOR:">
            A sponsor of the event. The ORDER parameter may be used with this
            associate type to define the relative order of multiple sponsors.
          </t>
          <t hangText="CONTACT:">
            Contact information for the event. The ORDER parameter may be used with this
            associate type to define the relative order of multiple contacts.
          </t>
          
          <t hangText="BOOKING-CONTACT:">
            Contact information for reservations or payment
          </t>
          
          <t hangText="EMERGENCY-CONTACT:">
            Contact in case of emergency
          </t>
          
          <t hangText="PUBLICITY-CONTACT:">
            Contact for publicity 
          </t>
          
          <t hangText="PLANNER-CONTACT:">
            Contact for the event planner or organizer
          </t>
          
          <t hangText="PERFORMER:">
            A performer - for example the soloist or the accompianist.  The 
            ORDER parameter may be used with this  associate type to define 
            the relative order of multiple sponsors. For example,ORDER=1 could
            define the principal performer or soloist.
          </t>
          
          <t hangText="SPEAKER:">
            Speaker at an event 
          </t>
        </list>
      </t>
   </section>

    <section title='Extended examples'>
      <t>
       The following are some examples of the use of the properties defined in 
       this specification. They include additional properties defined in 
       <xref target='I-D.daboo-icalendar-extensions'/> which includes IMAGE and LIVEFEED.  
      </t>
      
      <section title='Example 1'>
        <figure>
          <preamble>
            The following is an example of a VEVENT describing a concert. 
            It includes location 
            information for the venue itself as well as references to parking and 
            restaurants. 
          </preamble>

          <artwork>
BEGIN:VEVENT
CREATED:20101116T145739Z
DESCRIPTION: Piano Sonata No 3\n
 Piano Sonata No 30
DTSTAMP:20101116T145739Z
DTSTART;TZID=America/New_York:20110315T150000Z
DTEND;TZID=America/New_York:20110315T163000Z
LAST-MODIFIED:20101116T145739Z
SUMMARY:Beethoven Piano Sonatas
UID:123456
STRUCTURED-LOCATION;LABEL="The venue":
 http://dir.example.com/venues/big-hall.vcf
STRUCTURED-LOCATION;LABEL="The venue":
 http://dir.example.com/venues/parking.vcf
ASSOCIATE;ASSOCTYPE=SPONSOR:http://example.com/sponsor.vcf 
ASSOCIATE;ASSOCTYPE=PERFORMER:
 http://www.example.com/people/johndoe.vcf
END:VEVENT

          </artwork>
        </figure>
      </section>
    </section>

    <section title='Security Considerations'>
      <t>
       Applications using these property need to be aware of the risks 
       entailed in using the URIs provided as values. See [RFC3986] for 
       a discussion of the security considerations relating to URIs. 
      </t>
    </section>

    <section anchor="iana_considerations" title='IANA Considerations'>
      <section anchor="property_registrations"
               title="Property Registrations" >
        <t>
          This document defines the following new iCalendar properties to be
          added to the registry defined in Section 8.2.3 of <xref target='RFC5545'/>:
        </t>
        <texttable>
          <ttcol align="left">Property</ttcol>
          <ttcol align="left">Status</ttcol>
          <ttcol align="left">Reference</ttcol>

          <c>ASSOCIATE</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate"/></c>

          <c>STYLED-DESCRIPTION</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="styled-description"/></c>

          <c>STRUCTURED-LOCATION</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="structured-location"/></c>

          <c>STRUCTURED-RESOURCE</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="structured-resource"/></c>
        </texttable>
      </section>
      
      <section anchor="parameter_registrations"
               title="Parameter Registrations" >
        <t>
          This document defines the following new iCalendar property parameters
          to be added to the registry defined in Section 8.2.4 of <xref target='RFC5545'/>:
        </t>
        <texttable>
          <ttcol align="left">Property Parameter</ttcol>
          <ttcol align="left">Status</ttcol>
          <ttcol align="left">Reference</ttcol>

          <c>ASSOCTYPE</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="parameter_assoctype"/></c>

          <c>GROUP</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="parameter_group"/></c>

          <c>HASH</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="parameter_hash"/></c>

          <c>LABEL</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="parameter_label"/></c>

          <c>LOCTYPE</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="parameter_loctype"/></c>

          <c>ORDER</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="parameter_order"/></c>

          <c>RESTYPE</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="parameter_restype"/></c>
        </texttable>
      </section>
      
      <section anchor="associate_type_registrations"
               title="Associate Type Registrations" >
        <t>
          The following table has been used to initialize the associate
   types registry.
        </t>
        <texttable>
          <ttcol align="left">Associate Type</ttcol>
          <ttcol align="left">Status</ttcol>
          <ttcol align="left">Reference</ttcol>

          <c>ACTIVE</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate_types"/></c>

          <c>INACTIVE</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate_types"/></c>

          <c>SPONSOR</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate_types"/></c>

          <c>CONTACT</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate_types"/></c>

          <c>BOOKING-CONTACT</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate_types"/></c>

          <c>EMERGENCY-CONTACT</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate_types"/></c>

          <c>PUBLICITY-CONTACT</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate_types"/></c>

          <c>PLANNER-CONTACT</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate_types"/></c>

          <c>PERFORMER</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate_types"/></c>

          <c>SPEAKER</c>
          <c>Current</c>
          <c>RFCXXXX, <xref target="associate_types"/></c>
        </texttable>
      </section>
    </section>

    <section title="Acknowledgements">
      <t>
        The author would like to thank Chuck Norris of eventful.com for his work 
        which led to the development of this RFC.  
      </t>
      <t>
        The author would also like to thank the members of the Calendaring and
        Scheduling Consortium Event Publication technical committee and the following
        individuals for contributing their ideas and support:
      </t>
      <t>
        Cyrus Daboo, John Haug, Dan Mendell, Scott Otis,
      </t>
      <t>
        The authors would also like to thank the Calendaring and
        Scheduling Consortium for advice with this specification.
      </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      &RFC2119;
      &RFC2434;
      &RFC3688;
      &RFC3986;
      &RFC4589;
      &RFC5545;
      &W3C.REC-xml-20060816;
      &I-D.daboo-icalendar-extensions;
    </references>

    <section title="Open issues">
      <t>
        <list style='hanging'>
          <t hangText="restype values:" >
            Need to determine what if nay registry of resource tyes already
            exists and use that.
          </t>
        </list>
      </t>
    </section>
    
    <section title="Change log">
      <t>
        v03 2013-03-06  MD   
        <list style='symbols'>
          <t>
            Replace PARTICIPANT with ASSOCIATE plus related changes.
          </t>
          <t>
            Added section showing modifications to components.
          </t>
          <t>
            Replace ID with GROUP and modify HASH.
          </t>
          <t>
            Replace TITLE param with LABEL.
          </t>
          <t>
            Fixed STYLED-DESCRIPTION in various ways, correct example.
          </t>
        </list>
      </t>
      <t>
        v02 2012-11-02  MD   
        <list style='symbols'>
          <t>
            Collapse sections with description of properties and the use cases 
            into a section with sub-sections.
          </t>
          <t>
            New section to describe relating properties.
          </t>
          <t>
            Remove idref and upgrade hash to have the reference
          </t>
          <t>
            No default value types on properties..
          </t>
        </list>
      </t>
      <t>
        v01 2012-10-18  MD    Many changes.
        <list style='symbols'>
          <t>
            SPONSOR and STRUCTURED-CONTACT are now in PARTICIPANT
          </t>
          <t>
            Add a STRUCTURED-RESOURCE property
          </t>
          <t>
            STYLED-DESCRIPTION to handle rich text
          </t>
          <t>
            Much more...
          </t>
        </list>
      </t>
      <t>
        2011-01-07 
        <list style='symbols'>
          <t>
            Remove MEDIA - it's going in the Cyrus RFC
          </t>
          <t>
            Rename EXTENDED-... to STRUCTURED-...
          </t>
          <t>
            Add TYPE parameter to SPONSOR
          </t>
        </list>
      </t>
      <t>
        v00 2007-10-19  MD    Initial version
      </t>
    </section>
  </back>
</rfc>
