<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc compact="yes"?>
<?rfc toc="yes"?>
<rfc ipr="trust200811" docName="draft-ietf-cuss-sip-uui-06" 
category="std">

<front>

<title abbrev="SIP UUI for CC">A Mechanism for Transporting User to User Call Control Information in SIP</title>

<author initials="A." surname="Johnston" fullname="Alan Johnston">
<organization>Avaya</organization>
 <address>
  <postal>
   <city>St. Louis</city><region>MO</region><code>63124</code> 
  </postal>
  <email>alan.b.johnston@gmail.com</email>
  </address>
</author>

<author initials="J." surname="Rafferty" fullname="James Rafferty">
<organization>Dialogic</organization>
<address>
<email> 
james.rafferty@dialogic.com
</email>
</address>
</author>

<date month="May" year="2012"/>

<abstract>
 <t>
There is a class of applications which benefit from using SIP to exchange User to User Information (UUI) data during session establishment.   This information, known as call control UUI data, is a small piece of data inserted by an application initiating the session, and utilized by an application accepting the session. The rules which apply for a specific application are defined by a UUI package.  This UUI data is opaque to SIP and its function is unrelated to any basic SIP function.  This document defines a new SIP header field, User-to-User, to transport UUI data, along with an extension mechanism.</t>
</abstract>

</front>
<middle>

<section title="Overview">
 <t>  
This document describes the transport of User to User Information (UUI) data using SIP <xref target="RFC3261" />.    A mechanism is defined for the transport of general application UUI data and for the transport of call control related ITU-T Q.931 User to User Information  Element (UU IE) <xref target="Q931" /> and ITU-T Q.763 User to User Information Parameter <xref target="Q763"/> data in SIP. UUI data is widely used in the PSTN today for contact centers and call centers.  There is also a trend for the related applications to transition from ISDN to SIP.  The UUI extension for SIP may also be used for native SIP UAs implementing similar services and to interwork with ISDN services. Note that in most cases, there is an a priori understanding between the UAs in regard to what to do with received UUI data.
</t><t>
This mechanism was designed to meet the use cases, requirements, and call flows for SIP call control UUI detailed in <xref target="I-D.ietf-cuss-sip-uui-reqs" />.  All references to requirement numbers (REQ-N) and figure numbers refer to this document.  
</t>
<t>
The mechanism is a new SIP header field, along with a new SIP option tag.  The header field carries the UUI data, along with parameters indicating the encoding of the UUI data, the UUI package, and optionally the content of the UUI data.  The package definition contains details about how a particular application can utilize the UUI mechanism.  The header field can be included (sometimes called "escaped") into URIs supporting referral and redirection scenarios.  In these scenarios, History-Info is used to indicate the inserter of the UUI data.  The SIP option tag can be used to indicate support for the header field.  Support for the UUI header field indicates that a UA is able to extract the information in the UUI data and pass it up the protocol stack.  Individual packages using the UUI mechanism can utlize SIP media feature tags to indicate that a UA supports a particular UUI package.  Guidelines for defining UUI packages are provided.
</t>
</section>

<section title="Terminology">
<t>
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in BCP 14, RFC 2119 <xref 
target="RFC2119"/>.
</t>
</section>


<section title="Requirements Discussion">
<t>
This section describes how the User-to-User header field meets the requirements in <xref target="I-D.ietf-cuss-sip-uui-reqs" />.  The header field can be included in INVITE requests and 
responses and BYE requests and responses, meeting REQ-1 and REQ-2.  </t>

<t>

For redirection and referral use cases and REQ-3, the header field shall be included (escaped) into the Contact or Refer-To URI.  Currently, UAs that support attended transfer support the ability to include a Replaces header field into a Refer-To URI, and when acting upon this URI add the Replaces header field to the triggered INVITE.  This logic and behavior is identical for the UUI header field.  The UA processing the REFER or the 3xx to the INVITE will need to support the UUI mechanism, as UAs in general do not process unknown included header fields.    
</t>
<t>
Since SIP proxy forwarding and retargeting does not affect header fields, the header field meets REQ-4.
</t>
<t>
The UUI header field will carry the UUI data and not a pointer to the data, so REQ-5 is met.
</t>
<t>
Since the basic design of the UUI header field is similar to the ISDN UUI service, interworking with PSTN protocols will be straightforward and will be documented in a separate specification, meeting REQ-6.
</t>
<t>
Requirements REQ-7, REQ-8, and REQ-10 relate to discovery of the mechanism and supported packages, and hence applications.  REQ-7 relates to support of the UUI header field, while REQ-8 relates to routing based on support of the UUI header field.  REQ-7 is met by defining a new SIP option tag 'uui'.  The use of a Require:uui in a request, or Supported:uui in an OPTIONS response could be used to require or discover support of the mechanism.  The presence of a Supported:uui or Require:uui header field can be used by proxies to route to an appropriate UA, meeting REQ-8.  However, note that only UAs are expected to understand the UUI data - proxies and other intermediaries do not.   REQ-10 is met by utlizing SIP feature tags <xref target="RFC3840" />.  For example, the feature tag 'sip.uui-isdn' could be used to indicate support of the ISDN UUI package, or 'sip.uui-pk1' could be used to indicate support for a particular package, pk1. 
</t>
<t>
Proxies commonly apply policy to the presence of certain SIP header fields in requests by either passing them or removing them from requests.  REQ-9 is met by allowing proxies and other intermediaries to remove UUI header fields in a request or response based on policy.
</t>
<t>
Carrying UUI data elements of at least 129 octets is trivial in the UUI header field, meeting REQ-11.  Note that very large UUI data elements should be avoided, as SIP header fields have traditionally not been large.
</t>
<t>
To meet REQ-12 for the redirection and referral use cases, History-Info <xref target="I-D.ietf-sipcore-rfc4244bis" /> can be used.  In these retargeting cases, the changed Request-URI will be recorded in the History-Info header field along with the identity of the element that performed the retargeting. </t>

<t>
The requirement for integrity protection in REQ-13 could be met by the use of an S/MIME signature over a subset of header fields, as defined in Section 23.4 of RFC 3261 "SIP Header Privacy and Integrity using S/MIME: Tunneling SIP".  The requirement of REQ-14 for end-to-end privacy could be met using S/MIME or using encryption at the application layer.   Note that the use of S/MIME to secure the UUI data will result in an additional body being added to the request. Hopwise TLS allows the header field to meet REQ-15 for hop-by-hop security.</t>
</section>


<section title="Normative Definition">
<t>
This document defines a new SIP header field "User-to-User" to transport call control UUI data to meet the requirements in <xref target="I-D.ietf-cuss-sip-uui-reqs" />.  
</t>
<t>
To help tag and identify the UUI data used with this header field, "purpose", 
"content", and "encoding" header field parameters are defined. The "purpose" header field parameter identifies the package which defines the generation and usage of the UUI data for a particular application.  For the case of interworking with the ISDN UUI Service, the ISDN UUI Service interworking package is used.   If the "purpose" header field parameter is not present, interworking with the ISDN UUI Service MUST be assumed.  The "content" header field parameter identifies the actual content of the UUI data.  If not present, the content MUST be assumed to be the default defined for the package.  Newly defined UUI packages MUST define a new "content" value.  The "encoding" header field parameter indicates the method of encoding the information in the UUI data.   This specification only defines  "encoding=hex".  If the "encoding" header field parameter is not present, the encoding MUST be assumed to be the default defined for the package. </t>

<t>
UUI data is considered an opaque series of octets.  This mechanism SHOULD NOT be used to convey a URL or URI; the Call-Info header field <xref target="RFC3261" /> is used for this purpose.
</t>

<section title="Syntax for UUI Header Field">
<t>
   The User-to-User header field can be present in INVITE requests and responses 
only and in BYE requests and responses.  Note that only end-to-end responses can be used, e.g. 1xx (excluding 100), 2xx, and 3xx responses.
</t>
<t>
   The following syntax specification uses the augmented Backus-Naur
   Form (BNF) as described in RFC 5234 and extends RFC 3261.
</t>
<figure><artwork><![CDATA[
      UUI         = "User-to-User" HCOLON uui-value *(COMMA uui-value)
      uui-value   = uui-data *(SEMI uui-param)
      uui-data    = token / quoted-string
      uui-param   = pkg-param / cont-param / enc-param / generic-param
      pkg-param   = "purpose" EQUAL token
      cont-param  = "content" EQUAL token
      enc-param   = "encoding" EQUAL ("hex" / token)
]]></artwork></figure>
<t>

The rules for how many User-to-User header field of each package may be present in a request or a response are defined for each package.  The syntax allows any combination of individual User-to-User header fields or User-to-User header fields with multiple comma separated UUI data elements.  Multiple User-to-User header fields MAY be present in a request or response.  Any size limitations on the UUI data for a particular purpose must be defined by the related UUI package.  
</t>
<t>
UAs SHOULD ignore UUI data from packages or encoding that they do not understand.
</t>
<t>
If an element supports this specification, it SHOULD include any UUI data included in a redirection URI.  Note that redirection can occur multiple times to a request.
</t>
<t>
Here is an example of an included User-to-User header field from the redirection 
response F2 of Figure 3:
</t>
<figure><artwork><![CDATA[
<allOneLine>
Contact: <sip:+12125551212@gateway.example.com?User-to-User=
56a390f3d2b7310023a%3Bencoding%3Dhex%3Bpurpose%3Dfoo%3B
content%3Dbar>
</allOneLine>
]]></artwork></figure>

<t>
The resulting INVITE F5 would contain:
</t>
<figure><artwork><![CDATA[
User-to-User: 56a390f3d2b7310023a;encoding=hex;purpose=foo;content=bar
]]></artwork></figure>

</section>


<section title="Hex Encoding Definition">
<t>
This specification defines hex encoding of UUI data.  The value of "hex" for the "encoding" header field parameter is normatively defined in this section.  It is used to encode binary UUI data with a length that terminates at an octet boundary. Each octet of binary data to be represented in the hex encoding MUST be mapped to two hexadecimal digits (represented by ASCII characters 0-9, A-F and a-f), each representing four bits within the octet. The four bits appearing first in the binary UUI data MUST be mapped to the first hexadecimal digit and the four subsequent bits in the binary UUI data MUST be mapped to the second hexadecimal digit. When mapping 4 bits to a hexadecimal digit, the bit appearing first in the binary UUI data shall be most significant. Thus, Hex encoded UUI data must have an even number of hexadecimal digits, and MUST be considered invalid if it has an odd number. Hex encoding is normally done as a token, although quoted-string is permitted, in which case the quotes MUST be ignored.
</t>
</section>

<section title="Source Identity of UUI data">
<t>
It is important for the recipient of UUI data to know the identity of the UA that inserted the UUI data.  In a request without a History-Info <xref target="I-D.ietf-sipcore-rfc4244bis" /> header field, the identity of the entity which inserted the UUI data will be assumed to be the source of the SIP message.  For a SIP request, typically this is the UA identified by the URI in the From header field or a P-Asserted-Identity <xref target="RFC3325" /> header field.  In a request with a History-Info header field, the recipient needs to parse the Targeted-to-URIs present (hi-targeted-to-uri) to see if any included User-to-User header fields are present.  If an included User-to-User header field is present and matches the UUI data in the request, this indicates that redirection has taken place, resulting in the inclusion of UUI data in the request.  The inserter of the UUI data will be the UA identified by the Targeted-to-URI of the History-Info element prior to the element with the included UUI data.  In a response, the inserter of the UUI data will be the identity of the UA that generated the response.  Typically, this is the UA identified in the To header field of the response.  Note that any updates to this identity by use of the SIP Connected Identity extension <xref target="RFC4916" /> or others will update this information.
</t>
<t>
For an example of History-Info and redirection, consider Figure 2 from <xref target="I-D.ietf-cuss-sip-uui-reqs" /> where the Originating UA is Carol, the Redirector Bob, and the Terminating UA Alice. The INVITE F4 containing UUI data could be:
</t>
<figure><artwork><![CDATA[
INVITE sips:alice@example.com SIP/2.0
Via: SIP/2.0/TLS lab.example.com:5061
 ;branch=z9hG4bKnashds9
To: Bob <sips:bob@example.com>
From: Carol <sips:carol@example.com>;tag=323sf33k2
Call-ID: dfaosidfoiwe83ifkdf
Max-Forwards: 70
Contact: <sips:carol@lab.example.com>
Supported: histinfo
User-to-User: 342342ef34;encoding=hex
History-Info: <sips:bob@example.com>;index=1
<allOneLine>
History-Info: <sips:alice@example.com?Reason=SIP%3Bcause%3D302
   &User-to-User=342342ef34%3Bencoding%3Dhex>;index=1.1;rc=1
</allOneLine>
]]></artwork></figure>
<t>
Without the redirection captured in the History-Info, Alice would conclude the UUI data was inserted by Carol.  However, the History-Info containing UUI data (index=1.1) indicates that the inserter was Bob (index=1).
</t><t>
Note that the &lt;allOneLine&gt; tag convention from <xref target="RFC4475">SIP 
Torture Test Messages</xref> is used to show that there are no line breaks in 
the actual message syntax.
</t>
<t>
To enable maintaining a record of the inserter identity of UUI data, UAs supporting this mechanism SHOULD support History-Info <xref target="I-D.ietf-sipcore-rfc4244bis" /> and include Supported: histinfo in all requests and responses.
</t>

</section>


</section>

<section title="Guidelines for UUI Packages">
<t>
UUI packages defined using this SIP UUI mechanism MUST publish a standards track RFC which describes the usage. Note that this mechanism is not suitable for the transport of arbitrary data between UAs.  The following guidelines are provided to help determine if this mechanism is appropriate or some other SIP mechanism should be used.  The SIP UUI mechanism is applicable when all of the following conditions be met:
</t>
<t><list><t>
  1. The information is generated and consumed by an application during
     session setup using SIP, but the application is not necessarily
     SIP aware.
</t></list></t>
<t><list><t>
  2. The behavior of SIP entities that support it is not significantly
     changed (as discussed in Section 4 of <xref target="RFC5727" />).
</t></list></t>
<t><list><t>
3. User Agents (UAs) are the
     generators and consumers of the UUI data.  Proxies and other intermediaries may route based on the presence of a User-to-User header field or a particular package tag but do not otherwise consume or generate the UUI data.
</t></list></t>
<t><list><t>
  4. There are no overriding privacy issues associated with the information
     being transported (e.g., geolocation or emergency-related
     information are examples of inappropriate UUI data).
</t></list></t>
<t><list><t>
  5. The UUI data is not being utilized for user-to-user Remote Procedure Call (RPC) calls.
</t></list></t>
<t>
UUI packages define the semantics for a particular application usage of UUI data.  The content defines the syntax of the UUI data, while the encoding defines the encoding of the UUI data.  Each content is defined as a stream of octets, which allows multiple encodings of that content. For example, packages may define:
</t>
<t><list><t>
  1. The SIP methods and responses in which the UUI data may be present.
</t></list></t>
<t><list><t>
  2. The maximum number of UUI data elements that may be inserted into a request or response.  (The default is one per encoding.)  Note that a UA may still receive a request with more than this maximum number due to redirection.  The package must define how to handle this situation.
</t></list></t>
<t><list><t>
  3. The default values for content and encoding if they are not present.  If the same UUI data may be inserted multiple times with different encodings, the packages must state this.  A package may support and define multiple encodings and contents, and reuse encodings and contents defined by other packages.
</t></list></t>
<t><list><t>
  4. Any size limitations on the UUI data.  Size should be specified in terms of the octet stream output of the content, since the size of the resulting uui-data element will vary depending on the encoding scheme.
</t></list></t>
<t>
A package MUST define a "purpose" header field value to identify the package in the coding.  A package MUST describe the new application which is utilizing the UUI data and provide some use case examples.  The default "content" value and "encoding" value MUST be defined or referenced in another document for the package.  Additional allowed content and encodings MAY also be defined or referenced.  Any restrictions on the size of the UUI data must be described.  In addition, a package may define a Media Feature tag per RFC 3840 <xref target="RFC3840" /> to indicate support for this UUI package.   For example, the media feature tag sip.uui-pk1 could be defined to indicate support for a UUI package named pk1.  The definition of a new SIP option tag solely to identify support for a UUI package is NOT RECOMMENDED unless there are additional SIP behaviors needed to implement this feature.
</t>
<t>
For an example UUI package definition, see <xref target="I-D.drage-cuss-sip-uui-isdn" />.
</t>
<section title="Extensibility">
<t>
New "encoding" values MUST reference a common encoding scheme (such as "hex" which is defined in this specification) or define the exact new encoding scheme.  A previously defined UUI encoding value can be used in a new package.  In this case, the usage of the encoding is defined by that package.  New UUI encodings cannot be added to existing packages - instead, a new package would need to be defined. New values can be defined and added to the IANA registry with a standards track RFC, which needs to discuss the issues in this section.
</t>
<t>
New "content" values MUST describe the content of the UUI data and
give some example use cases.  A previously defined UUI content value
can be used in a new package.  In this case, the semantics and usage
of the content is defined by that package. New UUI content types
cannot be added to existing packages - instead, a new package would
need to be defined.
</t>
</section>
</section>

<section title="IANA Considerations">

<section title="Registration of User-to-User Header Field">
<t>
   This document defines a new SIP header field named "User-to-User".
</t><t>
   The following row shall be added to the "Header Fields" section of
   the SIP parameter registry:
</t>
<figure><artwork><![CDATA[
              +------------------+--------------+-----------+
              | Header Name      | Compact Form | Reference |
              +------------------+--------------+-----------+
              | User-to-User     |              | [RFCXXXX] |
              +------------------+--------------+-----------+
]]></artwork></figure>
<t>
   Editor's Note: [RFCXXXX] should be replaced with the designation of
   this document.
</t>
</section>

<section title="Registration of User-to-User Header Field Parameters">
<t>
   This document defines the parameters for the header field defined in the
   preceding section.  The header field "User-to-User" can contain the 
parameters "encoding", "content", and "purpose".
</t><t>
   The following rows shall be added to the "Header Field Parameters and
   Parameter Values" section of the SIP parameter registry:
</t>
<figure><artwork><![CDATA[
   +------------------+----------------+-------------------+-----------+
   | Header Field     | Parameter Name | Predefined Values | Reference |
   +------------------+----------------+-------------------+-----------+
   | User-to-User     | encoding       | hex               | [RFCXXXX] |
   +------------------+----------------+-------------------+-----------+
   | User-to-User     | content        |                   | [RFCXXXX] |
   +------------------+----------------+-------------------+-----------+
   | User-to-User     | purpose        |                   | [RFCXXXX] |
   +------------------+----------------+-------------------+-----------+
]]></artwork></figure>
<t>
   Editor's Note: [RFCXXXX] should be replaced with the designation of
this document.
</t>
</section>

<section title="Registration of UUI Packages">
<t>
   This specification establishes the uui-packages sub-registry under
   http://www.iana.org/assignments/sip-parameters.  New uui-packages shall be registered by standards track RFC publication.
</t>
<t>
   The descriptive text for the table of uui-content is:
</t>
<t>
   UUI Packages provides information about the usage of the UUI data in a User-to-User header field [RFCXXXX].
</t>
<figure><artwork><![CDATA[
   +------------+-------------------------------------------+-----------+
   | Package    | Description                               | Reference |
   +------------+-------------------------------------------+-----------+
]]></artwork></figure>
</section>

<section title="Registration of UUI Content Parameters">
<t>
   This specification establishes the uui-content sub-registry under
   http://www.iana.org/assignments/sip-parameters.  New uui-content values shall be registered by standards track RFC publication.
</t>
<t>
   The descriptive text for the table of uui-content is:
</t>
<t>
   UUI Content provides information about the content of the UUI data in a User-to-User header field [RFCXXXX].
</t>
<figure><artwork><![CDATA[
   +------------+-------------------------------------------+-----------+
   | Content    | Description                               | Reference |
   +------------+-------------------------------------------+-----------+
]]></artwork></figure>
</section>

<section title="Registration of UUI Encoding Parameters">
<t>
   This specification establishes the uui-encoding sub-registry under
   http://www.iana.org/assignments/sip-parameters and initiates its
   population with the table below.  Additional uui-encoding values shall be registered by a standards track RFC publication.
</t>
<t>
   The descriptive text for the table of uui-encoding is:
</t>
<t>
   UUI Encoding provides information about the encoding of the UUI data in a User-to-User header field [RFCXXXX].
</t>
<figure><artwork><![CDATA[
   +------------+-------------------------------------------+-----------+
   | Encoding   | Description                               | Reference |
   +------------+-------------------------------------------+-----------+
   | hex        | The UUI data is encoded using hexadecimal |           |
   +------------+-------------------------------------------+-----------+
]]></artwork></figure>
</section>

<section title="Registration of SIP Option Tag">
<t>
This specification registers a new SIP option tag, as per the
   guidelines in Section 27.1 of <xref target="RFC3261" />.
</t>
<t>
   This document defines the SIP option tag "uui".
</t>
<t>
   The following row has been added to the "Option Tags" section of the
   SIP Parameter Registry:
</t>
<figure><artwork><![CDATA[
   +------------+------------------------------------------+-----------+
   | Name       | Description                              | Reference |
   +------------+------------------------------------------+-----------+
   | uui        | This option tag is used to indicate that | [RFCXXXX] |
   |            | a UA supports and understands the        |           |
   |            | User-to-User header field.               |           |
   +------------+------------------------------------------+-----------+
]]></artwork></figure>
<t>
   Editor's Note: [RFCXXXX] should be replaced with the designation of
this document.
</t>
</section>

</section>

<section title="Security Considerations">
<t>
User to user information can potentially carry sensitive information that might require privacy or integrity protection.   Standard deployed SIP security mechanisms such as TLS transport, offer these properties on a hop-by-hop basis. To preserve multi-hop or end-to-end confidentiality and integrity of UUI data, approaches using S/MIME or IPSec can be used, as discussed in the draft.  However, the lack of deployment of these mechanisms means that applications can not in general rely on them.  As such, applications are encouraged to utilize their own security mechanisms.
</t>
<t>
If the UUI data was included by the UA originator of the SIP request or response, normal SIP mechanisms can be used to determine the identity of the inserter of the UUI data.  If the UUI data was included by a UA that was not the originator of the request, History-Info can be used to determine the indentity of the inserter of the UUI data.  UAs can apply policy based on the origin of the UUI data using this information.
</t>
</section>

 
<section title="Appendix - Other Possible Mechanisms">
  <t> 
Two other possible mechanisms for transporting UUI data will be described: MIME body and URI parameter transport.  
</t>
<section title="Why INFO is Not Used">
<t>
Since the INFO method <xref target="RFC6086" />, was developed for ISUP 
interworking of user-to-user information, it might seem to be the logical choice 
here.  For non-call control user-to-user information, INFO can be utilized for 
end to end transport.  However, for transport of call control user-to-user 
information, INFO can not be used.  As the call flows in <xref target="I-D.ietf-cuss-sip-uui-reqs" />
show, the information is related to an attempt to establish a session and must 
be passed with the session setup request (INVITE), responses to that INVITE, or 
session termination requests.  As a result, it is not possible to use INFO in 
these cases.
</t>
</section>

<section title="Why Other Protocol Encapsulation UUI Mechanisms are Not Used">
<t>
Other protocols have the ability to transport UUI data.  For example, consider the ITU-T Q.931 User to User 
Information Element (UU IE) <xref target="Q931" /> and the ITU-T Q.763 User to User Information Parameter <xref target="Q763"/>.  In addition, NSS (Narrowband Signaling System) <xref target="Q1980" /> is also able to transport UUI data.  Should one of these protocols be in use, and present in both User Agents, then utilizing these other protocols to transport UUI data might be a logical solution.  Essentially, this is just adding an additional layer in the protocol stack.  In these cases, SIP is not transporting the UUI data; it is encapsulating another protocol, and that protocol is transporting the UUI data.  Once a mechanism to transport that other protocol using SIP exists, the UUI data transport function is essentially obtained without any additional effort or work.
</t><t>
However, the authors believe that SIP needs to have its own native UUI data transport mechanism.  It is not reasonable for a SIP UA to have to implement another entire protocol (either ISDN or NSS, for example) just to get the very simple UUI data transport service.  Of course, this work does not preclude anyone from using other protocols with SIP to transport UUI data.
</t>
</section>



<section title="MIME body Approach">
<t>
One method of transport is to use  a MIME body.  
This is in keeping with the SIP-T architecture <xref target="RFC3372" />
in which MIME bodies are used to transport ISUP information.  Since the INVITE 
will normally have an SDP message body, the resulting INVITE with SDP and UUI data 
will be multipart MIME.  This is not ideal as many SIP UAs do not support 
multipart MIME INVITEs.
</t><t>
A bigger problem is the insertion of a UUI message body by a redirect server or 
in a REFER.  The body would need to be encoded in the Contact URI of the 3xx 
response or the Refer-To URI of a REFER.  Currently, the authors are not aware of any UAs that support this capability today for any body type.  As such, the complete set of semantics for this operation would need to be determined and defined.  Some issues will need to be resolved, such as, do all the Content-* header fields have to be included as well?  And, what if the included Content-Length does not agree with the included body? 
</t><t>

Since proxies cannot remove a body from a request or response, it is not clear how this mechanism could meet REQ-9.

</t><t>

The requirement for integrity protection could be met by the use of an S/MIME signature over the body, as defined in Section 23.3 of RFC 3261 "Securing MIME bodies".  Alternatively, this could be achieved using <xref target="RFC4474" >RFC 4474</xref>.  The requirement for end-to-end privacy could be met using S/MIME encryption or using encryption at the application layer.  However, note that neither S/MIME or RFC 4474 enjoys deployment in SIP today.

</t><t>
An example:
</t>
<figure><artwork><![CDATA[
<allOneLine>
Contact: <sip:+12125551212@gateway.example.com?Content-Type=
application/uui&body=ZeGl9i2icVqaNVailT6F5iJ90m6mvuTS4OK05M0vDk0Q4Xs>
</allOneLine>
]]></artwork></figure>
<t>
As such, the MIME body approach meets REQ-1, REQ-2, REQ-4, REQ-5, REQ-7, REQ-11, REQ-13, and REQ-14.  Meeting REQ-12 seems possible, although the authors do not have a specific mechanism to propose. Meeting REQ-3 is problematic, but not impossible for this mechanism.  However, this mechanism does not seem to be able to meet REQ-9. 
</t>
</section>

<section title="URI Parameter">
<t>
Another proposed approach is to encode the UUI data as a URI parameter.  This UUI parameter could be included in a Request-URI or in the Contact URI or Refer-To URI.  It is not clear how it could be transported in a responses which does not have a Request-URI, or in BYE requests or responses.
</t>
<figure><artwork><![CDATA[
<allOneLine>
Contact: <sip:+12125551212@gateway.example.com;uui=ZeGl9i2icVqaNVailT6
F5iJ90m6mvuTS4OK05M0vDk0Q4Xs>
</allOneLine>
]]></artwork></figure>
<t>
An INVITE sent to this Contact URI would contain UUI data in the Request-URI of the 
INVITE.  The URI parameter has a drawback in that a URI parameter carried in a 
Request-URI will not survive retargeting by a proxy as shown in Figure 2 of 
<xref target="I-D.ietf-cuss-sip-uui-reqs" />. That is, if the URI is included 
with an Address of Record instead of a Contact URI, the URI parameter in the 
Reqeuest-URI will not be copied over to the Contact URI, resulting in the loss 
of the information.  Note that if this same URI was present in a Refer-To header field, the same loss of information would occur.
</t><t>

The URI parameter approach would meet REQ-3, REQ-5, REQ-7, REQ-9, and REQ-11.  It is possible the approach could meet REQ-12 and REQ-13.  The mechanism does not appear to meet REQ-1, REQ-2, REQ-4, and REQ-14.

</t>
</section>
</section>

<section title="Acknowledgements">
<t>
Joanne McMillen was a major contributor and co-author of earlier versions of this document.  Thanks to Paul Kyzivat for his contribution of hex encoding rules.  Thanks to Spencer Dawkins, Keith Drage, Vijay Gurbani, and Laura Liess for their review of the document.  The authors wish to thank Francois Audet, Denis Alexeitsev, Paul Kyzivat, Cullen Jennings, and Mahalingam Mani for their comments.  
</t>
</section>

</middle>
<back>

<references title="Informative References">

<reference anchor='Q763'>
<front>
<title>ITU-T Q.763 Signaling System No. 7 - ISDN user part formats and 
codes</title>
</front>
<seriesInfo name='http://www.itu.int/rec/T-REC-Q.931-199805-I/en' value='' />
<format type='HTML' target='http://www.itu.int/rec/T-REC-Q.763-199912-I/en' />
</reference>

<reference anchor='Q931'>
<front>
<title>ITU-T Q.931 User to User Information  Element (UU IE)</title>
</front>
<seriesInfo name='http://www.itu.int/rec/T-REC-Q.931-199805-I/en' value='' />
<format type='HTML' target='http://www.itu.int/rec/T-REC-Q.931-199805-I/en' />
</reference>

<reference anchor='ETSI'>
<front>
<title>ETSI ETS 300 207-1 Ed.1 (1994), Integrated Services Digital Network 
(ISDN); Diversion supplementary services</title>
</front>
</reference>

<?rfc include="reference.RFC.3372" ?>
<?rfc include="reference.RFC.6086" ?>
<?rfc include="reference.RFC.4475" ?>
<?rfc include="reference.RFC.5727" ?>
<?rfc include="reference.I-D.drage-cuss-sip-uui-isdn" ?>

<reference anchor='Q1980'>
<front>
<title>ITU-T Q.1980.1 The Narrowband Signalling Syntax (NSS) - Syntax Definition</title>
</front>
<seriesInfo name='http://www.itu.int/itudoc/itu-t/aap/sg11aap/history/q1980.1/q1980.1.html' value='' />
<format type='HTML' target='http://www.itu.int/itudoc/itu-t/aap/sg11aap/history/q1980.1/q1980.1.html' />
</reference>

</references>

<references title="Normative References">

<?rfc include="reference.RFC.2119" ?>
<?rfc include="reference.RFC.3261" ?>
<?rfc include="reference.RFC.3324" ?>
<?rfc include="reference.RFC.3325" ?>
<?rfc include="reference.I-D.ietf-cuss-sip-uui-reqs" ?>

<?rfc include="reference.RFC.4474" ?>
<?rfc include="reference.I-D.ietf-sipcore-rfc4244bis" ?>

<?rfc include="reference.RFC.4916" ?>
<?rfc include="reference.RFC.3840" ?>

</references>

</back>
</rfc>

