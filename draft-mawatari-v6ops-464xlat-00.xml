<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6052 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6052.xml">
<!ENTITY RFC6092 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6092.xml">
<!ENTITY RFC6144 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6144.xml">
<!ENTITY RFC6145 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6145.xml">
<!ENTITY RFC6146 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6146.xml">
<!ENTITY RFC6147 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6147.xml">
<!ENTITY RFC6333 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6333.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
<!ENTITY I-D.ietf-behave-nat64-discovery-heuristic SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-behave-nat64-discovery-heuristic.xml">
<!ENTITY I-D.ietf-v6ops-3gpp-eps SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-v6ops-3gpp-eps.xml">
<!ENTITY I-D.arkko-ipv6-only-experience SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.arkko-ipv6-only-experience.xml">
<!ENTITY I-D.mdt-softwire-mapping-address-and-port SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.mdt-softwire-mapping-address-and-port.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-mawatari-v6ops-464xlat-00" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="464XLAT">464XLAT: Combination of Stateful and Stateless Translation</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Masataka Mawatari" initials="M.M." 
            surname="Mawatari">
      <organization>Japan Internet Exchange Co.,Ltd.</organization>

      <address>
        <postal>
          <street>KDDI Otemachi Building 19F, 1-8-1 Otemachi,</street>

          <!-- Reorder these if your country does things differently -->

          <city>Chiyoda-ku</city>

          <region>Tokyo</region>

          <code>100-0004</code>

          <country>JAPAN</country>
        </postal>

        <phone>+81 3 3243 9579</phone>

        <email>mawatari@jpix.ad.jp</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Masanobu Kawashima" initials="M.K." 
            surname="Kawashima">
      <organization>NEC AccessTechnica, Ltd.</organization>

      <address>
        <postal>
          <street>800, Shimomata</street>

          <!-- Reorder these if your country does things differently -->

          <city>Kakegawa-shi</city>

          <region>Shizuoka</region>

          <code>436-8501</code>

          <country>JAPAN</country>
        </postal>

        <phone>+81 537 23 9655</phone>

        <email>kawashimam@vx.jp.nec.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Cameron Byrne" initials="C.B." 
            surname="Byrne">
      <organization>T-Mobile USA</organization>

      <address>
        <postal>
          <street> </street>

          <!-- Reorder these if your country does things differently -->

          <city>Bellevue, Washington</city>

          <code>98006</code>

          <country>USA</country>
        </postal>

        <email>cameron.byrne@t-mobile.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date month="January" year="2012" />

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>XLAT</keyword>
    <keyword>Stateful Translation</keyword>
    <keyword>Stateless Translation</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document describes an architecture (464XLAT) for providing IPv4 connectivity across an IPv6-only network by combining existing and well-known stateful protocol translation RFC 6146 and stateless protocol translation RFC 6145. 464XLAT is a simple and scalable technique to quickly deploy IPv4 access service to mobile and wireline IPv6-only networks without encapsulation.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The IANA unallocated IPv4 address pool was exhausted on February 3, 2011. Each RIR's unallocated IPv4 address pool will exhaust in the near future. It will be difficult for many networks to assign IPv4 addresses to end users, despite substantial IP connectivity growth required for mobile devices, smart-grid, and cloud nodes.</t>

      <t>This document describes an IPv4 over IPv6 solution as one of the techniques for IPv4 address extension and encouragement of IPv6 deployment.</t>

      <t>The 464XLAT architecture described in this document uses IPv4/IPv6 translation standardized in <xref target="RFC6145"></xref> and <xref target="RFC6146"></xref>. It does not require DNS64 <xref target="RFC6147"></xref>,  but it may use DNS64 to enable single stateful translation <xref target="RFC6146"></xref> instead of 464XLAT double translation where possible. It is also possible to provide single IPv4/IPv6 translation service, which will be needed in the future case of IPv6-only servers and peers to be reached from legacy IPv4-only hosts. The 464XLAT architecture encourages IPv6 transition by making IPv4 services reachable across IPv6-only networks and providing IPv6 and IPv4 connectivity to single-stack IPv4 or IPv6 servers and peers.</t>

      <t>Running a single-stack IPv6-only network has several operational benefits in terms of increasing scalability and decreasing operational complexity. Unfortunately, there are meaningful cases where IPv6-only networks fail to meet subscriber expectations, as described in <xref target="I-D.arkko-ipv6-only-experience"></xref>. The 464XLAT overcomes the issues described in <xref target="I-D.arkko-ipv6-only-experience"></xref> to provide subscribers the full dual-stack functionality while providing the network operator the benefits of a simple yet highly scalable single-stack IPv6 network.</t>

</section>

<section title="Requirements Language">
  <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
     "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
     document are to be interpreted as described in <xref
     target="RFC2119"></xref>.</t>
</section>

    <section title="Terminology">
      <t><list hangIndent="8" style="hanging">
	<t hangText="PLAT:">PLAT is Provider side translator(XLAT). A stateful translator complies with <xref target="RFC6146"></xref> that performs 1:N translation. It translates IPv6 address to global IPv4 address, and vice versa.</t>

	<t hangText="CLAT:">CLAT is Customer side translator(XLAT). A stateless translator complies with <xref target="RFC6145"></xref> that performs 1:1 translation. It algorithmically translates private IPv4 address to global IPv6 address, and vice versa. CLAT function is applicable to a router, or end-node such as a mobile phone. The presence of DNS64 <xref target="RFC6147"></xref> and any port mapping algorithm are not required.
</t>

	<t hangText="UE:">The 3GPP term for user equipment. The most common type of UE is a mobile phone.</t>

	<t hangText="PDP:">A Packet Data Protocol (PDP) Context is the equivalent of a virtual connection between the host and a gateway.</t>

      </list></t>
    </section>

    <section title="Motivation and Uniqueness of 464XLAT">

      <t><list hangIndent="4" style="hanging">
	<t hangText="1.">Minimal IPv4 resource requirements</t>
	<t>464XLAT is the most efficient use of scarce IPv4 addresses for networks that have fast growing edges.  The primary motivation for deploying IPv6 is the exhaustion of IPv4 addresses and the risk that exhaustion poses to future internet growth. 464XLAT directly takes on the challenge of IPv4 address exhaustion by providing efficient stateful IPv4 address sharing at the PLAT and decoupling the edge network growth from the availability of scarce IPv4 addresses.</t>

	<t>464XLAT has low barriers to entry since only a small amount of IPv4 addresses are needed to support the stateful translation <xref target="RFC6146"></xref> function in the PLAT.</t>

	<t>Given that network operators are deploying IPv6 because IPv4 resources are scarce, solutions that require dual-stack (no IPv4 multiplexing) or stateless address sharing (bounded static address multiplexing) are simply not IPv4-efficient enough to solve the two-pronged challenge of IPv4 address scarcity and continued exponential network edge growth.</t>

	<t hangText="2.">No new protocols required</t>
	<t>464XLAT can be deployed today, it uses existing RFCs (<xref target="RFC6145"></xref> and <xref target="RFC6146"></xref>), and there exists implementations for both wireline network (in CLAT in the Home Gateway) and wireless 3GPP network (in CLAT in the UE).  The ability to quickly deploy 464XLAT is a critical feature given the urgency of IPv4 exhaustion and brisk pace of internet growth.</t>

	<t hangText="3.">Cost-effective transition to IPv6</t>
	<t>When combined with DNS64 <xref target="RFC6147"></xref>, the 464XLAT architecture only requires double translation in the case of IPv4-referrals or IPv4-only socket calls.  Consequently, the network traffic in the ISP backbone network is predominately IPv6 end-to-end or single translation.  This is especially cost-effective in wireless 3GPP network that would otherwise require two separate PDP connections to support IPv4 and IPv6.</t>

	<t>While translation on the CLAT is not always used, the CLAT function is crucial for enabling the IPv4-only applications and providing IP address family service parity to the end-users.  All IPv6-native flows pass end-to-end without any translation.  This is a beneficial solution for end-users, content providers, and network operators that scale best with end-to-end IPv6 communication.</t>

      </list></t>

          <t>In summary, the 464XLAT architecture works today for service providers that require large-scale strategic IPv6 deployments to overcome the challenges of IPv4 address scarcity. Unlike other transition architectures associated with tunneling or <xref target="I-D.mdt-softwire-mapping-address-and-port"></xref>, 464XLAT properly assumes that IPv4 is scarce and IPv6 must work with today's existing systems as much as possible. In the case of tunneling, the tunneling solutions like Dual-Stack Lite <xref target="RFC6333"></xref> are known to break existing network based deep packet inspection solutions like 3GPP standardized Policy and Charging Control (PCC). 464XLAT does not require much IPv4 address space to enable stateful translation <xref target="RFC6146"></xref> function in the PLAT while providing global IPv4 and IPv6 reachability to IPv6-only wireline and wireless subscribers.</t>

    </section>

    <section title="Network Architecture">
     
      <t>464XLAT architecture is shown in the following figure.</t> 
    
      <section title="Wireline Network Architecture">

      <figure align="center" anchor="Wireline_topology" title="Wireline Network Topology">
       <preamble></preamble>
       <artwork align="center"><![CDATA[
                               ----
                              | v6 |
                               ----
                                 |
 ----      |                 .---+---.                    .------.
| v6 |-----+                /         \                  /        \
 ----      |    ------     /   IPv6    \     ------     /   IPv4   \
           +---| CLAT |---+  Internet   +---| PLAT |---+  Internet  |
 -------   |    ------     \           /     ------     \           /
|v4p/v6 |--+                `---------'                  `----+----'
 -------   |                                                  |
 -----     |                                                -----
| v4p |----+                                               | v4g |
 -----     |                                                -----

       <- v4p -> XLAT <--------- v6 --------> XLAT <- v4g ->


  v6  : Global IPv6
  v4p : Private IPv4
  v4g : Global IPv4
        ]]></artwork>
      </figure>
    </section>

      <section title="Wireless 3GPP Network Architecture">

      <figure align="center" anchor="Wireless_topology" title="Wireless 3GPP Network Topology">
       <preamble></preamble>
       <artwork align="center"><![CDATA[
                                ----
                               | v6 |
                                ----
                                  |
                              .---+---.
                             /         \
                            /   IPv6    \
                           |   Internet  |
                            \           /
 UE / Mobile Phone           `---------'
+----------------------+          |
|  ----     |          |      .---+---.                   .------.
| | v6 |----+          |     /         \                 /        \
|  ----     |    ------|    / IPv6 PDP  \     ------    /   IPv4   \
|           +---| CLAT |---+ Mobile Core +---| PLAT |--+  Internet  |
|           |    ------|    \    GGSN   /     ------    \          /
|           |          |     \         '                 `----+---'
|  ------   |          |      `-------'                       |
| | v4p |---+          |                                    -----
|  ------   |          |                                   | v4g |
+----------------------+                                    -----

        <- v4p -> XLAT <--------- v6 --------> XLAT <- v4g ->


  v6  : Global IPv6
  v4p : Private IPv4
  v4g : Global IPv4
        ]]></artwork>
      </figure>
    </section>

   </section>


    <section title="Applicability">

      <section title="Wireline Network Applicability">

      <t>When an ISP has IPv6 access network infrastructure and 464XLAT, the ISP can provide IPv4 service to end users across an IPv6 access network. The result is that edge network growth is no longer tightly coupled to the availability of scarce IPv4 addresses.</t>

      <t>If the IXP or another provider operates the PLAT, the ISP is only required to deploy an IPv6 access network. All ISPs do not need IPv4 access networks. They can migrate their access network to a simple and highly scalable IPv6-only environment. Incidentally, Japan Internet Exchange(JPIX) is providing 464XLAT trial service since July 2010.</t>
      </section>

      <section title="Wireless 3GPP Network Applicability">

      <t>The vast majority of mobile wireless networks are compliant to Pre-Release 9 3GPP standards. In Pre-Release 9 3GPP networks, GSM and UMTS networks must signal and support both IPv4 and IPv6 PDP attachments to access IPv4 and IPv6 network destinations. Since there are 2 PDPs required to support 2 address families, this is double the number of PDPs required to support the status quo of 1 address family, which is IPv4. Doubling the PDP count to support IPv4 and IPv6 is generally not operationally viable since a large portion of the network cost is derived from the number of PDP attachments, both in terms of licenses from the network hardware vendors and in terms of actual hardware resources required to support and maintain the PDP signaling and mobility events.  Doubling the number of PDP attachments has been one of the major barriers to introducing IPv6 in mobile networks. Dual-stack IPv4 and IPv6 simply costs more from the network provider perspective and does not result in any new revenues.</t>

      <t>Now that both global and private IPv4 addresses are scarce to the extent that it is a substantial business risk and limiting growth in many areas, the mobile network providers must support IPv6 to solve the IP address scarcity issue. It is not feasible to simply turn on additional IPv6 PDP network attachments since that does not solve the near-term IPv4 scarcity issues and it increases cost. The most logical path forward is to replace IPv4 with IPv6 and replace the common NAT44 with stateful translation <xref target="RFC6146"></xref> and DNS64 <xref target="RFC6147"></xref>.  Extensive live network testing with hundreds of friendly-users has shown that IPv6-only network attachments for mobile devices covers over 90% of the common use-cases in Symbian and Android mobile operating systems.  The remaining 10% of use-cases do not work because the application requires an IPv4 socket or the application does an IPv4-referral. These findings are consistent with the mobile IPv6-only user experience in <xref target="I-D.arkko-ipv6-only-experience"></xref>.</t>

      <t>464XLAT in combination with stateful translation <xref target="RFC6146"></xref> and DNS64 <xref target="RFC6147"></xref> allows 90% of the applications to continue to work with single translation. For the remaining 10% of applications that require IPv4 connectivity, the CLAT function on the UE provides a private IPv4 address and IPv4 default-route on the host for the applications to reference and bind to.  Connections sourced from the IPv4 interface are immediately routed to the CLAT function and passed to the IPv6-only mobile network, destine to the PLAT. In summary, the UE has the CLAT function that does a stateless translation <xref target="RFC6145"></xref>, but only when required, and the mobile network has a PLAT that does stateful translation <xref target="RFC6146"></xref>.</t>

      </section>

</section>


    <section title="Implementation Considerations">

        <section title="IPv6 Address Format">
          <t>IPv6 address format in 464XLAT is presented in the following format.</t>

          <figure align="center" title="IPv6 Address Format for 464XLAT">
            <preamble></preamble>

            <artwork align="center"><![CDATA[
    +-----------------------------------------------+---------------+
    |              XLAT prefix(96)                  |    IPv4(32)   |
    +-----------------------------------------------+---------------+
            ]]></artwork>
          </figure>

          <t>Source address and destination address have IPv4 address embedded in the low-order 32 bits of the IPv6 address. The format is defined in Section 2.2 of <xref target="RFC6052"></xref>. However, 464XLAT does not use the Well-Known IPv6 Prefix "64:ff9b::/96".</t>
        </section>

      <section title="IPv4/IPv6 Address Translation Chart">

      <figure align="center" title="IPv4/IPv6 Address Translation Chart">
       <preamble></preamble>
       <artwork align="center"><![CDATA[
                                        Source IPv4 address
                                       +----------------------------+
                                       | Global IPv4 (32bit)        |
                                       | assigned to IPv4 pool@PLAT |
                            +--------+ +----------------------------+
                            |  IPv4  |  Destination IPv4 address
                            | server | +----------------------------+
                            +--------+ | Global IPv4 (32bit)        |
                                ^      | assigned to IPv4 server    |
                                |      +----------------------------+
                            +--------+
                            |  PLAT  | Stateful XLATE(IPv4:IPv6=1:n)
                            +--------+
                                ^
                                |
 Source IPv6 address       (IPv6 cloud)
+--------------------------------------+----------------------------+
| XLAT prefix for source (96bit)       | Private IPv4 (32bit)       |
| assigned to each consumer of ISP     | assigned to IPv4 client    |
+--------------------------------------+----------------------------+
 Destination IPv6 address
+--------------------------------------+----------------------------+
| XLAT prefix for destination (96bit)  | Global IPv4 (32bit)        |
| assigned to PLAT                     | assigned to IPv4 server    |
+--------------------------------------+----------------------------+
                           (IPv6 cloud)
                                ^
                                |
                            +--------+
                            |  CLAT  | Stateless XLATE(IPv4:IPv6=1:1)
                            +--------+
                                ^       Source IPv4 address
                                |      +----------------------------+
                            +--------+ | Private IPv4 (32bit)       |
                            |  IPv4  | | assigned to IPv4 client    |
                            | client | +----------------------------+
                            +--------+  Destination IPv4 address
                                       +----------------------------+
                                       | Global IPv4 (32bit)        |
                                       | assigned to IPv4 server    |
                                       +----------------------------+
        ]]></artwork>
      </figure>
    </section>

        <section title="Traffic Treatment Scenarios">
          <figure align="center" title="Traffic Treatment Scenarios">
            <preamble></preamble>
            <artwork align="center"><![CDATA[
  +--------+-------------+-----------------------+-------------+
  | Server | Application |   Traffic Treatment   | Location of |
  |        | and Host    |                       | Translation |
  +--------+-------------+-----------------------+-------------+
  |  IPv6  |    IPv6     |    End-to-end IPv6    |    None     |
  +--------+-------------+-----------------------+-------------+
  |  IPv4  |    IPv6     | Stateful Translation  |    PLAT     |
  +--------+-------------+-----------------------+-------------+
  |  IPv4  |    IPv4     |        464XLAT        |  PLAT/CLAT  |
  +--------+-------------+-----------------------+-------------+
  |  IPv6  |    IPv4     | Stateless Translation |    CLAT     |
  +--------+-------------+-----------------------+-------------+
            ]]></artwork>
          </figure>
          <t>The above chart shows most common traffic types and traffic treatment.</t>
        </section>

        <section title="DNS Proxy Implementation">
          <t>If a router implement CLAT function, it performs DNS Proxy for IPv4 hosts and IPv6 hosts in end-user network. It MUST provide name resolution with IPv6 transport. It does not need DNS64 <xref target="RFC6147"></xref> function.</t>
        </section>

        <section title="IPv6 Prefix Handling">
          <t>If CLAT gets a single /64 prefix from WAN interface, it MUST perform NDP for 464XLAT IPv6 addresses.</t>
        </section>

        <section title="IPv6 Fragment Header Consideration">
          <t>In the 464XLAT environment, the PLAT and CLAT SHOULD include an IPv6 Fragment Header, since IPv4 host does not set the DF bit. However, the IPv6 Fragment Header has been shown to cause operational difficulties in practice due to limited firewall fragmentation support, etc. Therefore, the PLAT and CLAT may provide a configuration function that allows the PLAT and CLAT not to include the Fragment Header for the non-fragmented IPv6 packets. At any rate, both behaviors SHOULD match.</t>        </section>

        <section title="Auto IPv6 Prefix Assignment">
          <t>Source IPv6 prefix assignment in CLAT is via DHCPv6 prefix delegation or another method. Destination IPv6 prefix assignment in CLAT is via some method. (e.g., DHCPv6 option, TR-069, DNS, HTTP, <xref target="I-D.ietf-behave-nat64-discovery-heuristic"></xref>, etc.)</t>
        </section>

    </section>

    <section title="Deployment Considerations">
          <t>Even if the Internet access provider for consumers is different from the PLAT provider (another Internet access provider or Internet exchange provider, etc.), it can implement traffic engineering independently from the PLAT provider. Detailed reasons are below:</t>

      <t><list hangIndent="4" style="hanging">
	<t hangText="1.">The Internet access provider for consumers can figure out IPv4 source address and IPv4 destination address from translated IPv6 packet header, so it can implement traffic engineering based on IPv4 source address and IPv4 destination address (e.g. traffic monitoring for each IPv4 destination address, packet filtering for each IPv4 destination address, etc.). The tunneling methods do not have such a advantage, without any deep packet inspection for processing the inner IPv4 packet of the tunnel packet.</t>

	<t hangText="2.">If the Internet access provider for consumers can assign IPv6 prefix greater than /64 for each subscriber, this 464XLAT architecture can separate IPv6 prefix for native IPv6 packets and XLAT prefix for IPv4/IPv6 translation packets. Accordingly, it can identify the type of packets ("native IPv6 packets" and "IPv4/IPv6 translation packets"), and implement traffic engineering based on IPv6 prefix.</t>
      </list></t>

          <t>This 464XLAT architecture has two capabilities. One is a IPv6 -> IPv4 -> IPv6 translation for sharing global IPv4 addresses, another is a IPv4 -> IPv6 translation for reaching IPv6-only servers from IPv4-only clients that can not support IPv6. IPv4-only clients must be support through the long period of global transition to IPv6.</t>

    </section>

    <section anchor="Security" title="Security Considerations">
      <t>To implement a PLAT, see security considerations presented in Section 5 of <xref target="RFC6146"></xref>.</t>

      <t>To implement a CLAT, see security considerations presented in Section 7 of <xref target="RFC6145"></xref>. The CLAT MAY comply with <xref target="RFC6092"></xref>.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document has no actions for IANA.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The authors would like to thank JPIX NOC members, JPIX 464XLAT trial service members, Seiichi Kawamura, and Dan Drown for their helpful comments.</t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>

    <references title="Normative References">
      &RFC2119;
      &RFC6052;
      &RFC6144;
      &RFC6145;
      &RFC6146;

    </references>

    <references title="Informative References">
      &RFC6092;
      &RFC6147;
      &RFC6333;
      &I-D.arkko-ipv6-only-experience;
      &I-D.ietf-behave-nat64-discovery-heuristic;
      &I-D.ietf-v6ops-3gpp-eps;
      &I-D.mdt-softwire-mapping-address-and-port;
    </references>

  </back>
</rfc>

