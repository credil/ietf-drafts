<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc strict='yes'?>
<?rfc iprnotified='no'?>
<rfc category="info" docName="draft-generic-6man-tunfrag-02.txt"
     ipr="trust200902">
  <front>
    <title abbrev="Link Adaptation Avoidance">IPv6 Source Fragmentation for
    Link Adaptation Avoidance</title>

    <author fullname="Fred L. Templin" initials="F. L." role="editor"
            surname="Templin">
      <organization>Boeing Research &amp; Technology</organization>

      <address>
        <postal>
          <street>P.O. Box 3707</street>

          <city>Seattle</city>

          <region>WA</region>

          <code>98124</code>

          <country>USA</country>
        </postal>

        <email>fltemplin@acm.org</email>
      </address>
    </author>

    <date day="05" month="July" year="2012" />

    <keyword>I-D</keyword>

    <keyword>Internet-Draft</keyword>

    <abstract>
      <t>IPv6 intentionally deprecates fragmentation by routers in the
      network. Instead, links with restricting MTUs must either drop each
      too-large packet and return an ICMP Packet Too Big message or perform
      link-specific fragmentation (also known as "link adaptation") at a layer
      below IPv6. This latter category of links is often
      performance-challenged to accommodate steady-state link-specific
      fragmentation to the point that it would be highly desirable to push the
      fragmentation burden back to the IPv6 source. A common case that
      exhibits these link characteristics is seen for IPv6-within-IP tunnels.
      This document therefore proposes an update to the base IPv6
      specification to support link adaptation avoidance.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>IPv6 intentionally deprecates fragmentation by routers in the
      network. Instead, links with restricting MTUs must either drop each
      too-large packet and return an ICMP Packet Too Big message or perform
      link-specific fragmentation (also known as "link adaptation") at a layer
      below IPv6. This latter category of links is often
      performance-challenged to accommodate steady-state link-specific
      fragmentation to the point that it would be highly desirable to push the
      fragmentation burden back to the IPv6 source. A common case that
      exhibits these link characteristics is seen for IPv6-within-IP tunnels
      <xref target="I-D.generic-v6ops-tunmtu"></xref>. This document therefore
      proposes an update to the base IPv6 specification to support link
      adaptation avoidance.</t>
    </section>

    <section title="Problem Statement">
      <t>The current "Internet cell size" is effectively 1500 bytes, i.e., the
      minimum MTU configured by the vast majority of links in the Internet.
      However, due to issues with Path MTU Discovery (PMTUD) this size can
      only be accommodated when links with smaller link-layer segment sizes
      are permitted to perform link adaptation. A common example of such links
      is seen for IPv6-within-IP tunnels. For those links, the tunnel ingress
      can perform fragmentation on the outer packet following encapsulation
      and can instead (or in addition) perform "tunnel fragmentation" via an
      encapsulation mid-layer inserted between the inner and outer header. In
      both cases reassembly would be performed by the tunnel egress.</t>

      <t>Unfortunately, link-layer fragmentation can present a significant
      burden to the link endpoints, i.e., especially when the link supports
      high data rates and/or is located nearer the "middle" of the network
      instead of nearer the "edge". The third alternative therefore is to ask
      the original IPv6 source to perform fragmentation on the packet before
      sending it out, in which case reassembly would be performed by the final
      destination. This document therefore updates the IPv6 protocol
      specification <xref target="RFC2460"> </xref> to allow links that
      perform link adaptation to send advisory messages to the original source
      as described in the next section.</t>
    </section>

    <section title="IPv6 Protocol Specification Updates">
      <t>Section 5 of <xref target="RFC2460"></xref> states:</t>

      <t>"IPv6 requires that every link in the internet have an MTU of 1280
      octets or greater. On any link that cannot convey a 1280-octet packet in
      one piece, link-specific fragmentation and reassembly must be provided
      at a layer below IPv6."</t>

      <t>This document does not propose to change this requirement, but notes
      that link-specific fragmentation can be burdensome for some links (e.g.,
      IPv6-within-IP tunnels), to the point that it would be highly desirable
      for the fragmentation and reassembly to be pushed back to the
      communication endpoints. In order to accommodate this, when the router
      at the link ingress performs link adaptation on a packet it should also
      send an advisory ICMPv6 Packet Too Big (PTB) message back to the
      original source (subject to rate limiting). This document therefore
      proposes to add the following specification as a new final paragraph to
      the end of Section 5:</t>

      <t>"In response to an IPv6 packet that is sent to an IPv6 destination
      located beyond a link that must perform link-specific fragmentation, the
      originating IPv6 node may receive an ICMP Packet Too Big message
      reporting a Next-Hop MTU less than 1280. In that case, the IPv6 node
      should perform IPv6 fragmentation on any subsequent packets that are
      larger than this MTU value but no larger than the minimum of the
      source's link MTU and 1500 bytes. Note that these Packet Too Big
      messages are advisory in nature and do not necessarily indicate packet
      loss. Note also that the node is permitted to continue to send packets
      larger than 1500 bytes without fragmentation, but should implement <xref
      target="RFC4821"></xref> to ensure that the packets are reaching the
      final destination."</t>

      <t>An example tunnel protocol that invokes this new clause appears
      in:<xref target="I-D.templin-intarea-seal"></xref>.</t>
    </section>

    <section title="Additional Fragmentation Considerations">
      <t>Regardless of whether there is a link that performs link adaptation
      in the path, when an original source receives a PTB message reporting a
      Next-Hop MTU value greater than 1280 but less than 1500, the source need
      not reduce the size of the packets it sends but may instead invoke
      fragmentation with a maximum fragment size set to the Next-Hop MTU.
      These fragments will be reassembled by the final destination, which is
      required by <xref target="RFC2460"></xref> to configure a minimum
      reassembly buffer size of 1500 bytes.</t>
    </section>

    <section title="IANA Considerations">
      <t>There are no IANA considerations for this document.</t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>The security considerations for <xref target="RFC2460"></xref> apply
      also to this document.</t>
    </section>

    <section anchor="acknowledge" title="Acknowledgments">
      <t>This method was inspired through discussion on the IETF v6ops and
      NANOG mailing lists in the May/June 2012 timeframe.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2460"?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.I-D.templin-intarea-seal"?>

      <?rfc include="reference.I-D.generic-v6ops-tunmtu"?>

      <?rfc include="reference.RFC.4821"?>

      <?rfc ?>
    </references>
  </back>
</rfc>
