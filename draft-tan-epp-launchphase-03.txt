


Internet Engineering Task Force                                   W. Tan
Internet-Draft                                            Cloud Registry
Intended status: Standards Track                                G. Brown
Expires: March 16, 2013                                   CentralNic Ltd
                                                                J. Gould
                                                          VeriSign, Inc.
                                                      September 12, 2012


  Launch Phase Mapping for the Extensible Provisioning Protocol (EPP)
                      draft-tan-epp-launchphase-03

Abstract

   This document describes an Extensible Provisioning Protocol (EPP)
   extension mapping for the provisioning and management of domain names
   during the launch phase of a domain name registry.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on March 16, 2013.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as



Tan, et al.              Expires March 16, 2013                 [Page 1]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Conventions Used in This Document  . . . . . . . . . . . .  3
   2.  Object Attributes  . . . . . . . . . . . . . . . . . . . . . .  3
     2.1.  Application Identifiers  . . . . . . . . . . . . . . . . .  4
     2.2.  Launch Phases  . . . . . . . . . . . . . . . . . . . . . .  4
     2.3.  Status Values  . . . . . . . . . . . . . . . . . . . . . .  4
       2.3.1.  State Transition . . . . . . . . . . . . . . . . . . .  6
     2.4.  Mark Validation Models . . . . . . . . . . . . . . . . . .  6
       2.4.1.  <launch:codeMark> element  . . . . . . . . . . . . . .  7
     2.5.  Mark . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
     2.6.  Contact  . . . . . . . . . . . . . . . . . . . . . . . . .  9
     2.7.  Digital Signature  . . . . . . . . . . . . . . . . . . . . 10
       2.7.1.  <launch:signedMark> element  . . . . . . . . . . . . . 10
       2.7.2.  <launch:signedNotice> element  . . . . . . . . . . . . 12
   3.  EPP Command Mapping  . . . . . . . . . . . . . . . . . . . . . 13
     3.1.  EPP <check> Command  . . . . . . . . . . . . . . . . . . . 14
     3.2.  EPP <info> Command . . . . . . . . . . . . . . . . . . . . 16
       3.2.1.  Sunrise Info Form  . . . . . . . . . . . . . . . . . . 17
       3.2.2.  Claims Info Form . . . . . . . . . . . . . . . . . . . 23
     3.3.  EPP <create> Command . . . . . . . . . . . . . . . . . . . 27
       3.3.1.  Sunrise Create Form  . . . . . . . . . . . . . . . . . 27
       3.3.2.  Claims Create Form . . . . . . . . . . . . . . . . . . 33
     3.4.  EPP <update> Command . . . . . . . . . . . . . . . . . . . 37
     3.5.  EPP <delete> Command . . . . . . . . . . . . . . . . . . . 39
     3.6.  EPP <renew> Command  . . . . . . . . . . . . . . . . . . . 40
     3.7.  EPP <transfer> Command . . . . . . . . . . . . . . . . . . 40
   4.  Formal Syntax  . . . . . . . . . . . . . . . . . . . . . . . . 41
   5.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 50
   6.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 50
   7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 51
   8.  Normative References . . . . . . . . . . . . . . . . . . . . . 51
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 52














Tan, et al.              Expires March 16, 2013                 [Page 2]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


1.  Introduction

   This document describes an extension mapping for version 1.0 of the
   Extensible Provisioning Protocol (EPP) [RFC5730].  This EPP mapping
   specifies a flexible schema that can be used to implement several
   common use cases related to the provisioning and management of launch
   phase extension in a domain name registry.

   It is typical for domain registries to operate in special modes
   within certain periods of time to facilitate allocation of domain
   names for a subset of the zone namespace that becomes available.
   This document uses the term "launch phase" and the shorter form
   "launch" to refer to such a period.

   The EPP domain name mapping [RFC5731] is designed for the steady
   state operation of a registry.  During the launch, the interface used
   at each phase of the launch could be different from what is defined
   in EPP domain name mapping [RFC5731]. for example, registries
   typically accept multiple applications for a given domain name during
   the "sunrise" launch phase.  In addition, the Trademark Clearinghouse
   Draft Implementation Model [1] defines a registry interface for the
   Trademark Claims or "claims" launch phase that includes support for
   presenting a Trademark Claims Notice to the Registrant.  This
   document proposes an extension to the domain name extension in order
   to unambiguously manage the various launch phases known.

1.1.  Conventions Used in This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

   XML is case sensitive.  Unless stated otherwise, XML specifications
   and examples provided in this document MUST be interpreted in the
   character case presented in order to develop a conforming
   implementation.

   "launch-1.0" is used as an abbreviation for
   "urn:ietf:params:xml:ns:launch-1.0".  The XML namespace prefix
   "launch" is used, but implementations MUST NOT depend on it and
   instead employ a proper namespace-aware XML parser and serializer to
   interpret and output the XML documents.


2.  Object Attributes

   This extension adds additional elements to the EPP domain name
   mapping [RFC5731].  Only those new elements are described here.



Tan, et al.              Expires March 16, 2013                 [Page 3]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


2.1.  Application Identifiers

   Servers MAY allow multiple applications of a given domain name during
   its launch phase operations.  Upon receiving a request to create a
   domain name, the server creates an application object corresponding
   to the request and assigns an application identifier for the
   application and returns it to the client with the <launch:
   applicationID> element.  In order to facilitate correlation, all
   subsequent launch operations on the application object MUST be
   qualified by the previously assigned application identifier using the
   <launch:applicationID> element.

2.2.  Launch Phases

   The server MAY support multiple launch phases sequentially or
   simultaneously.  The <launch:phase> element MUST be included by the
   client to define the target launch phase of the command.

   The following launch phase values are defined:
   sunrise  Phase when trademark holders can submit registration
      applications with trademark information that can be validated by
      the server.
   landrush  Post sunrise phase when non-trademark holders are allowed
      to register domain names.
   claims  Trademark claims phase as defined by Trademark Clearinghouse
      Draft Implementation Model [1].
   open  Post launch phase that is also referred to as "steady state".
      Servers MAY require additional trademark protection with this
      phase.
   custom  A custom server launch phase that is defined using the "name"
      attribute.

   For extensibility the <launch:phase> element includes an OPTIONAL
   "name" attribute that can define a sub-phase or the full name of the
   phase when the <launch:phase> element has the "custom" value.

2.3.  Status Values

   A launch application object MAY have a status value.  The <launch:
   status> element is used to convey extended status pertaining to the
   application object, beyond what is specified in the object mapping
   for this application object.

   The following status values are defined using the required "s"
   attribute:






Tan, et al.              Expires March 16, 2013                 [Page 4]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   pending:  the initial state of a newly-created application object.
   validated:  the application meets relevant registry rules.
   invalid:  the application does not validate according to registry
      rules.
   pendingAuction:  the application is pending based on results of an
      auction.
   allocated:  one of two possible end states of an application object;
      the object corresponding to the application has been provisioned.
   rejected:  the other possible end state; the object was not
      provisioned.
   custom:  A custom status that is defined using the the "name"
      attribute.

   Each status value MAY be accompanied by a string of human-readable
   text that describes the rationale for the status applied to the
   object.  The OPTIONAL "lang" attribute MAY be present to identify the
   language if the negotiated value is something other than the default
   value of "en" (English).

   For extensibility the <launch:status> element includes an OPTIONAL
   "name" attribute that can define a sub-status or the full name of the
   status when the status value is "custom".  The server SHOULD NOT use
   of the "custom" status value.

   Certain status values MAY be combined.  For example, an application
   can be invalid and rejected.  Additionally certain statuses MAY be
   skipped.  For example, an application MAY immediately start at the
   allocated status or an application MAY skip the pendingAuction status
   if server does not support an auction.  If a <domain:create>
   processes a request synchronously without the use of an intermediate
   application, than an Application Identifier (Section 2.1) is not
   needed along with the application status.



















Tan, et al.              Expires March 16, 2013                 [Page 5]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


2.3.1.  State Transition


                               | request
                               v
                          +---------+
                          | pending |
                          +----+----+
                               |
                               |
          +--------------+-----+-----------+--------------+
          |              |                 |              |
          v              v                 v              v
    +-----------+   +---------+        +-------+      +-------+
    |           |   |         |       /         \    /         \
    | validated |   | invalid +----->| rejected  |  | allocated |
    |           |   |         |       \         /    \         /
    +----+------+   +----+----+        +-------+      +-------+
         |               |                 ^              ^
         |               |                 |              |
         |               +-----------------+              |
         |                                 |              |
         +---------------------------------+              |
         |                                 ^              |
         |                                 |              |
         |                        +--------+-------+      |
         |                        |                |      |
         +----------------------->| pendingAuction +------+
                                  |                |
                                  +----------------+


                                 Figure 1

2.4.  Mark Validation Models

   A server MUST support one of four models for validating the trademark
   information:

   code  Use of a mark code by itself to validate that the mark matches
      the domain name.  The code is the "sunrise code" as defined in
      Trademark Clearinghouse Draft Implementation Model [1] that is
      validated by the server using its local sunrise code data.  This
      model is supported using the <launch:codeMark> element with just
      the <launch:code> element.






Tan, et al.              Expires March 16, 2013                 [Page 6]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   mark  The mark information is passed without any other validation
      element.  The server will use some custom form of validation to
      validate that the mark information is authentic.  This model is
      supported using the <launch:codeMark> element with just the
      <launch:mark> element.
   code with mark:  A code is used along with the mark information by
      the server to validate the mark utilizing an external party like a
      Trademark Clearinghouse.  The code represents some form of secret
      that matches the mark information passed.  This model is supported
      using the <launch:codeMark> element with both the <launch:code>
      and the <launch:mark> element.
   signed mark:  The mark information is digitally signed as described
      in the Digital Signature (Section 2.7) section.  The digital
      signature can be directly validated by the server using the public
      key of the external party that created the signed mark.  This
      model is supported using the <launch:signedMark> (Section 2.7.1)
      and <launch:signedNotice> (Section 2.7.2) elements.

   More than one <launch:codeMark> element or more than one <launch:
   signedMark> element MAY be specified.  The maximum number of marks
   per domain name is up to server policy.

2.4.1.  <launch:codeMark> element

   The <launch:codeMark> element that is used by the "code", "mark", and
   "code with mark" validation models has the following child elements:

   <launch:code>:  OPTIONAL mark code used to validate the <launch:mark>
      information or to directly validate the mark against the domain
      name.  The mark code can be a mark specific secret value that the
      server can verify against a third party or can be directly
      combined with the domain name to verify against a server code
      file.
   <launch:mark>:  OPTIONAL mark information with child elements defined
      in the Mark (Section 2.5) section.
















Tan, et al.              Expires March 16, 2013                 [Page 7]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   The following is an example <launch:codeMark> element with both a
   <launch:code> and a <launch:mark> element.

   <launch:codeMark>
     <launch:code>49FD46E6C4B45C55D4AC</launch:code>
     <launch:mark>
       <launch:name>Example One</launch:name>
       <launch:label>example-one</launch:label>
       <launch:label>exampleone</launch:label>
       <launch:issuer>IP Clearinghouse</launch:issuer>
       <launch:number>GE 3933232</launch:number>
       <launch:type>REG-TM-WORD</launch:type>
       <launch:entitlement>owner</launch:entitlement>
       <launch:regDate>2011-09-09</launch:regDate>
       <launch:exDate>2013-09-09</launch:exDate>
       <launch:country>AU</launch:country>
       <launch:region>VIC</launch:region>
       <launch:owner>
         <launch:org>Example Inc.</launch:org>
       </launch:owner>
       <launch:contact>
         <launch:name>John Doe</launch:name>
         <launch:org>Example Inc.</launch:org>
         <launch:addr>
           <launch:street>123 Example Dr.</launch:street>
           <launch:street>Suite 100</launch:street>
           <launch:city>Reston</launch:city>
           <launch:sp>VA</launch:sp>
           <launch:pc>20190</launch:pc>
           <launch:cc>US</launch:cc>
         </launch:addr>
         <launch:voice x="1234">+1.7035555555</launch:voice>
         <launch:fax>+1.7035555556</launch:fax>
         <launch:email>jdoe@example.tld</launch:email>
       </launch:contact>
     </launch:mark>
   </launch:codeMark>

2.5.  Mark

   A <launch:mark> element describes an applicant's prior right to a
   given domain name.

   The child elements of the <launch:mark> element include:







Tan, et al.              Expires March 16, 2013                 [Page 8]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   <launch:id>:  an identifier for the mark.  This identifier MUST be
      unique among all marks associated with an application object.
   <launch:name>:  The registered trademark text string.  This value is
      free-form text that MAY be mapped to one or more <launch:label>
      values.
   <launch:label>:  Zero or more domain name labels that corresponds to
      the <launch:name>.  Each <launch:label> can match directly to the
      domain name after adding the parent zone.
   <launch:issuer>:  name of the authority which issued the right
      (trademark clearinghouse, trademark office, company registration
      bureau, etc.)
   <launch:number>:  the registration number of the right (trademark
      number, company registration number, etc.)
   <launch:type>:  indicates the type of mark being made (trademark,
      symbol, combined mark, company name, etc.)
   <launch:entitlement>:  indicates the applicant's entitlement to the
      mark (owner, licensee, etc.)
   <launch:regDate>:  the date of registration of the mark
   <launch:exDate>:  the date of expiration of the mark
   <launch:country>:  indicates the country in which the mark is valid.
      This may be a two-character code from [WIPO.ST3]
   <launch:region>:  indicates the name of a city, state, province or
      other geographic region in which the mark is valid.
   <launch:owner>:  Owner information using the Contact (Section 2.6)
      elements.
   <launch:contact>:  Contact for the owner using the Contact
      (Section 2.6) element.

   All of the child elements are OPTIONAL.  Server policy may place
   additional constraints on the format and requirements of such
   elements.

2.6.  Contact

   The contact information contained within the Mark (Section 2.5)
   cannot be defined via a contact identifier as defined in the EPP
   contact mapping [RFC5733] since it is contact information defined
   outside of the server.  Some of the contact elements defined in EPP
   contact mapping [RFC5733] are replicated in this extension.

   The child elements of a contact using either the <launch:owner> or
   <launch:contact> elements include:
   <launch:id>:  identifier of contact that MUST be unique among all
       contacts of the external third party.







Tan, et al.              Expires March 16, 2013                 [Page 9]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   <launch:name>:  name of the individual or role represented by the
       contact.
   <launch:org>:  name of the organization with which the contact is
       affiliated.
   <launch:addr>:  address information associated with the contact. the
       <launch:addr> element contains the following child elements:

       <launch:street>  one, two, or three <launch:street> elements that
           contain the contact's street address.
       <launch:city>  contact's city
       <launch:sp>  contact's state or province
       <launch:cc>  contact's country code
   <launch:voice>:  contact's voice telephone number
   <launch:fax>:  contact's facsimile telephone number
   <launch:email>:  contact's email address

   All of the child elements are OPTIONAL.  Server policy may place
   additional constraints on the format and requirements of such
   elements.

2.7.  Digital Signature

   Digital signatures can be used by the server to validate either the
   mark information, when using the signed mark model with the <launch:
   signedMark> element, or the claims notice with the <launch:
   signedNotice> element.  The digital signatures are handled using an
   XML Signature [2] around the entire <launch:signedMark> or <launch:
   signedNotice> elements.  Once the digital signature is validated
   using the appropriate public key, the server can trust all of the
   information included in the <launch:signedMark> or <launch:
   signedNotice> elements.  It's up to server policy how the public key
   is transferred.

   To have the digital signature cover all of the elements of the
   <launch:signedMark> and <launch:signedNotice> elements, the XML
   Signature [2] Reference URI is set to "#pointer(..)" and the
   Transform "http://www.w3.org/2000/09/xmldsig#enveloped-signature" is
   used.  Both of these has the digital signature cover the parent
   element of the Signature element and to specify that the Signature
   element is embedded in the parent element.

2.7.1.  <launch:signedMark> element

   The child elements of the <launch:signedMark> element include:







Tan, et al.              Expires March 16, 2013                [Page 10]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   <launch:serial>:  Signature serial number that that can be compared
      with a revocation list by the server.
   <launch:zone>:  Zero or more DNS zones the <launch:signedMark> can be
      used with.  No <launch:zone> element indicates that the <launch:
      signedMark> can be used within any DNS zone.
   <launch:exDate>:  OPTIONAL date and time that the <launch:signedMark>
      expires.  The server MUST NOT accept a <launch:signedMark> that
      has expired.  No <launch:exDate> element indicates that there is
      no expiry.
   <launch:mark>:  Trademark information as defined in the Mark
      (Section 2.5) section.
   <Signature>:  XML Signature [2] for the <launch:signedMark>

   The following is an example <launch:signedMark> using the XML
   Signature [2] to sign all of the elements of <launch:signedMark>
   element.

   <launch:signedMark>
     <launch:serial>123456</launch:serial>
     <launch:zone>newtld</launch:zone>
     <launch:exDate>2012-08-16T09:00:00.0Z</launch:exDate>
     <launch:mark>
       <launch:name>Example One</launch:name>
       <launch:label>example-one</launch:label>
       <launch:label>exampleone</launch:label>
       <launch:issuer>IP Clearinghouse</launch:issuer>
       <launch:number>GE 3933232</launch:number>
       <launch:type>REG-TM-WORD</launch:type>
       <launch:entitlement>owner</launch:entitlement>
       <launch:regDate>2011-09-09</launch:regDate>
       <launch:exDate>2013-09-09</launch:exDate>
       <launch:country>AU</launch:country>
       <launch:region>VIC</launch:region>
       <launch:owner>
         <launch:org>Example Inc.</launch:org>
       </launch:owner>
       <launch:contact>
         <launch:name>John Doe</launch:name>
         <launch:org>Example Inc.</launch:org>
         <launch:addr>
           <launch:street>123 Example Dr.</launch:street>
           <launch:street>Suite 100</launch:street>
           <launch:city>Reston</launch:city>
           <launch:sp>VA</launch:sp>
           <launch:pc>20190</launch:pc>
           <launch:cc>US</launch:cc>
         </launch:addr>
         <launch:voice x="1234">+1.7035555555</launch:voice>



Tan, et al.              Expires March 16, 2013                [Page 11]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


         <launch:fax>+1.7035555556</launch:fax>
         <launch:email>jdoe@example.tld</launch:email>
       </launch:contact>
     </launch:mark>
     <Signature xmlns=
       "http://www.w3.org/2000/09/xmldsig#">
       <SignedInfo>
         <CanonicalizationMethod
           Algorithm=
           "http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
         <SignatureMethod
           Algorithm="http://www.w3.org/2000/09/xmldsig#dsa-sha1"/>
         <Reference URI="#pointer(..)">
           <Transforms>
             <Transform
               Algorithm=
               "http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
             </Transforms>
           <DigestMethod
             Algorithm=
             "http://www.w3.org/2000/09/xmldsig#sha1"/>
           <DigestValue>j6lwx3rvEPO0vKtMup4NbeVu8nk=</DigestValue>
         </Reference>
       </SignedInfo>
       <SignatureValue>
         cID8yqvR60QYQVhOpBDUmPiIxplV/fM7lj9RKF+fswSjJAklUrgf2w==
       </SignatureValue>
     </Signature>
   </launch:signedMark>

2.7.2.  <launch:signedNotice> element

   The child elements of the <launch:signedNotice> element include:

   <launch:noticeID>:  Unique notice identifier generated by the third
      party.  The <launch:noticeID> can be compared with a revocation
      list by the server.
   <launch:name>:  Domain name that the claims notice is for.
   <launch:crDate>:  Date and time that the <launch:signedNotice> was
      created.
   <launch:exDate>:  OPTIONAL date and time that the <launch:
      signedNotice> expires.  The server MUST NOT accept a <launch:
      signedNotice> that has expired.  No <launch:exDate> element
      indicates that there is no expiry.







Tan, et al.              Expires March 16, 2013                [Page 12]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   <Signature>:  XML Signature [2] for the <launch:signedNotice>

   The following is an example <launch:signedNotice> using the XML
   Signature [2] to sign all of the elements of <launch:signedNotice>
   element.

   <launch:signedNotice>
     <launch:noticeID>49FD46E6C4B45C55D4AC</launch:noticeID>
     <launch:name>example.tld</launch:name>
     <launch:crDate>2012-09-07T22:00:00.0Z</launch:crDate>
     <launch:exDate>2012-09-08T22:00:00.0Z</launch:exDate>
     <Signature xmlns="http://www.w3.org/2000/09/xmldsig#">
       <SignedInfo>
         <CanonicalizationMethod
           Algorithm=
           "http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
         <SignatureMethod
           Algorithm="http://www.w3.org/2000/09/xmldsig#dsa-sha1"/>
         <Reference URI="#pointer(..)">
           <Transforms>
             <Transform
               Algorithm=
               "http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
           </Transforms>
           <DigestMethod
             Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
           <DigestValue>j6lwx3rvEPO0vKtMup4NbeVu8nk=</DigestValue>
         </Reference>
       </SignedInfo>
       <SignatureValue>
        cID8yqvR60QYQVhOpBDUmPiIxplV/fM7lj9RKF+fswSjJAklUrgf2w==
       </SignatureValue>
     </Signature>
   </launch:signedNotice>


3.  EPP Command Mapping

   A detailed description of the EPP syntax and semantics can be found
   in the EPP core protocol specification [RFC5730].  The command
   mappings described here are specifically for use in the Launch Phase
   Extension.

   This mapping is designed to be flexible, requiring only a minimum set
   of required elements.

   While it is meant to serve several use cases, it does not prescribe
   any interpretation by the client or server.  Such processing is



Tan, et al.              Expires March 16, 2013                [Page 13]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   typically highly policy-dependent and therefore specific to
   implementations.

   Operations on application objects are done via one or more of the
   existing EPP verbs defined in the EPP domain name mapping [RFC5731].
   Registries may choose to support a subset of the operations.

3.1.  EPP <check> Command

   This extension defines additional elements to extend the EPP <check>
   command and response to be used in conjunction with the EPP domain
   name mapping [RFC5731].

   This extension defines a new command called the Claims Check Command
   that is used to determine whether or not there are any matching
   trademarks for each domain name passed in the command.  Instead of
   returning whether the domain name is available it will return whether
   or not at least one matching trademark exists for the domain name.
   If there is at least one matching trademark that exists for the
   domain name a <launch:claimKey> element is returned.  The value of
   that the <launch:claimKey> element can be used with a info service of
   a third party trademark provider like the Trademark Clearinghouse
   (TMCH) for getting the information needed to generate the trademark
   claims notice.  The third party trademark provider should also return
   a Signed Notice (Section 2.7.2) that can be passed in the extension
   to the extension to the Create Command (Section 3.3) for the server
   to validate that the correct trademark claims notice was presented.
   The <domain:name> elements in the EPP <check> command of EPP domain
   name mapping [RFC5731] define the domain names to check for matching
   trademarks.  The <launch:check> element contains the following child
   elements:

   <launch:phase>  The phase with the value of "claims" to indicate that
       this is a Claims Check Command.

















Tan, et al.              Expires March 16, 2013                [Page 14]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   Example Claims Check Command using the <check> domain command and the
   <launch:check> extension to determine if "example1.tld" and
   "example2.tld" have any matching trademarks.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
      <check>
       <domain:check
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>example1.tld</domain:name>
         <domain:name>example2.tld</domain:name>
       </domain:check>
      </check>
      <extension>
       <launch:check
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>claims</launch:phase>
       </launch:check>
      </extension>
      <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   If the <check> command has been processed successfully, the EPP
   <resData> element MUST contains a child <launch:chkData> element that
   identifies the launch namespace.  The <launch:chkData> element
   contains the following child elements:

   <launch:phase>  the phase with a value of "claims".
   <launch:cd>  One or more <launch:cd> elements that contain the
       following child elements:

       <launch:name>  Contains the fully qualified name of the queried
           domain name.  This element MUST contain an "exists" attribute
           whose value indicates if a matching trademark exists for the
           domain name.  A value of "1" or "true" means that a matching
           trademark does exist.  A value of "0" or "false" means that a
           matching trademark does not exist.
       <launch:claimKey>  An OPTIONAL claim key that can be passed to a
           info service of a third party trademark provider like the
           Trademark Clearinghouse (TMCH) for getting the information
           needed to generate the trademark claims notice.  The
           <claimKey> is used as the key for the query in place of the
           domain name to securely query the service without using a
           well-known value like a domain name.





Tan, et al.              Expires March 16, 2013                [Page 15]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   Example Claims Check Response when no matching trademarks are found
   for the domain name example1.tld and matching trademarks are found
   for the domain name example2.tld.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
        <msg>Command completed successfully</msg>
       </result>
       <resData>
        <launch:chkData
         xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>claims</launch:phase>
         <launch:cd>
           <launch:name exists="0">example1.tld</launch:name>
         </launch:cd>
         <launch:cd>
           <launch:name exists="1">example2.tld</launch:name>
           <launch:claimKey>abc123</launch:claimKey>
         </launch:cd>
        </launch:chkData>
       </resData>
       <trID>
        <clTRID>ABC-12345</clTRID>
        <svTRID>54322-XYZ</svTRID>
       </trID>
     </response>
   </epp>

3.2.  EPP <info> Command

   This extension defines additional elements to extend the EPP <info>
   command and response to be used in conjunction with the EPP domain
   name mapping [RFC5731].

   There are two forms of the extension to the EPP <info> command that
   are dependent on the supported launch phases (Section 2.2) as defined
   below:

   sunrise  The EPP <info> command with the "sunrise" phase is used to
      retrieve information for a specific "sunrise" application based on
      an Application Identifier (Section 2.1).  This form of the EPP
      <info> extension is referred to as the Sunrise Info Form and is
      defined in the Sunrise Info Form (Section 3.2.1) section.






Tan, et al.              Expires March 16, 2013                [Page 16]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   landrush  The EPP <info> command with the "landrush" phase is
      undefined but the form supported is up to server policy.
   claims  The EPP <info> command with the "claims" phase is used to
      retrieve the trademark claims information associated with a non-
      existing domain name that is referred to as the Claims Info
      Command.  The response to the Claims Info Command does not extend
      the Domain Info Response as defined in EPP domain name mapping
      [RFC5731].  This form of the EPP <info> extension is referred to
      as the Claims Info Form and defined in the Claims Info Form
      (Section 3.2.2) section.
   open  The EPP <info> command with the "open" phase is undefined but
      the form supported is up to server policy.
   custom  The EPP <info> command with the "custom" phase is undefined
      but the form supported is up to server policy.

3.2.1.  Sunrise Info Form

   The Sunrise Info Form of the extension to the EPP domain name mapping
   [RFC5731] gets information on an application created with the
   <launch:create> using the Application Identifier (Section 2.1)
   returned in the <launch:creData> element of the Create Response
   (Section 3.3).  A <launch:info> element is sent along with the
   regular <info> domain command.  The <launch:info> element contains
   the following child elements:

   <launch:phase>  The phase during which the application was submitted
       or is associated with.  Server policy defines what phases that
       are supported for the Sunrise Info Form.
   <launch:applicationID>  the application identifier of the
       application.





















Tan, et al.              Expires March 16, 2013                [Page 17]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   Example <info> domain command with the Sunrise Info Form <launch:
   info> extension.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
      <info>
       <domain:info
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>example.tld</domain:name>
       </domain:info>
      </info>
      <extension>
       <launch:info
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>sunrise</launch:phase>
         <launch:applicationID>abc123</launch:applicationID>
       </launch:info>
      </extension>
      <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   If the query was successful, the server replies with an <launch:
   infData> element along with the regular EPP <resData>.  The <launch:
   infData> contains the following child elements:

   <launch:phase>  the phase during which the application was submitted
       or is associated with.
   <launch:applicationID>  the application identifier of the returned
       application.
   <launch:status>  status of the application using one of the supported
       status values (Section 2.3).
   <launch:codeMark> or <launch:signedMark>
       <launch:codeMark>  zero or more <launch:codeMark> elements.  The
           <launch:codeMark> child elements are defined in the <launch:
           codeMark> element (Section 2.4.1) section.
       <launch:signedMark>  zero or more <launch:signedMark> elements.
           The <launch:signedMark> child elements are defined in the
           <launch:signedMark> element (Section 2.7.1) section.

   Example <info> domain response using the Sunrise Info Form <launch:
   infData> extension with multiple codes.








Tan, et al.              Expires March 16, 2013                [Page 18]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
      <response>
        <result code="1000">
          <msg>Command completed successfully</msg>
        </result>
        <resData>
          <domain:infData
           xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
            <domain:name>example.tld</domain:name>
            <domain:roid>EXAMPLE1-REP</domain:roid>
            <domain:status s="pendingCreate"/>
            <domain:registrant>jd1234</domain:registrant>
            <domain:contact type="admin">sh8013</domain:contact>
            <domain:contact type="tech">sh8013</domain:contact>
            <domain:clID>ClientX</domain:clID>
            <domain:crID>ClientY</domain:crID>
            <domain:crDate>2012-04-03T22:00:00.0Z</domain:crDate>
            <domain:authInfo>
              <domain:pw>2fooBAR</domain:pw>
            </domain:authInfo>
          </domain:infData>
        </resData>
        <extension>
          <launch:infData
           xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
            <launch:phase>sunrise</launch:phase>
             <launch:applicationID>abc123</launch:applicationID>
             <launch:status s="pending"/>
            <launch:codeMark>
               <launch:code>49FD46E6C4B45C55D4AC</launch:code>
            </launch:codeMark>
            <launch:codeMark>
               <launch:code>49FD46E6C4B45C55D4AD</launch:code>
            </launch:codeMark>
            <launch:codeMark>
               <launch:code>49FD46E6C4B45C55D4AE</launch:code>
            </launch:codeMark>
          </launch:infData>
        </extension>
        <trID>
          <clTRID>ABC-12345</clTRID>
          <svTRID>54322-XYZ</svTRID>
        </trID>
      </response>
    </epp>

   Example <info> domain response using the Sunrise Info Form <launch:



Tan, et al.              Expires March 16, 2013                [Page 19]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   infData> extension with code and mark information.

 <?xml version="1.0" encoding="UTF-8" standalone="no"?>
 <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
    <response>
      <result code="1000">
        <msg>Command completed successfully</msg>
      </result>
      <resData>
        <domain:infData
         xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
          <domain:name>exampleone.tld</domain:name>
          <domain:roid>EXAMPLE1-REP</domain:roid>
          <domain:status s="pendingCreate"/>
          <domain:registrant>jd1234</domain:registrant>
          <domain:contact type="admin">sh8013</domain:contact>
          <domain:contact type="tech">sh8013</domain:contact>
          <domain:clID>ClientX</domain:clID>
          <domain:crID>ClientY</domain:crID>
          <domain:crDate>2012-04-03T22:00:00.0Z</domain:crDate>
          <domain:authInfo>
            <domain:pw>2fooBAR</domain:pw>
          </domain:authInfo>
        </domain:infData>
      </resData>
      <extension>
        <launch:infData
         xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
          <launch:phase>sunrise</launch:phase>
           <launch:applicationID>abc123</launch:applicationID>
           <launch:status s="rejected" name="rejectedAuction" lang="en">
             Application rejected due to result of auction.
           </launch:status>
           <launch:codeMark>
             <launch:code>49FD46E6C4B45C55D4AC</launch:code>
             <launch:mark>
               <launch:name>Example One</launch:name>
               <launch:label>example-one</launch:label>
               <launch:label>exampleone</launch:label>
               <launch:issuer>IP Clearinghouse</launch:issuer>
               <launch:number>GE 3933232</launch:number>
               <launch:type>REG-TM-WORD</launch:type>
               <launch:entitlement>owner</launch:entitlement>
               <launch:regDate>2011-09-09</launch:regDate>
               <launch:exDate>2013-09-09</launch:exDate>
               <launch:country>AU</launch:country>
               <launch:region>VIC</launch:region>
               <launch:owner>



Tan, et al.              Expires March 16, 2013                [Page 20]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


                 <launch:org>Example Inc.</launch:org>
               </launch:owner>
               <launch:contact>
                 <launch:name>John Doe</launch:name>
                 <launch:org>Example Inc.</launch:org>
                 <launch:addr>
                   <launch:street>123 Example Dr.</launch:street>
                   <launch:street>Suite 100</launch:street>
                   <launch:city>Reston</launch:city>
                   <launch:sp>VA</launch:sp>
                   <launch:pc>20190</launch:pc>
                   <launch:cc>US</launch:cc>
                 </launch:addr>
                 <launch:voice x="1234">+1.7035555555</launch:voice>
                 <launch:fax>+1.7035555556</launch:fax>
                 <launch:email>jdoe@example.tld</launch:email>
               </launch:contact>
             </launch:mark>
           </launch:codeMark>
        </launch:infData>
      </extension>
      <trID>
        <clTRID>ABC-12345</clTRID>
        <svTRID>54322-XYZ</svTRID>
      </trID>
    </response>
  </epp>

   Example <info> domain response using the Sunrise Info Form <launch:
   infData> extension signed mark information.

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
   <response>
     <result code="1000">
       <msg>Command completed successfully</msg>
     </result>
     <resData>
       <domain:infData
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>exampleone.tld</domain:name>
         <domain:roid>EXAMPLE1-REP</domain:roid>
         <domain:status s="pendingCreate"/>
         <domain:registrant>jd1234</domain:registrant>
         <domain:contact type="admin">sh8013</domain:contact>
         <domain:contact type="tech">sh8013</domain:contact>
         <domain:clID>ClientX</domain:clID>
         <domain:crID>ClientY</domain:crID>



Tan, et al.              Expires March 16, 2013                [Page 21]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


         <domain:crDate>2012-04-03T22:00:00.0Z</domain:crDate>
         <domain:authInfo>
           <domain:pw>2fooBAR</domain:pw>
         </domain:authInfo>
       </domain:infData>
     </resData>
     <extension>
       <launch:infData
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>sunrise</launch:phase>
          <launch:applicationID>abc123</launch:applicationID>
          <launch:status s="pending"/>
          <launch:signedMark>
            <launch:serial>123456</launch:serial>
            <launch:zone>newtld</launch:zone>
            <launch:exDate>2012-08-16T09:00:00.0Z</launch:exDate>
            <launch:mark>
              <launch:name>Example One</launch:name>
              <launch:label>example-one</launch:label>
              <launch:label>exampleone</launch:label>
              <launch:issuer>IP Clearinghouse</launch:issuer>
              <launch:number>GE 3933232</launch:number>
              <launch:type>REG-TM-WORD</launch:type>
              <launch:entitlement>owner</launch:entitlement>
              <launch:regDate>2011-09-09</launch:regDate>
              <launch:exDate>2013-09-09</launch:exDate>
              <launch:country>AU</launch:country>
              <launch:region>VIC</launch:region>
              <launch:owner>
                <launch:org>Example Inc.</launch:org>
              </launch:owner>
              <launch:contact>
                <launch:name>John Doe</launch:name>
                <launch:org>Example Inc.</launch:org>
                <launch:addr>
                  <launch:street>123 Example Dr.</launch:street>
                  <launch:street>Suite 100</launch:street>
                  <launch:city>Reston</launch:city>
                  <launch:sp>VA</launch:sp>
                  <launch:pc>20190</launch:pc>
                  <launch:cc>US</launch:cc>
                </launch:addr>
                <launch:voice x="1234">+1.7035555555</launch:voice>
                <launch:fax>+1.7035555556</launch:fax>
                <launch:email>jdoe@example.tld</launch:email>
              </launch:contact>
            </launch:mark>
            <Signature xmlns=



Tan, et al.              Expires March 16, 2013                [Page 22]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


              "http://www.w3.org/2000/09/xmldsig#">
              <SignedInfo>
                <CanonicalizationMethod
                  Algorithm=
                  "http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
                 <SignatureMethod
               Algorithm="http://www.w3.org/2000/09/xmldsig#dsa-sha1"/>
                <Reference URI="#pointer(..)">
                  <Transforms>
                    <Transform
                      Algorithm=
               "http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
                  </Transforms>
                  <DigestMethod
                    Algorithm=
                "http://www.w3.org/2000/09/xmldsig#sha1"/>
                <DigestValue>j6lwx3rvEPO0vKtMup4NbeVu8nk=</DigestValue>
                </Reference>
              </SignedInfo>
              <SignatureValue>
            cID8yqvR60QYQVhOpBDUmPiIxplV/fM7lj9RKF+fswSjJAklUrgf2w==
              </SignatureValue>
            </Signature>
          </launch:signedMark>
       </launch:infData>
     </extension>
     <trID>
       <clTRID>ABC-12345</clTRID>
       <svTRID>54322-XYZ</svTRID>
     </trID>
   </response>
 </epp>

3.2.2.  Claims Info Form

   The Claims Info Form of the extension to the EPP domain name mapping
   [RFC5731] gets trademark claims information for a non-existing domain
   name that is referred to as a Claims Info Command.  The <launch:info>
   element contains the following child elements:

   <launch:phase>  The phase with the value of "claims" to indicate that
       this is a Claims Info Command.









Tan, et al.              Expires March 16, 2013                [Page 23]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   Example Claims Info Command using the <info> domain command and the
   Claims Info Form <launch:info> extension.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
      <info>
       <domain:info
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>example.tld</domain:name>
       </domain:info>
      </info>
      <extension>
       <launch:info
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>claims</launch:phase>
       </launch:info>
      </extension>
      <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   If the query was successful, the server replies with an <launch:
   infData> element containing the trademark claims information expected
   to be used by the client to generate the claims notice.  The <launch:
   infData> has the following child elements:

   <launch:phase>  the phase with a value of "claims".
   <launch:notice>  The information used for the trademark claims
       notice.  The <launch:notice> element has the following child
       elements:

       <launch:name>  The domain name that the claim notice information
           is associated with.
       <launch:none>  OPTIONAL element included if there are no
           trademark claims associated with the <launch:name>
       <launch:noticeID>  OPTIONAL server generated identifier for the
           claims notice that is passed in the <launch:create> extension
           of the Create Command (Section 3.3).  This MUST be included
           if there is at least one trademark claim associated with the
           <launch:notice> <launch:name> element.
       <launch:mark>  Zero or more <launch:mark> elements containing the
           trademark information as defined in the Mark (Section 2.5)
           section.







Tan, et al.              Expires March 16, 2013                [Page 24]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   Example Claims Info Response when no matching trademark claims are
   found for the domain name example.tld.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
        <msg>Command completed successfully</msg>
       </result>
       <resData>
        <launch:infData
         xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>claims</launch:phase>
         <launch:notice>
           <launch:name>example.tld</launch:name>
           <launch:none/>
         </launch:notice>
        </launch:infData>
       </resData>
       <trID>
        <clTRID>ABC-12345</clTRID>
        <svTRID>54322-XYZ</svTRID>
       </trID>
     </response>
   </epp>

   Example Claims Info Response when two matching trademark claims are
   found for the domain name exampleone.tld.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
        <msg>Command completed successfully</msg>
       </result>
       <resData>
        <launch:infData
         xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>claims</launch:phase>
         <launch:notice>
           <launch:name>exampleone.tld</launch:name>
               <launch:noticeID>49FD46E6C4B45C55D4AC</launch:noticeID>
           <launch:mark>
             <launch:name>Example One</launch:name>
             <launch:label>example-one</launch:label>
             <launch:label>exampleone</launch:label>
             <launch:issuer>IP Clearinghouse</launch:issuer>
             <launch:number>GE 3933232</launch:number>



Tan, et al.              Expires March 16, 2013                [Page 25]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


             <launch:type>REG-TM-WORD</launch:type>
             <launch:entitlement>owner</launch:entitlement>
             <launch:regDate>2011-09-09</launch:regDate>
             <launch:exDate>2013-09-09</launch:exDate>
             <launch:country>AU</launch:country>
             <launch:region>VIC</launch:region>
             <launch:owner>
               <launch:org>Example Inc.</launch:org>
             </launch:owner>
             <launch:contact>
               <launch:name>John Doe</launch:name>
               <launch:org>Example Inc.</launch:org>
               <launch:addr>
                 <launch:street>123 Example Dr.</launch:street>
                 <launch:street>Suite 100</launch:street>
                 <launch:city>Reston</launch:city>
                 <launch:sp>VA</launch:sp>
                 <launch:pc>20190</launch:pc>
                 <launch:cc>US</launch:cc>
               </launch:addr>
               <launch:voice x="1234">+1.7035555555</launch:voice>
               <launch:fax>+1.7035555556</launch:fax>
               <launch:email>jdoe@example.tld</launch:email>
             </launch:contact>
           </launch:mark>
           <launch:mark>
             <launch:name>Example Two</launch:name>
             <launch:label>example-two</launch:label>
             <launch:label>exampletwo</launch:label>
             <launch:issuer>IP Clearinghouse</launch:issuer>
             <launch:number>GE 3933233</launch:number>
             <launch:type>REG-TM-WORD</launch:type>
             <launch:entitlement>owner</launch:entitlement>
             <launch:regDate>2011-09-09</launch:regDate>
             <launch:exDate>2013-09-09</launch:exDate>
             <launch:country>AU</launch:country>
             <launch:region>VIC</launch:region>
             <launch:owner>
               <launch:org>Example Inc.</launch:org>
             </launch:owner>
             <launch:contact>
               <launch:name>John Doe</launch:name>
               <launch:org>Example Inc.</launch:org>
               <launch:addr>
                 <launch:street>123 Example Dr.</launch:street>
                 <launch:street>Suite 100</launch:street>
                 <launch:city>Reston</launch:city>
                 <launch:sp>VA</launch:sp>



Tan, et al.              Expires March 16, 2013                [Page 26]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


                 <launch:pc>20190</launch:pc>
                 <launch:cc>US</launch:cc>
               </launch:addr>
               <launch:voice x="1234">+1.7035555555</launch:voice>
               <launch:fax>+1.7035555556</launch:fax>
               <launch:email>jdoe@example.tld</launch:email>
             </launch:contact>
           </launch:mark>
         </launch:notice>
        </launch:infData>
       </resData>
       <trID>
        <clTRID>ABC-12345</clTRID>
        <svTRID>54322-XYZ</svTRID>
       </trID>
     </response>
   </epp>

3.3.  EPP <create> Command

   There are two forms of the extension to the EPP <create> command that
   are dependent on the supported launch phases (Section 2.2) as defined
   below:

   sunrise  The EPP <create> command with the "sunrise" phase is used to
      submit an application with trademark information that can be
      verified by the server with the <domain:name> value.  The Sunrise
      Create Form (Section 3.3.1) is used for the "sunrise" phase.
      Optionally, the server can support multiple overlapping
      applications that are chosen asynchronously with a server
      generated Application Identifier (Section 2.1) for later
      reference.
   landrush  The EPP <create> command with the "landrush" phase is
      undefined but the form supported is up to server policy.
   claims  The EPP <create> command with the "claims" phase is used to
      pass the information that can be used to validate that the claims
      notice information was retrieved via the Claims Info Command and
      was accepted by the registrant.  The Claims Create Form
      (Section 3.3.2) is used for the "claims" phase.
   open  The EPP <create> command with the "open" phase is undefined but
      the form supported is up to server policy.
   custom  The EPP <create> command with the "custom" phase is undefined
      but the form supported is up to server policy.

3.3.1.  Sunrise Create Form

   The Sunrise Create Form of the extension to the EPP domain name
   mapping [RFC5731] includes the verifiable trademark information that



Tan, et al.              Expires March 16, 2013                [Page 27]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   the server uses to match against the domain name to authorize the
   domain create.  A server MUST support one of four models in Claim
   Validation Models (Section 2.4) for the verifiable trademark
   information passed by the client.

   A <launch:create> element is sent along with the regular <create>
   domain command.  The <launch:create> element contains the following
   child elements:

   <launch:phase>  The phase the application is associated with.
   <launch:codeMark> or <launch:signedMark>
       <launch:codeMark>  zero or more <launch:codeMark> elements.  The
           <launch:codeMark> child elements are defined in the <launch:
           codeMark> element (Section 2.4.1) section.
       <launch:signedMark>  zero or more <launch:signedMark> elements.
           The <launch:signedMark> child elements are defined in the
           <launch:signedMark> element (Section 2.7.1) section.


































Tan, et al.              Expires March 16, 2013                [Page 28]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   Following is an example <create> domain command using the <launch:
   create> extension with multiple sunrise codes.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <create>
         <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>example.tld</domain:name>
           <domain:registrant>jd1234</domain:registrant>
           <domain:contact type="admin">sh8013</domain:contact>
           <domain:contact type="tech">sh8013</domain:contact>
           <domain:authInfo>
             <domain:pw>2fooBAR</domain:pw>
           </domain:authInfo>
         </domain:create>
       </create>
       <extension>
         <launch:create
          xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
           <launch:phase>sunrise</launch:phase>
           <launch:codeMark>
               <launch:code>49FD46E6C4B45C55D4AC</launch:code>
           </launch:codeMark>
           <launch:codeMark>
               <launch:code>49FD46E6C4B45C55D4AD</launch:code>
           </launch:codeMark>
           <launch:codeMark>
               <launch:code>49FD46E6C4B45C55D4AE</launch:code>
           </launch:codeMark>
         </launch:create>
       </extension>
       <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   Following is an example <create> domain command using the <launch:
   create> extension with a code and mark information.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <create>
         <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>exampleone.tld</domain:name>
           <domain:registrant>jd1234</domain:registrant>



Tan, et al.              Expires March 16, 2013                [Page 29]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


           <domain:contact type="admin">sh8013</domain:contact>
           <domain:contact type="tech">sh8013</domain:contact>
           <domain:authInfo>
             <domain:pw>2fooBAR</domain:pw>
           </domain:authInfo>
         </domain:create>
       </create>
       <extension>
         <launch:create
          xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
             <launch:phase>sunrise</launch:phase>
             <launch:codeMark>
               <launch:code>49FD46E6C4B45C55D4AC</launch:code>
               <launch:mark>
                 <launch:name>Example One</launch:name>
                 <launch:label>example-one</launch:label>
                 <launch:label>exampleone</launch:label>
                 <launch:issuer>IP Clearinghouse</launch:issuer>
                 <launch:number>GE 3933232</launch:number>
                 <launch:type>REG-TM-WORD</launch:type>
                 <launch:entitlement>owner</launch:entitlement>
                 <launch:regDate>2011-09-09</launch:regDate>
                 <launch:exDate>2013-09-09</launch:exDate>
                 <launch:country>AU</launch:country>
                 <launch:region>VIC</launch:region>
                 <launch:owner>
                   <launch:org>Example Inc.</launch:org>
                 </launch:owner>
                 <launch:contact>
                   <launch:name>John Doe</launch:name>
                   <launch:org>Example Inc.</launch:org>
                   <launch:addr>
                     <launch:street>123 Example Dr.</launch:street>
                     <launch:street>Suite 100</launch:street>
                     <launch:city>Reston</launch:city>
                     <launch:sp>VA</launch:sp>
                     <launch:pc>20190</launch:pc>
                     <launch:cc>US</launch:cc>
                   </launch:addr>
                   <launch:voice x="1234">+1.7035555555</launch:voice>
                   <launch:fax>+1.7035555556</launch:fax>
                   <launch:email>jdoe@example.tld</launch:email>
                 </launch:contact>
               </launch:mark>
             </launch:codeMark>
         </launch:create>
       </extension>
       <clTRID>ABC-12345</clTRID>



Tan, et al.              Expires March 16, 2013                [Page 30]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


     </command>
   </epp>

   Following is an example <create> domain command using the <launch:
   create> extension with signed mark information.

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <domain:create
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>example.tld</domain:name>
        <domain:registrant>jd1234</domain:registrant>
        <domain:contact type="admin">sh8013</domain:contact>
        <domain:contact type="tech">sh8013</domain:contact>
        <domain:authInfo>
          <domain:pw>2fooBAR</domain:pw>
        </domain:authInfo>
      </domain:create>
    </create>
    <extension>
      <launch:create
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
          <launch:phase>sunrise</launch:phase>
          <launch:signedMark>
            <launch:serial>123456</launch:serial>
            <launch:zone>newtld</launch:zone>
            <launch:label>example-and-example</launch:label>
            <launch:label>example</launch:label>
        <launch:mark>
          <launch:name>Hello</launch:name>
          <launch:issuer>IP Clearinghouse</launch:issuer>
          <launch:number>GE 3933232</launch:number>
          <launch:type>REG-TM-WORD</launch:type>
          <launch:entitlement>owner</launch:entitlement>
          <launch:regDate>2011-09-09</launch:regDate>
          <launch:exDate>2013-09-09</launch:exDate>
          <launch:country>AU</launch:country>
          <launch:region>VIC</launch:region>
          <launch:owner>
            <launch:org>Example Inc.</launch:org>
          </launch:owner>
          <launch:contact>
            <launch:name>John Doe</launch:name>
            <launch:org>Example Inc.</launch:org>
            <launch:addr>
              <launch:street>123 Example Dr.</launch:street>



Tan, et al.              Expires March 16, 2013                [Page 31]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


              <launch:street>Suite 100</launch:street>
              <launch:city>Reston</launch:city>
              <launch:sp>VA</launch:sp>
              <launch:pc>20190</launch:pc>
              <launch:cc>US</launch:cc>
            </launch:addr>
            <launch:voice x="1234">+1.7035555555</launch:voice>
            <launch:fax>+1.7035555556</launch:fax>
            <launch:email>jdoe@example.tld</launch:email>
          </launch:contact>
        </launch:mark>
            <Signature xmlns="http://www.w3.org/2000/09/xmldsig#">
              <SignedInfo>
            <CanonicalizationMethod
             Algorithm=
             "http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
            <SignatureMethod
             Algorithm="http://www.w3.org/2000/09/xmldsig#dsa-sha1"/>
            <Reference URI="#pointer(..)">
              <Transforms>
                <Transform
                  Algorithm=
               "http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
              </Transforms>
              <DigestMethod
                Algorithm=
                "http://www.w3.org/2000/09/xmldsig#sha1"/>
              <DigestValue>j6lwx3rvEPO0vKtMup4NbeVu8nk=</DigestValue>
            </Reference>
          </SignedInfo>
          <SignatureValue>
            cID8yqvR60QYQVhOpBDUmPiIxplV/fM7lj9RKF+fswSjJAklUrgf2w==
          </SignatureValue>
        </Signature>
          </launch:signedMark>
      </launch:create>
    </extension>
    <clTRID>ABC-12345</clTRID>
  </command>
</epp>

   If the create was successful, the server MAY reply with the <launch:
   creData> element along with the regular EPP <resData> to indicate the
   server generated Application Identifier (Section 2.1) when multiple
   applications of a given domain name is supported; otherwise no
   extension is included with the regular EPP <resData>.  The <launch:
   creData> element contains the following child elements:




Tan, et al.              Expires March 16, 2013                [Page 32]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   <launch:phase>  The phase of the application that mirrors the
       <launch:phase> element included in the <launch:create>.
   <launch:applicationID>  the application identifier of the
       application.

   An example response when multiple overlapping applications are
   supported by the server.

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <response>
    <result code="1000">
      <msg>Command completed successfully</msg>
    </result>
    <resData>
      <domain:creData
         xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
       <domain:name>example.tld</domain:name>
       <domain:crDate>2010-08-10T15:38:26.623854Z</domain:crDate>
       <domain:exDate>2012-08-10T15:38:26.623854Z</domain:exDate>
      </domain:creData>
    </resData>
    <extension>
      <launch:creData xmlns:lp="urn:ietf:params:xml:ns:launchphase-1.0">
        <launch:phase>sunrise</launch:phase>
        <launch:applicationID>2393-9323-E08C-03B1</launch:applicationID>
      </launch:creData>
    </extension>
    <trID>
      <clTRID>example:epp:239332</clTRID>
      <svTRID>server-8551292e23b</svTRID>
    </trID>
  </response>
</epp>

3.3.2.  Claims Create Form

   The Claims Create Form of the extension to the EPP domain name
   mapping [RFC5731] includes the information related to the acceptance
   of the claims notice that is based on the contents of the Claims Info
   Response defined in the Claims Info Form (Section 3.2.2) section or
   is based on a signed notice by a trusted third party like the
   Trademark Clearinghouse (TMCH).

   A <launch:create> element is sent along with the regular <create>
   domain command.  The <launch:create> element contains the following
   child elements:




Tan, et al.              Expires March 16, 2013                [Page 33]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   <launch:phase>  Must contain the value of "claims" to indicate it is
       the Claims Create Form
   <launch:notice>
       <launch:timestamp>  Contains the date and time that the claims
           notice was accepted.
       <launch:clientAddr>  Contains the client IP address of the client
           that accepted the claims notice.
       <launch:noticeID> or <launch:signedNotice>
           <launch:noticeID>  Server generated identifier for the claim
               notice information returned in the <launch:infData>
               element.  The server MUST validate the noticeID either
               matches the exact claims information returned in the
               <launch:infData> or the current claims information
               associated with the domain name.  The method of
               validation is up to server policy.  If the launchID does
               not pass the validation the server MUST return an EPP
               error result code of 2202.
           <launch:signedNotice>  Signed claims notice reference
               information generated by a trusted third party like the
               Trademark Clearinghouse (TMCH).  The child elements of
               <signedNotice> are defined in the <launch:signedNotice>
               element (Section 2.7.2) section.





























Tan, et al.              Expires March 16, 2013                [Page 34]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   Following is an example <create> domain command using the <launch:
   create> extension with the trademark claims notice reference
   information and a <launch:noticeID>.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <create>
         <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>example.tld</domain:name>
           <domain:registrant>jd1234</domain:registrant>
           <domain:contact type="admin">sh8013</domain:contact>
           <domain:contact type="tech">sh8013</domain:contact>
           <domain:authInfo>
             <domain:pw>2fooBAR</domain:pw>
           </domain:authInfo>
         </domain:create>
       </create>
       <extension>
         <launch:create
          xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
           <launch:phase>claims</launch:phase>
           <launch:notice>
             <launch:timestamp>2012-06-19T09:00:00.0Z</launch:timestamp>
             <launch:clientAddr ip="v4">192.0.2.29</launch:clientAddr>
             <launch:noticeID>49FD46E6C4B45C55D4AC</launch:noticeID>
           </launch:notice>
         </launch:create>
       </extension>
       <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   Following is an example <create> domain command using the <launch:
   create> extension with the signed notice reference information.

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <create>
      <domain:create
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>example.tld</domain:name>
        <domain:registrant>jd1234</domain:registrant>
        <domain:contact type="admin">sh8013</domain:contact>
        <domain:contact type="tech">sh8013</domain:contact>
        <domain:authInfo>



Tan, et al.              Expires March 16, 2013                [Page 35]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


          <domain:pw>2fooBAR</domain:pw>
        </domain:authInfo>
      </domain:create>
    </create>
    <extension>
      <launch:create
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
        <launch:phase>claims</launch:phase>
        <launch:notice>
          <launch:timestamp>2012-06-19T09:00:00.0Z</launch:timestamp>
          <launch:clientAddr ip="v4">192.0.2.29</launch:clientAddr>
          <launch:signedNotice>
            <launch:noticeID>49FD46E6C4B45C55D4AC</launch:noticeID>
            <launch:name>example.tld</launch:name>
            <launch:crDate>2012-09-07T22:00:00.0Z</launch:crDate>
            <launch:exDate>2012-09-08T22:00:00.0Z</launch:exDate>
            <Signature xmlns="http://www.w3.org/2000/09/xmldsig#">
            <SignedInfo>
              <CanonicalizationMethod
               Algorithm=
               "http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
              <SignatureMethod
               Algorithm="http://www.w3.org/2000/09/xmldsig#dsa-sha1"/>
              <Reference URI="#pointer(..)">
                <Transforms>
                  <Transform
                    Algorithm=
               "http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
                </Transforms>
                <DigestMethod
                  Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
                <DigestValue>j6lwx3rvEPO0vKtMup4NbeVu8nk=</DigestValue>
              </Reference>
            </SignedInfo>
            <SignatureValue>
              cID8yqvR60QYQVhOpBDUmPiIxplV/fM7lj9RKF+fswSjJAklUrgf2w==
            </SignatureValue>
            </Signature>
          </launch:signedNotice>
        </launch:notice>
      </launch:create>
    </extension>
    <clTRID>ABC-12345</clTRID>
  </command>
</epp>






Tan, et al.              Expires March 16, 2013                [Page 36]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


3.4.  EPP <update> Command

   This extension defines additional elements to extend the EPP <update>
   command to be used in conjunction with the domain name mapping.

   A server that does not support allow multiple applications of a given
   domain name with a Application Identifier (Section 2.1) during its
   launch phase operations MUST return an EPP error result code of 2102.

   Registry policies permitting, clients may update an application
   object by submitting an EPP <update> command along with an <launch:
   update> element to indicate the application object to be updated.
   The <launch:update> element contains the following child elements:

   <launch:phase>  the phase during which the application was submitted
       or is associated with.
   <launch:applicationID>  the application identifier for which the
       client wishes to update.

   This extension does not define any extension to the response of an
   <update> domain command.  After processing the command, the server
   replies with a standard EPP response as defined in the EPP domain
   mapping.




























Tan, et al.              Expires March 16, 2013                [Page 37]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   Following is an example <update> domain command with the <launch:
   update> extension to add and remove a name server of a sunrise
   application with the application identifier "abc123".

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <update>
         <domain:update
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>example.tld</domain:name>
           <domain:add>
               <domain:ns>
                 <domain:hostObj>ns2.example.tld</domain:hostObj>
               </domain:ns>
             </domain:add>
             <domain:rem>
               <domain:ns>
                 <domain:hostObj>ns1.example.tld</domain:hostObj>
               </domain:ns>
             </domain:rem>
         </domain:update>
       </update>
       <extension>
       <launch:update
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>sunrise</launch:phase>
         <launch:applicationID>abc123</launch:applicationID>
       </launch:update>
       </extension>
       <clTRID>ABC-12345</clTRID>
     </command>
   </epp>


















Tan, et al.              Expires March 16, 2013                [Page 38]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   An example response that corresponds to the above command.

   <?xml version="1.0" encoding="UTF-8"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
         <msg>Command completed successfully</msg>
       </result>
       <trID>
         <clTRID>example:epp:239333</clTRID>
         <svTRID>server-8551292e23c</svTRID>
       </trID>
     </response>
   </epp>

3.5.  EPP <delete> Command

   This extension defines additional elements to extend the EPP <delete>
   command to be used in conjunction with the domain name mapping.

   A server that does not support allow multiple applications of a given
   domain name with a Application Identifier (Section 2.1) during its
   launch phase operations MUST return an EPP error result code of 2102.

   Registry policies permitting, clients MAY withdraw an application by
   submitting an EPP <delete> command along with an <launch:delete>
   element to indicate the application object to be deleted.  The
   <launch:delete> element contains the following child elements:

   <launch:phase>  the phase during which the application was submitted
       or is associated with.
   <launch:applicationID>  the application identifier for which the
       client wishes to delete.

   This extension does not define any extension to the response of an
   <delete> domain command.  After processing the command, the server
   replies with a standard EPP response as defined in the EPP domain
   mapping.













Tan, et al.              Expires March 16, 2013                [Page 39]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   Following is an example <delete> domain command with the <launch:
   delete> extension.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
      <delete>
       <domain:delete
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>example.tld</domain:name>
       </domain:delete>
      </delete>
      <extension>
       <launch:delete
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>sunrise</launch:phase>
         <launch:applicationID>abc123</launch:applicationID>
       </launch:delete>
      </extension>
      <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   An example response that corresponds to the above command.

   <?xml version="1.0" encoding="UTF-8"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
         <msg>Command completed successfully</msg>
       </result>
       <trID>
         <clTRID>example:epp:239334</clTRID>
         <svTRID>server-8551292e23d</svTRID>
       </trID>
     </response>
   </epp>

3.6.  EPP <renew> Command

   This extension does not define any extension to the EPP <renew>
   command or response described in the EPP domain name mapping
   [RFC5731].

3.7.  EPP <transfer> Command

   This extension does not define any extension to the EPP <transfer>
   command or response described in the EPP domain name mapping



Tan, et al.              Expires March 16, 2013                [Page 40]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


   [RFC5731].


4.  Formal Syntax

   An EPP object mapping is specified in XML Schema notation.  The
   formal syntax presented here is a complete schema representation of
   the object mapping suitable for automated validation of EPP XML
   instances.  The BEGIN and END tags are not part of the schema; they
   are used to note the beginning and ending of the schema for URI
   registration purposes.

   Copyright (c) 2012 IETF Trust and the persons identified as authors
   of the code.  All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   o  Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
   o  Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.
   o  Neither the name of Internet Society, IETF or IETF Trust, nor the
      names of specific contributors, may be used to endorse or promote
      products derived from this software without specific prior written
      permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

   BEGIN
   <?xml version="1.0" encoding="UTF-8"?>
   <schema
     targetNamespace="urn:ietf:params:xml:ns:launch-1.0"
     xmlns:launch="urn:ietf:params:xml:ns:launch-1.0"
      xmlns:eppcom="urn:ietf:params:xml:ns:eppcom-1.0"



Tan, et al.              Expires March 16, 2013                [Page 41]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


      xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
     xmlns="http://www.w3.org/2001/XMLSchema"
     elementFormDefault="qualified">

   <!--
   Import common element types.
   -->
     <import namespace="urn:ietf:params:xml:ns:eppcom-1.0"
             schemaLocation="eppcom-1.0.xsd"/>

     <import namespace="http://www.w3.org/2000/09/xmldsig#"
             schemaLocation="xmldig-core-schema.xsd"/>


     <annotation>
       <documentation>
         Extensible Provisioning Protocol v1.0
         domain name extension schema
         for the launch phase processing.
       </documentation>
     </annotation>

     <!--
     Child elements found in EPP commands.
     -->
     <element name="check" type="launch:checkType"/>
     <element name="info" type="launch:infoType"/>
     <element name="create" type="launch:createType"/>
     <element name="update" type="launch:idContainerType"/>
     <element name="delete" type="launch:idContainerType"/>

     <!--
     Common container of id (identifier) element
     -->
     <complexType name="idContainerType">
       <sequence>
         <element name="phase" type="launch:phaseType"/>
         <element name="applicationID" type="token"/>
       </sequence>
     </complexType>

     <!--
     Definition for application identifier
     -->
     <simpleType name="applicationIDType">
       <restriction base="token"/>
     </simpleType>




Tan, et al.              Expires March 16, 2013                [Page 42]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


     <!--
     Definition for launch phase.  Name is an optional attribute
     used to extend the phase type.  For example, when
     using the phase type value of &qt;custom&gt;, the name
     can be used to specify the custom phase.
     -->
     <complexType name="phaseType">
       <simpleContent>
         <extension base="launch:phaseTypeValue">
           <attribute name="name" type="token"/>
         </extension>
       </simpleContent>
     </complexType>

     <!--
     Enumeration of for launch phase values.
     -->
     <simpleType name="phaseTypeValue">
         <restriction base="token">
           <enumeration value="sunrise"/>
           <enumeration value="landrush"/>
           <enumeration value="claims"/>
           <enumeration value="open"/>
           <enumeration value="custom"/>
       </restriction>
     </simpleType>


     <!--
     Definition for the sunrise code
     -->
     <simpleType name="codeType">
       <restriction base="base64Binary">
         <minLength value="1"/>
       </restriction>
     </simpleType>

     <!--
     Definition for the notice identifier
     -->
     <simpleType name="noticeIDType">
       <restriction base="base64Binary">
         <minLength value="1"/>
       </restriction>
     </simpleType>

     <simpleType name="ccType">
       <restriction base="token">



Tan, et al.              Expires March 16, 2013                [Page 43]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


         <length value="2"/>
       </restriction>
     </simpleType>

     <simpleType name="pcType">
       <restriction base="token">
         <maxLength value="16"/>
       </restriction>
     </simpleType>


     <!--
     Definition of the IP address taken from host-1.0.
     -->
      <complexType name="ipAddrType">
        <simpleContent>
          <extension base="launch:addrStringType">
            <attribute name="ip" type="launch:ipType"
             default="v4"/>
          </extension>
        </simpleContent>
      </complexType>

      <simpleType name="addrStringType">
        <restriction base="token">
          <minLength value="3"/>
          <maxLength value="45"/>
        </restriction>
      </simpleType>

      <simpleType name="ipType">
        <restriction base="token">
          <enumeration value="v4"/>
          <enumeration value="v6"/>
        </restriction>
      </simpleType>

     <!-- Possible status values for sunrise application -->
       <simpleType name="statusValueType">
       <restriction base="token">
           <enumeration value="pending"/>
           <enumeration value="validated"/>
           <enumeration value="invalid"/>
           <enumeration value="pendingAuction"/>
           <enumeration value="allocated"/>
           <enumeration value="rejected"/>
           <enumeration value="custom"/>
         </restriction>



Tan, et al.              Expires March 16, 2013                [Page 44]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


       </simpleType>

     <complexType name="statusType">
       <simpleContent>
         <extension base="normalizedString">
           <attribute name="s" type="launch:statusValueType"
             use="required"/>
           <attribute name="lang" type="language"
             default="en"/>
           <attribute name="name" type="token"/>
         </extension>
       </simpleContent>
     </complexType>

       <complexType name="signedMarkType">
       <sequence>
         <element name="serial" type="token"/>
         <element name="zone" type="eppcom:labelType"
         minOccurs="0" maxOccurs="unbounded"/>
         <element name="exDate" type="dateTime"
         minOccurs="0"/>
         <element name="mark" type="launch:markType"/>
         <element ref="ds:Signature"/>
       </sequence>
     </complexType>

     <complexType name="codeMarkType">
       <sequence>
         <element name="code" type="launch:codeType"
           minOccurs="0"/>
         <element name="mark" type="launch:markType"
           minOccurs="0"/>
       </sequence>
     </complexType>

     <!--
     Child elements of create for both Sunrise and Claims periods
     -->
     <complexType name="createType">
       <sequence>
         <element name="phase" type="launch:phaseType"/>
         <choice>
           <element name="codeMark"
             type="launch:codeMarkType"
            maxOccurs="unbounded"/>
           <element name="signedMark"
             type="launch:signedMarkType"
            maxOccurs="unbounded"/>



Tan, et al.              Expires March 16, 2013                [Page 45]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


           <element name="notice"
             type="launch:createNoticeType"/>
         </choice>
       </sequence>
     </complexType>

     <!--
     Child elements of the create notice element.
     -->
     <complexType name="createNoticeType">
       <sequence>
         <element name="timestamp" type="dateTime"/>
         <element name="clientAddr" type="launch:ipAddrType"/>
         <choice>
           <element name="noticeID" type="launch:noticeIDType"/>
            <element name="signedNotice"
             type="launch:signedNoticeType"/>
         </choice>
       </sequence>
     </complexType>

     <complexType name="signedNoticeType">
       <sequence>
         <element name="noticeID" type="launch:noticeIDType"/>
         <element name="name" type="eppcom:labelType"/>
         <element name="crDate" type="dateTime"/>
         <element name="exDate" type="dateTime"
         minOccurs="0"/>
         <element ref="ds:Signature"/>
       </sequence>
     </complexType>


     <!--
     Child elements of check (Claims Info Command).
     -->
     <complexType name="checkType">
       <sequence>
         <element name="phase" type="launch:phaseType"/>
       </sequence>
     </complexType>


     <!--
     Child elements of info for both Sunrise and Claims periods.
     -->
     <complexType name="infoType">
       <sequence>



Tan, et al.              Expires March 16, 2013                [Page 46]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


         <element name="phase" type="launch:phaseType"/>
         <element name="applicationID"
           type="launch:applicationIDType"
           minOccurs="0"/>
       </sequence>
     </complexType>

     <!--
     Child response elements.
     -->
     <element name="chkData" type="launch:chkDataType"/>
     <element name="creData" type="launch:idContainerType"/>
     <element name="infData" type="launch:infDataType"/>

   <!--
   <check> response elements.
   -->
     <complexType name="chkDataType">
       <sequence>
         <element name="phase" type="launch:phaseType"/>
         <element name="cd" type="launch:cdType"
          maxOccurs="unbounded"/>
       </sequence>
     </complexType>

     <complexType name="cdType">
       <sequence>
         <element name="name" type="launch:cdNameType"/>
         <element name="claimKey" type="token"
          minOccurs="0"/>
       </sequence>
     </complexType>

     <complexType name="cdNameType">
       <simpleContent>
         <extension base="eppcom:labelType">
           <attribute name="exists" type="boolean"
            use="required"/>
         </extension>
       </simpleContent>
     </complexType>


     <complexType name="infDataType">
       <sequence>
         <element name="phase" type="launch:phaseType"/>
         <choice>
           <sequence>



Tan, et al.              Expires March 16, 2013                [Page 47]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


             <element name="applicationID"
               type="launch:applicationIDType"/>
             <element name="status" type="launch:statusType"
               minOccurs="0"/>
             <choice>
                 <element name="codeMark"
                   type="launch:codeMarkType"
                   maxOccurs="unbounded"/>
                <element name="signedMark"
                   type="launch:signedMarkType"
                   maxOccurs="unbounded"/>
             </choice>
           </sequence>
           <element name="notice" type="launch:claimsNoticeType"
             minOccurs="0"/>
         </choice>
       </sequence>
     </complexType>

     <!--
     Child elements of the info (inf) notice response element.
     -->
     <complexType name="claimsNoticeType">
       <sequence>
         <element name="name" type="eppcom:labelType"/>
         <choice>
           <element name="none"/>
           <sequence>
             <element name="noticeID"
               type="launch:noticeIDType"/>
             <element name="mark"
               type="launch:markType"
               maxOccurs="unbounded"/>
           </sequence>
         </choice>
       </sequence>
     </complexType>

     <complexType name="e164Type">
       <simpleContent>
         <extension base="launch:e164StringType">
           <attribute name="x" type="token"/>
         </extension>
       </simpleContent>
     </complexType>

     <simpleType name="e164StringType">
       <restriction base="token">



Tan, et al.              Expires March 16, 2013                [Page 48]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


         <pattern value="(\+[0-9]{1,3}\.[0-9]{1,14})?"/>
         <maxLength value="17"/>
       </restriction>
     </simpleType>

     <complexType name="addrType">
       <sequence>
         <element name="street" type="token"
          minOccurs="0" maxOccurs="3"/>
         <element name="city" type="token"/>
         <element name="sp" type="token"
          minOccurs="0"/>
         <element name="pc" type="launch:pcType"
          minOccurs="0"/>
         <element name="cc" type="launch:ccType"/>
       </sequence>
     </complexType>

     <complexType name="contactType">
       <sequence>
         <element name="name" type="token"
           minOccurs="0"/>
         <element name="org" type="token"
           minOccurs="0"/>
         <element name="addr" type="launch:addrType"
           minOccurs="0"/>
         <element name="voice" type="launch:e164Type"
           minOccurs="0"/>
         <element name="fax" type="launch:e164Type"
           minOccurs="0"/>
         <element name="email" type="eppcom:minTokenType"
           minOccurs="0"/>
       </sequence>
     </complexType>


     <!--
     Child elements of mark element.
     -->
     <complexType name="markType">
         <sequence>
           <element name="id" type="token"
             minOccurs="0"/>
           <element name="name" type="token"
              minOccurs="0"/>
           <element name="label" type="eppcom:labelType"
              minOccurs="0" maxOccurs="unbounded"/>
           <element name="issuer" type="token"



Tan, et al.              Expires March 16, 2013                [Page 49]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


             minOccurs="0"/>
           <element name="number" type="token"
             minOccurs="0"/>
           <element name="type" type="token"
             minOccurs="0"/>
           <element name="entitlement" type="token"
             minOccurs="0"/>
           <element name="regDate" type="date"
             minOccurs="0"/>
           <element name="exDate" type="date"
             minOccurs="0"/>
           <element name="country" type="launch:ccType"
             minOccurs="0"/>
           <element name="region" type="token"
             minOccurs="0"/>
           <element name="owner" type="launch:contactType"
             minOccurs="0"/>
           <element name="contact" type="launch:contactType"
             minOccurs="0"/>
       </sequence>
     </complexType>

   </schema>
   END


5.  Acknowledgements

   [to be filled in]


6.  IANA Considerations

   This document uses URNs to describe XML namespaces and XML schemas
   conforming to a registry mechanism described in [RFC3688].

   Registration request for the extension namespace:

   URI: urn:ietf:params:xml:ns:launch-1.0

   Registrant Contact: IESG

   XML: None.  Namespace URIs do not represent an XML specification.

   Registration request for the extension XML schema:

   URI: urn:ietf:params:xml:schema:launch-1.0




Tan, et al.              Expires March 16, 2013                [Page 50]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


7.  Security Considerations

   The mapping extensions described in this document do not provide any
   security services beyond those described by EPP [RFC5730], the EPP
   domain name mapping [RFC5731], and protocol layers used by EPP.  The
   security considerations described in these other specifications apply
   to this specification as well.

   Updates to, and deletion of an application object must be restricted
   to clients authorized to perform the said operation on the object.

   As information contained within an application, or even the mere fact
   that an application exists may be confidential.  Any attempt to
   operate on an application object by an unauthorized client MUST be
   rejected with an EPP 2303 (object does not exist) or an appropriate
   auhorization error.  Server policy may allow <info> operation with
   filtered output by clients other than the sponsoring client, in which
   case the <domain:infData> and <launch:infData> response SHOULD be
   filtered to include only fields that are publicly accessible.


8.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              January 2004.

   [RFC5730]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)",
              STD 69, RFC 5730, August 2009.

   [RFC5731]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)
              Domain Name Mapping", STD 69, RFC 5731, August 2009.

   [RFC5733]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)
              Contact Mapping", STD 69, RFC 5733, August 2009.

   [WIPO.ST3]
              WIPO, "Recommended standard on two-letter codes for the
              representation of states, other entities and
              intergovernmental organizations", March 2007.

   [1]  <http://mm.icann.org/pipermail/tmch-tech/attachments/20120629/
        92b95395/TMCH-Model-28jun2012-clean-0001.pdf>

   [2]  <http://www.w3.org/TR/xmldsig-core/>




Tan, et al.              Expires March 16, 2013                [Page 51]

Internet-Draft        Launch Phase Mapping for EPP        September 2012


Authors' Addresses

   Wil Tan
   Cloud Registry
   Suite 32 Seabridge House
   377 Kent St
   Sydney, NSW  2000
   AU

   Phone: +61 414 710899
   Email: wil@cloudregistry.net
   URI:   http://www.cloudregistry.net


   Gavin Brown
   CentralNic Ltd
   35-39 Mooregate
   London, England  EC2R 6AR
   GB

   Phone: +44 8700 170 900
   Email: gavin.brown@centralnic.com
   URI:   http://www.centralnic.com


   James Gould
   VeriSign, Inc.
   12061 Bluemont Way
   Reston, VA  20190
   US

   Email: jgould@verisign.com
   URI:   http://www.verisigninc.com


















Tan, et al.              Expires March 16, 2013                [Page 52]

