<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC '' 
'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
<!ENTITY bibxml2rfc-informative SYSTEM "draft-sullivan-zone-policy-assertions-01.xml-informative">
<!ENTITY bibxml2rfc-normative SYSTEM "draft-sullivan-zone-policy-assertions-01.xml-normative">
]>


<rfc category="info" ipr="trust200902" docName="draft-sullivan-zone-policy-assertions-01">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
  <?rfc toc="yes" ?>
  <?rfc symrefs="yes" ?>
  <?rfc sortrefs="yes"?>
  <?rfc iprnotified="no" ?>
  <?rfc strict="yes" ?>
  <?rfc compact="yes" ?>
  <?rfc comments="yes"?>
  <?rfc inline="yes"?>
  <front>
    <title abbrev="Asserting Zone Policy">Asserting Administrative Policies and Boundaries in DNS Zones</title>
    <author initials="A." surname="Sullivan" fullname="Andrew Sullivan">
      <organization>Dyn, Inc.</organization>
      <address>
        <postal>
          <street>150 Dow St</street>
          <city>Manchester</city>
          <region>NH</region>
          <code>03101</code>
          <country>U.S.A.</country>
        </postal>
        <email>asullivan@dyn.com</email>
      </address>
    </author>
    <date year="2012"/>
    <abstract>
      <t>
      Some security policies on the Internet depend on the idea
      of the "domain policy" or "zone policy".  It is difficult to
      discover such policies, and it is harder to do so in a way that
      does not subject operators of domains to others' assertions.
      This memo describes the problem, and proposes a mechanism for
      solving it.
      </t>
    </abstract>
  </front>
  <middle>
    <section title="Introduction">
      <t><cref source="ajs@anvilwalrusden.com">This document contains
      ideas that may have been the result of a visit from the bad idea
      fairy.  It's still pretty sketchy.  You have been warned.  The
      document title is "zone" policy, and yet I've already convinced
      myself that it could be at any name, which sort of shows this
      isn't ready yet.</cref> Many network resources are accessed
      primarily by name.  DNS names make up a fundamental part of the
      name by which people or other systems access those network
      resources.  As a result, DNS names have become fundamental
      elements in building security policies and user agent
      behaviour.</t>
      <t>Unfortunately, most of the attempts to build useful security
      policies around DNS names are based on rules of thumb that
      mostly work but that fail in ways surprising to users, to
      security system designers, or both.  The failures are both too
      broad and too narrow: sometimes, failures prevent (or just make
      inconvenient) a desired use, while other times failures do not
      catch actual problems and permit things like cross-site
      scripting attacks.  In general, the failures stem from a
      misunderstanding of what a domain name means, what a policy of
      "same origin" would look like, and what information the DNS can
      actually provide.</t>
      <section title="Example cases" anchor="examples">
        <t><list style="symbols">
        <t>The HTTP Cookies specification (formally known as "HTTP
        State Management Mechanism", <xref target="RFC6265" />)
        depends on matching domain names and subdomains.</t>
        <t>Some web browsers have adopted a list of "public" domain
        names that are known to be delegation-centric (the
        publicsuffix.org list).</t>
        <t>Some web browsers use lists of officially-approved domain
        names near the DNS root to identify those where U-labels are
        to be displayed.  If a name is not in the list,
        Internationalized Domain Names (IDNs) are displayed.  (This is
        not based on the publicsuffix.org list, but the principle is
        the same.)</t>
        <t>Many clients -- especially but not only web browsers -- use
        a "same origin" policy for following links to apparently
        related content.</t>
        </list></t>
      </section>
    </section>
    <section title="What is the Problem?" anchor="problem">
      <t>The use of domain names as a mechanism for identifying
      administrative boundaries is problematic for several
      reasons.</t>
      <t><list style="numbers">
        <t>The Start of Authority (SOA) Resource Record marks the
        boundary of a zone, but not the boundary of administrative
        control.  For instance, the operator of example.com might
        delegate remoteoffice.example.com, inserting an SOA record at
        the apex of remoteoffice.example.com.  For legal and
        organizational purposes, everything under example.com is one
        administrative domain.  The remoteoffice.example.com
        delegation is only for administrative convenience.  By the
        same token, a large zone might contain multiple domains that
        share a common SOA record, but that are actually completely
        separated for administrative purposes (this pattern of use is
        common in large corporations and academic institutions).</t>
        <t>Even if the SOA record were a reliable indicator of
        organizational boundaries, in the absence of DNSSEC is it not
        convenient to find.</t>
        <t>The publicsuffix.org list has no mechanism (apart from
        manual updates) to ensure it remains in sync with the actual
        delegation pattern on the Internet.  It will not scale.</t>
        <t>The publicsuffix.org list appears not to understand empty
        non-terminals.</t>
        <t>IDN display policies that depend on the policies of domains
        near the root implicitly assume that IDN policies are
        transitive from parent to child.</t>
        <t>Previous experiences with static lists of domain names
        maintained outside the DNS suggests that these mechanisms are
        fragile and hard to fix, particularly in the face of changes
        in the root zone.</t>
      </list></t>
      <t>Scalability is a particular concern.  As of this writing,
      ICANN has plans to delegate up to 1,000 new TLDs per year as
      long as there is demand.  There is every reason to suppose that
      many of these will be IDNs, and that they will be aimed at
      communities that neither speak English nor even use Latin
      script, which means that volunteer-operated systems like
      publicsuffix.org will need a more diverse pool of
      volunteers.</t>
    </section>

    <section title="An analogy with anti-abuse systems"
             anchor="analogy">
      <t>The e-mail world has already struggled with the problem of
      mail senders communicating their policies, and has come up with
      mechanisms that publish records in the DNS in order to
      communicate those policies.  It seems that a similar approach
      might be useful for DNS systems themselves.</t>
      <t>In the e-mail technologies, the operator of a mail site
      publishes special records that are immediately below the name in
      question.  For DNS zone operators' policies, this approach will
      not work, because at least sometimes zone cuts will stand in the
      way of the places where one might like to put such information.
      (In particular, where there are zone cuts and assertions about
      what happens on the other side of the cut, it is necessary to
      discover the policy on the other side is also.)  Moreover, it is
      not clear that the sort of information that would be most
      helpful would fit nicely in a single DNS RR.</t>
      <t>Nevertheless, the basic mechanism of performing some DNS
      queries in order to find the relevant administrative policies
      provides a way of anchoring the policy in the very technology
      for which the policy is desired.  That seems better than keeping
      such policies in a repository unlinked to the systems to which
      the policy applies.</t>
    </section>

    <section title="The Mechanism" anchor="mech">
      <t>The proposed mechanism includes two elements:</t>
      <t><list style="numbers">
        <t>a DNS RR to identify the policy document and a policy
        server;</t>
        <t>a policy document that includes all the relevant policies
        for the zone in question, where that zone is determined by its
        SOA RR.</t>
      </list>
      </t>
    </section>
    <section title="Resource Records" anchor="rr">
      <t>The operator of a zone that wishes to publish a policy
      document places a URI RR at the name _http._zpolicy
      at the location in the tree where the policy assertion is
      relevant.  In most cases, this will be immediately below the
      zone apex. <cref source="ajs@anvilwalrusden.com">This could be
      an SRV record instead, if we're worried about the novelty of URI</cref></t>
    </section>
    <section title="Policy Document" anchor="document">
      <t>The operator of the zone provides, at the URIs in the
      _http._zpolicy RR, an XML document that provides the policy
      statements.  The document has a time to live that permits
      applications to cache it and continue using it over time.</t>
      <t>The policy document may include statements about the
      administrative boundaries in the domain, the repertoire of
      Unicode characters that the zone permits in U-labels, and the
      names of domains that may be considered alternatives for the
      purposes of operation of a given protocol.</t>
      <section title="Administrative boundaries"
               anchor="adminboundary">
        <t>It is possible to use the mechanism to assert things
        about other zones.  For example, the policy document for
        example.com might make assertions about all names below
        example.com.  But the operator of independent.example.com
        might not want to follow the same policy.</t>
        <t>In order to determine whether there is agreement about
        policies across zone cuts, a policy checking client examines
        the _http._zpolicy record on the parent side of a zone cut,
        in order to ensure that there is agreement about the
        administrative boundaries.  Similarly, when a policy
        document asserts coverage of another domain (not necessarily
        subordinate, the policy checking agent always looks up the
        _http._zpolicy record in the other domain as well.  In a
        subordinate domain, if the record does not exist, then the
        superordinate policy is in force.  In a domain in another
        part of the DNS name space, if the value of the URI is the
        same, then the policy is the same.</t>
      </section>
      <section title="Unicode Repertoire" anchor="repertoire">
        <t>A policy may include a list of Unicode code points that are
        permitted characters in a U-label in that domain.  Such a list
        may also include mechanisms for determining alternative names
        that either must or may be used whenever the first Unicode
        code point exists (this is a label generation policy in
        support of IDN code point variants).  These mechanisms may be
        carried across zone cuts, but only with explicit inclusion in
        the subordinate zone's policy.  In the absence of a policy, it
        may be assumed that the domain has no rules about Unicode code
        point inclusion.  The existence of U-labels with code points
        outside the list should be taken as evidence of a failed
        policy.</t>
      </section>
      <section title="Alternative Names" anchor="alternatives">
        <t>Sometimes the same service is offered at more than one
        DNS name.  For instance, the mail server at example.com and
        example.net might be the same, such that every
        localpart@example.com leads to the same mailbox as
        localpart@example.net.  Clients might find it convenient to
        be able to discover these relationships, and it is not
        possible to do so in the DNS.  A policy might include this
        data so that clients can discover it and so that servers may
        automatically configure themselves.</t>
        <t>In order for this to be safe, the tests in <xref
        target="adminboundary" /> need to be administered in order to
        ensure that one domain cannot make assertions about another
        domain.  In the absence of any policy </t>
        <t><cref source="ajs@anvilwalrusden.com">Question: should this
        require that the policy cover the zone -- i.e. that it be at
        the apex?  I used to think so, but I'm less convinced now.</cref>
        </t>
      </section>
    </section>
  


    <section title="Security Considerations">
      <t>Discuss the need to check across cuts to ensure that both
      sides agree.</t>
    </section>

    <section title="IANA Considerations">
      <t>The _zpolicy stuff needs to get registered.</t>
    </section>

  </middle>
  <back>
    
    <references title="Informative References">

      &bibxml2rfc-informative;

    </references>
  </back>
</rfc>