<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6830 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6830.xml">
<!ENTITY RFC6833 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6833.xml">
<!ENTITY I-D.draft-filsfils-rtgwg-segment-routing SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-filsfils-rtgwg-segment-routing-00.xml">
<!ENTITY I-D.draft-previdi-isis-segment-routing-extensions SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-previdi-isis-segment-routing-extensions-00.xml">
<!ENTITY I-D.draft-psenak-ospf-segment-routing-extensions SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-psenak-ospf-segment-routing-extensions-00.xml">
<!ENTITY I-D.draft-filsfils-rtgwg-segment-routing-use-cases SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-filsfils-rtgwg-segment-routing-use-cases-00.xml">
<!ENTITY I-D.draft-ietf-lisp-lcaf SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-lisp-lcaf-02.xml">
<!ENTITY I-D.draft-sivabalan-pce-segment-routing SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-sivabalan-pce-segment-routing-00.xml">
<!ENTITY I-D.draft-farinacci-lisp-te SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-farinacci-lisp-te-03.xml">
<!ENTITY AFI SYSTEM "http://www.iana.org/assignments/address-family-numbers/address-family-numbers.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-brockners-lisp-sr-00" ipr="trust200902">
  <!-- ipr="full3978"-->

  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="LISP and SR integration">LISP Extensions for Segment
    Routing</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Frank Brockners" initials="F." surname="Brockners">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>Hansaallee 249, 3rd Floor</street>

          <!-- Reorder these if your country does things differently -->

          <city>DUESSELDORF</city>

          <region>NORDRHEIN-WESTFALEN</region>

          <code>40549</code>

          <country>Germany</country>
        </postal>

        <email>fbrockne@cisco.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Shwetha Bhandari" initials="S." surname="Bhandari">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>Cessna Business Park, Sarjapura Marathalli Outer Ring
          Road</street>

          <city>Bangalore, KARNATAKA 560 087</city>

          <country>India</country>
        </postal>

        <email>shwethab@cisco.com</email>
      </address>
    </author>

    <author fullname="Fabio Maino" initials="F." surname="Maino">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street/>

          <city>San Jose</city>

          <country>USA</country>
        </postal>

        <email>fmaino@cisco.com</email>
      </address>
    </author>

    <author fullname="Darrel Lewis" initials="D." surname="Lewis">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street/>

          <city>San Jose</city>

          <country>USA</country>
        </postal>

        <email>darlewis@cisco.com</email>
      </address>
    </author>

    <date day="13" month="July" year="2013"/>

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>LISP</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>Segment Routing (SR) combines source routing and tunneling to steer
      traffic through the transit network. The Locator/ID Separation Protocol
      (LISP) separates IP addresses into Endpoint Identifiers (EIDs) and
      Routing Locators (RLOCs) and also leverages tunneling mechanisms.
      Mapping between EIDs and RLOCs is facilitated by the LISP mapping
      system. Combining LISP and SR enables the LISP mapping system to provide
      SR information to encapsulating routers so that traffic can be steered
      in the transit network or the list of segments a particular packet
      traverses is recorded in the packet header.</t>

      <t>This document describes extensions required to the Locator/ID
      Separation Protocol (LISP) to enable a LISP mapping system to
      communicate list of segment identifiers or the request to record the
      list of segments a particular packet traverses to the encapsulating
      router. </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction" toc="default">
      <t>Segment Routing (SR) allows for a flexible definition of end-to-end
      paths within network topologies by encoding paths as sequences of
      topological sub-paths, called "segments" as described in <xref
      target="I-D.filsfils-rtgwg-segment-routing"/>. Segment routing can be
      applied to IPv6 with a new type of routing extension header. The
      Locator/ID Separation Protocol <xref target="RFC6830"/> specifies an
      architecture and mechanism for replacing the addresses currently used by
      IP with two separate name spaces: Endpoint IDs (EIDs), used within
      sites; and Routing Locators (RLOCs), used on the transit networks that
      make up the Internet infrastructure. To achieve this separation, LISP
      defines protocol mechanisms for mapping from EIDs to RLOCs. In addition,
      LISP assumes the existence of a database to store and propagate those
      mappings globally.</t>

      <t>When LISP is combined with SR, the EID to RLOC mapping information
      can be extended with segment routing information. This allows for a
      closer correlation between the transit network, that is sometimes also
      referred to as the underlay network, and the overlay network. It is
      beyond the scope of this document to describe how the LISP mapping
      system obtains a segment list for a particular EID-to-RLOC mapping. This
      draft outlines use-cases for combining LISP and SR as well as extensions
      to the LISP Canonical Address Format (LCAF) for traffic engineering
      (LCAF type 10) <xref target="I-D.ietf-lisp-lcaf"/>. These extensions are
      to be integrated into a future revision of <xref
      target="I-D.ietf-lisp-lcaf"/>.</t>
    </section>

    <section anchor="Conventions" title="Conventions">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"/>.</t>

      <t>This document uses the Terminology as defined in <xref
      target="I-D.filsfils-rtgwg-segment-routing"/> and <xref
      target="I-D.ietf-lisp-lcaf"/>.</t>

      <t>Abbreviations used in this document:</t>

      <t><list style="empty">
          <t>AFI: Address Family Identifier</t>

          <t>EID: Endpoint Identifier</t>

          <t>ELP: Explicit Locator Path</t>

          <t>ETR: Egress Tunnel Router</t>

          <t>ITR: Ingress Tunnel Router</t>

          <t>LCAF: LISP Canonical Address Format</t>

          <t>LISP: Locator/ID Separation Protocol</t>

          <t>OAM: Operation Administration Maintenance</t>

          <t>RLOC: Routing Locator</t>

          <t>SR: Segment Routing</t>

          <t>SID: Segment Identifier</t>

          <t>Segment List: Ordered list of segment identifiers</t>
        </list></t>
    </section>

    <section title="Use cases that combine LISP and SR">
      <t>Use-cases that combine LISP and SR include traffic steering/traffic
      engineering as well as traffic tracing in the underlay network.</t>

      <section title="Traffic steering/traffic engineering">
        <t>LISP combined with SR can be used to steer traffic in the underlay
        network: The mapping system communicates a segment list to the LISP
        ingress tunnel router (ITR) when resolving the EID-to-RLOC mapping as
        part of a LISP Map-Reply. This extension allows the LISP mapping
        system to provide a list of segment identifiers to encapsulating
        routers so that traffic can be steered in the transit network. In a
        typical setup the LISP ingress tunnel router would retrieve the
        segment list from the mapping system along with the associated RLOC
        using the EID as the lookup key. The ITR encapsulates the packet to
        the RLOC, also including the segment list in the segment routing
        extension header. The packet is forwarded to the ETR using segment
        routing techniques. The ETR decapsulates the packet and delivers the
        packet to the destination EID. Given that in SR with IPv6 transport
        the entire segment list is available in the SR-specific extension
        header of the outer IPv6 header, the LISP egress tunnel router, which
        is the tunnel endpoint is also informed about the path a particular
        packet took in the transport network.</t>

        <t>LISP with SR for traffic engineering adds to the LISP traffic
        engineering use-cases described in <xref
        target="I-D.farinacci-lisp-te"/>. LISP combined with SR offers traffic
        engineering without using reencapsulating tunnels <xref
        target="RFC6830"/>. Reencapsulating tunnels and SR with LISP are
        complementary traffic engineering techniques and could be combined. SR
        could for example be used in an explicit locator path (ELP) to further
        traffic engineer a path between two reencapsulating routers.</t>
      </section>

      <section title="Traffic tracing">
        <t>LISP combined with SR can be used to get more information about the
        path a packet took in the underlay network without sending extra probe
        traffic. When SR is applied to IPv6, the segment list describing the
        path that a packet takes through the network can be recorded in the
        SR-specific extension header of the outer IPv6 packet header. This
        activity is referred to as segment tracing. Segment tracing can be
        performed independently from steering traffic using SR techniques. It
        can also be used in a transit network which performs normal IPv6
        routing. When tracing is enabled, the segment ID of every segment that
        a packet traverses is recorded in the SR-specific extension header.
        This means that the egress tunnel router receives information about
        the path, represented by the segment list, a particular packet has
        taken in the underlay network. Different from OAM mechanisms which
        send active probe packets, tracing information can be made available
        for production traffic. The egress tunnel router can choose to provide
        the traced segment list back to the mapping system, for example
        through a LISP Map-Register. This information can be used to ensure
        path symmetry send/receive traffic in the transit network, or can
        serve other OAM or statistical purposes.</t>
      </section>
    </section>

    <section title="LISP extensions to support SR">
      <t>Segment routing information can be contained within the LISP mapping
      system. A segment identifier is a 32-bit identification either for a
      topological instruction or a service instruction. See <xref
      target="I-D.filsfils-rtgwg-segment-routing"/> for details.</t>

      <t>An EID can be associated with one or multiple ordered lists of
      segment identifiers, also referred to as "segment lists", encoding the
      topological and service source route of a packet. The segment list can
      serve either traffic engineering or operational purposes. In case of
      traffic engineering purposes, the segment list describes the set of
      segments a packet visits when traversing the transit network. The
      segment list enables the ITR to steer traffic using segment routing
      techniques. The ITR retrieves the segment list from the mapping system
      along with the associated RLOC using the EID as the lookup key. For
      operations and maintenance use, the segment list documents the set of
      segments a packet visited on its way through the transit network. It is
      beyond the scope of this document to describe the detailed procedures
      how the LISP mapping system obtains a segment list for a particular
      EID-to-RLOC mapping.</t>

      <t>Segment routing extensions for LISP extend the Explicit Locator Path
      (ELP) Canonical Address Format, which is LCAF type 10, see<xref
      target="I-D.ietf-lisp-lcaf"/> for details. A new Address Family
      Identifier (AFI) in LISP Canonical Address Format (LCAF) type <xref
      target="I-D.ietf-lisp-lcaf"/> carries the 32-bit segment identifier. For
      a given EID lookup in the mapping database, the segment routing list in
      ELP LCAF type can be returned to provide a segment list to each locator
      in the Map-Reply locator set. The ELP LCAF type can also be used to send
      the segment list that a particular packet traversed to the LISP mapping
      system using a Map-Register message defined in <xref
      target="RFC6833"/>.</t>

      <t>The segment identification AFI to be allocated is described
      below:</t>

      <t><figure>
          <artwork><![CDATA[     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |              AFI = TBD_SID    |           Reserved            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                              SID                              |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 

   
]]></artwork>
        </figure></t>

      <t>AFI=TBD_SID: TBD_SID is a value allocated from <xref target="AFI"/>
      for segment identifiers.</t>

      <t>Reserved: this 8-bit field reserved for future use and to carry
      specific control bits. If used with the ELP LCAF, this field carries
      several bits (see below).</t>

      <t>SID: 4 byte segment identifier</t>

      <t>The segment identification AFI is used within the ELP LCAF to
      describe the list of segments a packet is to visit or has visited on its
      way through the transit network. Further below examples are shown how
      the segment identification AFI is used for the ELP LCAF type. A new bit,
      the T-bit, is added to the LISP LCAF type 10 described in <xref
      target="I-D.ietf-lisp-lcaf"/>. This addition is to be integrated into a
      future revision of <xref target="I-D.ietf-lisp-lcaf"/>.</t>

      <t>For the segment routing AFI, the T-bit is defined as follows:</t>

      <t>T-Bit: An additional bit in the Rsvd3 field is to be allocated in
      LCAF type 10. The T-bit (T=1) is used by the LISP mapping system to
      indicate to an ITR that for particular EID-to-RLOC mapping the segments
      traversed by packets SHOULD be recorded as a segment list in the SR IPv6
      extension header. This bit is ignored if present in a Map-Register
      message. A Map-Register message could be used by the ETR to inform the
      mapping system about the segments that a packet visited in the transit
      network.</t>

      <section title="Example ELPs">
        <section title="Example: ELP with only SR used ">
          <t>This example shows the Explicit Locator Path (ELP) Canonical
          Address Format in a setup where segment routing is used in the
          transit network between ITR and ETR. Traffic engineering using
          reencapsulating routers is not used.</t>

          <t>The reply to an EID-to-RLOC lookup contains the SIDs to be
          visited in the underlay network to reach the RLOC address returned
          in AFI=x. In the example below SID_1,...,SID_p are to be used for
          segment routing towards the "Address" RLOC. SID_p is the identifier
          of the last segment which takes the packet to the "Address"
          RLOC.</t>

          <t><figure>
              <artwork><![CDATA[     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |           AFI = 16387         |     Rsvd1     |     Flags     |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |   Type = 10   |     Rsvd2     |               n               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |              AFI = TBD_SID    |           Rsvd3             |T|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         SID_1                                 |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |              AFI = TBD_SID    |           Rsvd3             |T|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         SID_p                                 |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |              AFI = x          |           Rsvd3               |  
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         Address  ...                          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>
            </figure></t>
        </section>

        <section title="Example: ELP with SR and reencapsulating routers combined">
          <t>This example shows the Explicit Locator Path (ELP) Canonical
          Address Format when using SR combined with reencapsulation
          routers.</t>

          <t>Segment routing and traffic engineering using reencapsulating
          routers can be combined. In the example below, segment routing is
          used to steer traffic in the underlay between reencapsulating
          routers "f" and "g". There is no segment routing used between any of
          the other reencapsulating router hops.</t>

          <t><figure>
              <artwork><![CDATA[     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |           AFI = 16387         |     Rsvd1     |     Flags     |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |   Type = 10   |     Rsvd2     |               n               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |              AFI = x          |           Rsvd3         |L|P|S|  
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         Reencap Hop 1  ...                    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |              AFI = x          |           Rsvd3         |L|P|S|  
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         Reencap Hop f  ...                    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |              AFI = TBD_SID    |           Rsvd3       |T|L|P|S|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         SID_1                                 |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |              AFI = TBD_SID    |           Rsvd3       |T|L|P|S|
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         SID_p                                 |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |              AFI = x          |           Rsvd3         |L|P|S|  
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         Reencap Hop g  ...                    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |              AFI = x          |           Rsvd3         |L|P|S|  
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                         Reencap Hop k  ...                    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>
            </figure></t>
        </section>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>A new AFI for segment identifiers is to be allocated by IANA (see
      <xref target="AFI"/> for a list of currently allocated AFIs).</t>
    </section>

    <section title="Manageability Considerations">
      <t>Manageability considerations will be addressed &iacute;n a later
      version of this document..</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Security considerations will be addressed &iacute;n a later version
      of this document.</t>
    </section>

    <section title="Acknowledgements">
      <t>The authors would like to thank Dino Farinacci for his input on this
      document.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

      &RFC2119;

      &I-D.draft-filsfils-rtgwg-segment-routing;

      &I-D.draft-ietf-lisp-lcaf;

      <reference anchor="AFI">
        <front>
          <title>IANA, Address Family Identifier (AFIs),
          http://www.iana.org/assignments/address-family-numbers/address-family-numbers.xhtml</title>

          <author/>

          <date month="July" year="2013"/>
        </front>
      </reference>
    </references>

    <references title="Informative References">
      &RFC6830;

      &RFC6833;

      &I-D.draft-filsfils-rtgwg-segment-routing-use-cases;

      &I-D.draft-sivabalan-pce-segment-routing;

      &I-D.draft-farinacci-lisp-te;
    </references>
  </back>
</rfc>
