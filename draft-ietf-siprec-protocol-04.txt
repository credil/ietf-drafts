


SIPREC                                                        L. Portman
Internet-Draft                                              NICE Systems
Intended status: Standards Track                             H. Lum, Ed.
Expires: November 9, 2012                                        Genesys
                                                                C. Eckel
                                                                   Cisco
                                                             A. Johnston
                                                                   Avaya
                                                               A. Hutton
                                                      Siemens Enterprise
                                                          Communications
                                                            May 08, 2012


                       Session Recording Protocol
                     draft-ietf-siprec-protocol-04

Abstract

   This document specifies the use of the Session Initiation Protocol
   (SIP), the Session Description Protocol (SDP), and the Real Time
   Protocol (RTP) for delivering real-time media and metadata from a
   Communication Session (CS) to a recording device.  The Session
   Recording Protocol specifies the use of SIP, SDP, and RTP to
   establish a Recording Session (RS) between the Session Recording
   Client (SRC), which is on the path of the CS, and a Session Recording
   Server (SRS) at the recording device.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 9, 2012.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the



Portman, et al.         Expires November 9, 2012                [Page 1]

Internet-Draft         Session Recording Protocol               May 2012


   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  4
   2.  Definitions  . . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  Scope  . . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
   4.  Overview of operations . . . . . . . . . . . . . . . . . . . .  5
     4.1.  Delivering recorded media  . . . . . . . . . . . . . . . .  5
     4.2.  Delivering recording metadata  . . . . . . . . . . . . . .  7
   5.  Initiating a Recording Session . . . . . . . . . . . . . . . .  8
     5.1.  Procedures at the SRC  . . . . . . . . . . . . . . . . . .  8
     5.2.  Procedures at the SRS  . . . . . . . . . . . . . . . . . .  9
   6.  SDP Handling . . . . . . . . . . . . . . . . . . . . . . . . .  9
     6.1.  Procedures at the SRC  . . . . . . . . . . . . . . . . . .  9
       6.1.1.  Handling media stream updates  . . . . . . . . . . . . 11
     6.2.  Procedures at the SRS  . . . . . . . . . . . . . . . . . . 11
   7.  RTP Handling . . . . . . . . . . . . . . . . . . . . . . . . . 12
     7.1.  Roles  . . . . . . . . . . . . . . . . . . . . . . . . . . 12
       7.1.1.  SRC acting as an RTP Translator  . . . . . . . . . . . 13
         7.1.1.1.  Forwarding Translator  . . . . . . . . . . . . . . 13
         7.1.1.2.  Transcoding Translator . . . . . . . . . . . . . . 14
       7.1.2.  SRC acting as an RTP Mixer . . . . . . . . . . . . . . 15
       7.1.3.  SRC acting as an RTP Endpoint  . . . . . . . . . . . . 15
     7.2.  RTCP . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
     7.3.  RTP Profile  . . . . . . . . . . . . . . . . . . . . . . . 16
     7.4.  SSRC . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
     7.5.  CSRC . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
     7.6.  SDES . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
       7.6.1.  CNAME  . . . . . . . . . . . . . . . . . . . . . . . . 17
     7.7.  Keepalive  . . . . . . . . . . . . . . . . . . . . . . . . 18
     7.8.  RTCP Feedback Messages . . . . . . . . . . . . . . . . . . 18
       7.8.1.  Full Intra Request . . . . . . . . . . . . . . . . . . 18
         7.8.1.1.  SIP INFO for FIR . . . . . . . . . . . . . . . . . 18
       7.8.2.  Picture Loss Indicator . . . . . . . . . . . . . . . . 18
       7.8.3.  Temporary Maximum Media Stream Bit Rate Request  . . . 19
         7.8.3.1.  Renegotiation of SDP bandwidth attribute . . . . . 19



Portman, et al.         Expires November 9, 2012                [Page 2]

Internet-Draft         Session Recording Protocol               May 2012


     7.9.  Symmetric RTP/RTCP for Sending and Receiving . . . . . . . 19
   8.  Metadata . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
     8.1.  Procedures at the SRC  . . . . . . . . . . . . . . . . . . 20
     8.2.  Procedures at the SRS  . . . . . . . . . . . . . . . . . . 21
       8.2.1.  Formal Syntax  . . . . . . . . . . . . . . . . . . . . 23
   9.  Persistent Recording . . . . . . . . . . . . . . . . . . . . . 23
   10. Extensions for Recording-aware User Agents . . . . . . . . . . 23
     10.1. Procedures at the record-aware user agent  . . . . . . . . 24
       10.1.1. Recording preference . . . . . . . . . . . . . . . . . 24
     10.2. Procedures at the SRC  . . . . . . . . . . . . . . . . . . 25
       10.2.1. Recording indication . . . . . . . . . . . . . . . . . 25
       10.2.2. Recording preference . . . . . . . . . . . . . . . . . 27
   11. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 27
     11.1. Registration of Option Tags  . . . . . . . . . . . . . . . 27
       11.1.1. siprec Option Tag  . . . . . . . . . . . . . . . . . . 27
       11.1.2. record-aware Option Tag  . . . . . . . . . . . . . . . 27
     11.2. Registration of media feature tags . . . . . . . . . . . . 27
       11.2.1. src feature tag  . . . . . . . . . . . . . . . . . . . 28
       11.2.2. srs feature tag  . . . . . . . . . . . . . . . . . . . 28
     11.3. New Content-Disposition Parameter Registrations  . . . . . 29
     11.4. Media Type Registration  . . . . . . . . . . . . . . . . . 29
       11.4.1. Registration of MIME Type application/rs-metadata  . . 29
       11.4.2. Registration of MIME Type
               application/rs-metadata-request  . . . . . . . . . . . 29
     11.5. SDP Attributes . . . . . . . . . . . . . . . . . . . . . . 29
       11.5.1. 'record' SDP Attribute . . . . . . . . . . . . . . . . 29
       11.5.2. 'recordpref' SDP Attribute . . . . . . . . . . . . . . 30
   12. Security Considerations  . . . . . . . . . . . . . . . . . . . 30
     12.1. RTP handling . . . . . . . . . . . . . . . . . . . . . . . 30
     12.2. Authentication and Authorization . . . . . . . . . . . . . 31
   13. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 31
   14. References . . . . . . . . . . . . . . . . . . . . . . . . . . 31
     14.1. Normative References . . . . . . . . . . . . . . . . . . . 31
     14.2. Informative References . . . . . . . . . . . . . . . . . . 32
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 33
















Portman, et al.         Expires November 9, 2012                [Page 3]

Internet-Draft         Session Recording Protocol               May 2012


1.  Introduction

   This document specifies the mechanism to record a Communication
   Session (CS) by delivering real-time media and metadata from the CS
   to a recording device.  In accordance to the architecture
   [I-D.ietf-siprec-architecture], the Session Recording Protocol
   specifies the use of SIP, SDP, and RTP to establish a Recording
   Session (RS) between the Session Recording Client (SRC), which is on
   the path of the CS, and a Session Recording Server (SRS) at the
   recording device.

   SIP is also used to deliver metadata to the recording device, as
   specified in [I-D.ietf-siprec-metadata].  Metadata is information
   that describes recorded media and the CS to which they relate.

   The Session Recording Protocol intends to satisfy the SIP-based Media
   Recording requirements listed in [RFC6341].


2.  Definitions

   This document refers to the core definitions provided in the
   architecture document [I-D.ietf-siprec-architecture].

   The RTP Handling section uses the definitions provided in "RTP: A
   Transport Protocol for Real-Time Application" [RFC3550].


3.  Scope

   The scope of the Session Recording Protocol includes the
   establishment of the recording sessions and the reporting of the
   metadata.  The scope also includes extensions supported by User
   Agents participating in the CS such as indication of recording.  The
   user agents need not be recording-aware in order to participate in a
   CS being recorded.

   The following items, which are not an exhaustive list, do not
   represent the protocol itself and are considered out of the scope of
   the Session Recording Protocol:

   o  Delivering recorded media in real-time as the CS media

   o  Specifications of criteria to select a specific CS to be recorded
      or triggers to record a certain CS in the future

   o  Recording policies that determine whether the CS should be
      recorded and whether parts of the CS are to be recorded



Portman, et al.         Expires November 9, 2012                [Page 4]

Internet-Draft         Session Recording Protocol               May 2012


   o  Retention policies that determine how long a recording is stored

   o  Searching and accessing the recorded media and metadata

   o  Policies governing how CS users are made aware of recording

   o  Delivering additional recording session metadata through non-SIP
      mechanism


4.  Overview of operations

   This section is informative and provides a description of recording
   operations.

   As mentioned in the architecture document
   [I-D.ietf-siprec-architecture], there are a number of types of call
   flows based on the location of the Session Recording Client.  The
   following sample call flows provide a quick overview of the
   operations between the SRC and the SRS.

4.1.  Delivering recorded media

   When a SIP Back-to-back User Agent (B2BUA) with SRC functionality
   routes a call from UA(A) to UA(B), the SRC has access to the media
   path between the user agents.  When the SRC is aware that it should
   be recording the conversation, the SRC can cause the B2BUA to bridge
   the media between UA(A) and UA(B).  The SRC then establishes the
   Recording Session with the SRS and sends replicated media towards the
   SRS.

   An endpoint may also have SRC functionality, where the endpoint
   itself establishes the Recording Session to the SRS.  Since the
   endpoint has access to the media in the Communication Session, the
   endpoint can send replicated media towards the SRS.

   The following is a sample call flow that shows the SRC establishing a
   recording session towards the SRS.  The call flow is essentially
   identical when the SRC is a B2BUA or as the endpoint itself.  Note
   that the SRC can choose when to establish the Recording Session
   independent of the Communication Session, even though the following
   call flow suggests that the SRC is establishing the Recording Session
   (message #5) after the Communication Session is established.








Portman, et al.         Expires November 9, 2012                [Page 5]

Internet-Draft         Session Recording Protocol               May 2012


   UA A           SRC                    UA B                    SRS
    |(1)CS INVITE  |                       |                      |
    |------------->|                       |                      |
    |              |(2)CS INVITE           |                      |
    |              |---------------------->|                      |
    |              |           (3) 200 OK  |                      |
    |              |<----------------------|                      |
    |   (4) 200 OK |                       |                      |
    |<-------------|                       |                      |
    |              |(5)RS INVITE with SDP  |                      |
    |              |--------------------------------------------->|
    |              |                       |  (6) 200 OK with SDP |
    |              |<---------------------------------------------|
    |(7)CS RTP     |                       |                      |
    |=============>|======================>|                      |
    |<=============|<======================|                      |
    |              |(8)RS RTP              |                      |
    |              |=============================================>|
    |              |=============================================>|
    |(9)CS BYE     |                       |                      |
    |------------->|                       |                      |
    |              |(10)CS BYE             |                      |
    |              |---------------------->|                      |
    |              |(11)RS BYE             |                      |
    |              |--------------------------------------------->|
    |              |                       |                      |

            Figure 1: Basic Recording Call flow


   The above call flow can also apply to the case of a centralized
   conference with a mixer.  For clarity, ACKs to INVITEs and 200 OKs to
   BYEs are not shown.  The conference focus can provide the SRC
   functionality since the conference focus has access to all the media
   from each conference participant.  When a recording is requested, the
   SRC delivers the metadata and the media streams to the SRS.  Since
   the conference focus has access to a mixer, the SRC may choose to mix
   the media streams from all participants as a single mixed media
   stream towards the SRS.

   An SRC can use a single recording session to record multiple
   communication sessions.  Every time the SRC wants to record a new
   call, the SRC updates the recording session with a new SDP offer to
   add new recorded streams to the recording session, and
   correspondingly also update the metadata for the new call.






Portman, et al.         Expires November 9, 2012                [Page 6]

Internet-Draft         Session Recording Protocol               May 2012


4.2.  Delivering recording metadata

   The SRC is responsible for the delivery of metadata to the SRS.  The
   SRC may provide an initial metadata snapshot about recorded media
   streams in the initial INVITE content in the recording session.
   Subsequent metadata updates can be represented as a stream of events
   in UPDATE or reINVITE requests sent by the SRC.  These metadata
   updates are normally incremental updates to the initial metadata
   snapshot to optimize on the size of updates, however, the SRC may
   also decide to send a new metadata snapshot anytime.

   Metadata is transported in the body of INVITE or UPDATE messages.
   Certain metadata, such as the attributes of the recorded media stream
   are located in the SDP of the recording session.

   The SRS has the ability to send a request to the SRC to request for a
   new metadata snapshot update from the SRC.  This can happen when the
   SRS fails to understand the current stream of incremental updates for
   whatever reason, for example, when SRS loses the current state due to
   internal failure.  The SRS may optionally attach a reason along with
   the snapshot request.  This request allows both SRC and SRS to
   restart the states with a new metadata snapshot so that further
   metadata incremental updates will be based on the latest metadata
   snapshot.  Similar to the metadata content, the metadata snapshot
   request is transported as content in UPDATE or INVITE sent by the SRS
   in the recording session.

























Portman, et al.         Expires November 9, 2012                [Page 7]

Internet-Draft         Session Recording Protocol               May 2012


     SRC                                                   SRS
      |                                                     |
      |(1) INVITE (metadata snapshot)                       |
      |---------------------------------------------------->|
      |                                           (2)200 OK |
      |<----------------------------------------------------|
      |(3) ACK                                              |
      |---------------------------------------------------->|
      |(4) RTP                                              |
      |====================================================>|
      |====================================================>|
      |(5) UPDATE (metadata update 1)                       |
      |---------------------------------------------------->|
      |                                          (6) 200 OK |
      |<----------------------------------------------------|
      |(7) UPDATE (metadata update 2)                       |
      |---------------------------------------------------->|
      |                                          (8) 200 OK |
      |<----------------------------------------------------|
      |              (9) UPDATE (metadata snapshot request) |
      |<----------------------------------------------------|
      |                                        (10) 200 OK  |
      |---------------------------------------------------->|
      |      (11) INVITE (metadata snapshot 2 + SDP offer)  |
      |---------------------------------------------------->|
      |                            (12) 200 OK (SDP answer) |
      |<----------------------------------------------------|
      | (13) UPDATE (metadata update 1 based on snapshot 2) |
      |---------------------------------------------------->|
      |                                         (14) 200 OK |
      |<----------------------------------------------------|

          Figure 3: Delivering metadata via SIP UPDATE



5.  Initiating a Recording Session

5.1.  Procedures at the SRC

   The SRC can initiate a recording session by sending a SIP INVITE
   request to the SRS.  The SRC and the SRS are identified in the From
   and To headers, respectively.

   The SRC MUST include the '+sip.src' feature tag in the Contact URI,
   defined in this specification as an extension to [RFC3840], for all
   recording sessions.  An SRS uses the presence of the '+sip.src'
   feature tag in dialog creating and modifying requests and responses



Portman, et al.         Expires November 9, 2012                [Page 8]

Internet-Draft         Session Recording Protocol               May 2012


   to confirm that the dialog being created is for the purpose of a
   Recording Session.  In addition, when an SRC sends a REGISTER request
   to a registrar, the SRC MUST include the '+sip.src' feature tag to
   indicate the that it is a SRC.

   Since SIP Caller Preferences extensions are optional to implement for
   routing proxies, there is no guarantee that a recording session will
   be routed to an SRC or SRS.  A new options tag is introduced:
   "siprec".  As per [RFC3261], only an SRC or an SRS can accept this
   option tag in a recording session.  An SRC MUST include the "siprec"
   option tag in the Require header when initiating a Recording Session
   so that UA's which do not support the session recording protocol
   extensions will simply reject the INVITE request with a 420 Bad
   Extension.

5.2.  Procedures at the SRS

   The SRS can initiate a recording session by sending a SIP INVITE
   request to the SRC.  The SRS and the SRC are identified in the From
   and To headers, respectively.

   The SRS MUST include the '+sip.srs' feature tag in the Contact URI,
   as per [RFC3840], for all recording sessions.  An SRC uses the
   presence of this feature tag in dialog creating and modifying
   requests and responses to confirm that the dialog being created is
   for the purpose of a Recording Session (REQ-30).  In addition, when
   an SRS sends a REGISTER request to a registrar, the SRS MUST include
   the '+sip.srs' feature tag to indicate that it is a SRS.

   An SRS MUST include the "siprec" option tag in the Require header as
   per [RFC3261] when initiating a Recording Session so that UA's which
   do not support the session recording protocol extensions will simply
   reject the INVITE request with a 420 Bad Extension.


6.  SDP Handling

   The SRC and SRS follows the SDP offer/answer model in [RFC3264].  The
   rest of this section describes conventions used in a recording
   session.

6.1.  Procedures at the SRC

   Since the SRC does not expect to receive media from the SRS, the SRC
   typically sets each media stream of the SDP offer to only send media,
   by qualifying them with the a=sendonly attribute, according to the
   procedures in [RFC3264].




Portman, et al.         Expires November 9, 2012                [Page 9]

Internet-Draft         Session Recording Protocol               May 2012


   The SRC sends recorded streams of participants to the SRS, and the
   SRC MUST provide a label attribute (a=label), as per [RFC4574], on
   each media stream in order to identify the recorded stream with the
   rest of the metadata.  The a=label attribute identifies each recorded
   media stream, and the label name is mapped to the Media Stream
   Reference in the metadata as per [I-D.ietf-siprec-metadata].  The
   scope of the label name only applies to the same SIP message as the
   SDP, meaning that the label name can be reused by another media
   stream within the same recording session.  Note that a recorded
   stream is distinct from a CS stream; the metadata provides a list of
   participants that contributes to each recorded stream.

   The following is an example of SDP with both audio and video recorded
   streams.  Note that the following example contain unfolded lines
   longer than 72 characters.  These are captured between <allOneLine>
   tags.


       v=0
       o=SRS 2890844526 2890844526 IN IP4 198.51.100.1
       s=-
       c=IN IP4 198.51.100.1
       t=0 0
       m=audio 12240 RTP/AVP 0 4 8
       a=sendonly
       a=label:1
       m=video 22456 RTP/AVP 98
       a=rtpmap:98 H264/90000
       <allOneLine>
       a=fmtp:98 profile-level-id=42A01E;
                 sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==
       </allOneLine>
       a=sendonly
       a=label:2
       m=audio 12242 RTP/AVP 0 4 8
       a=sendonly
       a=label:3
       m=audio 22458 RTP/AVP 98
       a=rtpmap:98 H264/90000
       <allOneLine>
       a=fmtp:98 profile-level-id=42A01E;
                 sprop-parameter-sets=Z0IACpZTBYmI,aMljiA==
       </allOneLine>
       a=sendonly
       a=label:4

       Figure 4: Sample SDP with audio and video streams




Portman, et al.         Expires November 9, 2012               [Page 10]

Internet-Draft         Session Recording Protocol               May 2012


6.1.1.  Handling media stream updates

   Over the lifetime of a recording session, the SRC can add and remove
   recorded streams from the recording session for various reasons.  For
   example, when a CS stream is added or removed from the CS, or when a
   CS is created or terminated if a recording session handles multiple
   CSes.  To remove a recorded stream from the recording session, the
   SRC sends a new SDP offer where the port of the media stream to be
   removed is set to zero, according to the procedures in [RFC3264].  To
   add a recorded stream to the recording session, the SRC sends a new
   SDP offer by adding a new media stream description or by reusing an
   old media stream which had been previously disabled, according to the
   procedures in [RFC3264].

   The SRC can temporarily discontinue streaming and collection of
   recorded media from the SRC to the SRS for reason such as masking the
   recording.  In this case, the SRC sends a new SDP offer and sets the
   media stream to inactive (a=inactive) for each recorded stream to be
   paused, as per the procedures in [RFC3264].  To resume streaming and
   collection of recorded media, the SRC sends a new SDP offer and sets
   the media streams with a=sendonly attribute.  Note that when a CS
   stream is muted/unmuted, this information is conveyed in the metadata
   by the SRC.  The SRC SHOULD not modify the media stream with
   a=inactive for mute since this operation is reserved for pausing the
   RS media.

6.2.  Procedures at the SRS

   The SRS only receives RTP streams from the SRC, the SDP answer
   normally sets each media stream to receive media, by setting them
   with the a=recvonly attribute, according to the procedures of
   [RFC3264].  When the SRS is not ready to receive a recorded stream,
   the SRS sets the media stream as inactive in the SDP offer or answer
   by setting it with a=inactive attribute, according to the procedures
   of [RFC3264].  When the SRS is ready to receive recorded streams, the
   SRS sends a new SDP offer and sets the media streams with a=recvonly
   attribute.

   Over the lifetime of a recording session, the SRS can remove recorded
   streams from the recording session for various reasons.  To remove a
   recorded stream from the recording session, the SRS sends a new SDP
   offer where the port of the media stream to be removed is set to
   zero, according to the procedures in [RFC3264].

   The following sequence diagram shows an example where the SRS is
   initially not ready to receive recorded streams, and later updates
   the recording session when the SRS is ready to record.




Portman, et al.         Expires November 9, 2012               [Page 11]

Internet-Draft         Session Recording Protocol               May 2012


     SRC                                                   SRS
      |                                                     |
      |(1) INVITE (SDP offer)                               |
      |---------------------------------------------------->|
      |                                           [not ready to record]
      |                         (2)200 OK with SDP inactive |
      |<----------------------------------------------------|
      |(3) ACK                                              |
      |---------------------------------------------------->|
      |                      ...                            |
      |                                             [ready to record]
      |                     (4) re-INVITE with SDP recvonly |
      |<----------------------------------------------------|
      |(5)200 OK with SDP sendonly                          |
      |---------------------------------------------------->|
      |                                             (6) ACK |
      |<----------------------------------------------------|
      |(7) RTP                                              |
      |====================================================>|
      |                      ...                            |
      |(8) BYE                                              |
      |---------------------------------------------------->|
      |                                             (9) OK  |
      |<----------------------------------------------------|

              Figure 5: SRS responding to offer with a=inactive



7.  RTP Handling

   This section provides recommendations and guidelines for RTP and RTCP
   in the context of SIPREC.  In order to communicate most effectively,
   the Session Recording Client (SRC) and the Session Recording Server
   (SRS) SHOULD utilize the mechanisms provided by RTP in a well defined
   and predicable manner.  It is the goal of this document to make the
   reader aware of these mechanisms and provide recommendations and
   guidelines.

7.1.  Roles

   An SRC has the task of gathering media from the various UAs in a
   Communication Session (CS) and forwarding the information to the SRS
   within the context of a Recording Session (RS).  There are numerous
   ways in which an SRC may do this is, including appearing as one of
   the UAs within a CS, or as a B2BUA between UAs within a CS.





Portman, et al.         Expires November 9, 2012               [Page 12]

Internet-Draft         Session Recording Protocol               May 2012


                                            SRS
                                             ^
                                             |
                                            RS
                                             |
                                             v
                              UA <-- CS --> SRC

                            Figure 1: UA as SRC


                                     SRS
                                      ^
                                      |
                                     RS
                                      |
                                      v
                      UA1 <-- CS --> SRC <-- CS --> UA2

                          Figure 2: B2BUA as SRC

   The following subsections define a set of roles an SRC may choose to
   play based on its position with respect to a UA within a CS, and an
   SRS within an RS.

7.1.1.  SRC acting as an RTP Translator

   The SRC may act as a translator, as defined in [RFC3550].  A defining
   characteristic of a translator is that it forwards RTP packets with
   their SSRC identifier intact.  There are two types of translators,
   one that simply forwards, and another that performs transcoding
   (e.g., from one codec to another) in addition to forwarding.

7.1.1.1.  Forwarding Translator

   When acting as a forwarding translator, RTP received as separate
   streams from different sources (e.g., from different UAs with
   different SSRCs) cannot be mixed by the SRC and MUST be sent
   separately to the SRS.  All RTCP reports MUST be passed by the SRC
   between the UAs and the SRS, such that the UAs and SRS are able to
   detect any SSRC collisions.

   RTCP Sender Reports generated by a UA sending a stream MUST be
   forwarded to the SRS.  RTCP Receiver Reports generated by the SRS
   MUST be forwarded to the relevant UA.

   UAs may receive multiple sets of RTCP Receiver Reports, one or more
   from other UAs participating in the CS, and one from the SRS



Portman, et al.         Expires November 9, 2012               [Page 13]

Internet-Draft         Session Recording Protocol               May 2012


   participating in the RS.  A SIPREC aware UA SHOULD be prepared to
   process the RTCP Receiver Reports from the SRS, whereas a SIPREC
   unaware UA may discard such RTCP packets as not of relevance.

   If SRTP is used on both the CS and the RS, decryption and/or re-
   encryption may occur.  For example, if different keys are used, it
   will occur.  If the same keys are used, it need not occur.

   If packet loss occurs, either from the UA to the SRC or from the SRC
   to the SRS, the SRS SHOULD detect and attempt to recover from the
   loss.  The SRC does not play a role in this other than forwarding the
   associated RTP and RTCP packets.

7.1.1.2.  Transcoding Translator

   When acting as a transcoding translator, an SRC MAY perform
   transcoding (e.g., from one codec to another), and this may result in
   a different rate of packets between what the SRC receives and what
   the sends.  As when acting as a forwarding translator, RTP received
   as separate streams from different sources (e.g., from different UAs
   with different SSRCs) cannot be mixed by the SRC and MUST be sent
   separately to the SRS.  All RTCP reports MUST passed by the SRC
   between the UAs and the SRS, such the UAs and SRS they are able to
   detect any SSRC collisions.

   RTCP Sender Reports generated by a UA sending a stream MUST be
   forwarded to the SRS.  RTCP Receiver Reports generated by the SRS
   MUST be forwarded to the relevant UA.  The SRC may need to manipulate
   the RTCP Receiver Reports to take account of any transcoding that has
   taken place.

   UAs may receive multiple sets of RTCP Receiver Reports, one or more
   from other UAs participating in the CS, and one from the SRS
   participating in the RS.  A SIPREC aware UA SHOULD be prepared to
   process the RTCP Receiver Reports from the SRS, whereas a SIPREC
   unaware UA may discard such RTCP packets as not of relevance.

   If SRTP is used on both the CS and the RS, decryption and/or re-
   encryption may occur.  For example, if different keys are used, it
   will occur.  If the same keys are used, it need not occur.

   If packet loss occurs, either from the UA to the SRC or from the SRC
   to the SRS, the SRS SHOULD detect and attempt to recover from the
   loss.  The SRC does not play a role in this other than forwarding the
   associated RTP and RTCP packets.






Portman, et al.         Expires November 9, 2012               [Page 14]

Internet-Draft         Session Recording Protocol               May 2012


7.1.2.  SRC acting as an RTP Mixer

   In the case of the SRC acting as a RTP mixer, as defined in
   [RFC3550], the SRC combines RTP streams from different UA and sends
   them towards the SRS using its own SSRC.  The SSRCs from the
   contributing UA SHOULD be conveyed as CSRCs identifiers within this
   stream.  The SRC may make timing adjustments among the received
   streams and generate its own timing on the stream sent to the SRS.
   Optionally an SRC acting as a mixer can perform transcoding, and can
   even cope with different codings received from different UAs.  RTCP
   Sender Reports and Receiver Reports are not forwarded by an SRC
   acting as mixer, but there are requirements for forwarding RTCP
   Source Description (SDES) packets.  The SRC generates its own RTCP
   Sender and Receiver reports toward the associated UAs and SRS.  The
   use of SRTP between the SRC and the SRS for the RS is independent of
   the use of SRTP between the UAs and SRC for the CS.

   If packet loss occurs from the UA to the SRC, the SRC SHOULD detect
   and attempt to recover from the loss.  If packet loss occurs from the
   SRC to the SRS, the SRS SHOULD detect and attempt to recover from the
   loss.

7.1.3.  SRC acting as an RTP Endpoint

   The case of the SRC acting as an RTP endpoint, as defined in
   [RFC3550], is similar to the mixer case, except that the RTP session
   between the SRC and the SRS is considered completely independent from
   the RTP session that is part of the CS.  The SRC can, but need not,
   mix RTP streams from different participants prior to sending to the
   SRS.  RTCP between the SRC and the SRS is completely independent of
   RTCP on the CS.  The use of SRTP between the SRC and the SRS is
   independent of the use of SRTP on the CS.

   If packet loss occurs from the UA to the SRC, the SRC SHOULD detect
   and attempt to recover from the loss.  If packet loss occurs from the
   SRC to the SRS, the SRS SHOULD detect and attempt to recover from the
   loss.

7.2.  RTCP

   The RTP data transport is augmented by a control protocol (RTCP) to
   allow monitoring of the data delivery.  RTCP, as defined in
   [RFC3550], is based on the periodic transmission of control packets
   to all participants in the RTP session, using the same distribution
   mechanism as the data packets.  Support for RTCP is REQUIRED, per
   [RFC3550], and it provides, among other things, the following
   important functionality in relation to SIPREC:




Portman, et al.         Expires November 9, 2012               [Page 15]

Internet-Draft         Session Recording Protocol               May 2012


   1) Feedback on the quality of the data distribution

   This feedback from the receivers may be used to diagnose faults in
   the distribution.  As such, RTCP is a well defined and efficient
   mechanism for the SRS to inform the SRC of issues that arise with
   respect to its reception of media that is to be recorded.

   2) Carries a persistent transport-level identifier for an RTP source
   called the canonical name or CNAME

   The SSRC identifier may change if a conflict is discovered or a
   program is restarted; in which case receivers can use the CNAME to
   keep track of each participant.  Receivers may also use the CNAME to
   associate multiple data streams from a given participant in a set of
   related RTP sessions, for example to synchronize audio and video.
   Synchronization of media streams is also facilitated by the NTP and
   RTP timestamps included in RTCP packets by data senders.

7.3.  RTP Profile

   The RECOMMENDED RTP profiles for both the SRC and SRS are "Extended
   Secure RTP Profile for Real-time Transport Control Protocol (RTCP)-
   Based Feedback (RTP/SAVPF)", [RFC5124] when using encrypted RTP
   streams, and "Extended RTP Profile for Real-time Transport Control
   Protocol (RTCP)-Based Feedback (RTP/AVPF)", [RFC4585] when using non
   encrypted media streams.  However, as this is not a requirement, some
   implementations may use "The Secure Real-time Transport Protocol
   (SRTP)", [RFC3711] and "RTP Profile for Audio and Video Conferences
   with Minimal Control", AVP [RFC3551].  Therefore, it is RECOMMENDED
   that the SRC and SRS not rely entirely on SAVPF or AVPF for core
   functionality that may be at least partially achievable using SAVP
   and AVP.

   AVPF and SAVPF provide an improved RTCP timer model that allows more
   flexible transmission of RTCP packets as response to events, rather
   than strictly according to bandwidth.  AVPF based codec control
   messages provide efficient mechanisms for an SRC and SRS to handle
   events such as scene changes, error recovery, and dynamic bandwidth
   adjustments.  These messages are discussed in more detail later in
   this document.

   SAVP and SAVPF provide media encryption, integrity protection, replay
   protection, and a limited form of source authentication.  They do not
   contain or require a specific keying mechanism.







Portman, et al.         Expires November 9, 2012               [Page 16]

Internet-Draft         Session Recording Protocol               May 2012


7.4.  SSRC

   The synchronization source (SSRC), as defined in [RFC3550], is
   carried in the RTP header and in various fields of RTCP packets.  It
   is a random 32-bit number that is required to be globally unique
   within an RTP session.  It is crucial that the number be chosen with
   care in order that participants on the same network or starting at
   the same time are not likely to choose the same number.  Guidelines
   regarding SSRC value selection and conflict resolution are provided
   in [RFC3550].

   The SSRC may also be used to separate different sources of media
   within a single RTP session.  For this reason as well as for conflict
   resolution, it is important that the SRC and SRS handle changes in
   SSRC values and properly identify the reason of the change.  The
   CNAME values carried in RTCP facilitate this identification.

7.5.  CSRC

   The contributing source (CSRC), as defined in [RFC3550], identifies
   the source of a stream of RTP packets that has contributed to the
   combined stream produced by an RTP mixer.  The mixer inserts a list
   of the SSRC identifiers of the sources that contributed to the
   generation of a particular packet into the RTP header of that packet.
   This list is called the CSRC list.  It is RECOMMENDED that a SRC,
   when acting a mixer, sets the CSRC list accordingly, and that the SRS
   interprets the CSRC list appropriately when received.

7.6.  SDES

   The Source Description (SDES), as defined in [RFC3550], contains an
   SSRC/CSRC identifier followed by a list of zero or more items, which
   carry information about the SSRC/CSRC.  End systems send one SDES
   packet containing their own source identifier (the same as the SSRC
   in the fixed RTP header).  A mixer sends one SDES packet containing a
   chunk for each contributing source from which it is receiving SDES
   information, or multiple complete SDES packets if there are more than
   31 such sources.

7.6.1.  CNAME

   The Canonical End-Point Identifier (CNAME), as defined in [RFC3550],
   provides the binding from the SSRC identifier to an identifier for
   the source (sender or receiver) that remains constant.  It is
   important the an SRC and SRS generate CNAMEs appropriately and use
   them for this purpose.  Guidelines for generating CNAME values are
   provided in "Guidelines for Choosing RTP Control Protocol (RTCP)
   Canonical Names (CNAMEs)" [RFC6222].



Portman, et al.         Expires November 9, 2012               [Page 17]

Internet-Draft         Session Recording Protocol               May 2012


7.7.  Keepalive

   It is anticipated that media streams in SIPREC may exist in inactive
   states for extended periods of times for an of a number of valid
   reasons.  In order for the bindings and any pinholes in NATs/
   firewalls to remain active during such intervals, it is RECOMMENDED
   to follow the keep-alive procedure recommended in "Application
   Mechanism for Keeping Alive the NAT Mappings Associated to RTP/RTP
   Control Protocol (RTCP) Flows" [RFC6263] for all RTP media streams.

7.8.  RTCP Feedback Messages

   "Codec Control Messages in the RTP Audio-Visual Profile with Feedback
   (AVPF)" [RFC5104] specifies extensions to the messages defined in
   AVPF [RFC4585].  Support for and proper usage of these messages is
   important to SRC and SRS implementations.  Note that these messages
   are applicable only when using the AVFP or SAVPF RTP profiles.

7.8.1.  Full Intra Request

   A Full Intra Request (FIR) Command, when received by the designate
   media sender, requires that the media sender sends a Decoder Refresh
   Point at the earliest opportunity.  Using a decoder refresh point
   implies refraining from using any picture sent prior to that point as
   a reference for the encoding process of any subsequent picture sent
   in the stream.

   Decoder refresh points, especially Intra or IDR pictures for H.264
   video codecs, are in general several times larger in size than
   predicted pictures.  Thus, in scenarios in which the available bit
   rate is small, the use of a decoder refresh point implies a delay
   that is significantly longer than the typical picture duration.

7.8.1.1.  SIP INFO for FIR

   "XML Schema for Media Control" [RFC5168] defines an Extensible Markup
   Language (XML) Schema for video fast update.  Implementations are
   discouraged from using the method described except for backward
   compatibility purposes.  Implementations SHOULD use FIR messages
   instead.

7.8.2.  Picture Loss Indicator

   Picture Loss Indication (PLI), as defined in [RFC4585], informs the
   encoder of the loss of an undefined amount of coded video data
   belonging to one or more pictures.  Using the FIR command to recover
   from errors is explicitly disallowed, and instead the PLI message
   SHOULD be used.  FIR SHOULD be used only in situations where not



Portman, et al.         Expires November 9, 2012               [Page 18]

Internet-Draft         Session Recording Protocol               May 2012


   sending a decoder refresh point would render the video usable for the
   users.  Examples where sending FIR is appropriate include a
   multipoint conference when a new user joins the conference and no
   regular decoder refresh point interval is established, and a video
   switching MCU that changes streams.

7.8.3.  Temporary Maximum Media Stream Bit Rate Request

   A receiver, translator, or mixer uses the Temporary Maximum Media
   Stream Bit Rate Request (TMMBR) to request a sender to limit the
   maximum bit rate for a media stream to the provided value.
   Appropriate use of TMMBR facilitates rapid adaptation to changes in
   available bandwidth.

7.8.3.1.  Renegotiation of SDP bandwidth attribute

   If it is likely that the new value indicated by TMMBR will be valid
   for the remainder of the session, the TMMBR sender is expected to
   perform a renegotiation of the session upper limit using the session
   signaling protocol.  Therefore for SIPREC, implementations are
   RECOMMENDED to use TMMBR for temporary changes, and renegotiation of
   bandwidth via SDP offer/answer of more permanent changes.

7.9.  Symmetric RTP/RTCP for Sending and Receiving

   Within an SDP offer/answer exchange, RTP entities choose the RTP and
   RTCP transport addresses (i.e., IP addresses and port numbers) on
   which to receive packets.  When sending packets, the RTP entities may
   use the same source port or a different source port as those signaled
   for receiving packets.  When the transport address used to send and
   receive RTP is the same, it is termed "symmetric RTP" [RFC4961].
   Likewise, when the transport address used to send and receive RTCP is
   the same, it is termed "symmetric RTCP" [RFC4961].

   When sending RTP, it is REQUIRED to use symmetric RTP.  When sending
   RTCP, it is REQUIRED to use symmetric RTCP.  Although an SRS will not
   normally send RTP, it will send RTCP as well as receive RTP and RTCP.
   Likewise, although an SRC will not normally receive RTP from the SRS,
   it will receive RTCP as well as send RTP and RTCP.

      Note: Symmetric RTP and symmetric RTCP are different from RTP/RTCP
      multiplexing [RFC5761].


8.  Metadata






Portman, et al.         Expires November 9, 2012               [Page 19]

Internet-Draft         Session Recording Protocol               May 2012


8.1.  Procedures at the SRC

   The SRC is responsible to deliver metadata to the SRS in a recording
   session.  Metadata can be provided by the SRC in the initial INVITE
   request when establishing the recording session, and subsequent
   metadata updates can be provided by the SRC in reINVITE and UPDATE
   requests and responses in the recording session.

   Certain metadata attributes are contained in the SDP, and others are
   contained in a new content type "application/rs-metadata".  The
   format of the metadata is described as part of the mechanism in
   [I-D.ietf-siprec-metadata].  A new "disposition-type" of Content-
   Disposition is defined for the purpose of carrying metadata and the
   value is "recording-session".  The "recording-session" value
   indicates that the "application/rs-metadata" content contains
   metadata to be handled by the SRS, and the disposition can be carried
   in either INVITE or UPDATE requests or responses sent by the SRC.

   Metadata sent by the SRC can be categorized as either a full metadata
   snapshot or partial update.  A full metadata snapshot describes all
   the recorded streams and all metadata associated with the recording
   session.  When the SRC sends a full metadata snapshot, the SRC MUST
   send an INVITE or an UPDATE request with an SDP offer and the
   "recording-session" disposition.  A partial update represents an
   incremental update since the last metadata update sent by the SRC.  A
   partial update sent by the SRC can be an INVITE request or response
   with an SDP offer, or an INVITE/UPDATE request or response containing
   a "recording-session" disposition, or an INVITE request containing
   both an SDP offer and the "recording-session" disposition.

   The following is an example of a full metadata snapshot sent by the
   SRC in the initial INVITE request:



















Portman, et al.         Expires November 9, 2012               [Page 20]

Internet-Draft         Session Recording Protocol               May 2012


      INVITE sip:recorder@example.com SIP/2.0
      Via: SIP/2.0/TCP src.example.com;branch=z9hG4bKdf6b622b648d9
      From: <sip:2000@example.com>;tag=35e195d2-947d-4585-946f-098392474
      To: <sip:recorder@example.com>
      Call-ID: d253c800-b0d1ea39-4a7dd-3f0e20a
      CSeq: 101 INVITE
      Max-Forwards: 70
      Require: siprec
      Accept: application/sdp, application/rs-metadata,
        application/rs-metadata-request
      Contact: <sip:2000@src.example.com>;+sip.src
      Content-Type: multipart/mixed;boundary=foobar
      Content-Length: [length]

      --foobar
      Content-Type: application/sdp

      v=0
      o=SRS 2890844526 2890844526 IN IP4 198.51.100.1
      s=-
      c=IN IP4 198.51.100.1
      t=0 0
      m=audio 12240 RTP/AVP 0 4 8
      a=sendonly
      a=label:1

      --foobar
      Content-Type: application/rs-metadata
      Content-Disposition: recording-session

      [metadata content]

          Figure 6: Sample INVITE request for the recording session


8.2.  Procedures at the SRS

   The SRS receives metadata updates from the SRC in INVITE and UPDATE
   requests.  Since the SRC can send partial updates based on the
   previous update, the SRS needs to keep track of the sequence of
   updates from the SRC.

   In the case of an internal failure at the SRS, the SRS may fail to
   recognize a partial update from the SRC.  The SRS may be able to
   recover from the internal failure by requesting for a full metadata
   snapshot from the SRC.  Certain errors, such syntax errors or
   semantic errors in the metadata information, are likely caused by an
   error on the SRC side, and it is likely the same error will occur



Portman, et al.         Expires November 9, 2012               [Page 21]

Internet-Draft         Session Recording Protocol               May 2012


   again even when a full metadata snapshot is requested.  In order to
   avoid repeating the same error, the SRS can simply terminate the
   recording session when a syntax error or semantic error is detected
   in the metadata.

   When the SRS explicitly requests for a full metadata snapshot, the
   SRS MUST send an UPDATE request without an SDP offer.  A metadata
   snapshot request contains a content with the content disposition type
   "recording-session".  Note that the SRS MAY generate an INVITE
   request without an SDP offer but this MUST not include a metadata
   snapshot request.  The format of the content is "application/
   rs-metadata-request", and the body format is chosen to be a simple
   text-based format.  The following shows an example:


       UPDATE sip:2000@src.exmaple.com SIP/2.0
       Via: SIP/2.0/UDP srs.example.com;branch=z9hG4bKdf6b622b648d9
       To: <sip:2000@exmaple.com>;tag=35e195d2-947d-4585-946f-098392474
       From: <sip:recorder@example.com>;tag=1234567890
       Call-ID: d253c800-b0d1ea39-4a7dd-3f0e20a
       CSeq: 1 UPDATE
       Max-Forwards: 70
       Require: siprec
       Contact: <sip:recorder@srs.example.com>;+sip.srs
       Accept: appliation/sdp, application/rs-metadata
       Content-Disposition: recording-session
       Content-Type: application/rs-metadata-request
       Content-Length: [length]

       SRS internal error

           Figure 7: Metadata Request


   The SRS MAY include the reason why a metadata snapshot request is
   being made to the SRC in the reason line.  This reason line is free
   form text, mainly designed for logging purposes on the SRC side.  The
   processing of the content by the SRC is entirely optional since the
   content is for logging only, and the snapshot request itself is
   indicated by the use of the application/rs-metadata-request content
   type.

   When the SRC receives the request for a metadata snapshot, the SRC
   MUST provide a full metadata snapshot in a separate INVITE or UPDATE
   transaction, along with an SDP offer.  All subsequent metadata
   updates sent by the SRC MUST be based on the new metadata snapshot.





Portman, et al.         Expires November 9, 2012               [Page 22]

Internet-Draft         Session Recording Protocol               May 2012


8.2.1.  Formal Syntax

   The formal syntax for the application/rs-metadata-request MIME is
   described below using the augmented Backus-Naur Form (BNF) as
   described in [RFC2234].

   snapshot-request = srs-reason-line CRLF

   srs-reason-line = [TEXT-UTF8-TRIM]


9.  Persistent Recording

   Persistent recording is a specific use case outlined in REQ-005 or
   Use Case 4 in [RFC6341], where a recording session can be established
   in the absence of a communication session.  The SRC continuously
   records media in a recording session to the SRS even in the absence
   of a CS for all user agents that are part of persistent recording.
   By allocating recorded streams and continuously sending recorded
   media to the SRS, the SRC does not have to prepare new recorded
   streams with new SDP offer when a new communication session is
   created and also does not impact the timing of the CS.  The SRC only
   needs to update the metadata when new communication sessions are
   created.

   When there is no communication sessions running on the devices with
   persistent recording, there is no recorded media to stream from the
   SRC to the SRS.  In certain environments where Network Address
   Translator (NAT) is used, typically a minimum of flow activity is
   required to maintain the NAT binding for each port opened.  Agents
   that support Interactive Connectivity Establishment (ICE) solves this
   problem.  For non-ICE agents, in order not to lose the NAT bindings
   for the RTP/RTCP ports opened for the recorded streams, the SRC and
   SRS SHOULD follow the recommendations provided in [RFC6263] to
   maintain the NAT bindings.


10.  Extensions for Recording-aware User Agents

   The following sections describe the SIP and SDP extensions for
   recording-aware user agents.  A recording-aware user agent is a
   participant in the CS that supports the SIP and SDP extensions for
   receiving recording indication and for requesting recording
   preferences for the call.







Portman, et al.         Expires November 9, 2012               [Page 23]

Internet-Draft         Session Recording Protocol               May 2012


10.1.  Procedures at the record-aware user agent

   A recording-aware UA SHOULD indicate that it can accept reporting of
   recording indication provided by the SRC.  A new option tag "record-
   aware" is introduced to indicate such awareness.  The recording-aware
   UA SHOULD include the "record-aware" option tag in the Supported
   header when initiating or establishing a CS.  A recording-aware UA
   that has indicated recording awareness MUST provide at recording
   indication to the end user through an appropriate user interface an
   indication whether recording is on or off for a given medium based on
   the most recently received a=record SDP attribute for that medium.

   Some user agents that are automatons (eg.  IVR, media server, PSTN
   gateway) may not have a user interface to render recording
   indication.  When such user agent indicates recording awareness, the
   UA SHOULD render recording indication through other means, such as
   passing an inband tone on the PSTN gateway, putting the recording
   indication in a log file, or raising an application event in a
   VoiceXML dialog.  These user agents MAY also choose not to indicate
   recording awareness, thereby relying on whatever mechanism an SRC
   chooses to indicate recording, such as playing a tone inband.

10.1.1.  Recording preference

   A recording-aware UA involved in a CS MAY request the CS to be
   recorded or not recorded.  This indication of recording preference
   can be sent at session establishment time or during the session.

   A new SDP attribute "recordpref" is introduced.  The SDP attribute
   appears at the media level or session level and can appear in an SDP
   offer or answer.  The recording indication applies to the specified
   media stream only.  The following is the ABNF of the recordpref
   attribute:

      recordpref-attr = "a=recordpref:" pref

      pref = "on" / "off" / "pause" / "nopreference"

   on Request for recording if it has not already been started.  If the
      recording is currently paused, request to resume recording.

   off  Request for no recording.  If recording has already been
      started, then this preference indicates a request to stop
      recording.







Portman, et al.         Expires November 9, 2012               [Page 24]

Internet-Draft         Session Recording Protocol               May 2012


   pause  Request to pause recording if recording is currently in
      progress.

   nopreference  To indicate that the UA has no preference on recording.
      While the absence of this attribute indirectly implies the lack of
      preference, using this value allows the UA to explicitly state no
      preference to being recorded.

10.2.  Procedures at the SRC

   When a UA has indicated that it is recording-aware through the
   "record-aware" option tag, the SRC MUST provide recording indications
   in a new SDP attribute described in the following section.  In the
   absence of the "record-aware" option tag, meaning that the UA is not
   recording-aware, an SRC MUST provide recording indications, where SRC
   is required to do so based on policies, through other means such as
   playing a tone inband.

10.2.1.  Recording indication

   While there are existing mechanisms for providing an indication that
   a CS is being recorded, these mechanisms are usually delivered on the
   CS media streams such as playing an in-band tone or an announcement
   to the participants.  A new SDP attribute is introduced to allow a
   recording-aware UA to render recording indication at the user
   interface.

   The 'record' SDP attribute appears at the media level or session
   level in either SDP offer or answer.  The recording indication
   applies to the specified media stream only, for example, only the
   audio portion of the call is recorded in an audio/video call.  The
   following is the ABNF of the 'record' attribute:

      attribute /= record-attr

      ; attribute defined in RFC 4566

      record-attr = "record:" indication

      indication = "on" / "off" / "paused"

   on Recording is in progress.

   off  No recording is in progress.







Portman, et al.         Expires November 9, 2012               [Page 25]

Internet-Draft         Session Recording Protocol               May 2012


   paused  Recording is in progress by media is paused.

   The recording attribute is a declaration by the SRC in the CS to
   indicate whether recording is taking place.  For example, if a UA (A)
   is initiating a call to UA (B) and UA (A) is also an SRC that is
   performing the recording, then UA (A) provides the recording
   indication in the SDP offer with a=record:on.  When UA (B) receives
   the SDP offer, UA (B) will see that recording is happening on the
   other endpoint of this session.  If UA (B) does not wish to perform
   recording itself, UA (B) provides the recording indication as
   a=record:off in the SDP answer.

   Whenever the recording indication needs to change, such as
   termination of recording, then the UA MUST initiate a reINVITE or
   UPDATE to update the SDP attribute to a=record:off.  The following
   call flow shows an example of the offer/answer with the recording
   indication attribute.


    UA A                                                   UA B
    (SRC)                                                   |
      |                                                     |
      |                [SRC recording starts]               |
      |(1) INVITE (SDP offer + a=record:on)                 |
      |---------------------------------------------------->|
      |                                 200 OK (SDP answer) |
      |<----------------------------------------------------|
      |(3) ACK                                              |
      |---------------------------------------------------->|
      |(4) RTP                                              |
      |<===================================================>|
      |               [SRC stops recording]                 |
      |(5) re-INVITE (SDP + a=record:off)                   |
      |---------------------------------------------------->|
      |                      (6) 200 OK (SDP + a=record:off)|
      |<----------------------------------------------------|
      |                                             (6) ACK |
      |---------------------------------------------------->|

              Figure 8: Recording indication example


   If a call is traversed through one or more SIP B2BUA, and it happens
   that there are more than one SRC in the call path, the recording
   indication attribute does not provide any hint as to which SRC is
   performing the recording, meaning the endpoint only knows that the
   call is being recorded.  This attribute is also not used as an
   indication to negotiate which SRC in the call path will perform



Portman, et al.         Expires November 9, 2012               [Page 26]

Internet-Draft         Session Recording Protocol               May 2012


   recording and is not used as a request to start/stop recording if
   there are multiple SRCs in the call path.

10.2.2.  Recording preference

   When the SRC receives the a=recordpref SDP in an SDP offer or answer,
   the SRC chooses to honor such request to record the request based on
   local policy on the SRC.  When the SRC honors the request, the SRC
   MUST also update the recording indication to reflect the current
   state of the recording (on/off/paused).


11.  IANA Considerations

11.1.  Registration of Option Tags

   This specification registers two option tags.  The required
   information for this registration, as specified in [RFC3261], is as
   follows.

11.1.1.  siprec Option Tag

      Name: siprec

      Description: This option tag is for identifying the SIP session
      for the purpose of recording session only.  This is typically not
      used in a Supported header.  When present in a Require header in a
      request, it indicates that the UAS MUST be either a SRC or SRS
      capable of handling the contexts of a recording session.

11.1.2.  record-aware Option Tag

      Name: record-aware

      Description: This option tag is to indicate the ability for the
      user agent to receive recording indicators in media level or
      session level SDP.  When present in a Supported header, it
      indicates that the UA can receive recording indicators in media
      level or session level SDP.

11.2.  Registration of media feature tags

   This document registers two new media feature tags in the SIP tree
   per the process defined in [RFC2506] and [RFC3840]







Portman, et al.         Expires November 9, 2012               [Page 27]

Internet-Draft         Session Recording Protocol               May 2012


11.2.1.  src feature tag

      Media feature tag name: sip.src

      ASN.1 Identifier: 25

      Summary of the media feature indicated by this tag: This feature
      tag indicates that the user agent is a Session Recording Client
      for the purpose for Recording Session.

      Values appropriate for use with this feature tag: boolean

      The feature tag is intended primarily for use in the following
      applications, protocols, services, or negotiation mechanisms: This
      feature tag is only useful for a Recording Session.

      Examples of typical use: Routing the request to a Session
      Recording Server.

      Security Considerations: Security considerations for this media
      feature tag are discussed in Section 11.1 of RFC 3840.

11.2.2.  srs feature tag

      Media feature tag name: sip.srs

      ASN.1 Identifier: 26

      Summary of the media feature indicated by this tag: This feature
      tag indicates that the user agent is a Session Recording Server
      for the purpose for Recording Session.

      Values appropriate for use with this feature tag: boolean

      The feature tag is intended primarily for use in the following
      applications, protocols, services, or negotiation mechanisms: This
      feature tag is only useful for a Recording Session.

      Examples of typical use: Routing the request to a Session
      Recording Client.

      Security Considerations: Security considerations for this media
      feature tag are discussed in Section 11.1 of RFC 3840.








Portman, et al.         Expires November 9, 2012               [Page 28]

Internet-Draft         Session Recording Protocol               May 2012


11.3.  New Content-Disposition Parameter Registrations

   This document registers a new "disposition-type" value in Content-
   Disposition header: recording-session.

   recording-session the body describes the metadata information about
   the recording session

11.4.  Media Type Registration

11.4.1.  Registration of MIME Type application/rs-metadata

   This document registers the application/rs-metadata MIME media type
   in order to describe the recording session metadata.  This media type
   is defined by the following information:

   Media type name: application

   Media subtype name: rs-metadata

   Required parameters: none

   Options parameters: none

11.4.2.  Registration of MIME Type application/rs-metadata-request

   This document registers the application/rs-metadata-request MIME
   media type in order to describe a recording session metadata snapshot
   request.  This media type is defined by the following information:

   Media type name: application

   Media subtype name: rs-metadata-request

   Required parameters: none

   Options parameters: none

11.5.  SDP Attributes

   This document registers the following new SDP attributes.

11.5.1.  'record' SDP Attribute

   Contact names: Leon Portman leon.portman@nice.com, Henry Lum
   henry.lum@genesyslab.com

   Attribute name: record



Portman, et al.         Expires November 9, 2012               [Page 29]

Internet-Draft         Session Recording Protocol               May 2012


   Long form attribute name: Recording Indication

   Type of attribute: session or media level

   Subject to charset: no

   This attribute provides the recording indication for the session or
   media stream.

   Allowed attribute values: on, off, paused

11.5.2.  'recordpref' SDP Attribute

   Contact names: Leon Portman leon.portman@nice.com, Henry Lum
   henry.lum@genesyslab.com

   Attribute name: recordpref

   Long form attribute name: Recording Preference

   Type of attribute: session or media level

   Subject to charset: no

   This attribute provides the recording indication for the session or
   media stream.

   Allowed attribute values: on, off, pause, nopreference


12.  Security Considerations

   The recording session is fundamentally a standard SIP dialog
   [RFC3261], therefore, the recording session can reuse any of the
   existing SIP security mechanism available for securing the recorded
   media as well as metadata.  Other security considerations are
   outlined in the use cases and requirements document [RFC6341].

12.1.  RTP handling

   In many scenarios it will be critical that the media transported
   between the SRC and SRS to be protected.  Media encryption is an
   important element in the overall SIPREC solution, therefore, it is
   RECOMMENDED that SRC and SRS support RTP/SAVP [RFC3711] and RTP/SAVPF
   [RFC5124].  RTP/SAVP and RTP/SAVPF provide media encryption,
   integrity protection, replay protection, and a limited form of source
   authentication.  They do not contain or require a specific keying
   mechanism.



Portman, et al.         Expires November 9, 2012               [Page 30]

Internet-Draft         Session Recording Protocol               May 2012


12.2.  Authentication and Authorization

   The recording session reuses the SIP mechanism to challenge requests
   that is based on HTTP authentication.  The mechanism relies on 401
   and 407 SIP responses as well as other SIP header fields for carrying
   challenges and credentials.

   The SRS may have its own set of recording policies to authorize
   recording requests from the SRC.  The use of recording policies is
   outside the scope of the Session Recording Protocol.


13.  Acknowledgements

   We want to thank John Elwell, Paul Kyzivat, Partharsarathi R, Ram
   Mohan R, Charles Eckel, Hadriel Kaplan, Adam Roach, Miguel Garcia for
   their valuable comments and inputs to this document.

   We also want to thank Andrew Hutton, Ram Mohan, Muthu Perumal, John
   Elwell, Dan Wing, Hadriel Kaplan, Paul Kyzivat, and Magnus Westerlund
   for their valuable contributions to the RTP Handling portion.


14.  References

14.1.  Normative References

   [I-D.ietf-siprec-metadata]
              R, R., Ravindran, P., and P. Kyzivat, "Session Initiation
              Protocol (SIP) Recording Metadata",
              draft-ietf-siprec-metadata-06 (work in progress),
              March 2012.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2234]  Crocker, D., Ed. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", RFC 2234, November 1997.

   [RFC2506]  Holtman, K., Mutz, A., and T. Hardie, "Media Feature Tag
              Registration Procedure", BCP 31, RFC 2506, March 1999.

   [RFC2804]  IAB and IESG, "IETF Policy on Wiretapping", RFC 2804,
              May 2000.

   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,
              A., Peterson, J., Sparks, R., Handley, M., and E.
              Schooler, "SIP: Session Initiation Protocol", RFC 3261,



Portman, et al.         Expires November 9, 2012               [Page 31]

Internet-Draft         Session Recording Protocol               May 2012


              June 2002.

   [RFC3264]  Rosenberg, J. and H. Schulzrinne, "An Offer/Answer Model
              with Session Description Protocol (SDP)", RFC 3264,
              June 2002.

   [RFC3840]  Rosenberg, J., Schulzrinne, H., and P. Kyzivat,
              "Indicating User Agent Capabilities in the Session
              Initiation Protocol (SIP)", RFC 3840, August 2004.

   [RFC3841]  Rosenberg, J., Schulzrinne, H., and P. Kyzivat, "Caller
              Preferences for the Session Initiation Protocol (SIP)",
              RFC 3841, August 2004.

   [RFC4574]  Levin, O. and G. Camarillo, "The Session Description
              Protocol (SDP) Label Attribute", RFC 4574, August 2006.

   [RFC6341]  Rehor, K., Portman, L., Hutton, A., and R. Jain, "Use
              Cases and Requirements for SIP-Based Media Recording
              (SIPREC)", RFC 6341, August 2011.

14.2.  Informative References

   [I-D.ietf-siprec-architecture]
              Hutton, A., Portman, L., Jain, R., and K. Rehor, "An
              Architecture for Media Recording using the Session
              Initiation Protocol", draft-ietf-siprec-architecture-04
              (work in progress), March 2012.

   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.
              Jacobson, "RTP: A Transport Protocol for Real-Time
              Applications", STD 64, RFC 3550, July 2003.

   [RFC3551]  Schulzrinne, H. and S. Casner, "RTP Profile for Audio and
              Video Conferences with Minimal Control", STD 65, RFC 3551,
              July 2003.

   [RFC3711]  Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.
              Norrman, "The Secure Real-time Transport Protocol (SRTP)",
              RFC 3711, March 2004.

   [RFC4508]  Levin, O. and A. Johnston, "Conveying Feature Tags with
              the Session Initiation Protocol (SIP) REFER Method",
              RFC 4508, May 2006.

   [RFC4579]  Johnston, A. and O. Levin, "Session Initiation Protocol
              (SIP) Call Control - Conferencing for User Agents",
              BCP 119, RFC 4579, August 2006.



Portman, et al.         Expires November 9, 2012               [Page 32]

Internet-Draft         Session Recording Protocol               May 2012


   [RFC4585]  Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey,
              "Extended RTP Profile for Real-time Transport Control
              Protocol (RTCP)-Based Feedback (RTP/AVPF)", RFC 4585,
              July 2006.

   [RFC4961]  Wing, D., "Symmetric RTP / RTP Control Protocol (RTCP)",
              BCP 131, RFC 4961, July 2007.

   [RFC5104]  Wenger, S., Chandra, U., Westerlund, M., and B. Burman,
              "Codec Control Messages in the RTP Audio-Visual Profile
              with Feedback (AVPF)", RFC 5104, February 2008.

   [RFC5124]  Ott, J. and E. Carrara, "Extended Secure RTP Profile for
              Real-time Transport Control Protocol (RTCP)-Based Feedback
              (RTP/SAVPF)", RFC 5124, February 2008.

   [RFC5168]  Levin, O., Even, R., and P. Hagendorf, "XML Schema for
              Media Control", RFC 5168, March 2008.

   [RFC5761]  Perkins, C. and M. Westerlund, "Multiplexing RTP Data and
              Control Packets on a Single Port", RFC 5761, April 2010.

   [RFC6222]  Begen, A., Perkins, C., and D. Wing, "Guidelines for
              Choosing RTP Control Protocol (RTCP) Canonical Names
              (CNAMEs)", RFC 6222, April 2011.

   [RFC6263]  Marjou, X. and A. Sollaud, "Application Mechanism for
              Keeping Alive the NAT Mappings Associated with RTP / RTP
              Control Protocol (RTCP) Flows", RFC 6263, June 2011.


Authors' Addresses

   Leon Portman
   NICE Systems
   8 Hapnina
   Ra'anana  43017
   Israel

   Email: leon.portman@nice.com











Portman, et al.         Expires November 9, 2012               [Page 33]

Internet-Draft         Session Recording Protocol               May 2012


   Henry Lum (editor)
   Genesys
   1380 Rodick Road, Suite 200
   Markham, Ontario  L3R4G5
   Canada

   Email: henry.lum@genesyslab.com


   Charles Eckel
   Cisco
   170 West Tasman Drive
   San Jose, CA 95134
   United States

   Email: eckelcu@cisco.com


   Alan Johnston
   Avaya
   St. Louis, MO  63124

   Email: alan.b.johnston@gmail.com


   Andrew Hutton
   Siemens Enterprise Communications
   Brickhill Street
   Milton Keynes  MK15 0DJ
   United Kingdom

   Email: andrew.hutton@siemens-enterprise.com



















Portman, et al.         Expires November 9, 2012               [Page 34]
