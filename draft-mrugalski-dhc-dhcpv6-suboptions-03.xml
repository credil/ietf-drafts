<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629bis.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-mrugalski-dhc-dhcpv6-suboptions-03"
     updates="3315"
     ipr="trust200902">
  <front>
    <title abbrev="Requesting Suboptions in DHCPv6">Requesting
    Suboptions in DHCPv6</title>

    <author fullname="Tomasz Mrugalski" initials="T" surname="Mrugalski">
      <organization abbrev="ISC">Internet Systems Consortium, Inc.
      </organization>

      <address>
	<postal>
	  <street>950 Charter Street</street>
	  <city>Redwood City</city>
	  <region>CA</region>
	  <code>94063</code>
	  <country>USA</country>
	</postal>
	<phone>+1 650 423 1345</phone>
        <email>tomasz.mrugalski@gmail.com</email>
      </address>
    </author>

    <date month="March" year="2012" />
    <abstract>
      <t>DHCPv6 clients may use Option Request Option (ORO) defined in 
      <xref target="RFC3315">RFC3315</xref> to
      specify, which options they would like to have configured by
      DHCPv6 servers. Clients may also be interested in specific
      options that do not appear in DHCPv6 message directly (top-level
      options), but rather as nested options or sub-options
      (i.e. options conveyed within other options). This document clarifies
       how to use already defined ORO to request specific options within
      scopes other than top-level and introduces new option that signals
      support for per-option ORO. This document updates RFC3315.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>There are 2 ways a DHCPv6 client can inform a server about
      its intent to have an option configured. The first (mandatory)
      way is to send Option Request Option (ORO), defined in <xref
      target="RFC3315"/>. The second way (optional, can be used as an
      addition to the first method) is to send the actual requested
      option to provide hints to a server.</t>

      <t>Clients may also be interested in receiving specific
      sub-options (i.e. options that do not appear in DHCPv6 messages
      directly, but rather within other options). Unfortunately, there
      is no clear way for clients to request such
      sub-options. <xref target="RFC3315"/> does not
      provide any guidance regarding such problem. This document
      clarifies how clients should request sub-options.</t>
    </section>

    <section title="Terminology">
      <t>This section defines terms used in this document.</t>
      <t>Option - Any DHCPv6 Option, defined according to format
      specified in <xref target="RFC3315"/>. Option may appear in
      DHCPv6 message directly or within other options.</t>
      <t>Top-Level Option - an option that appears in DHCPv6
      directly. Most existing options are top-level options.</t>
      <t>Sub-Option - An option that appears not as top-level
      option, but rather within other option. An example of such
      option is IAADDR that may only appear within IA_NA or IA_TA
      options. Sub-options are sometimes referred to as nested
      options.</t>
      <t>Scope - Any place (message or option) that is allowed to
      convey DHCPv6 options. Examples of scope are top-level (options
      conveyed directly within DHCPv6 message), IA_NA (options
      conveyed within specific instance of IA_NA option), or IA_PD
      (options conveyed within specific instance of IA_PD option).</t>
    </section>

    <section title="Suboption Request Procedure">
      <t>Clients that want specific sub-option provided by the server,
      MAY include ORO within requested scope. However, many server
      implementations may not support it. Therefore client SHOULD send
      SUBOPT_ORO option code in ORO, when sending its message. If
      server is configured to support per-option ORO, it will return
      SUBOPT_ORO option. Presence of this option indicates that server
      supports per-option ORO. In such case client SHOULD include ORO
      in sent options to request specific suboptions. For example, if
      client expects to have suboption FOO configured in IA_NA, it
      should transmit IA_NA option that contains ORO. This ORO should
      convey a FOO option code and possibly other options requested
      within that scope.</t>

      <t>Client that did not receive SUBOPT_ORO assumes that server
      does not support per-option ORO and SHOULD NOT send ORO within
      other option and limit itself to sending ORO in top level, as
      specified in Section 22.7 of <xref target="RFC3315"/>.</t>

      <t>Client MAY include several instances of ORO, one for each
      scope. Client MUST NOT include more than one ORO in each
      scope.</t>
      
      <t>Client MUST include ORO in sent messages directly as
      specified in Section 22.7 of <xref target="RFC3315"/> to request
      top-level options.</t>
    </section>

    <section title="Suboption Option Request Option">
      <t>This option is returned by a server to inform client that it
      is able to process ORO within other options. Server that
      supports per option ORO MUST send this option if requested by
      client and MAY send it, even when not requested.</t>
        
      <t>Clients SHOULD request this option to discover if server is
      able to process ORO sent within other options.</t>

      <figure align="center" anchor="img-option-soro" 
              title="Suboption Option Request Option">
        <preamble></preamble>
        <artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|      OPTION_SUBOPT_ORO        |         option-length (0)     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]>
        </artwork>
      </figure>
      <t>
        <list style="symbols">
          <t>option-code: OPTION_SUBOPT_ORO (TBD)</t>
          
          <t>option-length: 0</t>
        </list>
      </t>
    </section>

    <section title="Justification">
      <t>As DHCPv6 protocol evolves and continues to be used to
      configure increasingly complex features, number of nested
      options will increase. To avoid each new document repeating the
      same sub-option request procedure, it seems reasonable to define
      such uniform procedure now. Even worse, such documents may
      propose different ways of requesting different options. This
      would considerably complicate server implementations.</t>

      <t>Another alternative possible approach would be to simply use
      ORO as it is already defined.  Client could include single
      instance of ORO to express desire to receive specific
      suboptions. Several existing server implementations deal with
      all options in an uniform way. Using top-level ORO to request
      suboptions would possibly cause server to misplace requested
      options (i.e. to place them as top-level option rather than
      suboption). Avoiding such pitfalls, would complicate server
      implementation, as servers would have to be configured with
      extra information regarding each option (where does specific
      option is supposed to appear - top level or as suboption). For
      example, in case when client requested PD_EXCLUDE and
      DNS_SERVERS options, server would have to handle each requested
      option differently and put one option inside an IAPREFIX option,
      while the other option directly in a message.</t>

      <t>Using ORO as top-level option has the drawback of being
      global, i.e. affecting all options. In certain situations, it
      may be useful to be able to limit option requests to certain
      instances of an option. For example, requesting router that
      needs two prefixes may request PD_EXCLUDE only in first IA_PD
      option, but not in the second. Such flexibility is not available
      when using only "classic" ORO.</t>
    </section>
    
    <section anchor="client" title="DHCPv6 Client Behavior">
      <t>A client that is interested in specific suboptions SHOULD
      request SUBOPT_ORO option, when sending ORO in its SOLICIT,
      REBIND or INFORMATION-REQUEST messages. Client MAY request
      SUBOPT_ORO in other transmitted messages.</t>
      <t>If a client receives SUBOPT_ORO option, then sending server
      supports per-option ORO. In such case, an addition to standard
      behavior defined in <xref target="RFC3315"/> client MAY include
      ORO in each option that it would like to receive suboptions in.
      For example, if client wants to receive suboption FOO in IA_NA
      option, it SHOULD transmit IA_NA option that contains a single
      ORO with FOO option code.</t>

      <t>A client SHOULD NOT send ORO within other options, if the
      server didn't return SUBOPT_ORO option.</t>
    </section>
    
    <section anchor="server" title="DHCPv6 Server Behavior">
      <t>Server processes the message received from client in a
      regular way, as explained in <xref target="RFC3315"/>. Server
      that supports per option ORO, MUST send SUBOPT_ORO option if
      requested by client and MAY send it, even when not requested.</t>

      <t>Server that supports this mechanism performs additional
      processing. For each option that is allowed to have suboptions
      (i.e. for each scope), server checks if there is ORO
      present. For each ORO present, server appends requested options
      if it is configured to do so.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>IANA is kindly requested to allocate DHCPv6 option code TBD
      to the OPTION_SUBOPT_ORO. This value should be added to the
      DHCPv6 option code space defined in Section 24.3 of <xref
      target="RFC3315"/>.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>TBD</t>
    </section>

    <section title="Acknowledgements">
      <t>Author would like to thank Bernie Volz, Jouni Korhonen, Ole
      Troan and Ted Lemon for their insightful comments.</t>

      <t>This work has been partially supported by Department of
      Computer Communications (Gdansk University of Technology) and by
      the Polish Ministry of Science and Higher Education under the
      European Regional Development Fund, Grant  No. 
      POIG.01.01.02-00-045/09-00 (Future Internet Engineering
      Project).</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>
      <?rfc include="reference.RFC.3315"?>
    </references>
    <!--
    <references title="Informative References">
      <?rfc include='http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-mif-dhcpv6-route-option-03'?>
      <?rfc include='http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-dhc-pd-exclude-03'?>
      <?rfc include='http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-mrugalski-dhc-dhcpv6-4rd-00'?>
    </references> -->

    <!--
    <references title="Informative References">

    </references> -->
  </back>
</rfc>
