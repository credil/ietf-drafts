<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="no" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="yes" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->

<rfc category="info" docName="draft-dthakore-tls-authz-02" ipr="trust200902" submissionType="independent">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="TLS Auth Using DTCP">Transport Layer Security (TLS) Authorization Using DTCP Certificate</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="D. Thakore" initials="D." surname="Thakore">
      <organization abbrev="CableLabs">Cable Television Laboratories, Inc.</organization>
      <address>
        <postal>
          <street>858 Coal Creek Circle</street>
          <city>Louisville</city>
          <region>CO</region>
          <code>80023</code>
          <country>USA</country>
        </postal>
        <email>d.thakore@cablelabs.com</email>
        </address>
    </author>
    <date month="January" year="2013" />
    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->
    <area>Security</area>    
    <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.  
	      If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->
    <workgroup>Transport Layer Security</workgroup>
    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->    
    <keyword>TLS</keyword>
    <keyword>SupplementalData</keyword>
    <keyword>DTCP</keyword>
    
    <abstract>
      <t>
        This document specifies the use of DTCP certificate as an authorization extension in the 
        Transport Layer Security Handshake Protocol, according to guidelines in RFC 5878. Extensions 
        carried in the client and server Hello messages confirm that both parties support the desired 
        authorization data types. Then if supported by both the client and server, DTCP certificates 
        are exchanged in the supplemental data handshake TLS handshake message as specified in RFC4680.
      </t>
    </abstract>
    
  </front>

  <!-- ***** MAIN MATTER ***** -->
  <middle>

    <section title="Introduction">
      <t>
        The Transport Layer Security (TLS) protocol (<xref target="RFC2246">TLS1.0</xref>, 
        <xref target="RFC4346">TLS1.1</xref>, <xref target="RFC5246">TLS1.2</xref>) is being used
        in an increasing variety of operational environments, the most common among which is its use 
        in securing HTTP traffic (<xref target="RFC2818"></xref>). 
        <xref target="AUTHZ">RFC 5878</xref> introduces extensions that enable TLS to operate
        in environments where authorization information needs to be exchanged between the client
        and the server before any protected data is exchanged. The use of these TLS authorization
        extensions is especially attractive since it can allow the client and server to
        determine the type of protected data to exchange based on the authorization information 
        received in the extensions.
      </t>
      
      <t>
        A number of consumer electronics devices such as TV's, tablets, game consoles, set-top boxes and
        other multimedia devices contain <xref target="DTLA">Digital Transmission Licensing Administrator</xref>
        issued <xref target="DTCP">Digital Transmission Content Protection</xref> certificates. These certificates
        are used for link protection over various types of links like <xref target="DTCP-IP">DTCP over IP</xref>
        to securely transmit premium audio-visual content between devices. These DTCP certificates can also be
        used to verify device functionality, besides being used to protect audio-visual content.                
      </t>
            
      <t>
        This document describes the format and necessary identifiers to exchange DTCP certificates within the
        supplemental data message (see <xref target="SuppData"></xref>) while negotiating a TLS exchange. 
        The DTCP certificates are then used for authorization independent of its use
        for content protection and the corresponding DTCP Authentication and Key Exchange (AKE) protocol. 
        This authorization allows a client and/or server to perform certain
        actions or provide specific services. The actual semantics of the authorization decision by the client/server
        are beyond the scope of this document. The DTCP certificate can be cryptographically tied to the
        X.509 certificate being used during the TLS tunnel establishment by an <xref target="DTCP">EC-DSA</xref>
        signature. 
      </t>
      
      <section title="Use Case for using DTCP Certificates">
        <t>
          As mentioned above, the primary use of DTCP Certificates in consumer electronics devices (eg. TV's) is for 
          secure transmission of audio-visual content. The Authentication and Key Exchange (AKE) protocol defined in
          <xref target="DTCP"></xref> is used to exchange DTCP Certificates and allows a device to be identified and 
          authenticated based on the information in the DTCP Certificate. However these devices also have additional
          functionality (eg. HTML5 User Agents, web enabled apps) that is distinct from its capability to transmit and
          play audio-visual content. The mechanism outlined in this document allows a device to authenticate and 
          authorize itself using its DTCP Certificate when accessing services over the internet (eg. web app on a TV 
          accessing some service over HTTPS). This allows reusing an already provisioned credential for different 
          services that are delivered over TLS. 
        </t>
      </section>

      <section title="Conventions">
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
          "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be 
          interpreted as described in <xref target="RFC2119">RFC 2119</xref>.
        </t>
      </section>
      
    </section>
    
    <section title="Overview" anchor="overview">
      
      <section title="Overview of DTCP Certificates">
        
        <t>
          DTCP certificates are issued by <xref target="DTLA"></xref> for compliant devices and come in three general
          variations (see <xref target="DTCP">Section 4.2.3.1 of the DTCP Specification</xref>)
          <list style="hanging" hangIndent="4">
            <t hangText="Restricted Authentication device certificate format (Format 0):">
              Typically issued to devices with limited computation resources. 
              <vspace />
            </t>
            <t hangText="Baseline Full Authentication device certificate format (Format 1):">
              This is the most commonly issued certificate format. Format 1 certificates include a unique Device ID
              and device EC-DSA public/private key pair generated by the DTLA. 
              (<xref target="DTCP">See Section 4.3 of DTCP</xref>)
              <vspace />
            </t>
            <t hangText="Extended Full Authentication device certificate format (Format 2):">
              This is issued to devices that possess additional functions (eg. additional channel ciphers,
              specific device properties). The presence of these additional functions is indicated by the device
              capability mask as specified in <xref target="DTCP">Section 4.2.3.2 of the DTCP specification</xref>. 
              Format 2 certificates also include a unique Device ID and device EC-DSA public/private key pair generated 
              by the DTLA. (<xref target="DTCP">See Section 4.3 of DTCP</xref>)
              <vspace />
            </t>
          </list>
          The mechanism specified in this document allows only Format 1 and Format 2 type DTCP certificates to be 
          exchanged in the supplemental data message since it requires the use of the EC-DSA private key associated 
          with the certificate.
        </t>
        
      </section>
      
      <section title="Overview of Supplemental Data handshake">
        
        <t>
          <xref target="sd_single_exchange">Figure 1</xref> illustrates the exchange of 
          SupplementalData message during the TLS handshake as specified in
          <xref target="SuppData">RFC4680</xref> and is repeated here for convenience.
        </t>
        
        <figure align="left" anchor="sd_single_exchange">
          <preamble>
            TLS handshake message exchange with SupplementalData <xref target="SuppData"></xref>          
          </preamble>
          <artwork>
            <![CDATA[
            
     Client                                               Server
     
     ClientHello (with extensions) -------->
     
                                    ServerHello(with extensions)
                                               SupplementalData*
                                                    Certificate*
                                              ServerKeyExchange*
                                             CertificateRequest*
                                  <--------      ServerHelloDone
                                  
     SupplementalData*
     Certificate*
     ClientKeyExchange
     CertificateVerify*
     [ChangeCipherSpec]
     Finished                     -------->
                                              [ChangeCipherSpec]
                                  <--------             Finished
     Application Data             <------->     Application Data
     
     
     *  Indicates optional or situation-dependent messages that are
        not always sent.
        
     [] Indicates that ChangeCipherSpec is an independent TLS 
        protocol content type; it is not a TLS handshake message.
        
          ]]>
          </artwork>
        </figure>
        
      </section>
      
      <section title="Overview of authorization extensions">
        <t>
          <xref target="AUTHZ">RFC5878</xref> defines two authorization extension types
          that are used in the ClientHello and ServerHello messages and are repeated 
          below for convenience.
          <figure>
            <artwork>
              <![CDATA[
      enum {
        client_authz(7), server_authz(8), (65535)
      } ExtensionType;
              ]]>
            </artwork>
          </figure>
          
          A client uses the client_authz and server_authz extensions in the ClientHello
          message to indicate that it will send client authorization data and receive
          server authorization data respectively in the SupplementalData messages. 
          A server uses the extensions in a similar manner in its ServerHello message. 
          <xref target="AUTHZ">RFC5878</xref> also establishes
          a registry that is maintained by IANA for registering authorization data formats.
          This document defines a new authorization data type that is used in both 
          the client_authz and server_authz extensions and allows the client and
          server to exchange DTCP certificates in the SupplementalData message. 
        </t>  
      </section>
      
      <section title="Overview of supplemental data usage for authorization">
        <t>
          Section 3 of <xref target="AUTHZ">RFC5878</xref> specifies the syntax of the
          supplemental data message when carrying the authz_data message that is
          negotiated in the client_authz and/or server_authz types. 
          The syntax is repeated here for convenience.
          <figure>
            <artwork>
              <![CDATA[
              
       enum {
          authz_data(16386), (65535)
       } SupplementalDataType;
      
       struct {
          SupplementalDataType supplemental_data_type;
          select(SupplementalDataType) {
             case authz_data:  AuthorizationData;
          }
       } SupplementalData;              
              
              ]]>
            </artwork>
          </figure>
          
          This document defines a new authorization data format that is used in the
          authz_data message when sending DTCP Authorization data.
        </t>
      </section>
      
    </section>

    <!-- This PI places the pagebreak correctly (before the section title) in the text output. -->

    <?rfc needLines="8" ?>
    
    <section title="DTCP Authorization Data Format" anchor="dtcp_authz">
      <section title="DTCP Authorization Type" anchor="dtcp_type">
        <t>
          The DTCP Authorization type definition in the TLS Authorization Data 
          Formats registry is:
        </t>
      <figure>
        <artwork>
          <![CDATA[
          
       dtcp_authorization(TBA); 
       
          ]]>          
        </artwork>
      </figure>
      </section>      
      
      <section title="DTCP Authorization Data" anchor="dtcp_data">
        <t>
          The DTCP Authorization data SHALL be sent in the authz_data message when the authorization
          data type is dtcp_authorization. The syntax of the authorization data is:
        </t>
        <figure>          
          <artwork>
            <![CDATA[
            
      struct {          
          opaque random_bytes[32];
      } RandomNonce;

      struct {          
          opaque DTCPCert<1..2^24-1>;
          [[opaque ASN.1Cert<1..2^24-1>]];
          opaque signature<1..2^16-1>;
      } DigitallySigned;
              
      struct {
          RandomNonce nonce;
          [[DigitallySigned certs]];   
      } dtcp_authz_data;
            
            ]]>          
          </artwork>
        </figure>
        <t>
          RandomNonce - consists of 32 bytes generated by a secure random number generator.
          The dtcp_authz_data message MUST always contain a RandomNonce to avoid replay attacks.
        </t>
        <t>
          If the ASN.1 Certificate is being sent in the structure above, it 
          MUST be the same as the sender's certificate that will be sent in 
          the Certificate or ClientCertificate message.
        </t>
        <t>
          DigitallySigned - contains the DTCP Certificate and the optional ASN.1 
          Certificate. This is then followed by a digital signature covering the DTCP Certificate 
          and the ASN.1 certificate if it is present. The signature is generated using the 
          private key associated with the DTCP certificate using an Elliptic 
          Curve Digital Signature Algorithm (EC-DSA) as specified in <xref target="DTCP"></xref>.
          This signature provides proof of the possession of the private key by the sender.
          A sender sending its own DTCP Certificate MUST populate the certs field. 
        </t>
      </section>
      
      <section title="Usage rules for clients to exchange DTCP Authorization data">
        <t>
          A client MUST include both the client_authz and server_authz extensions in the
          extended client hello message when indicating its desire to exchange DTCP authorization data
          with the server. Additionally the client MUST use the authorization data type specified
          in <xref target="dtcp_type"></xref> in the extension_data field to specify the format
          of the authorization data. A client will receive the server's dtcp_authz_data before
          it sends its own dtcp_authz_data. When sending its own dtcp_authz_data message, the client
          MUST use the same RandomNonce that it received in the server's dtcp_authz_data message.
          A client MAY include its ASN.1 Certificate in the certs field to cryptographically tie
          its dtcp_authz_data with the TLS session being established.
        </t>
      </section>

      <section title="Usage rules for servers to exchange DTCP Authorization data">
        <t>
          A server MUST respond with both the client_authz and server_authz extensions in the
          extended server hello message when indicating its desire to exchange dtcp_authorization data
          with the client. Additionally the server MUST use the authorization data type specified
          in <xref target="dtcp_type"></xref> in the extension_data field to specify the format
          of the dtcp_authorization data. A server MUST generate and populate the RandomNonce in
          the dtcp_authz_data message. If the client's hello message does not contain both the
          client_authz and server_authz extensions with dtcp_authorization type, the server SHALL
          NOT include support for dtcp_authorization data in its hello message.
          A server MAY include its ASN.1 Certificate in the certs field to cryptographically tie
          its dtcp_authz_data with the TLS session being established. 
        </t>
      </section>
      
      <section anchor="Errors" title="Alert Messages">
        <t>
          This document reuses TLS Alert messages for any errors that arise during
          authorization processing, while preserving the AlertLevels as
          specified in <xref target="AUTHZ"></xref>. Additionally the following
          AlertDescription values SHALL be used to report errors in dtcp_authorization processing:
        </t>
        <figure>
          <artwork>
            <![CDATA[
        
        unsupported_extension:
          In dtcp_authorization processing a client uses this when 
          it receives a server hello message that indicates support
          for only one of client_authz or server_authz extension.
          This message is always fatal.
        
            ]]>            
          </artwork>
        </figure>        
      </section>
      
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>
        This document derives its structure and much of its content from 
        <xref target="SuppData"></xref>, <xref target="AUTHZ"></xref> and
        <xref target="RFC6042"></xref>.
      </t>      
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>
        This document requires a new entry in the IANA-maintained TLS 
        Authorization Data Formats registry, dtcp_authorization(TBA).
        This registry is defined in <xref target="AUTHZ"></xref>.
      </t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
        In cases where the SupplementalData information is sensitive, the double
        handshake technique described in <xref target="SuppData"></xref> can
        be used to provide protection for the SupplementalData information. 
        The double handshake specified in <xref target="SuppData"></xref> assumes
        that the client knows the context of the TLS session that is being set up and
        uses the authorization extensions as needed. <xref target="sd_double_exchange"></xref>
        illustrates a variation of the double handshake that addresses the case
        where the client may not have a priori knowledge
        that it will be communicating with a server capable of exchanging
        dtcp_authz_data (typical for https usages based on <xref target="RFC2818"></xref>).
        In <xref target="sd_double_exchange">Figure 2</xref> below client's Hello messages
        always include support for the client_authz and server_authz extensions. 
        The server simply establishes an encrypted TLS tunnel with the client in the
        first handshake by not indicating support for any authz extensions. The server
        initiates a second handshake by sending a HelloRequest. The second handshake
        will include server's support for authz extensions which will result in 
        SupplementalData being exchanged.
      </t>
      <t>
        The double handshake mechanism is vulnerable to the TLS
        MITM Renegotiation exploit as explained in <xref target="RFC5746"></xref>.
        In order to address this vulnerability, clients and servers MUST use the 
        secure_renegotiation extension as specified in <xref target="RFC5746"></xref>
        when performing a double handshake.
      </t>
      
      <figure align="left" anchor="sd_double_exchange">
        <preamble>
          Double Handshake to protect Supplemental Data
        </preamble>
        <artwork>
          <![CDATA[
            
            
  Client                                                   Server
   
  ClientHello (w/ extensions) -------->                            |0
                                ServerHello (no authz extensions)  |0
                                                     Certificate*  |0
                                               ServerKeyExchange*  |0
                                              CertificateRequest*  |0
                              <--------           ServerHelloDone  |0
  Certificate*                                                     |0
  ClientKeyExchange                                                |0
  CertificateVerify*                                               |0
  [ChangeCipherSpec]                                               |0
  Finished                    -------->                            |1
                                               [ChangeCipherSpec]  |0
                              <--------                  Finished  |1
                              <--------              HelloRequest  |1
  ClientHello (w/ extensions) -------->                            |1
                                      ServerHello (w/ extensions)  |1
                                                SupplementalData*  |1
                                                     Certificate*  |1
                                               ServerKeyExchange*  |1
                                              CertificateRequest*  |1
                              <--------           ServerHelloDone  |1
  SupplementalData*                                                |1
  Certificate*                                                     |1
  ClientKeyExchange                                                |1
  CertificateVerify*                                               |1
  [ChangeCipherSpec]                                               |1
  Finished                    -------->                            |2
                                               [ChangeCipherSpec]  |1
                              <--------                  Finished  |2
  Application Data            <------->          Application Data  |2
  
  *  Indicates optional or situation-dependent messages.
            
            ]]>            
        </artwork>
      </figure>
      <t>
        There are no additional security considerations beyond those discussed in
        <xref target="DTCP"></xref>, <xref target="DTCP-IP"></xref> and
        <xref target="AUTHZ"></xref>.
      </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;
      
      <!-- References below added for this RFC -->
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2246.xml"?-->
      <reference anchor="RFC2246" target="http://tools.ietf.org/html/rfc2246">
        <front>
          <title>
            The TLS Protocol Version 1.0
          </title>
          <author initials="T." surname="Dierks" fullname="Tim Dierks">
            <organization>Certicom</organization>
            <address>
              <email>tdierks@certicom.com</email>
            </address>
          </author>
          <author initials="C." surname="Allen" fullname="Christopher Allen">
            <organization>Certicom</organization>
            <address>
              <email>callen@certicom.com</email>
            </address>
          </author>
          <date year="1999" month="January"/>
        </front>
        <seriesInfo name="RFC" value="2246"/>        
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4346.xml"?-->
      <reference anchor="RFC4346" target="http://tools.ietf.org/html/rfc4346">
        <front>
          <title>
            The TLS Protocol Version 1.1
          </title>
          <author initials="T." surname="Dierks" fullname="T. Dierks">
            <organization/>
          </author>
          <author initials="E." surname="Rescorla" fullname="E. Rescorla">
            <organization/>
          </author>
          <date year="2006" month="April"/>
        </front>
        <seriesInfo name="RFC" value="4346"/>
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml"?-->
      <reference anchor="RFC5246" target="http://tools.ietf.org/html/rfc5246">
        <front>
          <title>
            The TLS Protocol Version 1.2
          </title>
          <author initials="T." surname="Dierks" fullname="T. Dierks">
            <organization/>
          </author>
          <author initials="E." surname="Rescorla" fullname="E. Rescorla">
            <organization/>
          </author>
          <date year="2008" month="August"/>
        </front>
        <seriesInfo name="RFC" value="5246"/>
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5746.xml"?-->
      <reference anchor="RFC5746" target="http://tools.ietf.org/html/rfc5746">
        <front>
          <title>
            Transport Layer Security (TLS) Renegotiation Indication Extension
          </title>
          <author initials="E." surname="Rescorla" fullname="E. Rescorla">
            <organization/>
          </author>
          <author initials="M." surname="Ray" fullname="M. Ray">
            <organization/>
          </author>
          <author initials="S." surname="Dispensa" fullname="S. Dispensa">
            <organization/>
          </author>
          <author initials="N." surname="Oskov" fullname="N. Oskov">
            <organization/>
          </author>
          <date year="2010" month="February"/>
        </front>
        <seriesInfo name="RFC" value="5746"/>
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4680.xml"?-->
      <reference anchor="SuppData" target="http://tools.ietf.org/html/rfc4680">
        <front>
          <title>TLS Handshake Message for Supplemental Data</title>
          <author initials="S." surname="Santesson">
            <organization>Microsoft</organization>
          </author>
          <date year="2006" month="September"/>
        </front>
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5878.xml"?-->
      <reference anchor="AUTHZ" target="http://tools.ietf.org/html/rfc5878">        
        <front>
          <title>
            Transport Layer Security (TLS) Authorization Extensions            
          </title>
          <author initials="M." surname="Brown">
            <organization>RedPhone Security</organization>
          </author>
          <author initials="R." surname="Housley">
            <organization>Vigil Security</organization>
          </author>
          <date year="2010" month="May"/>
        </front>
        <seriesInfo name="RFC" value="5878"/>
      </reference>
      
      <reference anchor="DTCP" target="http://www.dtcp.com/documents/dtcp/info-20111214-dtcp-v1-rev-1-p-7.pdf">
        <front>
          <title>Digital Transmission Content Protection</title>
          <author>
            <organization>Digital Transmission Licensing Administrator</organization>
          </author>
          <date/>
        </front>
      </reference>
      
      <reference anchor="DTCP-IP" target="http://www.dtcp.com/documents/dtcp/info-20111214-dtcp-v1se-ip-rev-1-p-4-ed-1.pdf">
        <front>
          <title>DTCP Volume 1 Supplement E</title>
          <author>
            <organization>Digital Transmission Licensing Administrator</organization>
          </author>
          <date/>
        </front>
      </reference>
      
    </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->
      &RFC2629;
      &RFC3552;
      &RFC5226;
            
      <reference anchor="DTLA" target="http://www.dtcp.com">
        <front>
          <title>DTLA</title>
          <author>
            <organization>Digital Transmission Licensing Administrator</organization>
          </author>
          <date/>
        </front>
      </reference>
      
      <reference anchor="RFC2818" target="http://tools.ietf.org/html/rfc2818">
        <front>
          <title>HTTP over TLS</title>
          <author initials="E." surname="Rescorla">
            <organization>RTFM, Inc.</organization>
          </author>
          <date year="2000" month="May"/>
        </front>
        <seriesInfo name="RFC" value="2818"/>
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6042.xml"?-->
      <reference anchor="RFC6042" target="http://tools.ietf.org/html/rfc6042">
        <front>
          <title>
            Transport Layer Security (TLS) Authorization Using KeyNote            
          </title>
          <author initials="A." surname="Keromytis">
            <organization>Columbia University</organization>
          </author>
          <date month="October" year="2010"/>
        </front>
        <seriesInfo name="RFC" value="6042"/>
      </reference>    
 
    </references>

    <section anchor="app-additional" title="Additional Stuff">
      <t>This becomes an Appendix.</t>
    </section>

<!-- Change Log

v00 2012-10-11  EBD   Initial version
  
-->
  </back>
</rfc>
