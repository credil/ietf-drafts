<?xml version="1.0" encoding="us-ascii"?>
<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc iprnotified="yes" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc colonspace="yes" ?>
<?rfc rfcedstyle="no" ?>
<?rfc tocdepth="4"?>
<rfc category="std" docName="draft-jennings-senml-10" ipr="trust200902">
  <front>
    <title abbrev="Sensor Markup">Media Types for Sensor Markup Language
    (SENML)</title>

    <author fullname="Cullen Jennings" initials="C." surname="Jennings">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>170 West Tasman Drive</street>

          <city>San Jose</city>

          <region>CA</region>

          <code>95134</code>

          <country>USA</country>
        </postal>

        <phone>+1 408 421-9990</phone>

        <email>fluffy@cisco.com</email>
      </address>
    </author>

    <author fullname="Zach Shelby" initials="Z" surname="Shelby">
      <organization>Sensinode</organization>

      <address>
        <postal>
          <street>Kidekuja 2</street>

          <city>Vuokatti</city>

          <code>88600</code>

          <country>FINLAND</country>
        </postal>

        <phone>+358407796297</phone>

        <email>zach@sensinode.com</email>
      </address>
    </author>

    <author fullname="Jari Arkko" initials="J" surname="Arkko">
      <organization>Ericsson</organization>

      <address>
        <postal>
          <street></street>

          <city>Jorvas</city>

          <code>02420</code>

          <country>Finland</country>
        </postal>

        <email>jari.arkko@piuha.net</email>
      </address>
    </author>

    <date year="2012" month="October" day="22" />

    <area>APPS</area>

    <abstract>
      <t>This specification defines media types for representing simple sensor
      measurements and device parameters in the Sensor Markup Language
      (SenML). Representations are defined in JavaScript Object Notation
      (JSON), eXtensible Markup Language (XML) and Efficient XML Interchange
      (EXI), which share the common SenML data model. A simple sensor, such as
      a temperature sensor, could use this media type in protocols such as
      HTTP or CoAP to transport the measurements of the sensor or to be
      configured.</t>
    </abstract>
  </front>

  <middle>
    <section title="Overview">
      <t>Connecting sensors to the internet is not new, and there have been
      many protocols designed to facilitate it. This specification defines new
      media types for carrying simple sensor information in a protocol such as
      HTTP or CoAP<xref target="I-D.ietf-core-coap"></xref> called the Sensor
      Markup Language (SenML). This format was designed so that processors
      with very limited capabilities could easily encode a sensor measurement
      into the media type, while at the same time a server parsing the data
      could relatively efficiently collect a large number of sensor
      measurements. There are many types of more complex measurements and
      measurements that this media type would not be suitable for. A decision
      was made not to carry most of the meta data about the sensor in this
      media type to help reduce the size of the data and improve efficiency in
      decoding. Instead meta-data about a sensor resource can be described
      out-of-band using the CoRE Link Format <xref
      target="I-D.ietf-core-link-format"></xref>. The markup language can be
      used for a variety of data flow models, most notably data feeds pushed
      from a sensor to a collector, and the web resource model where the
      sensor is requested as a resource representation (GET
      /sensor/temperature).</t>

      <t>SenML is defined by a data model for measurements and simple
      meta-data about measurements and devices. The data is structured as a
      single object (with attributes) that contains an array of entries. Each
      entry is an object that has attributes such as a unique identifier for
      the sensor, the time the measurement was made, and the current value.
      Serializations for this data model are defined for JSON <xref
      target="RFC4627"></xref>, XML and Efficient XML Interchange (EXI) <xref
      target="W3C.REC-exi-20110310"></xref>.</t>

      <t>For example, the following shows a measurement from a temperature
      gauge encoded in the JSON syntax.</t>

      <figure>
        <artwork><![CDATA[{"e":[{ "n": "urn:dev:ow:10e2073a01080063", "v":23.5, "u":"Cel" }]}
]]></artwork>
      </figure>

      <t>In the example above, the array in the object has a single
      measurement for a sensor named "urn:dev:ow:10e2073a01080063" with a
      temperature of 23.5 degrees Celsius.</t>
    </section>

    <section title="Requirements and Design Goals">
      <t>The design goal is to be able to send simple sensor measurements in
      small packets on mesh networks from large numbers of constrained
      devices. Keeping the total size under 80 bytes makes this easy to use on
      a wireless mesh network. It is always difficult to define what small
      code is, but there is a desire to be able to implement this in roughly 1
      KB of flash on a 8 bit microprocessor. Experience with Google power
      meter and large scale deployments has indicated that the solution needs
      to support allowing multiple measurements to be batched into a single
      HTTP or CoAP request. This "batch" upload capability allows the server
      side to efficiently support a large number of devices. It also
      conveniently supports batch transfers from proxies and storage devices,
      even in situations where the sensor itself sends just a single data item
      at a time. The multiple measurements could be from multiple related
      sensors or from the same sensor but at different times.</t>
    </section>

    <section title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </section>

    <section anchor="semant" title="Semantics">
      <t>Each representation caries a single SenML object that represents a
      set of measurements and/or parameters. This object contains several
      optional attributes described below and a mandatory array of one or more
      entries.</t>

      <t><list style="hanging">
          <t hangText="Base Name"><vspace blankLines="1" />This is a string
          that is prepended to the names found in the entries. This attribute
          is optional.<vspace blankLines="1" /></t>

          <t hangText="Base Time"><vspace blankLines="1" />A base time that is
          added to the time found in an entry. This attribute is
          optional.<vspace blankLines="1" /></t>

          <t hangText="Base Units"><vspace blankLines="1" />A base unit that
          is assumed for all entries, unless otherwise indicated. This
          attribute is optional. <vspace blankLines="1" /></t>

          <t hangText="Version"><vspace blankLines="1" />Version number of
          media type format. This attribute is optional positive integer and
          defaults to 1 if not present.<vspace blankLines="1" /></t>

          <t hangText="Measurement or Parameter Entries"><vspace
          blankLines="1" />Array of values for sensor measurements or other
          generic parameters (such as configuration parameters). If present
          there must be at least one entry in the array.<vspace
          blankLines="1" /></t>
        </list></t>

      <t>Each array entry contains several attributes, some of which are
      optional and some of which are mandatory.</t>

      <t><list style="hanging">
          <t hangText="Name"><vspace blankLines="1" />Name of the sensor or
          parameter. When appended to the Base Name attribute, this must
          result in a globally unique identifier for the resource. The name is
          optional, if the Base Name is present. If the name is missing Base
          Name must uniquely identify the resource. This can be used to
          represent a large array of measurements from the same sensor without
          having to repeat its identifier on every measurement.<vspace
          blankLines="1" /></t>

          <t hangText="Units"><vspace blankLines="1" />Units for a measurement
          value.<vspace blankLines="1" /></t>

          <t hangText="Value"><vspace blankLines="1" />Value of the entry.
          Optional if a Sum value is present, otherwise required. Values are
          represented using three basic data types, Floating point numbers
          ("v" field for "Value"), Booleans ("bv" for "Boolean Value") and
          Strings ("sv" for "String Value"). Exactly one of these three fields
          MUST appear.<vspace blankLines="1" /></t>

          <t hangText="Sum"><vspace blankLines="1" />Integrated sum of the
          values over time. Optional. This attribute is in the units specified
          in the Unit value multiplied by seconds.<vspace
          blankLines="1" /></t>

          <t hangText="Time"><vspace blankLines="1" />Time when value was
          recorded. Optional.<vspace blankLines="1" /></t>

          <t hangText="Update Time"><vspace blankLines="1" />Update time. A
          time in seconds that represents the maximum time before this sensor
          will provide an updated reading for a measurement. This can be used
          to detect the failure of sensors or communications path from the
          sensor. Optional.<vspace blankLines="1" /></t>
        </list></t>

      <t>The SenML format can be extended with further custom attributes
      placed in the base object, or in an entry. Extensions in the base object
      pertain to all entries, whereas extensions in an entry object only
      pertain to that.</t>

      <t>Systems reading one of the objects MUST check for the Version
      attribute. If this value is a version number larger than the version
      which the system understands, the system SHOULD NOT use this object.
      This allows the version number to indicate that the object contains
      mandatory to understand attributes. New version numbers can only be
      defined in RFC which updates this specification or it successors.</t>

      <t>The Name value is concatenated to the Base Name value to get the name
      of the sensor. The resulting name needs to uniquely identify and
      differentiate the sensor from all others. If the object is a
      representation resulting from the request of a URI <xref
      target="RFC3986"></xref>, then in the absence of the Base Name
      attribute, this URI is used as the default value of Base Name. Thus in
      this case the Name field needs to be unique for that URI, for example an
      index or subresource name of sensors handled by the URI.</t>

      <t>Alternatively, for objects not related to a URI, a unique name is
      required. In any case, it is RECOMMENDED that the full names are
      represented as URIs or URNs <xref target="RFC2141"></xref>. One way to
      create a unique name is to include a EUI-48 or EUI-64 identifier (A MAC
      address) or some other bit string that is guaranteed uniqueness (such as
      a 1-wire address) that is assigned to the device. Some of the examples
      in this draft use the device URN type as specified in <xref
      target="I-D.arkko-core-dev-urn"></xref>. UUIDs <xref
      target="RFC4122"></xref> are another way to generate a unique name.</t>

      <t>The resulting concatenated name MUST consist only of characters out
      of the set "A" to "Z", "a" to "z", "0" to "9", "-", ":", ".", or "_" and
      it MUST start with a character out of the set "A" to "Z", "a" to "z", or
      "0" to "9". This restricted character set was chosen so that these names
      can be directly used as in other types of URI including segments of an
      HTTP path with no special encoding. <xref target="RFC5952"></xref>
      contains advice on encoding an IPv6 address in a name.</t>

      <t>If either the Base Time or Time value is missing, the missing
      attribute is considered to have a value of zero. The Base Time and Time
      values are added together to get the time of measurement. A time of zero
      indicates that the sensor does not know the absolute time and the
      measurement was made roughly "now". A negative value is used to indicate
      seconds in the past from roughly "now". A positive value is used to
      indicate the number of seconds, excluding leap seconds, since the start
      of the year 1970 in UTC .</t>

      <t>Representing the statistical characteristics of measurements can be
      very complex. Future specification may add new attributes to provide
      better information about the statistical properties of the
      measurement.</t>
    </section>

    <section title="Associating Meta-data">
      <t>SenML is designed to carry the minimum dynamic information about
      measurements, and for efficiency reasons does not carry more static
      meta-data about the device, object or sensors. Instead, it is assumed
      that this meta-data is carried out of band. For web resources using
      SenML representations, this meta-data can be made available using the
      CoRE Link Format <xref target="I-D.ietf-core-link-format"></xref>.</t>

      <t>The CoRE Link Format provides a simple way to describe Web Links, and
      in particular allows a web server to describe resources it is hosting.
      The list of links that a web server has available, can be discovered by
      retrieving the /.well-known/core resource, which returns the list of
      links in the CoRE Link Format. Each link may contain attributes, for
      example title, resource type, interface description and
      content-type.</t>

      <t>The most obvious use of this link format is to describe that a
      resource is available in a SenML format in the first place. The relevant
      media type indicator is included in the Content-Type (ct=)
      attribute.</t>

      <t>Further semantics about a resource can be included in the Resource
      Type and Interface Description attributes. The Resource Type (rt=)
      attribute is meant to give a semantic meaning to that resource. For
      example rt="outdoor-temperature" would indicate static semantic meaning
      in addition to the unit information included in SenML. The Interface
      Description (if=) attribute is used to describe the REST interface of a
      resource, and may include e.g. a reference to a WADL description <xref
      target="WADL"></xref>.</t>
    </section>

    <section title="JSON Representation (application/senml+json)">
      <t>Root variables:</t>

      <texttable>
        <ttcol align="right">SenML</ttcol>

        <ttcol align="left">JSON</ttcol>

        <ttcol align="left">Type</ttcol>

        <c>Base Name</c>

        <c>bn</c>

        <c>String</c>

        <c>Base Time</c>

        <c>bt</c>

        <c>Number</c>

        <c>Base Units</c>

        <c>bu</c>

        <c>Number</c>

        <c>Version</c>

        <c>ver</c>

        <c>Number</c>

        <c>Measurement or Parameters</c>

        <c>e</c>

        <c>Array</c>
      </texttable>

      <t>Measurement or Parameter Entries:</t>

      <texttable>
        <ttcol align="right">SenML</ttcol>

        <ttcol align="left">JSON</ttcol>

        <ttcol align="left">Notes</ttcol>

        <c>Name</c>

        <c>n</c>

        <c>String</c>

        <c>Units</c>

        <c>u</c>

        <c>String</c>

        <c>Value</c>

        <c>v</c>

        <c>Floating point</c>

        <c>String Value</c>

        <c>sv</c>

        <c>String</c>

        <c>Boolean Value</c>

        <c>bv</c>

        <c>Boolean</c>

        <c>Value Sum</c>

        <c>s</c>

        <c>Floating point</c>

        <c>Time</c>

        <c>t</c>

        <c>Number</c>

        <c>Update Time</c>

        <c>ut</c>

        <c>Number</c>
      </texttable>

      <t>All of the data is UTF-8, but since this is for machine to machine
      communications on constrained systems, only characters with code points
      between U+0001 and U+007F are allowed which corresponds to the
      ASCII<xref target="RFC0020"></xref> subset of UTF-8.</t>

      <t>The root contents MUST consist of exactly one JSON object as
      specified by <xref target="RFC4627"></xref>. This object MAY contain a
      "bn" attribute with a value of type string. This object MAY contain a
      "bt" attribute with a value of type number. The object MAY contain a
      "bu" attribute with a value of type string. The object MAY contain a
      "ver" attribute with a value of type number. The object MAY contain
      other attribute value pairs, and the object MUST contain exactly one "e"
      attribute with a value of type array. The array MUST have one or more
      measurement or parameter objects.</t>

      <t>Inside each measurement or parameter object the "n", "u", and "sv"
      attributes are of type string, the "t" and "ut" attributes are of type
      number, the "bv" attribute is of type boolean, and the "v" and "s"
      attributes are of type floating point. All the attributes are optional,
      but as specified in <xref target="semant"></xref>, one of the "v", "sv",
      or "bv" attributes MUST appear unless the "s" attribute is also present.
      The "v", and "sv", and "bv" attributes MUST NOT appear together.</t>

      <t>Systems receiving measurements MUST be able to process the range of
      floating point numbers that are representable as an IEEE
      double-precision floating-point numbers <xref
      target="IEEE.754.1985"></xref>. The number of significant digits in any
      measurement is not relevant, so a reading of 1.1 has exactly the same
      semantic meaning as 1.10. If the value has an exponent, the "e" MUST be
      in lower case. The mantissa SHOULD be less than 19 characters long and
      the exponent SHOULD be less than 5 characters long. This allows time
      values to have better than micro second precision over the next 100
      years.</t>

      <section title="Examples">
        <section title="Single Datapoint">
          <t>The following shows a temperature reading taken approximately
          "now" by a 1-wire sensor device that was assigned the unique 1-wire
          address of 10e2073a01080063:</t>

          <figure>
            <artwork><![CDATA[
{"e":[{ "n": "urn:dev:ow:10e2073a01080063", "v":23.5 }]}]]></artwork>
          </figure>
        </section>

        <section anchor="co-ex" title="Multiple Datapoints">
          <t>The following example shows voltage and current now, i.e., at an
          unspecified time. The device has an EUI-64 MAC address of
          0024befffe804ff1.</t>

          <figure>
            <artwork><![CDATA[
{"e":[
     { "n": "voltage", "t": 0, "u": "V", "v": 120.1 },
     { "n": "current", "t": 0, "u": "A", "v": 1.2 }],
 "bn": "urn:dev:mac:0024befffe804ff1/"
}]]></artwork>
          </figure>

          <t>The next example is similar to the above one, but shows current
          at Tue Jun 8 18:01:16 UTC 2010 and at each second for the previous 5
          seconds.</t>

          <!-- times generated with date '+%s' ; date -u ; date '+%s'-->

          <figure>
            <artwork><![CDATA[
{"e":[
     { "n": "voltage", "u": "V", "v": 120.1 },
     { "n": "current", "t": -5, "v": 1.2 },
     { "n": "current", "t": -4, "v": 1.30 },
     { "n": "current", "t": -3, "v": 0.14e1 },
     { "n": "current", "t": -2, "v": 1.5 },
     { "n": "current", "t": -1, "v": 1.6 },
     { "n": "current", "t": 0,   "v": 1.7 }],
 "bn": "urn:dev:mac:0024befffe804ff1/",
 "bt": 1276020076,
 "ver": 1,
 "bu": "A"
}]]></artwork>
          </figure>
        </section>

        <section anchor="an-co-ex" title="Multiple Measurements">
          <t>The following example shows humidity measurements from a mobile
          device with an IPv6 address 2001:db8::1, starting at Mon Oct 31
          13:24:24 UTC 2011. The device also provide position data, which is
          provided in the same measurement or parameter array as separate
          entries. Note time is used to for correlating data that belongs
          together, e.g., a measurement and a parameter associated with it.
          Finally, the device also reports extra data about its battery status
          at a separate time.</t>

          <!-- times generated with date '+%s' ; date -u ; date '+%s'-->

          <figure>
            <artwork><![CDATA[
{"e":[
     { "v": 20.0, "t": 0 },
     { "sv": "E 24' 30.621", "u": "lon", "t": 0 },
     { "sv": "N 60' 7.965", "u": "lat", "t": 0 },
     { "v": 20.3, "t": 60 },
     { "sv": "E 24' 30.622", "u": "lon", "t": 60 },
     { "sv": "N 60' 7.965", "u": "lat", "t": 60 },
     { "v": 20.7, "t": 120 },
     { "sv": "E 24' 30.623", "u": "lon", "t": 120 },
     { "sv": "N 60' 7.966", "u": "lat", "t": 120 },
     { "v": 98.0, "u": "%EL", "t": 150 },
     { "v": 21.2, "t": 180 },
     { "sv": "E 24' 30.628", "u": "lon", "t": 180 },
     { "sv": "N 60' 7.967", "u": "lat", "t": 180 }],
 "bn": "http://[2001:db8::1]",
 "bt": 1320067464,
 "bu": "%RH"
}]]></artwork>
          </figure>
        </section>

        <section anchor="rest-ex" title="Collection of Resources">
          <t>The following example shows how to query one device that can
          provide multiple measurements. The example assumes that a client has
          fetched information from a device at 2001:db8::2 by performing a GET
          operation on http://[2001:db8::2] at Mon Oct 31 16:27:09 UTC 2011,
          and has gotten two separate values as a result, a temperature and
          humidity measurement.</t>

          <figure>
            <artwork><![CDATA[
{"e":[
     { "n": "temperature", "v": 27.2, "u": "Cel" },
     { "n": "humidity", "v": 80, "u": "%RH" }],
 "bn": "http://[2001:db8::2]/",
 "bt": 1320078429,
 "ver": 1
}]]></artwork>
          </figure>
        </section>
      </section>
    </section>

    <section anchor="sec-xml-examle"
             title="XML Representation (application/senml+xml)">
      <t>A SenML object can also be represented in XML format as defined in
      this section. The following example shows an XML example for the same
      sensor measurement as in <xref target="co-ex"></xref>.</t>

      <figure>
        <artwork><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<senml xmlns="urn:ietf:params:xml:ns:senml"
       bn="urn:dev:mac:0024befffe804ff1/"
       bt="1276020076"
       ver="1" bu="A">

  <e n="voltage" u="V" v="120.1" />

  <e n="current" t="-5" v="1.2" />

  <e n="current" t="-4" v="1.30" />

  <e n="current" t="-3" v="0.14e1" />

  <e n="current" t="-2" v="1.5" />

  <e n="current" t="-1" v="1.6" />

  <e n="current" t="0" v="1.7" />

</senml>
]]></artwork>
      </figure>

      <t>The RelaxNG schema for the XML is:</t>

      <figure>
        <artwork><![CDATA[
default namespace = "urn:ietf:params:xml:ns:senml"
namespace rng = "http://relaxng.org/ns/structure/1.0"

e = element e { 
  attribute n { xsd:string }?,
  attribute u { xsd:string }?,
  attribute v { xsd:float }?,
  attribute sv { xsd:string }?,
  attribute bv { xsd:boolean }?,
  attribute s { xsd:decimal }?,
  attribute t { xsd:int }?,
  attribute ut { xsd:int }?,
  p*
}

senml =
  element senml {
    attribute bn { xsd:string }?,
    attribute bt { xsd:int }?,
    attribute bu { xsd:string }?,
    attribute ver { xsd:int }?,
    e*
  }

start = senml
]]></artwork>
      </figure>
    </section>

    <section title="EXI Representation (application/senml-exi)">
      <t>For efficient transmission of SenML over e.g. a constrained network,
      Efficient XML Interchange (EXI) can be used. This encodes the XML Schema
      structure of SenML into binary tags and values rather than ASCII text.
      An EXI representation of SenML SHOULD be made using the strict
      schema-mode of EXI. This mode however does not allow tag extensions to
      the schema, and therefore any extensions will be lost in the encoding.
      For uses where extensions need to be preserved in EXI, the non-strict
      schema mode of EXI MAY be used.</t>

      <t>The EXI header option MUST be included. An EXI schemaID options MUST
      be set to the value of "a" indicating the scheme provided in this
      specification. Future revisions to the schema can change this schemaID
      to allow for backwards compatibility. When the data will be transported
      over COAP or HTTP, an EXI Cookie SHOULD NOT be used as it simply makes
      things larger as is redundant to information provided in the
      Content-Type header.</t>

      <t>The following XSD Schema is generated from the RelaxNG and used for
      strict schema guided EXI processing.</t>

      <figure>
        <artwork><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           elementFormDefault="qualified" 
           targetNamespace="urn:ietf:params:xml:ns:senml" 
           xmlns:ns1="urn:ietf:params:xml:ns:senml">

  <xs:element name="e">
    <xs:complexType>
      <xs:attribute name="n" type="xs:string" minOccurs="0"/>
      <xs:attribute name="u" type="xs:string" minOccurs="0"/>
      <xs:attribute name="v" type="xs:float" minOccurs="0"/>
      <xs:attribute name="sv" type="xs:string" minOccurs="0"/>
      <xs:attribute name="bv" type="xs:boolean" minOccurs="0"/>
      <xs:attribute name="s" type="xs:decimal" minOccurs="0"/>
      <xs:attribute name="t" type="xs:int" minOccurs="0"/>
      <xs:attribute name="ut" type="xs:int" minOccurs="0"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="senml">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:e"/>
      </xs:sequence>
      <xs:attribute name="bn" type="xs:string"/>
      <xs:attribute name="bt" type="xs:int"/>
      <xs:attribute name="bu" type="xs:string"/>
      <xs:attribute name="ver" type="xs:int"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
]]></artwork>
      </figure>

      <t>The following shows a hexdump of the EXI produced from encoding the
      following XML example. Note that while this example is similar to the
      first example in <xref target="co-ex"></xref> in JSON format.</t>

      <figure>
        <artwork><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<senml xmlns="urn:ietf:params:xml:ns:senml"
       bn="urn:dev:ow:10e2073a01080063" >
  <e n="voltage" t="0" v="120.1" u="V" />
  <e n="current" t="0" v="1.2" u="A" />
</senml>
]]></artwork>
      </figure>

      <t>Which compresses to the following displayed in hexdump:</t>

      <figure>
        <artwork><![CDATA[
00000000  a0 30 0d 85 01 d7 57 26  e3 a6 46 57 63 a6 f7 73 
00000010  a3 13 06 53 23 03 73 36  13 03 13 03 83 03 03 63 
00000020  36 21 2e cd ed 8e 8c 2c  ec a8 00 00 d5 95 88 4c 
00000030  02 08 4b 1b ab 93 93 2b  73 a2 00 00 34 14 19 00 
00000040  c0                                               
]]></artwork>
      </figure>

      <t>The above example used the bit packed form of EXI but it is also
      possible to use a byte packed form of EXI which can makes it easier for
      a simple sensor to produce valid EXI without really implementing EXI.
      Consider the example of a temperature sensor that produces a value in
      tenths of degrees Celsius over a range of 0.0 to 55.0. = It would
      produce XML SenML file such as:</t>

      <figure>
        <artwork><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<senml xmlns="urn:ietf:params:xml:ns:senml"
       bn="urn:dev:ow:10e2073a01080063" >
  <e n="temp"  v="23.1" u="degC" />
</senml>
]]></artwork>
      </figure>

      <t>The compressed form, using the byte alignment option of EXI, for the
      above XML is the following:</t>

      <figure>
        <artwork><![CDATA[
00000000  a00048806c200200 1d75726e3a646576 |..H.l ...urn:dev|
00000010  3a6f773a31306532 3037336130313038 |:ow:10e2073a0108|
00000020  3030363303010674 656d700306646567 |0063...temp..deg|
00000030  430100e701010001 02               |C........|
]]></artwork>
      </figure>

      <t>A small temperature sensor devices that only generates this one EXI
      file does not really need an full EXI implementation. It can simple hard
      code the output replacing the one wire device ID starting at byte 0x14
      and going to byte 0x23 with it's device ID , and replacing the value
      "0xe7 0x01" at location 0x33 to 0x34 with the current temperature. The
      EXI Specification<xref target="W3C.REC-exi-20110310"></xref> contains
      the full information on how floating point numbers are represented, but
      for the purpose of this sensor, the temperature can be converted to an
      integer in tenths of degrees ( 231 in this example ). EXI stores 7 bits
      of the integer in each byte with the top bit set to one if there are
      further bytes. So the first bytes at location 0x33 is set to low 7 bits
      of the integer temperature in tenths of degrees plus 0x80. In this
      example 231 &amp; 0x7F + 0x80 = 0xE7. The second byte at location 0x34
      is set to the integer temperature in tenths of degrees right shifted 7
      bits. In this example 231 &gt;&gt; 7 = 0x01.</t>
    </section>

    <section title="Usage Considerations">
      <t>The measurements support sending both the current value of a sensor
      as well as the an integrated sum. For many types of measurements, the
      sum is more useful than the current value. For example, an electrical
      meter that measures the energy a given computer uses will typically want
      to measure the cumulative amount of energy used. This is less prone to
      error than reporting the power each second and trying to have something
      on the server side sum together all the power measurements. If the
      network between the sensor and the meter goes down over some period of
      time, when it comes back up, the cumulative sum helps reflect what
      happened while the network was down. A meter like this would typically
      report a measurement with the units set to watts, but it would put the
      sum of energy used in the "s" attribute of the measurement. It might
      optionally include the current power in the "v" attribute.</t>

      <t>While the benefit of using the integrated sum is fairly clear for
      measurements like power and energy, it is less obvious for something
      like temperature. Reporting the sum of the temperature makes it easy to
      compute averages even when the individual temperature values are not
      reported frequently enough to compute accurate averages. Implementors
      are encouraged to report the cumulative sum as well as the raw value of
      a given sensor.</t>

      <t>Applications that use the cumulative sum values need to understand
      they are very loosely defined by this specification, and depending on
      the particular sensor implementation may behave in unexpected ways.
      Applications should be able to deal with the following issues:</t>

      <t><list style="numbers">
          <t>Many sensors will allow the cumulative sums to "wrap" back to
          zero after the value gets sufficiently large.</t>

          <t>Some sensors will reset the cumulative sum back to zero when the
          device is reset, loses power, or is replaced with a different
          sensor.</t>

          <t>Applications cannot make assumptions about when the device
          started accumulating values into the sum.</t>
        </list></t>

      <t>Typically applications can make some assumptions about specific
      sensors that will allow them to deal with these problems. A common
      assumption is that for sensors whose measurement values are always
      positive, the sum should never get smaller; so if the sum does get
      smaller, the application will know that one of the situations listed
      above has happened.</t>
    </section>

    <section title="IANA Considerations">
      <t>Note to RFC Editor: Please replace all occurrences of "RFC-AAAA" with
      the RFC number of this specification.</t>

      <section anchor="sec-units" title="Units Registry">
        <t>IANA will create a registry of unit symbols. The primary purpose of
        this registry is to make sure that symbols uniquely map to give type
        of measurement. Definitions for many of these units can be found in
        <xref target="NIST822"></xref> and <xref target="BIPM"></xref>.</t>

        <t> In adition to the units in this table, any of the Unified Code for
        Units of Measure <xref target="UCUM"/> in case sensitive form (c/s
        column) can be prepended by the string "UCUM:" and used in SEML. </t>


        <texttable>
          <ttcol align="right">Symbol</ttcol>

          <ttcol align="left">Description</ttcol>

          <ttcol align="left">Reference</ttcol>

          <c>m</c>

          <c>meter</c>

          <c>RFC-AAAA</c>

          <c>kg</c>

          <c>kilogram</c>

          <c>RFC-AAAA</c>

          <c>s</c>

          <c>second</c>

          <c>RFC-AAAA</c>

          <c>A</c>

          <c>ampere</c>

          <c>RFC-AAAA</c>

          <c>K</c>

          <c>kelvin</c>

          <c>RFC-AAAA</c>

          <c>cd</c>

          <c>candela</c>

          <c>RFC-AAAA</c>

          <c>mol</c>

          <c>mole</c>

          <c>RFC-AAAA</c>

          <c>Hz</c>

          <c>hertz</c>

          <c>RFC-AAAA</c>

          <c>rad</c>

          <c>radian</c>

          <c>RFC-AAAA</c>

          <c>sr</c>

          <c>steradian</c>

          <c>RFC-AAAA</c>

          <c>N</c>

          <c>newton</c>

          <c>RFC-AAAA</c>

          <c>Pa</c>

          <c>pascal</c>

          <c>RFC-AAAA</c>

          <c>J</c>

          <c>joule</c>

          <c>RFC-AAAA</c>

          <c>W</c>

          <c>watt</c>

          <c>RFC-AAAA</c>

          <c>C</c>

          <c>coulomb</c>

          <c>RFC-AAAA</c>

          <c>V</c>

          <c>volt</c>

          <c>RFC-AAAA</c>

          <c>F</c>

          <c>farad</c>

          <c>RFC-AAAA</c>

          <c>Ohm</c>

          <c>ohm</c>

          <c>RFC-AAAA</c>

          <c>S</c>

          <c>siemens</c>

          <c>RFC-AAAA</c>

          <c>Wb</c>

          <c>weber</c>

          <c>RFC-AAAA</c>

          <c>T</c>

          <c>tesla</c>

          <c>RFC-AAAA</c>

          <c>H</c>

          <c>henry</c>

          <c>RFC-AAAA</c>

          <c>Cel</c>

          <c>degrees Celsius</c>

          <c>RFC-AAAA</c>

          <c>lm</c>

          <c>lumen</c>

          <c>RFC-AAAA</c>

          <c>lx</c>

          <c>lux</c>

          <c>RFC-AAAA</c>

          <c>Bq</c>

          <c>becquerel</c>

          <c>RFC-AAAA</c>

          <c>Gy</c>

          <c>gray</c>

          <c>RFC-AAAA</c>

          <c>Sv</c>

          <c>sievert</c>

          <c>RFC-AAAA</c>

          <c>kat</c>

          <c>katal</c>

          <c>RFC-AAAA</c>

          <c>pH</c>

          <c>pH acidity</c>

          <c>RFC-AAAA</c>

          <c>%</c>

          <c>Value of a switch. A value of 0.0 indicates the switch is off
          while 100.0 indicates on.</c>

          <c>RFC-AAAA</c>

          <c>count</c>

          <c>counter value</c>

          <c>RFC-AAAA</c>

          <c>%RH</c>

          <c>Relative Humidity</c>

          <c>RFC-AAAA</c>

          <c>m2</c>

          <c>area</c>

          <c>RFC-AAAA</c>

          <c>l</c>

          <c>volume in liters</c>

          <c>RFC-AAAA</c>

          <!-- should this be m3 -->

          <c>m/s</c>

          <c>velocity</c>

          <c>RFC-AAAA</c>

          <c>m/s2</c>

          <c>acceleration</c>

          <c>RFC-AAAA</c>

          <c>l/s</c>

          <c>flow rate in liters per second</c>

          <c>RFC-AAAA</c>

          <!-- should this be m3/s -->

          <c>W/m2</c>

          <c>irradiance</c>

          <c>RFC-AAAA</c>

          <c>cd/m2</c>

          <c>luminance</c>

          <c>RFC-AAAA</c>

          <c>Bspl</c>

          <c>bel sound pressure level</c>

          <c>RFC-AAAA</c>

          <c>bit/s</c>

          <c>bits per second</c>

          <c>RFC-AAAA</c>

          <c>lat</c>

          <c>degrees latitude. Assumed to be in WGS84 unless another reference
          frame is known for the sensor.</c>

          <c>RFC-AAAA</c>

          <c>lon</c>

          <c>degrees longitude. Assumed to be in WGS84 unless another
          reference frame is known for the sensor.</c>

          <c>RFC-AAAA</c>

          <c>%EL</c>

          <c>remaining battery energy level in percents</c>

          <c>RFC-AAAA</c>

          <c>EL</c>

          <c>remaining battery energy level in seconds</c>

          <c>RFC-AAAA</c>

          <c>beet/m</c>

          <c>Heart rate in beets per minute</c>

          <c>RFC-AAAA</c>

          <c>beets</c>

          <c>Cumulative number of heart beats</c>

          <c>RFC-AAAA</c>
        </texttable>

        <t>New entries can be added to the registration by either Expert
        Review or IESG Approval as defined in <xref target="RFC5226"></xref>.
        Experts should exercise their own good judgment but need to consider
        the following guidelines:</t>

        <t><list style="numbers">
            <t>There needs to be a real and compelling use for any new unit to
            be added.</t>

            <t>Units should define the semantic information and be chosen
            carefully. Implementors need to remember that the same word may be
            used in different real-life contexts. For example, degrees when
            measuring latitude have no semantic relation to degrees when
            measuring temperature; thus two different units are needed.</t>

            <t>These measurements are produced by computers for consumption by
            computers. The principle is that conversion has to be easily be
            done when both reading and writing the media type. The value of a
            single canonical representation outweighs the convenience of easy
            human representations or loss of precision in a conversion.</t>

            <t>Use of SI prefixes such as "k" before the unit is not allowed.
            Instead one can represent the value using scientific notation such
            a 1.2e3.</t>

            <t>For a given type of measurement, there will only be one unit
            type defined. So for length, meters are defined and other lengths
            such as mile, foot, light year are not allowed. For most cases,
            the SI unit is preferred.</t>

            <t>Symbol names that could be easily confused with existing common
            units or units combined with prefixes should be avoided. For
            example, selecting a unit name of "mph" to indicate something that
            had nothing to do with velocity would be a bad choice, as "mph" is
            commonly used to mean miles per hour.</t>

            <t>The following should not be used because the are common SI
            prefixes: Y, Z, E, P, T, G, M, k, h, da, d, c, n, u, p, f, a, z,
            y, Ki, Mi, Gi, Ti, Pi, Ei, Zi, Yi.</t>

            <t>The following units should not be used as they are commonly
            used to represent other measurements Ky, Gal, dyn, etg, P, St, Mx,
            G, Oe, Gb, sb, Lmb, ph, Ci, R, RAD, REM, gal, bbl, qt, degF, Cal,
            BTU, HP, pH, B/s, psi, Torr, atm, at, bar, kWh.</t>

            <t>The unit names are case sensitive and the correct case needs to
            be used, but symbols that differ only in case should not be
            allocated.</t>

            <t>A number after a unit typically indicates the previous unit
            raised to that power, and the / indicates that the units that
            follow are the reciprocal. A unit should have only one / in the
            name.</t>
          </list></t>
      </section>


      <section anchor="sec-iana-media" title="Media Type Registration">
        <t>The following registrations are done following the procedure
        specified in <xref target="RFC4288"></xref> and <xref
        target="RFC3023"></xref>.</t>

        <t>Note to RFC Editor: Please replace all occurrences of "RFC-AAAA"
        with the RFC number of this specification.</t>

        <section title="senml+json Media Type Registration">
          <t>Type name: application</t>

          <t>Subtype name: senml+json</t>

          <t>Required parameters: none</t>

          <t>Optional parameters: none</t>

          <t>Encoding considerations: Must be encoded as using a subset of the
          encoding allowed in <xref target="RFC4627"></xref>. Specifically,
          only the ASCII<xref target="RFC0020"></xref> subset of the UTF-8
          characters are allowed. This simplifies implementation of very
          simple system and does not impose any significant limitations as all
          this data is meant for machine to machine communications and is not
          meant to be human readable.</t>

          <t>Security considerations: Sensor data can contain a wide range of
          information ranging from information that is very public, such the
          outside temperature in a given city, to very private information
          that requires integrity and confidentiality protection, such as
          patient health information. This format does not provide any
          security and instead relies on the transport protocol that carries
          it to provide security. Given applications need to look at the
          overall context of how this media type will be used to decide if the
          security is adequate.</t>

          <t>Interoperability considerations: Applications should ignore any
          JSON key value pairs that they do not understand. This allows
          backwards compatibility extensions to this specification. The "ver"
          field can be used to ensure the receiver supports a minimal level of
          functionality needed by the creator of the JSON object.</t>

          <t>Published specification: RFC-AAAA</t>

          <t>Applications that use this media type: The type is used by
          systems that report electrical power usage and environmental
          information such as temperature and humidity. It can be used for a
          wide range of sensor reporting systems.</t>

          <t>Additional information:</t>

          <t>Magic number(s): none</t>

          <t>File extension(s): senml</t>

          <t>Macintosh file type code(s): none</t>

          <t>Person &amp; email address to contact for further information:
          Cullen Jennings &lt;fluffy@iii.ca&gt;</t>

          <t>Intended usage: COMMON</t>

          <t>Restrictions on usage: None</t>

          <t>Author: Cullen Jennings &lt;fluffy@iii.ca&gt;</t>

          <t>Change controller: IESG</t>
        </section>

        <section title="senml+xml Media Type Registration">
          <t>Type name: application</t>

          <t>Subtype name: senml+xml</t>

          <t>Required parameters: none</t>

          <t>Optional parameters: none</t>

          <t>Encoding considerations: TBD</t>

          <t>Security considerations: TBD</t>

          <t>Interoperability considerations: TBD</t>

          <t>Published specification: RFC-AAAA</t>

          <t>Applications that use this media type: TBD</t>

          <t>Additional information:</t>

          <t>Magic number(s): none</t>

          <t>File extension(s): senml</t>

          <t>Macintosh file type code(s): none</t>

          <t>Person &amp; email address to contact for further information:
          Cullen Jennings &lt;fluffy@iii.ca&gt;</t>

          <t>Intended usage: COMMON</t>

          <t>Restrictions on usage: None</t>

          <t>Author: Cullen Jennings &lt;fluffy@iii.ca&gt;</t>

          <t>Change controller: IESG</t>
        </section>

        <section title="senml-exi Media Type Registration">
          <t>Type name: application</t>

          <t>Subtype name: senml-exi</t>

          <t>Required parameters: none</t>

          <t>Optional parameters: none</t>

          <t>Encoding considerations: TBD</t>

          <t>Security considerations: TBD</t>

          <t>Interoperability considerations: TBD</t>

          <t>Published specification: RFC-AAAA</t>

          <t>Applications that use this media type: TBD</t>

          <t>Additional information:</t>

          <t>Magic number(s): none</t>

          <t>File extension(s): senml</t>

          <t>Macintosh file type code(s): none</t>

          <t>Person &amp; email address to contact for further information:
          Cullen Jennings &lt;fluffy@iii.ca&gt;</t>

          <t>Intended usage: COMMON</t>

          <t>Restrictions on usage: None</t>

          <t>Author: Cullen Jennings &lt;fluffy@iii.ca&gt;</t>

          <t>Change controller: IESG</t>
        </section>
      </section>

      <section anchor="sec-iana-url" title="XML Namespace Registration">
        <t>This document registers the following XML name paces in the IETF
        XML registry defined in <xref target="RFC3688"></xref>.</t>

        <t>URI: urn:ietf:params:xml:ns:senml</t>

        <t>Registrant Contact: The IESG.</t>

        <t>XML: N/A, the requested URIs are XML namespaces</t>
      </section>
    </section>

    <section anchor="sec-sec" title="Security Considerations">
      <t>See <xref target="sec-privacy"></xref>.Further discussion of security
      proprieties can be found in <xref target="sec-iana-media"></xref>.</t>
    </section>

    <section anchor="sec-privacy" title="Privacy Considerations">
      <t>Sensor data can range from information with almost no security
      considerations, such as the current temperature in a given city, to
      highly sensitive medical or location data. This specification provides
      no security protection for the data but is meant to be used inside
      another container or transport protocol such as S/MIME or HTTP with TLS
      that can provide integrity, confidentiality, and authentication
      information about the source of the data. </t>
    </section>

    <section title="Acknowledgement">
      <t>We would like to thank Lisa Dusseault, Joe Hildebrand, Lyndsay
      Campbell, Martin Thomson, John Klensin, Bjoern Hoehrmann, and Carsten
      Bormann for their review comments.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">

      <reference anchor="RFC5226">
        <front>
          <title>Guidelines for Writing an IANA Considerations Section in
          RFCs</title>

          <author fullname="T. Narten" initials="T." surname="Narten">
            <organization></organization>
          </author>

          <author fullname="H. Alvestrand" initials="H." surname="Alvestrand">
            <organization></organization>
          </author>

          <date month="May" year="2008" />
        </front>

        <seriesInfo name="BCP" value="26" />
      </reference>


      <reference anchor="BIPM">
        <front>
          <title>The International System of Units (SI)</title>

          <author>
            <organization>Bureau International des Poids et
            Mesures</organization>
          </author>
        </front>

        <seriesInfo name="8th edition, 2006" value="" />

        <format target="http://www.bipm.org/utils/common/pdf/si_brochure_8_en.pdf"
                type="PDF" />
      </reference>


      <reference anchor="NIST822">
        <front>
          <title>Guide for the Use of the International System of Units
          (SI)</title>

          <author initials="A." surname="Thompson">
            <organization />
          </author>

          <author initials="B." surname="Taylor">
            <organization />
          </author>
        </front>

        <seriesInfo name="NIST Special Publication 811, 2008 Edition" value="" />

        <format target="http://physics.nist.gov/cuu/pdf/sp811.pdf" type="PDF" />
      </reference>

      <reference anchor="RFC3688">
        <front>
          <title>The IETF XML Registry</title>

          <author fullname="M. Mealling" initials="M." surname="Mealling">
            <organization></organization>
          </author>

          <date month="January" year="2004" />

          <abstract>
            <t>This document describes an IANA maintained registry for IETF
            standards which use Extensible Markup Language (XML) related items
            such as Namespaces, Document Type Declarations (DTDs), Schemas,
            and Resource Description Framework (RDF) Schemas.</t>
          </abstract>
        </front>

        <seriesInfo name="BCP" value="81" />

        <seriesInfo name="RFC" value="3688" />

        <format octets="17325"
                target="http://www.rfc-editor.org/rfc/rfc3688.txt" type="TXT" />
      </reference>

      <reference anchor="W3C.REC-exi-20110310"
                 target="http://www.w3.org/TR/2011/REC-exi-20110310">
        <front>
          <title>Efficient XML Interchange (EXI) Format 1.0</title>

          <author fullname="Takuki Kamiya" initials="T." surname="Kamiya">
            <organization></organization>
          </author>

          <author fullname="John Schneider" initials="J." surname="Schneider">
            <organization></organization>
          </author>

          <date day="10" month="March" year="2011" />
        </front>

        <seriesInfo name="World Wide Web Consortium Recommendation"
                    value="REC-exi-20110310" />

        <format target="http://www.w3.org/TR/2011/REC-exi-20110310"
                type="HTML" />
      </reference>

      <reference anchor="RFC4627">
        <front>
          <title>The application/json Media Type for JavaScript Object
          Notation (JSON)</title>

          <author fullname="D. Crockford" initials="D." surname="Crockford">
            <organization></organization>
          </author>

          <date month="July" year="2006" />

          <abstract>
            <t>JavaScript Object Notation (JSON) is a lightweight, text-based,
            language-independent data interchange format. It was derived from
            the ECMAScript Programming Language Standard. JSON defines a small
            set of formatting rules for the portable representation of
            structured data. This memo provides information for the Internet
            community.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="4627" />

        <format octets="16319"
                target="http://www.rfc-editor.org/rfc/rfc4627.txt" type="TXT" />
      </reference>

      <reference anchor="RFC3023">
        <front>
          <title>XML Media Types</title>

          <author fullname="M. Murata" initials="M." surname="Murata">
            <organization></organization>
          </author>

          <author fullname="S. St. Laurent" initials="S."
                  surname="St. Laurent">
            <organization></organization>
          </author>

          <author fullname="D. Kohn" initials="D." surname="Kohn">
            <organization></organization>
          </author>

          <date month="January" year="2001" />

          <abstract>
            <t>This document standardizes five new media types -- text/xml,
            application/xml, text/xml-external-parsed-entity, application/xml-
            external-parsed-entity, and application/xml-dtd -- for use in
            exchanging network entities that are related to the Extensible
            Markup Language (XML). This document also standardizes a
            convention (using the suffix '+xml') for naming media types
            outside of these five types when those media types represent XML
            MIME (Multipurpose Internet Mail Extensions) entities. [STANDARDS
            TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3023" />

        <format octets="86011"
                target="http://www.rfc-editor.org/rfc/rfc3023.txt" type="TXT" />
      </reference>

      <reference anchor="RFC4288">
        <front>
          <title>Media Type Specifications and Registration Procedures</title>

          <author fullname="N. Freed" initials="N." surname="Freed">
            <organization></organization>
          </author>

          <author fullname="J. Klensin" initials="J." surname="Klensin">
            <organization></organization>
          </author>

          <date month="December" year="2005" />

          <abstract>
            <t>This document defines procedures for the specification and
            registration of media types for use in MIME and other Internet
            protocols. This document specifies an Internet Best Current
            Practices for the Internet Community, and requests discussion and
            suggestions for improvements.</t>
          </abstract>
        </front>

        <seriesInfo name="BCP" value="13" />

        <seriesInfo name="RFC" value="4288" />

        <format octets="52667"
                target="http://www.rfc-editor.org/rfc/rfc4288.txt" type="TXT" />
      </reference>

      <reference anchor="RFC2119">
        <front>
          <title abbrev="RFC Key Words">Key words for use in RFCs to Indicate
          Requirement Levels</title>

          <author fullname="Scott Bradner" initials="S." surname="Bradner">
            <organization>Harvard University</organization>

            <address>
              <postal>
                <street>1350 Mass. Ave.</street>

                <street>Cambridge</street>

                <street>MA 02138</street>
              </postal>

              <phone>- +1 617 495 3864</phone>

              <email>sob@harvard.edu</email>
            </address>
          </author>

          <date month="March" year="1997" />

          <area>General</area>

          <keyword>keyword</keyword>

          <abstract>
            <t>In many standards track documents several words are used to
            signify the requirements in the specification. These words are
            often capitalized. This document defines these words as they
            should be interpreted in IETF documents. Authors who follow these
            guidelines should incorporate this phrase near the beginning of
            their document: <list style="empty">
                <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
                "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
                "OPTIONAL" in this document are to be interpreted as described
                in RFC 2119.</t>
              </list></t>

            <t>Note that the force of these words is modified by the
            requirement level of the document in which they are used.</t>
          </abstract>
        </front>

        <seriesInfo name="BCP" value="14" />

        <seriesInfo name="RFC" value="2119" />

        <format octets="4723"
                target="http://www.rfc-editor.org/rfc/rfc2119.txt" type="TXT" />

        <format octets="17491"
                target="http://xml.resource.org/public/rfc/html/rfc2119.html"
                type="HTML" />

        <format octets="5777"
                target="http://xml.resource.org/public/rfc/xml/rfc2119.xml"
                type="XML" />
      </reference>

      <reference anchor="IEEE.754.1985">
        <front>
          <title>Standard for Binary Floating-Point Arithmetic</title>

          <author>
            <organization>Institute of Electrical and Electronics
            Engineers</organization>
          </author>

          <date month="August" year="1985" />
        </front>

        <seriesInfo name="IEEE" value="Standard 754" />
      </reference>

<!--
      <reference anchor="RFC5226">
        <front>
          <title>Guidelines for Writing an IANA Considerations Section in
          RFCs</title>

          <author fullname="T. Narten" initials="T." surname="Narten">
            <organization></organization>
          </author>

          <author fullname="H. Alvestrand" initials="H." surname="Alvestrand">
            <organization></organization>
          </author>

          <date month="May" year="2008" />
        </front>

        <seriesInfo name="BCP" value="26" />
      </reference>
-->
      
    <reference anchor="UCUM">
        <front>
          <title>The Unified Code for Units of Measure (UCUM)</title>

          <author initials="G." surname="Schadow">
            <organization />
          </author>

          <author initials="C." surname="McDonald">
            <organization />
          </author>
        </front>

        <seriesInfo name="Regenstrief Institute and Indiana University School of Informatics" value="" />

        <format target="http://aurora.regenstrief.org/~ucum/ucum.html" type="HTML" />
      </reference>
      
      
    </references>

    <references title="Informative References">
      <reference anchor="RFC2141">
        <front>
          <title>URN Syntax</title>

          <author fullname="Ryan Moats" initials="R." surname="Moats">
            <organization>AT&amp;T</organization>

            <address>
              <postal>
                <street>15621 Drexel Circle</street>

                <street>Omaha</street>

                <street>NE 68135-2358</street>

                <country>USA</country>
              </postal>

              <phone>+1 402 894-9456</phone>

              <email>jayhawk@ds.internic.net</email>
            </address>
          </author>

          <date month="May" year="1997" />

          <area>Applications</area>

          <keyword>URN</keyword>

          <keyword>uniform resource</keyword>
        </front>

        <seriesInfo name="RFC" value="2141" />

        <format octets="14077" target="ftp://ftp.isi.edu/in-notes/rfc2141.txt"
                type="TXT" />

        <format octets="17687"
                target="http://xml.resource.org/public/rfc/xml/rfc2141.xml"
                type="XML" />
      </reference>

      <reference anchor="RFC3986">
        <front>
          <title abbrev="URI Generic Syntax">Uniform Resource Identifier
          (URI): Generic Syntax</title>

          <author fullname="Tim Berners-Lee" initials="T."
                  surname="Berners-Lee">
            <organization abbrev="W3C/MIT">World Wide Web
            Consortium</organization>

            <address>
              <postal>
                <street>Massachusetts Institute of Technology</street>

                <street>77 Massachusetts Avenue</street>

                <city>Cambridge</city>

                <region>MA</region>

                <code>02139</code>

                <country>USA</country>
              </postal>

              <phone>+1-617-253-5702</phone>

              <facsimile>+1-617-258-5999</facsimile>

              <email>timbl@w3.org</email>

              <uri>http://www.w3.org/People/Berners-Lee/</uri>
            </address>
          </author>

          <author fullname="Roy T. Fielding" initials="R." surname="Fielding">
            <organization abbrev="Day Software">Day Software</organization>

            <address>
              <postal>
                <street>5251 California Ave., Suite 110</street>

                <city>Irvine</city>

                <region>CA</region>

                <code>92617</code>

                <country>USA</country>
              </postal>

              <phone>+1-949-679-2960</phone>

              <facsimile>+1-949-679-2972</facsimile>

              <email>fielding@gbiv.com</email>

              <uri>http://roy.gbiv.com/</uri>
            </address>
          </author>

          <author fullname="Larry Masinter" initials="L." surname="Masinter">
            <organization abbrev="Adobe Systems">Adobe Systems
            Incorporated</organization>

            <address>
              <postal>
                <street>345 Park Ave</street>

                <city>San Jose</city>

                <region>CA</region>

                <code>95110</code>

                <country>USA</country>
              </postal>

              <phone>+1-408-536-3024</phone>

              <email>LMM@acm.org</email>

              <uri>http://larry.masinter.net/</uri>
            </address>
          </author>

          <date month="January" year="2005" />

          <area>Applications</area>

          <keyword>uniform resource identifier</keyword>

          <keyword>URI</keyword>

          <keyword>URL</keyword>

          <keyword>URN</keyword>

          <keyword>WWW</keyword>

          <keyword>resource</keyword>
        </front>

        <seriesInfo name="STD" value="66" />

        <seriesInfo name="RFC" value="3986" />

        <format octets="141811"
                target="ftp://ftp.isi.edu/in-notes/rfc3986.txt" type="TXT" />

        <format octets="213584"
                target="http://xml.resource.org/public/rfc/html/rfc3986.html"
                type="HTML" />

        <format octets="163534"
                target="http://xml.resource.org/public/rfc/xml/rfc3986.xml"
                type="XML" />
      </reference>

      <reference anchor="I-D.ietf-core-coap">
        <front>
          <title>Constrained Application Protocol (CoAP)</title>

          <author fullname="Zach Shelby" initials="Z" surname="Shelby">
            <organization></organization>
          </author>

          <author fullname="Klaus Hartke" initials="K" surname="Hartke">
            <organization></organization>
          </author>

          <author fullname="Carsten Bormann" initials="C" surname="Bormann">
            <organization></organization>
          </author>

          <author fullname="Brian Frank" initials="B" surname="Frank">
            <organization></organization>
          </author>

          <date day="31" month="October" year="2011" />

          <abstract>
            <t>This document specifies the Constrained Application Protocol
            (CoAP), a specialized web transfer protocol for use with
            constrained networks and nodes for machine-to-machine applications
            such as smart energy and building automation. These constrained
            nodes often have 8-bit microcontrollers with small amounts of ROM
            and RAM, while networks such as 6LoWPAN often have high packet
            error rates and a typical throughput of 10s of kbit/s. CoAP
            provides a method/response interaction model between application
            end-points, supports built-in resource discovery, and includes key
            web concepts such as URIs and content-types. CoAP easily
            translates to HTTP for integration with the web while meeting
            specialized requirements such as multicast support, very low
            overhead and simplicity for constrained environments.</t>
          </abstract>
        </front>

        <seriesInfo name="Internet-Draft" value="draft-ietf-core-coap-10" />

        <format target="http://www.ietf.org/internet-drafts/draft-ietf-core-coap-10.txt"
                type="TXT" />
      </reference>

      <reference anchor="I-D.ietf-core-link-format">
        <front>
          <title>CoRE Link Format</title>

          <author fullname="Zach Shelby" initials="Z" surname="Shelby">
            <organization></organization>
          </author>

          <date day="16" month="November" year="2011" />

          <abstract>
            <t>This document defines Web Linking using a link format for use
            by constrained web servers to describe hosted resources, their
            attributes and other relationships between links. Based on the
            HTTP Link Header format defined in RFC5988, the CoRE Link Format
            is carried as a payload and is assigned an Internet media type. A
            well- known URI is defined as a default entry-point for requesting
            the links hosted by a server.</t>
          </abstract>
        </front>

        <seriesInfo name="Internet-Draft"
                    value="draft-ietf-core-link-format-14" />

        <format target="http://www.ietf.org/internet-drafts/draft-ietf-core-link-format-14.txt"
                type="TXT" />
      </reference>

      <reference anchor="RFC5952">
        <front>
          <title>A Recommendation for IPv6 Address Text Representation</title>

          <author fullname="S. Kawamura" initials="S." surname="Kawamura">
            <organization></organization>
          </author>

          <author fullname="M. Kawashima" initials="M." surname="Kawashima">
            <organization></organization>
          </author>

          <date month="August" year="2010" />

          <abstract>
            <t>As IPv6 deployment increases, there will be a dramatic increase
            in the need to use IPv6 addresses in text. While the IPv6 address
            architecture in Section 2.2 of RFC 4291 describes a flexible model
            for text representation of an IPv6 address, this flexibility has
            been causing problems for operators, system engineers, and users.
            This document defines a canonical textual representation format.
            It does not define a format for internal storage, such as within
            an application or database. It is expected that the canonical
            format will be followed by humans and systems when representing
            IPv6 addresses as text, but all implementations must accept and be
            able to handle any legitimate RFC 4291 format. [STANDARDS
            TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="5952" />

        <format octets="26570"
                target="http://www.rfc-editor.org/rfc/rfc5952.txt" type="TXT" />
      </reference>

      <reference anchor="RFC4122">
        <front>
          <title abbrev="UUID URN">A Universally Unique IDentifier (UUID) URN
          Namespace</title>

          <author fullname="Paul J. Leach" initials="P." surname="Leach">
            <organization>Microsoft</organization>

            <address>
              <postal>
                <street>1 Microsoft Way</street>

                <city>Redmond</city>

                <region>WA</region>

                <code>98052</code>

                <country>US</country>
              </postal>

              <phone>+1 425-882-8080</phone>

              <email>paulle@microsoft.com</email>
            </address>
          </author>

          <author fullname="Michael Mealling" initials="M." surname="Mealling">
            <organization>Refactored Networks, LLC</organization>

            <address>
              <postal>
                <street>1635 Old Hwy 41</street>

                <street>Suite 112, Box 138</street>

                <city>Kennesaw</city>

                <region>GA</region>

                <code>30152</code>

                <country>US</country>
              </postal>

              <phone>+1-678-581-9656</phone>

              <email>michael@refactored-networks.com</email>

              <uri>http://www.refactored-networks.com</uri>
            </address>
          </author>

          <author fullname="Rich Salz" initials="R." surname="Salz">
            <organization>DataPower Technology, Inc.</organization>

            <address>
              <postal>
                <street>1 Alewife Center</street>

                <city>Cambridge</city>

                <region>MA</region>

                <code>02142</code>

                <country>US</country>
              </postal>

              <phone>+1 617-864-0455</phone>

              <email>rsalz@datapower.com</email>

              <uri>http://www.datapower.com</uri>
            </address>
          </author>

          <date month="July" year="2005" />

          <keyword>URN, UUID</keyword>

          <abstract>
            <t>This specification defines a Uniform Resource Name namespace
            for UUIDs (Universally Unique IDentifier), also known as GUIDs
            (Globally Unique IDentifier). A UUID is 128 bits long, and can
            guarantee uniqueness across space and time. UUIDs were originally
            used in the Apollo Network Computing System and later in the Open
            Software Foundation's (OSF) Distributed Computing Environment
            (DCE), and then in Microsoft Windows platforms.</t>

            <t>This specification is derived from the DCE specification with
            the kind permission of the OSF (now known as The Open Group).
            Information from earlier versions of the DCE specification have
            been incorporated into this document.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="4122" />

        <format octets="59319"
                target="http://www.rfc-editor.org/rfc/rfc4122.txt" type="TXT" />

        <format octets="82717"
                target="http://xml.resource.org/public/rfc/html/rfc4122.html"
                type="HTML" />

        <format octets="62931"
                target="http://xml.resource.org/public/rfc/xml/rfc4122.xml"
                type="XML" />
      </reference>

      <reference anchor="RFC0020">
        <front>
          <title>ASCII format for network interchange</title>

          <author fullname="Vint Cerf" initials="V." surname="Cerf">
            <organization>University California Los Angeles
            (UCLA)</organization>
          </author>

          <date day="16" month="October" year="1969" />

          <abstract>
            <t>For concreteness, we suggest the use of standard 7-bit ASCII
            embedded in an 8 bit byte whose high order bit is always 0.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="20" />

        <format octets="18504"
                target="http://www.rfc-editor.org/rfc/rfc20.txt" type="TXT" />
      </reference>

      <reference anchor="I-D.arkko-core-dev-urn">
        <front>
          <title>Uniform Resource Names for Device Identifiers</title>

          <author fullname="Jari Arkko" initials="J" surname="Arkko">
            <organization></organization>
          </author>

          <author fullname="Cullen Jennings" initials="C" surname="Jennings">
            <organization></organization>
          </author>

          <author fullname="Zach Shelby" initials="Z" surname="Shelby">
            <organization></organization>
          </author>

          <date day="31" month="October" year="2011" />

          <abstract>
            <t>This memo describes a new Uniform Resource Name (URN) namespace
            for hardware device identifiers. A general representation of
            device identity can be useful in many applications, such as in
            sensor data streams and storage, or equipment inventories. A
            URN-based representation can be easily passed along in any
            application that needs the information.</t>
          </abstract>
        </front>

        <seriesInfo name="Internet-Draft" value="draft-arkko-core-dev-urn-01" />

        <format target="http://www.ietf.org/internet-drafts/draft-arkko-core-dev-urn-01.txt"
                type="TXT" />
      </reference>

      <reference anchor="WADL"
                 target="http://java.net/projects/wadl/sources/svn/content/trunk/www/wadl20090202.pdf">
        <front>
          <title>Web Application Description Language (WADL)</title>

          <author fullname="Marc J. Hadley" initials="M.J.H" surname="Hadley">
            <organization>Sun Microsystems Inc.</organization>
          </author>

          <date year="2009" />
        </front>
      </reference>
    </references>
  </back>
</rfc>
