<?xml version="1.0" encoding="UTF-8"?>

<?rfc toc="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

 <!ENTITY rfc3315  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3315.xml'>

 <!ENTITY rfc4192  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4192.xml'>

 <!ENTITY rfc4862  PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4862.xml'>

<!ENTITY I-D.ietf-6renum-static-problem
        PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-6renum-static-problem.xml'>

]>

<rfc ipr="trust200902" category="info" docName="draft-chown-6man-tokenised-ipv6-identifiers-01">
	<front>
		<title abbrev="Tokenised IPv6 Identifiers">Tokenised IPv6 Identifiers</title>
		<author fullname="Tim Chown" initials="T.J." surname="Chown">
			<organization> University of Southampton </organization>
			<address>
				<postal>
					<street> Highfield </street>
					<city> Southampton </city>
					<code> SO17 1BJ </code>
					<region> Hampshire </region>
					<country> United Kingdom </country>
				</postal>
				<email> tjc@ecs.soton.ac.uk </email>
			</address>
		</author>

		<date month="October" year="2012"/>
		<area>Internet</area>
		<workgroup>IPv6 Maintenance</workgroup>
		<abstract>
<t>
This text is intended to open discussion towards the adoption of 
support for tokenised IPv6
interface identifiers in IPv6 nodes.  The primary target for
such support is server platforms where addresses are usually manually
configured, rather than using DHCPv6 or SLAAC.  By using tokenised
identifiers, hosts can still determine their network prefix by use
of SLAAC, but more readily be automatically renumbered should their
network prefix change.
</t>
		</abstract>
	</front>
	<middle>

<section title="Introduction">
	<t>
The usual choices for IPv6 nodes to obtain addresses are Stateless
Address Autoconfiguration (SLAAC) <xref target="RFC4862"/>, DHCPv6 
<xref target="RFC3315"/>, or manual configuration.  Client devices
generally use SLAAC or DHCPv6.  In the case of server systems, interface
addresses are typically both static and manually configured.  SLAAC 
is not used in
case the interface hardware changes and the associated SLAAC generated
address changes with it.  DHCPv6 is often not used due to concerns of
server stability should DHCPv6 fail.  
	</t>
	<t>
The disadvantage with static addresses is that they
are likely to require manual editing should the network prefix in use 
change. If instead there were a method to only manually configure
the static identifier part of the IPv6 address, then the address could
be automatically updated when a new prefix was introduced, as described
in <xref target="RFC4192"/> for example.  In such cases a DNS server
might be configured with such a tokenised interface identifier of ::53,
and SLAAC would use the token in constructing the interface address,
using the advertised prefix.
	</t>
</section>

<section title="Tokenised IPv6 identifier support">
	<t>
The author is aware of support for tokenised IPv6 identifiers in 
Solaris, and of a proof of concept implementation for Linux.
	</t>
	<t>
Under Solaris, tokenised identifiers can be configured directly
with ifconfig, e.g.
	</t>
	<t>
ifconfig qfe0 inet6 token ::53/64
	</t>
	<t>
or the configuration can be made persistent by adding a line to
the appropriate /etc/hostname6.interface file.
	</t>
	<t>
In the Linux proof of concept implementation <xref target="Thompson05"/>,
a command line can be used to configure the interface:
	</t>
	<t>
ip6token eth0 ::53
	</t>
	<t>
The specifics of how such tokenised identifiers are configured are
likely to be operating system dependent.  The important point is that
such identifier configuration should be supported.
	</t>
</section>

<section title="On the static address problem">

<t>
This approach would address in part the problems discussed in
<xref target="I-D.ietf-6renum-static-problem"/> in Sections 2.3 and
2.8, for the address configuration of server systems.
</t>
<t>
While a broader solution for the management of static addresses is
desirable, tokenised identifiers present a useful interim step, if
vendors choose to support the,
</t>

</section>

<section anchor="Conclusions" title="Conclusions">
	<t>
It would be desirable if all potential IPv6 server platforms supported
tokenised interface identifiers.  There may also be benefits for
other IPv6 nodes to do so.
	</t>
	<t>
The author welcomes feedback on this draft, and any comments on
platforms currently supporting such identifier configuration, or any
reasons why wider implementation should not be considered.
	</t>
</section>

<section anchor="Security" title="Security Considerations">
	<t>
There are no extra security consideration for this document.
	</t>
</section>

<section anchor="IANA" title="IANA Considerations">
	<t>
There are no extra IANA consideration for this document.
	</t>
</section>

<section anchor="Acknowledgments" title="Acknowledgments">
	<t>
The author thanks the 6NET project under which considerations
of tokenised identifiers was originally made, and colleague (at
the time) Mark Thompson for his proof of concept implementation of such 
identifiers on a Linux platform.
	</t>
</section>


</middle>
<back>

<references title="Informative References">

	&rfc3315;
	&rfc4192;
	&rfc4862;
	&I-D.ietf-6renum-static-problem;

        <reference anchor='Thompson05' target="http://eprints.ecs.soton.ac.uk/11045/1/tokenisedlinux.pdf">
        <front>
        <title>Introducing IPv6 Tokenised Interface Identifiers into the Linux Kernel</title>
        <author initials="M." surname="Thompson" fullname="Mark Thompson">
        <organization />
        </author>
        <date year="2005" />
        </front>
        </reference>

</references>
	</back>
</rfc>
