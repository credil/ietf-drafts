<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->

<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-ietf-lisp-deployment-09.txt" ipr="trust200902">

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="LISP Deployment">LISP Network Element Deployment Considerations</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <author fullname="Lorand Jakab" initials="L." surname="Jakab">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 Tasman Drive</street>
          <code>95134</code>
          <city>San Jose</city>
          <region>CA</region>
          <country>USA</country>
        </postal>
        <email>lojakab@cisco.com</email>
      </address>
    </author>

    <author fullname="Albert Cabellos-Aparicio" initials="A." surname="Cabellos-Aparicio">
      <organization>Technical University of Catalonia</organization>
      <address>
        <postal>
          <street>C/Jordi Girona, s/n</street>
          <code>08034</code>
          <city>BARCELONA</city>
          <country>Spain</country>
        </postal>
        <email>acabello@ac.upc.edu</email>
      </address>
    </author>

    <author fullname="Florin Coras" initials="F." surname="Coras">
      <organization>Technical University of Catalonia</organization>
      <address>
        <postal>
          <street>C/Jordi Girona, s/n</street>
          <code>08034</code>
          <city>BARCELONA</city>
          <country>Spain</country>
        </postal>
        <email>fcoras@ac.upc.edu</email>
      </address>
    </author>

    <author fullname="Jordi Domingo-Pascual" initials="J." surname="Domingo-Pascual">
      <organization>Technical University of Catalonia</organization>
      <address>
        <postal>
          <street>C/Jordi Girona, s/n</street>
          <code>08034</code>
          <city>BARCELONA</city>
          <country>Spain</country>
        </postal>
        <email>jordi.domingo@ac.upc.edu</email>
      </address>
    </author>

    <author fullname="Darrel Lewis" initials="D." surname="Lewis">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 Tasman Drive</street>
          <code>95134</code>
          <city>San Jose</city>
          <region>CA</region>
          <country>USA</country>
        </postal>
        <email>darlewis@cisco.com</email>
      </address>
    </author>

    <date year="2013" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
         in the current day and month for you. If the year is not the current one, it is 
         necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
         purpose of calculating the expiry date).  With drafts it is normally sufficient to 
         specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>Internet</area>

    <workgroup>Network Working Group</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
         If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>LISP; deployment</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document discusses the different scenarios for the deployment of the new network elements introduced by the Locator/Identifier Separation Protocol (LISP).</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The Locator/Identifier Separation Protocol (LISP) is designed to address the scaling issues of the global Internet routing system identified in <xref target="RFC4984" /> by separating the current addressing scheme into Endpoint IDentifiers (EIDs) and Routing LOCators (RLOCs). The main protocol specification <xref target="RFC6830" /> describes how the separation is achieved, which new network elements are introduced, and details the packet formats for the data and control planes.</t>
      <t>LISP assumes that such separation is between the edge and core and uses mapping and encapsulation for forwarding. While the boundary between both is not strictly defined, one widely accepted definition places it at the border routers of stub autonomous systems, which may carry a partial or complete default-free zone (DFZ) routing table. The initial design of LISP took this location as a baseline for protocol development. However, the applications of LISP go beyond just decreasing the size of the DFZ routing table, and include improved multihoming and ingress traffic engineering (TE) support for edge networks, and even individual hosts. Throughout the document we will use the term LISP site to refer to these networks/hosts behind a LISP Tunnel Router. We formally define the following two terms:
        <list style="hanging">
          <t hangText="Network element:">Active or passive device that is connected to other active or passive devices for transporting packet switched data.</t>
          <t hangText="LISP site:">A single host or a set of network elements in an edge network under the administrative control of a single organization, delimited from other networks by LISP Tunnel Router(s).</t>
        </list>
      </t>
      <t>Since LISP is a protocol which can be used for different purposes, it is important to identify possible deployment scenarios and the additional requirements they may impose on the protocol specification and other protocols. Additionally, this document is intended as a guide for the operational community for LISP deployments in their networks. It is expected to evolve as LISP deployment progresses, and the described scenarios are better understood or new scenarios are discovered.</t>
      <t>Each subsection considers an element type, discussing the impact of deployment scenarios on the protocol specification. For definition of terms, please refer to the appropriate documents (as cited in the respective sections).</t>
    </section>

    <section title="Tunnel Routers">
      <t>The device that is the gateway between the edge and the core is called a Tunnel Router (xTR), performing one or both of two separate functions:
        <list style="numbers">
          <t>Encapsulating packets originating from an end host to be transported over intermediary (transit) networks towards the other end-point of the communication</t>
          <t>Decapsulating packets entering from intermediary (transit) networks, originated at a remote end host.</t>
        </list>
        The first function is performed by an Ingress Tunnel Router (ITR), the second by an Egress Tunnel Router (ETR).
      </t>
      <t>Section 8 of the main LISP specification <xref target="RFC6830" /> has a short discussion of where Tunnel Routers can be deployed and some of the associated advantages and disadvantages. This section adds more detail to the scenarios presented there, and provides additional scenarios as well.</t>
      <section title="Customer Edge" anchor="sec_ce">
        <t>The first scenario we discuss is customer edge, when xTR functionality is placed on the router(s) that connect the LISP site to its upstream(s), but are under its control.  As such, this is the most common expected scenario for xTRs, and this document considers it the reference location, comparing the other scenarios to this one.</t>
        <figure align="center" title="xTRs at the customer edge"  anchor="fig_ce">
          <artwork align="center"><![CDATA[
    ISP1    ISP2
     |        | 
     |        | 
   +----+  +----+
+--|xTR1|--|xTR2|--+
|  +----+  +----+  |
|                  |
|     LISP site    |
+------------------+
            ]]></artwork>
        </figure>
        <t>From the LISP site perspective the main advantage of this type of deployment (compared to the one described in the next section) is having direct control over its ingress traffic engineering. This makes it easy to set up and maintain active/active, active/backup, or more complex TE policies, without involving third parties.</t>
        <t>Being under the same administrative control, reachability information of all ETRs is easier to synchronize, because the necessary control traffic can be allowed between the locators of the ETRs. A correct synchronous global view of the reachability status is thus available, and the Locator Status Bits (Loc-Status-Bits, defined in <xref target="RFC6830" />) can be set correctly in the LISP data header of outgoing packets.</t>
        <t>By placing the tunnel router at the edge of the site, existing internal network configuration does not need to be modified. Firewall rules, router configurations and address assignments inside the LISP site remain unchanged. This helps with incremental deployment and allows a quick upgrade path to LISP. For larger sites with many external connections, distributed in geographically diverse points of presence (PoPs), and complex internal topology, it may however make more sense to both encapsulate and decapsulate as soon as possible, to benefit from the information in the IGP to choose the best path (see <xref target="split" /> for a discussion of this scenario).</t>
        <t>Another thing to consider when placing tunnel routers is MTU issues.  Encapsulation increases the amount of overhead associated with each packet.  This added overhead decreases the effective end-to-end path MTU (unless fragmentation and reassembly is used).  Some transit networks are known to provide larger MTU than the typical value of 1500 bytes of popular access technologies used at end hosts (e.g., IEEE 802.3 and 802.11).  However, placing the LISP router connecting to such a network at the customer edge could possibly bring up MTU issues, depending on the link type to the provider as opposed to the following scenario. See <xref target="RFC4459" /> for MTU considerations of tunneling protocols on how to mitigate potential issues.  Still, even with these mitigations, path MTU issues are still possible.</t>
      </section>
      <section title="Provider Edge">
        <t>The other location at the core-edge boundary for deploying LISP routers is at the Internet service provider edge. The main incentive for this case is that the customer does not have to upgrade the CE router(s), or change the configuration of any equipment. Encapsulation/decapsulation happens in the provider's network, which may be able to serve several customers with a single device. For large ISPs with many residential/business customers asking for LISP this can lead to important savings, since there is no need to upgrade the software (or hardware, if it's the case) at each client's location. Instead, they can upgrade the software (or hardware) on a few PE routers serving the customers. This scenario is depicted in <xref target="fig_pe" />.</t>
        <figure align="center" title="xTR at the PE"  anchor="fig_pe">
          <artwork align="center"><![CDATA[
+----------+        +------------------+
|   ISP1   |        |       ISP2       |
|          |        |                  |
|  +----+  |        |  +----+  +----+  |
+--|xTR1|--+        +--|xTR2|--|xTR3|--+
   +----+              +----+  +----+
      |                  |       |
      |                  |       |
      +--<[LISP site]>---+-------+
            ]]></artwork>
        </figure>
        <t>While this approach can make transition easy for customers and may be cheaper for providers, the LISP site loses one of the main benefits of LISP: ingress traffic engineering. Since the provider controls the ETRs, additional complexity would be needed to allow customers to modify their mapping entries.</t>
        <t>The problem is aggravated when the LISP site is multihomed. Consider the scenario in <xref target="fig_pe" />: whenever a change to TE policies is required, the customer contacts both ISP1 and ISP2 to make the necessary changes on the routers (if they provide this possibility). It is however unlikely, that both ISPs will apply changes simultaneously, which may lead to inconsistent state for the mappings of the LISP site. Since the different upstream ISPs are usually competing business entities, the ETRs may even be configured to compete, either to attract all the traffic or to get no traffic. The former will happen if the customer pays per volume, the latter if the connectivity has a fixed price. A solution could be to have the mappings in the Map Server(s), and have their operator give control over the entries to customer, much like in the Domain Name System at the time of this writing.</t>
        <t>Additionally, since xTR1, xTR2, and xTR3 are in different administrative domains, locator reachability information is unlikely to be exchanged among them, making it difficult to set Loc-Status-Bits (LSB) correctly on encapsulated packets. Because of this, and due to the security concerns about LSB described in <xref target="I-D.ietf-lisp-threats" /> their use is discouraged without verifying ETR reachability through the mapping system or other means.  Mapping versioning is another alternative <xref target="RFC6834" />.</t>
        <t>Compared to the customer edge scenario, deploying LISP at the provider edge might have the advantage of diminishing potential MTU issues, because the tunnel router is closer to the core, where links typically have higher MTUs than edge network links.</t>
      </section>
      <section title="Split ITR/ETR" anchor="split">
        <t>In a simple LISP deployment, xTRs are located at the border of the LISP site (see <xref target="sec_ce" />). In this scenario packets are routed inside the domain according to the EID. However, more complex networks may want to route packets according to the destination RLOC. This would enable them to choose the best egress point.</t>
        <t>The LISP specification separates the ITR and ETR functionality and allows both entities to be deployed in separated network equipment.  ITRs can be deployed closer to the host (i.e., access routers).  This way packets are encapsulated as soon as possible, and egress point selection is driven by operational policy.  In turn, ETRs can be deployed at the border routers of the network, and packets are decapsulated as soon as possible.  Once decapsulated, packets are routed based on destination EID, according to internal routing policy.</t>
        <t>In the following figure we can see an example. The Source (S) transmits packets using its EID and in this particular case packets are encapsulated at ITR_1. The encapsulated packets are routed inside the domain according to the destination RLOC, and can egress the network through the best point (i.e., closer to the RLOC's AS). On the other hand, inbound packets are received by ETR_1 which decapsulates them. Then packets are routed towards S according to the EID, again following the best path.</t>
        <figure align="center" title="Split ITR/ETR Scenario" anchor="fig_split">
          <artwork align="center"><![CDATA[
+---------------------------------------+
|                                       |
|       +-------+                   +-------+         +-------+
|       | ITR_1 |---------+         | ETR_1 |-RLOC_A--| ISP_A |
|       +-------+         |         +-------+         +-------+
|  +-+        |           |             |
|  |S|        |    IGP    |             |
|  +-+        |           |             |
|       +-------+         |         +-------+         +-------+
|       | ITR_2 |---------+         | ETR_2 |-RLOC_B--| ISP_B |
|       +-------+                   +-------+         +-------+
|                                       |
+---------------------------------------+
            ]]></artwork>
        </figure>
        <t>This scenario has a set of implications:
          <list style="symbols">
            <t>The site must carry at least partial BGP routes in order to choose the best egress point, increasing the complexity of the network. However, this is usually already the case for LISP sites that would benefit from this scenario.</t>
            <t>If the site is multihomed to different ISPs and any of the upstream ISPs are doing uRPF filtering, this scenario may become impractical. ITRs need to determine the exit ETR, for setting the correct source RLOC in the encapsulation header. This adds complexity and reliability concerns.</t>
            <t>In LISP, ITRs set the reachability bits when encapsulating data packets. Hence, ITRs need a mechanism to be aware of the liveness of all ETRs serving their site.</t>
            <t>MTU within the site network must be large enough to accommodate encapsulated packets.</t>
            <t>In this scenario, each ITR is serving fewer hosts than in the case when it is deployed at the border of the network. It has been shown that cache hit ratio grows logarithmically with the amount of users <xref target="cache" />. Taking this into account, when ITRs are deployed closer to the host the effectiveness of the mapping cache may be lower (i.e., the miss ratio is higher). Another consequence of this is that the site may transmit a higher amount of Map-Requests, increasing the load on the distributed mapping database.</t>
            <t>By placing the ITRs inside the site, they will still need global RLOCs, and this may add complexity to intra-site routing configuration, and further intra-site issues when there is a change of providers.</t>
          </list>
        </t>
      </section>
      <section title="Inter-Service Provider Traffic Engineering">
        <t>At the time of this writing, if two ISPs want to control their ingress TE policies for transit traffic between them, they need to rely on existing BGP mechanisms.  This typically means deaggregating prefixes to choose on which upstream link packets should enter.  This is either not feasible (if fine-grained per-customer control is required, the very specific prefixes may not be propagated) or increases DFZ table size.</t>
        <t>Typically, LISP is seen applicable only to stub networks, however the LISP protocol can be also applied in a recursive manner, providing service provider ingress/egress TE capabilities without impacting the DFZ table size.</t>
        <t>In order to implement this functionality with LISP consider the scenario depicted in <xref target="fig_inter" />.  The two ISPs willing to achieve ingress/egress TE are labeled as ISP_A and ISP_B, they are servicing Stub1 and Stub2 respectively, both are required to be LISP sites.  In this scenario we assume that Stub1 and Stub2 are communicating and thus, ISP_A and ISP_B offer transit for such communications.  ISP_A has RLOC_A1 and RLOC_A2 as upstream IP addresses while ISP_B has RLOC_B1 and RLOC_B2.  The shared goal among ISP_A and ISP_B is to control the transit traffic flow between RLOC_A1/A2 and RLOC_B1/B2.</t>
        <figure align="center" title="Inter-Service provider TE scenario" anchor="fig_inter">
          <artwork align="center"><![CDATA[
                               _.--.                              
Stub1 ...   +-------+      ,-''     `--.      +-------+   ... Stub2
         \  |   R_A1|----,'             `. ---|R_B1   |  /
          --|       |   (     Transit     )   |       |--
 ...  .../  |   R_A2|-----.             ,' ---|R_B2   |  \... ...
            +-------+      `--.     _.-'      +-------+
 ...  ...     ISP_A            `--''            ISP_B     ... ...
            ]]></artwork>
        </figure>
        <t>Both ISPs deploy xTRs on on RLOC_A1/A2 and RLOC_B1/B2 respectively and reach a bilateral agreement to deploy their own private mapping system.  This mapping system contains bindings between the RLOCs of Stub1 and Stub2 (owned by ISP_A and ISP_B respectively) and RLOC_A1/A2 and RLOC_B1/B2.  Such bindings are in fact the TE policies between both ISPs and the convergence time is expected to be fast, since ISPs only have to update/query a mapping to/from the database.</t>
        <t>The packet flow is as follows.  First, a packet originated at Stub1 towards Stub2 is LISP encapsulated by Stub1's xTR.  The xTR of ISP_A reencapsulates it and, according to the TE policies stored in the private mapping system, the ISP_A xTR chooses RLOC_B1 or RLOC_B2 as the reencapsulation destination.  Note that the packet transits between ISP_A and ISP_B double-encapsulated.  Upon reception at the xTR of ISP_B the packet is decapsulated and sent towards Stub2 which performs the last decapsulation.</t>
        <t>This deployment scenario, which uses recursive LISP, includes two important caveats.  First, it is intended to be deployed between only two ISPs.  If more than two ISPs use this approach, then the xTRs deployed at the participating ISPs must either query multiple mapping systems, or the ISPs must agree on a common shared mapping system.  Furthemore, keeping this deployment scenario restricted to only two ISPs maintains the solution scalable, given that only two entities need to agree on using recursive LISP, and only one private mapping system is involved.</t>
        <t>Second, the scenario is only recommended for ISPs providing connectivity to LISP sites, such that source RLOCs of packets to be reencapsulated belong to said ISP.  Otherwise the participating ISPs must register prefixes they do not own in the above mentioned private mapping system.  Failure to follow these recommendations may lead to operational and security issues when deploying this scenario.</t>
        <t>Besides these recommendations, the main disadvantages of this deployment case are:
          <list style="symbols">
            <t>Extra LISP header is needed. This increases the packet size and requires that the MTU between both ISPs accommodates double-encapsulated packets.</t>
            <t>The ISP ITR must encapsulate packets and therefore must know the RLOC-to-RLOC binding. These bindings are stored in a mapping database and may be cached in the ITR's mapping cache. Cache misses lead to an additional lookup latency, unless a push based mapping system is used for the private mapping system.</t>
            <t>The operational overhead of maintaining the shared mapping database.</t>
          </list>
        </t>
      </section>
      <section title="Tunnel Routers Behind NAT">
        <t>NAT in this section refers to IPv4 network address and port translation.</t>
        <section title="ITR">
          <t>Packets encapsulated by an ITR are just UDP packets from a NAT device's point of view, and they are handled like any UDP packet, there are no additional requirements for LISP data packets.</t>
          <t>Map-Requests sent by an ITR, which create the state in the NAT table, have a different 5-tuple in the IP header than the Map-Reply generated by the authoritative ETR. Since the source address of this packet is different from the destination address of the request packet, no state will be matched in the NAT table and the packet will be dropped. To avoid this, the NAT device has to do the following:
            <list style="symbols">
              <t>Send all UDP packets with source port 4342, regardless of the destination port, to the RLOC of the ITR. The most simple way to achieve this is configuring 1:1 NAT mode from the external RLOC of the NAT device to the ITR's RLOC (Called "DMZ" mode in consumer broadband routers).</t>
              <t>Rewrite the ITR-AFI and "Originating ITR RLOC Address" fields in the payload.</t>
            </list>
          </t>
          <t>This setup supports only a single ITR behind the NAT device.</t>
        </section>
        <section title="ETR">
          <t>An ETR placed behind NAT is reachable from the outside by the Internet-facing locator of the NAT device. It needs to know this locator (and configure a loopback interface with it), so that it can use it in Map-Reply and Map-Register messages. Thus support for dynamic locators for the mapping database is needed in LISP equipment.</t>
          <t>Again, only one ETR behind the NAT device is supported.</t>
        </section>
        <section title="Additional Notes">
          <t>An implication of the issues described above is that LISP sites with xTRs can not be behind carrier based NATs, since two different sites would collide on the port forwarding.  An alternative to static hole-punching to explore is the use of the Port Control Protocol (PCP) <xref target="RFC6887" />.</t>
        </section>
      </section>
      <section title="Summary and Feature Matrix">
        <t>The following table gives a quick overview of the features supported by each of the deployment scenarios discussed above (marked with an "x") in the appropriate column: "CE" for customer edge, "PE" for provider edge, "Split" for split ITR/ETR, and "Recursive" for inter-service provider traffic engineering.  The discussed features include:
          <list style="hanging">
            <t hangText="Control of ingress TE:">The scenario allows the LISP site to easily control LISP ingress traffic engineering policies.</t>
            <t hangText="No modifcations to existing int. network infrastruncture:">The scenario doesn't require the LISP site to modify internal network configurations.</t>
            <t hangText="Loc-Status-Bits sync:">The scenario allows easy synchronization of the Locator Status Bits.</t>
            <t hangText="MTU/PMTUD issues minimized:">The scenario minimizes potential MTU and Path MTU Discovery issues.</t>
          </list>
        </t>
        <figure align="center">
          <artwork align="center"><![CDATA[
Feature                         CE    PE    Split   Recursive
-------------------------------------------------------------
Control of ingress TE            x     -      x         x
No modifications to existing
   int. network infrastructure   x     x      -         -
Loc-Status-Bits sync             x     -      x         x
MTU/PMTUD issues minimized       -     x      -         -
            ]]></artwork>
        </figure>
      </section>
    </section>

    <section title="Map Resolvers and Map Servers">
      <t>Map Resolvers and Map Servers make up the LISP mapping system and provide a means to find authoritative EID-to-RLOC mapping information, conforming to <xref target="RFC6833" />.  They are meant to be deployed in RLOC space, and their operation behind NAT is not supported.</t>
      <section title="Map Servers">
        <t>The Map Server learns EID-to-RLOC mapping entries from an authoritative source and publishes them in the distributed mapping database. These entries are learned through authenticated Map-Register messages sent by authoritative ETRs. Also, upon reception of a Map-Request, the Map Server verifies that the destination EID matches an EID-prefix for which it is authoritative for, and then re-encapsulates and forwards it to a matching ETR. Map Server functionality is described in detail in <xref target="RFC6833" />.</t>
        <t>The Map Server is provided by a Mapping Service Provider (MSP).  The MSP participates in the global distributed mapping database infrastructure, by setting up connections to other participants, according to the specific mapping system that is employed (e.g., ALT <xref target="RFC6836" />, DDT <xref target="I-D.ietf-lisp-ddt" />). Participation in the mapping database, and the storing of EID-to-RLOC mapping data is subject to the policies of the "root" operators, who should check ownership rights for the EID prefixes stored in the database by participants.  These policies are out of the scope of this document.</t>
	<t>In all cases, the MSP configures its Map Server(s) to publish the prefixes of its clients in the distributed mapping database and start encapsulating and forwarding Map-Requests to the ETRs of the AS. These ETRs register their prefix(es) with the Map Server(s) through periodic authenticated Map-Register messages. In this context, for some LISP sites, there is a need for mechanisms to:
          <list style="symbols">
            <t>Automatically distribute EID prefix(es) shared keys between the ETRs and the EID-registrar Map Server.</t>
            <t>Dynamically obtain the address of the Map Server in the ETR of the AS.</t>
          </list>
        </t>
        <t>The Map Server plays a key role in the reachability of the EID-prefixes it is serving. On the one hand it is publishing these prefixes into the distributed mapping database and on the other hand it is encapsulating and forwarding Map-Requests to the authoritative ETRs of these prefixes.  ITRs encapsulating towards EIDs under the responsibility of a failed Map Server will be unable to look up any of their covering prefixes.  The only exception are the ITRs that already contain the mappings in their local cache.  In this case ITRs can reach ETRs until the entry expires (typically 24 hours).  For this reason, redundant Map Server deployments are desirable.  A set of Map Servers providing high-availability service to the same set of prefixes is called a redundancy group.  ETRs are configured to send Map-Register messages to all Map Servers in the redundancy group.  The configuration for fail-over (or load-balancing, if desired) among the members of the group  depends on the technology behind the mapping system being deployed.  Since ALT is based on BGP and DDT was inspired from DNS, deployments can leverage current industry best practices for redundancy in BGP and DNS.  These best practices are out of the scope of this document.</t>
        <t>Additionally, if a Map Server has no reachability for any ETR serving a given EID block, it should not originate that block into the mapping system.</t>
      </section>
      <section title="Map Resolvers">
        <t>A Map Resolver is a network infrastructure component which accepts LISP encapsulated Map-Requests, typically from an ITR, and finds the appropriate EID-to-RLOC mapping by either consulting its local cache or by consulting the distributed mapping database. Map Resolver functionality is described in detail in <xref target="RFC6833" />.</t>
        <t>Anyone with access to the distributed mapping database can set up a Map Resolver and provide EID-to-RLOC mapping lookup service. Database access setup is mapping system specific.</t>
	<t>For performance reasons, it is recommended that LISP sites use Map Resolvers that are topologically close to their ITRs. ISPs supporting LISP will provide this service to their customers, possibly restricting access to their user base. LISP sites not in this position can use open access Map Resolvers, if available. However, regardless of the availability of open access resolvers, the MSP providing the Map Server(s) for a LISP site should also make available Map Resolver(s) for the use of that site.</t>
        <t>In medium to large-size ASes, ITRs must be configured with the RLOC of a Map Resolver, operation which can be done manually. However, in Small Office Home Office (SOHO) scenarios a mechanism for autoconfiguration should be provided.</t>
        <t>One solution to avoid manual configuration in LISP sites of any size is the use of anycast RLOCs <xref target="RFC4786" /> for Map Resolvers similar to the DNS root server infrastructure. Since LISP uses UDP encapsulation, the use of anycast would not affect reliability. LISP routers are then shipped with a preconfigured list of well know Map Resolver RLOCs, which can be edited by the network administrator, if needed.</t>
	<t>The use of anycast also helps improve mapping lookup performance. Large MSPs can increase the number and geographical diversity of their Map Resolver infrastructure, using a single anycasted RLOC. Once LISP deployment is advanced enough, very large content providers may also be interested running this kind of setup, to ensure minimal connection setup latency for those connecting to their network from LISP sites.</t>
        <t>While Map Servers and Map Resolvers implement different functionalities within the LISP mapping system, they can coexist on the same device. For example, MSPs offering both services, can deploy a single Map Resolver/Map Server in each PoP where they have a presence.</t>
      </section>
    </section>

    <section title="Proxy Tunnel Routers">
      <section title="P-ITR" anchor="pitr">
        <t>Proxy Ingress Tunnel Routers (P-ITRs) are part of the non-LISP/LISP transition mechanism, allowing non-LISP sites to reach LISP sites. They announce via BGP certain  EID prefixes (aggregated, whenever possible) to attract traffic from non-LISP sites towards EIDs in the covered range. They do the mapping system lookup, and encapsulate received packets towards the appropriate ETR. Note that for the reverse path LISP sites can reach non-LISP sites simply by not encapsulating traffic. See <xref target="RFC6832" /> for a detailed description of P-ITR functionality.</t>
        <t>The success of new protocols depends greatly on their ability to maintain backwards compatibility and inter-operate with the protocol(s) they intend to enhance or replace, and on the incentives to deploy the necessary new software or equipment. A LISP site needs an interworking mechanism to be reachable from non-LISP sites. A P-ITR can fulfill this role, enabling early adopters to see the benefits of LISP, similar to tunnel brokers helping the transition from IPv4 to IPv6. A site benefits from new LISP functionality (proportionally with existing global LISP deployment) when going LISP, so it has the incentives to deploy the necessary tunnel routers. In order to be reachable from non-LISP sites it has two options: keep announcing its prefix(es) with BGP, or have a P-ITR announce prefix(es) covering them.</t>
        <t>If the goal of reducing the DFZ routing table size is to be reached, the second option is preferred. Moreover, the second option allows LISP-based ingress traffic engineering from all sites. However, the placement of P-ITRs significantly influences performance and deployment incentives. <xref target="migration" /> is dedicated to the migration to a LISP-enabled Internet, and includes deployment scenarios for P-ITRs.</t>
      </section>
      <section title="P-ETR">
        <t>In contrast to P-ITRs, P-ETRs are not required for the correct functioning of all LISP sites. There are two cases, where they can be of great help:
          <list style="symbols">
            <t>LISP sites with unicast reverse path forwarding (uRPF) restrictions, and</t>
            <t>Communication between sites using different address family RLOCs.</t>
          </list>
        </t>
        <t>In the first case, uRPF filtering is applied at their upstream PE router. When forwarding traffic to non-LISP sites, an ITR does not encapsulate packets, leaving the original IP headers intact. As a result, packets will have EIDs in their source address. Since we are discussing the transition period, we can assume that a prefix covering the EIDs belonging to the LISP site is advertised to the global routing tables by a P-ITR, and the PE router has a route towards it. However, the next hop will not be on the interface towards the CE router, so non-encapsulated packets will fail uRPF checks.</t>
        <t>To avoid this filtering, the affected ITR encapsulates packets towards the locator of the P-ETR for non-LISP destinations. Now the source address of the packets, as seen by the PE router is the ITR's locator, which will not fail the uRPF check. The P-ETR then decapsulates and forwards the packets.</t>
        <t>The second use case is IPv4-to-IPv6 transition. Service providers using older access network hardware, which only supports IPv4 can still offer IPv6 to their clients, by providing a CPE device running LISP, and P-ETR(s) for accessing IPv6-only non-LISP sites and LISP sites, with IPv6-only locators. Packets originating from the client LISP site for these destinations would be encapsulated towards the P-ETR's IPv4 locator. The P-ETR is in a native IPv6 network, decapsulating and forwarding packets. For non-LISP destination, the packet travels natively from the P-ETR. For LISP destinations with IPv6-only locators, the packet will go through a P-ITR, in order to reach its destination.</t>
        <t>For more details on P-ETRs see the <xref target="RFC6832" /> draft.</t>
        <t>P-ETRs can be deployed by ISPs wishing to offer value-added services to their customers. As is the case with P-ITRs, P-ETRs too may introduce path stretch (the ratio between the cost of the selected path and that of the optimal path). Because of this the ISP needs to consider the tradeoff of using several devices, close to the customers, to minimize it, or few devices, farther away from the customers, minimizing cost instead.</t>
        <t>Since the deployment incentives for P-ITRs and P-ETRs are different, it is likely they will be deployed in separate devices, except for the CDN case, which may deploy both in a single device.</t>
        <t>In all cases, the existence of a P-ETR involves another step in the configuration of a LISP router. CPE routers, which are typically configured by DHCP, stand to benefit most from P-ETRs. Autoconfiguration of the P-ETR locator could be achieved by a DHCP option, or adding a P-ETR field to either Map-Notifys or Map-Replies.</t>
      </section>
    </section>
    <section anchor="migration" title="Migration to LISP">
      <t>This section discusses a deployment architecture to support the migration to a LISP-enabled Internet. The loosely defined terms of "early transition phase", "late transition phase", and "LISP Internet phase" refer to time periods when LISP sites are a minority, a majority, or represent all edge networks respectively.</t>
      <section title="LISP+BGP">
        <t>For sites wishing to go LISP with their PI prefix the least disruptive way is to upgrade their border routers to support LISP, register the prefix into the LISP mapping system, but keep announcing it with BGP as well. This way LISP sites will reach them over LISP, while legacy sites will be unaffected by the change. The main disadvantage of this approach is that no decrease in the DFZ routing table size is achieved. Still, just increasing the number of LISP sites is an important gain, as an increasing LISP/non-LISP site ratio may decrease the need for BGP-based traffic engineering that leads to prefix deaggregation. That, in turn, may lead to a decrease in the DFZ size and churn in the late transition phase.</t>
        <t>This scenario is not limited to sites that already have their prefixes announced with BGP. Newly allocated EID blocks could follow this strategy as well during the early LISP deployment phase, depending on the cost/benefit analysis of the individual networks. Since this leads to an increase in the DFZ size, the following architecture should be preferred for new allocations.</t>
      </section>
      <section title="Mapping Service Provider (MSP) P-ITR Service">
        <t>In addition to publishing their clients' registered prefixes in the mapping system, MSPs with enough transit capacity can offer them P-ITR service as a separate service. This service is especially useful for new PI allocations, to sites without existing BGP infrastructure, that wish to avoid BGP altogether. The MSP announces the prefix into the DFZ, and the client benefits from ingress traffic engineering without prefix deaggregation. The downside of this scenario is adding path stretch.</t>
        <t>Routing all non-LISP ingress traffic through a third party which is not one of its ISPs is only feasible for sites with modest amounts of traffic (like those using the IPv6 tunnel broker services today), especially in the first stage of the transition to LISP, with a significant number of legacy sites. This is because the handling of said traffic is likely to result in additional costs, which would be passed down to the client. When the LISP/non-LISP site ratio becomes high enough, this approach can prove increasingly attractive.</t>
        <t>Compared to LISP+BGP, this approach avoids DFZ bloat caused by prefix deaggregation for traffic engineering purposes, resulting in slower routing table increase in the case of new allocations and potential decrease for existing ones. Moreover, MSPs serving different clients with adjacent aggregatable prefixes may lead to additional decrease, but quantifying this decrease is subject to future research study.</t>
      </section>
      <section title="Proxy-ITR Route Distribution (PITR-RD)">
        <t>Instead of a LISP site, or the MSP, announcing their EIDs with BGP to the DFZ, this function can be outsourced to a third party, a P-ITR Service Provider (PSP). This will result in a decrease of the operational complexity both at the site and at the MSP.</t>
        <t>The PSP manages a set of distributed P-ITR(s) that will advertise the corresponding EID prefixes through BGP to the DFZ. These P-ITR(s) will then encapsulate the traffic they receive for those EIDs towards the RLOCs of the LISP site, ensuring their reachability from non-LISP sites.</t>
        <t>While it is possible for a PSP to manually configure each client's EID routes to be announced, this approach offers little flexibility and is not scalable. This section presents a scalable architecture that offers automatic distribution of EID routes to LISP sites and service providers.</t>
        <t>The architecture requires no modification to existing LISP network elements, but it introduces a new (conceptual) network element, the EID Route Server, defined as a router that either propagates routes learned from other EID Route Servers, or it originates EID Routes. The EID-Routes that it originates are those that it is authoritative for. It propagates these routes to Proxy-ITRs within the AS of the EID Route Server. It is worth to note that a BGP capable router can be also considered as an EID Route Server.</t>
        <t>Further, an EID-Route is defined as a prefix originated via the Route Server of the mapping service provider, which should be aggregated if the MSP has multiple customers inside a single large continuous prefix. This prefix is propagated to other P-ITRs both within the MSP and to other P-ITR operators it peers with. EID Route Servers are operated either by the LISP site, MSPs or PSPs, and they may be collocated with a Map Server or P-ITR, but are a functionally discrete entity. They distribute EID-Routes, using BGP, to other domains, according to policies set by participants. </t>
        <figure align="center" title="The P-ITR Route Distribution architecture" anchor="pitrrd">
          <artwork align="center"><![CDATA[
                     MSP (AS64500)
                     RS ---> P-ITR
                      |        /
                      |  _.--./           
                     ,-''    /`--.      
    LISP site   ---,' |     v     `. 
                  (   |   DFZ       )----- Mapping system
non-LISP site   ----. |    ^      ,'
                     `--. /   _.-'      
                      |  `--''          
                      v /
                    P-ITR
                    PSP (AS64501)
            ]]></artwork>
        </figure>
        <t>The architecture described above decouples EID origination from route propagation, with the following benefits:
          <list style="symbols">
            <t>Can accurately represent business relationships between P-ITR operators</t>
            <t>More mapping system agnostic</t>
            <t>Minor changes to P-ITR implementation, no changes to other components</t>
          </list>
        </t>
        <t>In the example in the figure we have a MSP providing services to the LISP site. The LISP site does not run BGP, and gets an EID allocation directly from a RIR, or from the MSP, who may be a LIR. Existing PI allocations can be migrated as well. The MSP ensures the presence of the prefix in the mapping system, and runs an EID Route Server to distribute it to P-ITR service providers. Since the LISP site does not run BGP, the prefix will be originated with the AS number of the MSP.</t>
        <t>In the simple case depicted in <xref target="pitrrd" /> the EID-Route of LISP site will be originated by the Route Server, and announced to the DFZ by the PSP's P-ITRs with AS path 64501 64500. From that point on, the usual BGP dynamics apply. This way, routes announced by P-ITR are still originated by the authoritative Route Server. Note that the peering relationships between MSP/PSPs and those in the underlying forwarding plane may not be congruent, making the AS path to a P-ITR shorter than it is in reality.</t>
        <t>The non-LISP site will select the best path towards the EID-prefix, according to its local BGP policies. Since AS-path length is usually an important metric for selecting paths, a careful placement of P-ITR could significantly reduce path-stretch between LISP and non-LISP sites.</t>
        <t>The architecture allows for flexible policies between MSP/PSPs. Consider the EID Route Server networks as control plane overlays, facilitating the implementation of policies necessary to reflect the business relationships between participants. The results are then injected to the common underlying forwarding plane. For example, some MSP/PSPs may agree to exchange EID-Prefixes and only announce them to each of their forwarding plane customers. Global reachability of an EID-prefix depends on the MSP the LISP site buys service from, and is also subject to agreement between the mentioned parties.</t>
        <t>In terms of impact on the DFZ, this architecture results in a slower routing table increase for new allocations, since traffic engineering will be done at the LISP level. For existing allocations migrating to LISP, the DFZ may decrease since MSPs may be able to aggregate the prefixes announced.</t>
        <t>Compared to LISP+BGP, this approach avoids DFZ bloat caused by prefix deaggregation for traffic engineering purposes, resulting in slower routing table increase in the case of new allocations and potential decrease for existing ones. Moreover, MSPs serving different clients with adjacent aggregatable prefixes may lead to additional decrease, but quantifying this decrease is subject to future research study. </t>
        <t>The flexibility and scalability of this architecture does not come without a cost however: A PSP operator has to establish either transit or peering relationships to improve their connectivity.</t>
      </section>
      <section title="Migration Summary">
        <t>The following table presents the expected effects of the different transition scenarios during a certain phase on the DFZ routing table size:
          <figure align="center">
            <artwork align="center"><![CDATA[
Phase            | LISP+BGP     | MSP P-ITR       | PITR-RD
-----------------+--------------+-----------------+----------------
Early transition | no change    | slower increase | slower increase
Late transition  | may decrease | slower increase | slower increase
LISP Internet    |             considerable decrease       
              ]]></artwork>
          </figure>
        </t>
        <t>It is expected that PITR-RD will co-exist with LISP+BGP during the migration, with the latter being more popular in the early transition phase. As the transition progresses and the MSP P-ITR and PITR-RD ecosystem gets more ubiquitous, LISP+BGP should become less attractive, slowing down the increase of the number of routes in the DFZ.</t>
        <t>Note that throughout <xref target="migration" /> we focused on the effects of LISP deployment on the DFZ route table size.  Other metrics may be impacted as well, but to the best of our knowlegde have not been measured as of yet.</t>
      </section>
    </section>

    <!-- All drafts are required to have a IANA Considerations and a Security
         Considerations section -->
    <section anchor="Security" title="Security Considerations">
      <t>Security implications of LISP deployments are to be discussed in separate documents. <xref target="I-D.ietf-lisp-threats" /> gives an overview of LISP threat models, while securing mapping lookups is discussed in <xref target="I-D.ietf-lisp-sec" />.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>
    </section>

    <section anchor="ACKs" title="Acknowledgements">
      <t>Many thanks to Margaret Wasserman for her contribution to the IETF76 presentation that kickstarted this work. The authors would also like to thank Damien Saucez, Luigi Iannone, Joel Halpern, Vince Fuller, Dino Farinacci, Terry Manderson, Noel Chiappa, Hannu Flinck, Paul Vinciguerra, Fred Templin, Brian Haberman, and everyone else who provided input.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6830.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6832.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6833.xml"?>
    </references>
    <references title="Informative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4984.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6834.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6836.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6887.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4459.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4786.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-lisp-ddt-01.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-lisp-sec-04.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-lisp-threats-04.xml"?>
    <!--
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-lear-lisp-nerd-08.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-lisp-eid-block-04.xml"?>
    -->
      <reference anchor="cache">
        <front>
          <title>DNS performance and the effectiveness of caching</title>
          <author initials="J." surname="Jung" />
          <author initials="E." surname="Sit" />
          <author initials="H." surname="Balakrishnan" />
          <author initials="R." surname="Morris" />
          <date year="2002" />
        </front>
      </reference>
    </references>
    <section title="Step-by-Step Example BGP to LISP Migration Procedure">
      <t>To help the operational community deploy LISP, this informative section offers a step-by-step guide for migrating a BGP based Internet presence to a LISP site.  It includes a pre-install/pre-turn-up checklist, and customer and provider activation procedures.</t>
      <section title="Customer Pre-Install and Pre-Turn-up Checklist">
        <t>
          <list style="numbers">
            <t>Determine how many current physical service provider connections the customer has and their existing bandwidth and traffic engineering requirements.
              <vspace blankLines="1" />
              This information will determine the number of routing locators, and the priorities and weights that should be configured on the xTRs.</t>
            <t>Make sure customer router has LISP capabilities.
              <list style="symbols">
                <t>Check OS version of the CE router. If LISP is an add-on, check if it is installed.
                  <vspace blankLines="1" />
                  This information can be used to determine if the platform is appropriate to support LISP, in order to determine if a software and/or hardware upgrade is required.</t>
                <t>Have customer upgrade (if necessary, software and/or hardware) to be LISP capable.</t>
              </list>
            </t>
            <t>Obtain current running configuration of CE router. A suggested LISP router configuration example can be customized to the customer's existing environment.</t>
            <t>Verify MTU Handling
              <list style="symbols">
                <t>Request increase in MTU to 1556 or more on service provider connections. Prior to MTU change verify that 1500 byte packet from P-xTR to RLOC with do not fragment (DF-bit) bit set.</t>
                <t>Ensure they are not filtering ICMP unreachable or time-exceeded on their firewall or router.</t>
              </list>
              LISP, like any tunneling protocol, will increase the size of packets when the LISP header is appended.  If increasing the MTU of the access links is not possible, care must be taken that ICMP is not being filtered in order to allow for Path MTU Discovery to take place.</t>
            <t>Validate member prefix allocation.
              <vspace blankLines="1" />
              This step is to check if the prefix used by the customer is a direct (Provider Independent), or if it is a prefix assigned by a physical service provider (Provider Aggregatable). If the prefixes are assigned by other service providers then a Letter of Agreement is required to announce prefixes through the Proxy Service Provider.</t>
            <t>Verify the member RLOCs and their reachability.
              <vspace blankLines="1" />
              This step ensures that the RLOCs configured on the CE router are in fact reachable and working.</t>
            <t>Prepare for cut-over.
              <list style="symbols">
                <t>If possible, have a host outside of all security and filtering policies connected to the console port of the edge router or switch.</t>
                <t>Make sure customer has access to the router in order to configure it.</t>
              </list>
            </t>
          </list>
        </t>
      </section>
      <section title="Customer Activating LISP Service">
        <t>
          <list style="numbers">
            <t>Customer configures LISP on CE router(s) from service provider recommended configuration.
              <vspace blankLines="1" />
              The LISP configuration consists of the EID prefix, the locators, and the weights and priorities of the mapping between the two values.  In addition, the xTR must be configured with Map Resolver(s), Map Server(s) and the shared key for registering to Map Server(s).  If required, Proxy-ETR(s) may be configured as well.
              <vspace blankLines="1" />
              In addition to the LISP configuration, the following:
              <list style="symbols">
                <t>Ensure default route(s) to next-hop external neighbors are included and RLOCs are present in configuration.</t>
                <t>If two or more routers are used, ensure all RLOCs are included in the LISP configuration on all routers.</t>
                <t>It will be necessary to redistribute default route via IGP between the external routers.</t>
              </list>
            </t>
            <t>When transition is ready perform a soft shutdown on existing eBGP peer session(s)
              <list style="symbols">
                <t>From CE router, use LIG to ensure registration is successful.</t>
                <t>To verify LISP connectivity, find and ping LISP connected sites.  If possible, find ping destinations that are not covered by a prefix in the global BGP routing system, because PITRs may deliver the packets even if LISP connectivity is not working.  Traceroutes may help discover if this is the case.</t>
                <t>To verify connectivity to non-LISP sites, try accessing a landmark (e.g., a major Internet site) via a web browser.</t>
              </list>
            </t>
          </list>
        </t>
      </section>
      <section title="Cut-Over Provider Preparation and Changes">
        <t>
          <list style="numbers">
            <t>Verify site configuration and then active registration on Map Server(s)
              <list style="symbols">
                <t>Authentication key</t>
                <t>EID prefix</t>
              </list>
            </t>
            <t>Add EID space to map-cache on proxies</t>
            <t>Add networks to BGP advertisement on proxies
              <list style="symbols">
                <t>Modify route-maps/policies on P-xTRs</t>
                <t>Modify route policies on core routers (if non-connected member)</t>
                <t>Modify ingress policers on core routers</t>
                <t>Ensure route announcement in looking glass servers, RouteViews</t>
              </list>
            </t>
            <t>Perform traffic verification test
              <list style="symbols">
                <t>Ensure MTU handling is as expected (PMTUD working)</t>
                <t>Ensure proxy-ITR map-cache population</t>
                <t>Ensure access from traceroute/ping servers around Internet</t>
                <t>Use a looking glass, to check for external visibility of registration via several Map Resolvers</t>
              </list>
            </t>
          </list>
        </t>
      </section>
    </section>

  </back>
</rfc>
