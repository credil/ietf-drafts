PPSP                                                            Y. Zhang
Internet Draft                                              China Mobile
                                                                  N.Zong
                                                              HuaweiTech
                                                             G.Camarillo
                                                                Ericsson
                                                                  R.Yang
                                                         Yale University
                                                              V. Pascual
                                                             Acme Packet
Intended status: Informational                        February 27, 2012
Expires: August 2012



        Problem Statement and Requirements of Peer-to-Peer Streaming
                              Protocol (PPSP)
                 draft-ietf-ppsp-problem-statement-08.txt


Abstract

   Peer-to-Peer (P2P for short) streaming systems show more and more
   popularity in current Internet with proprietary protocols. This
   document identifies problems of the proprietary protocols, proposes a
   Peer to Peer Streaming Protocol (PPSP) including tracker and peer
   signaling components, and discusses the scope, uses cases and  
   requirements of PPSP.






















zhang                  Expires August 27, 2012                [Page 1]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html

   This Internet-Draft will expire on August 27, 2012.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors. All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document. Please review these documents carefully,
   as they describe your rights and restrictions with respect to this
   document. Code Components extracted from this document must include
   Simplified BSD License text as described in Section 4.e of the Trust
   Legal Provisions and are provided without warranty as described in
   the Simplified BSD License.










zhang                  Expires August 27, 2012                [Page 2]

Internet-Draft                   Problem Statement and Requirments of PPSP   February 2012




Table of Contents


   1. Introduction ................................................ 4
   2. Terminology and concepts .................................... 5
   3. Problem statement ........................................... 7
      3.1. Traffic issue and difficulties for ISPs in deploying P2P
      caches ...................................................... 7
      3.2. Efficiency issue and difficulties in building open streaming
      delivery infrastructure ..................................... 7
      3.3. Extended applicability issue and difficulties in mobile and
      wireless environment......................................... 8
   4. PPSP: Standard peer to peer streaming protocols ............. 10
   5. Use cases of PPSP ........................................... 12
      5.1. Worldwide provision of live/VoD streaming .............. 12
      5.2. PPSP supporting cross-screen streaming in heterogeneous
      environment ................................................. 14
      5.3. Cache service supporting P2P streaming ................. 15
   6. Security Considerations ..................................... 17
   7. Requirements of PPSP ........................................ 18
      7.1. Basic Requirements ..................................... 18
      7.2. PPSP Tracker Protocol Requirements ..................... 19
      7.3. PPSP Peer Protocol Requirements ........................ 21
      7.4. Security Requirements .................................. 22
   8. IANA Considerations ......................................... 24
   9. Acknowledgments ............................................. 25
   10. Informative References ..................................... 26



















zhang                  Expires August 27, 2012                [Page 3]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012



1. Introduction

   Streaming traffic is among the largest and fastest growing traffic on
   the Internet [Cisco], where peer-to-peer (P2P) streaming contribute a
   lot. With the advantage of high scalability and fault tolerance
   against single point of failure, P2P streaming applications are able
   to distribute large-scale, live and VoD streaming programs to
   millions of audience with only a handful of servers.

   What's more, along with the new players like CDN providers joining in
   the effort of using P2P technologies in distributing their serving
   streaming content, there are more and more various players in P2P
   streaming ecosystem.

   Given the increasing integration of P2P streaming into the global
   content delivery infrastructure, the lack of an open, standard P2P
   streaming signaling protocol suite becomes a major missing component
   in the protocol stack. Almost all of existing systems use their
   proprietary protocols. Multiple, similar but proprietary protocols
   result in repetitious development efforts for new systems, and the
   lock-in effects lead to substantial difficulties in their integration
   with other players like CDN. For example, in the enhancement of
   existing caches and CDN systems to support P2P streaming, proprietary
   protocols may increase the complexity of the interaction with
   different P2P streaming applications.

   In this document we propose an open P2P Streaming Protocol, which is
   defined as PPSP, to standardize signaling operations on two important
   components, peer and tracker in P2P streaming systems for information
   exchange. Note that using PPSP would not hurt current P2P streaming
   vendors: Firstly, the openness of signaling interaction would make it
   easy to integrate them with some infrastructural components like
   ISP's caches or CDNs for better user experience, say, smaller delay
   of the play. Secondly, different applications could use the same PPSP
   for signaling, but implement system specific mechanisms on top of
   that. That is to say, different P2P streaming systems compete on "on
   top" things, like scheduling algorithms, which is independent of the
   proposed protocols.










zhang                  Expires August 27, 2012                [Page 4]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




2. Terminology and concepts

   Chunk: A chunk is a basic unit of data block organized in P2P
   streaming for storage, scheduling, advertisement and exchange among
   peers [VoD]. A chunk size varies from several KB to several MB in
   different systems. In case of MB size chunk scenario, a sub-chunk
   structure named piece is often defined to fit in a single transmitted
   packet. A streaming system may use different granularities for
   different usage, e.g., using chunks during data exchange, and using a
   larger unit such as a set of chunks during advertisement.

   Content Distribution Network (CDN): A CDN node refers to a network
   entity that is deployed in the network (e.g., at the network edge or
   data centers) to store content provided by the original servers, and
   serves content to the clients located nearby topologically.

   Client: A client refers to the service requester in client/server
   computing paradigm. In this draft a client refers to a participant in
   a P2P streaming system that only receives streaming content. In some
   cases the node is not eligible to be a peer without enough computing
   and storage capability is acting as a client. It can be viewed as a
   specific kind of peer.

   Live streaming: It refers to a scenario where all clients receive
   streaming content for the same ongoing event. It is desired that the
   lags between the play points of the clients and that of the streaming
   source be small.

   P2P cache: A P2P cache refers to a network entity that caches P2P
   traffic in the network, and either transparently or explicitly as a
   peer distributes content to other peers.

   Peer: A peer refers to a participant in a P2P streaming system that
   not only receives streaming content, but also stores and uploads
   streaming content to other participants.

   PPSP: The abbreviation of Peer-to-Peer Streaming Protocols. PPSP
   refer to the key signaling protocols among various P2P streaming
   system components, including the tracker and the peer.

   Swarm: A swarm refers to a group of peers who exchange data to
   distribute chunks of the same content (e.g. video/audio program,
   digital file, etc) at a given time.




zhang                  Expires August 27, 2012                [Page 5]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   Tracker: A tracker refers to a directory server which maintains a
   list of peers which participate in a specific video channel or in the
   distribution of a streaming file, and answers queries from peers for
   peer lists. The tracker is a logical component which can be
   centralized or distributed.

   Video-on-demand (VoD): It refers to a scenario where different
   clients may watch different parts of the same recorded media with
   downloaded content.

   Peer list: A list of peers which are in a same swarm maintained by
   the tracker.  A peer can fetch the peer list of a swarm from either
   tracker or other peers to know which peers have the required
   streaming content.

   Peer ID: An identifier of a peer such that other peers or tracker can
   refer the ID for the peer.

   Swarm ID: An identifier of a swarm containing a group of peers
   sharing a same streaming content.

   Chunk ID: An identifier of a chunk in a streaming content.


























zhang                  Expires August 27, 2012                [Page 6]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




3. Problem statement

   The problems imposed by proprietary protocols for P2P streaming
   applications are listed as follows.

3.1. Traffic issue and difficulties for ISPs in deploying P2P caches

   Facing with many P2P streaming applications, ISPs are witnessing a
   big traffic tension on their backbone and inter-networking points.P2P
   caches are used for ISPs to reduce the traffic by dynamically storing
   the frequently accessed streaming content (in chunk or in file
   granularity).

   However, unlike the Web where all kinds of the infrastructure devices
   have been already equipped with standard HTTP protocol, cache systems
   have to build a matching library to identify different P2P streaming
   protocols firstly. Multiple ever changing proprietary protocols
   require the cache system updating its matching library constantly.
   This increases the operator's cost dramatically.

   With PPSP, P2P caches needn't learn new proprietary protocols any
   longer, which would reduce the ISP workload much.

3.2. Efficiency issue and difficulties in building open streaming
   delivery infrastructure

   Another problem for P2P streaming applications is the efficiency
   issue. P2P streaming is often criticized by longer delays (e.g.,
   startup delay, seek delay and channel switch delay). Hybrid CDN/P2P
   is a good means to solve this problem for operators [Hybrid CDN P2P].

   In such design, CDN takes two roles: one is for media streaming
   server and the other is for P2P tracker. Consider a CDN vendor
   serving for various P2P streaming, similar to the P2P cache issue in
   Section 3.1, proprietary P2P streaming protocols introduce
   interaction complexity between the peer and tracker, and increase
   deployment cost of CDN nodes.

   With PPSP, CDN nodes acting as the P2P tracker can be designed to
   inter-operate with other devices by only standard protocols, reducing
   the case by case negotiation. On the other side, the interface
   between edged CDN nodes and user peers could be either via something
   like traditional HTTP, or via PPSP peer protocol.




zhang                  Expires August 27, 2012                [Page 7]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


3.3. Extended applicability issue and difficulties in mobile and
   wireless environment

   Mobility and wireless are becoming increasingly important in today's
   Internet, where streaming service is a major usage. In Korea the
   number of mobile TV subscriber has reached seventeen million,
   accounting for one third of the mobile subscribers. There are
   multiple prior studies exploring P2P streaming in mobile and wireless
   networks [Mobile Streaming1] [Mobile Streaming2].

   However it's difficult to copy current P2P streaming protocols (even
   we suppose we can re-use the proprietary ones) in mobile and wireless
   networks. Current protocols are designed mainly for fixed Internet.
   Although smart handsets are more eligible to be peers with much
   higher bandwidth and CPU frequency, larger storage and memory than
   before, peer selection becomes more challenging which needs more
   information to exchange during the tracker/peer and peer/peer
   communications:

   First, the connections are unsteady, lower rate, and costly in terms
   of energy consumption and transmission (esp. in uplink). The trackers
   and peers may need more information like packet loss rate, peer
   battery status and processing capability for peer selection.

   Second, current practices often use a "bitmap" message to exchange
   chunk availability among peers/trackers. The message is often of some
   kilobytes size and exchanged relatively frequently, say, some seconds.
   In a scarce bandwidth resource environment, a reasonable optimization
   is to reduce the message size, which may require alternative methods
   for expressing and distributing bitmap information.

   Third, when a peer is moving and if the IP address changes, the on-
   going connection and transmission between peers may be affected. Such
   information should be reported in time.

   Fourth, for a resource constraint peer like mobile handsets or set-
   top boxes (STB), the limited resource and the requirements for
   installing various applications form big conflicts. On one side, the
   limited CPU, storage and memory often limit the total number of
   concurrent threads and processes. One the other side, the proprietary
   protocols require the user to install many different applications for
   different usage, for instance, some applications have rich resources
   on TV series or movies while others may offer rich broadcasting
   sports program. What's worse, for many P2P applications, even they
   are not used by the users right now, the background program may be
   invoked to facilitate other peers for free data delivery assistance.
   That is to say, there will be multiple background programs running at


zhang                  Expires August 27, 2012                [Page 8]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   the same time. But it may be difficult to invoke multiple programs in
   such a resource constraint peer. PPSP should investigate these
   factors and help to reduce the resource consumption in a converged
   network.












































zhang                  Expires August 27, 2012                [Page 9]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




4. PPSP: Standard peer to peer streaming protocols

   The objective of the PPSP working group is to design a unified peer-
   to-peer streaming protocol (PPSP) to address the problems discussed
   in the preceding sections.

   There are basically two kinds of P2P streaming systems, pull-based
   and push-based.

   In pull-based P2P streaming systems, a centralized tracker or
   distributed trackers maintains information about which peers are in
   which swarms and answers the peers' query on such information with a
   peer-list. After receiving the message, the peer can connect with the
   candidates in a swarm, exchange its content availability in its
   memory or storage (depending on it is real-time or VoD streaming)
   with other peers and then retrieve the wanted streaming data. The
   swarm is a mesh topology. Most of the current practices belong to
   this genre. The advantages of pull-based mode are its robustness to
   the peer churn and acceptable latency for a smooth play. Most
   commercial systems either live streaming and VoD use this mode.

   In push-based P2P streaming systems, there is a head node maintaining
   the topology, e.g., a tree. The head node acts similar to a tracker.
   The peers in this topology share the same interest on content. The
   signaling and data distribution are both based on this topology. For
   one program or video file, the peer queries the head node by offline
   or pre-set head node address information for its location to join and
   the head node replies with a peer-list(potentially in a recommended
   order). After receiving this peer-list, the peer can connect with the
   candidates for being a node in certain place of the topology and
   receive the data along this topology without the need of exchanging
   content availability with its siblings, as done in pull-based mode.
   In this sense the head node is acting as the tracker in the pull-
   based mode. The push mode has the advantages of lower latency but the
   topology is fragile to the peer churn and is hard to deal with the
   VoD scenario. This makes it less robust in practical running. Few
   commercially deployed systems use this mode.

   PPSP is targeted to standardize signaling protocols for tracker-based
   architectures feasible for both modes above that support either live
   or offline streaming.

   The PPSP design includes a protocol for signaling between trackers
   and peers (the PPSP "tracker protocol") and a signaling protocol for
   communication among the peers (the PPSP "peer protocol") as shown in


zhang                  Expires August 27, 2012               [Page 10]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   Figure 1.The two protocols enable peers to receive streaming data
   within the time constraints required by specific content items. The
   tracker protocol handles the initial and periodic exchange of meta
   information between trackers and peers, such as peer-list and content
   information. The peer protocol controls the advertising and exchange
   of media data between the peers.

   Note that in the pull mode, both tracker protocol and peer protocol
   can be used; while in the push mode, only tracker protocol is used.

             +------------------------------------------------+
             |                                                |
             |     +--------------------------------+         |
             |     |            Tracker(Head Node)  |         |
             |     +--------------------------------+         |
             |        |     ^                   ^             |
             |Tracker |     | Tracker           |Tracker      |
             |Protocol|     | Procotol          |Protocol     |
             |        |     |                   |             |
             |        V     |                   |             |
             |     +---------+    Peer     +---------+        |
             |     |   Peer  |<----------->|   Peer  |        |
             |     +---------+   Protocol  +---------+        |
             |       | ^                                      |
             |       | |Peer                                  |
             |       | |Protocol                              |
             |       V |                                      |
             |     +---------------+                          |
             |     |      Peer     |                          |
             |     +---------------+                          |
             |                                                |
             |                                                |
             +------------------------------------------------+
                     Figure 1 PPSP System Architecture














zhang                  Expires August 27, 2012               [Page 11]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




5. Use cases of PPSP

5.1. Worldwide provision of live/VoD streaming

   The content provider can easily expand the broadcasting/VoD scale to
   utilize the cooperative content providers' distribution networks or
   third party CDN networks with PPSP.

   Figure 2 shows the case that provider A broadcasts the program with
   the help of provider B and C for a wider coverage. Without PPSP, when
   users in B or C's domain (outside A's main serving zone) requests A's
   programs, the returned peer-list may include few local peers, which
   may decrease the user viewing experience. With PPSP more local
   resources from cooperative vendors may be utilized. The content
   providers often deploy in-network peers called super-nodes (SN for
   short) with better stability and higher storage and bandwidth for
   better QoS. With tracker protocol, vendor A's tracker can returns
   user request with vendor B and vendor C's SNs in the peer-list. Users
   in B and C's domain can exchange data (availability) with these SNs
   using peer protocol for better QoS. In this way vendor B and vendor
   C's SNs resources are shared with vendor A and vendor A expands its
   serving scale with acceptable QoS.
























zhang                  Expires August 27, 2012               [Page 12]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   +-------------------------------------------------------------------+
   |                                                                   |
   |                          +------------------+                     |
   |            +------------>| A's      Tracker |<----------+         |
   |            |             +------------------+           |         |
   |     Tracker|                ^              ^            |         |
   |    Protocol|         Tracker|              |Tracker     |Tracker  |
   |            |        Protocol|              |Protocol    |Protocol |
   |            |                |              |            |         |
   |            |                |              |            |         |
   |            v                v              v            v         |
   |      +------+ Peer    +------+            +------+    +------+    |
   |      | B's  |<------->| B's  |            | C's  |    | C's  |    |
   |      | SN1  |Protocol | SN2  |            | SN1  |    | SN2  |    |
   |      +------+         +------+            +------+    +------+    |
   |         ^  ^                                           ^ ^        |
   |         |  |                                           | |        |
   |         |  | Peer Protocol                Peer Protocol| |        |
   | Peer    |  +-------------+              +--------------+ |Peer    |
   | Procotol|                |              |                |protocol|
   |         |                |              |                |        |
   |         |                |              |                |        |
   |         |                |              |                |        |
   |         v                v              v                v        |
   |      +------+ Peer    +------+    +---------+  Peer   +---------+ |
   |      | A's  |<------> | B's  |    |A's      |<------> |C's      | |
   |      | User1|Protocol | User2|    | User1   |Protocol | User2   | |
   |      +------+         +------+    +---------+         +---------+ |
   |                                                                   |
   +-------------------------------------------------------------------+
                 Figure 2 Cooperative Vendors Interaction

   Figure 3 is similar to Figure 2 except that the intermediate SNs are
   replaced by 3rd party CDN surrogates with PPSP. The P2P streaming
   vendors A and B can rent CDN surrogates to provide higher QoS for VIP
   users. The CDN nodes talk with the different vendors (including the
   peers inside) with the uniform protocols. For users who use browser
   equipped with HTTP, scalable streaming is also achieved. The internal
   interaction of CDN nodes can be executed by either existing protocol
   or peer protocol. The latter is used when building a new CDN system
   supporting streaming applications with lower cost.








zhang                  Expires August 27, 2012               [Page 13]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   +-------------------------------------------------------------------+
   |                                                                   |
   |                   +-------------+    +--------------+             |
   |            +----->| A's Tracker |    |  B's Tracker |<---+        |
   |            |      +-------------+    +--------------+    |        |
   |     Tracker|              ^  ^        ^    ^             |        |
   |    Protocol|       Tracker|  |Tracker |    |Tracker      |Tracker |
   |            |      Protocol|  |Protocol|    |Protocol     |Protocol|
   |            |              |  |        |    |             |        |
   |            |              |  |        |    |             |        |
   |            v              v  |        |    v             v        |
   |      +------+ Peer   +------+|        |  +------+Internal+------+ |
   |      | CDN  |<------>| CDN  ||        |  | CDN  |<-----> | CDN  | |
   |      | Node1|Protocol| Node2||        |  | Node3|Protocol| Node4| |
   |      +------+        +------+|        |  +------+        +------+ |
   |         ^  ^                 |        |        ^         ^        |
   |         |  |                 |        |        |         |        |
   |         |  | Peer Protocol   |        |   HTTP |         |        |
   | Peer    |  +-------------+   |        | +------+         | Peer   |
   | Procotol|                |   |        | | Protocol       |protocol|
   |         |                | +-+        | |                |        |
   |         |                | |          | |                |        |
   |         |                | |          | |                |        |
   |         v                v v          v v                v        |
   |      +------+ Peer    +------+    +---------+  Peer   +---------+ |
   |      | A's  |<------> | A's  |    |B's      |<------> |B's      | |
   |      | User1|Protocol | User2|    | User3   |Protocol | User4   | |
   |      +------+         +------+    +---------+         +---------+ |
   |                                                                   |
   +-------------------------------------------------------------------+
                   Figure 3 CDN Supporting P2P Streaming

5.2. PPSP supporting cross-screen streaming in heterogeneous environment

   In this scenario PC, STB/TV and mobile terminals from both fixed
   network and mobile/wireless network share the streaming content. With
   PPSP, peers can identify the types of access networks, average load,
   peer abilities and get to know what content other peers have
   (potentially with the conversion of the content availability
   expression in different networks) even in different network
   conditions as shown in Figure 4.

   These information will play an important role on selecting suitable
   peers, e.g., a PC or STB is more likely to be selected to provide
   stable content for mobile nodes; a mobile peer within a high-load
   base station is unlikely to be selected, which may lead to higher
   load on the base station.


zhang                  Expires August 27, 2012               [Page 14]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   +-------------------------------------------------------------------+
   |                                                                   |
   |      Tracker Protocol  +---------+   Tracker Protocol             |
   |        +-------------> | Tracker |<------------------+            |
   |        |               +---------+                   |            |
   |        |                    ^                        |            |
   |        |                    |                        |            |
   |        |                    |                        |            |
   |        V                    |                        V            |
   |    +------+                 |                +------------+       |
   |    |  STB |           Tracker Protocol       |Mobile Phone|       |
   |    +------+                 |                +------------+       |
   |        ^                    |                        ^            |
   |        |                    |                        |            |
   |        |                    |                        |            |
   |        |                    V                        |            |
   |        |Peer Protocol  +---------+    Peer Protocol  |            |
   |        +-------------> |    PC   |<------------------+            |
   |                        +---------+                                |
   |                                                                   |
   +-------------------------------------------------------------------+
         Figure 4 Heterogeneous P2P Streaming Interaction with PPSP

5.3. Cache service supporting P2P streaming

   In Figure 5, when peers request the P2P streaming data, the cache
   nodes intercept the requests and ask for the frequently visited
   content (or part of) on behalf of the user peers. To do this, it
   requests peer-list to the tracker and the tracker replies with
   (outward) peers in the peer-list. After the cache nodes exchange data
   with these peers, it can report what it cache to the tracker like a
   normal peer and serve other requesting peers inside. This operation
   greatly decreases the inter-network traffic and increase user
   experience in P2P streaming services for an ISP.

   The cache nodes needn't update their library when new applications
   supporting PPSP are introduced, which enable the cache nodes spend
   less cost to support more applications.










zhang                  Expires August 27, 2012               [Page 15]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   +----------------------------------------------------------------+
   |                                                                |
   |  0:Tracker Protocol +---------+                                |
   |  +----------------> | Tracker |                                |
   |  |                  +---------+                                |
   |  |                       ^                                     |
   |  |                       |                                     |
   |  |                    2: | Tracker Protocol                    |
   |  |                       |                                     |
   |  |                       |                                     |
   |  |             +---------|-------------------------------------|
   |  |             |         V                                     |
   |  |             |     +---------+                               |
   |  |  +----------|---> | Cache   |<-------------------+          |
   |  |  |          |     +---------+   1,4: Tracker/Peer|          |
   |  |  |3: Peer   |                       Protocol     |          |
   |  |  | Protocol |                                    |          |
   |  |  |          |                                    |          |
   |  |  |          |                                    |          |
   |  V  V          |                                    V          |
   |  +-----------+ |        ISP Domain             +------------+  |
   |  |  Outward  | |                               |   Inside   |  |
   |  |  Peer     | |                               |   Peer     |  |
   |  +-----------+ |                               +------------+  |
   +----------------------------------------------------------------+

           Figure 5 Cache Service Supporting Streaming with PPSP





















zhang                  Expires August 27, 2012               [Page 16]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




6. Security Considerations

   This document discusses the problem statement around Peer-to-Peer
   streaming protocols without specifying the protocols. The protocol
   specification is deferred to other documents under development in the
   PPSP working group. However we believe it is important for the reader
   to understand areas of security caused by the P2P nature of the
   proposed solution. The main issue is the usage of un-trusted entities
   (peers) for service provisioning.

   Malicious peers may, for example:

   - Issue denial of service (DOS) attacks to the trackers by sending
   large amount of requests with the tracker protocol;

   - Issue fake information on behalf of other peers;

   - Issue fake information about available content;

   - Issue fake information about chunk availability;

   Malicious peers/trackers may, for example:

   - Issue reply instead of the regular tracker (man in the middle
   attack).

   The PPSP protocol specifications, e.g., the tracker protocol and the
   peer protocol, will document the expected threats and how they will
   be mitigated for each protocol, but also considerations on threats
   and mitigations when combining both protocols in an application. This
   will include privacy of the users, protection of the content
   distribution, but not protection of the content by Digital Rights
   Management (DRM).













zhang                  Expires August 27, 2012               [Page 17]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




7. Requirements of PPSP

   This section enumerates the requirements for the PPSP, which should
   be considered when designing PPSP.

7.1. Basic Requirements

   PPSP.REQ-1: The tracker and the peer protocols SHOULD be as similar
   as possible, in terms of design, message formats and flows.

   It is desirable that the peer protocol would be an extension to the
   tracker protocol by adding a few message types, or vice versa.

   PPSP.REQ-2: The tracker protocol and the peer protocol SHOULD enable
   peers to receive streaming content within the required time
   constraints, i.e., fulfill streaming feature.

   PPSP.REQ-3: Each peer MUST have a unique ID (i.e. peer ID) in a swarm.

   It's a basic requirement for a peer to be uniquely identified in a
   swarm that other peers or tracker can refer to the peer by ID.

   PPSP.REQ-4: The streaming content MUST be uniquely identified by a
   swarm ID.

   A swarm refers to a group of peers sharing the same streaming content.
   A swarm ID uniquely identifies a swarm. The swarm ID can be used in
   two cases: 1) a peer requests the tracker for the peer list indexed
   by a swarm ID; 2) a peer tells the tracker about the swarms it
   belongs to.

   PPSP.REQ-5: The streaming content MUST allow to be partitioned into
   chunks.

   A key characteristic of P2P streaming system is allowing the data
   fetching from different peers concurrently. Therefore, the whole
   streaming content must allow to be partitioned into small pieces or
   chunks for transmission between peers.

   PPSP.REQ-6: Each chunk MUST have a unique ID (i.e. chunk ID) in the
   swarm.

   Each chunk must have a unique ID in the swarm such as the peer can
   understand which chunks are stored in which peers and which chunks



zhang                  Expires August 27, 2012               [Page 18]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   are requested by other peers. An example for generating the chunk ID
   is the buffer map approach [I-D.ietf-ppsp-survey].

   PPSP.REQ-7: The tracker protocol and peer protocol are recommended to
   be carried over TCP (or UDP, when delivery requirements cannot be met
   by TCP).

   PPSP.REQ-8: The tracker and peer protocol together MUST facilitate
   acceptable QoS (e.g. low startup delay, low channel/content switching
   time and minimal end-to-end delay) for both on-demand and live
   streaming, even for very popular content. The tracker and peer
   protocol do not include the algorithm required for scalable
   streaming. However, the tracker and peer protocol SHALL NOT restrict
   or place limits on any such algorithm.

   There are basic QoS requirements for streaming system. Setup time to
   receive a new streaming channel or to switch between channels should
   be reasonable small. End to end delay (time between content
   generation, e.g. camera and content consumption, e.g. user side
   monitor) will become critical in case of live streaming. Especially
   in provisioning of sports events, end to end delay of 1 minute and
   more are not acceptable.

   For instance, the tracker and peer protocols can support carrying QoS
   related parameters (e.g. video quality, delay requirements) together
   with the priorities of these parameters, and QoS situation (e.g.,
   performance, available uplink bandwidth) of content providing peers.

   There are also some other possible mechanisms, e.g. addition of super
   peers, in-network storage, request of alternative peer addresses, and
   the usage of QoS information for an advanced peer selection.



7.2. PPSP Tracker Protocol Requirements

   The tracker protocol defines how the peers report and request
   information to/from the tracker and how the tracker replies to the
   requests. The tracker discovery and the possible communication
   between trackers are out of the scope of tracker protocol.

   PPSP.TP.REQ-1: The tracker MUST implement the tracker protocol for
   receiving queries and periodical peer status reports/updates from the
   peers and for sending the corresponding replies.





zhang                  Expires August 27, 2012               [Page 19]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   PPSP.TP.REQ-2: The peer MUST implement the tracker protocol for
   sending queries and periodical peer status reports/updates to the
   tracker and receiving the corresponding replies.

   PPSP.TP.REQ-3: The tracker request message MUST allow the requesting
   peer to solicit the peer list from the tracker with respect to a
   specific swarm ID.

   The tracker request message may also include the requesting peer's
   preference parameter, e.g. preferred number of peers in the peer
   list, or preferred downloading bandwidth. The track will then be
   able to select an appropriate set of peers for the requesting peer
   according to the preference.

   PPSP.TP.REQ-4: The tracker reply message MUST allow the tracker to
   offer the peer list to the requesting peer with respect of a specific
   swarm ID.

   PPSP.TP.REQ-5: The tracker SHOULD support generating the peer list
   with the help of traffic optimization services, e.g. ALTO [I-D.ietf-
   alto-protocol].

   PPSP.TP.REQ-6: The peer status report/update MUST have the ability to
   inform the tracker about the peer's activity in the swarm.

   PPSP.TP.REQ-7: The chunk availability information of the peer SHOULD
   be reported to tracker when tracker needs such information to steer
   peer selection. The chunk information MUST at least contain the
   chunk ID.

   PPSP.TP.REQ-8: The chunk availability information between peer and
   tracker MUST be as expressed as compactly as possible.

   The peers may report CHUNK AVAILABILTY DIGEST information (i.e.,
   compact expression of chunk availability) to the tracker when
   possible to decrease the bandwidth consumption for messages in
   bandwidth constraint environment like mobile network. For example,
   if a peer has a bitmap like 111111...1(100 continuous 1)xxx..., the
   100 continuous "1" can be expressed by one byte with seven bits
   representing 100 and one bit representing "1".In this example, 100-
   8=92 bits are saved. Considering the frequency of exchange of CHUNK
   AVAILBILITY and the fact that many bitmaps have quite a long length
   of continuous "1" or "0", such compression makes sense.

   PPSP.TP.REQ-9: The status of the peer SHOULD be reported to the
   tracker when tracker needs such information to steer peer selection.



zhang                  Expires August 27, 2012               [Page 20]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   For example, peer status can be online time, physical link status
   including DSL/WIFI/etc, battery status, processing capability, and
   other capabilities of the peer. Therefore, the tracker is able to
   select better candidate peers for streaming.

7.3. PPSP Peer Protocol Requirements

   The peer protocol defines how the peers advertise streaming content
   availability and exchange status with each other. The peer protocol
   also defines the requests and responses of the chunks among the
   peers. The first task for this WG will be to decide which signaling
   and media transfer protocols will be used. The WG will consider
   existing protocols and, if needed, identify potential extensions to
   these protocols.

   PPSP.PP.REQ-1: The streaming content availability request message
   MUST allow the peer to solicit the chunk information from other peers
   in the peer list. The chunk information MUST at least contain the
   chunk ID. This chunk availability information MUST NOT be passed on
   to other peer, unless validated (e.g. prevent hearsay and DoS).

   PPSP.PP.REQ-2: The streaming content availability reply message MUST
   allow the peer to offer the information of the chunks in its content
   buffer. The chunk information MUST at least contain the chunk ID.

   PPSP.PP.REQ-3: The streaming content availability request message
   SHOULD allow the peer to solicit an additional list of peers to that
   received from the tracker - with the same swarm ID. The reply
   message MUST contain swarm-membership information of the peers that
   have explicitly indicated they are part of the swarm, verifiable by
   the receiver. This additional list of peers MUST only contain peers
   which have been checked to be valid and online recently (e.g. prevent
   hearsay and DoS).

   It is possible that a peer may need additional peers for certain
   streaming content. Therefore, it is allowed that the peer
   communicates with the peers in the current peer list to obtain an
   additional list of peers in the same swarm.

   PPSP.PP.REQ-4: Streaming content availability update message among
   the peers MUST be supported by peer protocol. In the push based
   model, where peers advocate their own chunk availability proactively,
   the content availability request message described in PP.REQ-1 is not
   needed. The peer protocol MUST implement either pull-based, push-
   based or both.




zhang                  Expires August 27, 2012               [Page 21]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   Due to the dynamic change of the buffered streaming content in each
   peer and the frequent join/leave of peers in the swarm, the streaming
   content availability among a peer's neighbors (i.e. the peers known
   to a peer by getting the peer lists from either tracker or peers)
   always changes and thus requires being updated on time. This update
   should be done at least on demand. For example, when a peer requires
   finding more peers with certain chunks, it sends a message to some
   other peers in the swarm for streaming content availability update.
   Alternatively, each peer in the swarm can advertise its streaming
   content availability to some other peers periodically. However, the
   detailed mechanisms for this update such as how far to spread such
   update message, how often to send this update message, etc should
   leave to peer algorithms, rather than protocol concerns.

   PPSP.PP.REQ-5: The chunk availability information between peers MUST
   be as expressed as compactly as possible.

   In PP.REQ-1/2/4, the peers may exchange CHUNK AVAILABILTY DIGEST
   information (i.e. compact expression of chunk availability) to with
   other peers when possible to decrease the bandwidth consumption for
   messages in bandwidth constraint environment like mobile network.

   PPSP.PP.REQ-6: The peer status report/update SHOULD be advertised
   among the peers to reflect the status of the peer.

   Peer status information should be advertised among the peers via the
   peer status report/update message. For example, peer status can be
   online time, physical link status including DSL/WIFI/etc, battery
   status, processing capability, and other capabilities of the peer.
   With this information, a peer can select more appropriate peers for
   streaming.

   PPSP.PP.REQ-7: The peers MUST implement the peer protocol for chunk
   data (not availability information) requests and responses among the
   peers before the streaming content is transmitted.

7.4. Security Requirements

   PPSP.SEC.REQ-1: PPSP MUST support closed swarms, where the peers are
   authenticated.

   This ensures that only the authenticated users can access the
   original media in the P2P streaming system. This can be achieved by
   security mechanisms such as user authentication and/or key management
   scheme.




zhang                  Expires August 27, 2012               [Page 22]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012


   PPSP.SEC.REQ-2: Confidentiality of the streaming content in PPSP
   SHOULD be supported and the corresponding key management scheme
   SHOULD scale well in P2P streaming system.

   PPSP.SEC.REQ-3: PPSP MUST provide an option to encrypt the data
   exchange among the PPSP entities.

   PPSP.SEC.REQ-4: PPSP MUST have mechanisms to limit potential damage
   caused by malfunctioning and badly behaving peers in the P2P
   streaming system.

   Such an attack will degrade the quality of the rendered media at the
   receiver. For example, in a P2P live video streaming system a
   polluter can introduce corrupted chunks. Each receiver integrates
   into its playback stream the polluted chunks it receives from its
   other neighbors. Since the peers forwards chunks to other peers, the
   polluted content can potentially spread through much of the P2P
   streaming network.

   PPSP.SEC.REQ-5: PPSP SHOULD support identifying badly behaving peers,
   and exclude or reject them from the P2P streaming system.

   PPSP.SEC.REQ-6: PPSP MUST prevent peers from DoS attacks which will
   exhaust the P2P streaming system's available resource.

   Given the prevalence of DoS attacks in the Internet, it is important
   to realize that a similar threat could exist in a large-scale
   streaming system where attackers are capable of consuming a lot of
   resources with just a small amount of effort.

   PPSP.SEC.REQ-7: PPSP SHOULD be robust, i.e., when centralized tracker
   fails the P2P streaming system SHOULD still work by supporting
   distributed trackers.

   PPSP.SEC.REQ-8: Existing P2P security mechanisms SHOULD be re-used as
   much as possible in PPSP, to avoid developing new security
   mechanisms.

   PPSP.SEC.REQ-9: Integrity of the streaming content in PPSP MUST be
   supported to provide a peer with the possibility to identify
   inauthentic media content (undesirable modified by other entities
   rather than its genuine source). The corresponding checksum
   distribution and verification scheme SHOULD scale well in P2P
   streaming system and be robust against distrustful trackers/peers.





zhang                  Expires August 27, 2012               [Page 23]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




8. IANA Considerations

   This document has no actions for IANA.











































zhang                  Expires August 27, 2012               [Page 24]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




9. Acknowledgments

   Thank you to J.Seng for contribution to many sections of this draft.
   Thank you to C. Williams and L. Xiao for contributions to PPSP
   requirements section.

   We would like to acknowledge the following people who provided review,
   feedback and suggestions to this document: M. Stiemerling; C. Schmidt;
   D. Bryan; E. Marocco; V. Gurbani; R. Even; H. Zhang; V. Pasual; D.
   Zhang; J. Lei; Y.Gu; H.Song; X.Jiang; J.Seedorf; D.Saumitra; A.Rahman;
   L.Deng; J.Pouwelse; A.Bakker and W.Eddy.

   This document was prepared using 2-Word-v2.0.template.dot.

































zhang                  Expires August 27, 2012               [Page 25]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




10. Informative References

    [Cisco] Cisco Visual Networking Index: Forecast and Methodology,
2009-2014,
http://www.cisco.com/en/US/solutions/collateral/ns341/ns525/ns537/ns705/
ns827/white_paper_c11-481360_ns827_Networking_Solutions_White_Paper.html

    [VoD] Yan Huang et al, Challenges,"Design and Analysis of a Large-
 scale P2P-VoD System", Sigcomm08.
    
   [Mobile Streaming1] Streaming to Mobile Users in a Peer-to-Peer
             Network, Jeonghun Noh et al, MOBIMEDIA '09.

   [Mobile Streaming2] J.Peltotaloet al.,"A real-time Peer-to-Peer
             streaming system for mobile networking environment",in
             Proceedings of the INFOCOM and Workshop on Mobile Video
             Delivery (MoVID '09), April 2009.

   [I-D.ietf-alto-protocol]Alimi, R., Penno, R., and Y. Yang, "ALTO
             Protocol", draft-ietf-alto-protocol-10 (work in progress),
             October 2011.

   [Hybrid CDN P2P]D. Xu, S. Kulkarni, C. Rosenberg, and H. Chai,
             "Analysis of a CDN-P2P hybrid architecture for cost-
             effective streaming media distribution," Springer
             Multimedia Systems, vol.11, no.4, pp.383-399, 2006.

   [I-D.ietf-ppsp-survey]Gu, Y., Zong, N., Zhang, H., Zhang, Y., Lei, J.,
             Camarillo, G., Liu, Y., Montuno, D., and X. Lei, "Survey
             of P2P Streaming Applications", draft-ietf-ppsp-survey-02
             (work in progress), July 2011.















zhang                  Expires August 27, 2012               [Page 26]

Internet-Draft Problem Statement and Requirments of PPSP   February 2012




Authors' Addresses

   Yunfei Zhang
   China Mobile Communication Corporation
   zhangyunfei@chinamobile.com

   NingZong
   Huawei Technologies Co., Ltd.
   zongning@huawei.com

   Gonzalo Camarillo
   Ericsson
   Gonzalo.Camarillo@ericsson.com

   Richard Yang
   Yale University
   yry@cs.yale.edu

   Victor Pascual
   Acme packet
   Anabel Segura 10, Madrid 28108, Spain
   Vpascual@acmepacket.com
























zhang                  Expires August 27, 2012               [Page 27]


