<?xml version="1.0" encoding="iso-8859-1"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3264 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3264.xml">
<!ENTITY RFC4145 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4145.xml">
<!ENTITY RFC4474 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4474.xml">
<!ENTITY RFC4566 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml">
<!ENTITY RFC4572 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4572.xml">
<!ENTITY RFC5245 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5245.xml">
<!ENTITY RFC5280 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
<!ENTITY RFC5389 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5389.xml">
<!ENTITY RFC5479 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5479.xml">
<!ENTITY RFC5763 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5763.xml">
<!ENTITY RFC5764 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5764.xml">
<!ENTITY RFC6347 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY T381988 SYSTEM "http://xml.resource.org/public/rfc/bibxml2/reference.ITU.T38.1998.xml">

]>




<?rfc toc="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="yes" ?>
<?rfc sortrefs="no" ?>
<?rfc strict="yes" ?>

<rfc ipr="trust200902" category="std" docName="draft-holmberg-dispatch-udptl-dtls-00" obsoletes="" updates="" submissionType="IETF" xml:lang="en">
  <front>
		<title abbrev="UDPTL over DTLS">
    UDP Transport Layer (UDPTL) over Datagram Transport Layer Security (DTLS)
		</title>

    		<author initials="C.H." surname="Holmberg" fullname="Christer Holmberg">
			<organization>Ericsson</organization>
			<address>
				<postal>
					<street>Hirsalantie 11</street>
					<code>02420</code>
					<city>Jorvas</city>
					<country>Finland</country>
				</postal>
				<email>christer.holmberg@ericsson.com</email>
			</address>
		</author>
		<author initials="I.S." surname="Sedlacek" fullname="Ivo Sedlacek">
			<organization>Ericsson</organization>
			<address>
				<postal>
					<street>Sokolovska 79</street>
					<code>18600</code>
					<city>Praha</city>
					<country>Czech Republic</country>
				</postal>
				<email>ivo.sedlacek@ericsson.com</email>
			</address>
		</author>

		<date year="2013" />
		<area>Transport</area>
		<workgroup>DISPATCH Working Group</workgroup>
		<keyword>SDP</keyword>
		<keyword>SIP</keyword>
		<keyword>DTLS</keyword>
		<keyword>UDPTL</keyword>
		<keyword>fax</keyword>
		<keyword>transport</keyword>
		<abstract>
			<t>
    This document specifies how the UDP Transport Layer (UDPTL) protocol can be transported over the Datagram Transport Layer Security (DTLS) protocol, how the usage of UDPTL over DTLS is indicated in the Session Description Protocol (SDP), and how UDPTL over DTLS is negotiated in a session established using the Session Initiation Protocol (SIP).
			</t>
		</abstract>
	</front>
  <middle>
    <section title="Introduction" toc="default">
      <t>UDPTL <xref target="ITU.T38.1998" pageno="false" format="default" /> is the predominant protocol for fax transport in IP networks. The protocol stack for fax transport using UDPTL is shown in <xref target="table_UDPTL_UDP_stack" pageno="false" format="default"/>.</t>

      <texttable anchor="table_UDPTL_UDP_stack" title="Protocol stack for UDPTL over UDP" style="all">
        <ttcol align='center'>Protocol</ttcol>
        <c>Internet facsimile protocol</c>
        <c>UDPTL</c>
        <c>UDP</c>
        <c>IP</c>
      </texttable>

      <t>UDPTL does not offer integrity and confidentiality protection. To enable integrity and confidentiality protection, <xref target="ITU.T38.2004" pageno="false" format="default" /> specifies fax transport over RTP/SAVP. However, fax transport over RTP/SAVP is not widely supported.</t>
      <t>The mechanism in this document provides integrity and confidentiality protection for fax by specifying fax transport using UDPTL over DTLS <xref target="RFC6347" pageno="false" format="default"/>. The protocol stack for integrity and confidentiality protected fax transport using UDPTL over DTLS is shown in <xref target="table_UDPTL_DTLS_UDP_stack" pageno="false" format="default"/>.</t>

      <texttable anchor="table_UDPTL_DTLS_UDP_stack" title="Protocol stack for UDPTL over UDP" style="all">
        <ttcol align='center'>Protocol</ttcol>
        <c>Internet facsimile protocol</c>
        <c>UDPTL</c>
        <c>DTLS</c>
        <c>UDP</c>
        <c>IP</c>
      </texttable>

      <t>The mechanism in this document is motivated as follows:
        <list style="symbols">
          <t>The design of DTLS <xref target="RFC6347" pageno="false" format="default"/> is well-known and implementations are widely available.</t>

          <t>No DTLS extensions are required in order to enable UDPTL transport over DTLS.</t>

          <t>Fax transport using UDPTL over DTLS only requires insertion of the DTLS layer between the UDPTL layer and the UDP layer, as shown in <xref target="table_UDPTL_DTLS_UDP_stack" pageno="false" format="default"/>.</t>

        </list>
      </t>

      <t>This document specifies the transport of UDPTL over DTLS using the DTLS record layer "application_data" packets <xref target="RFC6347" pageno="false" format="default"/>.</t>

      <t>Since the DTLS record layer "application_data" packet does not indicate whether it carries UDPTL, or some other protocol, the usage of a dedicated DTLS association for transport of UDPTL needs to be negotiated, e.g. using the Session Description Protocol (SDP) <xref target="RFC4566" pageno="false" format="default"/> and the SDP offer/answer mechanism <xref target="RFC3264" pageno="false" format="default"/>.</t>

      <t>Therefore, this document specifies a new &lt;proto&gt; value <xref target="RFC4566" pageno="false" format="default"/> for the SDP "m=" line <xref target="RFC3264" pageno="false" format="default"/>, in order to indicate UDPTL over DTLS in SDP messages <xref target="RFC4566" pageno="false" format="default"/>.
      </t>
    </section>
    <section title="Conventions" toc="default">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14, RFC 2119
        <xref target="RFC2119" pageno="false" format="default" />.</t>
      <t>
      The DTLS uses the term "session" to refer to a long-lived set of
   keying material that spans DTLS associations.  In this document,
   in order to be consistent with SIP/SDP usage of "session" terminology, we use it to refer to a multimedia
   session and use the term "DTLS session" to refer to the DTLS construct.
   We use the term "DTLS association" to refer to a particular DTLS cipher
   suite and keying material set that is associated with a single host/
   port quartet.  The same DTLS session can be used to establish the
   keying material for multiple DTLS associations.  For consistency with
   other SIP/SDP usage, we use the term "connection" when what's being
   referred to is a multimedia stream that is not specifically DTLS.
      </t>
    </section>
    <section title="Secure Channel" toc="default">
      <section title="Secure Channel Establishment" toc="default">
        <t>
   The SDP offer/answer mechanism <xref target="RFC3264" pageno="false" format="default" /> is used by other protocols, e.g.
   the Session Initiation Protocol (SIP) <xref target="RFC3261" pageno="false" format="default" /> to negotiate and establish
   multimedia sessions.
        </t>
        <t>
   In addition to the usual contents of an SDP media description ("m=" line) specified for UDPTL over the UDP, each SDP media description for UDPTL over DTLS over the UDP will also contain several SDP attributes, as specified in
   <xref target="RFC4145" pageno="false" format="default" /> and <xref target="RFC4572" pageno="false" format="default" />.
        </t>
        <t>
   The SDP offer and SDP answer MUST conform to the following requirements:
          <list style="symbols">
            <t>
          The endpoint MUST set the "proto" field of the "m=" line to the token specified in <xref target="table_SDP_proto_values" pageno="false" format="default" />.
            </t>
            <t>
   The endpoint MUST use the SDP setup attribute <xref target="RFC4145" pageno="false" format="default" />.
      The offerer MUST assign the SDP setup attribute with
      setup:actpass value, and MUST be prepared to receive a DTLS client_hello message
      before it receives the SDP answer.  The answerer MUST assign the SDP setup attribute with either
      setup:active value or setup:passive value. The answerer SHOULD assign the SDP setup attribute with the setup:active value.
Whichever
      party is active MUST initiate a DTLS handshake by sending a
      ClientHello over each flow (host/port quartet).
            </t>
            <t>
   The endpoint MUST use the SDP certificate fingerprint attribute <xref target="RFC4572" pageno="false" format="default" />.
            </t>
            <t>
   The certificate presented during the DTLS handshake MUST match the
      fingerprint exchanged via the signaling path in the SDP.
            </t>
            <t>
   If the fingerprint does not match the hashed certificate, then the
      endpoint MUST tear down the media session immediately.  Note that
      it is permissible to wait until the other side's fingerprint has
      been received before establishing the connection; however, this
      may have undesirable latency effects.
            </t>
          </list>
Editor's note: FFS if connection attribute defined in RFC4145 is needed.
        </t>

      </section>
      <section title="Secure Channel Usage" toc="default">
        <t>
      The DTLS is used as specified in <xref target="RFC6347" pageno="false" format="default" />. Once the DTLS handshake is completed, the UDPTL packets SHALL be transported in DTLS record layer "application_data" packets.
        </t>
      </section>
    </section>

      <section title="Miscellaneous Considerations" toc="default">
        <section title="Anonymous Calls" toc="default">
          <t>
   When making anonymous calls, a new self-signed certificate SHOULD be
   used for each call and the content of
   the subjectAltName attribute inside the certificate MUST NOT contain
   information that either allows correlation or identification of the
   user making anonymous calls.
          </t>
        </section>
        <section title="Middlebox Interaction" toc="default">
          <t>
            The procedures defined for SRTP-DTLS in <xref target="RFC5763" pageno="false" format="default" /> section 6.7 for interaction with middleboxes also apply to UPPTL over DTLS.
          </t>
          <t>
            The procedures defined for SRTP-DTLS in <xref target="RFC5764" pageno="false" format="default" /> section 5.1.2 for distinguishing DTLS and STUN packets also apply to UDPTL over DTLS.
          </t>
          <t>
Editor's note: The complete SRTP-DTLS implementation is not needed. Only the parts for interaction with middleboxes in RFC5763 and for distinguishing DTLS and STUN packets in RFC5764 are needed. Should those be copied into this document?
          </t>

        </section>
        <section title="Rekeying" toc="default">
          <t>
   After the DTLS handshake caused by rekeying has completed, because of possible packet reordering on the wire, packets protected by the previous set
   of keys can arrive.  To
   compensate for this fact, receivers SHOULD maintain both sets of keys
   for some time in order to be able to decrypt and verify older
   packets.  The duration of maintaining the previous set
   of keys after the finish of the DTLS handshake is out of scope of this document.
          </t>
        </section>
      </section>


      <section anchor="section.sec" title="Security Considerations">
          <t>
   DTLS media signaled with SIP requires a way to ensure that the
   communicating peers' certificates are correct.
          </t>
          <t>
   The standard DTLS strategy for authenticating the communicating
   parties is to give the server (and optionally the client) a PKIX
   <xref target="RFC5280" pageno="false" format="default" /> certificate.  The client then verifies the certificate and
   checks that the name in the certificate matches the server's domain
   name.  This works because there are a relatively small number of
   servers with well-defined names; a situation that does not usually
   occur in the VoIP context.
          </t>
          <t>
   The design described in this document is intended to leverage the
   authenticity of the signaling channel (while not requiring
   confidentiality).  As long as each side of the connection can verify
   the integrity of the SDP received from the other side, then the DTLS
   handshake cannot be hijacked via a man-in-the-middle attack.  This
   integrity protection is easily provided by the caller to the callee
   (see Alice to Bob in Section 7) via the SIP Identity <xref target="RFC4474" pageno="false" format="default" />
   mechanism.  Other mechanisms, such as the S/MIME mechanism <xref target="RFC3261" pageno="false" format="default" />, or perhaps future mechanisms yet to be specified could
   also serve this purpose.
          </t>
          <t>
   While this mechanism can still be used without such integrity
   mechanisms, the security provided is limited to defense against
   passive attack by intermediaries.  An active attack on the signaling
   plus an active attack on the media plane can allow an attacker to
   attack the connection (R-SIG-MEDIA in the notation of <xref target="RFC5479" pageno="false" format="default" />).
          </t>
      </section>

    <section anchor="section.iana" title="IANA Considerations">
      <t>
   This document updates the "Session Description Protocol (SDP)
   Parameters" registry as specified in Section 8.2.2 of <xref target="RFC4566" pageno="false" format="default"/>.
   Specifically, it adds the values in the <xref target="table_SDP_proto_values" pageno="false" format="default"/> to the table for the
   "proto" field.
      </t>
        <texttable anchor="table_SDP_proto_values" title='SDP "proto" field values'>
          <ttcol align='center'>Type</ttcol>
          <ttcol align='center'>SDP Name</ttcol>
          <ttcol align='center'>Reference</ttcol>
          <c>proto</c>
          <c>UDP/TLS/UDPTL</c>
          <c>[RFC-XXXX]</c>
        </texttable>
      <t>
[RFC EDITOR NOTE: Please replace RFC-XXXX with the RFC number of this document.]
      </t>
    </section>

    <section title="Acknowledgments">
      <t>
      Special thanks to Peter Dawes who provided comments to this draft.
      </t>
    </section>

    <section title="Change Log">
      <t>[RFC EDITOR NOTE: Please remove this section when publishing]</t>
    </section>

  </middle>
	<back>
		<references title="Normative References">
			<?rfc include="reference.RFC.2119"?>
			<?rfc include="reference.RFC.3261"?>
			<?rfc include="reference.RFC.3264"?>
			<?rfc include="reference.RFC.4145"?>
			<?rfc include="reference.RFC.4474"?>
			<?rfc include="reference.RFC.4566"?>
			<?rfc include="reference.RFC.4572"?>			
			<?rfc include="reference.RFC.5280"?>			
			<?rfc include="reference.RFC.5763"?>
			<?rfc include="reference.RFC.5764"?>
			<?rfc include="reference.RFC.6347"?>
			<?rfc include="reference.ITU.T38.1998"?>
			<reference anchor="ITU.T38.2004">
				<front>
					<title>Procedures for real-time Group 3 facsimile communication over IP networks</title>
					<author>
						<organization>International Telecommunications Union</organization>
					</author>
					<date month="" year="2004"/>
				</front>
				<seriesInfo name="ITU-T" value="Recommendation T.38"/>
			</reference>
		</references>
		<references title="Informative References">		
			<?rfc include="reference.RFC.5479"?>
		</references>
      <section anchor="section.example" title="Example">
        <section title="General">
          <t>
				Prior to establishing the session, both Alice and Bob generate self-signed certificates
				which are used for a single session or, more likely, reused for multiple sessions.
          </t>
          <t>
				The SIP signaling from Alice to her proxy is transported over TLS to ensure an integrity 
				protected channel between Alice and her identity service. Transport between proxies should 
				also be protected somehow.
          </t>
          <t>
				Only one element is shown for Alice's and Bob's proxies for the purposes of simplification.
          </t>
          <t>
				Only the mandatory SDP T.38 attributes are shown for simplification.
          </t>
        </section>

        <section title="Basic Message Flow with Identity">
          <t>
            <xref target="example_1_figure" pageno="false" format="default" /> shows an example message flow of session establishment for T.38 fax securely transported using UDPTL over DTLS.
          </t>
          <t>
            In this example flow, Alice acts as the passive endpoint of DTLS association and Bob acts as the active endpoint of DTLS association.
          </t>
          <t>
            <figure anchor="example_1_figure" title="Basic message flow with Identity">
              <artwork><![CDATA[
Alice                    Proxies                   Bob
  | (1) SIP INVITE         |                        |
  |----------------------->|                        |
  |                        | (2) SIP INVITE         |
  |                        |----------------------->|
  |                        |   (3) DTLS ClientHello |
  |<------------------------------------------------|
  |    (4) remaining messages of DTLS handshake     |
  |<----------------------------------------------->|
  |                        |                        |
  |                        |                        |
  |                        |         (5) SIP 200 OK |
  |                        |<-----------------------|
  |         (6) SIP 200 OK |                        |
  |<-----------------------|                        |
  | (7) SIP ACK            |                        |
  |------------------------------------------------>|
  |      (8) T.38 message using UDPTL over DTLS     |
  |<----------------------------------------------->|
  |                        |                        |
           ]]></artwork>
            </figure>
          </t>
          <t>
            <list style="hanging">
              <t hangText="Message (1):">
                <vspace blankLines="1"/>
                <xref target="example_1_message_1" pageno="false" format="default" /> shows the initial INVITE request sent by Alice to Alice's proxy. The initial INVITE request contains an SDP offer.
              </t>
              <t>
                <vspace blankLines="1"/>
					The "m=" line in the SDP Offer indicates T.38 fax using UDPTL over DTLS.
              </t>
              <t>
                <vspace blankLines="1"/>
					The SDP setup:actpass attribute in the SDP Offer indicates that Alice has requested to be either the active or passive endpoint.
              </t>
              <t>
                <vspace blankLines="1"/>
					The SDP fingerprint attribute in the SDP Offer indicates the certificate fingerprint computed from Alice's self-signed certificate.
              </t>
              <t>
                <vspace blankLines="2"/>
              </t>
              <t>
                <figure anchor="example_1_message_1" title="Message (1)">
                  <artwork><![CDATA[
INVITE sip:bob@example.com SIP/2.0
To: <sip:bob@example.com>
From: "Alice"<sip:alice@example.com>;tag=843c7b0b
Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj
Contact: <sip:alice@ua1.example.com>
Call-ID: 6076913b1c39c212@REVMTEpG
CSeq: 1 INVITE
Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, UPDATE
Max-Forwards: 70
Content-Type: application/sdp
Content-Length: xxxx
Supported: from-change

v=0
o=- 1181923068 1181923196 IN IP4 ua1.example.com
s=example1
c=IN IP4 ua1.example.com
t=0 0
m=image 6056 UDP/TLS/UDPTL t38
a=setup:actpass
a=fingerprint: SHA-1 \
  4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
a=T38FaxRateManagement:transferredTCF
               ]]></artwork>
                </figure>
                <vspace blankLines="1"/>
              </t>

              <t hangText="Message (2):">
                <vspace blankLines="1"/>
                <xref target="example_1_message_2" pageno="false" format="default" /> shows the SIP INVITE request sent by Bob's proxy to Bob.
                </t>
                <t>
                <vspace blankLines="1"/>
					The SIP INVITE request contains an Identity header field and
					an Identity-Info header fields inserted by Alice's proxy.
                </t>
                <t>
                <vspace blankLines="1"/>
					When received, Bob verifies the identity provided in the SIP INVITE request.
                <vspace blankLines="2"/>

                <figure anchor="example_1_message_2" title="Message (2)">
                  <artwork><![CDATA[
INVITE sip:bob@ua2.example.com SIP/2.0
To: <sip:bob@example.com>
From: "Alice"<sip:alice@example.com>;tag=843c7b0b
Via: SIP/2.0/TLS proxy.example.com;branch=z9hG4bK-0e53sadfkasldk
Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj
Record-Route: <sip:proxy.example.com;lr>
Contact: <sip:alice@ua1.example.com>
Call-ID: 6076913b1c39c212@REVMTEpG
CSeq: 1 INVITE
Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, UPDATE
Max-Forwards: 69
Identity: CyI4+nAkHrH3ntmaxgr01TMxTmtjP7MASwliNRdupRI1vpkXRvZXx1ja9k
          3W+v1PDsy32MaqZi0M5WfEkXxbgTnPYW0jIoK8HMyY1VT7egt0kk4XrKFC
          HYWGCl0nB2sNsM9CG4hq+YJZTMaSROoMUBhikVIjnQ8ykeD6UXNOyfI=
Identity-Info: https://example.com/cert
Content-Type: application/sdp
Content-Length: xxxx
Supported: from-change

v=0
o=- 1181923068 1181923196 IN IP4 ua1.example.com
s=example1
c=IN IP4 ua1.example.com
t=0 0
m=image 6056 UDP/TLS/UDPTL t38
a=setup:actpass
a=fingerprint: SHA-1 \
  4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
a=T38FaxRateManagement:transferredTCF
               ]]></artwork>
                </figure>
                <vspace blankLines="1"/>
              </t>
              <t hangText="Message (3):">
                <vspace blankLines="1"/>
					Assuming that Alice's identity is valid, Bob sends a DTLS ClientHello directly to Alice.
                <vspace blankLines="1"/>
              </t>

              <t hangText="Message (4):">
                <vspace blankLines="1"/>
					Alice and Bob exchange further messages of DTLS handshake (HelloVerifyRequest, ClientHello, ServerHello, Certificate, ServerKeyExchange, CertificateRequest, ServerHelloDone, Certificate, ClientKeyExchange, CertificateVerify, ChangeCipherSpec, Finished).
              </t>
              <t>
                <vspace blankLines="1"/>
					When Bob receives the certificate of Alice via DTLS, Bob checks whether the certificate fingerprint calculated from the Alice's certificate received via DTLS matches the certificate fingerprint received in the a=fingerprint SDP attribute of <xref target="example_1_message_2" pageno="false" format="default" />. In this message flow, the check is successful and thus session setup continues.
                <vspace blankLines="1"/>
              </t>

              <t hangText="Message (5):">
                <vspace blankLines="1"/>
                <xref target="example_1_message_5" pageno="false" format="default" /> shows a 200 (OK) response to the initial SIP INVITE request, sent by Bob to Bob's proxy. The 200 (OK) response contains an SDP answer.
              </t>
              <t>
                <vspace blankLines="1"/>
					The "m=" line in the SDP Answer indicates T.38 fax using UDPTL over DTLS.
              </t>
              <t>
                <vspace blankLines="1"/>
					The SDP setup:active attribute in the SDP Answer indicates that Bob has requested to be the active endpoint.
              </t>
              <t>
                <vspace blankLines="1"/>
					The SDP fingerprint attribute in the SDP Answer indicates the certificate fingerprint computed from Bob's self-signed certificate.
              </t>
              <t>
                <vspace blankLines="2"/>
              </t>

              <t>
                <figure anchor="example_1_message_5" title="Message (6)">
                  <artwork><![CDATA[
SIP/2.0 200 OK
To: <sip:bob@example.com>;tag=6418913922105372816
From: "Alice" <sip:alice@example.com>;tag=843c7b0b
Via: SIP/2.0/TLS proxy.example.com:5061;branch=z9hG4bK-0e53sadfkasldk
Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj
Record-Route: <sip:proxy.example.com;lr>
Call-ID: 6076913b1c39c212@REVMTEpG
CSeq: 1 INVITE
Contact: <sip:bob@ua2.example.com>
Content-Type: application/sdp
Content-Length: xxxx
Supported: from-change

v=0
o=- 6418913922105372816 2105372818 IN IP4 ua2.example.com
s=example2
c=IN IP4 ua2.example.com
t=0 0
m=image 12000 UDP/TLS/UDPTL t38
a=setup:active
a=fingerprint: SHA-1 \
  FF:FF:FF:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
a=T38FaxRateManagement:transferredTCF
               ]]></artwork>
                </figure>
                <vspace blankLines="1"/>
              </t>

              <t hangText="Message (6):">
                <vspace blankLines="1"/>
                <xref target="example_1_message_6" pageno="false" format="default" /> shows a 200 (OK) response to the initial SIP INVITE request, sent by Alice's proxy to Alice.
                Alice checks if the certificate fingerprint calculated from the Bob's certificate received via DTLS is the same as the certificate fingerprint received in the a=fingerprint SDP attribute of <xref target="example_1_message_6" pageno="false" format="default" />. In this message flow, the check is successful and thus session setup continues.
                <vspace blankLines="1"/>
              </t>

              <t>
                <figure anchor="example_1_message_6" title="Message (7)">
                  <artwork><![CDATA[
SIP/2.0 200 OK
To: <sip:bob@example.com>;tag=6418913922105372816
From: "Alice" <sip:alice@example.com>;tag=843c7b0b
Via: SIP/2.0/TLS ua1.example.com;branch=z9hG4bK-0e53sadfkasldkfj
Record-Route: <sip:proxy.example.com;lr>
Call-ID: 6076913b1c39c212@REVMTEpG
CSeq: 1 INVITE
Contact: <sip:bob@ua2.example.com>
Content-Type: application/sdp
Content-Length: xxxx
Supported: from-change

v=0
o=- 6418913922105372816 2105372818 IN IP4 ua2.example.com
s=example2
c=IN IP4 ua2.example.com
t=0 0
m=image 12000 UDP/TLS/UDPTL t38
a=setup:active
a=fingerprint: SHA-1 \
  FF:FF:FF:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB
a=T38FaxRateManagement:transferredTCF
               ]]></artwork>
                </figure>
                <vspace blankLines="1"/>
              </t>

              <t hangText="Message (7):">
                <vspace blankLines="1"/>
					Alice sends the SIP ACK request to Bob.
                <vspace blankLines="1"/>
              </t>

              <t hangText="Message (8):">
                <vspace blankLines="1"/>
					At this point, Bob and Alice can exchange T.38 fax securely transported using UDPTL over DTLS.
                <vspace blankLines="1"/>
              </t>

            </list>
          </t>
        </section>
      </section>
	</back>
</rfc>

