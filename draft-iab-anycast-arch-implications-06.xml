<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
<!ENTITY I-D.ietf-ipv6-dns-discovery SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-ipv6-dns-discovery.xml">
<!ENTITY RFC1035 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC1305 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1305.xml">
<!ENTITY RFC1546 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1546.xml">
<!ENTITY RFC1884 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1884.xml">
<!ENTITY RFC2030 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2030.xml">
<!ENTITY RFC2101 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2101.xml">
<!ENTITY RFC2373 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2373.xml">
<!ENTITY RFC2402 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2402.xml">
<!ENTITY RFC2406 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2406.xml">
<!ENTITY RFC2526 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2526.xml">
<!ENTITY RFC2893 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2893.xml">
<!ENTITY RFC2902 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2902.xml">
<!ENTITY RFC2991 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2991.xml">
<!ENTITY RFC3056 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3056.xml">
<!ENTITY RFC3068 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3068.xml">
<!ENTITY RFC3258 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3258.xml">
<!ENTITY RFC3513 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3513.xml">
<!ENTITY RFC3775 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3775.xml">
<!ENTITY RFC3882 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3882.xml">
<!ENTITY RFC3964 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3964.xml">
<!ENTITY RFC4085 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4085.xml">
<!ENTITY RFC4213 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4213.xml">
<!ENTITY RFC4291 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4291.xml">
<!ENTITY RFC4330 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4330.xml">
<!ENTITY RFC4339 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4339.xml">
<!ENTITY RFC4610 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4610.xml">
<!ENTITY RFC4732 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4732.xml">
<!ENTITY RFC4786 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4786.xml">
<!ENTITY RFC4778 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4778.xml">
<!ENTITY RFC4861 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC4892 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4892.xml">
<!ENTITY RFC4924 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4924.xml">
<!ENTITY RFC4942 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4942.xml">
<!ENTITY RFC5001 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5001.xml">
<!ENTITY RFC6382 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6382.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="<draft-iab-anycast-arch-implications-06>" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Arch Considerations of IP Anycast">Architectural Considerations of IP Anycast</title>

    <author fullname="Danny McPherson" initials="D.M."
            surname="McPherson">
      <organization>Verisign, Inc.</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code></code>
          <country>USA</country>
        </postal>
        <email>dmcpherson@verisign.com</email>
      </address>
    </author>

    <author fullname="Dave Oran" initials="D.O."
            surname="Oran">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street></street>
          <country>USA</country>
        </postal>
        <email>oran@cisco.com</email>
      </address>
    </author>

    <author fullname="Dave Thaler" initials="D.T."
            surname="Thaler">
      <organization>Microsoft Corporation</organization>
      <address>
        <postal>
          <street>One Microsoft Way</street>
          <city>Redmond</city>
          <region>WA</region>
          <country>USA</country>
        </postal>
        <email>dthaler@microsoft.com</email>
      </address>
    </author>

    <author fullname="Eric Osterweil" initials="E.O."
            surname="Osterweil">
      <organization>Verisign, Inc.</organization>
      <address>
        <postal>
          <street>12061 Bluemont Way</street>
          <city>Reston</city>
          <region>VA</region>
          <code></code>
          <country>USA</country>
        </postal>
        <email>eosterweil@verisign.com</email>
      </address>
    </author>

    <date month="November" year="2012" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>anycast</keyword>
    <keyword>architecture</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This memo discusses architectural implications of IP anycast, and provides some historical analysis of anycast use by various IETF
        protocols.</t>
    </abstract>
  </front>

  <middle>
    <section title="Overview">
      <t>IP anycast is used for at least one critical Internet service, that
        of the Domain Name System <xref target="RFC1035"/>
         root servers.  As of early 2009,
         at least 10 of the 13 root name servers were using IP anycast
         <xref target="RSSAC29"/>.  Use of IP anycast is growing for other applications as
         well.  It has been deployed for over a decade for DNS resolution
         services and is currently used by several DNS Top Level Domain (TLD)
         operators.  IP anycast is also used for other services in operational
         environments, including Network Time Protocol (NTP) <xref target="RFC1305"/>
         services.
      </t>

      <t>
        Anycast addresses are syntactically indistinguishable from unicast
        addresses.  Allocation of anycast addresses typically follows a model
        similar to that of unicast allocation policies.  Anycast addressing
        is largely equivalent to that of unicast in multiple locations, and
        leverages unicast's destination-based routing to deliver a packet to
        either zero or one interface among the set of interfaces asserting
        the reachability for the address.  The expectation of delivery is to
        the "closest" instance as determined by unicast routing topology
        metric(s), and there is also a possibility that various load-balancing 
        techniques (e.g., per-packet, per-microflow) may be used
        among multiple equal cost routes to distribute load for an anycasted
        prefix.
      </t>

      <t>
        Unlike IP unicast, it is not considered an error to assert the same
        anycast address on multiple interfaces within the same or multiple
        systems.
      </t>

      <t>
        Some consider anycast a "deceptively simple idea".  That is, when
        IP anycast is employed, many pitfalls and subtleties exist with 
        applications and transports, as well as for routing configuration 
        and operation.  In this document, we aim to capture many of the
        architectural implications of IP anycast.
      </t>

      <t>
        <xref target="RFC4786">BCP 126</xref> discusses several different deployment models with IP
        anycast.  Two additional distinctions beyond that document involve
        "off-link anycast" and "on-link anycast".  "Off-link anycast" takes
        advantage of routing protocol preferences and IP's hop-by-hop
        destination-based forwarding paradigm in order to direct packets to
        the "closest" destination.  This is the traditional method of anycast
        largely considered in <xref target="RFC4786">BCP 126</xref> and can be used for IPv4 and IPv6.
        "On-link anycast" is the formal support of anycast in the address
        resolution (duplicate address detection) protocol and is only standardized for IPv6, with the
        introduction of designated anycast addresses on the anycasted hosts,
        and the Override flag in Neighbor Discovery (ND) Neighbor
        Advertisements (NAs) <xref target="RFC4861"/>. 
        There is no standardized mechanism for this in IPv4.
      </t>

      <!--
      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
      -->
    </section>

    <section title="Background">
      <t>
        As of this writing, the term "anycast" appears in 176 RFCs and 144
        active Internet-Drafts.  The following sections capture some of the
        key appearances and discussion of anycasting within the IETF over the
        years.
      </t>

      <section title="Anycast History">
        <t>
          The first formal specification of anycast was provided in "Host
          Anycasting Service" <xref target="RFC1546"/>.  The authors of this document did a
          good job of capturing most of the issues that exist with IP anycast
          today.
        </t>

        <t>
          One of the first documented uses of anycast was in 1994 for a "Video
          Registry" experiment <xref target="IMR9401"/>.  In the experiment a UDP query was
          transmitted to an anycasted address to locate the topologically
          closest "supposedly equivalent network resource":
          <list hangIndent="10" style="empty">
            <t>
            "A video resource (for example, a catalog server that lists
             available video clips) sends an anycast UDP datagram to locate
             the nearest video registry.  At most one registry responds with
             a unicast UDP datagram containing the registry's IP address.
             Said resource then opens a TCP connection to that [the received
             registry address] address and sends a request to register itself.
             Every 5 minutes or so, each registry multicasts to all other
             registries all of the resources it knows from local registration
             requests.  It also immediately announces newly registered
             resources.  Remotely registered resources not heard about for
             20 minutes are dropped."
            </t>
          </list>
        </t>

        <t>
          There is also discussion that ISPs began using anycast for DNS
          resolution services around the same time, although no public
          references to support this are available.
        </t>

        <t>
          In 1997 the IAB clarified that IPv4 anycast addresses were pure
          "locators", and could never serve as an "identifier" (of a host, an
          interface, or anything else) <xref target="RFC2101"/>.
        </t>

        <t>
          In 1998 the IAB conducted a routing workshop <xref target="RFC2902"/>.  Of the
          conclusions and output action items from the report, an Anycast
          section is contained in Section 2.10.3.  Specifically called out 
          is the need to describe the advantages and disadvantages of
          anycast, and the belief that local-scoped well-known anycast
          addresses will be useful to some applications.  In the subsequent
          section, an action item was outlined that suggested a BOF should be
          held to plan work on anycast, and if a working group forms, a paper
          on the advantages and the disadvantages of anycast should be included
          as part of the charter.
        </t>

        <t>
          As a result of the recommendation in <xref target="RFC2902"/>, in November of 1999
          an Anycast BOF <xref target="ANYCAST BOF"/> was held at IETF 46.  A number of uses
          for anycast were discussed.  No firm conclusion was reached regarding
          use of TCP with anycasted services, but it was observed that
          anycasting was useful for DNS, although it did introduce some new
          complexities.  The use of global anycast was not expected to scale
          (see <xref target="sec:reg_wide_anycast_use"/> below for more discussion),
          and hence was expected to be limited to a small number of key uses.
        </t>

        <t>
          In 2001, the Multicast and Anycast Group Membership <xref target="MAGMA"/> WG was
          chartered to address host-to-router signaling, including initial authentication and access control
          issues for multicast and anycast group membership, but other aspects of
          anycast, including architecture and routing, were outside the group's
          scope.
        </t>

        <t>
          SNTPv4 <xref target="RFC2030"/> defined how to use SNTP anycast for server discovery.
          This was extended in <xref target="RFC4330"/> as an NTP-specific "manycast"
          service, in which anycast was used for the discovery part.
        </t>

        <!-- TODO Refs below -->

        <t>
          IPv6 defined some reserved subnet anycast addresses <xref target="RFC2526"/> and
          assigned one to "Mobile IPv6 Home-Agents" <xref target="RFC3775"/>.
        </t>

        <t>
          The original IPv6 transition mechanism <xref target="RFC2893"/> made use of IPv4
          anycast addresses as tunnel endpoints for IPv6 encapsulated in IPv4,
          but this was later removed <xref target="RFC4213"/>.  The 6to4 tunneling protocol
          <xref target="RFC3056"/> was augmented by a 6to4 relay anycast prefix 
          <xref target="RFC3068"/>
          aiming to simplify the configuration of 6to4 routers.  Incidentally,
          6to4 deployment has shown a fair number of operational and security
          issues <xref target="RFC3964"/> that result from using anycast as a discovery
          mechanism.  Specifically, one inference is that operational
          consideration is needed to ensure that anycast addresses get
          advertised and/or filtered in a way that produces the intended scope
          (e.g., only advertise a route for your 6to4 relay to ASes that
          conform to your own acceptable usage policy), an attribute that can
          easily become quite operationally expensive.
        </t>

        <t>
          In 2002, DNS' use of anycast was first specified in "Distributing Authoritative
          Name Servers via Shared Unicast Addresses" <xref target="RFC3258"/>.  It is notable
          that it used the term "shared unicast address" rather than "anycast
          address" for the service.
          This distinction was made due to the IPv6 distinction in the on-link model. "Shared 
          unicast" addresses are unicast (not multicast) in the IPv6 model and, therefore, 
          support the off-link anycast model (described earlier), but not the on-link anycast
          model.  
          At the same time, site-local-scoped well-known addresses began being used for recursive 
          resolvers <xref target="I-D.ietf-ipv6-dns-discovery"/>, but this use was never standardized
          (see below in <xref target="sec:service_disc"/> for more discussion).
        </t>

        <t>
          Anycast was used for routing to rendezvous points (RPs) for 
          PIM <xref target="RFC4610"/>.
        </t>

        <t>
          "Operation of Anycast Services" <xref target="RFC4786">BCP 126</xref> deals with how the routing
          system interacts with anycast services, and the operation of anycast
          services.
        </t>

        <t>
          "Requirements for a Mechanism Identifying a Name Server Instance"
          <xref target="RFC4892"/> cites the use of anycast with DNS as a motivation to
          identify individual name server instances, and the Name Server ID (NSID) option was
          defined for this purpose <xref target="RFC5001"/>.
        </t>

        <t>
          The IAB's
          "Reflections on Internet Transparency" <xref target="RFC4924"/> briefly mentions
          how violating transparency can also damage global services that use
          anycast.
        </t>
      </section>

      <section title="Anycast in IPv6">
        <t>
          Originally, the IPv6 addressing architecture <xref target="RFC1884"/> 
          <xref target="RFC2373"/>
          <xref target="RFC3513"/> severely restricted the use of anycast addresses.  In
          particular, they provided that anycast addresses must not be used as
          a source address, and must not be assigned to an IPv6 host (i.e.,
          only routers).  These restrictions were later lifted in 2006 <xref target="RFC4291"/>.
        </t>

        <t>
          In fact, the recent "IPv6 Transition/Co-existence Security
          Considerations" <xref target="RFC4942"/> overview now recommends:
          <list hangIndent="10" style="empty">
            <t>
              "To avoid exposing knowledge about the internal structure of
              the network, it is recommended that anycast servers now take
              advantage of the ability to return responses with the anycast
              address as the source address if possible."
            </t>
          </list>
        </t>

        <t>
          As discussed in the Overview, "on-link anycast" is employed expressly
          in IPv6 via ND NAs; see Section 7.2.7 of <xref target="RFC4861"/> for additional
          information.
        </t>
      </section>

      <section anchor="sec:dns_anycast" title="DNS Anycast">
        <t>
          "Distributed Authoritative Name Servers via Shared Unicast Addresses"
          <xref target="RFC3258"/> described how to reach authoritative name servers using
          anycast.  It made some interesting points, for example this text from
          Section 2.3:
          <list hangIndent="10" style="empty">
            <t>
              "This document presumes that the usual DNS failover methods are the
              only ones used to ensure reachability of the data for clients.  It
              does not advise that the routes be withdrawn in the case of
              failure; it advises instead that the DNS process shutdown so that
              servers on other addresses are queried.  This recommendation
              reflects a choice between performance and operational complexity.
              While it would be possible to have some process withdraw the route
              for a specific server instance when it is not available, there is
              considerable operational complexity involved in ensuring that this
              occurs reliably.  Given the existing DNS failover methods, the
              marginal improvement in performance will not be sufficient to
              justify the additional complexity for most uses."
            </t>
          </list>
        </t>

        <t>
          Other assertions included:
          <list style="symbols">
              <t>it asserted (as an advantage) that no routing changes were needed</t>

              <t>it recommended stopping DNS processes, rather than withdrawing
              routes, to deal with failures, data synchronization issues, and
              fail-over, as provided in the quoted text above.  The spirit of this
              advice was that DNS resolvers may (indeed) reach out and query unavailable DNS
              name servers, but as their queries timeout they will elect to pin themselves
              to other name server instances, which are available.</t>

              <t>it argued that failure modes involving state were not serious,
                because:
                <list style="symbols">
                    <t>the vast majority of DNS queries are UDP</t>

                    <t>large routing metric disparity among authoritative server
                    instances would localize queries to a single instance for
                    most clients</t>

                    <t>when the resolver tries TCP and it breaks, the resolver
                      will try to move to a different server instance.  In order
                      ensure that this is possible,
                      it is important that an anycast zone be configured with multiple
                      server addresses for different name server instances.
                      The advice given in <xref target="I-D.ietf-ipv6-dns-discovery"/>
                      describes, in more detail, why using multiple addresses is
                      important.  With these provisions, failed TCP connections to
                      an anycast instance presumably won't break, just as 
                    with normal unicast failover.</t>
                </list>
              </t>
          </list>
        </t>

        <t>
          "Unique Per-Node Origin ASNs for Globally Anycasted Services" 
          <xref target="RFC6382"/> makes recommendations regarding the use of per-node unique
          origin ASNs for globally anycasted critical infrastructure services
          in order to provide routing system discriminators for a given
          anycasted prefix.  The object was to allow network management and
          monitoring techniques, or other operational mechanisms to employ this
          new origin AS as a discriminator in whatever manner fits their
          operating environment, either for detection or policy associated with
          a given anycasted node.
        </t>
      </section>

      <section title="BCP 126 on Operation of Anycast Services">

        <t>
          "Operation of Anycast Services" <xref target="RFC4786">BCP 126</xref> was a product of the IETF's
          GROW working group.  The primary design constraint considered was
          that routing "be stable" for significantly longer than a "transaction
          time", where "transaction time" is loosely defined as "a single
          interaction between a single client and a single server".  It takes
          no position on what applications are suitable candidates for anycast
          usage.
        </t>

        <t>
          Furthermore, it views anycast service disruptions as an operational
          problem: "Operators should be aware that, especially for long running
          flows, there are potential failure modes using anycast that are more
          complex than a simple 'destination unreachable' failure using
          unicast."
        </t>

        <t>
          The document primary deals with global Internet-wide services
          provided by anycast.  Where internal topology issues are discussed
          they're mostly regarding routing implications, rather than
          application design implications.  BCP 126 also views networks
          employing per-packet load balancing on equal cost paths as
          "pathological".  This was also discussed in  <xref target="RFC2991"/>.
        </t>
      </section>
    </section>

    <section title="Principles">
      <section title="Layering and Resiliency">
        <t>
          Preserving the integrity of a modular layered design for IP protocols
          on the Internet is critical to its continued success and flexibility.
          One such consideration is that of whether an application should have
          to adapt to changes in the routing system.
        </t>

        <t>
          Higher layer protocols should make minimal assumptions about lower
          layer protocols.  E.g., applications should make minimal assumptions
          about routing stability, just as they should make minimal assumptions
          about congestion and packet loss.  When designing applications, it
          would perhaps be safe to assume that the routing system may deliver
          each packet to a different service instance, in any pattern, with
          temporal re-ordering being a not-so-rare phenomenon.
        </t>

        <t>
          Stateful transport protocols (e.g., TCP), without modification, do
          not understand the properties of anycast and hence will fail
          probabilistically, but possibly catastrophically, when using anycast
          addresses in the presence of "normal" routing dynamics.
          Specifically, if datagrams associated with a given active transaction
          are routed to a new anycasted end system and that end system lacks
          state data associated with the active transaction, 
          the session will  be reset and hence need to be reinitiated.
        </t>
      </section>

      <section title="Anycast Addresses as Destinations">
        <t>
          Anycast addresses are "safe" to use as destination addresses for an
          application if the following design points are all met:
            <list style="symbols">
              <t>A request message or "one shot" message is self-contained in a
                single transport packet</t>

              <t>A stateless transport (e.g., UDP) is used for the above</t>

              <t>Replies are always sent to a unicast address; these can be
                 multi-packet since the unicast destination is presumed to be
                 associated with a single "stable" end system and not an
                 anycasted source address. Note that this constrains the use of
                 anycast as source addresses in request messages, since reply
                 messages sent back to that address may reach a device that was
                 not the source that initially triggered it.
               </t>

               <t>The server side of the application keeps no hard state across requests.</t>

               <t>Retries are idempotent; in addition to not assuming server state,
                  they do not encode any assumptions about loss of requests versus
                  loss of replies.</t>
            </list>
        </t>

      </section>

      <section title="Anycast Addresses as Sources">
        <t>
          Anycast addresses are "safe" to use as source addresses for an application if
          all of the following design points are met:
          <list style="symbols">
              <t>No response message is generated by the receiver
                 with the anycast source used as a destination unless the
                 application has some private state synchronization that allows
                 for the response message arriving at a different instance
              </t>

              <t>
                The source anycast address is reachable via the interface address
                if unicast reverse path forwarding (RPF) <xref target="RFC4778"/> checking is
                on, or the service address is explicitly provisioned to bypass
                RPF checks. In addition to the application defined in <xref target="RFC4778"/>,
                Section 4.4.5 of <xref target="RFC4786">BCP 126</xref> gives explicit consideration to RPF
                checks in anycasting operations.
              </t>
          </list>
        </t>
      </section>

      <section anchor="sec:service_disc" title="Service Discovery">
        <t>
          Applications able to tolerate an extra round trip time (RTT) to learn
          a unicast destination address for multi-packet exchanges might safely
          use anycast destination addresses for service instance discovery. For
          example, "instance discovery" messages are sent to an anycast
          destination address, and a reply is subsequently sent from the unique
          unicast source address of the interface that received the discovery
          message, or a reply is sent from the anycast source address of the
          interface that received the message, containing the unicast address
          to be used to invoke the service.  Only the latter of these  will
          avoid potential NAT binding and stateful firewall issues.
        </t>

        <t>
          Section 3.3 of <xref target="RFC4339"/> proposes a "Well-known
          Anycast Address" for recursive DNS service configuration in clients
          to ease configuration and allow those systems to ship with these
          well-known addresses configured "from the beginning, as, say, factory
          default".  During publication the IESG requested that the following
          "IESG Note" be contained in the document:
          <list hangIndent="10" style="empty">
            <t>
              "This document describes three different approaches for the
              configuration of DNS name resolution server information in IPv6
              hosts.
            </t>

            <t>
              There is not an IETF consensus on which approach is preferred.
              The analysis in this document was developed by the proponents
              for each approach and does not represent an IETF consensus.
            </t>

            <t>
              The 'RA option' and 'Well-known anycast' approaches described in
              this document are not standardized.  Consequently the analysis
              for these approaches might not be completely applicable to any
              specific proposal that might be proposed in the future."
            </t>
          </list>
        </t>
      </section>
    </section>

    <section title="Analysis">
      <section anchor="sec:reg_wide_anycast_use" title="Regarding Widespread Anycast Use">
        <t>
          Widespread use of anycast for global Internet-wide services or inter-
          domain services has some scaling challenges.  Similar in ways to
          multicast, each service generates at least one unique route in the
          global BGP routing system.  As a result, additional anycast instances
          result in additional paths for a given prefix, which scales super-
          linearly as a function of denseness of inter-domain interconnection
          within the routing system (i.e., more paths result in more resources,
          more network interconnections result in more paths).
        </t>

        <t>
          This is why the Anycast BOF concluded that "the use of global anycast
          addresses was not expected to scale and hence was expected to be
          limited to a small number of key uses."
        </t>

      </section>
      <section title="Transport Implications">
        <t>
          UDP is the "lingua franca" for anycast today.  Stateful transports
          could be enhanced to be more anycast friendly.  This was anticipated
          in Host Anycasting Services <xref target="RFC1546"/>, specifically:
          <list hangIndent="10" style="empty">
            <t>
              "The solution to this problem is to only permit anycast
                addresses as the remote address of a TCP SYN segment
                (without the ACK bit set).  A TCP can then initiate a
                connection to an anycast address.  When the SYN-ACK is
                sent back by the host that received the anycast segment,
                the initiating TCP should replace the anycast address of
                its peer, with the address of the host returning the
                SYN-ACK.  (The initiating TCP can recognize the connection
                for which the SYN-ACK is destined by treating the anycast
                address as a wildcard address, which matches any incoming
                SYN-ACK segment with the correct destination port and
                address and source port, provided the SYN-ACK's full
                address, including source address, does not match another
                connection and the sequence numbers in the SYN-ACK are
                correct.)  This approach ensures that a TCP, after
                receiving the SYN-ACK is always communicating with only
                one host."
            </t>
          </list>
        </t>
        <t>
          Multi-address transports (e.g., SCTP) might be more amenable to such
          extensions than TCP.
        </t>

        <t>
          Some similarities exist between what is needed for anycast and what
          is needed for address discovery when doing multi-homing in the
          transport layer.
        </t>

      </section>

      <section title="Stateful Firewalls, Middleboxes and Anycast">
        <t>
          Middleboxes (e.g., NATs) and stateful firewalls cause problems
          when used in conjunction with some ways to use anycast.  In particular, a server-side
          transition from an anycast source IP address to a unique unicast
          address may require new or additional session state, and this may
          not exist in the middlebox, as discussed previously in 
          <xref target="sec:service_disc"/>.
        </t>


        <!--
      <t>Simple indented paragraph using the "empty" style: <list
          hangIndent="10" style="empty">
          <t>The quick, brown fox jumped over the lazy dog and lived to fool
          many another hunter in the great wood in the west.</t>
        </list></t>
        -->
      </section>

    <section anchor="Security" title="Security Considerations">
      <t>
        Anycast is often deployed to mitigate or at least localize the
        effects of distributed denial of service (DDOS) attacks.  For
        example, with the Netgear NTP fiasco <xref target="RFC4085"/> anycast was used in a
        distributed sinkhole model <xref target="RFC3882"/> to mitigate the effects of
        embedded globally-routed Internet addresses in network elements.
      </t>

      <t>
        "Internet Denial-of-Service Considerations" <xref target="RFC4732"/> notes: that "A
        number of the root nameservers have since been replicated using
        anycast to further improve their resistance to DoS".
      </t>

      <t>
        "Operation of Anycast Services" <xref target="RFC4786">BCP 126</xref> cites DoS mitigation,
        constraining DoS to localized regions, and identifying attack sources
        using spoofed addresses as some motivations to deploy services using
        anycast.  Multiple anycast service instances such as those used by
        the root name servers also add resiliency when network partitioning
        occurs (e.g., as the result of transoceanic fiber cuts or natural
        disasters).
      </t>

      <t>
        It should be noted that there is a significant man in the middle
        (MITM) exposure in either variant of anycast discovery (see 
        <xref target="sec:service_disc"/>)
        that in many applications may necessitate
        the need for end to end security models <xref target="RFC2402"/> <xref target="RFC2406"/> that
        enable end systems to authenticate one another.
      </t>

      <t>
        Furthermore, as discussed earlier in this document, operational
        consideration needs to be given to ensure that anycast addresses get
        advertised and/or filtered in a way that produces intended scope (for
        example, only advertise a route to your 6to4 relay to ASes that
        conform to your own Acceptable Use Policy, AUP). This seems to be operationally expensive,
        and is often vulnerable to errors outside of the local routing
        domain, in particular when anycasted services are deployed with the
        intent to scope associated announcements within some local or
        regional boundary.
      </t>

      <t>
        As previously discussed, <xref target="RFC6382"/> makes recommendations regarding
        the use of per-node unique origin ASNs for globally anycasted
        critical infrastructure services in order to provide routing system
        discriminators for a given anycasted prefix.  Network management and
        monitoring techniques, or other operational mechanisms may then
        employ this new discriminator in whatever manner fits their operating
        environment, either for detection or policy associated with a given
        anycasted node.
      </t>

      <t>
        Unlike multicast (but like unicast), anycast allows traffic stealing.
        That is, with multicast, joining a multicast group doesn't prevent
        anyone else who was receiving the traffic from continuing to receive
        the traffic.  With anycast, adding an anycasted node to the routing
        system can prevent a previous recipient from continuing to receive
        traffic because it may now be delivered to the new node instead.  As
        such, if one allows unauthorized anycast nodes onto the network,
        traffic can be diverted thereby triggering DoS or other attacks.
        Section 6.3 of <xref target="RFC4786">BCP 126</xref> provides expanded discussion on "Service
        Hijacking" and "traffic stealing".
      </t>

      <t>
        Unlike unicast (but like multicast), the desire is to allow
        applications to cause route injection (either directly or as a side
        effect of doing something else).  This combination is unique to
        anycast and presents new security concerns which are why <xref target="MAGMA">MAGMA</xref> only
        got so far.  The security concerns include:
      </t>

      <t>
        <list style="numbers">
          <t>
            Allowing route injection can cause DOS to a legitimate address
            owner.
          </t>

          <t>
            Allowing route injection consumes routing resources and can
            hence cause DOS to the routing system and impact legitimate
            communications as a result.
          </t>
        </list>
      </t>

      <t>
        These are two of the core issues that were part of the discussion
        during <xref target="RFC1884"/>, the <xref target="ANYCAST BOF"/>, 
        and the <xref target="MAGMA">MAGMA</xref> chartering.
      </t>

      <t>
        Additional security considerations are scattered throughout the list
        of references provided herein.
      </t>

    </section>

    <section title="Deployment Considerations">
      <t>
        <xref target="RFC4786">BCP 126</xref> provides some very solid guidance related to operations of
        anycasted services, and in particular DNS.
      </t>

      <t>
        This document covers issues associated with the architectural
        implications of anycast.  This document does not treat in any depth
        the fact that there are deployed services with TCP transport using
        anycast today. While we believe that such practice is not "safe" in
        the traditional and architectural sense, these things are indeed
        relative, and we recognize it is not always the case that
        unpredictability in the routing system beyond the local
        administrative domain is unmanageable.  That is, despite the inherent
        architectural problems in the use of anycast with stateful transport
        and connection-oriented protocols, there is expanding deployment
        (e.g., for content distribution networks) and situations exist where
        it may make sense (e.g., such as with service discovery, short-
        lived transactions, or 
        in cases where a client-base may need topological-specific service selection
        that can be implicitly handled by allowing a homogeneous anycast address
        configuration to dynamically direct traffic to topologically optimal service instances).
        <!--
        generally where a service is provided via an
        anycasted address in order to minimize client or subscriber
        configuration variances and topologically localize which servers may
        be contacted by a given client.  
        -->
        In general, operators should
        consider the content and references provided herein, and evaluate the
        benefits and implications of anycast in their specific environments
        and applications.
      </t>

      <t>
        In addition, (as noted in <xref target="sec:dns_anycast"/>) the 
        issue of whether to withdraw 
        anycast routes when there is a service failure is only briefly broached in
        <xref target="RFC3258"/>.  The advice given is that routes should not be
        withdrawn, in order to reduce operational complexity.  However, the
        issue of route advertisements and service outages deserves greater attention.
        There is an inherent tradeoff that exists between the operational complexity
        of matching service outages with anycast route withdraws, and allowing 
        anycast routes to persist for services that are no longer available.
        <xref target="RFC3258"/> maintains that DNS' inherent failure recovery
        mechanism is sufficient to overcome failed nodes, but even this advice
        enshrines the notion that these decisions are both application specific
        and subject to the operational needs of each deployment.  Rather than prescribing
        advice that attempts to befit all situations, it is important to realize
        that anycast services are, inherently, cross-modal (i.e. they are visible in multiple
        protocol layers, or modes, of the network application).  The routing system
        plays a larger role in DNS when services are anycast.  Therefore, 
        operational consideration must be given to the fact that relying on 
        anycast for DNS deployment optimizations means that there are operational
        benefits to keeping route advertisements (and withdraws) symmetric
        with service availability.  In order to ensure, for example, the DNS resolvers
        in a failed anycast instance's catchment <xref target="RFC4786"/> are able 
        to failover and reach 
        a non-failed catchment, a route withdraw is almost certainly required.
      </t>
    </section>
  </section>

  <section anchor="IANA" title="IANA Considerations">
    <t>
      No IANA actions are required.
    </t>
  </section>

  <section title="Conclusions">
    <t>
      In summary, operators and application vendors alike should consider
      the benefits and implications of anycast in their specific
      environments and applications, and also give forward consideration to
      how new network protocols and application functions may take
      advantage of anycast, or how they may be negatively impacted if
      anycasting is employed.
    </t>
  </section>

  <section anchor="Acknowledgements" title="Acknowledgements">
    <t>
      Many thanks to Kurtis Lindqvist for his early
      review and feedback on this document.  Thanks to Brian Carpenter,
      Alfred Hoenes, and Joe Abley for their usual careful review and
      feedback as well as Mark Smith for his detailed review.
    </t>
  </section>


  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

     <!--
    <references title="Normative References">
    </references>
    -->

    <references title="Informative References">
      <reference anchor="ANYCAST BOF" target="http://www.ietf.org/mail-archive/web/ietf/current/msg11182.html">
        <front>
          <title abbrev="ANYCAST BOF">IAB Anycast BOF Announcement</title>
          <author initials="S" surname="Deering">
            <organization></organization>
          </author>
          <date month="October" year="1999"/>
        </front>
      </reference>

      <reference anchor="IMR9401" target="http://mirror.facebook.com/rfc/museum/imr/imr9401.txt">
        <front>
          <title>INTERNET MONTHLY REPORT</title>
          <author/>
          <date month="January" year="1994"/>
        </front>
      </reference>

      <reference anchor="MAGMA" target="http://www.ietf.org/wg/concluded/magma">
        <front>
          <title>Multicast and Anycast Group Membership (MAGMA), concluded</title>
          <author/>
          <date month="April" year="2006"/>
          <workgroup>Multicast and Anycast Group Membership (MAGMA)</workgroup>
          <keyword>concluded</keyword>
          <keyword>IETF</keyword>
          <keyword>http://www.ietf.org/wg/concluded/magma</keyword>
        </front>
      </reference>

      <reference anchor="RSSAC29" target="http://www.rssac.org/meetings/04-08/rssac29.pdf">
        <front>
          <title>RSSAC 29 Meeting Minutes</title>
          <author/>
          <date day="2" month="December" year="2007"/>
        </front>
      </reference>


      &I-D.ietf-ipv6-dns-discovery;

      &RFC1035;

      &RFC1305;

      &RFC1546;

      &RFC1884;

      &RFC2030;

      &RFC2101;

      &RFC2373;

      &RFC2402;

      &RFC2406;

      &RFC2526;

      &RFC2893;

      &RFC2902;

      &RFC2991;

      &RFC3056;

      &RFC3068;

      &RFC3258;

      &RFC3513;

      &RFC3775;

      &RFC3882;

      &RFC3964;

      &RFC4085;

      &RFC4213;

      &RFC4291;

      &RFC4330;

      &RFC4339;

      &RFC4610;

      &RFC4732;

      &RFC4778;

      &RFC4861;

      &RFC4892;

      &RFC4924;

      &RFC4942;

      &RFC5001;

      &RFC6382;

      &RFC4786;

    </references>

    <!--
    <section anchor="app-additional" title="Additional Stuff">
      <t>This becomes an Appendix.</t>
    </section>
    -->

    <section title="IAB Members">
      <t>
        Internet Architecture Board Members at the time this document was
        published were:
      </t>

      <t>
        [TO BE INSERTED]
      </t>
    </section>

  </back>
</rfc>
