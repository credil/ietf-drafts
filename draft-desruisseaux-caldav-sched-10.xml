<?xml version="1.0" encoding="US-ASCII"?><?xml-stylesheet type='text/xsl' href='../../rfc2629.xslt'?><?rfc toc="yes"?><?rfc tocdepth="4"?><?rfc symrefs="yes"?><?rfc sortrefs="yes"?><?rfc rfcedstyle="yes"?><?rfc compact="no"?><?rfc subcompact="no"?><!DOCTYPE rfc SYSTEM "rfc2629.dtd" [<!ENTITY rfc2119 PUBLIC "" "bibxml/reference.RFC.2119.xml"><!ENTITY rfc2616 PUBLIC "" "bibxml/reference.RFC.2616.xml"><!ENTITY rfc2818 PUBLIC "" "bibxml/reference.RFC.2818.xml"><!ENTITY rfc3283 PUBLIC "" "bibxml/reference.RFC.3283.xml"><!ENTITY rfc3744 PUBLIC "" "bibxml/reference.RFC.3744.xml"><!ENTITY rfc3864 PUBLIC "" "bibxml/reference.RFC.3864.xml"><!ENTITY rfc4791 PUBLIC "" "bibxml/reference.RFC.4791.xml"><!ENTITY rfc4918 PUBLIC "" "bibxml/reference.RFC.4918.xml"><!ENTITY rfc5234 PUBLIC "" "bibxml/reference.RFC.5234.xml"><!ENTITY rfc5545 PUBLIC "" "bibxml/reference.RFC.5545.xml"><!ENTITY rfc5546 PUBLIC "" "bibxml/reference.RFC.5546.xml"><!ENTITY rfc6047 PUBLIC "" "bibxml/reference.RFC.6047.xml"><!ENTITY W3C.REC-xml-20081126 PUBLIC "" "bibxml4/reference.W3C.REC-xml-20081126.xml">]><rfc category="std" ipr="pre5378Trust200902" docName="draft-desruisseaux-caldav-sched-10"updates="4791"><front>  <title abbrev="CalDAV Scheduling Extensions">CalDAV Scheduling Extensions to WebDAV</title>  <author initials="C." surname="Daboo" fullname="Cyrus Daboo">    <organization abbrev="Apple Inc.">Apple Inc.</organization>    <address>      <postal>        <street>1 Infinite Loop</street>        <city>Cupertino</city>        <region>CA</region>        <code>95014</code>        <country>USA</country>      </postal>      <email>cyrus@daboo.name</email>      <uri>http://www.apple.com/</uri>    </address>  </author>  <author initials="B." surname="Desruisseaux" fullname="Bernard Desruisseaux">    <organization abbrev="Oracle">Oracle Corporation</organization>    <address>      <postal>        <street>600 Blvd. de Maisonneuve West</street>        <street>Suite 1900</street>        <city>Montreal</city>        <region>QC</region>        <code>H3A 3J2</code>        <country>CANADA</country>      </postal>      <email>bernard.desruisseaux@oracle.com</email>      <uri>http://www.oracle.com/</uri>    </address>  </author>  <date/>  <area>Applications</area>  <keyword>calsify</keyword>  <keyword>calsched</keyword>  <keyword>calsch</keyword>  <keyword>caldav</keyword>  <keyword>calendar</keyword>  <keyword>calendaring</keyword>  <keyword>scheduling</keyword>  <keyword>webcal</keyword>  <keyword>webdav</keyword>  <keyword>ical</keyword>  <keyword>icalendar</keyword>  <keyword>ischedule</keyword>  <keyword>itip</keyword>  <keyword>imip</keyword>  <keyword>text/calendar</keyword>  <keyword>http</keyword>  <abstract>    <t>      This document defines extensions to the CalDAV "calendar-access"      feature to specify a standard way of performing scheduling      transactions with iCalendar-based calendar components. This      document defines the "calendar-auto-schedule" feature of      CalDAV.    </t>  </abstract></front><middle>  <section title="Introduction">    <t>      This document specifies extensions to the      <xref target="RFC4791">CalDAV "calendar-access"</xref>      feature to enable scheduling of      <xref target="RFC5545">iCalendar-based</xref>      calendar components between Calendar Users. This extension      leverages the scheduling methods defined in the iCalendar      Transport-independent Interoperability Protocol <xref      target="RFC5546">(iTIP)</xref> to permit Calendar      Users to perform scheduling transactions such as schedule,      reschedule, respond to scheduling request or cancel      calendar components, as well as search for busy time information.    </t>    <t>      Discussion of this Internet-Draft is taking place on the mailing      list &lt;https://www.ietf.org/mailman/listinfo/caldav&gt;.    </t>    <section title="Terminology">      <t>        This specification uses much of the same terminology as        <xref target="RFC5545">iCalendar</xref>,        <xref target="RFC5546">iTIP</xref>,        <xref target="RFC4918">WebDAV</xref>, and        <xref target="RFC4791">CalDAV</xref>.        The following definitions are provided to aid the reader        in understanding this specification.      </t>      <t>        <list style="hanging">          <t hangText="Calendar User (CU):">            An entity (often a human) that accesses calendar information            <xref target="RFC3283"/>.          </t>          <t hangText="Calendar collection:">            A resource that acts as a container of references to            child calendar object resources <xref target="RFC4791"/>.          </t>          <t hangText="Calendar object resource:">            A resource representing a calendar object            (event, to-do, journal entry, or other calendar components)            <xref target="RFC4791"/>.          </t>          <t hangText="Scheduling object resource:">            A calendar object resource contained in a calendar            collection for which the server will take care of sending            scheduling messages on behalf of the owner of the calendar            collection.          </t>          <t hangText="Organizer scheduling object resource:">            A scheduling object resource owned by an Organizer.          </t>          <t hangText="Attendee scheduling object resource:">            A scheduling object resource owned by an Attendee.          </t>          <t hangText="Automatic scheduling transaction:">            Add, change or remove operations on a scheduling object            resource for which the server will deliver scheduling            messages to other Calendar Users.          </t>          <t hangText="Scheduling message:">            A calendar object that describes a scheduling            transaction such as schedule, reschedule, reply, or            cancel.          </t>          <t hangText="Scheduling Outbox collection:">            A resource at which busy time information requests are            targeted.          </t>          <t hangText="Scheduling Inbox collection:">            A collection in which incoming scheduling messages are            delivered.          </t>        </list>      </t>    </section>    <section title="Approach">      <t>        <xref target="RFC5546">iTIP</xref> outlines        a model where Calendar Users exchange scheduling messages        with one another. Often times, clients are made        responsible for generating and sending scheduling messages as        well as processing incoming scheduling messages. This approach        yields a number of problems, including:        <list style="symbols">          <t>            For most updates to a calendar component, clients are responsible for sending appropriate scheduling messages            to the Organizer or the Attendees.          </t>          <t>            The handling of incoming scheduling messages and the updates            to calendars impacted by those messages only occurs when            clients are active.          </t>          <t>            Due to the update latency, it is possible for calendars of            different Calendar Users to reflect different, inaccurate            states.          </t>        </list>      </t>      <t>        This specification uses an alternative approach where the        server is made responsible for sending scheduling messages        and processing incoming scheduling messages. This approach        frees the clients from the submission and processing        of scheduling messages and ensures better consistency of        calendar data across users' calendars. The operation of        creating, modifying or deleting a calendar component in        a calendar is enough to trigger the server to deliver the necessary        scheduling messages to the appropriate Calendar Users.      </t>    </section>    <section title="Limitations">      <t>        While the scheduling features described in this specification are        based on <xref target="RFC5546">iTIP</xref>,        some of its more advanced features have deliberately been left        out in order to keep this specification simple.  In particular,        the following <xref target="RFC5546">iTIP</xref>        features are not covered: publishing, countering, delegating,        refreshing and forwarding calendar components, as well as replacing        the Organizer of a calendar component.      </t>      <t>        The goal of this specification is to provide the essential        scheduling features needed. It is expected that future        extensions will be developed to address the more advanced        features.      </t>    </section>    <section title="Notational Conventions">      <t>        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"        in this document are to be interpreted as described in <xref        target="RFC2119"/>.      </t>      <t>        The Augmented BNF (ABNF) syntax used by this document to specify        the format definition of new iCalendar elements is defined in        <xref target="RFC5234"/>.      </t>      <t>        The Augmented BNF (ABNF) syntax used by this document to specify        the format definition of new message header fields to be used        with the HTTP/1.1 protocol is described in Section 2.1 of        <xref target="RFC2616"/>. Since this Augmented BNF uses the        basic production rules provided in Section 2.2 of        <xref target="RFC2616"/>, these rules apply to this document        as well.      </t>      <t>        The term "protected" is used in the Conformance field of WebDAV	property definitions as defined in Section 15 of	<xref target="RFC4918"/>.      </t>    </section>    <section title="XML Namespaces and Processing">          <t>            This document uses XML DTD fragments (<xref target="W3C.REC-xml-20081126"/>, Section 3.2) as a purely notational convention.  WebDAV request and response bodies cannot be validated by a DTD due to the specific extensibility rules defined in Section 17 of [RFC4918] and due to the fact that all XML elements defined by that specification use the XML namespace name "DAV:".  In particular:            <list style='numbers'>                <t>element names use the "DAV:" namespace,</t>                <t>element ordering is irrelevant unless explicitly stated,</t>                <t>extension elements (elements not already defined as valid child elements) may be added anywhere, except when explicitly stated otherwise,</t>                <t>extension attributes (attributes not already defined as valid for this element) may be added anywhere, except when explicitly stated otherwise.</t>            </list>          </t>          <t>            The XML elements specified in this document are defined in the            "urn:ietf:params:xml:ns:caldav" XML namespace registered by            <xref target="RFC4791">CalDAV</xref>.          </t>          <t>            When XML element types in the namespaces "DAV:" and "urn:ietf:params:xml:ns:caldav" are referenced in this document outside of the context of an XML fragment, the strings "DAV:" and "CALDAV:" will be prefixed to the element types, respectively.          </t>          <t>            This document inherits, and sometimes extends, DTD productions from Section 14 of <xref target="RFC4918"/>.          </t>        <t>            Also note that some CalDAV XML element names are identical to WebDAV XML element names, though their namespace differs. Care must be taken not to confuse the two sets of names.        </t>    </section>  </section>  <section title="Scheduling Process">    <t>      The process of scheduling an event between different parties      often involves a series of steps with different actors playing      particular roles during the whole process. Typically there is      an event "Organizer" whose role is to schedule an event between      one or more "Attendees", and this is done by sending out      invitations and handling responses from each Attendee.    </t>    <t>      This process can typically be broken down into two phases.    </t>    <t>      In the first phase, the Organizer will query the busy time      information of each Attendee to determine the most appropriate      time for the event. This request is sometimes called a "freebusy"      lookup.    </t>    <t>      In the second phase, the Organizer sends out invitations to each      Attendee using the time previously determined from the freebusy lookup. There then follows      exchanges between Organizer and Attendees regarding the invitation.      Some Attendees may choose to attend at the time proposed by the      Organizer, others may decline to attend. The Organizer needs to      process each of the replies from the Attendees and take appropriate      action to confirm the event, reschedule it or perhaps cancel it.    </t>    <t>      The user expectation as to how a calendaring and scheduling system      should respond in each of these two phases is somewhat different. In      the case of a freebusy lookup, users expect to get back results      immediately so that they can then move on to the invitation phase      as quickly as possible. In the case of invitations, it is expected      that each Attendee will reply with their participation status in      their own time, so delays in receiving replies are anticipated. Thus      calendaring and scheduling systems should treat these two operational      phases in different ways to accommodate the user expectations,      which is what this specification does.    </t>    <t>      While the scenario described above only covers the case of scheduling      events between Calendar Users, and requesting busy time information,      this specification also provides support for the scheduling of      to-dos between Calendar Users.  For the majority of the following      discussion, scheduling of events and freebusy lookups will be      discussed, as these are the more common operations.    </t>  </section>  <section title="Scheduling Support">    <t>      A server that supports the features described in this document MUST      include "calendar-auto-schedule" as a field in the DAV response      header from an OPTIONS request on any resource that supports any      scheduling actions, properties, privileges or methods.    </t>    <t>      To advertise support for the CalDAV "calendar-auto-schedule" feature      a server is REQUIRED to support and advertise support for the <xref      target="RFC4791">CalDAV "calendar-access"</xref> feature.    </t>    <section title="Example OPTIONS Request">    <t>      In this example, the OPTIONS response indicates that the server      supports the "calendar-access" and "calendar-auto-schedule"      features and that the resource "/home/cyrus/calendars/inbox/"      supports the scheduling actions, properties, privileges and      methods defined in this specification.    </t>    <figure>      <preamble>&gt;&gt; Request &lt;&lt;</preamble>      <artwork><![CDATA[OPTIONS /home/cyrus/calendars/inbox/ HTTP/1.1Host: cal.example.com      ]]></artwork>    </figure>    <figure>      <preamble>&gt;&gt; Response &lt;&lt;</preamble>      <artwork><![CDATA[HTTP/1.1 204 No ContentDate: Thu, 31 Mar 2011 09:00:00 GMTAllow: OPTIONS, GET, HEAD, DELETE, TRACE, PROPFINDAllow: PROPPATCH, LOCK, UNLOCK, REPORT, ACLDAV: 1, 2, 3, access-controlDAV: calendar-access, calendar-auto-schedule    ]]></artwork>    </figure>    </section>  </section>  <section title="Scheduling Collections">    <t>      This specification introduces new collection resource types      that are used to manage scheduling object resources, and scheduling      privileges, as well as provide scheduling functionality. It is the server's responsibility to create these collection resources, and clients have no way to create or delete them.    </t>    <section anchor="schedule-outbox" title="Scheduling Outbox Collection">      <t>        A scheduling Outbox collection is used as the target for         busy time information requests, and to manage privileges that apply to outgoing scheduling requests.      </t>      <t>        A scheduling Outbox collection MUST report the DAV:collection        and CALDAV:schedule-outbox XML elements in the value of the        DAV:resourcetype property. The element type declaration for        CALDAV:schedule-outbox is:        <figure><artwork><![CDATA[   <!ELEMENT schedule-outbox EMPTY>        ]]></artwork></figure>      </t>      <t>        Example:         <figure><artwork><![CDATA[   <D:resourcetype xmlns:D="DAV:">     <D:collection/>     <C:schedule-outbox xmlns:C="urn:ietf:params:xml:ns:caldav"/>   </D:resourcetype>        ]]></artwork></figure>      </t>      <t>        New <xref target="RFC3744">WebDAV ACL</xref> privileges can        be set on the scheduling Outbox collection to control who is        allowed to send scheduling messages on behalf of the Calendar        User associated with the scheduling Outbox collection.        See <xref target="privileges"/> for more details.      </t>      <t>        A scheduling Outbox collection MUST NOT be a child (at any depth)        of a calendar collection resource.      </t>      <t>        The following WebDAV properties specified in CalDAV "calendar-access"        <xref target="RFC4791"/> MAY also be defined on scheduling Outbox collections:        <list>          <t>            CALDAV:supported-calendar-component-set - when present this            indicates the allowed calendar component types for scheduling            messages submitted to the scheduling Outbox collection with            the POST method.          </t>          <t>            CALDAV:supported-calendar-data - when present this indicates            the allowed media types for scheduling messages submitted to            the scheduling Outbox collection with the POST method.           </t>          <t>            CALDAV:max-resource-size - when present this indicates the            maximum size in octets of a resource that the server is            willing to accept for scheduling messages submitted to the            scheduling Outbox collection with the POST method.          </t>          <t>            CALDAV:min-date-time - when present this indicates the earliest            date and time (in UTC) that the server is willing to accept for            any DATE or DATE-TIME value in scheduling messages submitted            to the scheduling Outbox collection with the POST method.          </t>          <t>            CALDAV:max-date-time - when present this indicates the latest            date and time (in UTC) that the server is willing to accept for            any DATE or DATE-TIME value in scheduling messages submitted            to the scheduling Outbox collection with the POST method.          </t>          <t>            CALDAV:max-attendees-per-instance - when present this indicates            the maximum number of ATTENDEE properties in any instance            of scheduling messages submitted to the scheduling Outbox            collection with the POST method. Specifically, this limits the total number of Attendees whose freebusy information can be queried in a single request.          </t>        </list>      </t>      <t>        The use of child resources in a scheduling Outbox collection is reserved for future revisions or extensions of this specification.      </t>    </section>    <section anchor="schedule-inbox" title="Scheduling Inbox Collection">      <t>        A scheduling Inbox collection contains copies of incoming        scheduling messages. These may be requests sent by an        Organizer, or replies sent by an Attendee in response to        a request. The scheduling Inbox collection is also used to manage scheduling privileges.      </t>      <t>        A scheduling Inbox collection MUST report the DAV:collection        and CALDAV:schedule-inbox XML elements in the value of the        DAV:resourcetype property. The element type declaration for        CALDAV:schedule-inbox is:        <figure><artwork><![CDATA[   <!ELEMENT schedule-inbox EMPTY>        ]]></artwork></figure>      </t>      <t>        Example:       <figure><artwork><![CDATA[   <D:resourcetype xmlns:D="DAV:">     <D:collection/>     <C:schedule-inbox xmlns:C="urn:ietf:params:xml:ns:caldav"/>   </D:resourcetype>        ]]></artwork></figure></t>      <t>        Scheduling Inbox collections MUST only contain calendar object        resources that obey the restrictions specified in <xref        target="RFC5546">iTIP</xref>. Consequently,        scheduling Inbox collections MUST NOT contain any types of        collection resources. Restrictions defined in Section 4.1 of        <xref target="RFC4791">CalDAV "calendar-access"</xref> on calendar        object resources contained in calendar collections (e.g., "UID"        uniqueness) do not apply to calendar object resources contained in        a scheduling Inbox collection. Thus, multiple calendar object resources        contained in a scheduling Inbox collection can have the same "UID"        property value (i.e., multiple scheduling messages for the same        calendar component).      </t>      <t>        New <xref target="RFC3744">WebDAV ACL</xref> privileges can        be set on the scheduling Inbox collection to control from whom the        Calendar User associated with the scheduling Inbox collection        will accept scheduling messages from.        See <xref target="privileges"/> for more details.      </t>      <t>        A scheduling Inbox collection MUST NOT be a child (at any depth)        of a calendar collection resource.      </t>      <t>        The following WebDAV properties specified in         <xref target="RFC4791">CalDAV "calendar-access"</xref> MAY        also be defined on scheduling Inbox collections:        <list>          <t>            CALDAV:calendar-timezone - when present this contains a            time zone that the server can use when calendar date-time            operations are carried out, for example when a time-range            CALDAV:calendar-query REPORT is targeted at a scheduling            Inbox collection.          </t>          <t>            CALDAV:supported-calendar-component-set - when present this            indicates the allowed calendar component types for scheduling            messages delivered to the scheduling Inbox collection.          </t>          <t>            CALDAV:supported-calendar-data - when present this indicates            the allowed media types for scheduling messages delivered            to the scheduling Inbox collection.          </t>          <t>            CALDAV:max-resource-size - when present this indicates            the maximum size in octets of a resource that the server            is willing to accept for scheduling messages delivered to            the scheduling Inbox collection.          </t>          <t>            CALDAV:min-date-time - when present this indicates the            earliest date and time (in UTC) that the server is willing            to accept for any DATE or DATE-TIME value in scheduling            messages delivered to the scheduling Inbox collection.          </t>          <t>            CALDAV:max-date-time - when present this indicates the            latest date and time (in UTC) that the server is willing            to accept for any DATE or DATE-TIME value in scheduling            messages delivered to the scheduling Inbox collection.          </t>          <t>            CALDAV:max-instances - when present this indicates the            maximum number of recurrence instances in scheduling messages            delivered to the scheduling Inbox collection.          </t>          <t>            CALDAV:max-attendees-per-instance - when present this            indicates the maximum number of ATTENDEE properties in any            instance of scheduling messages delivered to the scheduling            Inbox collection.          </t>        </list>      </t>    </section>    <section anchor="reports" title="Calendaring Reports Extensions">      <t>        This specification extends the CALDAV:calendar-query and        CALDAV:calendar-multiget REPORTs to return results for calendar        object resources in scheduling Inbox collections.      </t>      <t>        When a CALDAV:calendar-query REPORT includes a time-range query        and targets a scheduling Inbox collection, if any calendar        object resources contain "VEVENT" calendar components that do        not include a "DTSTART" iCalendar property (as allowed by <xref        target="RFC5546">iTIP</xref>) then such components        MUST always match the time-range query test.      </t>      <t>        Note that the CALDAV:free-busy-query REPORT is not supported on        scheduling Inbox collections.      </t>    </section>  </section>  <section title="Scheduling Transactions">    <t>      When a calendar object resource is created, modified or removed      from a calendar collection, the server examines the calendar data and      checks to see whether the data represents a scheduling object      resource. If it does, the server will automatically attempt to      deliver a scheduling message to the appropriate Calendar Users.      Several types of scheduling operations can occur in this case,      equivalent to iTIP "REQUEST", "REPLY", "CANCEL", and "ADD"      operations.    </t>    <section title="Identifying Scheduling Object Resources">      <t>        Calendar object resources on which the server performs automatic        scheduling transactions are referred to as scheduling object        resources.  There are two types of scheduling object resources:        organizer scheduling object resources, and attendee scheduling        object resources.      </t>      <t>        A calendar object resource is considered to be a valid        organizer scheduling object resource if the "ORGANIZER"        iCalendar property is present and set in all the calendar        components to a value that matches one of the calendar user        addresses of the owner of the calendar collection.      </t>      <t>        A calendar object resource is considered to be a valid attendee        scheduling object resource if the "ORGANIZER" iCalendar        property is present and set in all the calendar components        to the same value and doesn't match one of the calendar user        addresses of the owner of the calendar collection, and        at least one of the "ATTENDEE" iCalendar property values        matches one of the calendar user addresses of the owner of the        calendar collection.      </t>      <t>        The creation of attendee scheduling object resources is        typically done by the server, with the resource being        created in an appropriate calendar collection (see <xref target='default-calendar'/>).      </t>    </section>    <section title="Handling Scheduling Object Resources">      <t>        The server's behavior when processing a scheduling object        resource depends on whether it is owned by the Organizer or        an Attendee specified in the calendar data.      </t>      <section title="Organizer Scheduling Object Resources" anchor="organizer-scheduling">        <t>          An Organizer can create, modify or remove a scheduling object          resource. The create, modify and remove behaviors for          the server are each described next, and the way these          are invoked via HTTP requests is described in          <xref target="http_methods"/>.        </t>        <t>	  The Organizer of a calendar component may also be an Attendee of	  that calendar component. In such cases the server MUST NOT send a	  scheduling message to the Attendee that matches the Organizer.        </t>          <section title="Create">            <t>              When a scheduling object resource is created by the              Organizer, the server will inspect each "ATTENDEE"              property to determine if a scheduling message              should be delivered to this Attendee according to              the value of the "SCHEDULE-AGENT" property parameter (see <xref target='schedule-agent'/>)              as described in the table below:            </t>            <figure>              <artwork><![CDATA[           +------------------+-------------+           | SCHEDULE-AGENT   | iTIP METHOD |           +==================+=============+           | SERVER (default) | REQUEST     |           +------------------+-------------+           | CLIENT           | --          |           +------------------+-------------+           | NONE             | --          |           +------------------+-------------+              ]]></artwork>            </figure>            <t>              The attempt to deliver the scheduling message will either              succeed or fail. In all cases, the server MUST add a              "SCHEDULE-STATUS" iCalendar property parameter (see <xref target='schedule-status'/>) to the              "ATTENDEE" iCalendar property in the scheduling object              resource being created, and set its value as described in              <xref target="schedule-status-value"/>. This will result              in the created calendar object resource differing from              the calendar data sent in the HTTP request. As a result              clients MAY reload the calendar data from the server              in order to              update to the new server generated state information.              Servers MUST NOT set the "SCHEDULE-STATUS" property              parameter on the "ATTENDEE" property of Attendees              for which it did not attempt to deliver a scheduling              message.            </t>            <t>Restrictions:              <list style="numbers">                <t>                  The server SHOULD reject any attempt to set the                  "PARTSTAT" iCalendar property parameter value of                  the "ATTENDEE" iCalendar property of other users in                  the calendar object resource to a value other than                  "NEEDS-ACTION" if the "SCHEDULE-AGENT" property                  parameter value is not present or set to the value                  "SERVER".                </t>                <t>                  The server MAY reject attempts to create a scheduling                  object resource that specifies a "UID" property value                  already specified in a scheduling object resource                  contained in another calendar collection of the                  Organizer.                </t>                <t>                  The server MUST take into account scheduling privileges                  as described in <xref target="privileges"/> when handling                  the creation of a scheduling object resource.                </t>                <t>                  Restrictions on calendar object resources defined                  in Section 4.1 of <xref target="RFC4791"/> MUST                  also be enforced.                </t>              </list>            </t>                <t>The server MUST return an error with the CALDAV:allowed-organizer-scheduling-object-change precondition code (<xref target='allowed-organizer-scheduling-object-change'/>) when the Organizer attempts to change the iCalendar data in a manner that is forbidden.</t>          </section>          <section title="Modify">            <t>              When a scheduling object resource is modified by the              Organizer, the server will inspect each "ATTENDEE" property              in the new calendar data to determine which ones have the              "SCHEDULE-AGENT" iCalendar property parameter. It will then              need to compare this with the "ATTENDEE" properties in the              existing calendar object resource that is being modified.            </t>            <t>              For each Attendee in the old and new calendar data on a              per-instance basis, and taking into account the addition or              removal of Attendees, the server will determine whether to              deliver a scheduling message to the Attendee. The following              table determines whether the server needs to deliver a              scheduling message, and if so which  iTIP scheduling method              to use. The values "SERVER", "CLIENT", and "NONE" in the top              and left titles of the table refer to the "SCHEDULE-AGENT"              parameter value of the "ATTENDEE" property, and the values              "&lt;Absent&gt;" and "&lt;Removed&gt;" are used to cover              the cases where the "ATTENDEE" property is not present              (Old) or is being removed (New).            </t>            <figure>              <artwork><![CDATA[+---------------+-----------------------------------------------+|               |                     New                       ||    ATTENDEE   +-----------+-----------+-----------+-----------+|               | <Removed> | SERVER    | CLIENT    | NONE      ||               |           | (default) |           |           |+===+===========+===========+===========+===========+===========+|   | <Absent>  |  --       | REQUEST / | --        | --        ||   |           |           | ADD       |           |           ||   +-----------+-----------+-----------+-----------+-----------+|   | SERVER    |  CANCEL   | REQUEST   | CANCEL    | CANCEL    || O | (default) |           |           |           |           || l +-----------+-----------+-----------+-----------+-----------+| d | CLIENT    |  --       | REQUEST / | --        | --        ||   |           |           | ADD       |           |           ||   +-----------+-----------+-----------+-----------+-----------+|   | NONE      |  --       | REQUEST / | --        | --        ||   |           |           | ADD       |           |           |+---+-----------+-----------+-----------+-----------+-----------+               ]]></artwork>            </figure>            <t>The attempt to deliver the scheduling message will either succeed or fail. In all cases, the server MUST add a "SCHEDULE-STATUS" iCalendar property parameter to the "ATTENDEE" iCalendar property in the scheduling object resource being modified, and set its value as described in <xref target="schedule-status-value"/>. This will result in the created calendar object resource differing from the calendar data sent in the HTTP request. As a result clients MAY reload the calendar data from the server in order to update to the new server generated state information.</t>            <t>Restrictions:            <list style="numbers">                <t>The server MAY reject any attempt to set the "PARTSTAT" iCalendar property parameter value of the "ATTENDEE" iCalendar property of other users in the calendar object resource to a value other than "NEEDS-ACTION" if the "SCHEDULE-AGENT" property parameter value is not present or set to the value "SERVER". </t>                <t>                  The server MUST take into account scheduling privileges                  as described in <xref target="privileges"/> when handling                  the modification of a scheduling object resource.                </t>                <t>Restrictions on calendar object resources defined in Section 4.1 of <xref target="RFC4791"/> MUST also be enforced.</t>            </list>            </t>                <t>The server MUST return an error with the CALDAV:allowed-organizer-scheduling-object-change precondition code (<xref target='allowed-organizer-scheduling-object-change'/>) when the Organizer attempts to change the iCalendar data in a manner that is forbidden.</t>          </section>          <section title="Remove">            <t>When a scheduling object resource is removed by the Organizer, the server will inspect each "ATTENDEE" property in the scheduling object resource being removed to determine which ones have the "SCHEDULE-AGENT" iCalendar property parameter.</t>            <t>For each Attendee the server will determine whether to attempt to deliver a scheduling message into the Attendee's scheduling Inbox collection, based on the table below:</t>            <figure>              <artwork><![CDATA[           +------------------+-------------+           | SCHEDULE-AGENT   | iTIP METHOD |           +==================+=============+           | SERVER (default) | CANCEL      |           +------------------+-------------+           | CLIENT           | --          |           +------------------+-------------+           | NONE             | --          |           +------------------+-------------+              ]]></artwork>            </figure>            <t>Restrictions:            <list style="numbers">              <t>                The server MUST take into account scheduling privileges                as described in <xref target="privileges"/> when handling                the deletion of a scheduling object resource.              </t>            </list>            </t>          </section>      </section>      <section title="Attendee Scheduling Object Resources">        <t>An Attendee can create, modify or remove a scheduling object resource by issuing HTTP requests with an appropriate method. The create, modify and remove behaviors for the server are each described next, and the way these are invoked via HTTP requests is described in <xref target="http_methods"/>.</t>          <section title="Allowed Attendee Changes"                   anchor="Allowed-Attendee-Changes">            <t>              Attendees are allowed to make some changes to a scheduling              object resource, though key properties such as start time,              end time, location, and summary are typically under the              control of the Organizer.            </t>            <t>              The server MUST allow Attendees to:              <list style="numbers">                <t>change their own "PARTSTAT" iCalendar property parameter value.</t>                <t>add, modify or remove any "TRANSP" iCalendar properties.</t>                <t>add, modify or remove any "PERCENT-COMPLETE" iCalendar properties.</t>                <t>add, modify or remove any "COMPLETED" iCalendar properties.</t>                <t>add, modify or remove any "VALARM" iCalendar components.</t>                <t>add, modify or remove the "CALSCALE" iCalendar property within the top-level "VCALENDAR" component.</t>                <t>modify the "PRODID" iCalendar property within the top-level "VCALENDAR" component.</t>                <t>add "EXDATE" iCalendar properties and possibly remove components for overridden recurrence instances.</t>                <t>add, modify or remove any "CREATED", "DTSTAMP" and "LAST-MODIFIED" iCalendar properties.</t>                <t>add, modify or remove "SCHEDULE-STATUS" iCalendar property parameters on "ATTENDEE" properties that have a "SCHEDULE-AGENT" parameter set to "CLIENT".</t>                <t>add new components to represent overridden recurrence instances, provided the only changes to the recurrence instance follow the rules above.</t>              </list>            </t>            <t>The server MUST return an error with the CALDAV:allowed-attendee-scheduling-object-change precondition code (<xref target='allowed-attendee-scheduling-object-change'/>) when the Attendee attempts to change the iCalendar data in a manner forbidden by the server.</t>          </section>          <section title="Create">            <t>Typically an Attendee does not create scheduling object resources, as scheduling messages delivered to them on the server are automatically processed by the server and placed on one of their calendars (see <xref target='automatic-processing'/>). However, in some cases a scheduling message may get delivered directly to the client, and the Attendee may wish to store that on the server. In that case the client creates a scheduling object resource in a suitable calendar belonging to the Attendee. It can then set the "SCHEDULE-AGENT" iCalendar property parameter on all "ORGANIZER" iCalendar properties in the resource to determine how the server treats the resource. The value of the "SCHEDULE-AGENT" iCalendar property parameter on all "ORGANIZER" iCalendar properties MUST be the same.</t>            <texttable>            <ttcol>SCHEDULE-AGENT</ttcol>            <ttcol>Action</ttcol>            <c>SERVER (default)</c>            <c>The server will attempt to process changes to the resource using the normal rules for attendee scheduling object resources.</c>            <c>CLIENT</c>            <c>The server does no special processing of the resource. The client is assumed to be handling Attendee replies etc.</c>            <c>NONE</c>            <c>The server does no special processing of the resource.</c>            </texttable>                                    <t>In some cases a server may not be able to process an Attendee scheduling object resource that originated from another system (i.e., where the server is unable to deliver scheduling messages to the Organizer). In such cases the server MUST add a "SCHEDULE-STATUS" iCalendar property parameter to all "ORGANIZER" iCalendar properties in the resource with a suitable value indicating a  error.</t>          </section>          <section title="Modify">            <t>When a scheduling object resource is modified by an Attendee, the server behavior depends on the value of the "SCHEDULE-AGENT" iCalendar property parameter on the "ORGANIZER" iCalendar properties:</t>            <texttable>            <ttcol>SCHEDULE-AGENT</ttcol>            <ttcol>Action</ttcol>            <c>SERVER (default)</c>            <c>The server will attempt to process the removal using the behavior listed below.</c>            <c>CLIENT</c>            <c>The server does no special processing of the resource. The client is assumed to be handling any Attendee replies etc.</c>            <c>NONE</c>            <c>The server does no special processing of the resource.</c>            </texttable>            <t>The server will inspect the changes by comparing the new scheduling object resource with the existing scheduling object resource.</t>            <t>If the Attendee changes one or more "PARTSTAT" iCalendar property values on any component, or adds an overridden component with a changed "PARTSTAT" property, then the server MUST deliver an iTIP "REPLY" scheduling message to the Organizer to indicate the new participation status of the Attendee.</t>            <t>If the Attendee adds an "EXDATE" property value to effectively remove a recurrence instance, the server MUST deliver an iTIP "REPLY" scheduling message to the Organizer to indicate that the Attendee has declined the instance (i.e., the Attendee's "PARTSTAT" iCalendar property parameter value is set to "DECLINED").</t>            <t>The attempt to deliver the scheduling message will either succeed or fail. In all cases, the server MUST add a "SCHEDULE-STATUS" iCalendar property parameter to the "ORGANIZER" iCalendar property in the scheduling object resource being created, and set its value as described in <xref target="schedule-status-value"/>. This will result in the created calendar object resource differing from the calendar data sent in the HTTP request. As a result clients MAY reload the calendar data from the server in order to update to the new server generated state information.</t>          </section>          <section title="Remove">            <t>When a scheduling object resource is removed by an Attendee, the server behavior depends on the value of the "SCHEDULE-AGENT" iCalendar property parameter on the "ORGANIZER" iCalendar properties:</t>            <texttable>            <ttcol>SCHEDULE-AGENT</ttcol>            <ttcol>Action</ttcol>            <c>SERVER (default)</c>            <c>The server will attempt to process the removal using either behaviors (1) or (2) listed below.</c>            <c>CLIENT</c>            <c>The server does no special processing of the resource. The client is assumed to be handling any Attendee replies etc.</c>            <c>NONE</c>            <c>The server does no special processing of the resource.</c>            </texttable>            <t>              <list style="numbers">                <t>If the HTTP request contains a "Schedule-Reply" request header set to the value "T" or there is no "Schedule-Reply" request header, then the server MUST attempt to deliver a scheduling message to the Organizer indicating that the Attendee has a "PARTSTAT" iCalendar property parameter value set to "DECLINED". That is, the Attendee has chosen not to attend any instances. If the server is unable to deliver the scheduling message, the remove action MUST fail, and an appropriate "SCHEDULE-STATUS" iCalendar property parameter set on the "ORGANIZER" property in the scheduling object resource stored by the server.</t>                <t>If the HTTP request contains a "Schedule-Reply" request header set to the value "F", the server MUST NOT attempt to deliver a scheduling message. The resource is simply removed. This provides the client a way to silently remove unwanted scheduling messages.</t>              </list>            </t>          </section>      </section>      <section anchor="http_methods" title="HTTP Methods">        <t>This section describes how use of various HTTP methods on a scheduling object resource will cause a create, modify or remove action on that resource as described above. The use of these methods is subject to the restrictions in <xref target='RFC4791'/>, in addition to what is described below.</t>        <section title="PUT">          <t>When a PUT method request is received, the server will execute the following actions, provided all appropriate preconditions are met:</t>          <texttable>            <ttcol>Existing Destination Resource</ttcol>            <ttcol>Resulting Destination Resource</ttcol>            <ttcol>Server Action</ttcol>            <c>None</c>            <c>Calendar object resource</c>            <c>None</c>            <c>None</c>            <c>Scheduling object resource</c>            <c>Create</c>            <c>Calendar object resource</c>            <c>Calendar object resource</c>            <c>None</c>            <c>Calendar object resource</c>            <c>Scheduling object resource</c>            <c>Create</c>            <c>Scheduling object resource</c>            <c>Calendar object resource</c>            <c>Remove</c>            <c>Scheduling object resource</c>            <c>Scheduling object resource</c>            <c>Modify</c>          </texttable>        </section>        <section title="COPY">          <t>When a COPY method request is received, the server will execute the following actions based on the source and destination collections in the request:</t>          <texttable>            <ttcol>Source Collection</ttcol>            <ttcol>Destination Collection</ttcol>            <ttcol>Server Action</ttcol>            <c>Non-calendar collection</c>            <c>Non-calendar collection</c>            <c>None</c>            <c>Non-calendar collection</c>            <c>Calendar collection</c>            <c>(1)</c>            <c>Calendar collection</c>            <c>Non-calendar collection</c>            <c>None</c>            <c>Calendar collection</c>            <c>Calendar collection</c>            <c>(2)</c>          </texttable>          <t>Note 1. The same rules as used for PUT above are applied for the destination of the COPY request.</t>          <t>Note 2. The server MAY reject this as per <xref target='unique-scheduling-object-resource'/>, otherwise None.</t>          <t>The behavior of a COPY method request on a calendar collection is undefined.</t>        </section>        <section title="MOVE">          <t>            When a MOVE method request is received, the server will            execute the following actions based on the source and            destination collections in the request:          </t>          <texttable>            <ttcol>Source Collection</ttcol>            <ttcol>Destination Collection</ttcol>            <ttcol>Server Action</ttcol>            <c>Non-calendar collection</c>            <c>Non-calendar collection</c>            <c>None</c>            <c>Non-calendar collection</c>            <c>Calendar collection</c>            <c>(1)</c>            <c>Calendar collection</c>            <c>Non-calendar collection</c>            <c>(2)</c>            <c>Calendar collection</c>            <c>Calendar collection</c>            <c>None</c>          </texttable>          <t>Note 1. The same rules as used for PUT above are applied for the destination of the MOVE request.</t>          <t>Note 2. The same rules as used for DELETE below are applied for the source of the MOVE request.</t>          <t>The behavior of a MOVE method request on a calendar collection is undefined.</t>        </section>        <section title="DELETE">          <t>            When a DELETE method is targeted at a scheduling object            resource the server will execute the Remove action.          </t>          <t>            When a DELETE method is targeted at a calendar collection            the server will execute the Remove action on all scheduling            object resources contained in the calendar collection.          </t>        </section>      </section>      <section title="Additional Method Preconditions">        <t>          This specification defines method preconditions          (see Section 16 of <xref target="RFC4918">WebDAV</xref>), in addition to the ones in <xref target="RFC4791"/>,          to provide machine-parsable information in error responses.        </t>        <section title="CALDAV:unique-scheduling-object-resource Precondition" anchor="unique-scheduling-object-resource">          <t>            <list style="hanging">              <t hangText="Name:">unique-scheduling-object-resource</t>              <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>              <t hangText="Apply to:">PUT, COPY, and MOVE</t>              <t hangText="Use with:">403 Forbidden</t>              <t hangText="Purpose:">                (precondition) --                Servers MAY reject requests to create a scheduling                object resource with an iCalendar "UID" property value                already in use by another scheduling object resource                owned by the same user in other calendar collections.                Servers SHOULD report the URL of the scheduling object                resource that is already making use of the same "UID"                property value in the DAV:href element.              </t>              <t hangText="Definition:">                <figure>                  <artwork><![CDATA[   <!ELEMENT unique-scheduling-object-resource (DAV:href?)>                  ]]></artwork>                </figure>              </t>              <t hangText="Example:">                <figure>                  <artwork><![CDATA[   <C:unique-scheduling-object-resource xmlns:D="DAV:"       xmlns:C="urn:ietf:params:xml:ns:caldav">     <D:href>/home/bernard/calendars/personal/abc123.ics</D:href>   </C:unique-scheduling-object-resource>                  ]]></artwork>                </figure>              </t>            </list>          </t>        </section>        <section title="CALDAV:same-organizer-in-all-components Precondition">          <t>            <list style="hanging">              <t hangText="Name:">same-organizer-in-all-components</t>              <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>              <t hangText="Apply to:">PUT, COPY, and MOVE</t>              <t hangText="Use with:">403 Forbidden</t>              <t hangText="Purpose:">                (precondition) -- All the calendar components in a                scheduling object resource MUST contain the same "ORGANIZER"                property value when present.              </t>              <t hangText="Definition:">                <figure>                  <artwork><![CDATA[   <!ELEMENT same-organizer-in-all-components EMPTY>                  ]]></artwork>                </figure>              </t>              <t hangText="Example:">                <figure>                  <artwork><![CDATA[   <C:same-organizer-in-all-components       xmlns:C="urn:ietf:params:xml:ns:caldav"/>                  ]]></artwork>                </figure>              </t>            </list>          </t>        </section>        <section title="CALDAV:allowed-organizer-scheduling-object-change Precondition" anchor='allowed-organizer-scheduling-object-change'>          <t>            <list style="hanging">              <t hangText="Name:">allowed-organizer-scheduling-object-change</t>              <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>              <t hangText="Apply to:">PUT, COPY, and MOVE</t>              <t hangText="Use with:">403 Forbidden</t>              <t hangText="Purpose:">                (precondition) --                 Servers MAY impose restrictions on modifications allowed by an                Organizer. For instance, servers MAY prevent the Organizer                setting the "PARTSTAT" property parameter to a value other than                "NEEDS-ACTION" if the corresponding "ATTENDEE" property has                the "SCHEDULE-AGENT" property parameter set to "SERVER",                or has no "SCHEDULE-AGENT" property parameter. See <xref                target="organizer-scheduling"/>.              </t>              <t hangText="Definition:">                <figure>                  <artwork><![CDATA[   <!ELEMENT allowed-organizer-scheduling-object-change EMPTY>                  ]]></artwork>                </figure>              </t>              <t hangText="Example:">                <figure>                  <artwork><![CDATA[   <C:allowed-organizer-scheduling-object-change       xmlns:C="urn:ietf:params:xml:ns:caldav"/>                  ]]></artwork>                </figure>              </t>            </list>          </t>        </section>        <section title="CALDAV:allowed-attendee-scheduling-object-change Precondition" anchor='allowed-attendee-scheduling-object-change'>          <t>            <list style="hanging">              <t hangText="Name:">allowed-attendee-scheduling-object-change</t>              <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>              <t hangText="Apply to:">PUT, COPY, and MOVE</t>              <t hangText="Use with:">403 Forbidden</t>              <t hangText="Purpose:">                (precondition) --                 Servers MAY impose restrictions on modifications allowed                 by an Attendee. Attendee modifications that servers MUST allow                are specified in <xref target="Allowed-Attendee-Changes"/>.              </t>              <t hangText="Definition:">                <figure>                  <artwork><![CDATA[   <!ELEMENT allowed-attendee-scheduling-object-change EMPTY>                  ]]></artwork>                </figure>              </t>              <t hangText="Example:">                <figure>                  <artwork><![CDATA[   <C:allowed-attendee-scheduling-object-change       xmlns:C="urn:ietf:params:xml:ns:caldav"/>                  ]]></artwork>                </figure>              </t>            </list>          </t>        </section>      </section>      <section title="DTSTAMP and SEQUENCE Properties">        <t>          Whenever the server generates a scheduling message for          delivery to a Calendar User, it MUST ensure that a          "DTSTAMP" iCalendar property is present and MUST set          the value to the UTC time that the scheduling message          was generated (as required by iCalendar).        </t>        <t>          <xref target="RFC5546">iTIP</xref> places          certain requirements on how the "SEQUENCE" iCalendar property          value in scheduling messages changes. The server MUST ensure          that for each type of scheduling operation, the "SEQUENCE"          iCalendar property value is appropriately updated. If the          client does not update the "SEQUENCE" iCalendar property itself          when that is required, the server MUST update the property.        </t>      </section>      <section title="Restrict Recurrence Instances Sent to Attendees"        anchor="limiting-recurrence-instances">        <t>          When delivering scheduling messages for recurring calendar          components to Attendees, servers MUST ensure that Attendees          only get information about recurrence instances that          explicitly include them as an Attendee.        </t>        <t>          For example, if an Attendee is invited to a single recurrence          instance of a recurring event, and no others, the scheduling          object resource contained in the Organizer's calendar          collection will contain an overridden instance in the form          of a separate calendar component. That separate calendar          component will include the "ATTENDEE" property referencing          the "one-off" Attendee. That Attendee will not be listed          in any other calendar components in the scheduling object          resource. Any scheduling messages delivered          to the Attendee will only contain information about this          overridden instance.        </t>        <t>          As another example, an Attendee could be excluded from one          instance of a recurring event. In that case the scheduling          object resource contained in the calendar collection of          the Organizer will include an overridden instance with an          "ATTENDEE" list that does not include the Attendee being          excluded. The scheduling message that will be delivered to          the Attendee will not specify the overridden instance but          rather include an "EXDATE" property in the master recurring          component defining the recurrence set.        </t>      </section>      <section title="Forcing the Server to Send a Scheduling Message">        <t>          The iCalendar property parameter "SCHEDULE-FORCE-SEND" defined          in <xref target="schedule-force-send"/> can be used          by a Calendar User to force the server to send a scheduling          message to an Attendee or the Organizer in a situation where          the server would not normally send a scheduling message.          For instance, an Organizer could use this property parameter          to request an Attendee, that previously declined an invitation,          to reconsider their participation status without being forced to          modify the event.        </t>      </section>    </section>  </section>  <section title="Processing Incoming Scheduling Messages" anchor='automatic-processing'>    <t>      Scheduling operations can cause the delivery of a scheduling      message into an Organizer's or Attendee's scheduling Inbox      collection. In the former case the scheduling messages are      replies from Attendees, in the latter case the scheduling      messages are requests, cancellations or additions from the      Organizer.    </t>    <t>      Servers MUST automatically process incoming scheduling      messages using the rules defined by <xref target='RFC5546'/>, by creating or updating the corresponding scheduling object resources on calendars owned by the owner of the scheduling Inbox collection. In addition, the scheduling message is stored in the scheduling Inbox      collection as an indicator to the client that a scheduling      operation has taken place.    </t>    <t>      The server MUST take into account privileges      on the scheduling Inbox collection when processing incoming      scheduling messages, to determine whether delivery of the      scheduling message is allowed. Privileges on      calendars containing any matching scheduling object resource are      not considered in this case (i.e., a schedule message from another user can cause modifications to resources in calendar collections that the other user would not normally have read or write access to). Additionally, servers MUST take      into account any scheduling Inbox collection preconditions      (see <xref target="schedule-inbox"/>) when delivering the      scheduling message, and it MUST take into account the similar      preconditions on any calendar collection which contains, or      would contain, the corresponding scheduling object resource.    </t>    <section title="Processing Organizer Requests, Additions, and Cancellations">      <t>        For a scheduling message sent by an Organizer, the server first        tries to locate a corresponding scheduling object resource        belonging to the Attendee. If no matching scheduling object        resource exists, the server treats the scheduling message as        a new message, otherwise it is treated as an update.      </t>      <t>        In the case of a new message, the server MUST process the        scheduling message and create a new scheduling object resource        in an appropriate calendar collection for the Attendee.      </t>      <t>        In the case of an update, the server MUST process the        scheduling message and update the matching scheduling        object resource belonging to the Attendee to reflect        the changes sent by the Organizer.      </t>      <t>        In each case, the scheduling message MUST only appear        in the Attendee's scheduling Inbox collection once all        automatic processing has been done.      </t>    </section>    <section title="Processing Attendee Replies">      <t>        For a scheduling message reply sent by an Attendee, the        server first locates the corresponding scheduling object        resource belonging to the Organizer.      </t>      <t>        The server MUST then update the "PARTSTAT" iCalendar property parameter        value of each "ATTENDEE" iCalendar property in the scheduling        object resource to match the changes indicated in the reply        (taking into account the fact that an Attendee could have        created a new overridden iCalendar component to indicate        different participation status on one or more recurrence        instances of a recurring event).      </t>      <t>        The server MUST also update or add the "SCHEDULE-STATUS"        property parameter on each matching "ATTENDEE" iCalendar        property and set its value to that of the "REQUEST-STATUS"        property in the reply, or to "2.0" if "REQUEST-STATUS" is not        present (also taking into account recurrence instances). If        there are multiple "REQUEST-STATUS" properties in the        reply, the "SCHEDULE-STATUS" property parameter value is        set to a comma-separated list of status codes, one from each        "REQUEST-STATUS" property.      </t>      <t>        The server SHOULD send scheduling messages to all the other        Attendees indicating the change in participation status of        the Attendee replying, subject to the recurrence requirements        of <xref target="limiting-recurrence-instances"/>.      </t>      <t>        The scheduling message MUST only appear in the        Organizer's scheduling Inbox collection once all automatic        processing has been done.      </t>    </section>    <section title="Scheduling Messages as Notifications">      <t>        Once the processing of an incoming scheduling message is completed        by the server, the message is made available as a child resource        in the scheduling Inbox collection of the Calendar User that        received the message, to serve as a notification that a change has        been made to the corresponding scheduling object resource.        Scheduling messages are typically removed from the scheduling        Inbox collection by the client once the calendar user has acknowledged the change.      </t>    </section>    <section title="Default Calendar Collection" anchor="default-calendar">      <t>        The server is REQUIRED to process scheduling messages received for an Attendee by creating a new scheduling object        resource in a calendar collection belonging to the Attendee, when one does not already exist. A Calendar User        that is an Attendee in a scheduling operation        MUST have at least one valid calendar collection available.  If there is no valid        calendar collection, then the server MUST reject the attempt to        deliver the scheduling message to the Attendee.      </t>      <t>        Servers MAY provide support for a default calendar collection, that is,        the calendar collection in which new scheduling object resources will be        created. The CALDAV:schedule-default-calendar-URL        WebDAV property, which can be present on the scheduling Inbox        collection of a Calendar User, specifies if this Calendar User has a        default calendar collection. See        <xref target="PROPERTY_schedule-default-calendar-URL"/>.      </t>      <t>        Servers SHOULD create new scheduling object resources in the default calendar collection, if the CALDAV:schedule-default-calendar-URL WebDAV property is set.      </t>      <t>        Servers MAY allow clients to change the default        calendar collection by changing the value of the        CALDAV:schedule-default-calendar-URL WebDAV property on the        scheduling Inbox collection. However, the servers MUST ensure that        any new value for that property refers to a valid        calendar collection belonging to the owner of the scheduling        Inbox collection.      </t>      <t>        Servers MUST reject any attempt to delete the default calendar        collection.      </t>      <section title="Additional Method Preconditions">        <t>          This specification defines additional method preconditions          (see Section 16 of <xref target="RFC4918">WebDAV</xref>)          to provide machine-parsable information in error responses.        </t>        <section title="CALDAV:default-calendar-needed Precondition">          <t>            <list style="hanging">              <t hangText="Name:">default-calendar-needed</t>              <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>              <t hangText="Apply to:">DELETE</t>              <t hangText="Use with:">403 Forbidden</t>              <t hangText="Purpose:">                (precondition) --                The client attempted to delete the calendar collection                currently referenced by the                CALDAV:schedule-default-calendar-URL property, or attempted                to remove the CALDAV:schedule-default-calendar-URL property                on the scheduling Inbox collection on a server that doesn't                allow such operations.              </t>              <t hangText="Definition:">                <figure>                  <artwork><![CDATA[   <!ELEMENT default-calendar-needed EMPTY>                  ]]></artwork>                </figure>              </t>              <t hangText="Example:">                <figure>                  <artwork><![CDATA[   <C:default-calendar-needed       xmlns:C="urn:ietf:params:xml:ns:caldav"/>                  ]]></artwork>                </figure>              </t>            </list>          </t>        </section>        <section title="CALDAV:valid-schedule-default-calendar-URL Precondition">          <t>            <list style="hanging">              <t hangText="Name:">valid-schedule-default-calendar-URL</t>              <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>              <t hangText="Apply to:">PROPPATCH</t>              <t hangText="Use with:">403 Forbidden</t>              <t hangText="Purpose:">                (precondition) --                The client attempted to set the                CALDAV:schedule-default-calendar-URL property to a DAV:href                element that doesn't reference a valid calendar collection.                Note: Servers that do not allow clients to change the                CALDAV:schedule-default-calendar-URL property would simply                return the DAV:cannot-modify-protected-property precondition                defined in Section 16 of <xref target="RFC4918">WebDAV</xref>.              </t>              <t hangText="Definition:">                <figure>                  <artwork><![CDATA[   <!ELEMENT valid-schedule-default-calendar-URL EMPTY>                  ]]></artwork>                </figure>              </t>              <t hangText="Example:">                <figure>                  <artwork><![CDATA[   <C:valid-schedule-default-calendar-URL       xmlns:C="urn:ietf:params:xml:ns:caldav"/>                  ]]></artwork>                </figure>              </t>            </list>          </t>        </section>      </section>    </section>  </section>  <section title="Request for Busy Time Information">    <t>      The POST method is used to request busy time information      of one or more Calendar Users by submitting a request at      the scheduling Outbox collection of the Calendar User requesting the information (the Organizer). To accomplish this, the request body of a POST      method MUST contain a "VFREEBUSY" calendar component with      the "METHOD" iCalendar property set to the value "REQUEST" as specified in Section 3.3.2 of      <xref target="RFC5546">iTIP</xref>.      The resource identified by the Request-URI      MUST be a resource collection of type      <xref target="schedule-outbox">CALDAV:schedule-outbox</xref>. The "ORGANIZER" property in the "VFREEBUSY" component MUST match that of the Calendar User who "owns" the Outbox collection.    </t>    <section title="Status Codes">      <t>        The following are examples of response codes one would        expect to be used for this method. However, unless        explicitly prohibited, any 2/3/4/5xx series response code can        be used in a response.      </t>      <t>        <list>          <t>            200 (OK) -            The command succeeded.          </t>          <t>            204 (No Content) -            The command succeeded.          </t>          <t>            400 (Bad Request) -            The client has provided an invalid scheduling message.          </t>          <t>            403 (Forbidden) -            The client cannot submit a scheduling message to the            specified Request-URI.          </t>          <t>            404 (Not Found) -            The URL in the Request-URI was not present.          </t>          <t>            423 (Locked) - The specified resource is locked and            the client either is not a lock owner or the lock type            requires a lock token to be submitted and the client did            not submit it.          </t>        </list>      </t>    </section>    <section title="Additional Method Preconditions">      <t>        This specification defines additional method preconditions        for the POST method.  Preconditions defined in        <xref target="RFC3744">WebDAV ACL</xref> and        <xref target="RFC4791">CalDAV</xref> that applies to the        POST method are also listed here for completeness.      </t>      <section title="DAV:need-privileges Precondition">        <t>          <list style="hanging">            <t hangText="Name:">need-privileges</t>            <t hangText="Namespace:">DAV:</t>            <t hangText="Apply to:">POST</t>            <t hangText="Use with:">403 Forbidden</t>            <t hangText="Purpose:">              (precondition) --              The currently authenticated user MUST be granted the              CALDAV:schedule-send-freebusy privilege on the scheduling Outbox collection being targeted by              the request.            </t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[   <!ELEMENT DAV:need-privileges (DAV:resource)* >   <!ELEMENT DAV:resource (DAV:href, DAV:privilege) >                ]]></artwork>              </figure>            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   <D:need-privileges xmlns:D="DAV:"                      xmlns:C="urn:ietf:params:xml:ns:caldav"/>     <D:resource>       <D:href>/home/bernard/calendars/outbox/</D:href>       <D:privilege><C:schedule-send-freebusy/></D:privilege>     </D:resource>   </D:need-privileges>                ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section title="CALDAV:supported-collection Precondition">        <t>          <list style="hanging">            <t hangText="Name:">supported-collection</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Apply to:">POST</t>            <t hangText="Use with:">400 Bad Request</t>            <t hangText="Purpose:">              (precondition) --              The Request-URI MUST identify the location of a              scheduling Outbox collection.            </t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[   <!ELEMENT supported-collection EMPTY >                ]]></artwork>              </figure>            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   <C:supported-collection xmlns:C="urn:ietf:params:xml:ns:caldav"/>                ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section title="CALDAV:supported-calendar-data Precondition">        <t>          <list style="hanging">            <t hangText="Name:">supported-calendar-data</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Apply to:">POST</t>            <t hangText="Use with:">400 Bad Request</t>            <t hangText="Purpose:">              (precondition) --              The resource body submitted in the POST request MUST              be a supported media type (e.g., text/calendar).            </t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[   <!ELEMENT supported-calendar-data EMPTY >                ]]></artwork>              </figure>            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   <C:supported-calendar-data      xmlns:C="urn:ietf:params:xml:ns:caldav"/>                ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section title="CALDAV:valid-calendar-data Precondition">        <t>          <list style="hanging">            <t hangText="Name:">valid-calendar-data</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Apply to:">POST</t>            <t hangText="Use with:">400 Bad Request</t>            <t hangText="Purpose:">              (precondition) --              The resource submitted in the POST request MUST be valid              data for the media type being specified (e.g., a valid              iCalendar object).            </t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[   <!ELEMENT valid-calendar-data EMPTY>                ]]></artwork>              </figure>            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   <C:valid-calendar-data xmlns:C="urn:ietf:params:xml:ns:caldav"/>                ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section title="CALDAV:valid-scheduling-message Precondition">        <t>          <list style="hanging">            <t hangText="Name:">valid-scheduling-message</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Apply to:">POST</t>            <t hangText="Use with:">400 Bad Request</t>            <t hangText="Purpose:">              (precondition) --              The resource submitted in the POST request MUST obey all              restrictions specified for the POST request (e.g., the              scheduling message follow the restrictions of iTIP).            </t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[   <!ELEMENT valid-scheduling-message EMPTY >              ]]></artwork>              </figure>            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   <C:valid-scheduling-message      xmlns:C="urn:ietf:params:xml:ns:caldav"/>                ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section title="CALDAV:valid-organizer Precondition">        <t>          <list style="hanging">            <t hangText="Name:">valid-organizer</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Apply to:">POST</t>            <t hangText="Use with:">403 Forbidden</t>            <t hangText="Purpose:">              (precondition) --              The Calendar User identified by the "ORGANIZER" property              in the POST request's scheduling message MUST be the              Calendar User (or one of the Calendar Users) associated              with the scheduling Outbox collection being targeted by              the request;            </t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[   <!ELEMENT valid-organizer EMPTY >                ]]></artwork>              </figure>            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   <C:valid-organizer xmlns:C="urn:ietf:params:xml:ns:caldav"/>                ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section title="CALDAV:max-resource-size Precondition">        <t>          <list style="hanging">            <t hangText="Name:">max-resource-size</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Apply to:">POST</t>            <t hangText="Use with:">403 Forbidden</t>            <t hangText="Purpose:">              (precondition) --              The resource submitted in the POST request MUST have              a size in octets less than or equal to the value of the              CALDAV:max-resource-size property              (defined in Section 5.2.5 of <xref target="RFC4791"/>)              specified on the scheduling Outbox collection targeted              by the request.            </t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[   <!ELEMENT max-resource-size EMPTY >                ]]></artwork>              </figure>            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   <C:max-resource-size xmlns:C="urn:ietf:params:xml:ns:caldav"/>                ]]></artwork>              </figure>            </t>          </list>        </t>      </section>  </section>  <section anchor="schedule-response" title="Response to a POST request">    <t>      A POST request can return freebusy information for one or more Calendar Users. Thus the response needs to contain separate status information for each recipient. This specification defines a new XML response body to convey multiple recipient status.    </t>    <t>      A response to a POST method that indicates status for one or more recipients MUST be an XML document with a CALDAV:schedule-response XML element as its root element. This element MUST contain one CALDAV:response element for each recipient, with each of those containing elements that indicate which recipient they correspond to, the scheduling status for that recipient, any error codes and an optional description. See <xref target="schedule_response_element"/> for the detail on the child elements.    </t>    <t>      In the case of a successful freebusy request, the CALDAV:response elements      can also contain CALDAV:calendar-data elements which contain      freebusy information (e.g., an iCalendar VFREEBUSY component)      indicating the busy state of the corresponding recipient. See <xref target="freebusy_example"/> for an example freebusy request and response.    </t>  </section></section><section title="Avoiding Conflicts when Updating Scheduling Object Resources" anchor="schedule-tag">    <t>      Because replies from Attendees and updates from Organizers      are automatically processed by the server, clients might      be in a situation where their copy of a calendar resource      is different from the one currently on the server. When an      Attendee or Organizer makes a change to the client's copy      of the calendar resource, if the client writes the data      to the server it could overwrite the changes already made      there. Typically, clients use the ETag value and If-Match      request headers to avoid the "lost update problem".    </t>    <t>      Clients can also use ETag and If-Match to avoid      this problem. However, when doing so the client will likely      have to resolve the differences between the new resource and      the original one, and the changes made by the Attendee or      Organizer in the client. This can be a complicated comparison      particularly when recurring components are present.    </t>    <t>      Additionally, the data on the server may change frequently as      Attendees change their participation status, triggering updates      to the Organizer, and consequently other Attendees' copies of      the scheduling object resource. If the ETag/If-Match behavior      were used, clients would be forced to reconcile their cached      copy of a scheduling object resource with the updated one on      the server in order to attempt to write the user's changes      back. This could lead to a race condition that can effectively      result in a temporary denial of service when, for example,      there is an event with a large Attendee list. A "storm" of      updates will occur if Attendees all start responding at the      same time, and this would prevent Attendees and the Organizer      from being able to update their own copies of the scheduling      object resource as the server copy is changing frequently.    </t>    <t>      A solution is to have the server determine the      best way to merge changes made on the server with changes being      made by the client. For example, if an Attendee changes their      participation status and triggers an update to the Organizer's      copy of the event, but the Organizer also updates their cached      copy of the event and attempts to write it back, rather than      failing on a conditional If-Match when the Organizer writes      their data, the server would instead take the changes made      by the Organizer and apply the Attendee changes and store      the result. Thus a form of "weak" ETag matching behavior is      needed such that scheduling changes made automatically on      the server do not invalidate the tag, so that when clients      store data conditionally based on the tag value, the server      knows it can apply the merge behavior.    </t>    <t>      In order to do that, this specification introduces a      new WebDAV resource property CALDAV:schedule-tag with a      corresponding response header "Schedule-Tag", and a new      "If-Schedule-Tag-Match" request header to allow client      changes to be appropriately merged with server changes in      the case where the changes on the server were the result      of an "inconsequential" scheduling message update. An      "inconsequential" scheduling message is one which simply      updates the status information of Attendees due to a reply      from an Attendee.    </t>    <t>      Servers MUST support requests targeted at scheduling      object resources using the "If-Schedule-Tag-Match" request header.      Consequently, the server MUST support the "Schedule-Tag" response      header and CALDAV:schedule-tag property for scheduling object      resources.  Servers MUST automatically resolve conflicts with      "inconsequential" changes done to scheduling object resources when      the "If-Schedule-Tag-Match" request header is specified.    </t>    <t>      The If-Schedule-Tag-Match request header applies only to the      Request-URI, and not to the Destination of a COPY or MOVE in the      same way as the If-Match request header.    </t>    <t>      Clients SHOULD use the If-Schedule-Tag-Match header on requests that update scheduling object resources.    </t>    <t>      A response to any successful GET or PUT request targeting      a scheduling object resource MUST include a Schedule-Tag      response header with the value set to the same value as the      CALDAV:schedule-tag WebDAV property of the resource.    </t>    <t>      A response to any successful COPY or MOVE request that      specifies a Destination request header targeting a scheduling      object resource MUST include a Schedule-Tag response header      with the value set to the same value as the CALDAV:schedule-tag      WebDAV property of the resource identified in the Request-URI.    </t>    <t>      The Schedule-Tag feature is designed to be used to address      the problem of "inconsequential" changes on the server      only. Normal ETag operations are used in all other cases,      e.g., for synchronization.    </t>    <t>      The value of the CALDAV:schedule-tag property changes according      to these rules:      <list style="symbols">        <t>For an Organizer's copy of a scheduling object resource:          <list style="numbers">            <t>              The server MUST NOT change the CALDAV:schedule-tag              property value when the scheduling object resource              is updated as the result of automatically processing              a scheduling message reply from an Attendee. For              instance, when an Attendee replies to the Organizer,              the CALDAV:schedule-tag property is unchanged after              the Organizer's scheduling object resource has been              automatically updated by the server with the Attendee's              new participation status.            </t>            <t>              The server MUST change CALDAV:schedule-tag property              value when the scheduling object resource is changed              directly via an HTTP request (e.g., PUT, COPY or MOVE).            </t>          </list>        </t>        <t>          For an Attendee's copy of a scheduling object resource:          <list style="numbers">            <t>              The server MUST change the CALDAV:schedule-tag              property value when the scheduling object resource              is changed as the result of processing a              scheduling message update from an Organizer              that contains changes other than just the participation              status of Attendees.            </t>            <t>              The server MUST NOT change the CALDAV:schedule-tag              property value when the scheduling object resource              is changed as the result of processing a scheduling              message update from an Organizer that only specify              changes in the participation status of Attendees.              For instance, when Attendee "A" replies to Organizer              "O", and Attendee "B" receives a scheduling message              update from Organizer "O" with the new participation              status of Attendee "A", the CALDAV:schedule-tag              property of Attendee "B"s scheduling object resource              MUST NOT be changed.            </t>            <t>              The server MUST change the CALDAV:schedule-tag property              value when the scheduling object resource is changed              directly via an HTTP request (e.g., PUT, COPY or MOVE).            </t>          </list>        </t>      </list>    </t>    <section title="PUT">      <t>        Clients can use the If-Schedule-Tag-Match request header to do        a PUT request that ensures that "inconsequential"        changes on the server do not result in a precondition        error. The value of the request header is set to the last        Schedule-Tag value received for the resource being modified.        If the value of the If-Schedule-Tag-Match header matches the        current value of the CALDAV:schedule-tag property the server        MUST take any "ATTENDEE" property changes for all Attendees        other than the owner of the scheduling object resource and        apply those to the new resource being stored.        Otherwise, the server MUST fail the request with a 412        Precondition Failed status code.      </t>    </section>    <section title="DELETE, COPY or MOVE">      <t>        Clients can use the If-Schedule-Tag-Match request header to do        a DELETE, COPY or MOVE request that ensures that "inconsequential"        changes on the server do not result in a precondition error. The        value of the request header is set to the last Schedule-Tag        value received for the resource being deleted.        If the value of the If-Schedule-Tag-Match header matches the        current value of the CALDAV:schedule-tag property the server        performs the normal DELETE, COPY or MOVE request processing for the resource.        Otherwise, the server MUST fail the request with a 412        Precondition Failed status code.      </t>    </section>  </section>    <section title="Other Scheduling Considerations">      <section title="Attendee Participation Status">        <t>          This section specifies additional requirements on the handling          of the "PARTSTAT" property parameter when the "SCHEDULE-AGENT"          property parameter on the corresponding "ATTENDEE" property is          set to the value "SERVER" or is not present.        </t>        <t>          Clients SHOULD, and servers MUST reset the "PARTSTAT" property          parameter value of all "ATTENDEE" properties, except the one          that corresponds to the Organizer, to "NEEDS-ACTION" when the          Organizer reschedules an event.        </t>        <t>          A reschedule of an event occurs when any "DTSTART", "DTEND",          "DURATION", "DUE", "RRULE", "RDATE", or "EXDATE" property changes          in a calendar component such that existing recurrence instances          are impacted by the changes, as shown in the table below.        </t>        <texttable>          <ttcol>Property</ttcol>          <ttcol>Server Action</ttcol>          <c>DTSTART, DTEND, DURATION, DUE</c>          <c>Any change to these properties MUST result in "PARTSTAT" being set to "NEEDS-ACTION"</c>          <c>&nbsp;</c><c>&nbsp;</c>          <c>RRULE</c>          <c>A change to or addition of this property that results in the addition of new recurring instances or a change in time for existing recurring instances MUST result in "PARTSTAT" being reset to "NEEDS-ACTION" on each affected component.</c>          <c>&nbsp;</c><c>&nbsp;</c>          <c>RDATE</c>          <c>A change to or addition of this property that results in the addition of new recurring instances or a change in time for existing recurring instances MUST result in "PARTSTAT" being reset to "NEEDS-ACTION" on each affected component.</c>          <c>&nbsp;</c><c>&nbsp;</c>          <c>EXDATE</c>          <c>A change to or removal of this property that results in the re-instatement of recurring instances MUST result in "PARTSTAT" being set to "NEEDS-ACTION" on each affected component.</c>        </texttable>            <t>          The server MAY allow the Organizer's client to change an          Attendee's "PARTSTAT" property parameter value to "NEEDS-ACTION"          at any other time (e.g., when the "LOCATION" property value          changes, an Organizer might wish to re-invite Attendees who          may be impacted by the change).        </t>      </section>      <section title="Schedule Status Values" anchor="schedule-status-value">        <t>When scheduling with an Attendee there are two types of status information that can be returned during the transaction. The first type of status information is a "delivery" status that indicates whether the scheduling message from the Organizer to the Attendee was delivered or not, or what the current status of delivery is. The second type of status information is a "reply" status corresponding to the Attendee's own "REQUEST-STATUS" information from the scheduling message reply that is sent back to the Organizer.</t>        <t>Similarly, when an Attendee sends a reply back to the Organizer, there will be "delivery" status information for the scheduling message sent to the Organizer. However, there is no "REQUEST-STATUS" sent back by the Organizer, so there is no equivalent of the "reply" status as per scheduling messages to Attendees.</t>        <t>The "delivery" status information on an "ORGANIZER" or "ATTENDEE" iCalendar property is conveyed in the "SCHEDULE-STATUS" property parameter value (<xref target="schedule-status"/>). The status code value for "delivery" status can be one of the following:</t>        <texttable>            <ttcol>Delivery Status Code</ttcol>            <ttcol>Description</ttcol>            <c>1.0</c>            <c>The scheduling message is pending. i.e. the server is still in the process of sending the message. The status code value can be expected to change once the server has completed its sending and delivery attempts.</c>            <c>&nbsp;</c>            <c>&nbsp;</c>            <c>1.1</c>            <c>The scheduling message has been successfully sent. However, the server does not have explicit information about whether the scheduling message was successfully delivered to the recipient. This state can occur with "store and forward" style scheduling protocols such as <xref target="RFC6047">iMIP</xref> (iTIP using email).</c>            <c>&nbsp;</c>            <c>&nbsp;</c>            <c>1.2</c>            <c>The scheduling message has been successfully delivered.</c>            <c>&nbsp;</c>            <c>&nbsp;</c>            <c>3.7</c>            <c>The scheduling message was not delivered because the server did not recognize the calendar user address as a valid calendar user. Note that this code applies to both Organizer and Attendee calendar user addresses.</c>            <c>&nbsp;</c>            <c>&nbsp;</c>            <c>3.8</c>            <c>The scheduling message was not delivered due to insufficient privileges. Note that this code applies to both privileges granted by both the Organizer and Attendee calendar users.</c>            <c>&nbsp;</c>            <c>&nbsp;</c>            <c>5.1</c>            <c>The scheduling message was not delivered because the server could not complete delivery of the message. This is likely due to a temporary failure, and the originator can try to send the message again at a later time.</c>            <c>&nbsp;</c>            <c>&nbsp;</c>            <c>5.2</c>            <c>The scheduling message was not delivered because the server was not able to find a suitable way to deliver the message. This is likely a permanent failure, and the originator should not try to send the message again, at least without verifying/correcting the calendar user address of the recipient.</c>            <c>&nbsp;</c>            <c>&nbsp;</c>            <c>5.3</c>            <c>The scheduling message was not delivered and was rejected because scheduling with that recipient is not allowed. This is likely a permanent failure, and the originator should not try to send the message again.</c>        </texttable>        <t>The status code for "reply" status can be any of the valid <xref target="RFC5546">iTIP</xref> "REQUEST-STATUS" values.</t>        <t>          The 1.xx "REQUEST-STATUS" codes are new.  This specification modifies item (2) of Section 3.6 of <xref target="RFC5546"/> by adding the following restriction:          <list>          	<t>For a 1.xx code, all components MUST have exactly the same code.</t>          </list>          Definition of the new 1.xx codes is as follows:        </t>        <section title="Status Code 1.0" toc="exclude" anchor="status1.0">          <t>          <list style="hanging">            <t hangText="Status Code:">1.0</t>            <t hangText="Status Description:">Pending.</t>            <t hangText="Status Exception Data:">None.</t>            <t hangText="Description:">Delivery of the iTIP message is pending.</t>          </list>          </t>        </section>        <section title="Status Code 1.1" toc="exclude" anchor="status1.1">          <t>          <list style="hanging">            <t hangText="Status Code:">1.1</t>            <t hangText="Status Description:">Sent.</t>            <t hangText="Status Exception Data:">None.</t>            <t hangText="Description:">The iTIP message has been sent, though no information about successful delivery is known.</t>          </list>          </t>        </section>        <section title="Status Code 1.2" toc="exclude" anchor="status1.2">          <t>          <list style="hanging">            <t hangText="Status Code:">1.2</t>            <t hangText="Status Description:">Delivered.</t>            <t hangText="Status Exception Data:">None.</t>            <t hangText="Description:">The iTIP message has been sent and delivered.</t>          </list>          </t>        </section>      </section>    </section>    <section title="Additional iCalendar Property Parameters">      <t>        This specification defines additional iCalendar property        parameters to support the CalDAV scheduling extensions.      </t>      <section title="Schedule Agent Parameter" anchor="schedule-agent">        <t>          <list style="hanging">            <t hangText="Parameter Name:">SCHEDULE-AGENT</t>            <t hangText="Purpose:">              To specify the agent expected to deliver scheduling              messages to the corresponding Organizer or Attendee.            </t>            <t hangText="Format Definition:">              This property parameter is defined by the following notation:               <figure><artwork name="abnf-rfc5234"><![CDATA[   scheduleagentparam = "SCHEDULE-AGENT" "="                     ("SERVER"      ; The server handles scheduling                    / "CLIENT"      ; The client handles scheduling                    / "NONE"        ; No scheduling                    / x-name        ; Experimental type                    / iana-token)   ; Other IANA registered type                                    ;                                    ; Default is SERVER                 ]]></artwork></figure></t>            <t hangText="Description:">              This property parameter MAY be specified on "ORGANIZER" or "ATTENDEE"              iCalendar properties. In the absence of this parameter, the              value "SERVER" MUST be used for the default behavior.              The value determines whether or not an automatic scheduling              transaction on a server will cause a scheduling message              to be sent to the corresponding Calendar User identified              by the "ORGANIZER" or "ATTENDEE" property value. When the value "SERVER"              is specified, or the parameter is absent, then it is the              server's responsibility to send a scheduling message as              part of an automatic scheduling transaction. When the value              "CLIENT" is specified, that indicates that the client              is handling scheduling messages with the Calendar User              itself. When "NONE" is specified, no scheduling messages              are being sent to the Calendar User.            </t>            <t>              Servers MUST NOT include this parameter in any scheduling              messages sent as the result of an automatic scheduling              transaction.            </t>            <t>              Clients MUST NOT include this parameter in any scheduling              messages that they themselves send.            </t>            <t>              The parameter value MUST be the same on every "ORGANIZER" property in a scheduling object resource.            </t>            <t>              The parameter value MUST be the same on each "ATTENDEE" property whose values match in a scheduling object resource.            </t>            <t>              Servers and clients MUST treat x-name and iana-token              values they do not recognize the same way as they would              the "NONE" value.            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   ORGANIZER;SCHEDULE-AGENT=SERVER:mailto:bernard@example.com   ATTENDEE;SCHEDULE-AGENT=NONE:mailto:cyrus@example.com                ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section title="Schedule Force Send Parameter"               anchor="schedule-force-send">        <t>          <list style="hanging">            <t hangText="Parameter Name:">SCHEDULE-FORCE-SEND</t>            <t hangText="Purpose:">              To force a scheduling message to be sent to the Calendar              User specified by the property.            </t>            <t hangText="Format Definition:">              This property parameter is defined by the following notation:              <figure><artwork name="abnf-rfc5234"><![CDATA[   scheduleforcesendparam = "SCHEDULE-FORCE-SEND" "="                           ("REQUEST"    ; Force a "REQUEST"                          / "REPLY"      ; Force a "REPLY"                          / iana-token)  ; IANA registered method                 ]]></artwork></figure></t>            <t hangText="Description:">              This property parameter MAY be specified on "ATTENDEE"              and "ORGANIZER" properties on which the "SCHEDULE-AGENT"              property parameter is set to the value "SERVER" or is              not specified.              This property parameter is used to force a server to send              a scheduling message to a specific Calendar User in              situations where the server would not send a scheduling              message otherwise (e.g., when no change that warrants the              delivery of a new scheduling message was performed on              the scheduling object resource).              An Organizer MAY specify this parameter on an "ATTENDEE"              property with the value "REQUEST" to force a "REQUEST"              scheduling message to be sent to this Attendee.              An Attendee MAY specify this parameter on the "ORGANIZER"              with the value "REPLY" to force a "REPLY" scheduling              message to be sent to the Organizer.            </t>            <t>              Servers MUST NOT preserve this property parameter in              scheduling object resources, nor include it in any              scheduling messages sent as the result of an automatic              scheduling transaction.            </t>            <t>              Clients MUST NOT include this parameter in any scheduling              messages that they themselves send.            </t>            <t>              Servers MUST set the "SCHEDULE-STATUS" parameter of the              "ATTENDEE" or "ORGANIZER" to 2.3 (i.e., "Success, invalid              property parameter ignored", see Section 3.6 of              <xref target="RFC5546"/>)              when the "SCHEDULE-FORCE-SEND" parameter is set to              a x-name or iana-token value they do not recognize.            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   ATTENDEE;SCHEDULE-FORCE-SEND=REQUEST:mailto:bernard@example.com   ORGANIZER;SCHEDULE-FORCE-SEND=REPLY:mailto:cyrus@example.com                 ]]></artwork>               </figure>             </t>           </list>         </t>       </section>       <section title="Schedule Status Parameter" anchor="schedule-status">         <t>           <list style="hanging">             <t hangText="Parameter Name:">SCHEDULE-STATUS</t>             <t hangText="Purpose:">               To specify the status codes returned from processing of the               most recent scheduling message sent to the corresponding               Attendee, or received from the corresponding Organizer.             </t>             <t hangText="Format Definition:">               This property parameter is defined by the following notation:               <figure><artwork name="abnf-rfc5234"><![CDATA[   schedulestatusparam = "SCHEDULE-STATUS" "="                        ( statcode                       / DQUOTE statcode *("," statcode) DQUOTE)   ; "statcode" is defined in Section 3.8.8.3 of   ; [RFC5545]. Value is a single   ; "statcode" or a comma-separated list of "statcode" values.               ]]></artwork></figure>             </t>             <t hangText="Description:">              This property parameter MAY be specified on the "ATTENDEE"              and "ORGANIZER" properties.             </t>             <t>               Servers MUST add this property parameter to any "ATTENDEE"               properties corresponding to Calendar Users who were               sent a scheduling message via an automatic scheduling               transaction. Clients SHOULD NOT change or remove this               parameter if it was provided by the server. In the case               where the client is handling the scheduling, the client               MAY add, change or remove this parameter to indicate the               last scheduling message status it received.             </t>             <t>               Servers MUST add this parameter to any "ORGANIZER"               properties corresponding to Calendar Users who were sent               a scheduling message reply by an Attendee via an automatic               scheduling transaction. Clients SHOULD NOT change or remove               this parameter if it was provided by the server. In the               case where the client is handling the scheduling, the client               MAY add, change or remove this parameter to indicate the               last scheduling message status it received.             </t>             <t>Servers MUST NOT include this parameter in any scheduling messages sent as the result of an automatic scheduling transaction.</t>             <t>Clients MUST NOT include this parameter in any scheduling messages that they themselves send.</t>             <t>Suitable values for this property parameter are described in <xref target="schedule-status-value"/>.</t>             <t hangText="Example:">               <figure>                 <artwork><![CDATA[   ATTENDEE;SCHEDULE-STATUS="2.0":mailto:bernard@example.com   ATTENDEE;SCHEDULE-STATUS="2.0,2.4":mailto:cyrus@example.com                 ]]></artwork>               </figure>             </t>           </list>         </t>      </section>    </section>    <section title="Additional Message Header Fields">      <t>        This specification defines additional HTTP request and response        headers for use with CalDAV.      </t>      <section anchor="schedule-reply-header"        title="Schedule-Reply Request Header">        <t>          <figure>            <artwork name="abnf-rfc2616"><![CDATA[   Schedule-Reply = "Schedule-Reply" ":" ("T" | "F")            ]]></artwork>          </figure>          <list style="hanging">            <t hangText="Example:">              <figure>                <artwork><![CDATA[   Schedule-Reply: F                ]]></artwork>              </figure>            </t>          </list>        </t>        <t>          When an Attendee removes a scheduling          object resource, and the Schedule-Reply header is not present,          or present and set to the value "T", the server MUST send an          appropriate reply scheduling message with the Attendee's          "PARTSTAT" iCalendar property parameter value set to "DECLINED"          as part of its normal automatic scheduling transaction          processing.        </t>        <t>          When the Schedule-Reply header is set to the value "F", the          server MUST NOT send a scheduling message as part of its          normal automatic scheduling transaction processing.        </t>        <t>          The Schedule-Reply request header is used by a client to          indicate to a server whether or not an automatic scheduling          transaction should occur when an Attendee deletes a scheduling          object resource. In particular it controls whether a reply          scheduling message is sent to the Organizer as a result of the          removal. There are situations in which unsolicited scheduling          messages need to be silently removed (or ignored) for security          or privacy reasons. This request header allows the scheduling          object resource to be removed if such a need arises.        </t>        <t>          All scheduling object resources MUST support the Schedule-Reply          request header.        </t>      </section>      <section anchor="schedule-tag-header" title="Schedule-Tag Response Header">        <t>          The Schedule-Tag response header provides the current value of          the CALDAV:schedule-tag property value. The behavior of this          response header is described in <xref target='schedule-tag'/>.        </t>        <t>          All scheduling object resources MUST support the Schedule-Tag          header.        </t>        <figure>          <artwork name="abnf-rfc2616"><![CDATA[   Schedule-Tag = "Schedule-Tag" ":" opaque-tag   ; "opaque-tag" is defined in Section 3.11 of [RFC2616]          ]]></artwork>        </figure>        <t>          <list style="hanging">            <t hangText="Example:">              <figure>                <artwork><![CDATA[   Schedule-Tag: "12ab34-cd56ef"                ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section title="If-Schedule-Tag-Match Request Header"               anchor="if-schedule-tag-match-header">        <t>          The If-Schedule-Tag-Match request header field is used with a          method to make it conditional. Clients can set this header to          the value returned in the Schedule-Tag response header, or the          CALDAV:schedule-tag property, of a scheduling object resource          previously retrieved from the server to avoid overwriting          "consequential" changes to the scheduling object resource.        </t>        <t>          All scheduling object resources MUST support the          If-Schedule-Tag-Match header.        </t>        <figure>          <artwork name="abnf-rfc2616"><![CDATA[   If-Schedule-Tag-Match = "If-Schedule-Tag-Match" ":" opaque-tag   ; "opaque-tag" is defined in Section 3.11 of [RFC2616]          ]]></artwork>        </figure>        <t>          <list style="hanging">            <t hangText="Example:">              <figure>                <artwork><![CDATA[   If-Schedule-Tag-Match: "12ab34-cd56ef"                ]]></artwork>              </figure>            </t>          </list>        </t>      </section>    </section>    <section title="Additional WebDAV Properties">      <t>        This specification defines the following new WebDAV        properties for use with CalDAV.      </t>      <section title="CALDAV:schedule-calendar-transp Property">        <t>          <list style="hanging">            <t hangText="Name:">schedule-calendar-transp</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Purpose:">Determines whether the calendar object resources in a calendar collection will affect the owner's freebusy.</t>            <t hangText="Protected:">This property MAY be protected and SHOULD NOT be returned by a PROPFIND allprop request (as defined in Section 14.2 of <xref target="RFC4918"/>).</t>            <t hangText="COPY/MOVE behavior:">This property value SHOULD be kept during a MOVE operation, and SHOULD be copied and preserved in a COPY.</t>            <t hangText="Description:">This property SHOULD be defined on all calendar collections. If present, it contains one of two XML elements that indicate whether the calendar object resources in the calendar collection should contribute to the owner's freebusy or not. When the CALDAV:opaque element is used, all calendar object resources in the corresponding calendar collection MUST contribute to freebusy, assuming access privileges and other iCalendar properties allow it to. When the CALDAV:transparent XML element is used, the calendar object resources in the corresponding calendar collection MUST NOT contribute to freebusy.</t>            <t>If this property is not present on a calendar collection, then the default value CALDAV:opaque MUST be assumed.</t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[   <!ELEMENT schedule-calendar-transp (opaque | transparent) >   <!ELEMENT opaque EMPTY>   <!-- Affect busy time searches -->   <!ELEMENT transparent EMPTY>   <!-- Invisible to busy time searches -->                   ]]></artwork>              </figure>            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[<C:schedule-calendar-transp     xmlns:C="urn:ietf:params:xml:ns:caldav">  <C:opaque/></C:schedule-calendar-transp>                   ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section anchor="PROPERTY_schedule-default-calendar-URL" title="CALDAV:schedule-default-calendar-URL Property">        <t>          <list style="hanging">            <t hangText="Name:">schedule-default-calendar-URL</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Purpose:">Specifies a default calendar for an Attendee where new scheduling object resources are created.</t>            <t hangText="Protected:">This property MAY be protected in the case where a server does not support changing the default calendar, or does not support a default calendar.</t>            <t hangText="COPY/MOVE behavior:">This property is only defined on a scheduling Inbox collection which cannot be moved or copied.</t>            <t hangText="Description:">This property MAY be defined on a scheduling Inbox collection. If present, it contains zero or one DAV:href XML elements. When a DAV:href element is present, its value indicates a URL to a calendar collection that is used as the default calendar. When no DAV:href element is present, it indicates that there is no default calendar. In the absence of this property there is no default calendar. When there is no default calendar the server is free to choose the calendar in which a new scheduling object resource is created. See <xref target="default-calendar"/>.</t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[<!ELEMENT schedule-default-calendar-URL (DAV:href?) >                   ]]></artwork>              </figure>            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   <C:schedule-default-calendar-URL xmlns:D="DAV:"        xmlns:C="urn:ietf:params:xml:ns:caldav">     <D:href>/home/cyrus/calendars/work/</D:href>   </C:schedule-default-calendar-URL>                   ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section title="CALDAV:schedule-tag Property">        <t>          <list style="hanging">            <t hangText="Name:">schedule-tag</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Purpose:">Indicates whether a scheduling object resource has had a "consequential" change made to it.</t>            <t hangText="Value:">opaque-tag (defined in Section 3.11 of <xref target="RFC2616"/>)</t>            <t hangText="Protected:">This property MUST be protected as only the server can update the value.</t>            <t hangText="COPY/MOVE behavior:">This property is only defined on scheduling object resources. It MUST be preserved when a scheduling object resource is copied or moved and the resulting resource is also a scheduling object resource. If the source resource is not a scheduling object resource but the destination resource is, this property MUST be added to the destination resource.</t>            <t hangText="Description:">The CALDAV:schedule-tag property MUST be defined on all scheduling object resources. This property is described in <xref target="schedule-tag"/>.</t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[   <!ELEMENT schedule-tag (#PCDATA) >                   ]]></artwork>              </figure>            </t>            <t hangText="Example:">              <figure>                <artwork><![CDATA[   <C:schedule-tag xmlns:C="urn:ietf:params:xml:ns:caldav"   >"12345-67890"</C:schedule-tag>                   ]]></artwork>              </figure>            </t>          </list>        </t>      </section>    </section>    <section title="Scheduling Access Control">      <section title="Scheduling Privileges" anchor="privileges">        <t>CalDAV servers MUST support and adhere to the requirements of <xref target="RFC3744">WebDAV ACL</xref>. Furthermore, CalDAV servers that advertise support for the "calendar-auto-schedule" feature MUST also support the scheduling privileges defined in this section.</t>        <t>All the scheduling privileges MUST be non-abstract and MUST appear in the DAV:supported-privilege-set property of scheduling Outbox and Inbox collections on which they are defined.</t>        <t>The tables specified in <xref target="privilege_summary"/> clarify which scheduling methods (e.g., "REQUEST", "REPLY", etc.) are controlled by each scheduling privilege defined in this section.</t>        <section title="Privileges on Scheduling Inbox Collections">            <t>This section defines new WebDAV ACL privileges that are for use on scheduling Inbox collections. These privileges determine whether delivery of scheduling messages from a calendar user is allowed by the calendar user who "owns" the scheduling Inbox collection. This allows calendar users to choose which other calendar users can schedule with them.</t>            <t>Note that when a scheduling message is delivered to a calendar user, in addition to a scheduling object resource being created in the calendar user's scheduling Inbox collection, a new scheduling object resource might be created or an existing one updated in a calendar belonging to the calendar user. In that case, the ability to create or update the scheduling object resource in the calendar is controlled by the privileges assigned to the scheduling Inbox collection.</t>            <t>The privileges defined in this section are ignored if applied to a resource other than a scheduling Inbox collection.</t>        <section title="CALDAV:schedule-deliver Privilege"                 anchor="PRIVILEGE_schedule-deliver">          <t>CALDAV:schedule-deliver is an aggregate privilege that contains all the scheduling privileges that control the processing and delivery of incoming scheduling messages, that is, CALDAV:schedule-deliver-invite and CALDAV:schedule-deliver-reply, as well as freebusy requests targeted at the owner of the scheduling Inbox collection, that is, CALDAV:schedule-query-freebusy.</t>          <t><![CDATA[<!ELEMENT schedule-deliver EMPTY >]]></t>        </section>        <section title="CALDAV:schedule-deliver-invite Privilege"                 anchor="PRIVILEGE_schedule-deliver-invite">          <t>The CALDAV:schedule-deliver-invite privilege controls the processing and delivery of scheduling messages coming from an Organizer.</t>          <t><![CDATA[<!ELEMENT schedule-deliver-invite EMPTY >]]></t>        </section>        <section title="CALDAV:schedule-deliver-reply Privilege"                 anchor="PRIVILEGE_schedule-deliver-reply">          <t>The CALDAV:schedule-deliver-reply privilege controls the processing and delivery of scheduling messages coming from an Attendee.</t>          <t><![CDATA[<!ELEMENT schedule-deliver-reply EMPTY >]]></t>        </section>        <section title="CALDAV:schedule-query-freebusy Privilege"                 anchor="PRIVILEGE_schedule-query-freebusy">          <t>The CALDAV:schedule-query-freebusy privilege controls freebusy requests targeted at the owner of the scheduling Inbox collection.</t>          <t><![CDATA[<!ELEMENT schedule-query-freebusy EMPTY >]]></t>        </section>        </section>        <section title="Privileges on Scheduling Outbox Collections">            <t>This section defines new WebDAV ACL privileges that are defined for use on scheduling Outbox collections. These privileges determine which calendar users are allowed to send scheduling messages on behalf of the calendar user who "owns" the scheduling Outbox collection. This allows calendar users to choose other calendar users who can act on their behalf to send schedule messages to other calendar users (e.g. assistants working on behalf of their boss).</t>            <t>The privileges defined in this section are ignored if applied to a resource other than a scheduling Outbox collection.</t>        <section title="CALDAV:schedule-send Privilege"                 anchor="PRIVILEGE_schedule-send">          <t>CALDAV:schedule-send is an aggregate privilege that contains all the scheduling privileges that control the use of methods that will cause scheduling messages to be delivered to other users, that is, CALDAV:schedule-send-invite and CALDAV:schedule-send-reply, as well as freebusy requests to be targeted at other users, that is, CALDAV:schedule-send-freebusy.</t>          <t><![CDATA[<!ELEMENT schedule-send EMPTY >]]></t>        </section>        <section title="CALDAV:schedule-send-invite Privilege"                 anchor="PRIVILEGE_schedule-send-invite">          <t>The CALDAV:schedule-send-invite privilege controls the sending of scheduling messages by Organizers.</t>          <t>Users granted the DAV:bind privilege on a calendar collection, or DAV:write privilege on scheduling object resources, will also need the CALDAV:schedule-send-invite privilege granted on the scheduling Outbox collection of the owner of the calendar collection or scheduling object resource in order to be allowed to create, modify or delete scheduling object resources in a way that will trigger the CalDAV server to deliver organizer scheduling messages to other calendar users.</t>          <t><![CDATA[<!ELEMENT schedule-send-invite EMPTY >]]></t>        </section>        <section title="CALDAV:schedule-send-reply Privilege"                 anchor="PRIVILEGE_schedule-send-reply">          <t>The CALDAV:schedule-send-reply privilege controls the sending of scheduling messages by Attendees.</t>          <t>Users granted the DAV:bind privilege on a calendar collection, or DAV:write privilege on scheduling object resources, will also need the CALDAV:schedule-send-reply privilege granted on the scheduling Outbox collection of the owner of the calendar collection or scheduling object resource in order to be allowed to create, modify or delete scheduling object resources in a way that will trigger the CalDAV server to deliver attendee scheduling messages to other calendar users.</t>          <t><![CDATA[<!ELEMENT schedule-send-reply EMPTY >]]></t>        </section>        <section title="CALDAV:schedule-send-freebusy Privilege"                 anchor="PRIVILEGE_schedule-send-freebusy">          <t>The CALDAV:schedule-send-freebusy privilege controls the use of the POST method to submit scheduling messages that specify the scheduling method "REQUEST" with a "VFREEBUSY" calendar component.</t>          <t><![CDATA[<!ELEMENT schedule-send-freebusy EMPTY >]]></t>        </section>        </section>        <section title="Aggregation of Scheduling Privileges">          <t>Server implementations MUST aggregate the scheduling privileges as follows:            <list>              <t>DAV:all MUST contain CALDAV:schedule-send and CALDAV:schedule-deliver;</t>              <t>CALDAV:schedule-send MUST contain CALDAV:schedule-send-invite, CALDAV:schedule-send-reply, and CALDAV:schedule-send-freebusy;</t>              <t>CALDAV:schedule-deliver MUST contain CALDAV:schedule-deliver-invite, CALDAV:schedule-deliver-reply, and CALDAV:schedule-query-freebusy.</t>            </list>          </t>          <t>The following diagram illustrates how scheduling privileges are aggregated according to the above requirements.            <figure>              <artwork><![CDATA[      [DAV:all] (aggregate)          |          +-- [CALDAV:schedule-deliver] (aggregate)          |      |          |      +-- [CALDAV:schedule-deliver-invite]          |      +-- [CALDAV:schedule-deliver-reply]          |      +-- [CALDAV:schedule-query-freebusy]          |          +-- [CALDAV:schedule-send] (aggregate)                 |                 +-- [CALDAV:schedule-send-invite]                 +-- [CALDAV:schedule-send-reply]                 +-- [CALDAV:schedule-send-freebusy]]]></artwork>            </figure>          </t>        </section>      </section>      <section anchor="principal.properties" title="Additional Principal Properties">        <t>This section defines new properties for WebDAV principal resources as defined in <xref target="RFC3744"/>. These properties are likely to be protected but the server MAY allow them to be written by appropriate users.</t>        <section title="CALDAV:schedule-inbox-URL Property">          <t>            <list style="hanging">              <t hangText="Name:">schedule-inbox-URL</t>              <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>              <t hangText="Purpose:">Identify the URL of the scheduling Inbox collection owned by the associated principal resource.</t>              <t hangText="Protected:">This property MAY be protected.</t>              <t hangText="PROPFIND behavior:">This property SHOULD NOT be returned by a PROPFIND allprop request (as defined in Section 14.2 of <xref target="RFC4918"/>).</t>              <t hangText="COPY/MOVE behavior:">This property value SHOULD be preserved in COPY and MOVE operations.</t>              <t hangText="Description:">This property is needed for a client to determine where the scheduling Inbox collection of the current user is located so that processing of scheduling messages can occur. If not present, then the associated calendar user is not enabled for reception of scheduling messages on the server.</t>              <t hangText="Definition:">                <figure>                  <artwork><![CDATA[   <!ELEMENT schedule-inbox-URL (DAV:href)>                    ]]></artwork>                </figure>              </t>            </list>          </t>        </section>        <section title="CALDAV:schedule-outbox-URL Property">          <t>            <list style="hanging">              <t hangText="Name:">schedule-outbox-URL</t>              <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>              <t hangText="Purpose:">Identify the URL of the scheduling Outbox collection owned by the associated principal resource.</t>              <t hangText="Protected:">This property MAY be protected.</t>              <t hangText="PROPFIND behavior:">This property SHOULD NOT be returned by a PROPFIND allprop request (as defined in Section 14.2 of <xref target="RFC4918"/>).</t>              <t hangText="COPY/MOVE behavior:">This property value SHOULD be preserved in COPY and MOVE operations.</t>              <t hangText="Description:">This property is needed for a client to determine where the scheduling Outbox collection of the current user is located so that sending of scheduling messages can occur. If not present, then the associated calendar user is not enabled for the sending of scheduling messages on the server.</t>              <t hangText="Definition:">                <figure>                  <artwork><![CDATA[   <!ELEMENT schedule-outbox-URL DAV:href>                    ]]></artwork>                </figure>              </t>            </list>          </t>        </section>        <section title="CALDAV:calendar-user-address-set Property">          <t>            <list style="hanging">              <t hangText="Name:">calendar-user-address-set</t>              <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>              <t hangText="Purpose:">Identify the calendar addresses of the associated principal resource.</t>              <t hangText="Protected:">This property MAY be protected.</t>              <t hangText="PROPFIND behavior:">This property SHOULD NOT be returned by a PROPFIND allprop request (as defined in Section 14.2 of <xref target="RFC4918"/>).</t>              <t hangText="COPY/MOVE behavior:">This property value SHOULD be preserved in COPY and MOVE operations.</t>              <t hangText="Description:">Support for this property is REQUIRED. This property is needed to map calendar user addresses in iCalendar data to principal resources and their associated scheduling Inbox and Outbox collections. In the event that a user has no well defined identifier for their calendar user address, the URI of their principal resource can be used. This property SHOULD be searchable using the DAV:principal-property-search REPORT. The DAV:principal-search-property-set REPORT SHOULD identify this property as such. If not present, then the associated calendar user is not enabled for scheduling on the server.</t>              <t hangText="Definition:">                <figure>                  <artwork><![CDATA[   <!ELEMENT calendar-user-address-set (DAV:href*)>                    ]]></artwork>                </figure>              </t>              <t hangText="Example:">                <figure>                  <artwork><![CDATA[   <C:calendar-user-address-set xmlns:D="DAV:"                         xmlns:C="urn:ietf:params:xml:ns:caldav">     <D:href>mailto:bernard@example.com</D:href>     <D:href>mailto:bernard.desruisseaux@example.com</D:href>   </C:calendar-user-address-set>]]></artwork>                </figure>              </t>            </list>          </t>        </section>        <section title="CALDAV:calendar-user-type Property">          <t>            <list style="hanging">              <t hangText="Name:">calendar-user-type</t>              <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>              <t hangText="Purpose:">Identifies the calendar user type of the associated principal resource.</t>              <t hangText="Value:">Same values allowed for the iCalendar "CUTYPE" property parameter defined in Section 3.2.3 of <xref target="RFC5545"/>.</t>              <t hangText="Protected:">This property MAY be protected.</t>              <t hangText="PROPFIND behavior:">This property SHOULD NOT be returned by a PROPFIND allprop request (as defined in Section 14.2 of <xref target="RFC4918"/>).</t>              <t hangText="COPY/MOVE behavior:">This property value SHOULD be preserved in COPY and MOVE operations.</t>              <t hangText="Description:">Clients can query principal resources in order to lookup attendees available on the server. When doing this, it is useful to know, or restrict the query to, certain types of calendar user (e.g., only search for "people", or only search for "rooms"). This property MAY be defined on principal resources to indicate the type of calendar user associated with the principal resource. Its value is the same as the iCalendar "CUTYPE" property parameter that can be used on "ATTENDEE" properties. This property SHOULD be searchable using the DAV:principal-property-search REPORT. The DAV:principal-search-property-set REPORT SHOULD identify this property as such.</t>              <t hangText="Definition:">                <figure>                  <artwork><![CDATA[   <!ELEMENT calendar-user-type (#PCDATA) >                    ]]></artwork>                </figure>              </t>              <t hangText="Example:">                <figure>                  <artwork><![CDATA[   <C:calendar-user-type        xmlns:C="urn:ietf:params:xml:ns:caldav">INDIVIDUAL<    /C:calendar-user-type>]]></artwork>                </figure>              </t>            </list>          </t>      </section>    </section>    </section>    <section title="XML Element Definitions">      <section anchor="schedule_response_element" title="CALDAV:schedule-response XML Element">        <t>          <list style="hanging">            <t hangText="Name:">schedule-response</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Purpose:">Contains the set of responses for a POST method request.</t>            <t hangText="Description:">See <xref target="schedule-response"/>.</t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[    <!ELEMENT schedule-response (response*)>]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section anchor="response_element" title="CALDAV:response XML Element">        <t>          <list style="hanging">            <t hangText="Name:">response</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Purpose:">Contains a single response for a POST method request.</t>            <t hangText="Description:">See <xref target="schedule-response"/>.</t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[<!ELEMENT response (recipient,                    request-status,                    calendar-data?,                    DAV:error?,                    DAV:responsedescription?)><!-- CALDAV:calendar-data is defined in Section 9.6 ofRFC 4791 and when used here uses the definition withcontent (#PCDATA) only -->]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section anchor="recipient_element" title="CALDAV:recipient XML Element">        <t>          <list style="hanging">            <t hangText="Name:">recipient</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Purpose:">The calendar user address that the enclosing response for a POST method request is for.</t>            <t hangText="Description:">See <xref target="schedule-response"/>.</t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[    <!ELEMENT recipient (DAV:href)>            ]]></artwork>              </figure>            </t>          </list>        </t>      </section>      <section anchor="response_status_element" title="CALDAV:request-status XML Element">        <t>          <list style="hanging">            <t hangText="Name:">request-status</t>            <t hangText="Namespace:">urn:ietf:params:xml:ns:caldav</t>            <t hangText="Purpose:">The iTIP "REQUEST-STATUS" property value for this response.</t>            <t hangText="Description:">See <xref target="schedule-response"/>.</t>            <t hangText="Definition:">              <figure>                <artwork><![CDATA[    <!ELEMENT request-status (#PCDATA) >            ]]></artwork>              </figure>            </t>          </list>        </t>      </section>    </section>  <section title="Security Considerations">    <t>      The process of scheduling involves the sending and receiving of      scheduling messages. As a result, the security problems related      to messaging in general are relevant here. In particular the      authenticity of the scheduling messages needs to be verified.      Servers and clients MUST use an HTTP connection protected with      TLS as defined in <xref target="RFC2818"/> for all scheduling      transactions.    </t>    <section title="Verifying Scheduling Transactions">      <t>        When handling a scheduling transaction:      </t>      <t>        <list>          <t>            Servers MUST verify that the principal associated with            the DAV:owner of the calendar collection in which a            scheduling object resource is being manipulated contains a            CALDAV:schedule-outbox-URL property value.          </t>          <t>            Servers MUST verify that the currently authenticated user            has the CALDAV:schedule-send privilege, or a suitable sub-privilege aggregated under this privilege, on the scheduling Outbox collection of the DAV:owner of the calendar collection in which a scheduling            object resource is being manipulated.          </t>          <t>            Servers MUST only deliver scheduling messages to recipients            when the CALDAV:schedule-deliver privilege, or a suitable sub-privilege aggregated under this privilege, is granted on the recipient's scheduling Inbox collection for the principal associated with the DAV:owner of the calendar collection in which a scheduling            object resource is being manipulated.          </t>          <t>            To prevent impersonation of calendar users, the server MUST            verify that the "ORGANIZER" property in an organizer scheduling            object resource matches one of the calendar user addresses            of the DAV:owner of the calendar collection in which the            resource is stored.          </t>          <t>            To prevent spoofing of an existing scheduling object resource,            servers MUST verify that the "UID" iCalendar property value            in a new scheduling object resource does not match that            of an existing scheduling object resource with a different            "ORGANIZER" property value.          </t>        </list>      </t>    </section>    <section title="Verifying Busy Time Information Requests">      <t>        When handling a POST request on a scheduling Outbox collection:      </t>      <t>        <list>          <t>            Servers MUST verify that the principal associated with the            calendar user address specified in the "ORGANIZER" property            of the scheduling message data in the request contains a            CALDAV:schedule-outbox-URL property value that matches the            scheduling Outbox collection targeted by the request.          </t>          <t>            Servers MUST verify that the currently authenticated user            has the CALDAV:schedule-send privilege, or a sub-privilege aggregated under this privilege, on the scheduling Outbox collection targeted by the request.          </t>          <t>            Servers MUST only return valid freebusy information for recipients            when the CALDAV:schedule-deliver privilege, or a sub-privilege aggregated under this privilege, is granted on the recipient's scheduling Inbox collection for the principal associated with the DAV:owner of the scheduling Outbox collection targeted by the request.          </t>        </list>      </t>    </section>    <section title="Privacy Issues">      <t>As noted in <xref target="schedule-reply-header"/>, Attendees can use the Schedule-Reply request header with the value set to "F" to prevent notification to an Organizer that a scheduling object resource was deleted. This allows Attendees to remove unwanted scheduling messages without any response to the Organizer.</t>    </section>  </section>  <section title="IANA Considerations">    <section title="Message Header Field Registrations">      <t>        The message header fields below should be added to the Permanent        Message Header Field Registry (see <xref target="RFC3864"/>).      </t>      <section title="Schedule-Reply" anchor="iana_schedule_reply">          <t>Header field name: Schedule-Reply</t>          <t>Applicable protocol: http</t>          <t>Status: standard</t>          <t>Author/Change controller: IETF</t>          <t>Specification document(s): this specification (<xref target="schedule-reply-header"/>)</t>          <t>Related information: none</t>      </section>      <section title="Schedule-Tag">          <t>Header field name: Schedule-Tag</t>          <t>Applicable protocol: http</t>          <t>Status: standard</t>          <t>Author/Change controller: IETF</t>          <t>Specification document(s): this specification (<xref target="schedule-tag-header"/>)</t>          <t>Related information: none</t>      </section>      <section title="If-Schedule-Tag-Match">          <t>Header field name: If-Schedule-Tag-Match</t>          <t>Applicable protocol: http</t>          <t>Status: standard</t>          <t>Author/Change controller: IETF</t>          <t>Specification document(s): this specification (<xref target="if-schedule-tag-match-header"/>)</t>          <t>Related information: none</t>      </section>    </section>    <section title="iCalendar Property Parameter Registrations">      <t>        The following iCalendar property parameters should be added to        the iCalendar Property Parameter Registry defined in Section        8.3.3 of <xref target="RFC5545"/>.      </t>      <texttable>        <ttcol align="left">Parameter</ttcol>        <ttcol align="left">Status</ttcol>        <ttcol align="left">Reference</ttcol>        <c>SCHEDULE-AGENT</c>        <c>Current</c>        <c>RFCXXXX, <xref target="schedule-agent"/></c>        <c>SCHEDULE-STATUS</c>        <c>Current</c>        <c>RFCXXXX, <xref target="schedule-status"/></c>        <c>SCHEDULE-FORCE-SEND</c>        <c>Current</c>        <c>RFCXXXX, <xref target="schedule-force-send"/></c>      </texttable>    </section>    <section title="iCalendar REQUEST-STATUS Value Registrations">      <t>        The following iCalendar "REQUEST-STATUS" values should be added to        the iCalendar REQUEST-STATUS Value Registry defined in Section        7.3 of <xref target="RFC5546"/>.      </t>		<texttable>		  <ttcol>Status Code</ttcol>		  <ttcol>Status</ttcol>		  <ttcol>Reference</ttcol>		  <c>1.0</c>		  <c>Current</c>		  <c>RFC XXXX, <xref target="status1.0"/></c>		  <c>1.1</c>		  <c>Current</c>		  <c>RFC XXXX, <xref target="status1.1"/></c>		  <c>1.2</c>		  <c>Current</c>		  <c>RFC XXXX, <xref target="status1.2"/></c>		</texttable>    </section>    <section title="Additional iCalendar Elements Registries">        <t>          This specification adds two new IANA registries for iCalendar elements. Additional codes MAY be used, provided the process described in Section 8.2.1 of <xref target='RFC5545'/> is used to register them.        </t>      <section title="Schedule Agent Values Registry">        <t>          The following table has been used to initialize the          schedule agent values registry.        </t>        <texttable>          <ttcol align="left">Schedule Agent</ttcol>          <ttcol align="left">Status</ttcol>          <ttcol align="left">Reference</ttcol>          <c>SERVER</c>          <c>Current</c>          <c>RFC XXXX, <xref target="schedule-agent"/></c>          <c>CLIENT</c>          <c>Current</c>          <c>RFC XXXX, <xref target="schedule-agent"/></c>          <c>NONE</c>          <c>Current</c>          <c>RFC XXXX, <xref target="schedule-agent"/></c>        </texttable>      </section>      <section title="Schedule Force Send Values Registry">        <t>          The following table has been used to initialize the          schedule send values registry.        </t>        <texttable>          <ttcol align="left">Schedule Force Send</ttcol>          <ttcol align="left">Status</ttcol>          <ttcol align="left">Reference</ttcol>          <c>REQUEST</c>          <c>Current</c>          <c>RFC XXXX, <xref target="schedule-force-send"/></c>          <c>REPLY</c>          <c>Current</c>          <c>RFC XXXX, <xref target="schedule-force-send"/></c>        </texttable>      </section>    </section>  </section>  <section title="Acknowledgements">    <t>      The authors would like to thank the following individuals      for contributing their ideas and support for writing this      specification:      Mike Douglass,      Lisa Dusseault,      Helge Hess,      Arnaud Quillaud,      Julian F. Reschke,      Wilfredo Sanchez Vega,      Simon Vaillancourt,      and Jim Whitehead.    </t>    <t>      The authors would also like to thank the Calendaring and Scheduling      Consortium for advice with this specification, and for organizing      interoperability testing events to help refine it.    </t>  </section></middle><back>  <references title="Normative References">    &rfc2119;    &rfc2616;    &rfc2818;    &rfc3744;    &rfc3864;    &rfc4791;    &rfc4918;    &rfc5234;    &rfc5545;    &rfc5546;    &W3C.REC-xml-20081126;  </references>  <references title="Informative References">    &rfc6047;    &rfc3283;  </references>  <section title="Scheduling Privileges Summary" anchor="privilege_summary">    <section title="Scheduling Inbox Privileges">      <t>        The following tables specify which scheduling privileges        grant the right to a calendar user to deliver a scheduling        message to the scheduling Inbox collection of another        calendar user. The appropriate behavior depends on the        calendar component type as well as the scheduling "METHOD"        specified in the scheduling message.      </t>      <figure>        <artwork><![CDATA[                                 +--------------------------------+                                 |  METHOD for VEVENT and VTODO   |   +-----------------------------+---------+-------+-----+--------+   | Scheduling Inbox Privilege  | REQUEST | REPLY | ADD | CANCEL |   +-----------------------------+---------+-------+-----+--------+   | schedule-deliver            |    *    |   *   |  *  |   *    |   |   schedule-deliver-invite   |    *    |       |  *  |   *    |   |   schedule-deliver-reply    |         |   *   |     |        |   |   schedule-query-freebusy   |         |       |     |        |   +-----------------------------+---------+-------+-----+--------+        ]]></artwork>      </figure>      <figure>        <artwork><![CDATA[                                 +----------------------+                                 | METHOD for VFREEBUSY |   +-----------------------------+----------------------+   | Scheduling Inbox Privilege  |       REQUEST        |   +-----------------------------+----------------------+   | schedule-deliver            |          *           |   |   schedule-deliver-invite   |                      |   |   schedule-deliver-reply    |                      |   |   schedule-query-freebusy   |          *           |   +-----------------------------+----------------------+        ]]></artwork>      </figure>    </section>    <section title="Scheduling Outbox Privileges">      <t>        The following tables specify which scheduling privileges        grant the right to a Calendar User to perform busy time        information requests and to submit scheduling messages        to other Calendar Users as the result of a scheduling        transaction. The appropriate behavior depends on the        calendar component type as well as the scheduling "METHOD"        specified in the scheduling message.      </t>      <figure>        <artwork><![CDATA[                                 +--------------------------------+                                 |  METHOD for VEVENT and VTODO   |   +-----------------------------+---------+-------+-----+--------+   | Scheduling Outbox Privilege | REQUEST | REPLY | ADD | CANCEL |   +-----------------------------+---------+-------+-----+--------+   | schedule-send               |    *    |   *   |  *  |   *    |   |   schedule-send-invite      |    *    |       |  *  |   *    |   |   schedule-send-reply       |         |   *   |     |        |   |   schedule-send-freebusy    |         |       |     |        |   +-----------------------------+---------+-------+-----+--------+        ]]></artwork>      </figure>      <figure>        <artwork><![CDATA[                                 +----------------------+                                 | METHOD for VFREEBUSY |   +-----------------------------+----------------------+   | Scheduling Outbox Privilege |       REQUEST        |   +-----------------------------+----------------------+   | schedule-send               |          *           |   |   schedule-send-invite      |                      |   |   schedule-send-reply       |                      |   |   schedule-send-freebusy    |          *           |   +-----------------------------+----------------------+        ]]></artwork>      </figure>    </section>  </section>  <section title="Example Scheduling Transactions">    <t>      This section describes some example scheduling transactions that give      a general idea of how scheduling is carried out between CalDAV clients      and servers from the perspective of meeting Organizers and Attendees.    </t>    <t>      In the following examples the requests and responses are incomplete and are only for illustrative purposes. In particular, HTTP authentication headers and behaviors are not shown, even though they are required in normal operation.    </t>    <section title="Example: Organizer Inviting Multiple Attendees">      <t>        In the following example, Cyrus invites Wilfredo, Bernard and Mike        to a single instance event by simply creating a new scheduling object        resource in one of his calendar collection by using the PUT method.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[PUT /home/cyrus/calendars/work/9263504FD3AD.ics HTTP/1.1Host: cal.example.comContent-Type: text/calendar; charset="utf-8"Content-Length: xxxxIf-None-Match: *BEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Client//ENBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090602T185254ZDTSTART:20090602T160000ZDTEND:20090602T170000ZTRANSP:OPAQUESUMMARY:LunchORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Cyrus Daboo";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED: mailto:cyrus@example.comATTENDEE;CN="Wilfredo Sanchez Vega";CUTYPE=INDIVIDUAL;PARTSTAT =NEEDS-ACTION;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:wilfredo@ example.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT= NEEDS-ACTION;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:bernard@ex ample.netATTENDEE;CN="Mike Douglass";CUTYPE=INDIVIDUAL;PARTSTAT=NEEDS-A CTION;RSVP=TRUE:mailto:mike@example.orgEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 201 CreatedContent-Length: 0Date: Tue, 02 Jun 2009 18:52:54 GMTLast-Modified: Tue, 02 Jun 2009 18:52:54 GMTETag: "d85561cfe74a4e785eb4639451b434fb"Schedule-Tag: "488177c8-2ea7-4176-a6cb-fab8cfccdea2"        ]]></artwork>      </figure>      <t>        Once the event creation has been completed, Cyrus's client will        retrieve the event back from the server to get the schedule        status of each Attendee. In this example, the server reports        that a scheduling message was delivered to Wilfredo, a scheduling        message is still pending for Bernard, and the server was unable        to deliver a scheduling message to Mike.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[GET /home/cyrus/calendars/work/9263504FD3AD.ics HTTP/1.1Host: cal.example.com        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 200 OKDate: Tue, 02 Jun 2009 18:52:58 GMTLast-Modified: Tue, 02 Jun 2009 18:52:58 GMTETag: "eb897deabc8939589da116714bc99265"Schedule-Tag: "488177c8-2ea7-4176-a6cb-fab8cfccdea2"Content-Type: text/calendar; charset="utf-8"Content-Length: xxxxBEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Server//ENBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090602T185300ZDTSTART:20090602T160000ZDTEND:20090602T170000ZTRANSP:OPAQUESUMMARY:LunchORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Cyrus Daboo";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED: mailto:cyrus@example.comATTENDEE;CN="Wilfredo Sanchez Vega";CUTYPE=INDIVIDUAL;PARTSTAT =NEEDS-ACTION;ROLE=REQ-PARTICIPANT;RSVP=TRUE;SCHEDULE-STATUS= 1.2:mailto:wilfredo@e xample.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT= NEEDS-ACTION;ROLE=REQ-PARTICIPANT;RSVP=TRUE;SCHEDULE-STATUS= 1.0:mailto:bernard@example.netATTENDEE;CN="Mike Douglass";CUTYPE=INDIVIDUAL;PARTSTAT=NEEDS-A CTION;RSVP=TRUE;SCHEDULE-STATUS=3.7:mailto:mike@example.orgEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>    </section>    <section title="Example: Attendee Receiving an Invitation">      <t>        In the following example, Wilfredo's client retrieves and deletes        the new scheduling message that appeared in his scheduling        Inbox collection after the server automatically processed it and        created a new scheduling object resource in his default calendar        collection.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[GET /home/wilfredo/calendars/inbox/27d93fc0a58c.ics HTTP/1.1Host: cal.example.com        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 200 OKDate: Tue, 02 Jun 2009 18:59:58 GMTLast-Modified: Tue, 02 Jun 2009 18:59:58 GMTETag: "da116714bc9926c89395895eb897deab"Content-Type: text/calendar; charset="utf-8"Content-Length: xxxxBEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Server//ENMETHOD:REQUESTBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090602T185254ZDTSTART:20090602T160000ZDTEND:20090602T170000ZTRANSP:OPAQUESUMMARY:LunchORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Cyrus Daboo";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED: mailto:cyrus@example.comATTENDEE;CN="Wilfredo Sanchez Vega";CUTYPE=INDIVIDUAL;PARTSTAT =NEEDS-ACTION;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:wilfredo@ example.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT= NEEDS-ACTION;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:bernard@ex ample.netATTENDEE;CN="Mike Douglass";CUTYPE=INDIVIDUAL;PARTSTAT=NEEDS-A CTION;RSVP=TRUE:mailto:mike@example.orgEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[DELETE /home/wilfredo/calendars/inbox/27d93fc0a58c.ics HTTP/1.1Host: cal.example.com        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 204 No ContentDate: Tue, 02 Jun 2009 20:40:36 GMT         ]]></artwork>      </figure>    </section>    <section title="Example: Attendee Replying to an Invitation">      <t>        In the following example, Wilfredo's accepts Cyrus's invitation        and sets a reminder on the event.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[PUT /home/wilfredo/calendars/work/BB64861C2228.ics HTTP/1.1Host: cal.example.comIf-Schedule-Tag-Match: "e78f23ed-0188-4bab-938d-2aeb3324c7e8"Content-Type: text/calendar; charset="utf-8"Content-Length: xxxxBEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Client//ENBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090602T185254ZDTSTART:20090602T160000ZDTEND:20090602T170000ZTRANSP:OPAQUESUMMARY:LunchORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Cyrus Daboo";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED: mailto:cyrus@example.comATTENDEE;CN="Wilfredo Sanchez Vega";CUTYPE=INDIVIDUAL;PARTSTAT =ACCEPTED;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:wilfredo@exam ple.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT= NEEDS-ACTION;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:bernard@ex ample.netATTENDEE;CN="Mike Douglass";CUTYPE=INDIVIDUAL;PARTSTAT=NEEDS-A CTION;RSVP=TRUE:mailto:mike@example.orgBEGIN:VALARMTRIGGER:-PT15MACTION:DISPLAYDESCRIPTION:ReminderEND:VALARMEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 200 OKContent-Length: 0Date: Tue, 02 Jun 2009 18:57:54 GMTLast-Modified: Tue, 02 Jun 2009 18:57:54 GMTETag: "eb4639451b434fbd85561cfe74a4e785"Schedule-Tag: "8893ee45-eb9d-428f-b53c-c777daf19e41"        ]]></artwork>      </figure>      <t>        Once the event modification has been completed, Wilfredo's client        will retrieve the event back from the server to get the schedule        status of the Organizer.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[GET /home/wilfredo/calendars/work/BB64861C2228.ics HTTP/1.1Host: cal.example.com        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 200 OKDate: Tue, 02 Jun 2009 19:03:03 GMTLast-Modified: Tue, 02 Jun 2009 19:02:21 GMTETag: "5eb897deabda116714bc9926c8939589"Schedule-Tag: "8893ee45-eb9d-428f-b53c-c777daf19e41"Content-Type: text/calendar; charset="utf-8"Content-Length: xxxxBEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Client//ENBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090602T190221ZDTSTART:20090602T160000ZDTEND:20090602T170000ZTRANSP:OPAQUESUMMARY:LunchORGANIZER;CN="Cyrus Daboo";SCHEDULE-STATUS=1.2:mailto:cyrus@ex ample.comATTENDEE;CN="Cyrus Daboo";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED: mailto:cyrus@example.comATTENDEE;CN="Wilfredo Sanchez Vega";CUTYPE=INDIVIDUAL;PARTSTAT =ACCEPTED;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:wilfredo@exam ple.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT= NEEDS-ACTION;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:bernard@ex ample.netATTENDEE;CN="Mike Douglass";CUTYPE=INDIVIDUAL;PARTSTAT=NEEDS-A CTION;RSVP=TRUE:mailto:mike@example.orgBEGIN:VALARMTRIGGER:-PT15MACTION:DISPLAYDESCRIPTION:ReminderEND:VALARMEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>    </section>    <section title="Example: Organizer Receiving a Reply to an Invitation">      <t>        On reception of Wilfredo's reply, Cyrus's server will        automatically update Cyrus's scheduling object resource, make        Wilfredo's scheduling message available in Cyrus's scheduling Inbox        collection, and deliver an updated scheduling message to Bernard to        share Wilfredo's updated participation status.  In this example,        Cyrus's client retrieves and deletes this scheduling message in his        scheduling Inbox collection.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[GET /home/cyrus/calendars/inbox/c0a58c27d93f.ics HTTP/1.1Host: cal.example.com        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 200 OKDate: Tue, 02 Jun 2009 19:05:02 GMTLast-Modified: Tue, 02 Jun 2009 19:04:20 GMTETag: "9265eb897deabc8939589da116714bc9"Content-Type: text/calendar; charset="utf-8"Content-Length: xxxxBEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Server//ENMETHOD:REPLYBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090602T185754ZDTSTART:20090602T160000ZDTEND:20090602T170000ZORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Wilfredo Sanchez Vega";PARTSTAT=ACCEPTED:mailto:w ilfredo@example.comREQUEST-STATUS:2.0;SuccessEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[DELETE /home/cyrus/calendars/inbox/c0a58c27d93f.ics HTTP/1.1Host: cal.example.com        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 204 No ContentDate: Tue, 02 Jun 2009 19:05:05 GMT        ]]></artwork>      </figure>      <t>        Cyrus's client then retrieves the event back from the server        with Wilfredo's updated participation status.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[GET /home/cyrus/calendars/work/9263504FD3AD.ics HTTP/1.1Host: cal.example.com        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 200 OKDate: Tue, 02 Jun 2009 19:05:02 GMTLast-Modified: Tue, 02 Jun 2009 19:04:20 GMTETag: "eb897deabc8939589da116714bc99265"Schedule-Tag: "132cab27-1fe3-67ab-de13-abd348d1dee3"Content-Type: text/calendar; charset="utf-8"Content-Length: xxxxBEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Server//ENBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090602T190420ZDTSTART:20090602T160000ZDTEND:20090602T170000ZTRANSP:OPAQUESUMMARY:LunchORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Cyrus Daboo";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED: mailto:cyrus@example.comATTENDEE;CN="Wilfredo Sanchez Vega";CUTYPE=INDIVIDUAL;PARTSTAT =ACCEPTED;ROLE=REQ-PARTICIPANT;RSVP=TRUE;SCHEDULE-STATUS=2.0: mailto:wilfredo@example.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT= NEEDS-ACTION;ROLE=REQ-PARTICIPANT;RSVP=TRUE;SCHEDULE-STATUS=1 .0:mailto:bernard@example.netATTENDEE;CN="Mike Douglass";CUTYPE=INDIVIDUAL;PARTSTAT=NEEDS-A CTION;RSVP=TRUE;SCHEDULE-STATUS=3.7:mailto:mike@example.orgEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>    </section>    <section title="Example: Organizer Requesting Busy Time Information" anchor="freebusy_example">      <t>        In this example, Cyrus requests the busy time information        of Wilfredo, Bernard and Mike.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[POST /home/cyrus/calendars/outbox/ HTTP/1.1Host: cal.example.comContent-Type: text/calendar; charset="utf-8"Content-Length: xxxxBEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Client//ENMETHOD:REQUESTBEGIN:VFREEBUSYUID:4FD3AD926350DTSTAMP:20090602T190420ZDTSTART:20090602T000000ZDTEND:20090604T000000ZORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Wilfredo Sanchez Vega":mailto:wilfredo@example.comATTENDEE;CN="Bernard Desruisseaux":mailto:bernard@example.netATTENDEE;CN="Mike Douglass":mailto:mike@example.orgEND:VFREEBUSYEND:VCALENDAR]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 200 OKDate: Tue, 02 Jun 2009 20:07:34 GMTContent-Type: application/xml; charset="utf-8"Content-Length: xxxx<?xml version="1.0" encoding="utf-8" ?><C:schedule-response xmlns:D="DAV:"       xmlns:C="urn:ietf:params:xml:ns:caldav"><C:response><C:recipient><D:href>mailto:wilfredo@example.com</D:href></C:recipient><C:request-status>2.0;Success</C:request-status><C:calendar-data>BEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Server//ENMETHOD:REPLYBEGIN:VFREEBUSYUID:4FD3AD926350DTSTAMP:20090602T200733ZDTSTART:20090602T000000ZDTEND:20090604T000000ZORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Wilfredo Sanchez Vega":mailto:wilfredo@example.comFREEBUSY;FBTYPE=BUSY:20090602T110000Z/20090602T120000ZFREEBUSY;FBTYPE=BUSY:20090603T170000Z/20090603T180000ZEND:VFREEBUSYEND:VCALENDAR</C:calendar-data></C:response><C:response><C:recipient><D:href>mailto:bernard@example.net</D:href></C:recipient><C:request-status>2.0;Success</C:request-status><C:calendar-data>BEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Server//ENMETHOD:REPLYBEGIN:VFREEBUSYUID:4FD3AD926350DTSTAMP:20090602T200733ZDTSTART:20090602T000000ZDTEND:20090604T000000ZORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Bernard Desruisseaux":mailto:bernard@example.netFREEBUSY;FBTYPE=BUSY:20090602T150000Z/20090602T160000ZFREEBUSY;FBTYPE=BUSY:20090603T090000Z/20090603T100000ZFREEBUSY;FBTYPE=BUSY:20090603T180000Z/20090603T190000ZEND:VFREEBUSYEND:VCALENDAR</C:calendar-data></C:response><C:response><C:recipient><D:href>mailto:mike@example.org</D:href></C:recipient><C:request-status>3.7;Invalid calendar user</C:request-status></C:response></C:schedule-response>  ]]></artwork>      </figure>    </section>    <section title="Example: User Attempting to Invite Attendee on behalf of Organizer">      <t>        In the following example, Cyrus attempts to create,        on behalf of Wilfredo, an event with Bernard specified        as an Attendee. The request fails since Wilfredo didn't        grant Cyrus the right to invite other Calendar Users        on his behalf.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[PUT /home/wilfredo/calendars/work/def456.ics HTTP/1.1Host: cal.example.comContent-Type: text/calendar; charset="utf-8"Content-Length: xxxxIf-None-Match: *BEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Client//ENBEGIN:VEVENTUID:3504F926D3ADSEQUENCE:0DTSTAMP:20090602T190221ZDTSTART:20090602T230000ZDTEND:20090603T000000ZTRANSP:OPAQUESUMMARY:DinnerORGANIZER;CN="Wilfredo Sanchez Vega":mailto:wilfredo@example.comATTENDEE;CN="Wilfredo Sanchez Vega";CUTYPE=INDIVIDUAL;PARTSTAT=A CCEPTED:mailto:wilfredo@example.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT=NE EDS-ACTION;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:bernard@exampl e.netEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 403 ForbiddenContent-Type: application/xml; charset="utf-8"Content-Length: xxxx<D:error xmlns:D="DAV:" xmlns:C="urn:ietf:params:xml:ns:caldav">  <D:need-privileges>    <D:resource>      <D:href>/home/wilfredo/calendars/outbox/</D:href>      <D:privilege><C:schedule-send-invite/></D:privilege>    </D:resource>  </D:need-privileges></D:error>        ]]></artwork>      </figure>    </section>    <section title="Example: Attendee Declining an Instance of a Recurring Event">      <t>        In the following example, Bernard declines the second recurrence        instance of a daily recurring event he's been invited to by Cyrus.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[PUT /home/bernard/calendars/work/4FD3AD926350.ics HTTP/1.1Host: cal.example.comContent-Type: text/calendar; charset="utf-8"Content-Length: xxxxIf-Schedule-Tag-Match: "7775FB30-7534-489E-A79A-0EA147B933EB"BEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Client//ENBEGIN:VTIMEZONETZID:America/MontrealBEGIN:STANDARDDTSTART:20071104T020000RRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SUTZNAME:ESTTZOFFSETFROM:-0400TZOFFSETTO:-0500END:STANDARDBEGIN:DAYLIGHTDTSTART:20070311T020000RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SUTZNAME:EDTTZOFFSETFROM:-0500TZOFFSETTO:-0400END:DAYLIGHTEND:VTIMEZONEBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090602T185254ZDTSTART;TZID=America/Montreal:20090601T150000DTEND;TZID=America/Montreal:20090601T160000RRULE:FREQ=DAILY;INTERVAL=1;COUNT=5TRANSP:OPAQUESUMMARY:Review Internet-DraftORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Cyrus Daboo";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED: mailto:cyrus@example.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT= ACCEPTED;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:bernard@exampl e.netEND:VEVENTBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090603T183823ZRECURRENCE-ID;TZID=America/Montreal:20090602T150000DTSTART;TZID=America/Montreal:20090602T150000DTEND;TZID=America/Montreal:20090602T160000TRANSP:TRANSPARENTSUMMARY:Review Internet-DraftORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Cyrus Daboo";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED: mailto:cyrus@example.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT= DECLINED;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:bernard@exampl e.netEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 200 OKContent-Length: 0Date: Tue, 02 Jun 2009 18:52:54 GMTLast-Modified: Tue, 02 Jun 2009 18:52:54 GMTETag: "d85561cfe74a4e785eb4639451b434fb"Schedule-Tag: "488177c8-2ea7-4176-a6cb-fab8cfccdea2"        ]]></artwork>      </figure>      <t>        Bernard's participation status update will cause his        server to deliver a scheduling message to Cyrus.        Cyrus's client will find the following reply message        from Bernard in Cyrus's scheduling Inbox collection:      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[GET /home/cyrus/calendars/inbox/9263504FD3AD.ics HTTP/1.1Host: cal.example.com        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 200 OKDate: Tue, 02 Jun 2009 18:52:58 GMTLast-Modified: Tue, 02 Jun 2009 18:52:58 GMTETag: "eb897deabc8939589da116714bc99265"Content-Type: text/calendar; charset="utf-8"Content-Length: xxxxBEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Client//ENMETHOD:REPLYBEGIN:VTIMEZONETZID:America/MontrealBEGIN:STANDARDDTSTART:20071104T020000RRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SUTZNAME:ESTTZOFFSETFROM:-0400TZOFFSETTO:-0500END:STANDARDBEGIN:DAYLIGHTDTSTART:20070311T020000RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SUTZNAME:EDTTZOFFSETFROM:-0500TZOFFSETTO:-0400END:DAYLIGHTEND:VTIMEZONEBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090603T183823ZRECURRENCE-ID;TZID=America/Montreal:20090602T150000DTSTART;TZID=America/Montreal:20090602T150000DTEND;TZID=America/Montreal:20090602T160000SUMMARY:Review Internet-DraftORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Bernard Desruisseaux";PARTSTAT=DECLINED: mailto:bernard@example.netREQUEST-STATUS:2.0;SuccessEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>    </section>    <section title="Example: Attendee Removing an Instance of a Recurring Event">      <t>        In the following example, Bernard removes from his calendar the        third recurrence instance of a daily recurring event he's been        invited to by Cyrus. This is accomplished by the addition of an "EXDATE" property to the scheduling object resource stored by Bernard.      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[PUT /home/bernard/calendars/work/4FD3AD926350.ics HTTP/1.1Host: cal.example.comContent-Type: text/calendar; charset="utf-8"Content-Length: xxxxIf-Schedule-Tag-Match: "488177c8-2ea7-4176-a6cb-fab8cfccdea2"BEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Client//ENBEGIN:VTIMEZONETZID:America/MontrealBEGIN:STANDARDDTSTART:20071104T020000RRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SUTZNAME:ESTTZOFFSETFROM:-0400TZOFFSETTO:-0500END:STANDARDBEGIN:DAYLIGHTDTSTART:20070311T020000RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SUTZNAME:EDTTZOFFSETFROM:-0500TZOFFSETTO:-0400END:DAYLIGHTEND:VTIMEZONEBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090602T185254ZDTSTART;TZID=America/Montreal:20090601T150000DTEND;TZID=America/Montreal:20090601T160000RRULE:FREQ=DAILY;INTERVAL=1;COUNT=5EXDATE;TZID=America/Montreal:20090603T150000TRANSP:OPAQUESUMMARY:Review Internet-DraftORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Cyrus Daboo";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED: mailto:cyrus@example.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT= ACCEPTED;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:bernard@exampl e.netEND:VEVENTBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090603T183823ZRECURRENCE-ID;TZID=America/Montreal:20090602T150000DTSTART;TZID=America/Montreal:20090602T150000DTEND;TZID=America/Montreal:20090602T160000TRANSP:TRANSPARENTSUMMARY:Review Internet-DraftORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Cyrus Daboo";CUTYPE=INDIVIDUAL;PARTSTAT=ACCEPTED: mailto:cyrus@example.comATTENDEE;CN="Bernard Desruisseaux";CUTYPE=INDIVIDUAL;PARTSTAT= DECLINED;ROLE=REQ-PARTICIPANT;RSVP=TRUE:mailto:bernard@exampl e.netEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>      <t>        Bernard's deletion of a recurrence instance will cause his        server to deliver a scheduling message to Cyrus.        Cyrus's client will find the following reply message        from Bernard in Cyrus's scheduling Inbox collection:      </t>      <figure>        <preamble>&gt;&gt; Request &lt;&lt;</preamble>        <artwork><![CDATA[GET /home/cyrus/calendars/inbox/6504923FD3AD.ics HTTP/1.1Host: cal.example.com        ]]></artwork>      </figure>      <figure>        <preamble>&gt;&gt; Response &lt;&lt;</preamble>        <artwork><![CDATA[HTTP/1.1 200 OKDate: Tue, 02 Jun 2009 18:52:58 GMTLast-Modified: Tue, 02 Jun 2009 18:52:58 GMTETag: "eb897deabc8939589da116714bc99265"Content-Type: text/calendar; charset="utf-8"Content-Length: xxxxBEGIN:VCALENDARVERSION:2.0PRODID:-//Example Corp.//CalDAV Client//ENMETHOD:REPLYBEGIN:VTIMEZONETZID:America/MontrealBEGIN:STANDARDDTSTART:20071104T020000RRULE:FREQ=YEARLY;BYMONTH=11;BYDAY=1SUTZNAME:ESTTZOFFSETFROM:-0400TZOFFSETTO:-0500END:STANDARDBEGIN:DAYLIGHTDTSTART:20070311T020000RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=2SUTZNAME:EDTTZOFFSETFROM:-0500TZOFFSETTO:-0400END:DAYLIGHTEND:VTIMEZONEBEGIN:VEVENTUID:9263504FD3ADSEQUENCE:0DTSTAMP:20090603T183823ZRECURRENCE-ID;TZID=America/Montreal:20090603T150000DTSTART;TZID=America/Montreal:20090603T150000DTEND;TZID=America/Montreal:20090603T160000SUMMARY:Review Internet-DraftORGANIZER;CN="Cyrus Daboo":mailto:cyrus@example.comATTENDEE;CN="Bernard Desruisseaux";PARTSTAT=DECLINED: mailto:bernard@example.netREQUEST-STATUS:2.0;SuccessEND:VEVENTEND:VCALENDAR        ]]></artwork>      </figure>    </section>  </section>  <section title="Changes (to be removed by RFC Editor prior to publication)">      <section title="Changes in -10">    <t>      <list style="letters">        <t>          Updated to RFC 6047 reference.       	</t>        <t>          Various minor clarifications to behavior and terminology done.       	</t>        <t>          Clarified that Inbox/Outbox are the server's responsibility to create.       	</t>        <t>          Changed MAY to SHOULD for server rejecting organizer PARTSTAT changes of attendees.       	</t>        <t>          Allow COMPLETED as a valid attendee change.       	</t>        <t>          Allow SCHEDULE-STATUS as a valid attendee change on SCHEDULE-AGENT=CLIENT attendee properties.       	</t>       	<t>       	  COPY or MOVE on a calendar collection now declared to be undefined.       	</t>       	<t>       	  Changed pre-condition error codes from 409 to 403.       	</t>       	<t>       	  Clarified that rules 5546 must be used when server processes incoming scheduling messages.       	</t>       	<t>       	  default-calendar-delete-allowed -> default-calendar-needed.       	</t>       	<t>       	  Clarified that SCHEDULE-AGENT must be the same on all matching properties.       	</t>       	<t>       	  Added more text justifying the need for calendar-user-type property.       	</t>       </list>    </t>    </section>  <section title="Changes in -09">    <t>      <list style="letters">        <t>          Fixed some examples.        </t>        <t>          Tweaked XML conventions.        </t>        <t>          Removed description in SCHEDULE-STATUS example values.        </t>        <t>          Tweaked 3.7 and 3.8 SCHEDULE-STATUS description to indicate it applies to the Organizer as well as Attendee.        </t>        <t>          Updated to RFC 5545 reference.        </t>        <t>        	AD Review: clarified text about inbox resource deletion being acknowledgment of change.        </t>        <t>        	AD Review: clarified description of freebusy Outbox POST.        </t>        <t>        	AD Review: registered new 1.xx request-status codes and added new restriction on usage as per iTIP.        </t>        <t>        	AD Review: changes SHOULD NOT to MUST NOT for new property parameters when clients send scheduling messages.        </t>        <t>        	AD Review: CALDAV:schedule-calendar-transp now preserved during COPY.        </t>        <t>        	AD Review: changed CALDAV- to CALDAV: in acl descriptions.        </t>        <t>        	AD Review: fixed various minor typos.        </t>        <t>        	AD Review: Added text to new principal properties to indicate that if they are not present, then the user is not enabled for the various scheduling operations.        </t>        <t>        	AD Review: clarified use of CALDAV:calendar-data element in CALDAV:response element.        </t>        <t>        	AD Review: made reference to 5545 IANA registry procedures for the two new element registries.        </t>        <t>        	AD Review: Fixed description of B5. example.        </t>        <t>        	Fixed SCHEDULE-AGENT/SCHEDULE-STATUS behavior for Attendee replies.       	</t>       </list>    </t>    </section>    <section title="Changes in -08">    <t>      <list style="letters">        <t>          Added "Updates 4791".        </t>        <t>          XML conventions changed to match that in CardDAV spec.        </t>        <t>          Reworded child response behavior for Outbox.        </t>        <t>          Reworded "octet size".        </t>        <t>          If-Schedule-Match descriptions changed to remove implication that it is purely a conditional operation.        </t>        <t>          Schedule-Reply header descriptions generalized to resource removal rather than just HTTP DELETE.        </t>        <t>          Fixed various examples.        </t>       </list>    </t>    </section>    <section title="Changes in -07">    <t>      <list style="letters">        <t>          Restructured document.        </t>        <t>          Clarified that CALDAV:schedule-calendar-transp only          applies to calendar collection.        </t>        <t>          Removed CALDAV:schedule-state property on scheduling          messages in the scheduling Inbox collection.        </t>        <t>          Added conditional requests on scheduling object resources.        </t>        <t>          Added section on handling of PARTSTAT.        </t>        <t>          Added SCHEDULE-FORCE-SEND iCalendar property parameter.        </t>        <t>          Added clarification on child resources in scheduling Outbox          collections.        </t>        <t>          Clarified Attendee changes that server MUST allow, and          removed restrictions on changes that Attendee MUST NOT do.        </t>        <t>          Added Example Scheduling Transactions appendix.        </t>        <t>          Scheduling privileges are no longer required to be          non-abstract.        </t>        <t>          Removed handling of REFRESH requests.        </t>        <t>          Removed handling of VJOURNAL components.        </t>        <t>          Completed IANA Considerations section.        </t>        <t>          Added references to RFC3283 and RFC5234.        </t>        <t>          Updated references to iCalendar, iTIP and iMIP.        </t>      </list>    </t>    </section>    <section title="Changes in -06">      <t>        <list style="letters">          <t>            Removed distinction between scheduling calendar collections            and basic calendar collections - now just have calendar            collections.          </t>          <t>            Clients now "MAY" reload data rather than "SHOULD" reload            data.          </t>          <t>            Fixed &lt;C:recipient&gt; in examples.          </t>          <t>            Removed CALDAV:attachments-allowed precondition on POST to            Outbox as that is no longer relevant.          </t>          <t>            Added CALDAV:default-calendar-delete-allowed precondition            for DELETE.          </t>          <t>            Relaxed MUST->MAY for Organizer setting PARTSTAT value.          </t>          <t>            Tweaked restrictions on Create/Modify to emphasize that 4791            restrictions also apply.          </t>          <t>            Added comment that 'opaque' is the default when the            CALDAV:schedule-calendar-transp property is not present.          </t>          <t>            Description of Schedule-Reply header changed to reflect that            it is only relevant for Attendees.          </t>          <t>            Minor typos fixed.          </t>        </list>      </t>    </section>    <section title="Changes in -05">      <t>        This draft has changed substantially since the -04 version. The        primary reason for this change was implementation experience from        a number of vendors who implemented products based on the earlier        drafts. Experience showed that the client/server interaction was        not reliable in keeping scheduling messages synchronized between        organizer and attendees. In addition the latency in updates due        to clients being offline proved unacceptable to users. These        issues led to the redesign of this specification to support a        server-based processing model that eliminates all the problems        seen previously. Whilst this adds significant complexity to the        server in that it needs to be a full blown iTIP processing agent,        it does remove a lot of the same complexity from clients, opening        up the possibility of supporting complex scheduling behaviors        even with "thin" clients.      </t>      <t>        In the judgement of the authors, we consider this new specification        to be a substantial improvement over the old one and believe        it represents a stronger protocol that will lead to better        interoperability.      </t>    </section>  </section></back></rfc>