<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC5213 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5213.xml">
<!ENTITY RFC6275 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6275.xml">
<!ENTITY RFC3963 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3963.xml">
<!ENTITY RFC4140 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4140.xml">
<!ENTITY RFC3775 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3775.xml">
<!ENTITY RFC3588 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3588.xml">
<!ENTITY RFC5779 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5779.xml">

<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ma-dmm-romip-00.txt" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values:full2026, noDerivativeWorks2026,  none full3667, noModification3667, noDerivatives3667, full3978, noModification3978, noDerivatives3978,  
trust200811,noModificationTrust200811, noDerivativesTrust200811, trust200902, noModificationTrust200902, noDerivativesTrust200902, pre5378Trust200902
you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)"  -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="A RO solution support for DMM">A Route Optimization solution support for Distributed Mobility Management</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Zhengming Ma"  
            surname="Zhengming Ma">
      <organization>SUN YAT-SEN UNIVERSITY</organization>

      <address>
        <postal>
 
          <street>Department of Electronics and Engineering,daxuecheng,210</street>

          <!-- Reorder these if your country does things differently -->

          <city>Zhongshan University,Guangzhou</city>

         <region></region>

          <code>510006</code>

          <country> P.R. China</country>
        </postal>

       

        <email>issmzm@mail.sysu.edu.cn </email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>
<author fullname="Xun Zhang"  
            surname="Xun Zhang">
      <organization>SUN YAT-SEN UNIVERSITY</organization>

      <address>
        <postal>
       
          <street>Department of Electronics and Engineering,daxuecheng,210</street>

          <!-- Reorder these if your country does things differently -->

          <city>Zhongshan University,Guangzhou</city>

             <region></region>

          <code>510006</code>

          <country>P.R. China</country>
        </postal>

         <email>zhangxunkuaile@yeah.net</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date month="February" year="2012" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Distributed Mobility Management(dmm)</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>DMM</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>

	<t>The mobile users and their traffic demands are expected to be ever-increasing in future years, and this growth will impose a limitation for deploying current mobility management schemes that are intrinsically centralized, e.g., Mobile IPv6 and Proxy MIPv6. This evolution in user traffic demand can be tackled by a different approach for IP mobility, called Distributed Mobility Management, which is focusing on moving the mobility anchors from the core network and pushing them closer to the users, at the edge of the network. Following this idea, in our proposal, the central anchor is being deployed in the access router of the mobile node(MN). That is, the first elements that provide IP connectivity to a set of MNs are also the mobility managers for those MNs. In the following, we will call MAAR (Mobility anchor and Access Router).</t>
    
	<t>This draft strictly abides by the three principles:</t>
	<t>(1) The MN doesn't participate in any mobility-related signaling.MAAR and AAA are responsible for managing IP mobility on behalf of the host.</t>
	<t>(2) The MN's movement is transparent to the communication node (CN).The Home Address (HoA) and Care-of address (CoA) are not for users but for specific sessions in this draft.A MN initiates a session by using the MN's address assigned by a MAAR which the MN is registered as the HoA for this session.The MN's address assigned by a new MAAR which the MN moves to its access link as the CoA for the session.</t>
	<t>(3) The MN can directly forward packages to the CN and the packages don't need to pass the home mobility anchor. It can reduce the heavy burdens on home mobility anchor and maintain all the continuity of the conversation.</t>

    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Mobile IPv6 [RFC6275] requires client functionality in the IPv6 stack of a mobile node. Exchange of signaling messages between the mobile node and home agent enables the creation and maintenance of a binding between the mobile node's home address and its care-of address. Mobility as specified in requires the IP host to send IP mobility management signaling messages to the home agent, which is located in the network.</t>
	  
      <t>Proxy Mobile IPv6 [RFC5213] is a network-based mobility to solving the IP mobility challenge. It is possible to support mobility for IPv6 nodes without host involvement by extending Mobile IPv6 signaling messages between a network node and a home agent. In order to facilitate such network-based mobility, the PMIPv6 protocol defines a Mobile Access Gateway (MAG), which acts as a proxy for the Mobile IPv6 signaling, and the Local Mobility Anchor (LMA) which acts similar to a Home Agent. The LMA and the MAG establish a bidirectional tunnel for forwarding all data traffic belonging to the Mobile Nodes.</t>
	
	  <t>Both the Mobile IPv6 and Proxy Mobile IPv6 offer mobility support at the cost of handling operations at a cardinal point, the mobility anchor, and burdening it with data forwarding and control mechanisms for a great amount of users. As stated in [I-D.chan-distributed-mobility-ps], centralized mobility solutions are prone to several problems and limitations: longer (sub-optimal) routing paths, scalability problems, signaling overhead (and most likely a longer associated handover latency), more complex network deployment, higher vulnerability due to the existence of a potential single point of failure, and lack of granularity on the mobility management service (i.e., mobility is offered on a per-node basis, not being possible to define finer granularity policies, as for example per-application).</t>
	
	<t>In the paper "A Network-based Localized Mobility Solution for Distributed Mobility Management" [Net-basedDMM], the authors describe two approaches: one is fully distributed approach and another is partially distributed approach. The main issue in the first one is how a Mobility Anchor and Access Router (MAAR) can differentiate between the first attachment to the network and subsequent handovers.</t>
	
	<t>This document describes MAAR and AAA supporting for managing IP mobility on behalf of the host. This solution not only can settle the issue that mobility entities can differentiate between the first attachment to the network and subsequent handovers, but also reduce the heavy burdens on home mobility anchor. The MN can directly forward packages to the CN. The packages don't need to pass the home mobility anchor. This document strictly abides by the two principles. The first one is that the MN's movement is transparent to CN. Another one is the MN doesn't participate in any mobility-related signaling.</t>

    </section>

   <section title="Conventions used in this document">
       <section title="Requirements">
       <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT","SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].</t>
       </section>

       <section title="Terminology">
       <t>The document also uses the terminology define in [RFC6275].The following terminology is also used:</t>

       <t>MAAR (Mobility anchor and Access Router).  First hop routers where the mobile nodes attach to. They can play the role of mobility managers for the IPv6 prefixes they anchor, or can for the IPv6 addresses they anchor. In this draft, MAAR assigns the IPv6 address for each currently registered MN. So that MAAR can performs mobility management on behalf of a mobile node. Every MAAR is responsible for detecting the mobile node's movements to and from the access link and for initiating binding registrations.</t>

       <t>AAA (Authentication, Authorization and Accounting ).  AAA server records the user's static and dynamic information. The dynamic information includes the address information of MAAR which the MN is registered right now.</t>
    
       <t>DBU/DBA (Distributed BU/BA).  A MAAR sends the DBU/DBA message to another MAAR for establishing or updating corresponding binding list. In this draft, we have two kinds of the DBU/DBA message. One is the sDBU/sDBA message and another is the dDBU/dDBA message.</t>

       <t> sDBU/sDBA.  The MAAR attached by the MN currently to sends a sDBU message to the MAAR attached by MN before the MN's movement. After that, the MAAR attached by MN currently receives a sDBA message including the address of CN's MAAR which the CN is currently attached to. After that, the MAAR attached by the MN currently updates its internal binding list.</t>

       <t>dDBU/dDBA.  The MAAR attached by the MN currently sends a dDBU message to the MAAR attached by CN for refreshing the internal binding list of the CN's MAAR which the CN is currently attached to. After receiving the dDBU message, the CN's MAAR replies a dDBA message to the MN's MAAR.</t>

       </section>
 </section>

<section title="MAAR Operation">
<t>In this draft, the packages sent by the MN or the CN don't need to go by the home mobility anchor. In this solution, both of MN and CN move to the MAARs' access links and get the corresponding addresses assigned by corresponding MAARs. For example, a user A (this user A can be thought as a MN) attaches to the A_MAAR1's access link, and establishes the first communication with a user B (this user B can be thought as a CN). At same time, the user B attaches to the B_MAAR1's access link. After that, both the user A and B move and respectively attach to the A_MAAR2's access link and the B_MAAR2's access link. In this solution, the packages sent by the MN or the CN don't need to pass the A_MAAR1 and the B_MAAR1.This section describes the operational details.</t>

   <section title="Operation between MAAR and AAA">
   <t>MAAR MUST send a diameter request message to the AAA when detects the MN's movement to its access link. After receiving the message, the AAA checks the dynamic information by using the MN's ID. If the AAA finds the address information of the MAAR which attached by the MN before its movement, then the AAA sends a diameter response message with the address of the MAAR attached by the MN before its movement. If the AAA can't find this information, then the MAAR receives the diameter response message with the zero address. After that, the MAAR will differentiate between the first attachment to the network and subsequent handovers. Sending out the diameter response message, the AAA MUST update the dynamic information including the address information of MAAR which the MN is currently attached to.</t>
   </section>

   <section title="The assumptions about a session">
   <t>The Home Address (HoA) and Care-of address (CoA) is not for users but also for specific sessions. For a user initiating a session or accepting a session, no matter how it moves, the HoA for the session is unchanged, while the CoA for the session is changed.</t>

   <t>The MN (the user A) initiates a session with the CN (the user B) by using the address (A_HoA1) assigned by A_MAAR1 which the user A is registered as the HoA for the session. The user B accepts this session by using the address (B_HoA1) assigned by B_MAAR1 which the user B is registered as the HoA for this session.</t>

   <t>When the user A moves from its current access link, it associates to a new MAAR (A_MAAR2) which delegates another IPv6 address (A_HoA2). The A_HoA2 can be both thought as a CoA of the user A and a CoA of the session. If the user A sends packages to the user B, the source address must be A_HoA1, and the destination address must be B_HoA1.The user A can initiate a new session with a new CN (for example a user C) by using A_HoA2 which the user A can be registered as the HoA for the new session. If the user A sends packages to the user C, the source address must be A_HoA2.</t>

   <t>When the user B moves from its current access link, it associates to a new MAAR (B_MAAR2) which delegates another IPv6 address (B_HoA2). The B_HoA2 can be both thought as a CoA of the user B and a CoA of the session. If the user B sends packages to the user A, the source address must be B_HoA1, and the destination address must be A_HoA1.The user B can initiate a new session with a new MN (for example a user D) by using the B_HoA2 which the user B can be registered as the HoA for the new session. If the user B sends packages to the user D, the source address must be B_HoA2.</t>
   
   </section>

   <section title="Binding list in MAAR">
   <t>Every MAAR must maintain two binding lists for each currently registered mobile node. One is the internal binding list, and another is the external binding list. The first one maintains a binding of CN's HoA and the address of CN's MAAR. The CN's HoA is the address which the CN accepting the session and registering as the HoA of the session. The second one maintains a binding of MN's HoA and MN's CoA. The MN's HoA is the address which the MN initiating the session and registering as the HoA of the session. The MN's CoA is assigned by the MAAR which the MN is currently attached to. The external binding list is used to transmit packets to MN. The internal binding list is used to transmit packets from MN.</t>

   <t>For example, the A_MAAR2 of the user A stores two binding lists. One is the internal binding list, and another is the external binding list. The first list stores a binding of B_HoA1 and the address of the MAAR attached by the user B currently. The second one stores a binding of A_HoA1 and A_HoA2.The B_MAAR2 of the user B stores two binding lists. One is the internal binding list, and another is the external binding list. The first list stores a binding of A_HoA1 and the address of the MAAR which the user A is currently attached to. The second one stores a binding of B_HoA1 and B_HoA2.</t>
   </section>

   <section title="Operation between MAARs">
   <t>If the MAAR which the MN is currently attached to learns that the MN is the handover attachment, the MAAR will send a sDBU message to the MAAR attached by the MN before its movement. The address information of the MAAR attached by the MN before its movement is included in the diameter response message. At this time, the MAAR attached by the MN before its movement has two binding lists. One is the internal binding list, and another is the external binding list. After receiving the sDBU message, the MAAR searches the internal binding list by using the CN's HoA and gets the address of the MAAR which the CN is currently attached to. After that, the MAAR attached by the MN before its movement will send a sDBA message including the MN's HoA, the CN's HoA and the address of the MAAR which the CN is currently attached to.</t>

   <t>If the MAAR which the MN is currently attached to receives the sDBA message, the MAAR sends a dDBU message to the MAAR attached by the CN currently including the address of the MAAR attached by the MN currently. After receiving the dDBU message, the MAAR attached by the CN currently refreshes the internal binding list. The MN's MAAR and the CN's MAAR establish a bidirectional tunnel for forwarding all data traffic belonging to the MN.</t>
   </section>
</section>

<section title="Description of the solution">
<t>The purpose of Distributed Mobility Management approaches is to overcome the limitations of the traditional centralized mobility management by bringing the mobility anchor closer to the MN. Following this idea, in our proposal, the central anchor is moved to the edge of the network, being deployed in the access router of the mobile node. That is, the first elements that provide IP connectivity to a set of MNs are also the mobility managers for those MNs. In the following, we will call MAAR (Mobility anchor and Access Router).</t>

  <t>Upon the user A attaches to a MAAR, say A_MAAR1, the user A establishes the first communication with the user B. At the same time, the user B attaches to a MAAR, say B_MAAR1.After that, the user A moves from its current access and is now attached to A_MAAR2. The user B moves from its current access and is now attached to B_MAAR2.A_HoA1 is the address of the user A assigned by A_MAAR1. A_HoA2 is the address of the user A assigned by A_MAAR2. B_HoA1 is the address of the user B assigned by B_MAAR1. B_HoA2 is the address of the user B assigned by B_MAAR2.When the user A moves from its current access, it associates to A_MAAR3 which delegates another IPv6 address (A_HoA3). Figure 1 illustrates this scenario.</t>
   <figure align="center">
    
        <artwork align="left"><![CDATA[
+----------+  +----------+ +-------+  +-------+   +-------+     +-----+
|The user A|  |The user B| |A_MAAR2|  |B_MAAR2|   |A_MAAR3|     | AAA |
+----------+  +----------+ +-------+  +-------+   +-------+     +-----+
     |             |           |          |           |             |
     |--------------1.RS(A_HoA1,B_HoA1)-------------->|             |
     |             |           |          |           |-2.request-->|
     |             |           |          |           |<-3.response-|
     |<-------------------4.RA(A_HoA3) ---------------|             |
     |             |           |          |           |             |
     |             |           |<-------5.sDBU -------|             |
     |             |           |------6. sDBA ------->|             |
     |             |           |          |<-7.dDBU --|             |
     |             |           |          |--8.dDBA ->|             |
     |             |           |          |           |             |

            ]]></artwork>

        <postamble>Figure 1:Signaling of MN handover
		</postamble>
      </figure>
    
      <t>(1)	The user A sends a RS message to A_MAAR3 including A_HoA1 and B_HoA1;</t>
      <t>(2)	A_MAAR3 sends a diameter request message to the AAA. </t>
	  <t>(3)	The AAA searches the dynamic information by using the ID of the user A for getting the address of A_MAAR2. Then the AAA sends a diameter response message including the address of A_MAAR2, and updates the dynamic information of the user A including the address information of A_MAAR3 at same time.</t>
	  <t>(4)	A_MAAR3 delegates another IPv6 address (A_HoA3) to the user A. At the same time, A_MAAR3 establishes and maintains the external binding list which stores a binding of A_HoA1 and A_HoA3.Then A_MAAR3 sends a RA message to the user A including A_HoA3;</t>
	  <t>(5)	A_MAAR3 sends a sDBU message to A_MAAR2 including B_HoA1;</t>
	  <t>(6)	Now A_MAAR2 has two binding lists. One is the internal binding list, and another is the external binding list. The first one maintains a binding of B_HoA1 and the address of B_MAAR2.The second one maintains a binding of A_HoA1 and A_HoA2. After receiving the sDBU message, A_MAAR2 searches the internal binding list by using the B_HoA1 for getting the address of B_MAAR2.Then A_MAAR2 sends a sDBA message including B_HoA1 and the address of B_MAAR2.After that, A_MAAR2 releases this two binding lists;</t>
	  <t>(7)	After receiving the sDBA message, A_MAAR3 establishes and maintains the internal binding list which maintains a binding of B_HoA1 and the address of B_MAAR2. Then A_MAAR3 sends a dDBU message to B_MAAR2 including the address of A_MAAR3 and A_HoA1;</t>
	  <t>(8)	After receiving the dDBU message, B_MAAR2 replies a dDBA message and updates the internal binding list which maintains a binding of A_HoA1 and the address of A_MAAR2.After that, this list maintains a binding of A_HoA1 and the address of A_MAAR3.</t>
	  
</section>


<section title="Forwarding Considerations">
   <section title="Forwarding Packets Sent by the Mobile Node">
   <t>After receiving the packages sent by the MN, the MAAR will search the internal binding list by using the destination address of the packages for getting the address of the MAAR which the CN is currently attached to. Then, the MAAR encapsulates the packages and routes the packages to the corresponding MAAR attached by the CN currently.</t>

	<t>After receiving the packages, the corresponding MAAR will do three things. Firstly, the corresponding MAAR will remove the tunnel head. Secondly, the corresponding MAAR will check whether the destination address of the packages is assigned by this corresponding MAAR or not. If the destination address of the packages is assigned by this corresponding MAAR, the corresponding MAAR will route the packages to the corresponding CN directly. If the destination address of the packages is not assigned by this corresponding MAAR, the corresponding MAAR will search the external binding list by using the destination address of the packages for getting the CoA of the corresponding CN. Finally, the corresponding MAAR will route the packages to the corresponding CN. Figure 2 illustrates the transmission of data packets.</t>

     <figure align="center">
    
        <artwork align="left"><![CDATA[
   ________                          ________ 
  |The user|                        |The user| 
  |   B    |----------move--------->|   B    |
  |________|                        |________|
                                       #  *  
				       #  *
				       #  *
   +-------+                       +-------+
   |       |                       |       |
   |B_MAAR1|                       |B_MAAR2|
   |       |                     / |       |
   +-------+                    /  +-------+
                               /  #  /| * |
                              /  #  / | * |
                             /  #  /  | * |
		            /  #  /   | * |
	                   /  #  /    | * |
                          /  #  /     | * |
 +-------+        +-------+ #  /    +-------+
 |       |        |       |   /     |       |
 |A_MAAR1|        |A_MAAR2|  /      |A_MAAR3|
 |       |        |       |         |       |
 +-------+        +-------+         +-------+
                     #                   * 
                     #                   * 
                     #                   *
 ________         ________             ________
|The user|       |The user|           |The user|
|   A    |-move->|   A    |---move--->|   A    |
|________|       |________|           |________|

            ]]></artwork>

        <postamble>Figure 2:The transmission of data packets
		</postamble>
      </figure>


	<t>Upon the user A attaches to a MAAR, say A_MAAR1, the user A establishes the first communication with the user B. At the same time, the user B attaches to a MAAR, say B_MAAR1.After that, the user A moves from its current access and is now attached to A_MAAR2. The user B moves from its current access and is now attached to B_MAAR2.A_HoA1 is the address of the user A assigned by A_MAAR1. A_HoA2 is the address of the user A assigned by A_MAAR2. B_HoA1 is the address of the user B assigned by B_MAAR1. B_HoA2 is the address of the user B assigned by B_MAAR2.When the MN moves from its current access link, it associates to A_MAAR3 which delegates another IPv6 address (A_HoA3).</t>

	<t>At this time, the A_MAAR3 of the user A stores two binding lists. One is the internal binding list, and another is the external binding list. The first list maintains a binding of B_HoA1 and the address of B_MAAR2. The second one maintains a binding of A_HoA1 and A_HoA3. The B_MAAR2 of the user B stores two binding lists. One is the internal binding list, and another is the external binding list. The first list maintains a binding of A_HoA1 and the address of A_MAAR3. The second one maintains a binding of B_HoA1 and B_HoA2.</t>

	<t>If the user A sends the packages to the user B, the destination address of the packages must be B_HoA1, and the source address of the packages must be A_HoA1. A_MAAR3 receives the packages and then searches the internal binding list by using the destination address of the packages (B_HoA1) for getting the address of B_MAAR2. Then A_MAAR3 encapsulates the packages and routes to B_MAAR2. The source address of the tunnel header is the address of A_MAAR3, and the destination address is the address of B_MAAR2.The format of the tunneled packet is shown below:</t>

	<t>IPv6 header (src= A_MAAR3's address, dst= B_MAAR2's address) /* Tunnel Header */</t>
	<t>IPv6 header (src= A_HoA1, dst= B_ HoA1 ) /* Packet Header */</t>
	<t>Upper layer protocols /* Packet Content*/</t>

	<t>After receiving the packages, B_MAAR2 removes the tunnel head and find the destination address of the packages (B_HoA1) is not assigned by B_MAAR2.Then B_MAAR2 searches the external binding list by using the destination address of the packages (B_HoA1) for getting the CoA of the user B. Finally, B_MAAR2 gets a binding of B_HoA1 and B_HoA2 and routes the packages to the user B.</t>
    </section>

    <section title="Forwarding Packets to the Mobile Node">
    <t>After receiving the packages sent by the CN, the MAAR attached by the CN will search the internal binding list by using the destination address of the packages for getting the address of the MAAR which the MN is currently attached to. Then, the MAAR encapsulates the packages and routes the packages to the corresponding MAAR which the MN is currently attached to.</t>

	<t>After receiving the packages, the corresponding MAAR will do three things. Firstly, the corresponding MAAR will remove the tunnel head. Secondly, the corresponding MAAR will check whether the destination address of the packages is assigned by this corresponding MAAR or not. If the destination address of the packages is assigned by this corresponding MAAR, the corresponding MAAR will route the packages to the corresponding MN directly. If the destination address of the packages is not assigned by this corresponding MAAR, the corresponding MAAR will search the external binding list by using the destination address of the packages for getting the CoA of the corresponding MN. Finally, the corresponding MAAR will route the packages to the corresponding MN.</t>

	<t>As shown in figure 2, if the user B sends the packages to the user A, the destination address of the packages must be A_HoA1, and the source address of the packages must be B_HoA1.B_MAAR2 receives the packages and then searches the internal binding list by using the destination address of the packages (A_HoA1) for getting the address of A_MAAR3. Then B_MAAR2 encapsulates the packages and routes to A_MAAR3. The source address of the tunnel header is the address of B_MAAR2, and the destination address is the address of A_MAAR3.The format of the tunneled packet is shown below:</t>

	<t>IPv6 header (src= B_MAAR2's address, dst= A_MAAR3's address) /* Tunnel Header */</t>
	<t>IPv6 header (src= B_HoA1, dst= A_ HoA1 ) /* Packet Header */</t>
	<t>Upper layer protocols /* Packet Content*/</t>
	<t>After receiving the packages, A_MAAR3 removes the tunnel head and find the destination address of the packages (A_HoA1) is not assigned by A_MAAR3. Then A_MAAR3 searches the external binding list by using the destination address of the packages (A_HoA1) for getting the CoA of the user A. Finally, A_MAAR3 gets a binding of A_HoA1 and A_HoA3 and routes the packages to the user A.</t>
	</section>

</section>

<section title="Message Formats">
<t>This section defines extensions to the Mobile IPv6 [RFC6275] protocol messages.</t>
   <section title="sDBU">
   <figure align="center" >
    
        <artwork align="left"><![CDATA[
    0               1               2               3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                   |            Sequence #         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |A|H|L|K|M|R|D|E|  Reserved     |            Lifetime           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                       Mobility Options                        |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

            ]]></artwork>

        <postamble> Figure 3:sDBU 
		</postamble>
      </figure>

    <t>A Binding Update message that is sent by the MAAR attached by MN currently to the MAAR attached by MN before the MN's movement is referred to as the "sDBU" message. A new flag D and E are included in the Binding Update message. The rest of the Binding Update message format remains the same as defined in [RFC6275] and with the additional (R) and (M) flags, as specified in [RFC3963] and [RFC4140], respectively.</t>

    <t>Distributed Flag (D)</t>

    <t>If the D is set to 0, this message is the BU message in the [RFC6275]. If the D is set to the value 1, this message is the Distributed Binding Update message (DBU).The flag MUST be set to the value of 1 in the draft.</t>

    <t>A new Flag (E)</t>
    <t>If the E is set to 0, this DBU message is the sDBU message. This flag MUST be set to 0.</t>
    <t>Mobility Options</t>
    <t>The sDBU message is sent by the MAAR attached by the user A currently to the MAAR attached by the user A before its movement including the ID of the user A, A_HoA1 and B_HoA1.</t>
    </section>

    <section title="sDBA">
    <figure align="center">
    
        <artwork align="left"><![CDATA[
    0               1               2               3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                   |    Status     |K|R|D|E|Reserved| 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |        Sequence #             |            Lifetime           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                       Mobility Options                        |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

            ]]></artwork>

        <postamble> Figure 4:sDBA 
		</postamble>
      </figure>

      <t>A Binding Acknowledgement message that is sent by the MAAR attached by MN before the MN's movement to the MAAR attached by MN currently is referred to as the "sDBA" message. A new flag D and E are included in the Binding Acknowledgement message. The rest of the Binding Acknowledgement message format remains the same as defined in [RFC6275] and with the additional (R) as specified in [RFC3963].</t>

      <t>Distributed Flag (D)</t>
      <t>If the D is set to 0, this message is the BA message in the [RFC6275]. If the D is set to the value 1, this message is the Distributed Binding Acknowledgement message (DBA).The flag MUST be set to the value of 1 in the draft.</t>

	  <t>A new Flag (E)</t>
	  <t>If the E is set to 0, this DBA message is the sDBA message. This flag MUST be set to 0.</t>

	  <t>Mobility Options</t>
	  <t>The sDBA message is sent by the MAAR attached by the user A before its movement to the MAAR attached by the user A currently including A_HoA1,B_HoA1 and the address of the MAAR attached by the user B currently.</t>
      </section>

      <section title="dDBU">
<figure align="center" >
    
        <artwork align="left"><![CDATA[
    0               1               2               3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                   |            Sequence #         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |A|H|L|K|M|R|D|E|  Reserved     |            Lifetime           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                       Mobility Options                        |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

            ]]></artwork>

        <postamble> Figure 5:dDBU 
		</postamble>
      </figure>

     <t>A Binding Update message that is sent by the MN's MAAR attached by the MN currently to the CN's MAAR which the CN is currently attached to is referred to as the "dDBU" message. A new flag D and E are included in the Binding Update message. The rest of the Binding Update message format remains the same as defined in [RFC6275] and with the additional (R) and (M) flags, as specified in [RFC3963] and [RFC4140], respectively.</t>
     <t>Distributed Flag (D)</t>
     <t>If the D is set to 0, this message is the BU message in the [RFC6275]. If the D is set to the value 1, this message is the Distributed Binding Update message (DBU).The flag MUST be set to the value of 1 in the draft.</t>

	 <t>A new Flag (E)</t>
	 <t>If the E is set to the value of 1, this DBU message is the dDBU message. This flag MUST be set to the value of 1.</t>

	 <t>Mobility Options</t>
	 <t>The dDBU message is sent by the MAAR attached by the user A currently to the MAAR which the user B is currently attached to including A_HoA1 and the address of the MAAR currently attached by the user A.</t>
	 </section>

     <section title="dDBA">
<figure align="center" >
    
        <artwork align="left"><![CDATA[
    0               1               2               3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
                                   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                   |    Status     |K|R|D|E|Reserved| 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |        Sequence #             |            Lifetime           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                                                               |
   |                       Mobility Options                        |
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

            ]]></artwork>

        <postamble> Figure 6:dDBA 
		</postamble>
      </figure>

    <t>A Binding Acknowledgement message that is sent by the CN's MAAR currently attached by the CN to the MN's MAAR which the MN is currently attached to is referred to as the "dDBA" message. A new flag D and E are included in the Binding Acknowledgement message. The rest of the Binding Acknowledgement message format remains the same as defined in [RFC6275] and with the additional (R) as specified in [RFC3963].</t>

    <t>Distributed Flag (D)</t>
    <t>If the D is set to 0, this message is the BA message in the [RFC6275]. If the D is set to the value 1, this message is the Distributed Binding Acknowledgement message (DBA).The flag MUST be set to the value of 1 in the draft.</t>

    <t>A new Flag (E)</t>
    <t>If the E is set to the value of 1, this DBA message is the dDBA message. This flag MUST be set to the value of 1.</t>

	<t>Mobility Options</t>
	<t>The dDBA message is sent by the MAAR currently attached by the user B to the MAAR which the user A is currently attached to including A_HoA1 and B_HoA1.</t>
    </section>

</section>

<section title="IANA Considerations">
     <t>TBD.</t>
</section>

<section title="Security Considerations">
<t>TBD.</t>
</section>
  
</middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
<!-- Here we use entities that we defined at the beginning. -->
     &RFC2119;
    &RFC5213;
 &RFC6275;
 &RFC3963;
 &RFC4140;
 &RFC3775;

      
    </references>



    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->
      <reference anchor="I-D.chan-distributed-mobility-ps">
        <front>
          <title>Problem statement for distributed and dynamic mobility management</title>

          <author fullname="Chan, A." surname="Chan, A.">
            <organization>Internet draft,
            draft-chan-distributed-mobility-ps-05</organization>
          </author>

          <date month="October " year="2011" />
        </front>
      </reference>

      <reference anchor="Net-basedDMM">
        <front>
          <title>A Network-based Localized Mobility Solution for Distributed Mobility Management</title>

          <author fullname="Giust, F., de la Oliva, A., Bernardos, CJ., and RP. Ferreira Da Costa," surname="Giust, F., de la Oliva, A., Bernardos, CJ., and RP. Ferreira Da Costa">
          </author>

          <date year="2011" />
        </front>
      </reference>

   &RFC3588;
   &RFC5779;

   
 </references>

    
    <!-- Change Log

v00 2006-03-15  EBD   Initial version

v01 2006-04-03  EBD   Moved PI location back to position 1 -
                      v3.1 of XMLmind is better with them at this location.
v02 2007-03-07  AH    removed extraneous nested_list attribute,
                      other minor corrections
v03 2007-03-09  EBD   Added comments on null IANA sections and fixed heading capitalization.
                      Modified comments around figure to reflect non-implementation of
                      figure indent control.  Put in reference using anchor="DOMINATION".
                      Fixed up the date specification comments to reflect current truth.
v04 2007-03-09 AH     Major changes: shortened discussion of PIs,
                      added discussion of rfc include.
v05 2007-03-10 EBD    Added preamble to C program example to tell about ABNF and alternative 
                      images. Removed meta-characters from comments (causes problems).  -->
  </back>
</rfc>
