<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc5226 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
<!ENTITY rfc3547 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3547.xml">
<!ENTITY rfc5234 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml">
<!ENTITY rfc2675 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2675.xml">
<!ENTITY rfc4301 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4301.xml">
<!ENTITY rfc2409 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2409.xml">
<!ENTITY rfc2410 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2410.xml">
<!ENTITY rfc2406 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2406.xml">
<!ENTITY rfc2407 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2407.xml">
<!ENTITY rfc3261 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY rfc3264 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3264.xml">
<!ENTITY rfc3394 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3394.xml">
<!ENTITY rfc4648 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4648.xml">
<!ENTITY rfc3550 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3550.xml">
<!ENTITY rfc3610 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3610.xml">
<!ENTITY rfc3602 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3602.xml">
<!ENTITY rfc3686 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3686.xml">
<!ENTITY rfc3830 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3830.xml">
<!ENTITY rfc3711 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3711.xml">
<!ENTITY rfc4563 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4563.xml">
<!ENTITY rfc4771 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4771.xml">
<!ENTITY rfc4567 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4567.xml">
<!ENTITY rfc4568 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4568.xml">
<!ENTITY rfc5764 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5764.xml">
<!ENTITY rfc4566 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml"><!ENTITY rfc6188 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6188.xml">
<!ENTITY I-D.ietf-tls-rfc4347-bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-tls-rfc4347-bis.xml">
<!ENTITY I-D.mcgrew-aero SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.mcgrew-aero.xml">
<!ENTITY I-D.ietf-avtcore-srtp-aes-gcm SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-avtcore-srtp-aes-gcm.xml">
<!ENTITY I-D.ietf-avtcore-srtp-ekt SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-avtcore-srtp-ekt.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<rfc category="std" docName="draft-mcgrew-srtp-aero-01" ipr="trust200902">
  <front>
    <title abbrev="AERO SRTP">Using Authenticated Encryption with
    Replay prOtection (AERO) in SRTP</title>


    <author fullname="David A. McGrew" initials="D.M." surname="McGrew">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>510 McCarthy Blvd.</street>

          <city>Milpitas</city>

          <region>CA</region>

          <code>95035</code>

          <country>US</country>
        </postal>

        <phone>(408) 525 8651</phone>

        <email>mcgrew@cisco.com</email>

        <uri>http://www.mindspring.com/~dmcgrew/dam.htm</uri>
      </address>
    </author>

    <author fullname="Dan Wing" initials="D." surname="Wing">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>510 McCarthy Blvd.</street>

          <city>Milpitas</city>

          <region>CA</region>

          <code>95035</code>

          <country>US</country>
        </postal>

        <phone>(408) 853 4197</phone>

        <email>dwing@cisco.com</email>
      </address>
    </author>


   <author fullname="John Foley" initials="J.F." surname="Foley">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>   7025-2 Kit Creek Road </street>

          <city>Research Triangle Park</city>

          <region>NC</region>

          <code>14987</code>

          <country>US</country>
        </postal>

        <email>foleyj@cisco.com</email>

      </address>
    </author>

    <date />

    <area>RAI</area>

    <workgroup>AVT Working Group</workgroup>

    <keyword>RTP</keyword>

    <keyword>SRTP</keyword>

    <keyword>AERO</keyword>

    <abstract>
      <t>
	Authenticated Encryption with Replay prOtection (AERO) is a
	cryptographic technique that provides all of the security
	services that are used in the Secure Real-time Transport
	Protocol (SRTP).  This note describes how to use AERO in SRTP.
	AERO has minimal data expansion, avoids the need to manage
	implicit state, and provides strong misuse resistance.  These
	properties make it an ideal cryptographic transform for SRTP,
	as it enables SRTP to easily handle multiple senders sharing
	the same key, multiple receivers with late-joiners in a
	session, decentralized conferences with minimal control, and
	mixers that selectively forward RTP traffic.  RTP
	architectures that utilize AERO can use the normal SSRC
	collision detection mechanism, and can ignore problematic SRTP
	artifacts such as the Roll-Over Counter (ROC) and Initial
	Sequence Number.
      </t>

    </abstract>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>RTP is designed to allow decentralized groups with minimal
      control to establish sessions, such as for multimedia
      conferences. Unfortunately, Secure RTP (<xref
      target="RFC3711">SRTP</xref>) cannot be used in many
      minimal-control scenarios, because it requires that SSRC values
      and other data be coordinated among all of the participants in a
      session.  For example, if a participant joins a session that is
      already in progress, the SRTP Roll-Over Counter (ROC) of each
      SRTP source in the session needs to be provided to that
      participant.</t>

      <t>The inability of SRTP to work in the absence of central
      control was well understood during the design of that protocol;
      that omission was considered less important than optimizations
      such as bandwidth conservation. Additionally, in many situations
      SRTP is used in conjunction with a signaling system that can
      provide much of the central control needed by SRTP. However,
      there are several cases in which conventional signaling systems
      cannot easily provide all of the coordination required. It is
      also desirable to eliminate the layer violations that occur when
      signaling systems coordinate certain SRTP parameters, such as
      SSRC values and ROCs.
      </t>

      <t>
	These issues are due to the particular cryptographic
	techniques used in SRTP, specifically a partially-implicit
	sequence number that is utilized for counter mode encryption,
	for replay protection, and for determining when re-keying
	should occur.  Authenticated Encryption with Replay prOtection
	(AERO)
	<xref target="I-D.mcgrew-aero"/>
	is a cryptographic technique that provides confidentiality,
	authentication, and replay protection; it is a stateful and
	self-synchronizing authenticated encryption method.  It has
	minimal data expansion, avoids the need to manage implicit
	state, and provides strong misuse resistance.  This document
	defines how AERO can be used in SRTP as a replacement for the
	default transforms of <xref target="RFC3711"/> in a way that
	avoids all of the issues identified above.
      </t>


      <t>
	This document is organized as follows.  Packet processing and
	contexts are described in <xref target="normative"/> and <xref
	target="srtcp"></xref>.  A rationale for the design is offered
	in <xref target="rationale"></xref>.  Security Considerations
	are provided in <xref target="sec"></xref>, and IANA
	considerations are provided in <xref target="iana"></xref>.
      </t>

      <section title="Conventions Used In This Document">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
        "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
        "OPTIONAL" in this document are to be interpreted as described
        in <xref target="RFC2119"></xref>.</t>
      </section>

      <section title="History">
	<t>
	  This section describes the evolution of this document
	  as an Internet Draft, and it should be removed
	  by the RFC Editor prior to publication as an RFC.
	</t>
	<t>
	  This is the initial version of this note.  As it uses a
	  cryptographic technique that was published recently, it may
	  evolve over time as that technique is reviewed and
	  experience is gained in its usage.  Thus, while we encourage
	  the implementation of the crypto suites specified in this
	  note as the best way to obtain experience with their use in
	  RTP architectures, we also expect that there may be changes
	  to these crypto suites over time.
	</t>
      </section>

    </section>

    <section anchor="normative" title="SRTP AERO">
      
    <t>
      The Secure Real-time Transport Protocol (SRTP) <xref
      target="RFC3711"/> is a profile of the Real-time Transport
      Protocol (RTP) that can provide confidentiality, message
      authentication, and replay protection to the RTP traffic and to
      the control traffic for RTP, the Real-time Transport Control
      Protocol (RTCP).  SRTP provides a framework for the encryption
      and message authentication of RTP and RTCP streams.  Default
      cryptographic transforms are defined in <xref
      target="RFC3711"/>, while the framework supports the addition of
      new cryptographic transforms.
    </t>

    <t>
      The note describes how to use Authenticated Encryption with
      Replay prOtection (AERO) <xref target="I-D.mcgrew-aero"/> in
      SRTP, which we refer to as SRTP-AERO.  All three security
      services - confidentiality, message authentication, and replay
      protection - are always provided with SRTP-AERO; none of those
      services is optional.  The SRTP framework includes provisions
      for separate encryption and authentication transforms; when AERO
      is used, it is considered an encryption transform and there MUST
      NOT be a separate authentication transform.
    </t>
    <t>
      This description mainly consists of how AERO encryption inputs
      and outputs are mapped to RTP and SRTP packets, respectively,
      how AERO decryption inputs and outputs are mapped to SRTP and
      RTP packets, respectively, and how the AERO context is stored in
      the SRTP context.  A similar description is provided for SRTCP.
      The security considerations are different from those in <xref
      target="RFC3711"/> (and are rather less stringent).
    </t>
    
    <t>
      With SRTP-AERO, the normal RTP SSRC collision detection and repair
      process can be followed.  This is in contrast to SRTP with the
      default transforms, which relies on external mechanisms to
      coordinate SSRC values.
    </t>

      <t>
	AERO is an Authenticated Encryption with Associated Data
	(AEAD) method, and thus SRTP-AERO processing is similar to
	that of <xref target="I-D.ietf-avtcore-srtp-aes-gcm"/>.
      </t>

<!--
      <t>

	<xref
	target="RFC3711"/>, with the following exceptions:
	<list>
	  <t>
	    All processing associated with the Roll-Over Counter (ROC)
	    MAY be omitted, and that value MAY be omitted from the 
	    SRTP context.
	  </t>
	  <t>
	    One and another.  
	  </t>
	</list>
      </t>
      
-->


      <section anchor="srtpenc" title="Encryption">

      <t>
	To protect an RTP packet using AERO, the inputs to the
	encryption operation are as follows:
	<list>
	  <t>
	    The associated data A is set to the RTP header, including
	    the CSRC identifiers (if present), and the RTP header
	    extension (if present).  (In Figure&nbsp;1 of <xref
	    target="RFC3711"/>, this consists of the part of the
	    Authenticated Portion of the packet that does not overlap
	    with the Encrypted Portion.)
	  </t>
	  <t>
	    The plaintext is set to the RTP payload, RTP padding, and
	    RTP pad count.  (In Figure&nbsp;1 of <xref
	    target="RFC3711"/>, this is the Encrypted Portion.)
	  </t>
	  <t>
	    The secret key K is set to the AERO key in the SRTP
	    context.
	  </t>
	</list>
	The ciphertext returned by that operation replaces the
	plaintext in the RTP packet.  Note that the ciphertext will be
	longer than the plaintext.
      </t>
      <t>
	AERO does not include a separate authentication tag, and thus
	this field is omitted from the SRTP packet; it MUST NOT be
	present.  This omission simplifies this specification  
	(see <xref target="rationale"/>).
      </t>

      <t>
	A Master Key Indicator (MKI) field MAY be present after the
	ciphertext; this field is optional in <xref target="RFC3711"/>
	and its usage is unchanged by this specification.
      </t>

      </section>
      
      <section title="Decryption">

      <t>
	To decrypt an SRTP packet using AERO, the inputs to the
	decryption operation are as follows:
	<list>
	  <t>
	    The associated data A is set as in SRTP encryption 
	    <xref target="srtpenc"/>.
	  </t>
	  <t>
	    The ciphertext C is set as follows.  It starts and the end
	    of the RTP header extension, if that field is present.  If
	    it is not, then it starts at the end of the last CSRC
	    identifier, if any CSRC identifiers are present.
	    Otherwise, it starts at the end of the SSRC identifier.
	    If an MKI is in use, then the ciphertext ends at the start
	    of the MKI.  Otherwise, the ciphertext ends at the end of
	    the RTP packet.
	  </t>
	  <t>
	    The secret key K is set to the AERO key in the SRTP
	    context.
	  </t>
	</list>
      </t>
      <t>
	If the decryption operation returns the symbol FAIL, then the
	SRTP packet is either a forgery attempt or a replay, and the
	packet MUST be discarded from further processing and the event
	MAY be logged.  Otherwise, an RTP packet is formed from the
	SRTP packet and the plaintext returned by the decryption
	operation, by replacing the ciphertext with the plaintext, and
	discarding the MKI field if one is present.
      </t>
      <t>
	Steps 2 and the replay checking in Step 5 of the decryption
	processing in Section 3.4 of <xref target="RFC3711"/> SHOULD
	NOT be performed, since it is unnecessary.  The SRTP packet
	index used in Step 3 to determine the master key and salt
	SHOULD be set to the sequence number returned by the AERO
	decryption operation.
      </t>

      </section>

    <section anchor="contexts" title="Contexts">
      <t>
	The AERO context is stored in the transform-dependent
	parameters of the SRTP context, as the SRTP encryption
	transform.  That is, the identifier for the encryption
	algorithm describes the particular AERO algorithm that is in
	use.
      </t>
      <t>
	When AERO is used, an SRTP implementation MAY omit the
	following transform-independent parameters:
	<list>
	  <t>
	    the ROC,
	  </t>
	  <t> 
	    the replay list maintained by an SRTP/SRTCP receiver, and
	  </t>
	  <t>
	    the identifier for the message authentication algorithm.
	  </t>
	</list>
	The ROC and replay list are not needed because AERO provides
	replay protection, and the message authentication algorithm
	identifier is not needed because AERO provides that security
	service.
      </t>
      
    </section>



    </section>


    <section anchor="srtcp" title="Secure RTCP">
      <t>
	The use of AERO in SRTCP follows that in SRTP.  
      </t>

      <section anchor="srtcpenc" title="Encryption">
     <t>
	To protect an RTCP packet using AERO, the inputs
	to the encryption operation are as follows:
	<list>
	  <t>
	    The associated data A is set to the RTCP header, including
	    all of the fields starting with the Version and up to and
	    including the SSRC of the sender.
	  </t>
	  <t>
	    The plaintext is set to the remaining part of the RTCP packet.  
	  </t>
	  <t>
	    The secret key K is set to the AERO key in the SRTCP
	    context.
	  </t>
	</list>
	The ciphertext returned by that operation replaces the
	plaintext in the RTCP packet.  Note that the ciphertext will be
	longer than the plaintext.
      </t>
      <t>
	AERO does not include a separate authentication tag, and thus
	this field is omitted from the SRTCP packet; it MUST NOT be
	present	(see <xref target="rationale"/> for the rationale).  
      </t>
      <t>
	A Master Key Indicator (MKI) field MAY be present after the
	ciphertext; this field is optional in <xref target="RFC3711"/>
	and its usage is unchanged by this specification.
      </t>
      <t>      
	The "E" flag and the SRTCP index MUST NOT be included
	in the SRTCP packet.  
      </t>
      </section>

      <section title="Decryption">
         <t>
	   To decrypt an SRTCP packet using AERO, the inputs to the
	   decryption operation are as follows:
	   <list>
	     <t>
	       The associated data A is set as in SRTCP encryption 
	       <xref target="srtpenc"/>.
	     </t>
	     <t>
	       The ciphertext C consists of all of the data after the
	       associated data, to the end of the packet.
	  </t>
	  <t>
	    The secret key K is set to the AERO key in the SRTCP
	    context.
	  </t>
	</list>
      </t>
      <t>
	If the decryption operation returns the symbol FAIL, then the
	SRTCP packet is either a forgery attempt or a replay, and the
	packet MUST be discarded from further processing and the event
	MAY be logged.  Otherwise, an RTCP packet is formed from the
	SRTCP packet and the plaintext returned by the decryption
	operation, by replacing the ciphertext with the plaintext, and
	discarding the MKI field if one is present.
      </t>
      </section>

    </section>


    <section anchor="suites" title="SRTP crypto suites">

      <t>
	This section defines some crypto suites for use in SRTP, which
	can be signaled by DTLS-SRTP <xref target="RFC5764"/>, SDP
	Security Descriptions <xref target="RFC4568"/> or MIKEY <xref
	target="RFC3830"/>.  The use of these crypto suites in SDP
	Security Descriptions is straightforward; the particular
	crypto suite to be used is specified by the "crypto-suite"
	parameter.  Their use in DTLS-SRTP is similarly
	straightforward; each crypto suite is described by an SRTP
	Protection Profile (as in Section 4.1.2 of <xref
	target="RFC5764"/>).  For MIKEY, the use of a particular
	crypto suite is specified by both the MIKEY "encryption
	algorithm" parameter and the "session encryption key length"
	parameter, as noted below.
      </t>

      <section title="AERO_AES_128_XCB_80">
	<t>
	The AERO_AES_128_XCB_80 crypto suite uses the
	AERO_AES_128_XCB algorithm defined in <xref
	target="I-D.mcgrew-aero"/>, with a sequence number length T of
	72 bits.  It provides authentication strength equivalent to an
	ideal message authentication code with a 70-bit tag.  The data
	expansion is 80 bits; the ciphertext will be at most 80 bits
	longer than the plaintext.  The master-key length is 128 bits
	and has a default lifetime of a maximum of 2^48 SRTP packets
	or 2^31 SRTCP packets, whichever comes first (see page 39
	<xref target="RFC3711"/>).
	</t>
	
	<t>
	  The SRTP and SRTCP encryption key lengths are 128 bits.  The
	  master salt value is 112 bits in length and the session salt
	  value is 112 bits in length.  The pseudo-random function
	  (PRF) is the default SRTP pseudo-random function that uses
	  AES Counter Mode with a 128-bit key length.
	</t>
	<t>
	  The length of the base64-decoded key and salt value for this
	  crypto suite MUST be 30 characters (i.e., 240 bits);
	  otherwise, the crypto attribute is considered invalid.
	</t>
	<t>
	  To signal the use of AERO_AES_128_XCB_80 with MIKEY, the
	  following MIKEY SRTP Policy Parameters MUST be used:
	  <list>
	    <t>
	      An encryption algorithm parameter of TBD <xref target="iana"/>
	    </t>
	    <t>
	      A session encryption key length of 128 bits.
	    </t>
	    <t>
	      An authentication tag length of 80 bits.  
	    </t>
	  </list>
	</t>
    </section>

      <section title="AERO_AES_128_XCB_32">
	<t>
	  This crypto suite is identical to AERO_AES_128_XCB_80,
	  except that it uses a sequence number length T of 24 bits.
	  Its authentication strength is about 24 bits, and 
	  its data overhead is at most 32 bits.  
	</t>
	<t>
	  To signal the use of AERO_AES_128_XCB_32 with MIKEY, the
	  following MIKEY SRTP Policy Parameters MUST be used:
	  <list>
	    <t>
	      An encryption algorithm parameter of TBD <xref target="iana"/>
	    </t>
	    <t>
	      A session encryption key length of 128 bits.
	    </t>
	    <t>
	      An authentication tag length of 32 bits.  
	    </t>
	  </list>
	</t>

      </section>

      <section title="AERO_AES_256_XCB_128">

	<t>
	The AERO_AES_256_XCB_128 crypto suite uses the
	AERO_AES_256_XCB algorithm defined in <xref
	target="I-D.mcgrew-aero"/>, with a sequence number length T of
	128 bits.  It provides authentication strength equivalent to an
	ideal message authentication code with a 121-bit tag.  The data
	expansion is 128 bits; the ciphertext will be exactly 128 bits
	longer than the plaintext.  The master-key length is 128 bits
	and has a default lifetime of a maximum of 2^48 SRTP packets
	or 2^31 SRTCP packets, whichever comes first (see page 39
	<xref target="RFC3711"/>).
	</t>
	
	<t>
	  The SRTP and SRTCP encryption key lengths are 256 bits.  The
	  master salt value is 112 bits in length and the session salt
	  value is 112 bits in length.  The pseudo-random function
	  (PRF) is the AES_256_CM_PRF key derivation function <xref
	  target="RFC6188"/> which uses AES Counter Mode with a 256-bit
	  key length.
	</t>
	<t>
	  The length of the base64-decoded key and salt value for this
	  crypto suite MUST be 46 characters (i.e., 368 bits);
	  otherwise, the crypto attribute is considered invalid.
	</t>
	<t>
	  To signal the use of AERO_AES_128_XCB_80 with MIKEY, the
	  following MIKEY SRTP Policy Parameters MUST be used:
	  <list>
	    <t>
	      An encryption algorithm parameter of TBD <xref target="iana"/>
	    </t>
	    <t>
	      A session encryption key length of 256 bits.
	    </t>
	    <t>
	      An authentication tag length of 128 bits.  
	    </t>
	  </list>
	</t>

      </section>


    </section>

      <section anchor="rationale" title="Rationale">
	  <t>
	  There is no need to allow the SRTP or SRTCP Authentication
	  Tag fields to be present, and thus it is forbidden instead
	  of being optional.  Compatibility with <xref
	  target="RFC4771"/>, which uses this field as a means of
	  conveying the Roll-Over Counter (ROC), is not needed
	  because AERO removes any need for the ROC.  Omitting this
	  field simplifies implementations and avoids confusion.
	  </t>

	<t>
	  The SSRC field serves as a Sender Identifier, and meets the
	  requirements described in Section 3.5 of <xref
	  target="I-D.mcgrew-aero"/>.   
	</t>
	
	<section title="Comparison to other approaches">
	  <t>
	    There are other approaches that have been used to address
	    the issues identified in <xref target="intro"/>.  In this
	    section, we compare them to SRTP AERO.
	  </t>
	  <t>
	    With the SRTP Integrity Transform Carrying Roll-Over Counter
	    <xref target="RFC4771"/>, the sender periodically includes
	    the ROC in the SRTP authentication tag, in which case the
	    authentication process is altered so that the ROC is
	    authenticated.  This approach addresses synchronization
	    issues that are due to multiple receivers, such as the
	    problem of "late joiners" in a session.  However, it does
	    not address any of the issues that are due to multiple
	    senders using the same encryption key.  It also does not
	    change the need for misuse resistance.
	  </t>
	  <t>
	    With SRTP Encrypted Key Transport (EKT) <xref
	    target="SRTP-EKT"/>, the sender periodically includes
	    additional data about the session in its outbound packets.
	    This data includes the value of the master key being used
	    for that SRTP source, encrypted under a master key that is
	    used for all sources in the session.  EKT address the
	    issues that arise in multiple-sender sessions by providing
	    a way that each source can use a distinct master key.  EKT
	    also includes the initial RTP sequence number, to aid
	    receivers in establishing the appropriate SRTP packet
	    index for the first packet in a session.  EKT is more
	    complex than SRTP-AERO, as it requires a separate
	    authenticated encryption method for protecting the data
	    that is conveyed, and it adds complexities to the packet
	    processing rules.  It also adds data overhead to SRTP and
	    SRTCP packets in a way that is non-uniform, with some
	    packets growing by a single byte, and others growing by
	    over 24 bytes.  In contrast, SRTP-AERO has data overhead
	    that is constant, and need not be greater than a single
	    byte at equivalent security levels.
	  </t>
	</section>

      </section>


    <section anchor="sec" title="Security Considerations">
      <section title="SSRC collisions">
      <t>
	With SRTP-AERO, SSRC collisions do not undermine security;
	instead, there is a limited and quantifiable loss of
	confidentiality, which is described in Section 11.4 of <xref
	target="I-D.mcgrew-aero"/>.  In essence, if there is an SSRC
	collision between two senders, then the attacker will be able
	to detect the event that both senders encrypt two distinct
	packets that happen to have exactly the same plaintext and
	associated data values.  Even if an SSRC collision occurs, it
	is unlikely that the RTP sequence number, the RTP timestamp,
	and the plaintexts will all be identical.  Thus, in many
	setting the unpredictability of the RTP header and payload
	provide additional protection even in the unlikely occurrence
	of an SSRC collision.
      </t>
      <t>
	An SSRC collision will not undermine authentication.
      </t>
      <t>
	The normal RTP mechanism for detection and correction of SSRC
	collisions MUST be used.  In practice, if an SRTP or SRTCP
	sender receives a valid SRTP or SRTCP packet that it did not
	itself originate, which has an SSRC value equal to its own,
	then it MUST stop using that SSRC value, and select a new SSRC
	value at random.  A packet is valid only if its AERO
	decryption does not return FAIL.
      </t>
      </section>

      <section title="Key scope">
	<t>
	  With SRTP-AERO, a single master key MAY be used with
	  multiple SRTP sources or multiple SRTP receivers within a
	  single session.  Scenarios in which there may be multiple
	  sources in a single session include multicast SRTP, as well
	  as an RTP mixer that retransmits packets from one selected
	  source to an entire set of sources.  In this latter case, a
	  set of participants in a session can all use a single SRTP
	  master key, and a mixer can selectively retransmit packets,
	  e.g. from the "loudest talker", without re-encrypting the
	  packets.
	  </t>
	  <t>A single master key MUST NOT be used across distinct SRTP
	  sessions.  This property is not specific to AERO, but
	  instead is general to all uses of SRTP, and it follows from
	  the fact that RTP and RTCP receivers have no way of
	  distinguishing between the packets from one session and
	  those from another.  This fact would allow an attacker
	  to substitute packets from one session to another,
	  if both sessions were using the same master key.  
	</t>
      </section>

    </section>

    <section anchor="iana" title="IANA Considerations">
      <t>This section registers with IANA the following SRTP crypto-suite
      parameters for SDP Security Descriptions <xref target="RFC4568"></xref>:
      <list style="symbols">
          <t>SRTP_AERO_128_XCB_80</t>
          <t>SRTP_AERO_128_XCB_32</t>
          <t>SRTP_AERO_256_XCB_128</t>
        </list> 
	They are specified in <xref target="suites"/> of this note.
      </t>

      <t>
	We also request the IANA assignment of the following values to
	the DTLS SRTPProtectionProfile registry:
	<list>
          <t>SRTP_AERO_128_XCB_80 = { TBD1, TBD2 } </t>
          <t>SRTP_AERO_128_XCB_32 = { TBD3, TBD4 } </t>
          <t>SRTP_AERO_256_XCB_128 = { TBD5, TBD6 } </t>	    
	</list>
      </t>


      <!--MIKEY Registrations-->

      <t>We also request the following IANA assignment from the MIKEY 
      registry of SRTP policy parameters:  
      <list style="symbols">
          <t>An Encryption Algorithm parameter value of TBD.
	  </t>
        </list>
	This value indicates the use AERO_AES_XCB in SRTP, and
	corresponds to either SRTP_AERO_128_XCB_80,
	SRTP_AERO_128_XCB_32, and SRTP_AERO_256_XCB_128.
      </t>

    </section>

    <section title="Acknowledgements">

      <t>
	Thanks are due to Nermeen Ismail for insightful discussions
      on the use of SRTP in telepresence environments.  
      </t>
    </section>


  </middle>

  <back>
    <references title="Normative References">

      <!--
	<reference anchor="LRW02">
         <front>
           <title>Tweakable Block Ciphers</title>
	  <author initials="M." surname="Liskov" fullname="Moses Liskov">
	      <organization/>
           </author>
	  <author initials="R." surname="Rivest" fullname="Ron Rivest">
	    <organization/>
	  </author>
	  <author initials="D." surname="Wagner" fullname="David Wagner">
	    <organization/>
	  </author>
	  <date month="August" year="2002"/>
         </front>
         <seriesInfo name="CRYPTO 2002" value="Springer-Verlag" />
         </reference>



	<reference anchor="SDES">
	<front>
	  <title> Session Description Protocol Security Descriptions
             for Media Streams </title>
	  <author initials="F." surname="Andreasen"
		  fullname = "Flemming Andreasen">
	  <organization/>
	  </author>
	  <author initials="M." surname="Baugher"
		  fullname = "Mark Baugher">
	  <organization/>
	  </author>
	  <author initials="D." surname="Wing"
		  fullname = "Dan Wing">
	  <organization/>
	  </author>
	</front>
	<seriesInfo name="Work In Progress." value="&lt;draft-ietf-mmusic-sdescriptions-11.txt&gt;"/>
	</reference>

-->

      <!--

	<reference anchor="RCC">
	<front>
	  <title> Integrity Transform Carrying Roll-over Counter </title>
	  <author initials="V." surname="Lehtovirta"
		  fullname = "Vesa Lehtovirta">
	  <organization/>
	  </author>
	  <author initials="M." surname="Naslund"
		  fullname = "Mats Naslund">
	  <organization/>
	  </author>
	  <author initials="K." surname="Norrman"
		  fullname = "Karl Norrman">
	  <organization/>
	  </author>
	</front>
	<seriesInfo name="Work In Progress." value="&lt;draft-lehtovirta-srtp-rcc-01.txt&gt;"/>
	</reference>

	<reference anchor="KEYID">
	<front>
	  <title> The Key ID Information Type for the General
	  Extension Payload in MIKEY
	  </title>
	  <author initials="E." surname="Carrara"
		  fullname = "Elisabetta Carrara"> <organization/>
	  </author>
	  <author initials="V." surname="Lehtovirta"
		  fullname = "Vesa Lehtovirta"> <organization/>
	  </author>
	  <author initials="K." surname="Norrman"
		  fullname = "Karl Norrman">
	  <organization/>
	  </author>
	</front>
	<seriesInfo name="Work In Progress." value="&lt;draft-ietf-msec-newtype-keyid-04.txt&gt;"/>
	</reference>


      &rfc4563;

      &rfc4567;

      &rfc3261;

      &rfc4648;

      &rfc3264;

      &rfc3394;

      &rfc3550;

-->


      &rfc4568;

      &rfc4771;

      &rfc2119;





      &rfc3711;
      &rfc5764;


<!--
      &rfc5234;

      &I-D.ietf-tls-rfc4347-bis;

      &rfc5764;

      &rfc4566;
      &rfc5226;

-->
      &I-D.mcgrew-aero;

      &I-D.ietf-avtcore-srtp-aes-gcm;


      &rfc6188;
      &rfc3830;

    </references>

    <references title="Informative References">

	<reference anchor="SRTP-EKT">
	<front>
	  <title> 
                Encrypted Key Transport for Secure RTP
	  </title>
	  <author initials="D." surname="McGrew"
		  fullname = "David McGrew">
	  <organization/>
	  </author>
	  <author initials="F." surname="Andreason">
	  <organization/>
	  </author>
	  <author initials="D." surname="Wing"
		  fullname = "Dan Wing">
	  <organization/>
	  </author>
	  <author initials="K." surname="Fisher"
		  fullname = "Kai Fischer">
	  <organization/>
	  </author>
	</front>
	<seriesInfo name="Internet Draft; Work In Progress." value="&lt;draft-ietf-avtcore-srtp-ekt-00.txt&gt;"/>
	</reference>


    </references>
<!--
&rfc3547;
-->

  </back>
</rfc>
