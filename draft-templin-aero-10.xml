<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc strict='yes'?>
<?rfc iprnotified='no'?>
<rfc category="exp" docName="draft-templin-aero-10.txt" ipr="trust200902">
  <front>
    <title abbrev="AERO">Asymmetric Extended Route Optimization (AERO)</title>

    <author fullname="Fred L. Templin" initials="F." role="editor"
            surname="Templin">
      <organization>Boeing Research &amp; Technology</organization>

      <address>
        <postal>
          <street>P.O. Box 3707 MC 7L-49</street>

          <city>Seattle</city>

          <region>WA</region>

          <code>98124</code>

          <country>USA</country>
        </postal>

        <email>fltemplin@acm.org</email>
      </address>
    </author>

    <date day="6" month="March" year="2012" />

    <keyword>I-D</keyword>

    <keyword>Internet-Draft</keyword>

    <abstract>
      <t>Nodes attached to common multi-access link types (e.g.,
      multicast-capable, shared media, non-broadcast multiple access (NBMA),
      etc.) can exchange packets as neighbors on the link, but may not always
      be provisioned with sufficient routing information for optimal neighbor
      selection. Such nodes should therefore be able to discover a trusted
      intermediate router on the link that provides both forwarding services
      to reach off-link destinations and redirection services to inform the
      node of an on-link neighbor that is closer to the final destination.
      This redirection can provide a useful route optimization, since the
      triangular path from the ingress link neighbor, to the intermediate
      router, and finally to the egress link neighbor may be considerably
      longer than the direct path from ingress to egress. However, ordinary
      redirection may lead to operational issues on certain link types and/or
      in certain deployment scenarios. This document therefore introduces an
      Asymmetric Extended Route Optimization (AERO) capability that addresses
      the issues.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>Nodes attached to common multi-access link types (e.g.,
      multicast-capable, shared media, non-broadcast multiple access (NBMA),
      etc.) can exchange packets as neighbors on the link, but may not always
      be provisioned with sufficient routing information for optimal neighbor
      selection. Such nodes should therefore be able to discover a trusted
      intermediate router on the link that provides both default forwarding
      services to reach off-link destinations and redirection services to
      inform the node of an on-link neighbor that is closer to the final
      destination.</t>

      <t><figure anchor="redirect-fig"
          title="Classical Multi-Access Link Redirection">
          <artwork><![CDATA[               +--------------+
               |   Router A   |
               |    (D->C)    |
               +--------------+
                      |
    X--------+--------+--------+------X
             |                 |
  +----------+---+         +---+----------+
  |    Node B    |         |   Router C   |
  | (default->A) |         +-------+------+
  +--------------+                .-.
                               ,-(  _)-.
                            .-(_ IPv6  )-.
                          (__    EUN      )
                             `-(______)-' 
                           +-------+------+
                           |    Node D    |
                           +--------------+
]]></artwork>
        </figure><xref target="redirect-fig"></xref> shows a classical
      multi-access link redirection scenario. In this figure, Node 'B' is
      provisioned with only a default route with Router 'A' as the next hop.
      Router 'A' in turn has a more-specific route that lists Router 'C' as
      the next hop neighbor on the link for Node 'D's attached network.</t>

      <t>If Node 'B' has a packet to send to Node 'D', 'B' is obliged to send
      its initial packets via Router 'A'. Router 'A' then forwards the packet
      to Router 'C' and also returns a redirect message to inform 'B' that 'C'
      is in fact an on-link neighbor that is closer to the final destination
      'D'. After receiving the redirect message, 'B' can place a more-specific
      route in its forwarding table so that future packets destined to 'D' can
      be sent directly via Router 'C', as shown in <xref
      target="redirect-fig2"></xref>.</t>

      <t><figure anchor="redirect-fig2"
          title="More-Specific Routes Following Redirection">
          <artwork><![CDATA[               +--------------+
               |   Router A   |
               |    (D->C)    |
               +--------------+
                      |
    X--------+--------+--------+------X
             |                 |
  +----------+---+         +---+----------+
  |    Node B    |         |   Router C   |
  | (default->A) |         +-------+------+
  |    (D->C)    |                .-.
  +--------------+             ,-(  _)-.
                            .-(_ IPv6  )-.
                          (__    EUN      )
                             `-(______)-' 
                           +-------+------+
                           |    Node D    |
                           +--------------+
]]></artwork>
        </figure>This classical redirection can provide a useful route
      optimization, since the triangular path from the ingress link neighbor,
      to the intermediate router, and finally to the egress link neighbor may
      be considerably longer than the direct path from ingress to egress.
      However, ordinary redirection may lead to operational issues on certain
      link types and/or in certain deployment scenarios.</t>

      <t>For example, when an ingress link neighbor accepts an ordinary
      redirect message, it has no way of knowing whether the egress link
      neighbor is ready and willing to accept packets directly without
      involving an intermediate router. Likewise, the egress has no way of
      knowing that the ingress is authorized to forward packets from the
      claimed network-layer source address. (This is especially important for
      very large links, since any node on the link can spoof the network-layer
      source address with low probability of detection even if the link-layer
      source address cannot be spoofed.) Additionally, the ingress would have
      no way of knowing whether the direct path to the egress has failed, nor
      whether the final destination has moved away from the egress to some
      other network attachment point.</t>

      <t>Therefore, a new approach is required that can enable redirection
      signaling from the egress to the ingress link node under the mediation
      of a trusted intermediate router. The mechanism is asymmetric (since
      only the forward direction from the ingress to the egress is optimized)
      and extended (since the redirection extends forward to the egress before
      reaching back to the ingress). This document therefore introduces an
      Asymmetric Extended Route Optimization (AERO) capability that addresses
      the issues.</t>

      <t>While the AERO mechanisms were initially designed for the specific
      purpose of NBMA tunnel virtual interfaces (e.g., see: <xref
      target="RFC2529"></xref><xref target="RFC5214"></xref><xref
      target="RFC5569"></xref><xref target="I-D.templin-intarea-vet"></xref>)
      they can also be applied to any multiple access link types that support
      redirection. The AERO techniques are discussed herein with reference to
      IPv6 <xref target="RFC2460"></xref><xref target="RFC4861"></xref>,
      however they can also be applied to any other network layer protocol
      (e.g., IPv4 <xref target="RFC0791"></xref><xref
      target="RFC0792"></xref><xref target="RFC2131"></xref>) that provides a
      redirection service (details of operation for other network layer
      protocols are out of scope.)</t>
    </section>

    <section anchor="terminology" title="Terminology">
      <t>The terminology in the normative references apply; the following
      terms are defined within the scope of this document:</t>

      <t><list style="hanging">
          <t hangText="AERO link"><vspace />any link (either physical or
          virtual) over which the AERO mechanisms can be applied. (For
          example, a virtual overlay of tunnels can serve as an AERO
          link.)</t>

          <t hangText="AERO node"><vspace />a router or host connected to an
          AERO link, and that is configured to apply the AERO protocol on that
          link.</t>

          <t
          hangText="intermediate AERO router (&quot;intermediate router&quot;)"><vspace />a
          router that configures an advertising router interface on an AERO
          link over which it can provide default forwarding and redirection
          services for other AERO nodes.</t>

          <t hangText="edge AERO router (&quot;edge router&quot;)"><vspace />a
          router that configures a non-advertising router interface on an AERO
          link over which it can connect End User Networks (EUNs) to the AERO
          link.</t>

          <t hangText="AERO host"><vspace />a simple host on an AERO link.</t>

          <t
          hangText="ingress AERO node (&quot;ingress node&quot;)"><vspace />a
          node that injects packets into an AERO link.</t>

          <t hangText="egress AERO node (&quot;egress node&quot;)"><vspace />a
          node that receives packets from an AERO link.</t>
        </list></t>

      <t>The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD,
      SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in this
      document, are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>
    </section>

    <section title="Requirements">
      <t>The route optimization mechanism must satisfy the following
      requirements:</t>

      <t><list style="hanging">
          <t
          hangText="Req 1: Off-load traffic from performance-critical gateways"><vspace />The
          mechanism must offload sustained transit though an intermediate AERO
          router that would otherwise become a traffic concentrator.</t>

          <t hangText="Req 2: Support route optimization"><vspace />The
          ingress AERO node should be able to send packets directly to the
          egress node without involving an intermediate router for route
          optimization purposes.</t>

          <t hangText="Req 3: Support scaling"><vspace />For scaling purposes,
          support interworking and control message relaying between multiple
          intermediate routers (see appendix A).</t>

          <t
          hangText="Req 4: Do not circumvent ingress filtering"><vspace />The
          mechanism must not open an attack vector where network-layer source
          address spoofing is enabled even when link-layer source address
          spoofing is disabled.</t>

          <t
          hangText="Req 5: Do not expose packets to loss due to filtering"><vspace />The
          ingress AERO node must have a way of knowing that the egress AERO
          node will accept its forwarded packets.</t>

          <t
          hangText="Req 6: Do not expose packets to loss due to path failure"><vspace />The
          ingress AERO node must have a way of discovering whether the AERO
          egress node has gone unreachable on the route optimized path.</t>

          <t
          hangText="Req 7: Do not introduce routing loops"><vspace />Intermediate
          routers must not invoke a route optimization that would cause a
          routing loop to form.</t>

          <t hangText="Req 8: Support mobility"><vspace />The mechanism must
          continue to work even if the final destination node/network moves
          from a first egress node and re-associates with a second egress
          node.</t>
        </list></t>
    </section>

    <section title="Asymmetric Extended Route Optimization (AERO)">
      <t>The following sections specify an Asymmetric Extended Route
      Optimization (AERO) capability that fulfills the requirements specified
      in Section 3.</t>

      <section anchor="routing-proto" title="AERO Link Dynamic Routing">
        <t>In many AERO link use case scenarios (e.g., small enterprise
        networks, small and stable MANETs, etc.), routers can engage in a
        classical dynamic routing protocol (e.g., OSPF, RIP, IS-IS, etc.) so
        that routing/forwarding tables can be populated and standard
        forwarding between routers can be used. In other scenarios (e.g.,
        large enterprise/ISP networks, cellular service provider networks,
        dynamic MANETs, etc.), this might be impractical due to routing
        protocol control message scaling issues.</t>

        <t>When a classical dynamic routing protocol cannot be used, the
        mechanisms specified in this section can provide a useful on-demand
        route discovery capability. When both classical dynamic routing
        protocols and the AERO mechanism are active on the same link, routes
        discovered by the dynamic routing protocol should take precedence over
        those discovered by AERO.</t>
      </section>

      <section anchor="no-onlink-prefix" title="AERO Node Behavior">
        <t>The following sections discuss characteristics of nodes attached to
        links over which AERO can be used:</t>

        <section anchor="nodetype" title="AERO Node Types">
          <t>Intermediate AERO routers configure their AERO link interfaces as
          advertising router interfaces (see: <xref target="RFC4861"></xref>,
          Section 6.2.2), and therefore may send Router Advertisement (RA)
          messages that include non-zero Router Lifetimes.</t>

          <t>Edge AERO routers configure their AERO link interfaces as
          non-advertising router interfaces.</t>

          <t>AERO hosts configure their AERO link interfaces as simple host
          interfaces.</t>
        </section>

        <section anchor="host-behave" title="AERO Host Behavior">
          <t>AERO hosts send Router Solicitation (RS) messages to obtain RA
          messages from an intermediate AERO router. When the RA contains
          Prefix Information Options with non-link-local prefixes, the host
          autoconfigures network-layer addresses from the prefixes using
          Stateless Address Autoconfiguration (SLAAC) <xref
          target="RFC4861"></xref><xref target="RFC4862"></xref>. When managed
          network-layer address delegation services are available, the host
          can also (or instead) acquire network-layer addresses taken from
          prefixes aggregated by the intermediate router through the use of
          stateful mechanisms, e.g., DHCPv6 <xref target="RFC3315"></xref>,
          administrative configuration, etc.</t>

          <t>After the host receives network-layer addresses, it assigns them
          to its AERO interface and forwards any of its outbound packets via
          the intermediate router as a default router. The host may
          subsequently engage in the AERO route optimization procedure as
          specified in <xref target="predirect"></xref>.</t>
        </section>

        <section anchor="router-behave" title="Edge AERO Router Behavior">
          <t>Edge AERO routers send RS messages to obtain RA messages from an
          intermediate AERO router, i.e., they act as "hosts" on their
          non-advertising AERO link router interfaces for the purpose of
          default router discovery. Edge routers can then acquire managed
          prefix delegations aggregated by an intermediate router through the
          use of, e.g., DHCPv6 Prefix Delegation <xref
          target="RFC3633"></xref>, administrative configuration, etc.</t>

          <t>After the edge router acquires prefixes, it can sub-delegate them
          to nodes and links within its attached End User Networks (EUNs),
          then can forward any outbound packets coming from its EUNs via the
          intermediate router. The edge router may subsequently engage in the
          AERO route optimization procedure as specified in <xref
          target="predirect"></xref>.</t>
        </section>

        <section anchor="gateway-behave"
                 title="Intermediate AERO Router Behavior">
          <t>Intermediate AERO routers respond to RS messages from AERO hosts
          and edge routers by returning an RA message. Intermediate routers
          may further configure a DHCP relay or server function on their AERO
          links and/or provide an administrative interface for delegation of
          network-layer addresses and prefixes. (In any case, however, each
          intermediate router must be made aware of the network-layer
          address/prefix delegations associated with the AERO edge routers and
          hosts that it serves.)</t>

          <t>When the intermediate router completes a stateful network-layer
          address or prefix delegation transaction (e.g., as a DHCPv6
          relay/server, etc.), it establishes forwarding table entries that
          list the link-layer address of the client AERO node as the
          link-layer address of the next hop toward the delegated
          network-layer addresses/prefixes.</t>

          <t>When the intermediate router forwards a packet out the same AERO
          interface it arrived on, it initiates an AERO route optimization
          procedure as specified in <xref target="predirect"></xref>.</t>
        </section>
      </section>

      <section anchor="avoidance-fig"
               title="AERO Reference Operational Scenario">
        <t><xref target="no-onlink-prefix-fig"></xref> depicts the AERO
        reference operational scenario. The figure shows an intermediate AERO
        router ('A'), two edge AERO routers ('B', 'D'), an AERO host ('F'),
        and three ordinary IPv6 hosts ('C', 'E', 'G'):</t>

        <figure anchor="no-onlink-prefix-fig"
                title="AERO Reference Operational Scenario">
          <artwork><![CDATA[                 .-(::::::::)
              .-(::: IPv6 :::)-.   +-------------+
             (:::: Internet ::::)--|    Host G   |
              `-(::::::::::::)-'   +-------------+
                 `-(::::::)-'       2001:db8:3::1
                      |
               +--------------+        +--------------+
               | Intermediate |        |  AERO Host F |
               | AERO Router A|        | (default->A) |
               | (C->B; E->D) |        +--------------+
               +--------------+          2001:db8:2:1
                    L3(A)                   L3(F)
                    L3(A)                   L2(F)
                      |                       |
    X-----+-----------+-----------+-----------+---X
          |       AERO Link       |
         L2(B)                  L2(D)
         L3(B)                  L3(D)
  +--------------+         +--------------+          .-.
  |  AERO Edge   |         |  AERO Edge   |       ,-(  _)-.
  |   Router B   |         |   Router D   |    .-(_ IPv6  )-.
  | (default->A) |         | (default->A) |--(__    EUN      )
  +--------------+         +--------------+     `-(______)-'
  2001:db8:0::/48           2001:db8:1::/48           |
          |                                     2001:db8:1::1
         .-.                                   +-------------+
      ,-(  _)-.      2001:db8:0::1             |    Host E   |
   .-(_ IPv6  )-.   +-------------+            +-------------+
 (__    EUN      )--|    Host C   |
    `-(______)-'    +-------------+
]]></artwork>
        </figure>

        <t>In <xref target="no-onlink-prefix-fig"></xref>, intermediate AERO
        router ('A') connects to the AERO link and also connects to the IPv6
        Internet, either directly or via other IPv6 routers (not shown).
        Intermediate router ('A') configures an AERO link interface with a
        link-local network-layer address L3(A) and with link-layer address
        L2(A). The intermediate router next arranges to add L2(A) to a
        published list of valid intermediate routers for the link. Finally,
        the intermediate router is further provisioned with routing
        information listing AERO node ('B') as the next-hop toward the IPv6
        EUN that connects node ('C'), and listing AERO node ('D') as the
        next-hop AERO router toward the IPv6 EUN that connects node ('E').</t>

        <t>AERO node ('B') is an AERO edge router that connects to one or more
        IPv6 EUNs and also connects to the AERO link via an interface with
        link-local network-layer address L3(B) and with link-layer address
        L2(B). Node ('B') next configures a default route with next-hop
        network-layer address L3(A) via the AERO interface, then receives the
        network-layer prefix 2001:db8:0::/48 through a stateful prefix
        delegation exchange that also establishes routing information in
        intermediate router ('A'). Node ('B') finally sub-delegates the
        network-layer prefix to links and/or routers within its attached EUNs,
        where IPv6 host ('C') autoconfigures the network-layer address
        2001:db8:0::1.</t>

        <t>AERO node ('D') is an AERO edge router that connects to the AERO
        link via an interface with link-local network-layer address L3(D) and
        with link-layer address L2(D). Note ('D') next configures a default
        route with next-hop network-layer address L3(A) via the AERO
        interface, then receives the network-layer prefix 2001:db8:1::/48
        through a stateful prefix delegation exchange in the same fashion as
        for node ('B'). Node ('D') finally sub-delegates the network-layer
        prefix to links and/or routers within its attached EUNs, where IPv6
        host ('E') autoconfigures network-layer address 2001:db8:1::1.</t>

        <t>AERO host ('F') connects to the AERO link via an interface with
        link-local network-layer address L3(F) and with link-layer address
        L2(F). Host ('F') next configures a default route with next-hop
        network-layer address L3(A) via the AERO interface, then receives the
        network-layer address 2001:db8:2::1 from a stateful address
        configuration exchange that also establishes routing information in
        intermediate router ('A'). When host ('F') receives the network-layer
        address, it assigns the address to the AERO interface.</t>

        <t>Finally, IPv6 host ('G') connects to an IPv6 network outside of the
        AERO link domain. Host ('G') configures its IPv6 interface in a manner
        specific to its attached IPv6 link, and autoconfigures the
        network-layer address 2001:db8:3::1.</t>

        <t>In these arrangements, intermediate router ('A') must maintain
        state that associate the delegated network-layer addresses/prefixes
        with the link-local network-layer addresses of the correct edge
        routers and/or hosts on the AERO link. The nodes must in turn maintain
        at least a default route that points to intermediate router ('A'), and
        can discover more-specific routes either via a proactive dynamic
        routing protocol or via the AERO mechanisms specified in <xref
        target="predirect"></xref>.</t>
      </section>

      <section anchor="predirect" title="AERO Specification">
        <t><xref target="avoidance-fig"></xref> describes the AERO reference
        operational scenario. We now discuss the operation and protocol
        details of AERO with respect to this reference scenario.</t>

        <section title="Classical Redirection Approaches">
          <t>With reference to <xref target="no-onlink-prefix-fig"></xref>,
          when IPv6 source host ('C') sends a packet with source network-layer
          address 'C' and destination network-layer address 'E', the packet is
          first forwarded via the EUN to ingress AERO node ('B'). The ingress
          node then forwards the packet over the AERO interface to the AERO
          link intermediate router ('A'), which then forwards the packet to
          egress AERO node ('D'), where the packet is finally forwarded to the
          IPv6 destination host ('E'). When intermediate router ('A') forwards
          the packet back out on its advertising AERO interface, it must
          arrange to redirect ingress node ('B') toward egress node ('D') as a
          better next hop node on the AERO link that is closer to the final
          destination. However, this redirection process should only occur if
          there is assurance that both the ingress and egress nodes are
          willing participants.</t>

          <t>Consider a first alternative in which intermediate router ('A')
          informs ingress node ('B') only and does not inform egress node
          ('D') (i.e., "classic redirection"). In that case, the egress node
          has no way of knowing that the ingress is authorized to forward
          packets from their claimed source network-layer addresses, and may
          simply elect to drop the packets. Also, the ingress node has no way
          of knowing whether the egress is willing to accept its packets, nor
          whether the egress is even reachable via a direct path that does not
          involve the intermediate router. Finally, the ingress node has no
          way of knowing whether the final destination has moved away from
          egress node.</t>

          <t>Consider also a second alternative in which intermediate router
          ('A') informs both ingress node ('B') and egress node ('D')
          separately via independent redirection messages (i.e., "augmented
          redirection"). In that case, several conditions can occur that could
          result in communication failures. First, if the ingress receives the
          redirection message but the egress does not, subsequent packets sent
          by the ingress could be dropped due to filtering since the egress
          would not have neighbor state to verify their source network-layer
          addresses. Second, if the egress receives the redirection message
          but the ingress does not, subsequent packets sent in the reverse
          direction by the egress would be lost. Finally, timing issues
          surrounding the establishment and garbage collection of neighbor
          state at the ingress and egress nodes could yield unpredictable
          behavior. For example, unless the timing were carefully coordinated
          through some form of synchronization loop, there would invariably be
          instances in which one node has the correct neighbor state and the
          other node does not resulting in non-deterministic packet loss.</t>

          <t>Since neither of these alternatives can satisfy the requirements
          listed in Section 3, a new redirection technique (i.e., "AERO
          redirection") is needed.</t>
        </section>

        <section title="AERO Concept of Operations">
          <t>AERO redirection is used on links for which the classical
          redirection approaches described in Section 4.4.1 are insufficient
          to satisfy all requirements. We now discuss the concept of
          operations for this new approach.</t>

          <t>Again with reference to <xref
          target="no-onlink-prefix-fig"></xref>, when source host ('C') sends
          a packet with source network-layer address L3(C) and destination
          network-layer address L3(E), the packet is first forwarded over the
          source host's attached EUN to ingress node ('B'), which then
          forwards the packet via its AERO interface to intermediate router
          ('A').</t>

          <t>Using AERO redirection, intermediate router ('A') then forwards
          the packet out the same AERO interface toward egress node ('D') and
          also sends a "Predirect" message forward to the egress node. The
          Predirect message includes the identity of ingress node ('B') as
          well as information that egress node ('D') can use to determine the
          longest-match prefixes that cover the source and destination
          network-layer addresses of the packet that triggered the Predirect.
          After egress node ('D') receives the Predirect, it creates neighbor
          state for ingress node ('B') (if necessary) and retains this (src,
          dst) "prefix pair" as ingress filtering information to accept future
          packets using addresses matched by the prefixes from ingress node
          ('B').</t>

          <t>After creating this ingress filtering state, egress node ('D')
          sends a Redirect message back to the intermediate router ('A'),
          which then acts as a "proxy" to relay the message to ingress node
          ('B'). The Redirect message includes the identity of egress node
          ('D') as well as information that ingress node ('B') can use to
          determine the longest-match prefixes that cover the source and
          destination network-layer addresses of the packet that triggered the
          Redirect. After ingress node ('B') receives the Redirect, it creates
          neighbor state for egress node ('D') (if necessary) and retains this
          prefix pair as forwarding information to forward future packets
          using addresses matched by the prefixes to the egress node
          ('D').</t>

          <t>Following the above Predirect/Redirect message exchange,
          forwarding of packets with source and destination network-layer
          addresses covered by the longest-match prefix pair is enabled in the
          forward direction from ingress node ('B') to egress node ('D'). The
          mechanisms that enable this exchange are specified in the following
          sections.</t>
        </section>

        <section title="Conceptual Data Structures and Protocol Constants">
          <t>Each AERO node maintains a per AERO interface conceptual neighbor
          cache that includes an entry for each neighbor it communicates with
          on the AERO link the same as for any IPv6 interface (see: <xref
          target="RFC4861"></xref>).</t>

          <t>Each AERO interface neighbor cache entry further maintains two
          lists of (src, dst) prefix pairs. The AERO node adds a prefix pair
          to the ACCEPT list if it has been informed by a trusted intermediate
          router that it is safe to accept packets from the neighbor using
          network-layer source and destination addresses covered by the prefix
          pair. The AERO node adds a prefix pair to the FORWARD list if it has
          been informed by a trusted intermediate router that it is permitted
          to forward packets to the neighbor using network-layer addresses
          covered by the prefix pair.</t>

          <t>When the node adds a prefix pair to a neighbor cache entry ACCEPT
          list, it also sets an expiration timer for the prefix pair to
          ACCEPT_TIME seconds. When the node adds a prefix pair to a neighbor
          cache entry FORWARD list, it sets an expiration timer for the prefix
          pair to FORWARD_TIME seconds.</t>

          <t>It is RECOMMENDED that FORWARD_TIME be set to the default
          constant value 30 seconds to match the default REACHABLE_TIME value
          specified for IPv6 neighbor discovery <xref
          target="RFC4861"></xref>. It is further RECOMMENDED that ACCEPT_TIME
          be set to the default constant value 40 seconds to allow a 10 second
          window so that the AERO redirection procedure can converge before
          the ACCEPT_TIME timer decrements below FORWARD_TIME.</t>

          <t>Different values for FORWARD_TIME and ACCEPT_TIME MAY be
          administratively set if necessary to better match the AERO link's
          performance characteristics; however, if different values are chosen
          all nodes on the link MUST consistently configure the same values.
          ACCEPT_TIME SHOULD further be set to a value that is sufficiently
          longer than FORWARD time to allow the AERO redirection procedure to
          converge.</t>
        </section>

        <section anchor="verify" title="Data Origin Authentication">
          <t>AERO nodes MUST employ a data origin authentication check for the
          packets they receive on an AERO interface. In particular, the node
          considers the network-layer source address correct for the
          link-layer source address if:</t>

          <t><list style="symbols">
              <t>the network-layer source address is an on-link address that
              embeds the link-layer source address, or</t>

              <t>the network-layer source address is explicitly linked to the
              link-layer source address through per-neighbor state, or</t>

              <t>the link-layer source address is the address of a trusted
              intermediate AERO router, or</t>

              <t>the packet includes a digital signature that the node can use
              to authenticate the origin.</t>
            </list>When the AERO node receives a packet on an AERO interface,
          it processed the packet further if it satisfies one of these data
          origin authentication conditions; otherwise it drops the packet.</t>

          <t>Note that on links in which link-layer address spoofing is
          possible, AERO nodes may be obliged to require the use of digital
          signatures. In that case, only the third of the above conditions can
          be accepted in order to ensure adequate data origin
          authentication.</t>
        </section>

        <section anchor="rmsg" title="AERO Redirection Message Format">
          <t>AERO redirection messages use the same format as for ICMPv6
          Redirect messages depicted in Section 4.5 of <xref
          target="RFC4861"></xref>. For the purpose of this experimental
          publication, however, AERO redirection messages use the experimental
          ICMPv6 message type value of "100" (see: Section 2.1 of <xref
          target="RFC4443"></xref>) instead of the official type value
          reserved for ICMPv6 Redirect messages.</t>

          <t>AERO redirection messages are further identified by three new
          bits known as the "AERO bits" taken from the Reserved field as shown
          in <xref target="predirect-bits"></xref>:</t>

          <t><figure anchor="predirect-bits"
              title="AERO-Specific ICMPv6 Redirect Message Format">
              <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  Type (=137)  |   Code (=0)   |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|A|P|R|                     Reserved                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                                                               +
|                                                               |
+                       Target Address                          +
|                                                               |
+                                                               +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
+                                                               +
|                                                               |
+                     Destination Address                       +
|                                                               |
+                                                               +
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Options ...
+-+-+-+-+-+-+-+-+-+-+-+-
]]></artwork>
            </figure></t>

          <t>Where the new AERO bits are defined as:</t>

          <t><list style="hanging">
              <t hangText="A (1)">Set to 1 to indicate an AERO-specific
              Redirect message, and set to 0 to indicate an ordinary ICMPv6
              Redirect message.</t>

              <t hangText="P (1)">Set to 1 to indicate a Predirect message,
              and set to 0 to indicate a Redirect response to a Predirect
              message. (This bit is valid only when the A bit is set to
              1.)</t>

              <t hangText="R (1)">Set to 1 to indicate that this message has
              already been Relayed by an intermediate router; otherwise, set
              to 0. (This bit is valid only when the A bit is set to 1.)</t>
            </list></t>
        </section>

        <section title="Sending Predirects">
          <t>When an intermediate AERO router forwards a packet out the same
          AERO interface that it arrived on, the router sends an AERO
          Predirect message forward toward the egress AERO node instead of
          sending an ICMPv6 Redirect message back to the ingress AERO
          node.</t>

          <t>In the reference operational scenario, when the intermediate
          router ('A') forwards a packet sent by the ingress node ('B') toward
          the egress node ('D'), it also sends an AERO Predirect message
          forward toward the egress, subject to rate limiting (see Section 8.2
          of <xref target="RFC4861"></xref>). The intermediate router ('A')
          prepares the AERO Predirect message in a similar fashion as for an
          ordinary ICMPv6 Redirect message as follows:</t>

          <t><list style="symbols">
              <t>the link-layer source address is set to 'L2(A)' (i.e., the
              link-layer address of the intermediate router).</t>

              <t>the link-layer destination address is set to 'L2(D)' (i.e.,
              the link-layer address of the egress node).</t>

              <t>the network-layer source address is set to 'L3(A)' (i.e., the
              link-local network-layer address of the intermediate
              router).</t>

              <t>the network-layer destination address is set to 'L3(D)'.
              (i.e., the link-local network-layer address of the egress
              node).</t>

              <t>the ICMP Target and Destination Addresses are both set to
              'L3(B)' (i.e., the link-local network-layer address of the
              ingress node).</t>

              <t>on links that require stateful address mapping, the message
              includes a Target Link Layer Address Option (TLLAO) set to
              'L2(B)' (i.e., the link-layer address of the ingress node).</t>

              <t>the message includes a Route Information Option (RIO) <xref
              target="RFC4191"></xref> that encodes the ingress node's
              network-layer address/prefix delegation that covers the
              network-layer source address of the originating packet.</t>

              <t>the message includes a Redirected Header Option (RHO) that
              contains the originating packet truncated to ensure that at
              least the network-layer header is included but the size of the
              message does not exceed 1280 bytes.</t>

              <t>the AERO bits in the message header are set to A=1; P=1;
              R=0.</t>
            </list></t>

          <t>The intermediate router ('A') then sends the message forward to
          the egress node ('D').</t>
        </section>

        <section title="Processing Predirects and Sending Redirects">
          <t>When the egress node ('D') receives an AERO Predirect message, it
          accepts the message only if it satisfies the data origin
          authentication requirements specified in Section 4.4.4. Next, the
          egress node ('D') validates the message according to the ICMPv6
          Redirect message validation rules in Section 8.1 of <xref
          target="RFC4861"></xref> with the exception that the message
          includes a link-local address in the ICMP destination field that
          differs from the destination address of the packet header
          encapsulated in the RHO.</t>

          <t>In the reference operational scenario, when the egress node ('D')
          receives a valid AERO Predirect message it creates a neighbor cache
          entry (if necessary) that stores the Target address of the message
          (i.e., the link-local network-layer address of the ingress node
          ('B')). The egress node ('D') then records the prefix found in the
          RIO along with its own prefix that matches the network-layer
          destination address in the packet header found in the RHO with the
          neighbor cache entry as an acceptable (src, dst) prefix pair. The
          egress node ('D') then adds the prefix pair to the neighbor cache
          entry ACCEPT list, and sets/resets an expiration timer for the
          prefix pair to ACCEPT_TIME seconds. If the timer later expires, the
          egress node ('D') deletes the prefix pair.</t>

          <t>After processing the message, the egress node ('D') prepares an
          AERO Redirect message response as follows:</t>

          <t><list style="symbols">
              <t>the link-layer source address is set to 'L2(D)' (i.e., the
              link-layer address of the egress node).</t>

              <t>the link-layer destination address is set to 'L2(A)' (i.e.,
              the link-layer address of the intermediate router).</t>

              <t>the network-layer source address is set to 'L3(D)' (i.e., the
              link-local network-layer address of the egress node).</t>

              <t>the network-layer destination address is set to 'L3(B)'
              (i.e., the link-local network-layer address of the ingress
              node).</t>

              <t>the ICMP Target and the Redirect Destination Addresses are
              both set to 'L3(D)' (i.e., the link-local network-layer address
              of the egress node).</t>

              <t>on links that require stateful address mapping, the message
              includes a Target Link Layer Address Option (TLLAO) set to
              'L2(D)'.</t>

              <t>the message includes an RIO that encodes the egress node's
              network-layer address/prefix delegation that covers the
              network-layer destination address of the originating packet.</t>

              <t>the message includes as much of the RHO copied from the
              corresponding AERO Predirect message as possible such that at
              least the network-layer header is included but the size of the
              message does not exceed 1280 bytes.</t>

              <t>the AERO bits in the message header are set to A=1; P=0;
              R=0.</t>
            </list></t>

          <t>After the egress node ('D') prepares the AERO Redirect message,
          it sends the message to the intermediate router ('A').</t>
        </section>

        <section title="Relaying Redirects">
          <t>When the intermediate router ('A') receives an AERO Redirect
          message, it accepts the message only if it satisfies the data origin
          authentication requirements specified in Section 4.4.4. Next, the
          intermediate router ('A') validates the message the same as
          described in Section 4.4.7. Following validation, the intermediate
          router ('A') then "relays" the message back to the ingress node
          ('B') as follows.</t>

          <t>In the reference operational scenario, the intermediate router
          ('A') receives the AERO Redirect message from the egress node ('D')
          and prepares to relay the message to the ingress node ('B'). The
          intermediate router ('A') then verifies that the RIO encodes a
          network-layer address/prefix that the egress node ('D') is
          authorized to use, and discards the message if verification fails.
          Otherwise, the intermediate router ('A') changes the link-layer
          source address of the message to 'L2(A)', changes the network-layer
          source address of the message to the link-local network-layer
          address 'L3(A)', and changes the link-layer destination address to
          'L2(B)' . The intermediate router ('A') finally sets the AERO R bit
          to 1 and relays the message to the ingress node ('B') without
          decrementing the hopcount.</t>

          <t>This relaying procedure therefore requires the intermediate
          router ('A') to examine the R bit before relaying an AERO Redirect
          message in order to avoid a free-running loop due to the
          non-decrementing hopcount. In particular, the intermediate route
          discards any AERO Redirect message it receives with R==1.</t>
        </section>

        <section title="Processing Redirects">
          <t>When the ingress node ('B') receives an AERO Redirect message
          (i.e., one with A=1; P=0), it accepts the message only if it
          satisfies the data origin authentication requirements specified in
          Section 4.4.4. Next, the ingress node ('B') validates the message
          the same as described in Section 4.4.6. Following validation, the
          ingress node ('B') then processes the message as follows.</t>

          <t>In the reference operational scenario, when the ingress node
          ('B') receives the (relayed) AERO Redirect message it creates a
          neighbor cache entry (if necessary) that stores the Target address
          of the message (i.e., the link-local network-layer address of the
          egress node 'L3(D)'). The ingress node ('B') then records the (src,
          dst) prefix pair associated with the triggering packet in the
          neighbor cache entry FORWARD list, i.e., it records its prefix that
          matches the redirected packet's network-layer source address and the
          prefix listed in the RIO as the prefix pair. The ingress node ('B')
          then sets/resets an expiration timer for the prefix pair to
          FORWARD_TIME seconds. If the timer later expires, the ingress node
          ('B') deletes the entry.</t>

          <t>Now, the ingress node ('B') has a neighbor cache FORWARD list
          entry for the prefix pair, and the egress node ('D') has a neighbor
          cache ACCEPT list entry for the prefix pair. Therefore, the ingress
          node ('B') may forward ordinary network-layer data packets with
          network-layer source and destination addresses that match the prefix
          pair directly to the egress node ('D') without involving the
          intermediate router ('A'). Note that the ingress node must have a
          way of informing the network layer of a route that associates the
          destination prefix with this neighbor cache entry. The manner of
          establishing such a route (and deleting it when it is no longer
          necessary) is left to the implementation.</t>

          <t>To enable packet forwarding in the reverse direction, a separate
          AERO redirection operation is required which is the mirror-image of
          the forward operation described above, i.e., the forward and reverse
          AERO operations are asymmetric.</t>
        </section>

        <section title="Sending Periodic Predirect Keepalives">
          <t>In order to prevent prefix pairs from expiring while data packets
          are actively flowing, the ingress node ('B') can periodically send
          AERO Predirect keepalive messages directly to the egress node ('D')
          to solicit AERO Redirect messages. Absent specific administrative
          configuration, it is RECOMMENDED that the ingress node ('B') send no
          more than 10 keepalive messages during each FORWARD_TIME
          interval.</t>

          <t>In the reference operational scenario, when the ingress node
          ('B') wishes to refresh the FORWARD timer for a specific prefix
          pair, it can send an AERO Predirect keepalive message directly to
          the egress node ('D') prepared as follows:</t>

          <t><list style="symbols">
              <t>the link-layer source address is set to 'L2(B)' (i.e., the
              link-layer address of the ingress node).</t>

              <t>the link-layer destination address is set to 'L2(D)' (i.e.,
              the link-layer address of the egress node).</t>

              <t>the network-layer source address is set to 'L3(B)' (i.e., the
              link-local network-layer address of the ingress node).</t>

              <t>the network-layer destination address is set to 'L3(D)'
              (i.e., the link-local network-layer address of the egress
              node).</t>

              <t>the Predirect Target and Destination Addresses are both set
              to 'L3(B)' (i.e., the link-local network-layer address of the
              ingress node).</t>

              <t>the Predirect message includes an RHO that contains the
              originating packet truncated to ensure that at least the
              network-layer header is included but the size of the message
              does not exceed 1280 bytes.</t>

              <t>the AERO bits in the message header are set to A=1; P=1;
              R=0.</t>
            </list></t>

          <t>When the egress node ('D') receives the AERO Predirect message,
          it validates the message the same as described in Section 4.4.6.
          Following validation, the egress node ('D') then resets its ACCEPT
          timer for the prefix pair that matches the originating packet's
          network-layer source and destination addresses to ACCEPT_TIME
          seconds, and sends an AERO Redirect message directly to the ingress
          node ('B') prepared as follows:</t>

          <t><list style="symbols">
              <t>the link-layer source address is set to 'L2(D)' (i.e., the
              link-layer address of the egress node).</t>

              <t>the link-layer destination address is set to 'L2(B)' (i.e.,
              the link-layer address of the ingress node).</t>

              <t>the network-layer source address is set to 'L3(D)' (i.e., the
              link-local network-layer address of the egress node).</t>

              <t>the network-layer destination address is set to 'L3(B)'
              (i.e., the link-local network-layer address of the ingress
              node).</t>

              <t>the Redirect Target and Destination Addresses are both set to
              'L3(D)' (i.e., the link-local network-layer address of the
              egress node).</t>

              <t>the message includes as much of the RHO copied from the
              corresponding AERO Predirect message as possible such that at
              least the network-layer header is included but the size of the
              message does not exceed 1280 bytes.</t>

              <t>the AERO bits in the Redirect message header are set to A=1;
              P=0; R=0.</t>
            </list>When the ingress node ('B') receives the AERO Redirect
          message, it validates the message the same as described in Section
          4.4.6. Following validation, the ingress node ('B') then resets its
          FORWARD timer for the prefix pair that matches the originating
          packet's network-layer source and destination addresses to
          FORWARD_TIME seconds.</t>
        </section>

        <section anchor="reachable" title="Reachability Considerations">
          <t>When the ingress node ('B') receives an AERO Redirect message
          informing it of a direct path to a new egress node ('D'), there is a
          question in point as to whether the new egress node ('D') can be
          reached directly without involving an intermediate router ('A'). On
          some AERO links, it may be reasonable for the ingress node ('B') to
          (optimistically) assume that reachability is transitive, and to
          immediately begin forwarding data packets to the egress node ('D')
          without testing reachability.</t>

          <t>On AERO links in which an optimistic assumption of transitive
          reachability may be unreasonable, however, the ingress node ('B')
          can defer the redirection until it tests the direct path to the
          egress node ('D'), e.g., by sending an AERO Predirect message to
          solicit an AERO Redirect as specified in Section 4.4.10. If the
          ingress node ('B') is unable to elicit an AERO Redirect message
          after MAX_UNICAST_SOLICIT attempts, it should consider the direct
          path to the egress node ('D') as unusable. (It is RECOMMENDED that
          the ingress node set MAX_UNICAST_SOLICIT to 3 the same as described
          for IPv6 neighbor discovery address resolution in Section 7.3.3 of
          <xref target="RFC4861"></xref>.)</t>

          <t>In either case, the ingress node ('B') can process any link
          errors corresponding to the data packets sent directly to the egress
          node ('D') as a hint that the direct path has either failed or has
          become intermittent.</t>
        </section>

        <section anchor="mobility" title="Mobility Considerations">
          <t>Again with reference to <xref
          target="no-onlink-prefix-fig"></xref>, egress node ('D') can
          configure both a non-advertising router interface on a provider AERO
          link and advertising router interfaces on its connected EUN links.
          When an EUN node ('E') in one of the egress node's connected EUNs
          moves to a different network point of attachment, however, it can
          release its network-layer address/prefix delegations that were
          registered with egress node ('D' ) and re-establish them via a
          different router.</t>

          <t>When the EUN node ('E') releases its network-layer address/prefix
          delegations, the egress node ('D') marks its forwarding table
          entries corresponding to the network-layer addresses/prefixes as
          "departed" and no longer responds to AERO Predirect keepalive
          messages for the departed addresses/prefixes. When egress node ('D')
          receives packets from an ingress node ('B') with network-layer
          source and destination addresses that match a prefix pair on the
          ACCEPT list, it forwards them to the last-known link-layer address
          of EUN node ('E') as a means for avoiding mobility-related packet
          loss during routing changes. Egress node ('D') also returns a NULL
          AERO Redirect message to inform the ingress node ('B') of the
          departure. The message is prepared as follows:</t>

          <t><list style="symbols">
              <t>the link-layer source address is set to 'L2(D)'.</t>

              <t>the link-layer destination address is set to 'L2(B)'.</t>

              <t>the network-layer source address is set to the link-local
              address 'L3(D)'.</t>

              <t>the network-layer destination address is set to the
              link-local address 'L3(B)'.</t>

              <t>the Redirect Target and Destination Addresses are both set to
              NULL.</t>

              <t>the message includes an RHO that contains as much of the
              original packet as possible such that at least the network-layer
              header is included but the size of the message does not exceed
              1280 bytes.</t>

              <t>the AERO bits in the message header are set to A=1; P=0;
              R=0.</t>
            </list>When ingress node ('B') receives the NULL AERO Redirect
          message, it deletes the prefix pair associated with the packet in
          the RHO from its list of forwarding entries corresponding to egress
          node ('D'). When egress node ('D')s ACCEPT_TIME timer for the prefix
          pair corresponding to the departed prefix expires, it deletes the
          prefix pairs from its list of ingress filtering entries
          corresponding to ingress node ('B').</t>

          <t>Eventually, any such correspondent AERO nodes will receive a NULL
          AERO Redirect message and will cease to use the egress node ('D') as
          a next hop. They will then revert to sending packets destined to the
          EUN node ('E') via a trusted intermediate router and may
          subsequently receive new AERO Redirect messages to discover that the
          EUN node ('E' ) is now associated with a new AERO edge router.</t>

          <t>Note that any packets forwarded by the egress node ('D') via a
          departed forwarding table entry may be lost if the (mobile) EUN node
          ('E') moves off-link with respect to its previous EUN point of
          attachment. This should not be a problem for large links (e.g.,
          large cellular network deployments, large ISP networks, etc.) in
          which all/most mobility events are intra-link.</t>
        </section>

        <section title="Prefix Re-Provisioning Considerations">
          <t>When an AERO node configures one or more FORWARD/ACCEPT list
          prefix pair entries, and the prefixes associated with the pair are
          somehow re-configured or renumbered, the stale FORWARD/ACCEPT list
          information must be deleted.</t>

          <t>When an ingress node ('B') re-configures it's network-layer
          source prefix in such a way that the ACCEPT list entry in the egress
          node ('D') would no longer be valid (e.g., the prefix length of the
          source prefix changes), the ingress node ('B') simply deletes the
          prefix pair form its FORWARD list and allows subsequent packets
          covered by the prefix pair to again flow through an intermediate
          router ('A').</t>

          <t>When the egress node ('D') re-configures it's network-layer
          destination prefix in such a way that the FORWARD list entry in the
          ingress node ('B') would no longer be valid, the egress node ('D')
          sends a NULL AERO Redirect message to the ingress node ('B') the
          same as described for Mobility Considerations when it receives
          either an AERO Predirect message or a data packet (subject to rate
          limiting) from the ingress node ('B') .</t>
        </section>

        <section anchor="backward" title="Backward Compatibility">
          <t>For the purpose of this experimental publication, there are no
          backward compatibility considerations since the AERO Redirect
          message uses a different ICMPv6 type value than the standard ICMPv6
          Redirect message. However, future versions of this document may
          redefine the AERO Redirect message to use the same ICMPv6 type value
          as the standard ICMPv6 Redirect message.</t>

          <t>In that case, if a legacy host or router receives an AERO
          Redirect or Predirect message, it will process the message as if it
          were an ordinary Redirect. This will cause no harmful effects, since
          the legacy system will safely ignore the AERO bits in the Reserved
          field, and will also ignore any RIOs that are included. The
          link-local network-layer addresses encoded in the Redirect message
          Target and Destination addresses will also not cause the legacy node
          to create incorrect forwarding state. The mechanism therefore causes
          no harm to legacy systems, and supports natural incremental
          deployment.</t>
        </section>
      </section>
    </section>

    <section anchor="iana" title="IANA Considerations">
      <t>This document has no IANA considerations.</t>
    </section>

    <section anchor="secure" title="Security Considerations">
      <t>AERO link security is dependent on a trust basis between edge nodes
      and intermediate routers. In particular, edge nodes must only engage in
      the AERO mechanism when it is facilitated by a trusted intermediate
      router.</t>

      <t>AERO links must be protected against spoofing attacks in which an
      attacker on the link pretends to be a trusted neighbor. This is often
      possible on links that provide link-layer securing mechanisms (e.g.,
      WiFi networks) and on links that provide physical security (e.g.,
      enterprise network LANs). In other instances, sufficient assurances
      against on-link spoofing attacks are possible if the source can
      digitally sign its messages. In that case, the destination can use the
      data origin authentication checks specified in Section 4.4.4 to verify
      the signature.</t>
    </section>

    <section anchor="ack" title="Acknowledgements">
      <t>Discussions both on the v6ops list and in private exchanges helped
      shape some of the concepts in this work. Individuals who contributed
      insights include Mikael Abrahamsson, Fred Baker, Stewart Bryant, Brian
      Carpenter, Joel Halpern, Lee Howard,</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.2460"?>

      <?rfc include="reference.RFC.4443"?>

      <?rfc include="reference.RFC.4861"?>

      <?rfc include="reference.RFC.4862"?>

      <?rfc include="reference.RFC.4191"?>

      <?rfc ?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.0791"?>

      <?rfc include="reference.RFC.0792"?>

      <?rfc include="reference.RFC.3315"?>

      <?rfc include="reference.RFC.3633"?>

      <?rfc include="reference.I-D.templin-ironbis"?>

      <?rfc include="reference.I-D.templin-intarea-vet"?>

      <?rfc include="reference.RFC.2131"?>

      <?rfc include="reference.RFC.2529"?>

      <?rfc include="reference.RFC.5214"?>

      <?rfc include="reference.RFC.5569"?>
    </references>

    <section anchor="scaling" title="Intermediate Router Interworking">
      <t><xref target="no-onlink-prefix-fig"></xref> depicts a reference AERO
      operational scenario with a single intermediate router on the AERO link.
      In order to support scaling to larger numbers of nodes, the AERO link
      can deploy multiple intermediate routers, e.g., as shown in <xref
      target="chaining-fig"></xref></t>

      <t><figure anchor="chaining-fig" title="Multiple Intermediate Routers">
          <artwork><![CDATA[    +--------------+                        +--------------+
    | Intermediate |    +--------------+    | Intermediate |
    |   Router C   |    | Core Router D|    |   Router E   |
    | (default->D) |    | (A->C; G->E) |    | (default->D) |
    |    (A->B)    |    +--------------+    |    (G->F)    |
    +-------+------+                        +------+-------+
            |                                      |
    X---+---+--------------------------------------+---+---X
        |                  AERO Link                   |
  +-----+--------+                            +--------+-----+
  |  AERO Node B |                            |  AERO Node F |
  | (default->C) |                            | (default->E) |
  +--------------+                            +--------------+
         .-.                                        .-.
      ,-(  _)-.                                  ,-(  _)-.
   .-(_ IPv6  )-.                              .-(_ IPv6  )-.
 (__   EUN A     )                           (__   EUN G     )
    `-(______)-'                                `-(______)-'
          |                                          |
      +--------+                                +--------+
      | Host A |                                | Host G |
      +--------+                                +--------+
]]></artwork>
        </figure>In this example, the ingress node ('B') associates with
      intermediate router ('C'), while the egress node ('F') associates with
      intermediate router ('E'). Furthermore, intermediate routers ('C') and
      ('E') do not associate with each other directly, but rather have an
      association with a "core" router ('D') (i.e., a router that has full
      topology information concerning its associated intermediate routers).
      The core router may connect to either the AERO link, or to other
      physical or virtual links to which the intermediate routers also
      connect.</t>

      <t>When ingress node ('B') forwards a packet from source host ('A')
      toward destination host ('G'), it sends the packet to intermediate
      router ('C') in absence of more-specific forwarding information.
      Intermediate router ('C') in turn generates a "pseudo Predirect" message
      that is through some means conveyed through core router ('D') to
      intermediate router ('E'). When intermediate router ('E') receives the
      pseudo Predirect, it sends an actual AERO Predirect message to egress
      node ('F').</t>

      <t>After processing the AERO Predirect message, egress node ('F') sends
      an AERO Redirect message to intermediate router ('E'). Intermediate
      router ('E') in turn generates a "pseudo Redirect" that is through some
      means conveyed through core router ('D') to intermediate router ('C').
      When intermediate router ('C') receives the pseudo Redirect, it sends an
      actual AERO Redirect message to ingress node ('B'), thus completing the
      AERO redirection.</t>

      <t>The interworkings between intermediate and core routers (including
      the conveyance of pseudo Predirects and Redirects) must be carefully
      coordinated in a manner outside the scope of this document. In
      particular, the intermediate and core routers must ensure that no
      routing loops are formed. See <xref target="I-D.templin-ironbis"></xref>
      for an architectural discussion of coordinations between intermediate
      and core routers.</t>
    </section>
  </back>
</rfc>
