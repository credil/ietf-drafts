


Internet Engineering Task Force                                   W. Tan
Internet-Draft                                            Cloud Registry
Intended status: Standards Track                                G. Brown
Expires: June 7, 2013                                     CentralNic Ltd
                                                                J. Gould
                                                          VeriSign, Inc.
                                                        December 4, 2012


  Launch Phase Mapping for the Extensible Provisioning Protocol (EPP)
                      draft-tan-epp-launchphase-04

Abstract

   This document describes an Extensible Provisioning Protocol (EPP)
   extension mapping for the provisioning and management of domain names
   during the launch phase of a domain name registry.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on June 7, 2013.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as



Tan, et al.               Expires June 7, 2013                  [Page 1]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1.  Conventions Used in This Document  . . . . . . . . . . . .  3
   2.  Object Attributes  . . . . . . . . . . . . . . . . . . . . . .  4
     2.1.  Application Identifiers  . . . . . . . . . . . . . . . . .  4
     2.2.  Launch Phases  . . . . . . . . . . . . . . . . . . . . . .  4
     2.3.  Status Values  . . . . . . . . . . . . . . . . . . . . . .  5
       2.3.1.  State Transition . . . . . . . . . . . . . . . . . . .  6
     2.4.  Mark Validation Models . . . . . . . . . . . . . . . . . .  6
       2.4.1.  <launch:codeMark> element  . . . . . . . . . . . . . .  7
     2.5.  Mark . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
     2.6.  Contact  . . . . . . . . . . . . . . . . . . . . . . . . .  9
     2.7.  Digital Signature  . . . . . . . . . . . . . . . . . . . . 10
       2.7.1.  <smd:signedMark> element . . . . . . . . . . . . . . . 10
       2.7.2.  <smd:encodedSignedMark> element  . . . . . . . . . . . 12
   3.  EPP Command Mapping  . . . . . . . . . . . . . . . . . . . . . 14
     3.1.  EPP <check> Command  . . . . . . . . . . . . . . . . . . . 14
     3.2.  EPP <info> Command . . . . . . . . . . . . . . . . . . . . 18
     3.3.  EPP <create> Command . . . . . . . . . . . . . . . . . . . 22
       3.3.1.  Sunrise Create Form  . . . . . . . . . . . . . . . . . 22
       3.3.2.  Claims Create Form . . . . . . . . . . . . . . . . . . 31
     3.4.  EPP <update> Command . . . . . . . . . . . . . . . . . . . 33
     3.5.  EPP <delete> Command . . . . . . . . . . . . . . . . . . . 35
     3.6.  EPP <renew> Command  . . . . . . . . . . . . . . . . . . . 36
     3.7.  EPP <transfer> Command . . . . . . . . . . . . . . . . . . 36
   4.  Formal Syntax  . . . . . . . . . . . . . . . . . . . . . . . . 37
     4.1.  Launch Schema  . . . . . . . . . . . . . . . . . . . . . . 37
     4.2.  Signed Mark Schema . . . . . . . . . . . . . . . . . . . . 43
     4.3.  Mark Schema  . . . . . . . . . . . . . . . . . . . . . . . 45
   5.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 49
   6.  Change History . . . . . . . . . . . . . . . . . . . . . . . . 49
     6.1.  Change from 00 to 01 . . . . . . . . . . . . . . . . . . . 49
     6.2.  Change from 01 to 02 . . . . . . . . . . . . . . . . . . . 49
     6.3.  Change from 02 to 03 . . . . . . . . . . . . . . . . . . . 49
     6.4.  Change from 03 to 04 . . . . . . . . . . . . . . . . . . . 50
   7.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 50
   8.  Security Considerations  . . . . . . . . . . . . . . . . . . . 51
   9.  Normative References . . . . . . . . . . . . . . . . . . . . . 51
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 52








Tan, et al.               Expires June 7, 2013                  [Page 2]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


1.  Introduction

   This document describes an extension mapping for version 1.0 of the
   Extensible Provisioning Protocol (EPP) [RFC5730].  This EPP mapping
   specifies a flexible schema that can be used to implement several
   common use cases related to the provisioning and management of launch
   phase extension in a domain name registry.

   It is typical for domain registries to operate in special modes
   within certain periods of time to facilitate allocation of domain
   names.  This document uses the term "launch phase" and the shorter
   form "launch" to refer to such a period.

   The EPP domain name mapping [RFC5731] is designed for the steady
   state operation of a registry.  During the launch, the interface used
   at each phase of the launch could be different from what is defined
   in EPP domain name mapping [RFC5731]. for example, registries
   typically accept multiple applications for a given domain name during
   the "sunrise" launch phase, referred to as a launch application.  A
   launch registration is used to refer to a registration made during a
   launch phase when the server uses a first-come-first-serve model.
   Even in a first-come-first-serve model additional steps and
   information might be required to support a launch phase, like the
   passing of trademark information on a create.  In addition, the
   Proposed Trademark Claims Model [1] defines a registry interface for
   the Trademark Claims or "claims" launch phase that includes support
   for presenting a Trademark Claims Notice to the Registrant.  This
   document proposes an extension to the domain name extension in order
   to unambiguously manage the various launch phases known.

1.1.  Conventions Used in This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

   XML is case sensitive.  Unless stated otherwise, XML specifications
   and examples provided in this document MUST be interpreted in the
   character case presented in order to develop a conforming
   implementation.

   "launch-1.0" is used as an abbreviation for
   "urn:ietf:params:xml:ns:launch-1.0".  The XML namespace prefix
   "launch" is used, but implementations MUST NOT depend on it and
   instead employ a proper namespace-aware XML parser and serializer to
   interpret and output the XML documents.

   "signedMark-1.0" is used as an abbreviation for



Tan, et al.               Expires June 7, 2013                  [Page 3]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   "urn:ietf:params:xml:ns:signedMark-1.0".  The XML namespace prefix
   "smd" is used, but implementations MUST NOT depend on it and instead
   employ a proper namespace-aware XML parser and serializer to
   interpret and output the XML documents.

   "mark-1.0" is used as an abbreviation for
   "urn:ietf:params:xml:ns:mark-1.0".  The XML namespace prefix "mark"
   is used, but implementations MUST NOT depend on it and instead employ
   a proper namespace-aware XML parser and serializer to interpret and
   output the XML documents.


2.  Object Attributes

   This extension adds additional elements to the EPP domain name
   mapping [RFC5731].  Only those new elements are described here.

2.1.  Application Identifiers

   Servers MAY allow multiple applications, referred to as a launch
   application, of a given domain name during its launch phase
   operations.  Upon receiving a request to create a domain name, the
   server creates an application object corresponding to the request and
   assigns an application identifier for the application and returns it
   to the client with the <launch:applicationID> element.  In order to
   facilitate correlation, all subsequent launch operations on the
   application object MUST be qualified by the previously assigned
   application identifier using the <launch:applicationID> element.

2.2.  Launch Phases

   The server MAY support multiple launch phases sequentially or
   simultaneously.  The <launch:phase> element MUST be included by the
   client to define the target launch phase of the command.

   The following launch phase values are defined:
   sunrise  Phase when trademark holders can submit registration
      applications with trademark information that can be validated by
      the server.
   landrush  Post sunrise phase when non-trademark holders are allowed
      to register domain names with steps taken to address a large
      volume of initial registrations.
   claims1  Trademark claims phase 1 as defined by Trademark
      Clearinghouse model of displaying a full, detailed claims notice
      to clients for domain names that match trademarks.






Tan, et al.               Expires June 7, 2013                  [Page 4]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   claims2  Trademark claims phase 2 as defined by Trademark
      Clearinghouse model of displaying a short, educational claims
      notice to clients for domain names that match trademarks that opt
      into the service.
   open  Post launch phase that is also referred to as "steady state".
      Servers MAY require additional trademark protection with this
      phase.
   custom  A custom server launch phase that is defined using the "name"
      attribute.

   For extensibility the <launch:phase> element includes an OPTIONAL
   "name" attribute that can define a sub-phase or the full name of the
   phase when the <launch:phase> element has the "custom" value.  For
   example, the "claims1" launch phase could have two sub-phases that
   include "landrush" and "open".

2.3.  Status Values

   A launch application object MAY have a status value.  The <launch:
   status> element is used to convey extended status pertaining to the
   application object, beyond what is specified in the object mapping
   for this application object.

   The following status values are defined using the required "s"
   attribute:
   pending:  the initial state of a newly-created application object.
   validated:  the application meets relevant registry rules.
   invalid:  the application does not validate according to registry
      rules.
   pendingAuction:  the application is pending based on results of an
      auction.
   allocated:  one of two possible end states of an application object;
      the object corresponding to the application has been provisioned.
   rejected:  the other possible end state; the object was not
      provisioned.
   custom:  A custom status that is defined using the "name" attribute.

   Each status value MAY be accompanied by a string of human-readable
   text that describes the rationale for the status applied to the
   object.  The OPTIONAL "lang" attribute MAY be present to identify the
   language if the negotiated value is something other than the default
   value of "en" (English).

   For extensibility the <launch:status> element includes an OPTIONAL
   "name" attribute that can define a sub-status or the full name of the
   status when the status value is "custom".  The server SHOULD NOT use
   of the "custom" status value.




Tan, et al.               Expires June 7, 2013                  [Page 5]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   Certain status values MAY be combined.  For example, an application
   can be invalid and rejected.  Additionally certain statuses MAY be
   skipped.  For example, an application MAY immediately start at the
   allocated status or an application MAY skip the pendingAuction status
   if server does not support an auction.  If a <domain:create>
   processes a request synchronously without the use of an intermediate
   application, than an Application Identifier (Section 2.1) is not
   needed along with the application status.

2.3.1.  State Transition


                               | request
                               v
                          +---------+
                          | pending |
                          +----+----+
                               |
                               |
          +--------------+-----+-----------+--------------+
          |              |                 |              |
          v              v                 v              v
    +-----------+   +---------+        +-------+      +-------+
    |           |   |         |       /         \    /         \
    | validated |   | invalid +----->| rejected  |  | allocated |
    |           |   |         |       \         /    \         /
    +----+------+   +----+----+        +-------+      +-------+
         |               |                 ^              ^
         |               |                 |              |
         |               +-----------------+              |
         |                                 |              |
         +---------------------------------+              |
         |                                 ^              |
         |                                 |              |
         |                        +--------+-------+      |
         |                        |                |      |
         +----------------------->| pendingAuction +------+
                                  |                |
                                  +----------------+


                                 Figure 1

2.4.  Mark Validation Models

   A server MUST support one of four models for validating the trademark
   information:




Tan, et al.               Expires June 7, 2013                  [Page 6]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   code  Use of a mark code by itself to validate that the mark matches
      the domain name.  This model is supported using the <launch:
      codeMark> element with just the <launch:code> element.
   mark  The mark information is passed without any other validation
      element.  The server will use some custom form of validation to
      validate that the mark information is authentic.  This model is
      supported using the <launch:codeMark> element with just the <mark:
      mark> element.
   code with mark:  A code is used along with the mark information by
      the server to validate the mark utilizing an external party.  The
      code represents some form of secret that matches the mark
      information passed.  This model is supported using the <launch:
      codeMark> element that contains both the <launch:code> and the
      <mark:mark> elements.
   signed mark:  The mark information is digitally signed as described
      in the Digital Signature (Section 2.7) section.  The digital
      signature can be directly validated by the server using the public
      key of the external party that created the signed mark using it's
      private key.  This model is supported using the <smd:signedMark>
      (Section 2.7.1) and <smd:encodedSignedMark> (Section 2.7.2)
      elements.

   More than one <launch:codeMark>, <smd:signedMark>, or <smd:
   encodedSignedMark> element MAY be specified.  The maximum number of
   marks per domain name is up to server policy.

2.4.1.  <launch:codeMark> element

   The <launch:codeMark> element that is used by the "code", "mark", and
   "code with mark" validation models, has the following child elements:

   <launch:code>:  OPTIONAL mark code used to validate the <launch:mark>
      information.  The mark code can be a mark specific secret value
      that the server can verify against a third party.
   <mark:mark>:  OPTIONAL mark information with child elements defined
      in the Mark (Section 2.5) section.















Tan, et al.               Expires June 7, 2013                  [Page 7]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   The following is an example <launch:codeMark> element with both a
   <launch:code> and <launch:mark> element.

   <launch:codeMark>
     <launch:code>49FD46E6C4B45C55D4AC</launch:code>
     <mark:mark xmlns:mark="urn:ietf:params:xml:ns:mark-1.0">
       <mark:name>Example One</mark:name>
       <mark:label>example-one</mark:label>
       <mark:label>exampleone</mark:label>
       <mark:issuer>IP Clearinghouse</mark:issuer>
       <mark:number>GE 3933232</mark:number>
       <mark:type>REG-TM-WORD</mark:type>
       <mark:class>1</mark:class>
       <mark:entitlement>owner</mark:entitlement>
       <mark:regDate>2011-09-09</mark:regDate>
       <mark:effectiveDate>2011-10-09</mark:effectiveDate>
       <mark:exDate>2013-09-09</mark:exDate>
       <mark:country>AU</mark:country>
       <mark:region>VIC</mark:region>
       <mark:owner>
         <mark:org>Example Inc.</mark:org>
       </mark:owner>
       <mark:contact>
         <mark:name>John Doe</mark:name>
         <mark:org>Example Inc.</mark:org>
         <mark:addr>
           <mark:street>123 Example Dr.</mark:street>
           <mark:street>Suite 100</mark:street>
           <mark:city>Reston</mark:city>
           <mark:sp>VA</mark:sp>
           <mark:pc>20190</mark:pc>
           <mark:cc>US</mark:cc>
         </mark:addr>
         <mark:voice x="1234">+1.7035555555</mark:voice>
         <mark:fax>+1.7035555556</mark:fax>
         <mark:email>jdoe@example.tld</mark:email>
       </mark:contact>
     </mark:mark>
   </launch:codeMark>

2.5.  Mark

   A <mark:mark> element describes an applicant's prior right to a given
   domain name that is used with the "mark", "mark with code", and the
   "signed mark" validation models.

   The child elements of the <mark:mark> element include:




Tan, et al.               Expires June 7, 2013                  [Page 8]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   <mark:id>:  an identifier for the mark.  This identifier MUST be
      unique among all marks associated with an application object.
   <mark:name>:  The registered trademark text string.  This value is
      free-form text that MAY be mapped to one or more <mark:label>
      values.
   <mark:label>:  Zero or more domain name labels that corresponds to
      the <mark:name>.  Each <mark:label> can match directly to the
      domain name after adding the parent zone.
   <mark:issuer>:  name of the authority which issued the right
      (trademark clearinghouse, trademark office, company registration
      bureau, etc.)
   <mark:number>:  the registration number of the right (trademark
      number, company registration number, etc.)
   <mark:type>:  indicates the applicant's entitlement to the mark
      (owner, licensee, etc.)
   <mark:class>:  zero or more Nice Classification class numbers as
      defined in the Nice List of Classes [2]
   <mark:entitlement>:  indicates the applicant's entitlement to the
      mark (owner, licensee, etc.)
   <mark:regDate>:  the date of registration / application of the mark
   <mark:effectiveDate>:  the date the mark becomes effective
   <mark:exDate>:  the date of expiration of the mark
   <mark:country>:  indicates the country in which the mark is valid.
      This may be a two-character code from [WIPO.ST3]
   <mark:region>:  indicates the name of a city, state, province or
      other geographic region in which the mark is valid.
   <mark:owner>:  Owner information using the Contact (Section 2.6)
      elements.
   <mark:contact>:  Contact for the owner using the Contact
      (Section 2.6) element.

   All of the child elements are OPTIONAL.  Server policy may place
   additional constraints on the format and requirements of such
   elements.

2.6.  Contact

   The contact information contained within the Mark (Section 2.5)
   cannot be defined via a contact identifier as defined in the EPP
   contact mapping [RFC5733] since it is contact information defined
   outside of the server.  Some of the contact elements defined in EPP
   contact mapping [RFC5733] are replicated in this extension.

   The child elements of a contact using either the <mark:owner> or
   <mark:contact> elements include:






Tan, et al.               Expires June 7, 2013                  [Page 9]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   <mark:name>:  name of the individual or role represented by the
       contact.
   <mark:org>:  name of the organization with which the contact is
       affiliated.
   <mark:addr>:  address information associated with the contact. the
       <mark:addr> element contains the following child elements:

       <mark:street>  zero to three <mark:street> elements that contain
           the contact's street address.
       <mark:city>  contact's city
       <mark:sp>  contact's state or province
       <mark:cc>  contact's country code
   <mark:voice>:  contact's voice telephone number
   <mark:fax>:  contact's facsimile telephone number
   <mark:email>:  contact's email address

   All of the child elements are OPTIONAL.  Server policy may place
   additional constraints on the format and requirements of such
   elements.

2.7.  Digital Signature

   Digital signatures MAY be used by the server to validate either the
   mark information, when using the "signed mark" validation model with
   the <smd:signedMark> element or the <smd:encodedSignedMark> element.
   The digital signatures are handled using an XML Signature [3] around
   the entire <smd:signedMark> element.  The <smd:encodedSignedMark>
   element includes an encoded form of the <smd:signedMark> element like
   the use of "base64" encoding.  Once the digital signature is
   validated using the appropriate public key, the server can trust all
   of the information included in the <smd:signedMark> element.  It's up
   to server policy how the public key is transferred.

   To have the digital signature cover all of the elements of the <smd:
   signedMark> element, the XML Signature [3] IDREF URI is set to the
   "id" attribute value of the <smd:signedMark> element and the
   Transform "http://www.w3.org/2000/09/xmldsig#enveloped-signature" is
   used.  The digital signature covers the <smd:signedMark> element and
   the Signature element is embedded in the <smd:signedMark> element.

2.7.1.  <smd:signedMark> element

   The <smd:signedMark> is the fragment of XML that is digitally signed
   using XML Signature [3].  The <smd:signedMark> includes a required
   "id" attribute of type XSD ID for use with an IDREF URI from the
   Signature element.  The child elements of the <smd:signedMark>
   element include:




Tan, et al.               Expires June 7, 2013                 [Page 10]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   <smd:serial>:  Signature serial number that that can be compared with
      a revocation list by the server.
   <smd:exDate>:  OPTIONAL date and time that the <smd:signedMark>
      expires.  The server MUST NOT accept a <smd:signedMark> that has
      expired.  No <smd:exDate> element indicates that there is no
      expiry.
   <mark:mark>:  Trademark information as defined in the Mark
      (Section 2.5) section.
   <Signature>:  XML Signature [3] for the <smd:signedMark>.  Use of a
      namespace prefix, like "dsig", is recommended for the
      "http://www.w3.org/TR/xmldsig-core/" elements.

   The following is an example <smd:signedMark> using the XML
   Signature [3] to sign all of the elements of <smd:signedMark>
   element.

  <smd:signedMark id="signedMark"
   xmlns:smd="urn:ietf:params:xml:ns:signedMark-1.0">
   <smd:serial>123456</smd:serial>
   <smd:zone>newtld</smd:zone>
   <smd:exDate>2012-08-16T09:00:00.0Z</smd:exDate>
   <mark:mark
    xmlns:mark="urn:ietf:params:xml:ns:mark-1.0">
     <mark:name>Example One</mark:name>
     <mark:label>example-one</mark:label>
     <mark:label>exampleone</mark:label>
     <mark:issuer>IP Clearinghouse</mark:issuer>
     <mark:number>GE 3933232</mark:number>
     <mark:type>REG-TM-WORD</mark:type>
     <mark:class>1</mark:class>
     <mark:entitlement>owner</mark:entitlement>
     <mark:regDate>2011-09-09</mark:regDate>
     <mark:effectiveDate>2011-10-09</mark:effectiveDate>
     <mark:exDate>2013-09-09</mark:exDate>
     <mark:country>AU</mark:country>
     <mark:region>VIC</mark:region>
     <mark:owner>
      <mark:org>Example Inc.</mark:org>
     </mark:owner>
     <mark:contact>
      <mark:name>John Doe</mark:name>
      <mark:org>Example Inc.</mark:org>
      <mark:addr>
       <mark:street>123 Example Dr.</mark:street>
       <mark:street>Suite 100</mark:street>
       <mark:city>Reston</mark:city>
       <mark:sp>VA</mark:sp>
       <mark:pc>20190</mark:pc>



Tan, et al.               Expires June 7, 2013                 [Page 11]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


       <mark:cc>US</mark:cc>
      </mark:addr>
      <mark:voice x="1234">+1.7035555555</mark:voice>
      <mark:fax>+1.7035555556</mark:fax>
      <mark:email>jdoe@example.tld</mark:email>
     </mark:contact>
   </mark:mark>
   <dsig:Signature
         xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
     <dsig:SignedInfo>
     <dsig:CanonicalizationMethod
 Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
     <dsig:SignatureMethod
 Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
     <dsig:Reference URI="#signedMark">
       <dsig:Transforms>
         <dsig:Transform
 Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
       </dsig:Transforms>
       <dsig:DigestMethod
         Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
       <dsig:DigestValue>6651T5s9GZgQOxifdCFmDfSIoUc=</dsig:DigestValue>
     </dsig:Reference>
   </dsig:SignedInfo>
     <dsig:SignatureValue>
 Gm7RnEb6jcijKcgmwEmxJ6j1L0vt2wFyXv3oKc9
 a4b8nMOKdec8S3tG2hSx/NZa0RFHvx5zMsH/M
 jmxzrTBbl5d7W8Qql5VsW4XanSjJ+UgILs9k6XgVtZE2EvffMLBiL4xbCJM48ew
 RYRY7lVEzoNms91pmm3U5IlNRNjU/YFqZ1pXhhrhyhPjSi9Uon8FnAJaiBEfHcj
 G6815IJV/9RT+MTXri7i0s82CqIS4wDGbGpyZAs7/kDY3A3upqSOwTtrFSCFX1F
 +Craec72lBB/dKJHxmoVkbIO5KQhqIOd+E+h2kguE++RHKa4xoBIeyTgWqpWcLu
 MoFpM+GxwFcpSA==
      </dsig:SignatureValue>
    </dsig:Signature>
  </smd:signedMark>

2.7.2.  <smd:encodedSignedMark> element

   The <smd:encodedSignedMark> element contains an encoded form of the
   digitally signed <smd:signedMark> element, described in
   Section 2.7.1, with the encoding defined by the "encoding" attribute
   with the default "encoding" value of "base64".  The "base64" encoded
   text of the <smd:encodedSignedMark> element MUST conform to
   [RFC2045].







Tan, et al.               Expires June 7, 2013                 [Page 12]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   The following is an example an <smd:encodedSignedMark> element that
   uses the default "base64" for encoding a <smd:signedMark> element.

          <smd:encodedSignedMark
           xmlns:smd="urn:ietf:params:xml:ns:signedMark-1.0">
   D94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c21kOnN
   pZ25lZE1hcmsgeG1sbnM6c21kPSJ1cm46aWV0ZjpwYXJhbXM6eG1sOm5zO
   nNpZ25lZE1hcmstMS4wIiBpZD0ic2lnbmVkTWFyayI-PHNtZDpzZXJpYWw
   -MTIzNDU2PC9zbWQ6c2VyaWFsPjxzbWQ6ZXhEYXRlPjIwMTItMTEtMjlUM
   Tg6MTY6NTQuMDg4MFo8L3NtZDpleERhdGU-PG1hcms6bWFyayB4bWxuczp
   tYXJrPSJ1cm46aWV0ZjpwYXJhbXM6eG1sOm5zOm1hcmstMS4wIj48bWFya
   zpuYW1lPkV4YW1wbGUgT25lPC9tYXJrOm5hbWU-PG1hcms6bGFiZWw-ZXh
   hbXBsZS1vbmU8L21hcms6bGFiZWw-PG1hcms6bGFiZWw-ZXhhbXBsZW9uZ
   TwvbWFyazpsYWJlbD48bWFyazppc3N1ZXI-SVAgQ2xlYXJpbmdob3VzZTw
   vbWFyazppc3N1ZXI-PG1hcms6bnVtYmVyPkdFIDM5MzMyMzI8L21hcms6b
   nVtYmVyPjxtYXJrOm51bWJlcj5vd25lcjwvbWFyazpudW1iZXI-PG1hcms
   6cmVnRGF0ZT4yMDEyLTExLTI5VDE4OjE2OjU0LjA3NDZaPC9tYXJrOnJlZ
   0RhdGU-PG1hcms6ZXhEYXRlPjIwMTItMTEtMjlUMTg6MTY6NTQuMDc0Nlo
   8L21hcms6ZXhEYXRlPjxtYXJrOmNvdW50cnk-QVU8L21hcms6Y291bnRye
   T48bWFyazpyZWdpb24-VklDPC9tYXJrOnJlZ2lvbj48L21hcms6bWFyaz4
   8ZHNpZzpTaWduYXR1cmUgeG1sbnM6ZHNpZz0iaHR0cDovL3d3dy53My5vc
   mcvMjAwMC8wOS94bWxkc2lnIyI-PGRzaWc6U2lnbmVkSW5mbz48ZHNpZzp
   DYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3d
   y53My5vcmcvVFIvMjAwMS9SRUMteG1sLWMxNG4tMjAwMTAzMTUjV2l0aEN
   vbW1lbnRzIi8-PGRzaWc6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0ia
   HR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIi8
   -PGRzaWc6UmVmZXJlbmNlIFVSST0iI3NpZ25lZE1hcmsiPjxkc2lnOlRyY
   W5zZm9ybXM-PGRzaWc6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d
   3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1c
   mUiLz48L2RzaWc6VHJhbnNmb3Jtcz48ZHNpZzpEaWdlc3RNZXRob2QgQWx
   nb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc
   2hhMSIvPjxkc2lnOkRpZ2VzdFZhbHVlPktIdVFrdFdUMnRYbXg4Y2ZWd2N
   vZ0JSUm5oRT08L2RzaWc6RGlnZXN0VmFsdWU-PC9kc2lnOlJlZmVyZW5jZ
   T48L2RzaWc6U2lnbmVkSW5mbz48ZHNpZzpTaWduYXR1cmVWYWx1ZT5RdWk
   2d2xLVUlRcHMxS2N6ajhUaTVuNTBjaTVDc2pML2k2YjBwS0Z2NG16ZENhc
   WpWcXVvVDFiSzJCZnhKNG0rbXJiOWxLeFlrVnNFCnB4QnloSG5KSHpSMXV
   1MG1NMmt4VURyWkVCc0dpV3FuaHMzQVBxOTJBcVdGZHZnUmV6ZHcycmNVb
   Vg3dGJyeWNGM3ZDMEJmRUg4RHoKb2FIUFRQb24xTUxObzF5bGtYTDA5bWJ
   qTHVhRlJSS3Z2UCs4djQ1VFJXRmkrbVJ0akJvMGg4blFiNTNtR2lKaU1Oe
   kFDaDBtK3pFeAp2bmxEUmRpdWJFZVVWbG9LV2dMY1BiSkd4QmFWL1gvQjQ
   vRnVRbXEzclcxaXNZOUlEYzA3U3ZheEZ0a1l4emVra25GQkNCSWNibXFTC
   nlOckMvOEp4Y2RRSHN0TUZWc1Z2SjdWUFJqS2VZM0RLcUwrTGhRPT08L2R
   zaWc6U2lnbmF0dXJlVmFsdWU-PC9kc2lnOlNpZ25hdHVyZT48L3NtZDpza
   WduZWRNYXJrPg
          </smd:encodedSignedMark>






Tan, et al.               Expires June 7, 2013                 [Page 13]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


3.  EPP Command Mapping

   A detailed description of the EPP syntax and semantics can be found
   in the EPP core protocol specification [RFC5730].  The command
   mappings described here are specifically for use in the Launch Phase
   Extension.

   This mapping is designed to be flexible, requiring only a minimum set
   of required elements.

   While it is meant to serve several use cases, it does not prescribe
   any interpretation by the client or server.  Such processing is
   typically highly policy-dependent and therefore specific to
   implementations.

   Operations on application objects are done via one or more of the
   existing EPP verbs defined in the EPP domain name mapping [RFC5731].
   Registries may choose to support a subset of the operations.

3.1.  EPP <check> Command

   This extension defines additional elements to extend the EPP <check>
   command and response to be used in conjunction with the EPP domain
   name mapping [RFC5731].

   This extension defines a new command called the Claims Check Command
   that is used to determine whether or not there are any matching
   trademarks, in the specified launch phase, for each domain name
   passed in the command.  The availability check information defined in
   the EPP domain name mapping [RFC5731] MUST NOT be returned for the
   Claims Check Command.  Instead of returning whether the domain name
   is available the Claims Check Command will return whether or not at
   least one matching trademark exists for the domain name.  If there is
   at least one matching trademark that exists for the domain name a
   <launch:claimKey> element is returned.  The value of that the
   <launch:claimKey> element can be used with an info service of a third
   party trademark provider like the Trademark Clearinghouse (TMCH) for
   getting the information needed to generate the trademark claims
   notice.  The third party trademark provider should also return a
   unique notice identifier that can be passed in the <launch:noticeID>
   element of the extension to the Create Command (Section 3.3).  The
   <domain:name> elements in the EPP <check> command of EPP domain name
   mapping [RFC5731] define the domain names to check for matching
   trademarks.  The <launch:check> element contains the following child
   elements:






Tan, et al.               Expires June 7, 2013                 [Page 14]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   <launch:phase>  The phase with the value of "claims1" or "claims2" to
       indicate it as a Claims Check Command.  The "claims1" Claims
       Check Command will match the <domain:name> against the full list
       of trademark labels and the "claims2" Claims Check Command will
       match the <domain:name> against the list of trademark labels that
       opted into the "claims2" launch phase.

   Example Claims Check Command using the <check> domain command and the
   <launch:check> extension to determine if "example1.tld" and
   "example2.tld" have any matching trademarks during the "claims1"
   launch phase.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
      <check>
       <domain:check
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>example1.tld</domain:name>
         <domain:name>example2.tld</domain:name>
       </domain:check>
      </check>
      <extension>
       <launch:check
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>claims1</launch:phase>
       </launch:check>
      </extension>
      <clTRID>ABC-12345</clTRID>
     </command>
   </epp>




















Tan, et al.               Expires June 7, 2013                 [Page 15]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   Example Claims Check Command using the <check> domain command and the
   <launch:check> extension to determine if "example3.tld" and
   "example4.tld" have any matching trademarks that opted into the
   "claims2" launch phase.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
      <check>
       <domain:check
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>example3.tld</domain:name>
         <domain:name>example4.tld</domain:name>
       </domain:check>
      </check>
      <extension>
       <launch:check
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>claims2</launch:phase>
       </launch:check>
      </extension>
      <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   If the <check> command has been processed successfully, the EPP
   <resData> element MUST contains a child <launch:chkData> element that
   identifies the launch namespace.  The <launch:chkData> element
   contains the following child elements:

   <launch:phase>  the phase with a value of "claims1" or "claims2" that
       matches the associated Claims Check Command <launch:phase>.
   <launch:cd>  One or more <launch:cd> elements that contain the
       following child elements:

       <launch:name>  Contains the fully qualified name of the queried
           domain name.  This element MUST contain an "exists" attribute
           whose value indicates if a matching trademark exists for the
           domain name.  A value of "1" or "true" means that a matching
           trademark does exist for the claims launch phase.  A value of
           "0" or "false" means that a matching trademark does not
           exist.
       <launch:claimKey>  An OPTIONAL claim key that MAY be passed to an
           info service of a third party trademark provider like the
           Trademark Clearinghouse (TMCH) for getting the information
           needed to generate the trademark claims notice.  The <launch:
           claimKey> is used as the key for the query in place of the
           domain name to securely query the service without using a



Tan, et al.               Expires June 7, 2013                 [Page 16]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


           well-known value like a domain name.

   Example Claims Check Response when no matching trademarks are found
   for the domain name example1.tld and matching trademarks are found
   for the domain name example2.tld for the "claims1" launch phase.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
        <msg>Command completed successfully</msg>
       </result>
       <resData>
        <launch:chkData
         xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>claims1</launch:phase>
         <launch:cd>
           <launch:name exists="0">example1.tld</launch:name>
         </launch:cd>
         <launch:cd>
           <launch:name exists="1">example2.tld</launch:name>
           <launch:claimKey>abc123</launch:claimKey>
         </launch:cd>
        </launch:chkData>
       </resData>
       <trID>
        <clTRID>ABC-12345</clTRID>
        <svTRID>54322-XYZ</svTRID>
       </trID>
     </response>
   </epp>




















Tan, et al.               Expires June 7, 2013                 [Page 17]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   Example Claims Check Response when no matching trademarks are found
   for the domain name example3.tld and matching trademarks are found
   for the domain name example4.tld for the "claims2" launch phase.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
        <msg>Command completed successfully</msg>
       </result>
       <resData>
        <launch:chkData
         xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>claims2</launch:phase>
         <launch:cd>
           <launch:name exists="0">example3.tld</launch:name>
         </launch:cd>
         <launch:cd>
           <launch:name exists="1">example4.tld</launch:name>
           <launch:claimKey>abc123</launch:claimKey>
         </launch:cd>
        </launch:chkData>
       </resData>
       <trID>
        <clTRID>ABC-12345</clTRID>
        <svTRID>54322-XYZ</svTRID>
       </trID>
     </response>
   </epp>

3.2.  EPP <info> Command

   This extension defines additional elements to extend the EPP <info>
   command and response to be used in conjunction with the EPP domain
   name mapping [RFC5731].

   The EPP <info> command is used to retrieve information for a launch
   phase registration or application.  The Application Identifier
   (Section 2.1) returned in the <launch:creData> element of the Create
   Response (Section 3.3) is used for retrieving information for a
   launch application.  A <launch:info> element is sent along with the
   regular <info> domain command.  The <launch:info> element contains
   the following child elements:








Tan, et al.               Expires June 7, 2013                 [Page 18]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   <launch:phase>  The phase during which the application or
       registration was submitted or is associated with.  Server policy
       defines the phases that are supported.
   <launch:applicationID>  OPTIONAL application identifier of the launch
       application.

   Example <info> domain command with the <launch:info> extension to
   retrieve information for the sunrise application for example.tld and
   application identifier "abc123".

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
      <info>
       <domain:info
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>example.tld</domain:name>
       </domain:info>
      </info>
      <extension>
       <launch:info
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>sunrise</launch:phase>
         <launch:applicationID>abc123</launch:applicationID>
       </launch:info>
      </extension>
      <clTRID>ABC-12345</clTRID>
     </command>
   </epp>






















Tan, et al.               Expires June 7, 2013                 [Page 19]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   Example <info> domain command with the <launch:info> extension to
   retrieve information for the sunrise registration for example.tld.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
      <info>
       <domain:info
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>example.tld</domain:name>
       </domain:info>
      </info>
      <extension>
       <launch:info
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>sunrise</launch:phase>
       </launch:info>
      </extension>
      <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   If the query was successful, the server replies with an <launch:
   infData> element along with the regular EPP <resData>.  The <launch:
   infData> contains the following child elements:

   <launch:phase>  the phase during which the application was submitted
       or is associated with that matches the associated <info> command
       <launch:phase>.
   <launch:applicationID>  OPTIONAL application identifier of the launch
       application.
   <launch:status>  OPTIONAL status of the launch application using one
       of the supported status values (Section 2.3).
   <mark:mark>  zero or more <mark:mark> elements.  The <mark:mark>
       child elements are defined in the <mark:mark> element
       (Section 2.5) section.

   Example <info> domain response using the <launch:infData> extension
   with the mark information.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
         <msg>Command completed successfully</msg>
       </result>
       <resData>
         <domain:infData



Tan, et al.               Expires June 7, 2013                 [Page 20]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>example.tld</domain:name>
           <domain:roid>EXAMPLE1-REP</domain:roid>
           <domain:status s="pendingCreate"/>
           <domain:registrant>jd1234</domain:registrant>
           <domain:contact type="admin">sh8013</domain:contact>
           <domain:contact type="tech">sh8013</domain:contact>
           <domain:clID>ClientX</domain:clID>
           <domain:crID>ClientY</domain:crID>
           <domain:crDate>2012-04-03T22:00:00.0Z</domain:crDate>
           <domain:authInfo>
             <domain:pw>2fooBAR</domain:pw>
           </domain:authInfo>
         </domain:infData>
       </resData>
       <extension>
         <launch:infData
          xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
           <launch:phase>sunrise</launch:phase>
             <launch:applicationID>abc123</launch:applicationID>
             <launch:status s="pending"/>
             <mark:mark
               xmlns:mark="urn:ietf:params:xml:ns:mark-1.0">
               <mark:name>Hello</mark:name>
               <mark:issuer>IP Clearinghouse</mark:issuer>
               <mark:number>GE 3933232</mark:number>
               <mark:type>REG-TM-WORD</mark:type>
               <mark:class>1</mark:class>
               <mark:entitlement>owner</mark:entitlement>
               <mark:regDate>2011-09-09</mark:regDate>
               <mark:effectiveDate>2011-10-09</mark:effectiveDate>
               <mark:exDate>2013-09-09</mark:exDate>
               <mark:country>AU</mark:country>
               <mark:region>VIC</mark:region>
               <mark:owner>
                 <mark:org>Example Inc.</mark:org>
               </mark:owner>
               <mark:contact>
                 <mark:name>John Doe</mark:name>
                 <mark:org>Example Inc.</mark:org>
                 <mark:addr>
                   <mark:street>123 Example Dr.</mark:street>
                   <mark:street>Suite 100</mark:street>
                   <mark:city>Reston</mark:city>
                   <mark:sp>VA</mark:sp>
                   <mark:pc>20190</mark:pc>
                   <mark:cc>US</mark:cc>
                 </mark:addr>



Tan, et al.               Expires June 7, 2013                 [Page 21]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


                 <mark:voice x="1234">+1.7035555555</mark:voice>
                 <mark:fax>+1.7035555556</mark:fax>
                 <mark:email>jdoe@example.tld</mark:email>
               </mark:contact>
            </mark:mark>
         </launch:infData>
       </extension>
       <trID>
         <clTRID>ABC-12345</clTRID>
         <svTRID>54322-XYZ</svTRID>
       </trID>
     </response>
   </epp>

3.3.  EPP <create> Command

   There are two forms of the extension to the EPP <create> command that
   are dependent on the supported launch phases (Section 2.2) as defined
   below:

   sunrise  The EPP <create> command with the "sunrise" launch phase is
      used to submit an registration with trademark information that can
      be verified by the server with the <domain:name> value.  The
      Sunrise Create Form (Section 3.3.1) is used for the "sunrise"
      launch phase.  Optionally, the server can support multiple
      overlapping applications that are chosen asynchronously with a
      server generated Application Identifier (Section 2.1) for later
      reference.
   landrush  The EPP <create> command with the "landrush" launch phase
      is undefined but the form supported is up to server policy.
   claims1  The EPP <create> command with the "claims1" launch phase is
      used to pass the information associated with the presentation and
      acceptance of the "claims1" claims notice.  The Claims Create Form
      (Section 3.3.2) is used for the "claims1" launch phase.
   claims2  The EPP <create> command with the "claims2" launch phase is
      used to pass the information associated with the presentation of
      the "claims1" claims notice.  The Claims Create Form
      (Section 3.3.2) is used for the "claims2" launch phase.
   open  The EPP <create> command with the "open" launch phase is
      undefined but the form supported is up to server policy.
   custom  The EPP <create> command with the "custom" launch phase is
      undefined but the form supported is up to server policy.

3.3.1.  Sunrise Create Form

   The Sunrise Create Form of the extension to the EPP domain name
   mapping [RFC5731] includes the verifiable trademark information that
   the server uses to match against the domain name to authorize the



Tan, et al.               Expires June 7, 2013                 [Page 22]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   domain create.  A server MUST support one of four models in Claim
   Validation Models (Section 2.4) to verify the trademark information
   passed by the client.

   A <launch:create> element is sent along with the regular <create>
   domain command.  The <launch:create> element contains the following
   child elements:

   <launch:phase>  The launch phase for the create like the "sunrise"
       launch phase.
   <launch:codeMark> or <smd:signedMark> or <smd:encodedSignedMark>
       <launch:codeMark>  zero or more <launch:codeMark> elements.  The
           <launch:codeMark> child elements are defined in the <launch:
           codeMark> element (Section 2.4.1) section.
       <smd:signedMark>  zero or more <smd:signedMark> elements.  The
           <smd:signedMark> child elements are defined in the <smd:
           signedMark> element (Section 2.7.1) section.
       <smd:encodedSignedMark>  zero or more <smd:encodedSignedMark>
           elements.  The <smd:encodedSignedMark> child elements are
           defined in the <smd:encodedSignedMark> element
           (Section 2.7.2) section.






























Tan, et al.               Expires June 7, 2013                 [Page 23]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   Following is an example <create> domain command using the <launch:
   create> extension, following the "code" validation model, with
   multiple sunrise codes.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <create>
         <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>example.tld</domain:name>
           <domain:registrant>jd1234</domain:registrant>
           <domain:contact type="admin">sh8013</domain:contact>
           <domain:contact type="tech">sh8013</domain:contact>
           <domain:authInfo>
             <domain:pw>2fooBAR</domain:pw>
           </domain:authInfo>
         </domain:create>
       </create>
       <extension>
         <launch:create
          xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
           <launch:phase>sunrise</launch:phase>
           <launch:codeMark>
             <launch:code>49FD46E6C4B45C55D4AC</launch:code>
           </launch:codeMark>
           <launch:codeMark>
             <launch:code>49FD46E6C4B45C55D4AD</launch:code>
           </launch:codeMark>
           <launch:codeMark>
             <launch:code>49FD46E6C4B45C55D4AE</launch:code>
           </launch:codeMark>
        </launch:create>
       </extension>
       <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   Following is an example <create> domain command using the <launch:
   create> extension, following the "mark" validation model, with the
   mark information.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <create>
         <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">



Tan, et al.               Expires June 7, 2013                 [Page 24]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


           <domain:name>exampleone.tld</domain:name>
           <domain:registrant>jd1234</domain:registrant>
           <domain:contact type="admin">sh8013</domain:contact>
           <domain:contact type="tech">sh8013</domain:contact>
           <domain:authInfo>
             <domain:pw>2fooBAR</domain:pw>
           </domain:authInfo>
         </domain:create>
       </create>
       <extension>
         <launch:create
          xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
           <launch:phase>sunrise</launch:phase>
           <launch:codeMark>
             <mark:mark
               xmlns:mark="urn:ietf:params:xml:ns:mark-1.0">
               <mark:name>Example One</mark:name>
               <mark:label>example-one</mark:label>
               <mark:label>exampleone</mark:label>
               <mark:issuer>IP Clearinghouse</mark:issuer>
               <mark:number>GE 3933232</mark:number>
               <mark:type>REG-TM-WORD</mark:type>
               <mark:class>1</mark:class>
               <mark:entitlement>owner</mark:entitlement>
               <mark:regDate>2011-09-09</mark:regDate>
               <mark:effectiveDate>2011-10-09</mark:effectiveDate>
               <mark:exDate>2013-09-09</mark:exDate>
               <mark:country>AU</mark:country>
               <mark:region>VIC</mark:region>
               <mark:owner>
                 <mark:org>Example Inc.</mark:org>
               </mark:owner>
               <mark:contact>
                 <mark:name>John Doe</mark:name>
                 <mark:org>Example Inc.</mark:org>
                 <mark:addr>
                   <mark:street>123 Example Dr.</mark:street>
                   <mark:street>Suite 100</mark:street>
                   <mark:city>Reston</mark:city>
                   <mark:sp>VA</mark:sp>
                   <mark:pc>20190</mark:pc>
                   <mark:cc>US</mark:cc>
                 </mark:addr>
                 <mark:voice x="1234">+1.7035555555</mark:voice>
                 <mark:fax>+1.7035555556</mark:fax>
                 <mark:email>jdoe@example.tld</mark:email>
               </mark:contact>
             </mark:mark>



Tan, et al.               Expires June 7, 2013                 [Page 25]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


           </launch:codeMark>
         </launch:create>
       </extension>
       <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   Following is an example <create> domain command using the <launch:
   create> extension, following the "code with mark" validation model,
   with a code and mark information.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <create>
         <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>example.tld</domain:name>
           <domain:registrant>jd1234</domain:registrant>
           <domain:contact type="admin">sh8013</domain:contact>
           <domain:contact type="tech">sh8013</domain:contact>
           <domain:authInfo>
             <domain:pw>2fooBAR</domain:pw>
           </domain:authInfo>
         </domain:create>
       </create>
       <extension>
         <launch:create
          xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
           <launch:phase>sunrise</launch:phase>
           <launch:codeMark>
             <launch:code>49FD46E6C4B45C55D4AC</launch:code>
             <mark:mark
              xmlns:mark="urn:ietf:params:xml:ns:mark-1.0">
               <mark:name>Hello</mark:name>
               <mark:issuer>IP Clearinghouse</mark:issuer>
               <mark:number>GE 3933232</mark:number>
               <mark:type>REG-TM-WORD</mark:type>
               <mark:class>1</mark:class>
               <mark:entitlement>owner</mark:entitlement>
               <mark:regDate>2011-09-09</mark:regDate>
               <mark:effectiveDate>2011-10-09</mark:effectiveDate>
               <mark:exDate>2013-09-09</mark:exDate>
               <mark:country>AU</mark:country>
               <mark:region>VIC</mark:region>
               <mark:owner>
                 <mark:org>Example Inc.</mark:org>
               </mark:owner>



Tan, et al.               Expires June 7, 2013                 [Page 26]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


               <mark:contact>
                 <mark:name>John Doe</mark:name>
                 <mark:org>Example Inc.</mark:org>
                 <mark:addr>
                   <mark:street>123 Example Dr.</mark:street>
                   <mark:street>Suite 100</mark:street>
                   <mark:city>Reston</mark:city>
                   <mark:sp>VA</mark:sp>
                   <mark:pc>20190</mark:pc>
                   <mark:cc>US</mark:cc>
                 </mark:addr>
                 <mark:voice x="1234">+1.7035555555</mark:voice>
                 <mark:fax>+1.7035555556</mark:fax>
                 <mark:email>jdoe@example.tld</mark:email>
               </mark:contact>
             </mark:mark>
           </launch:codeMark>
         </launch:create>
       </extension>
       <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   Following is an example <create> domain command using the <launch:
   create> extension, following the "signed mark" validation model, with
   the signed mark information.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <create>
         <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>exampleone.tld</domain:name>
           <domain:registrant>jd1234</domain:registrant>
           <domain:contact type="admin">sh8013</domain:contact>
           <domain:contact type="tech">sh8013</domain:contact>
           <domain:authInfo>
             <domain:pw>2fooBAR</domain:pw>
           </domain:authInfo>
         </domain:create>
       </create>
       <extension>
         <launch:create
          xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
           <launch:phase>sunrise</launch:phase>
           <smd:signedMark id="signedMark"
            xmlns:smd="urn:ietf:params:xml:ns:signedMark-1.0">



Tan, et al.               Expires June 7, 2013                 [Page 27]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


             <smd:serial>123456</smd:serial>
             <smd:exDate>2012-08-16T09:00:00.0Z</smd:exDate>
             <mark:mark
               xmlns:mark="urn:ietf:params:xml:ns:mark-1.0">
               <mark:name>Example One</mark:name>
               <mark:label>example-one</mark:label>
               <mark:label>exampleone</mark:label>
               <mark:issuer>IP Clearinghouse</mark:issuer>
               <mark:number>GE 3933232</mark:number>
               <mark:type>REG-TM-WORD</mark:type>
               <mark:class>1</mark:class>
               <mark:entitlement>owner</mark:entitlement>
               <mark:regDate>2011-09-09</mark:regDate>
               <mark:effectiveDate>2011-10-09</mark:effectiveDate>
               <mark:exDate>2013-09-09</mark:exDate>
               <mark:country>AU</mark:country>
               <mark:region>VIC</mark:region>
               <mark:owner>
                 <mark:org>Example Inc.</mark:org>
               </mark:owner>
               <mark:contact>
                 <mark:name>John Doe</mark:name>
                 <mark:org>Example Inc.</mark:org>
                 <mark:addr>
                   <mark:street>123 Example Dr.</mark:street>
                   <mark:street>Suite 100</mark:street>
                   <mark:city>Reston</mark:city>
                   <mark:sp>VA</mark:sp>
                   <mark:pc>20190</mark:pc>
                   <mark:cc>US</mark:cc>
                 </mark:addr>
                 <mark:voice x="1234">+1.7035555555</mark:voice>
                 <mark:fax>+1.7035555556</mark:fax>
                 <mark:email>jdoe@example.tld</mark:email>
               </mark:contact>
             </mark:mark>
             <dsig:Signature
             xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
               <dsig:SignedInfo>
               <dsig:CanonicalizationMethod
    Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
               <dsig:SignatureMethod
    Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
               <dsig:Reference URI="#signedMark">
                   <dsig:Transforms>
                     <dsig:Transform
    Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
                   </dsig:Transforms>



Tan, et al.               Expires June 7, 2013                 [Page 28]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


                   <dsig:DigestMethod
    Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
                   <dsig:DigestValue>6651T5s9GZgQOxifdCFmDfSIoUc=
                   </dsig:DigestValue>
               </dsig:Reference>
             </dsig:SignedInfo>
               <dsig:SignatureValue>
   Gm7RnEb6jcijKcgmwEmxJ6j1L0vt2wFyXv3oKc9a4b8nMOKdec8S3tG2hSx
   /NZa0RFHvx5zMsH/MjmxzrTBbl5d7W8Qql5VsW4XanSjJ+UgILs9k6XgVtZ
   E2EvffMLBiL4xbCJM48ewRYRY7lVEzoNms91pmm3U5IlNRNjU/YFqZ1pXhh
   rhyhPjSi9Uon8FnAJaiBEfHcjG6815IJV/9RT+MTXri7i0s82CqIS4wDGbG
   pyZAs7/kDY3A3upqSOwTtrFSCFX1F+Craec72lBB/dKJHxmoVkbIO5KQhqI
   Od+E+h2kguE++RHKa4xoBIeyTgWqpWcLuMoFpM+GxwFcpSA==
   </dsig:SignatureValue>
               </dsig:Signature>
           </smd:signedMark>
         </launch:create>
       </extension>
       <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   Following is an example <create> domain command using the <launch:
   create> extension, following the "signed mark" validation model, with
   the base64 encoded signed mark information.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <create>
         <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>exampleone.tld</domain:name>
           <domain:registrant>jd1234</domain:registrant>
           <domain:contact type="admin">sh8013</domain:contact>
           <domain:contact type="tech">sh8013</domain:contact>
           <domain:authInfo>
             <domain:pw>2fooBAR</domain:pw>
           </domain:authInfo>
         </domain:create>
       </create>
       <extension>
         <launch:create
          xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
           <launch:phase>sunrise</launch:phase>
           <smd:encodedSignedMark
            xmlns:smd="urn:ietf:params:xml:ns:signedMark-1.0">
   D94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c21kOnNpZ25



Tan, et al.               Expires June 7, 2013                 [Page 29]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   lZE1hcmsgeG1sbnM6c21kPSJ1cm46aWV0ZjpwYXJhbXM6eG1sOm5zOnNpZ25lZ
   E1hcmstMS4wIiBpZD0ic2lnbmVkTWFyayI-PHNtZDpzZXJpYWw-MTIzNDU2PC9
   zbWQ6c2VyaWFsPjxzbWQ6ZXhEYXRlPjIwMTItMTEtMjlUMTg6MTY6NTQuMDg4M
   Fo8L3NtZDpleERhdGU-PG1hcms6bWFyayB4bWxuczptYXJrPSJ1cm46aWV0Zjp
   wYXJhbXM6eG1sOm5zOm1hcmstMS4wIj48bWFyazpuYW1lPkV4YW1wbGUgT25lP
   C9tYXJrOm5hbWU-PG1hcms6bGFiZWw-ZXhhbXBsZS1vbmU8L21hcms6bGFiZWw
   -PG1hcms6bGFiZWw-ZXhhbXBsZW9uZTwvbWFyazpsYWJlbD48bWFyazppc3N1Z
   XI-SVAgQ2xlYXJpbmdob3VzZTwvbWFyazppc3N1ZXI-PG1hcms6bnVtYmVyPkd
   FIDM5MzMyMzI8L21hcms6bnVtYmVyPjxtYXJrOm51bWJlcj5vd25lcjwvbWFya
   zpudW1iZXI-PG1hcms6cmVnRGF0ZT4yMDEyLTExLTI5VDE4OjE2OjU0LjA3NDZ
   aPC9tYXJrOnJlZ0RhdGU-PG1hcms6ZXhEYXRlPjIwMTItMTEtMjlUMTg6MTY6N
   TQuMDc0Nlo8L21hcms6ZXhEYXRlPjxtYXJrOmNvdW50cnk-QVU8L21hcms6Y29
   1bnRyeT48bWFyazpyZWdpb24-VklDPC9tYXJrOnJlZ2lvbj48L21hcms6bWFya
   z48ZHNpZzpTaWduYXR1cmUgeG1sbnM6ZHNpZz0iaHR0cDovL3d3dy53My5vcmc
   vMjAwMC8wOS94bWxkc2lnIyI-PGRzaWc6U2lnbmVkSW5mbz48ZHNpZzpDYW5vb
   mljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmc
   vVFIvMjAwMS9SRUMteG1sLWMxNG4tMjAwMTAzMTUjV2l0aENvbW1lbnRzIi8-P
   GRzaWc6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5
   vcmcvMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIi8-PGRzaWc6UmVmZXJlbmNlI
   FVSST0iI3NpZ25lZE1hcmsiPjxkc2lnOlRyYW5zZm9ybXM-PGRzaWc6VHJhbnN
   mb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc
   2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz48L2RzaWc6VHJhbnNmb3Jtcz48ZHN
   pZzpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yM
   DAwLzA5L3htbGRzaWcjc2hhMSIvPjxkc2lnOkRpZ2VzdFZhbHVlPktIdVFrdFd
   UMnRYbXg4Y2ZWd2NvZ0JSUm5oRT08L2RzaWc6RGlnZXN0VmFsdWU-PC9kc2lnO
   lJlZmVyZW5jZT48L2RzaWc6U2lnbmVkSW5mbz48ZHNpZzpTaWduYXR1cmVWYWx
   1ZT5RdWk2d2xLVUlRcHMxS2N6ajhUaTVuNTBjaTVDc2pML2k2YjBwS0Z2NG16Z
   ENhcWpWcXVvVDFiSzJCZnhKNG0rbXJiOWxLeFlrVnNFCnB4QnloSG5KSHpSMXV
   1MG1NMmt4VURyWkVCc0dpV3FuaHMzQVBxOTJBcVdGZHZnUmV6ZHcycmNVbVg3d
   GJyeWNGM3ZDMEJmRUg4RHoKb2FIUFRQb24xTUxObzF5bGtYTDA5bWJqTHVhRlJ
   SS3Z2UCs4djQ1VFJXRmkrbVJ0akJvMGg4blFiNTNtR2lKaU1OekFDaDBtK3pFe
   Ap2bmxEUmRpdWJFZVVWbG9LV2dMY1BiSkd4QmFWL1gvQjQvRnVRbXEzclcxaXN
   ZOUlEYzA3U3ZheEZ0a1l4emVra25GQkNCSWNibXFTCnlOckMvOEp4Y2RRSHN0T
   UZWc1Z2SjdWUFJqS2VZM0RLcUwrTGhRPT08L2RzaWc6U2lnbmF0dXJlVmFsdWU
   -PC9kc2lnOlNpZ25hdHVyZT48L3NtZDpzaWduZWRNYXJrPg
           </smd:encodedSignedMark>
         </launch:create>
       </extension>
       <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   If the create was successful, the server MAY reply with the <launch:
   creData> element along with the regular EPP <resData> to indicate the
   server generated Application Identifier (Section 2.1) when multiple
   applications of a given domain name is supported; otherwise no
   extension is included with the regular EPP <resData>.  The <launch:
   creData> element contains the following child elements:



Tan, et al.               Expires June 7, 2013                 [Page 30]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   <launch:phase>  The phase of the application that mirrors the
       <launch:phase> element included in the <launch:create>.
   <launch:applicationID>  the application identifier of the
       application.

   An example response when multiple overlapping applications are
   supported by the server.

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <response>
    <result code="1000">
      <msg>Command completed successfully</msg>
    </result>
    <resData>
      <domain:creData
         xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
       <domain:name>example.tld</domain:name>
       <domain:crDate>2010-08-10T15:38:26.623854Z</domain:crDate>
       <domain:exDate>2012-08-10T15:38:26.623854Z</domain:exDate>
      </domain:creData>
    </resData>
    <extension>
      <launch:creData xmlns:lp="urn:ietf:params:xml:ns:launchphase-1.0">
        <launch:phase>sunrise</launch:phase>
        <launch:applicationID>2393-9323-E08C-03B1</launch:applicationID>
      </launch:creData>
    </extension>
    <trID>
      <clTRID>example:epp:239332</clTRID>
      <svTRID>server-8551292e23b</svTRID>
    </trID>
  </response>
</epp>

3.3.2.  Claims Create Form

   The Claims Create Form of the extension to the EPP domain name
   mapping [RFC5731] includes the information related to the acceptance
   of the claims notice for the "claims1" launch phase and the display
   of the claims notice for the "claims2" launch phase.

   A <launch:create> element is sent along with the regular <create>
   domain command.  The <launch:create> element contains the following
   child elements:






Tan, et al.               Expires June 7, 2013                 [Page 31]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   <launch:phase>  MUST contain the value of "claims1" or "claim2" to
       indicate the claims launch phase.
   <launch:notice>
       <launch:noticeID>  Unique notice identifier generated by the
           source of the claims notice information like the Claims
           Notice Information Service (CNIS).
       <launch:timestamp>  Contains the date and time that the claims
           notice was displayed or accepted.
       <launch:source>  Contains the source information of the client
           that was displayed or that accepted the claims notice like
           the client IP address.

   Following is an example <create> domain command using the <launch:
   create> extension with the <launch:notice> information for the
   "claims1" claims launch phase.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <create>
         <domain:create
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>example.tld</domain:name>
           <domain:registrant>jd1234</domain:registrant>
           <domain:contact type="admin">sh8013</domain:contact>
           <domain:contact type="tech">sh8013</domain:contact>
           <domain:authInfo>
             <domain:pw>2fooBAR</domain:pw>
           </domain:authInfo>
         </domain:create>
       </create>
       <extension>
         <launch:create
          xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
           <launch:phase>claims1</launch:phase>
           <launch:notice>
             <launch:noticeID>49FD46E6C4B45C55D4AC</launch:noticeID>
             <launch:timestamp>2012-06-19T09:00:00.0Z</launch:timestamp>
             <launch:source>192.0.2.29</launch:source>
           </launch:notice>
         </launch:create>
       </extension>
       <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   This extension does not define any extension to the response of an
   <create> domain command for the Claims Create Form.  After processing



Tan, et al.               Expires June 7, 2013                 [Page 32]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   the command, the server replies with a standard EPP response as
   defined in the EPP domain mapping.

3.4.  EPP <update> Command

   This extension defines additional elements to extend the EPP <update>
   command to be used in conjunction with the domain name mapping.

   A server that does not support allow multiple applications of a given
   domain name with a Application Identifier (Section 2.1) during its
   launch phase operations MUST return an EPP error result code of 2102.

   Registry policies permitting, clients may update an application
   object by submitting an EPP <update> command along with an <launch:
   update> element to indicate the application object to be updated.
   The <launch:update> element contains the following child elements:

   <launch:phase>  the phase during which the application was submitted
       or is associated with.
   <launch:applicationID>  the application identifier for which the
       client wishes to update.

   This extension does not define any extension to the response of an
   <update> domain command.  After processing the command, the server
   replies with a standard EPP response as defined in the EPP domain
   mapping.

























Tan, et al.               Expires June 7, 2013                 [Page 33]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   Following is an example <update> domain command with the <launch:
   update> extension to add and remove a name server of a sunrise
   application with the application identifier "abc123".

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
       <update>
         <domain:update
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
           <domain:name>example.tld</domain:name>
           <domain:add>
               <domain:ns>
                 <domain:hostObj>ns2.example.tld</domain:hostObj>
               </domain:ns>
             </domain:add>
             <domain:rem>
               <domain:ns>
                 <domain:hostObj>ns1.example.tld</domain:hostObj>
               </domain:ns>
             </domain:rem>
         </domain:update>
       </update>
       <extension>
       <launch:update
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>sunrise</launch:phase>
         <launch:applicationID>abc123</launch:applicationID>
       </launch:update>
       </extension>
       <clTRID>ABC-12345</clTRID>
     </command>
   </epp>


















Tan, et al.               Expires June 7, 2013                 [Page 34]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   An example response that corresponds to the above command.

   <?xml version="1.0" encoding="UTF-8"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
         <msg>Command completed successfully</msg>
       </result>
       <trID>
         <clTRID>example:epp:239333</clTRID>
         <svTRID>server-8551292e23c</svTRID>
       </trID>
     </response>
   </epp>

3.5.  EPP <delete> Command

   This extension defines additional elements to extend the EPP <delete>
   command to be used in conjunction with the domain name mapping.

   A server that does not support multiple applications of a given
   domain name with a Application Identifier (Section 2.1) during its
   launch phase operations MUST return an EPP error result code of 2102.

   Registry policies permitting, clients MAY withdraw an application by
   submitting an EPP <delete> command along with an <launch:delete>
   element to indicate the application object to be deleted.  The
   <launch:delete> element contains the following child elements:

   <launch:phase>  the phase during which the application was submitted
       or is associated with.
   <launch:applicationID>  the application identifier for which the
       client wishes to delete.

   This extension does not define any extension to the response of an
   <delete> domain command.  After processing the command, the server
   replies with a standard EPP response as defined in the EPP domain
   mapping.













Tan, et al.               Expires June 7, 2013                 [Page 35]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   Following is an example <delete> domain command with the <launch:
   delete> extension.

   <?xml version="1.0" encoding="UTF-8" standalone="no"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <command>
      <delete>
       <domain:delete
        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>example.tld</domain:name>
       </domain:delete>
      </delete>
      <extension>
       <launch:delete
        xmlns:launch="urn:ietf:params:xml:ns:launch-1.0">
         <launch:phase>sunrise</launch:phase>
         <launch:applicationID>abc123</launch:applicationID>
       </launch:delete>
      </extension>
      <clTRID>ABC-12345</clTRID>
     </command>
   </epp>

   An example response that corresponds to the above command.

   <?xml version="1.0" encoding="UTF-8"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
         <msg>Command completed successfully</msg>
       </result>
       <trID>
         <clTRID>example:epp:239334</clTRID>
         <svTRID>server-8551292e23d</svTRID>
       </trID>
     </response>
   </epp>

3.6.  EPP <renew> Command

   This extension does not define any extension to the EPP <renew>
   command or response described in the EPP domain name mapping
   [RFC5731].

3.7.  EPP <transfer> Command

   This extension does not define any extension to the EPP <transfer>
   command or response described in the EPP domain name mapping



Tan, et al.               Expires June 7, 2013                 [Page 36]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   [RFC5731].


4.  Formal Syntax

   Three schemas are presented here.  The first schema is the EPP Launch
   Phase Mapping schema.  The second schema is a dependent schema for
   the Signed Mark.  The third schema is a dependent schema for the
   Mark.

   The formal syntax presented here is a complete schema representation
   of the object mapping suitable for automated validation of EPP XML
   instances.  The BEGIN and END tags are not part of the schema; they
   are used to note the beginning and ending of the schema for URI
   registration purposes.

4.1.  Launch Schema

   Copyright (c) 2012 IETF Trust and the persons identified as authors
   of the code.  All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   o  Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
   o  Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.
   o  Neither the name of Internet Society, IETF or IETF Trust, nor the
      names of specific contributors, may be used to endorse or promote
      products derived from this software without specific prior written
      permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.




Tan, et al.               Expires June 7, 2013                 [Page 37]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   BEGIN
   <?xml version="1.0" encoding="UTF-8"?>
   <schema
     targetNamespace="urn:ietf:params:xml:ns:launch-1.0"
     xmlns:launch="urn:ietf:params:xml:ns:launch-1.0"
     xmlns:eppcom="urn:ietf:params:xml:ns:eppcom-1.0"
     xmlns:mark="urn:ietf:params:xml:ns:mark-1.0"
     xmlns:smd="urn:ietf:params:xml:ns:signedMark-1.0"
     xmlns="http://www.w3.org/2001/XMLSchema"
     elementFormDefault="qualified">

   <!--
   Import common element types.
   -->
     <import namespace="urn:ietf:params:xml:ns:eppcom-1.0"
             schemaLocation="eppcom-1.0.xsd"/>

     <import namespace="urn:ietf:params:xml:ns:mark-1.0"
             schemaLocation="mark-1.0.xsd"/>

     <import namespace="urn:ietf:params:xml:ns:signedMark-1.0"
             schemaLocation="signedMark-1.0.xsd"/>

     <annotation>
       <documentation>
         Extensible Provisioning Protocol v1.0
         domain name extension schema
         for the launch phase processing.
       </documentation>
     </annotation>

     <!--
     Child elements found in EPP commands.
     -->
     <element name="check" type="launch:checkType"/>
     <element name="info" type="launch:infoType"/>
     <element name="create" type="launch:createType"/>
     <element name="update" type="launch:idContainerType"/>
     <element name="delete" type="launch:idContainerType"/>

     <!--
     Common container of id (identifier) element
     -->
     <complexType name="idContainerType">
       <sequence>
         <element name="phase" type="launch:phaseType"/>
         <element name="applicationID" type="token"/>
       </sequence>



Tan, et al.               Expires June 7, 2013                 [Page 38]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


     </complexType>

     <!--
     Definition for application identifier
     -->
     <simpleType name="applicationIDType">
       <restriction base="token"/>
     </simpleType>

     <!--
     Definition for launch phase.  Name is an optional attribute
     used to extend the phase type.  For example, when
     using the phase type value of &qt;custom&gt;, the name
     can be used to specify the custom phase.
     -->
     <complexType name="phaseType">
       <simpleContent>
         <extension base="launch:phaseTypeValue">
           <attribute name="name" type="token"/>
         </extension>
       </simpleContent>
     </complexType>

     <!--
     Enumeration of for launch phase values.
     -->
     <simpleType name="phaseTypeValue">
         <restriction base="token">
           <enumeration value="sunrise"/>
           <enumeration value="landrush"/>
           <enumeration value="claims1"/>
           <enumeration value="claims2"/>
           <enumeration value="open"/>
           <enumeration value="custom"/>
       </restriction>
     </simpleType>


     <!--
     Definition for the sunrise code
     -->
     <simpleType name="codeType">
       <restriction base="base64Binary">
         <minLength value="1"/>
       </restriction>
     </simpleType>

     <!--



Tan, et al.               Expires June 7, 2013                 [Page 39]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


     Definition for the notice identifier
     -->
     <simpleType name="noticeIDType">
       <restriction base="base64Binary">
         <minLength value="1"/>
       </restriction>
     </simpleType>

     <!--
     Possible status values for sunrise application
     -->
       <simpleType name="statusValueType">
       <restriction base="token">
           <enumeration value="pending"/>
           <enumeration value="validated"/>
           <enumeration value="invalid"/>
           <enumeration value="pendingAuction"/>
           <enumeration value="allocated"/>
           <enumeration value="rejected"/>
           <enumeration value="custom"/>
         </restriction>
       </simpleType>

     <!--
     Status type definition
     -->
     <complexType name="statusType">
       <simpleContent>
         <extension base="normalizedString">
           <attribute name="s" type="launch:statusValueType"
             use="required"/>
           <attribute name="lang" type="language"
             default="en"/>
           <attribute name="name" type="token"/>
         </extension>
       </simpleContent>
     </complexType>

     <!--
     codeMark Type that contains an optional code
     with mark information.
     -->
     <complexType name="codeMarkType">
       <sequence>
       <element name="code" type="launch:codeType"
           minOccurs="0"/>
       <element ref="mark:mark"
           minOccurs="0"/>



Tan, et al.               Expires June 7, 2013                 [Page 40]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


     </sequence>
     </complexType>

     <!--
     Child elements for the create command
     -->
     <complexType name="createType">
       <sequence>
         <element name="phase" type="launch:phaseType"/>
         <choice>
           <element name="codeMark" type="launch:codeMarkType"
             maxOccurs="unbounded"/>
           <element ref="smd:signedMark"
            maxOccurs="unbounded"/>
           <element ref="smd:encodedSignedMark"
            maxOccurs="unbounded"/>
             <element name="notice"
             type="launch:createNoticeType"/>
         </choice>
       </sequence>
     </complexType>

     <!--
     Child elements of the create notice element.
     -->
     <complexType name="createNoticeType">
       <sequence>
         <element name="noticeID" type="launch:noticeIDType"/>
         <element name="timestamp" type="dateTime"/>
         <element name="source" type="token"/>
       </sequence>
     </complexType>


     <!--
     Child elements of check (Claims Check Command).
     -->
     <complexType name="checkType">
       <sequence>
         <element name="phase" type="launch:phaseType"/>
       </sequence>
     </complexType>


     <!--
     Child elements of info command.
     -->
     <complexType name="infoType">



Tan, et al.               Expires June 7, 2013                 [Page 41]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


       <sequence>
         <element name="phase" type="launch:phaseType"/>
         <element name="applicationID"
           type="launch:applicationIDType"
           minOccurs="0"/>
       </sequence>
     </complexType>

     <!--
     Child response elements.
     -->
     <element name="chkData" type="launch:chkDataType"/>
     <element name="creData" type="launch:idContainerType"/>
     <element name="infData" type="launch:infDataType"/>

     <!--
      <check> response elements.
      -->
     <complexType name="chkDataType">
       <sequence>
         <element name="phase" type="launch:phaseType"/>
         <element name="cd" type="launch:cdType"
          maxOccurs="unbounded"/>
       </sequence>
     </complexType>

     <complexType name="cdType">
       <sequence>
         <element name="name" type="launch:cdNameType"/>
         <element name="claimKey" type="token"
          minOccurs="0"/>
       </sequence>
     </complexType>

     <complexType name="cdNameType">
       <simpleContent>
         <extension base="eppcom:labelType">
           <attribute name="exists" type="boolean"
            use="required"/>
         </extension>
       </simpleContent>
     </complexType>

     <!--
     <info> response elemenets
     -->
     <complexType name="infDataType">
       <sequence>



Tan, et al.               Expires June 7, 2013                 [Page 42]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


         <element name="phase" type="launch:phaseType"/>
        <element name="applicationID"
         type="launch:applicationIDType"
         minOccurs="0"/>
        <element name="status" type="launch:statusType"
         minOccurs="0"/>
         <element ref="mark:mark"
         minOccurs="0" maxOccurs="unbounded"/>
       </sequence>
     </complexType>

   </schema>
   END

4.2.  Signed Mark Schema

   Copyright (c) 2012 IETF Trust and the persons identified as authors
   of the code.  All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   o  Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
   o  Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.
   o  Neither the name of Internet Society, IETF or IETF Trust, nor the
      names of specific contributors, may be used to endorse or promote
      products derived from this software without specific prior written
      permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

   BEGIN
   <?xml version="1.0" encoding="UTF-8"?>



Tan, et al.               Expires June 7, 2013                 [Page 43]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   <schema
     targetNamespace="urn:ietf:params:xml:ns:signedMark-1.0"
     xmlns:smd="urn:ietf:params:xml:ns:signedMark-1.0"
     xmlns:mark="urn:ietf:params:xml:ns:mark-1.0"
     xmlns:dsig="http://www.w3.org/2000/09/xmldsig#"
     xmlns="http://www.w3.org/2001/XMLSchema"
     elementFormDefault="qualified">

   <!--
   Import common element types.
   -->
     <import namespace="http://www.w3.org/2000/09/xmldsig#"
             schemaLocation="xmldig-core-schema.xsd"/>

     <import namespace="urn:ietf:params:xml:ns:mark-1.0"
             schemaLocation="mark-1.0.xsd"/>


     <annotation>
       <documentation>
         Schema for representing a Signed Mark, also referred to
         as Signed Mark Data (SMD), that includes digitally
         signed trademark information.
       </documentation>
     </annotation>

     <!--
     <smd:signedMark> element definition
     -->
     <element name="signedMark" type="smd:signedMarkType"/>

     <!--
     <smd:encodedSignedMark> element definition
     -->
     <element name="encodedSignedMark"
       type="smd:encodedSignedMarkType"/>

     <!--
     <smd:signedMark> child elements
     -->
     <complexType name="signedMarkType">
       <sequence>
         <element name="serial" type="token"/>
         <element name="exDate" type="dateTime"
         minOccurs="0"/>
         <element ref="mark:mark"/>
         <element ref="dsig:Signature"/>
       </sequence>



Tan, et al.               Expires June 7, 2013                 [Page 44]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


       <attribute name="id" type="ID" use="required"/>
     </complexType>

     <!--
     <smd:encodedSignedMark> element type
     -->
     <complexType name="encodedSignedMarkType">
       <simpleContent>
         <extension base="token">
           <attribute name="encoding" type="token"
             default="base64"/>
         </extension>
       </simpleContent>
     </complexType>


   </schema>
   END

4.3.  Mark Schema

   Copyright (c) 2012 IETF Trust and the persons identified as authors
   of the code.  All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   o  Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
   o  Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.
   o  Neither the name of Internet Society, IETF or IETF Trust, nor the
      names of specific contributors, may be used to endorse or promote
      products derived from this software without specific prior written
      permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT



Tan, et al.               Expires June 7, 2013                 [Page 45]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

   BEGIN
   <?xml version="1.0" encoding="UTF-8"?>
   <schema
     targetNamespace="urn:ietf:params:xml:ns:mark-1.0"
     xmlns:mark="urn:ietf:params:xml:ns:mark-1.0"
     xmlns="http://www.w3.org/2001/XMLSchema"
     elementFormDefault="qualified">

     <annotation>
       <documentation>
         Schema for representing a Trademark, also referred to
         as Mark.
       </documentation>
     </annotation>

     <!--
     <mark:mark> element definition
     -->
     <element name="mark" type="mark:markType"/>

     <!--
     <mark:mark> child elements
     -->
     <complexType name="markType">
         <sequence>
           <element name="id" type="token"
             minOccurs="0"/>
           <element name="name" type="token"
              minOccurs="0"/>
           <element name="label" type="mark:labelType"
              minOccurs="0" maxOccurs="unbounded"/>
           <element name="issuer" type="token"
             minOccurs="0"/>
           <element name="number" type="token"
             minOccurs="0"/>
           <element name="type" type="token"
             minOccurs="0"/>
           <element name="class" type="integer"
             minOccurs="0" maxOccurs="unbounded"/>
           <element name="entitlement" type="token"
             minOccurs="0"/>
           <element name="regDate" type="date"
             minOccurs="0"/>
           <element name="effectiveDate" type="date"
             minOccurs="0"/>



Tan, et al.               Expires June 7, 2013                 [Page 46]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


           <element name="exDate" type="date"
             minOccurs="0"/>
           <element name="country" type="mark:ccType"
             minOccurs="0"/>
           <element name="region" type="token"
              minOccurs="0"/>
           <element name="owner" type="mark:contactType"
             minOccurs="0"/>
           <element name="contact" type="mark:contactType"
             minOccurs="0"/>
       </sequence>
     </complexType>


     <!--
     DNS label type definition
     -->
     <simpleType name="labelType">
       <restriction base="token">
         <minLength value="1"/>
         <maxLength value="255"/>
       </restriction>
     </simpleType>

     <!--
     Postal code definition
     -->
     <simpleType name="pcType">
       <restriction base="token">
         <maxLength value="16"/>
       </restriction>
     </simpleType>


     <!--
     Country code definition
     -->
     <simpleType name="ccType">
       <restriction base="token">
         <length value="2"/>
       </restriction>
     </simpleType>

     <!--
     Phone number with extension definition
     -->
     <complexType name="e164Type">
       <simpleContent>



Tan, et al.               Expires June 7, 2013                 [Page 47]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


         <extension base="mark:e164StringType">
           <attribute name="x" type="token"/>
         </extension>
       </simpleContent>
     </complexType>

     <!--
     Phone number with extension definition
     -->
     <simpleType name="e164StringType">
       <restriction base="token">
         <pattern value="(\+[0-9]{1,3}\.[0-9]{1,14})?"/>
         <maxLength value="17"/>
       </restriction>
     </simpleType>

     <!--
     Address (<mark:addr>) child elements
     -->
     <complexType name="addrType">
       <sequence>
         <element name="street" type="token"
          minOccurs="0" maxOccurs="3"/>
         <element name="city" type="token"
          minOccurs="0"/>
         <element name="sp" type="token"
          minOccurs="0"/>
         <element name="pc" type="mark:pcType"
          minOccurs="0"/>
         <element name="cc" type="mark:ccType"
          minOccurs="0"/>
       </sequence>
     </complexType>

     <!--
     Type used for email addresses
     -->
     <simpleType name="minTokenType">
       <restriction base="token">
         <minLength value="1"/>
       </restriction>
     </simpleType>

     <!--
     Contact (<mark:owner> or <mark:contact>) child elements
     -->
     <complexType name="contactType">
       <sequence>



Tan, et al.               Expires June 7, 2013                 [Page 48]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


         <element name="name" type="token"
           minOccurs="0"/>
         <element name="org" type="token"
           minOccurs="0"/>
         <element name="addr" type="mark:addrType"
           minOccurs="0"/>
         <element name="voice" type="mark:e164Type"
           minOccurs="0"/>
         <element name="fax" type="mark:e164Type"
           minOccurs="0"/>
         <element name="email" type="mark:minTokenType"
           minOccurs="0"/>
       </sequence>
     </complexType>

   </schema>
   END


5.  Acknowledgements

   [to be filled in]


6.  Change History

6.1.  Change from 00 to 01

   1.  Changed to use camel case for the XML elements.
   2.  Replaced "cancelled" status to "rejected" status.
   3.  Added the child elements of the <claim> element.
   4.  Removed the XML schema and replaced with "[TBD]".

6.2.  Change from 01 to 02

   1.  Added support for both the ICANN and ARI/Neustar TMCH models.
   2.  Changed the namespace URI and prefix to use "launch" instead of
       "launchphase".
   3.  Added definition of multiple claim validation models.
   4.  Added the <launch:signedClaim> and <launch:signedNotice>
       elements.
   5.  Added support for Claims Info Command

6.3.  Change from 02 to 03

   1.  Removed XSI namespace per Keith Gaughan's suggestion on the
       provreg list.




Tan, et al.               Expires June 7, 2013                 [Page 49]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   2.  Added extensibility to the launch:status element and added the
       pendingAuction status per Trung Tran's feedback on the provreg
       list.
   3.  Added support for the Claims Check Command, updated the location
       and contents of the signedNotice, and replaced most references of
       Claim to Mark based on the work being done on the ARI/Neustar
       launch model.

6.4.  Change from 03 to 04

   1.  Removed references to the ICANN model.
   2.  Removed support for the Claims Info Command.
   3.  Removed use of the signedClaim.
   4.  Revised the method for referring to the signedClaim from the XML
       Signature using the IDREF URI.
   5.  Split the launch-1.0.xsd into three XML schemas including launch-
       1.0.xsd, signeMark-1.0.xsd, and mark-1.0.xsd.
   6.  Split the "claims" launch phase to the "claims1" and "claims2"
       launch phases.
   7.  Added support for the encodedSignedMark with base64 encoded
       signedMark.
   8.  Changed the elements in the createNoticeType to include the
       noticeID, timestamp, and the source elements.
   9.  Added the class and effectiveDate elements to mark.


7.  IANA Considerations

   This document uses URNs to describe XML namespaces and XML schemas
   conforming to a registry mechanism described in [RFC3688].  Three URI
   assignments have been registered by the IANA.

   Registration request for the Launch namespace:

      URI: urn:ietf:params:xml:ns:launch-1.0
      Registrant Contact: See the "Author's Address" section of this
      document.
      XML: None.  Namespace URIs do not represent an XML specification.

   Registration request for the Signed mark namespace:

      URI: urn:ietf:params:xml:ns:signedMark-1.0
      Registrant Contact: See the "Author's Address" section of this
      document.
      XML: None.  Namespace URIs do not represent an XML specification.

   Registration request for the Mark namespace:




Tan, et al.               Expires June 7, 2013                 [Page 50]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


      URI: urn:ietf:params:xml:ns:mark-1.0
      Registrant Contact: See the "Author's Address" section of this
      document.
      XML: None.  Namespace URIs do not represent an XML specification.


8.  Security Considerations

   The mapping extensions described in this document do not provide any
   security services beyond those described by EPP [RFC5730], the EPP
   domain name mapping [RFC5731], and protocol layers used by EPP.  The
   security considerations described in these other specifications apply
   to this specification as well.

   Updates to, and deletion of an application object must be restricted
   to clients authorized to perform the said operation on the object.

   As information contained within an application, or even the mere fact
   that an application exists may be confidential.  Any attempt to
   operate on an application object by an unauthorized client MUST be
   rejected with an EPP 2303 (object does not exist) or an appropriate
   auhorization error.  Server policy may allow <info> operation with
   filtered output by clients other than the sponsoring client, in which
   case the <domain:infData> and <launch:infData> response SHOULD be
   filtered to include only fields that are publicly accessible.


9.  Normative References

   [RFC2045]  Freed, N. and N. Borenstein, "Multipurpose Internet Mail
              Extensions (MIME) Part One: Format of Internet Message
              Bodies", RFC 2045, November 1996.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC3688]  Mealling, M., "The IETF XML Registry", BCP 81, RFC 3688,
              January 2004.

   [RFC5730]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)",
              STD 69, RFC 5730, August 2009.

   [RFC5731]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)
              Domain Name Mapping", STD 69, RFC 5731, August 2009.

   [RFC5733]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)
              Contact Mapping", STD 69, RFC 5733, August 2009.




Tan, et al.               Expires June 7, 2013                 [Page 51]

Internet-Draft        Launch Phase Mapping for EPP         December 2012


   [WIPO.ST3]
              WIPO, "Recommended standard on two-letter codes for the
              representation of states, other entities and
              intergovernmental organizations", March 2007.

   [1]  <http://newgtlds.icann.org/en/about/trademark-clearinghouse/
        claims-model-26sep12-en.pdf>

   [2]  <http://www.wipo.int/classifications/nivilo/nice/index.htm>

   [3]  <http://www.w3.org/TR/xmldsig-core/>


Authors' Addresses

   Wil Tan
   Cloud Registry
   Suite 32 Seabridge House
   377 Kent St
   Sydney, NSW  2000
   AU

   Phone: +61 414 710899
   Email: wil@cloudregistry.net
   URI:   http://www.cloudregistry.net


   Gavin Brown
   CentralNic Ltd
   35-39 Mooregate
   London, England  EC2R 6AR
   GB

   Phone: +44 8700 170 900
   Email: gavin.brown@centralnic.com
   URI:   http://www.centralnic.com


   James Gould
   VeriSign, Inc.
   12061 Bluemont Way
   Reston, VA  20190
   US

   Email: jgould@verisign.com
   URI:   http://www.verisigninc.com





Tan, et al.               Expires June 7, 2013                 [Page 52]

