<?xml version="1.0" encoding="US-ASCII"?>
<!-- change the "txt" on the previous line to "xml" to make this a valid XML2RFC template --> 
<!-- this is version 5 of this xml2rfc template -->
<!--
    DOCTYPE processing

To use this XML template, the rfc2629.dtd from the xml2rfc distribution should 
be in the local directory. The xml2rfc distribution is available from 
http://xml.resource.org/

 The ENTITY clauses create an include of the named XML files, which
contains references written in xml2rfc format.

 XML2RFC offers an include feature described in the XML2RFC README
  file.  That syntax, however, contradicts the DTD requirements to
  have <reference> elements within the <references> element, so an 
  XML parser is likely to find your XML file invalid.  It may be
  possible that XML2RFC will change their DTD so that the XML file
  remains valid when their style of include is used.

Some editors, such as XXE, resolve the ENTITY clauses before displaying the 
document to be edited.
-->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc2223 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2223.xml">
<!ENTITY rfc2578 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2578.xml">
<!ENTITY rfc2579 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2579.xml">
<!ENTITY rfc2580 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2580.xml">
<!ENTITY rfc2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY rfc3410 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3410.xml">
<!ENTITY rfc4181 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4181.xml">
]>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc strict="no"?>
<?rfc rfcedstyle="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<!-- Document  section 

Specify the category attribute per RFC2026 
options are info, std, bcp, or exp. 

docname is the name of the output document. This is optional;
the default is to use the base portion of the XML filename. 

For Internet-drafts, indicate which intellectual property notice 
to use per the rules of RFC3978. The value (as of this template) can be:
    trust200902 -
    noModificationTrust200902 -
    noDerivativesTrust200902 -
    pre5378Trust200902 -

 The Intellectual Property section will be generated automatically by
  XML2RFC, based on the ipr attribute in the rfc element.

If this document obsoletes an RFC, specify the RFC in the "obsoletes" attribute
If this document updates an RFC, specify the RFC in the "updates" attribute
-->
<rfc category="info" docName="draft-hmac-sha-256-128-usm-snmp-00" ipr="trust200902">
  <front>
    <!--
Enter the full document title and an abbreviated version
  to use in the page header.
-->

    <title abbrev="HMAC-SHA-256-128_Auth_USM">HMAC-SHA-256-128 Authentication Protocol in USM for SNMP</title>

    <!-- copy the author block as many times as needed, one for each author.-->

    <!-- If the author is acting as editor, use the <role=editor> attribute-->

    <!-- see RFC2223 for guidelines regarding author names -->

    <author fullname="Johannes Merkle" initials="J.M." 
            surname="Merkle">
      <organization>secunet Security Networks</organization>
      <address>
        <postal>
          <street>Mergenthaler Allee 77</street>
          <city>65760 Eschborn</city>
          <country>Germany</country>
        </postal>
        <phone>+49 201 5454 3091</phone>
        <email>johannes.merkle@secunet.com</email>
      </address>
    </author>
    
    <author fullname="Manfred Lochter" initials="M.L." 
            surname="Lochter">
      <organization>BSI</organization>
      <address>
        <postal>
          <street>Postfach 200363</street>
          <city>53133 Bonn</city>
          <country>Germany</country>
        </postal>
        <phone>+49 228 9582 5643</phone>
        <email>manfred.lochter@bsi.bund.de</email>
      </address>
    </author>


    <!-- month and day will be generated automatically by XML2RFC; 
be sure the year is current.-->

    <date  year="2013" />

    <!-- IETF area is optional -->

  <!--  <area>Operations &amp; Management Area</area> -->

    <!--WG name at the upperleft corner of the doc, 
IETF is fine for non-WG IETF submissions -->

  <!--   <workgroup>Operations and Management Area Working Group</workgroup>  -->
    <keyword>Network Management</keyword>

    <keyword>SNMP</keyword>

    <keyword>USM</keyword>

    <keyword>HMAC</keyword>

    <!--add additional keywords here for IETF website search engine -->
<abstract>

<t> This memo specifies a new optional HMAC-SHA-256-128 authentication protocol for the User-based Security Model (USM) for SNMPv3 defined in RFC 3414.</t>

</abstract>
 
 

   </front>

  <middle>
    <section title="Introduction">
     
      <t>The User-based Security Model (USM) for version 3 of the Simple Network Management Protocol (SNMPv3) is specified in RFC 3414 <xref target="RFC3414"/>.
	  Within USM, two different authentication protocols, HMAC-MD5-96 and HMAC-SHA-96, are defined based on the hash functions MD5 and SHA-1, respectively. 
	  <!-- For very high security demands, however, these cryptographic mechanisms may not offer adequate security anymore. -->
	  
	  
	  This memo specifies a new HMAC-SHA-256-128 authentication protocol for USM using an HMAC based on the SHA-256 hash function <xref target="SHA"/> and truncated to 128 bits. 
The protocol is a straightforward adaptation of the authentication protocols HMAC-MD5-96 and HMAC-SHA-96 to the SHA-256 based HMAC. The use and support of the HMAC-SHA-256-128 
authentication protocol is OPTIONAL.</t>

     </section>
	 
 <section anchor="protocol" title="The HMAC-SHA-256-128 Authentication Protocol">
 
  <t>This section describes the HMAC-SHA-256-128 authentication protocol. This
   protocol uses the SHA-256 hash function which is described in <xref target="SHA"/>,
   in HMAC mode described in <xref target="RFC2104"/>, truncating the output to 128
   bits. Source code for SHA-256 and HMAC-SHA-256 (without truncation) can be found in 
   <xref target="RFC4634"/>. 
   Test vectors for HMAC-SHA-256 (without truncation) and HMAC-SHA-256-128 are given in <xref target="RFC4231"/>  
   and in <xref target="RFC4868"/>, respectively.</t> 

   <t>This protocol is identified by usmHMACSHA256AuthProtocol.</t>
   
   <section anchor="differences" title="Deviations from the HMAC-SHA-96  Authentication Protocol">
   
   <t>The HMAC-SHA-256-128 authentication protocol is a straightforward adaptation of the 
   HMAC-MD5-96 and HMAC-SHA-96 authentication protocols. Precisely, it differs from the HMAC-MD5-96 and HMAC-SHA-96 
   authentication protocols in the following aspects:</t> 

   <t><list style="symbols">
   <t> The SHA-256 hash function is used to compute the message digest in the HMAC computation 
   according to <xref target="RFC2104"/>, as opposed to the MD5 hash function <xref target="RFC1321"/> and SHA-1 hash function <xref target="SHA"/> used in HMAC-MD5-96 and HMAC-SHA-96, respectively. 
   Consequently, the length of the message digest prior to truncation is 256 bits.</t>
   <t> The 256 bit message digest is truncated to 16 octets as opposed to the truncation to 12 octets in HMAC-MD5-96 and HMAC-SHA-96.</t>  
   <t>The user's secret key to be used when calculating a digest MUST be 32 octets long as opposed to the keys being 16 and 20 octets long in HMAC-MD5-96 and HMAC-SHA-96, respectively. </t>
   </list></t>

</section>

 <section anchor="Procedure" title="Processing">

   <t>This section describes the procedures for the HMAC-SHA-256-128
   authentication protocol. The descriptions are based on the definition of services and data elements defined 
   for HMAC-SHA-96 in RFC 3414 <xref target="RFC3414"/> with the deviations listed in <xref target="differences" />.</t>

<section anchor="Procedure_Out" title="Processing an Outgoing Message">

   <t>This section describes the procedure followed by an SNMP engine
   whenever it must authenticate an outgoing message using the
   usmHMACSHA256AuthProtocol. </t>

   <t><list style="numbers">
   <t>The msgAuthenticationParameters field is set to serialization,
      according to the rules in <xref target="RFC3417"/>, of an OCTET STRING containing
      16 zero octets.</t>

   <t>From the secret authKey, two keys K1 and K2 are derived:
   <list style="format %c)">
      <t>extend the authKey to 64 octets by appending 32 zero octets;
         save it as extendedAuthKey;</t>

      <t>obtain IPAD by replicating the octet 0x36 64 times;</t>

      <t>obtain K1 by XORing extendedAuthKey with IPAD;</t>

      <t>obtain OPAD by replicating the octet 0x5C 64 times;</t>

      <t>obtain K2 by XORing extendedAuthKey with OPAD.</t>
   </list></t>
   <t>Prepend K1 to the wholeMsg and calculate the SHA-256 digest over it
      according to <xref target="SHA"/>.</t>

   <t>Prepend K2 to the result of the previous step and calculate the SHA-256 digest
      over it according to <xref target="SHA"/>.  Take the first 16 octets of the
      final digest - this is the Message Authentication Code (MAC).</t>

   <t>Replace the msgAuthenticationParameters field with the MAC obtained in
      the previous step.</t>

   <t>The authenticatedWholeMsg is then returned to the caller together
      with statusInformation indicating success.</t>
	  </list></t>
</section>

<section anchor="Procedure_In" title="Processing an Incoming Message">

   <t>This section describes the procedure followed by an SNMP engine
   whenever it must authenticate an incoming message using the
   usmHMACSHA256AuthProtocol.</t>

   <t><list style="format %d." counter="my_count">
   <t>If the digest received in the msgAuthenticationParameters field is
      not 16 octets long, then an failure and an errorIndication
      (authenticationError) is returned to the calling module.</t>

   <t>The MAC received in the msgAuthenticationParameters field is
      saved.</t>

   <t>The digest in the msgAuthenticationParameters field is replaced by
      the 16 zero octets.</t>

   <t>From the secret authKey, two keys K1 and K2 are derived:
    <list style="format %c)">

      <t>extend the authKey to 64 octets by appending 32 zero octets;
         save it as extendedAuthKey</t>

      <t>obtain IPAD by replicating the octet 0x36 64 times;</t>

      <t>obtain K1 by XORing extendedAuthKey with IPAD;</t>

      <t>obtain OPAD by replicating the octet 0x5C 64 times;</t>

      <t>obtain K2 by XORing extendedAuthKey with OPAD.</t>
   </list></t>
	  
   <t>The MAC is calculated over the wholeMsg:
    <list style="format %c)">
      <t>prepend K1 to the wholeMsg and calculate the SHA-256 digest over
         it;</t>

      <t>prepend K2 to the result of step 5.a and calculate the SHA-256
         digest over it;</t>

      <t>first 16 octets of the result of step 5.b is the MAC.</t>
	  
	  </list></t>
   </list></t>
   <t><list>
      <t>The msgAuthenticationParameters field is replaced with the MAC
      value that was saved in step 2.</t>
   </list></t>
   <t><list style="format %d." counter="my_count">
   <t>The newly calculated MAC is compared with the MAC saved in
      step 2.  If they do not match, then a failure and an
      errorIndication (authenticationFailure) are returned to the
      calling module.</t>

   <t>The authenticatedWholeMsg and statusInformation indicating success
      are then returned to the caller.</t>
  </list></t>
</section>
</section>
</section>
	
	
	
 
    <section title="Security Considerations">

      <t>The security considerations of  <xref target="RFC3414"/> also apply to the use of the HMAC-SHA-256-128 authentication protocol in SNMP. 
	  A general discussion of the security of the HMAC construction is given in <xref target="RFC2104"/>.
	  </t>
    </section>

    <section title="IANA Considerations">
<t>IANA is requested to assign an OID for the usmHMACSHA256AuthProtocol module under the
   SnmpAuthProtocols subtree, maintained in the registry at
   http://www.iana.org/assignments/smi-numbers.</t>
    
      <t></t>
    </section>

 
  </middle>

  <back>

    <!-- References Section -->

    <!-- Section 4.7f of [RFC2223bis] specifies the requirements for the
   references sections.  In particular, there MUST be separate lists of
   normative and informative references, each in a separate section.
   The style SHOULD follow that of recently published RFCs.

   The standard MIB boilerplate available at
  the OPS Area web site includes lists of
   normative and informative references that MUST appear in all IETF
   specifications that contain MIB modules.  If items from other MIB
   modules appear in an IMPORTS statement in the Definitions section,
   then the specifications containing those MIB modules MUST be included
   in the list of normative references.  When items are imported from an
   IANA-maintained MIB module the corresponding normative reference
   SHALL reference the on-line version of that MIB module.  It is the
   policy of the RFC Editor that all references must be cited in the
   text;  such citations MUST appear in the overview section where
   documents containing imported definitions (other than those already
   mentioned in the MIB boilerplate) are required to be mentioned (cf.
   Section 3.2).

In general, each normative reference SHOULD reference the most recent
version of the specification in question.
-->

    <references title="Normative References">
        <!-- [TEMPLATE TODO] rfc2119, 2578, 2579, and 2580 are required to support MIB
      module boilerplate text. -->

	  <reference anchor='RFC2104'>

<front>
<title abbrev='HMAC'>HMAC: Keyed-Hashing for Message Authentication</title>
<author initials='H.' surname='Krawczyk' fullname='Hugo Krawczyk'>
<organization>IBM, T.J. Watson Research Center</organization>
<address>
<postal>
<street>P.O.Box 704</street>
<city>Yorktown Heights</city>
<region>NY</region>
<code>10598</code>
<country>US</country></postal>
<email>hugo@watson.ibm.com</email></address></author>
<author initials='M.' surname='Bellare' fullname='Mihir Bellare'>
<organization>University of California at San Diego, Dept of Computer Science and Engineering</organization>
<address>
<postal>
<street>9500 Gilman Drive</street>
<street>Mail Code 0114</street>
<city>La Jolla</city>
<region>CA</region>
<code>92093</code>
<country>US</country></postal>
<email>mihir@cs.ucsd.edu</email></address></author>
<author initials='R.' surname='Canetti' fullname='Ran Canetti'>
<organization>IBM T.J. Watson Research Center</organization>
<address>
<postal>
<street>P.O.Box 704</street>
<city>Yorktown Heights</city>
<region>NY</region>
<code>10598</code>
<country>US</country></postal>
<email>canetti@watson.ibm.com</email></address></author>
<date year='1997' month='February' />
<abstract>
<t>This document describes HMAC, a mechanism for message authentication using cryptographic hash functions. HMAC can be used with any iterative cryptographic hash function, e.g., MD5, SHA-1, in combination with a secret shared key.  The cryptographic strength of HMAC depends on the properties of the underlying hash function.</t></abstract></front>

<seriesInfo name='RFC' value='2104' />
<format type='TXT' octets='22297' target='http://www.rfc-editor.org/rfc/rfc2104.txt' />
</reference>

	  
      &rfc2119;

<reference anchor='RFC3414'>
<front>
<title>User-based Security Model (USM) for version 3 of the Simple Network Management Protocol (SNMPv3)</title>
<author initials='U.' surname='Blumenthal' fullname='U. Blumenthal'>
<organization /></author>
<author initials='B.' surname='Wijnen' fullname='B. Wijnen'>
<organization /></author>
<date year='2002' month='December' />
<abstract>
<t>This document describes the User-based Security Model (USM) for Simple Network Management Protocol (SNMP) version 3 for use in the SNMP architecture.  It defines the Elements of Procedure for providing SNMP message level security.  This document also includes a Management Information Base (MIB) for remotely monitoring/managing the configuration parameters for this Security Model.  This document obsoletes RFC 2574. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='STD' value='62' />
<seriesInfo name='RFC' value='3414' />
<format type='TXT' octets='193558' target='http://www.rfc-editor.org/rfc/rfc3414.txt' />
</reference>

 	  
      <reference anchor="SHA">
      <front>
      <title>Secure Hash Standard (SHS)</title>
      <author>
      <organization>National Institute of Standards and Technology</organization>
      </author>
      <date month="March" year="2012" />
      </front>
      <seriesInfo name="FIPS" value="PUB 180-4" />
      </reference>

    </references>

    <references title="Informative References">

<!--  RFC3410 is required to support the boilerplate text.-->

<reference anchor='RFC1321'>

<front>
<title abbrev='MD5 Message-Digest Algorithm'>The MD5 Message-Digest Algorithm</title>
<author initials='R.' surname='Rivest' fullname='Ronald L. Rivest'>
<organization>Massachusetts Institute of Technology, (MIT) Laboratory for Computer Science</organization>
<address>
<postal>
<street>545 Technology Square</street>
<street>NE43-324</street>
<city>Cambridge</city>
<region>MA</region>
<code>02139-1986</code>
<country>US</country></postal>
<phone>+1 617 253 5880</phone>
<email>rivest@theory.lcs.mit.edu</email></address></author>
<date year='1992' month='April' /></front>

<seriesInfo name='RFC' value='1321' />
<format type='TXT' octets='35222' target='http://www.rfc-editor.org/rfc/rfc1321.txt' />
</reference>


  <reference anchor='RFC3411'>

<front>
<title>An Architecture for Describing Simple Network Management Protocol (SNMP) Management Frameworks</title>
<author initials='D.' surname='Harrington' fullname='D. Harrington'>
<organization /></author>
<author initials='R.' surname='Presuhn' fullname='R. Presuhn'>
<organization /></author>
<author initials='B.' surname='Wijnen' fullname='B. Wijnen'>
<organization /></author>
<date year='2002' month='December' />
<abstract>
<t>This document describes an architecture for describing Simple Network Management Protocol (SNMP) Management Frameworks.  The architecture is designed to be modular to allow the evolution of the SNMP protocol standards over time.  The major portions of the architecture are an SNMP engine containing a Message Processing Subsystem, a Security Subsystem and an Access Control Subsystem, and possibly multiple SNMP applications which provide specific functional processing of management data.  This document obsoletes RFC 2571. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='STD' value='62' />
<seriesInfo name='RFC' value='3411' />
<format type='TXT' octets='140096' target='http://www.rfc-editor.org/rfc/rfc3411.txt' />
</reference>

<reference anchor='RFC3412'>

<front>
<title>Message Processing and Dispatching for the Simple Network Management Protocol (SNMP)</title>
<author initials='J.' surname='Case' fullname='J. Case'>
<organization /></author>
<author initials='D.' surname='Harrington' fullname='D. Harrington'>
<organization /></author>
<author initials='R.' surname='Presuhn' fullname='R. Presuhn'>
<organization /></author>
<author initials='B.' surname='Wijnen' fullname='B. Wijnen'>
<organization /></author>
<date year='2002' month='December' />
<abstract>
<t>This document describes the Message Processing and Dispatching for Simple Network Management Protocol (SNMP) messages within the SNMP architecture.  It defines the procedures for dispatching potentially multiple versions of SNMP messages to the proper SNMP Message Processing Models, and for dispatching PDUs to SNMP applications.  This document also describes one Message Processing Model - the SNMPv3 Message Processing Model.  This document obsoletes RFC 2572. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='STD' value='62' />
<seriesInfo name='RFC' value='3412' />
<format type='TXT' octets='95710' target='http://www.rfc-editor.org/rfc/rfc3412.txt' />
</reference>

<reference anchor='RFC3417'>

<front>
<title>Transport Mappings for the Simple Network Management Protocol (SNMP)</title>
<author initials='R.' surname='Presuhn' fullname='R. Presuhn'>
<organization /></author>
<date year='2002' month='December' />
<abstract>
<t>This document defines the transport of Simple Network Management Protocol (SNMP) messages over various protocols.  This document obsoletes RFC 1906. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='STD' value='62' />
<seriesInfo name='RFC' value='3417' />
<format type='TXT' octets='38650' target='http://www.rfc-editor.org/rfc/rfc3417.txt' />
</reference>


<reference anchor='RFC4231'>
<front>
<title>Identifiers and Test Vectors for HMAC-SHA-224, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512</title>
<author initials='M.' surname='Nystrom' fullname='M. Nystrom'>
<organization /></author>
<date year='2005' month='December' />
<abstract>
<t>This document provides test vectors for the HMAC-SHA-224, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512 message authentication schemes.  It also provides ASN.1 object identifiers and Uniform Resource Identifiers (URIs) to identify use of these schemes in protocols.  The test vectors provided in this document may be used for conformance testing. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='4231' />
<format type='TXT' octets='17725' target='http://www.rfc-editor.org/rfc/rfc4231.txt' />
</reference>


<reference anchor='RFC4634'>
<front>
<title>US Secure Hash Algorithms (SHA and HMAC-SHA)</title>
<author initials='D.' surname='Eastlake' fullname='D. Eastlake'>
<organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'>
<organization /></author>
<date year='2006' month='July' />
<abstract>
<t>The United States of America has adopted a suite of Secure Hash Algorithms (SHAs), including four beyond SHA-1, as part of a Federal Information Processing Standard (FIPS), specifically SHA-224 (RFC 3874), SHA-256, SHA-384, and SHA-512. The purpose of this document is to make source code performing these hash functions conveniently available to the Internet community. The sample code supports input strings of arbitrary bit length. SHA-1's sample code from RFC 3174 has also been updated to handle input strings of arbitrary bit length. Most of the text herein was adapted by the authors from FIPS 180-2.&lt;/t>&lt;t> Code to perform SHA-based HMACs, with arbitrary bit length text, is also included. This memo provides information for the Internet community.</t></abstract></front>
<seriesInfo name='RFC' value='4634' />
<format type='TXT' octets='197147' target='http://www.rfc-editor.org/rfc/rfc4634.txt' />
</reference>

<reference anchor='RFC4868'>
<front>
<title>Using HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512 with IPsec</title>
<author initials='S.' surname='Kelly' fullname='S. Kelly'>
<organization /></author>
<author initials='S.' surname='Frankel' fullname='S. Frankel'>
<organization /></author>
<date year='2007' month='May' />
<abstract>
<t>This specification describes the use of Hashed Message Authentication Mode (HMAC) in conjunction with the SHA-256, SHA-384, and SHA-512 algorithms in IPsec.  These algorithms may be used as the basis for data origin authentication and integrity verification mechanisms for the Authentication Header (AH), Encapsulating Security Payload (ESP), Internet Key Exchange Protocol (IKE), and IKEv2 protocols, and also as Pseudo-Random Functions (PRFs) for IKE and IKEv2.  Truncated output lengths are specified for the authentication-related variants, with the corresponding algorithms designated as HMAC-SHA-256-128, HMAC-SHA-384-192, and HMAC-SHA-512-256.  The PRF variants are not truncated, and are called PRF-HMAC-SHA-256, PRF-HMAC-SHA-384, and PRF-HMAC-SHA-512. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='4868' />
<format type='TXT' octets='41432' target='http://www.rfc-editor.org/rfc/rfc4868.txt' />
</reference>

<!--
<reference anchor='RFC6151'>
<front>
<title>Updated Security Considerations for the MD5 Message-Digest and the HMAC-MD5 Algorithms</title>
<author initials='S.' surname='Turner' fullname='S. Turner'>
<organization /></author>
<author initials='L.' surname='Chen' fullname='L. Chen'>
<organization /></author>
<date year='2011' month='March' />
<abstract>
<t>This document updates the security considerations for the MD5 message digest algorithm.  It also updates the security considerations for HMAC-MD5.  This document is not an Internet Standards Track specification; it is published for informational purposes.</t></abstract></front>

<seriesInfo name='RFC' value='6151' />
<format type='TXT' octets='14662' target='http://www.rfc-editor.org/rfc/rfc6151.txt' />
</reference>
-->

    </references>
    
  
    <!--
<section anchor="appendix" title="Appendix A">
	<t>You can add appendices just as regular sections, the only
difference is that they go under "back" element, and get letters 
instead of numbers</t>
</section>
-->

 

    <!--
$Id: mib-doc-template.xml,v 1.5 2008/04/08 17:39:56 H73653 Exp $

  -->
  </back>
</rfc>