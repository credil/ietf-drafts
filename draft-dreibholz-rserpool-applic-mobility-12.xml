<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<!-- $Id: draft-dreibholz-rserpool-applic-mobility-08.xml 2433 2010-12-02 21:18:39Z dreibh $ -->

<?rfc toc="yes"?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc strict="no" ?>
<?rfc symrefs="yes" ?>

<rfc category="info" ipr="pre5378Trust200902" docName="draft-dreibholz-rserpool-applic-mobility-12.txt">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>


<front>

<title abbrev="SCTP Mobility with RSerPool">
Applicability of Reliable Server Pooling for SCTP-Based Endpoint Mobility
</title>

<!-- ************** THOMAS DREIBHOLZ *************** -->
<author initials="T." surname="Dreibholz" fullname="Thomas Dreibholz">
<organization abbrev="Simula Research Laboratory">Simula Research Laboratory, Network Systems Group</organization>
<address>
<postal>
   <street>Martin Linges vei 17</street>
   <city>1364 Fornebu</city>
   <region>Østlandet</region>
   <country>Norway</country>
</postal>
<phone>+47-6782-8200</phone>
<facsimile>+47-6782-8201</facsimile>
<email>dreibh@simula.no</email>
<uri>http://www.iem.uni-due.de/~dreibh/</uri>
</address>
</author>

<author initials="J." surname="Pulinthanath" fullname="Jobin Pulinthanath">
<organization abbrev="University of Duisburg-Essen">
University of Duisburg-Essen, Institute for Experimental Mathematics
</organization>
<address>
<postal>
   <street>Ellernstraße 29</street>
   <city>45326 Essen</city>
   <region>Nordrhein-Westfalen</region>
   <country>Germany</country>
</postal>
<phone>+49-201-1837637</phone>
<facsimile>+49-201-1837673</facsimile>
<email>jp@iem.uni-due.de.de</email>
</address>
</author>

<date day="2" month="July" year="2012" />
<keyword>Internet-Draft</keyword>

<abstract>
<t>This document describes a novel mobility concept based on a combination
   of SCTP with Dynamic Address Reconfiguration extension and Reliable
   Server Pooling (RSerPool).</t>
</abstract>

</front>


<middle>

<section title="Introduction">
<t>An increasing amount of Internet devices is getting mobile. Therefore, there
   is a growing demand for software solutions allowing for a seamless handover of
   communication sessions between multiple networks, e.g. to allow for a laptop
   or PDA to use a fast Ethernet connection when available, hand over to a WLAN when
   moving and hand over again to UMTS when the WLAN becomes unreachable - without
   interrupting the running communication sessions.</t>

<t>Mobility handling is a deficiency of the common IP-based networks. Most of the
   available solutions are based on the network layer. The disadvantage of such
   solutions is that fundamental changes in the network infrastructure are needed.
   Therefore, we propose a new solution based on the upper layers to overcome these
   disadvantages. In this document, we present our mobility solution based on the
   SCTP protocol with Dynamic Address Reconfiguration extension and
   Reliable Server Pooling (RSerPool).</t>
</section>


<section title="Existing Mobility Solutions">

<section title="Mobile IP and Mobile IPv6">
   <t>In the concept of Mobile IP <xref target="RFC5944" />
   every node must register to a Home-Agent (HA) in
   its own home network. Then, the nodes are reachable under their home
   addresses managed by the HA. When a node leaves its home network, it must
   also register at a Foreign Agent (FA) in the new network. After that, a
   tunnel is established between the HA and the FA. Any traffic to the mobile
   node is then tunnelled by its HA to the FA and forwarded by the FA to the
   node itself. Clearly, the detour of all traffic via HA and FA is
   inefficient and results in an increased transmission delay.</t>

   <t>Mobile IPv6 <xref target="RFC6275" /> is an extension of Mobile IP.
   In Mobile IPv6, the FA is not needed. The packets will be
   tunnelled from the HA to the Gateway Router in the foreign network, which
   forwards the packets to the endpoint. The inefficiency due to the detour of
   traffic as described for Mobile IP remains.</t>

</section>


<section title="SCTP with Dynamic Address Reconfiguration">
<t>Using the SCTP protocol (see
   <xref target="RFC4960" />
   together with its Dynamic Address Reconfiguration extension
   (Add-IP, see <xref target="RFC5061" />),
   it is possible for a mobile endpoint to inform its
   peer on address changes. That is, when a moving mobile client gets in the
   vicinity of an additional radio station, it sends an "ASCONF Add Address
   Request" to tell its peer that it is now reachable under an additional
   network-layer address. After that, the peer endpoint can use this additional
   address for a new SCTP path.
   When the first radio station becomes unreachable, the node can send an "ASCONF
   Delete Address Request" to the peer endpoint. After that, the peer removes the
   corresponding SCTP path to the unusable network-layer address.</t>

<t>The following two cases for handovers are possible:
   <list style="symbols">
      <t>Make-before-Break: An additional SCTP path can be used before the original
         path becomes unusable. This case is trivial, since there is a continuous
         connectivity.
      </t>
      <t>Break-before-Make: The original SCTP path becomes unusable before a new
         SCTP path can be used. For the case that only one endpoint performs a
         handover procedure at the same time, the mobile endpoint can always use
         Add-IP to communicate its new address to its peer endpoint. However, when
         both endpoints perform a handover simultaneously, no endpoint is able to
         tell its corresponding peer the new address.
      </t>
   </list>
   </t>

</section>

</section>


<section title="Solutions for Simultaneous Handovers">

<!--<section title="Unavailablity of two nodes">
<t>The solutions presented before work only in situations where only one
node of the connection change its address. If both nodes change their addresses
simultaneously, they can not inform each other about the address change, so the
SCTP association breaks. To solve this problem the presented solutions must be
for example combined with other solutions. Solutions for the simultaneous moving
will be presented below.</t>
</section>-->

<section title="SCTP with Add-IP and Mobile-IP">
<t>Using SCTP with Add-IP and Mobile IP/Mobile IPv6, the ASCONF messages
   will be sent to the home address of the peer node. That is, even when
   both nodes are mobile, each endpoint is able to reach its peer endpoint
   using the corresponding home address. However, this solution still
   requires the full Mobile IP/Mobile IPv6 infrastructure.</t>
</section>

<!--
<section title="Dynamic DNS">
<t>In this solution the DNS entries must be updated, if the addresses
   of the mobile devices changes. Because of the address changes, the connection
   will fail. Now the nodes query the DNS for the new address of their destination,
   so they get the updated address. To consider as many as possible changes of the
   addresses of the mobile devices, the lifetime of the DNS must be very low.</t>
</section>
-->

<section title="SCTP with Add-IP and RSerPool">
   <t>Using RSerPool (see
   <xref target="RFC3237" />,
   <xref target="RFC5351" />, <xref target="RFC5352" />, <xref target="RFC5353" />,
   <xref target="RFC5354" />, <xref target="RFC5355" />, <xref target="RFC5356" />,
   at least one node registers as a Pool Element (PE) at an ENRP server
   under a Pool Handle (PH) known to both endpoints.
   Upon handover, it is simply necessary for the PE endpoint to re-register,
   i.e. to update its registration with its new address. The other endpoint
   can - in the role of a Pool User (PU) - ask an ENRP server for its peer
   node's new addresses. After the new address is known, it is able to create
   a new SCTP path and continue the communication.</t>

<t>The usage of RSerPool to provide support for mobile endpoints provides
   the following advantages:
   <list style="symbols">
      <t>Simplicity: No Mobile IP/Mobile IPv6 infrastructure is needed.
         In particular, it is not necessary that the providers of used
         networks (e.g. public WLAN access points, UMTS providers, etc.)
         provide any support for the mobility solution.</t>
      <t>Efficiency: No tunnelling of traffic is necessary.</t>
      <t>Applicability: All major SCTP implementations already support
         the Dynamic Address Reconfiguration extension. It is only
         necessary to provide support for RSerPool, e.g. in the form of a
         userspace library, which is much easier to deploy than
         kernel extensions.</t>
      <t>Flexibility: RSerPool provides a complete session layer. That is,
         providing applications on top of RSerPool makes the support for
         high availability simple.</t>
   </list>
</t>

<!--
<t>Based on RSerPool, one of the mobile nodes acts as a Pool Element,
and the other one as a Pool User. If the Pool User is doing a handover, it sends
a "SCTP address add request" to announce its new address to the Pool Element. If
the Pool Element or both nodes are doing a handover in a
"Break-before-Make"-Situation the additional session layer of RSerPool triggers
a failover procedure. The Pool Element reregister again at the Name Server with
the new address of the new network, but with the same Pool Handle. The Name
Server sends a Registration response back. After that the Name Servers
synchronize the new informations through the ENRP Protocol. Now the Pool User
ask for a Name Resolution at a arbitrary Name Server. The Name Server sends the
requested informations, also the new address of the Pool Element with the old
Pool Handle. Now the Pool User recognizes the searched Pool Element with the old
Pool Handle and establish a Connection to that Pool Element. In a
"Make-before-Break"-Situation, the connection can be maintained over the new
network. In a low bandwith traffic the connection will not be affected by the
handover. In a high bandwith traffic along with the new address a new primary
path will be established. The only problem is that the congestion window of the
new path is small and needs time to recover.
</t>
-->

<t>A more detailed description of our approach for endpoint mobility, as well
   as a performance analysis using a prototype implementation,
   can be found in our paper <xref target="LCN2003" />.</t>

</section>

</section>


<section title="Reference Implementation">
<t>The RSerPool reference implementation RSPLIB can be found at
<xref target="RSerPoolPage" />. It supports the functionalities
defined by
<xref target="RFC5351" />,
<xref target="RFC5352" />,
<xref target="RFC5353" />,
<xref target="RFC5354" /> and
<xref target="RFC5356" /> as well as the options
<xref target="I-D.dreibholz-rserpool-asap-hropt" />,
<xref target="I-D.dreibholz-rserpool-enrp-takeover" /> and
<xref target="I-D.dreibholz-rserpool-delay" />.
An introduction to this implementation is provided in
<xref target="Dre2006" />.</t>
</section>


<section title="Security Considerations">
<t>Security considerations for RSerPool systems are described by
<xref target="RFC5355" />.</t>
</section>


<section title="IANA Considerations">
<t>This document introduces no additional considerations for IANA.</t>
</section>


</middle>


<back>

<references title='Normative References'>
 <?rfc include="reference.RFC.3237" ?>
 <?rfc include="reference.RFC.4960" ?>
 <?rfc include="reference.RFC.5061" ?>
 <?rfc include="reference.RFC.5944" ?>
 <?rfc include="reference.RFC.6275" ?>

 <?rfc include="reference.RFC.5351" ?>
 <?rfc include="reference.RFC.5352" ?>
 <?rfc include="reference.RFC.5353" ?>
 <?rfc include="reference.RFC.5354" ?>
 <?rfc include="reference.RFC.5355" ?>
 <?rfc include="reference.RFC.5356" ?>

 <?rfc include="reference.I-D.dreibholz-rserpool-asap-hropt" ?>
 <?rfc include="reference.I-D.dreibholz-rserpool-delay" ?>
 <?rfc include="reference.I-D.dreibholz-rserpool-enrp-takeover" ?>
</references>

<references title='Informative References'>
 <?rfc include="reference.Dre2006" ?>
 <?rfc include="reference.LCN2003" ?>
 <?rfc include="reference.RSerPoolPage" ?>
</references>

</back>

</rfc>
