<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="no"?>
<?rfc subcompact="no"?>
<?rfc subcompact="no"?>
<?rfc authorship="yes"?>
<?rfc tocappendix="yes"?>
<rfc category="info" docName="draft-phinney-roll-rpl-industrial-applicability-00" ipr="trust200902">
<front>
    <title abbrev="RPL-industrial-applicability-statement">RPL applicability in industrial networks</title>

    <author fullname="Tom Phinney" initials="T"
    		surname="Phinney" role="editor">
      <organization>consultant</organization>

      <address>
        <postal>
          <street>5012 W. Torrey Pines Circle</street>
          <city>Glendale</city>
          <region>AZ</region>
          <code>85308-3221</code>
          <country>USA</country>
        </postal>

        <phone>+1 602 938 3163</phone>

        <email>tom.phinney@cox.net</email>
      </address>
    </author>
    <author fullname="Pascal Thubert" initials="P" 
            surname="Thubert">
      <organization abbrev="Cisco">Cisco Systems</organization>

      <address>
        <postal>
          <street>Village d'Entreprises Green Side</street>
          <street>400, Avenue de Roumanille</street>
          <street>Batiment T3</street>
          <city>Biot - Sophia Antipolis</city>
          <code>06410</code>
          <country>FRANCE</country>
        </postal>

        <phone>+33 497 23 26 34</phone>

        <email>pthubert@cisco.com</email>
      </address>
    </author>

    <author fullname="Robert Assimiti" initials="RA" 
            surname="Assimiti">
			
      <organization abbrev="Nivis">Nivis</organization>
		
      <address>
        <postal>
          <street>1000 Circle 75 Parkway SE, Ste 300</street>
		  <city>Atlanta</city>
          <region>GA</region>
          <code>30339</code>
          <country>USA</country>
        </postal>

        <phone>+1 678 202 6859</phone>

        <email>robert.assimiti@nivis.com</email>
		
      </address>
    </author>
    <date />

    <area>Routing Area</area>

    <workgroup>ROLL</workgroup>

    <keyword>Draft</keyword>
	   <abstract>
      <t>The wide deployment of wireless devices,
      with their low installed cost (compared to wired devices),
	  will significantly improve the productivity and safety of industrial plants,
	  while simultaneously increasing the efficiency and safety of the plant's workers,
	  by extending and making more timely
	  the information set available about plant operations.
	  The new Routing Protocol for Low Power and Lossy Networks (RPL)
	  defines a Distance Vector protocol that is designed for
	  such networks. The aim of this document is to analyze the applicability
	  of that routing protocol in industrial LLNs of field devices.

	</t>
    </abstract>
</front>

<middle>
  <section title="Introduction">

	  <t>Information Technology (IT) is already, and increasingly will be
	  applied to industrial Automation and Control System (IACS) technology in application areas where
	  those IT technologies can be constrained sufficiently by Service Level Agreements (SLA)
	  or other modest change that they are able to meet the operational needs of IACS.
	  When that happens, the IACS benefits from the large intellectual, 
	  experiential and training investment that has already occurred in those IT precursors.  
	  One can conclude that future reuse of additional IT protocols for IACS
	  will continue to occur due to the significant intellectual, experiential and training
	  economies which result from that reuse.
	</t>
	
	  <t>Following that logic, many vendors are already extending or replacing 
	  their local field-bus technology with Ethernet and IP-based solutions. 
	  Examples of this evolution include CIP EtherNet/IP, Modbus/TCP,
	  Foundation Fieldbus HSE, PROFInet and Invensys/Foxboro FOXnet.
	  At the same time, wireless, low power field devices are
	  being introduced that facilitate a significant increase in the amount
	  of information which industrial users can collect and the number of
	  control points that can be remotely managed.

	</t>
	
	<t>IPv6 appears as a core technology at the conjunction of both trends, as illustrated
	by the current <xref target="ISA100.11a"/> industrial Wireless Sensor Networking
	(WSN) specification, where layers 1-4 technologies developed for end uses other than
	IACS - IEEE 802.15.4 PHY and MAC,	6LoWPAN and IPv6, and UDP - are adapted to
	IACS use. But due to the lack of open standards for routing 
	in Low power and Lossy Networks (LLN), even ISA100.11a leaves the routing operation to 
	proprietary methods.</t>
	
     <t>The IETF ROLL Working Group has defined
      application-specific routing requirements for a LLN routing protocol, specified in:
	  <list>
	  <t>
	  <xref target="RFC5548">Routing Requirements for Urban LLNs</xref>,  
	  </t><t>
	  <xref target="RFC5673">Industrial Routing Requirements in LLNs</xref>,
	  </t><t> 
	  <xref target="RFC5826">Home Automation Routing Requirements in LLNs</xref>, and 
	  </t><t>
	  <xref target="RFC5867">Building Automation Routing Requirements in LLNs</xref>. 
	  </t>
	  </list>
	  </t>
	  
	  <t> <xref target="I-D.ietf-roll-rpl">
		The Routing Protocol for Low Power and Lossy Networks (RPL)
		</xref> specification and its <xref target="I-D.ietf-roll-p2p-rpl">
		point to point extension/optimization </xref> 
		define a generic Distance Vector
		protocol that is adapted to a variety of Low Power and Lossy Networks
		(LLN) types by the application of specific Objective Functions (OFs).
		RPL forms Destination Oriented Directed Acyclic Graphs (DODAGs)
	    within instances of the protocol, each instance being associated with
		an Objective Function to form a routing topology. 
	  </t>
	  

	  <t>A field device that belongs to an instance uses the OF to
		determine which DODAG and which Version of that DODAG the device should join. 
		The device also uses the OF to select a number of routers within the
		DODAG current and subsequent Versions to serve as parents or as feasible successors.
		A new Version of the DODAG is periodically
		reconstructed to enable a global reoptimization of the graph.
	  </t>
	  
	  <t>
		A RPL OF states the outcome of the process used by a RPL node to select 
		and optimize routes within a RPL Instance based on the information 
		objects available. 
		The separation of OFs from the core protocol specification allows RPL
		to be adapted to meet the different optimization criteria required by
		the wide range of industrial classes of traffic and applications.
	  </t>
	  		  
    <t>This document provides information on how RPL can accommodate the industrial requirements for
	LLNs, in particular as specified in <xref target="RFC5673"/>. 
    </t>
  </section>


    <section anchor="Terminology" title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>

    <t>Additionally, this document uses terminology from <xref
      target="I-D.ietf-roll-terminology"></xref>, and uses usual terminology from 
	  the Process Control and Factory Automation industries, some of which
	  is recapitulated below:
	  <list hangIndent="6" style="hanging">
          <t hangText="FEC:">Forward error correction</t>
          <t hangText="IACS:">Industrial automation and control systems</t>
          <t hangText="RAND:">reasonable and non-discriminatory (relative to licensing of patents)</t>
	  </list>
    </t> 	

  </section>


  <section title="Overview">

  <section title="Deployment scenarii">
<!-- 
Mainly a very short summary of the deployment scenario and 
reference to the Reqs RFC)
-->
	<t> <xref target="RFC5673"/> describes in detail the routing requirements for industrial LLNs.
	This RFC provides information on the varying deployment scenarios for such LLNs
	and how RPL assists in meeting those requirements.</t>

	<t>Large industrial plants, or major operating areas within such plants, repeatedly go through four major
	phases, each of which typically lasts from months to years: 
	  <list hangIndent="6" style="hanging">
		<t hangText="  P1:">Construction or major modification phase</t>
		<t hangText="  P2:">Planned startup phase</t>
		<t hangText="  P3:">Normal operation phase</t>
		<t hangText="  P4:">Planned shutdown phase</t>
	</list>
	</t>
	<t>followed eventually by an (at least theoretical)
	  <list hangIndent="6" style="hanging">
		<t hangText="  P5:">Plant decommissioning phase.</t>
	</list>
	</t>
	
	<t>It is also likely, after a major catastrophe at a plant, to have a
	  <list hangIndent="6" style="hanging">
		<t hangText="  P6:">Post-emergency recovery and repair phase.</t>
	</list>
	</t>
	
	<t>The deployment scenarios for wireless LLN devices may be different in each of these phases. In particular, 
	during the Construction or major modification phase (P1), LLN devices may be installed months before the 
	intended LLN can become usefully operational (because needed routers and infrastructure devices 
	are not yet installed or active),	
	and there are likely to be many personnel in whom the plant owner/operator has only limited trust, such as
	subcontractors and others in the plant area who have undergone only a cursory background investigation 
	(if any at all). In general, during this phase, plant instrumentation is not yet operational, so could be 
	removed and replaced by a Trojaned device without much likelihood of physical detection of the substitution. 
	Thus physical security of LLN devices is generally a more significant risk factor during this phase than 
	once the plant is operational, where simple replacement of device electronics is detectable.</t>

	<t>Extra LLN devices and even extra LLN subnets may be employed during Planned startup (P2) 
	and Planned shutdown (P4) phases, in support of the task of transitioning the plant or plant area
	between operational and shutdown states. 
	The extra devices typically provide extra monitoring as the plant transitions infrequent activity states.
	(In many continuous process plants, up to 2x extra staff are employed at monitoring and control workstations 
	during these two phases, precisely because the plant is undergoing extraordinary behavior as it transitions
	to or from its steady-state operational condition.)</t>

	<t>Similar transient devices and subnets may be used during an unscheduled Post-emergency recovery and repair phase
	(P6) of operation, but in that case the extra devices usually are routers substituting for plant LLN devices that have
	been damaged by the incident (such as a fire, explosion, flood, tornado or hurricane) that induced the emergency.</t>

	<t>The Planned startup (P2) and Planned shutdown (P4) phases are similar in many respects, but the LLN environment
	of the two can be quite different, since the Planned shutdown phase can assume that the stable LLN environment used
	for Normal operation (P3) is functional during shutdown, whereas that stable environment usually is still 
	being established during startup.</t>

	<t>The Post-emergency recovery and repair phase (P6) typically operates in an LLN environment that is somewhere
	between that of the Planned startup (P2) and Normal operation (P3) phases, but with an indeterminate number of
	temporary routers placed to facilitate communication across and around the area affected by the catastrophe.</t>

	<t>Smaller industrial plants and sites may go through similar phases, but often commingle the phases because,
	in those smaller plants, the phases require less planning and structuring of personnel responsibilities
	and thus permit less formalization and partitioning of the operating scenarios. For example, it is much
	simpler, and usually requires much less planning, to bring new equipment on a skid into a plant, using a forklift,
	than to lay temporary railroad track or employ an extended-axle heavy haul tractor-trailer to deliver a 
	multi-ton process vessel, and temporarily deploy and use very large heavy-lift cranes to install it.
	In the former cases, nearby equipment usually can continue normal operation while the installation proceeds;
	in the latter case that is almost always impossible, due to safety and other concerns.</t>
	
    <t>The domain of applicability for the RPL protocol may include all phases but the Normal Operation phase,
	where the bandwidth allocation and the routes are usually optimized by an external Path Computing Engine (PCE),
	e.g. an ISA100.11a System Manager.</t>
	
	<t>Additionally, it could be envisioned to include RPL in the normal operation provided that
	a new Objective Function is defined that actually interacts with the PCE is order to establish 
	the reference topology, in which case RPL operations would only apply to emergency repair actions.
	when the reference topology becomes unusable for some failure, and as long as the problem persists.</t>
	
  </section>
      <section title="Applications and Traffic classes">
        <t>The industrial market classifies process applications into three
        broad categories and six classes.</t>

        <t><list style="symbols">
            <t>Safety <list style="symbols">
                <t>Class 0: Emergency action - Always a critical function</t>
              </list></t>

            <t>Control<list style="symbols">
                <t>Class 1: Closed loop regulatory control - Often a critical
                function</t>

                <t>Class 2: Closed loop supervisory control - Usually
                non-critical function</t>

                <t>Class 3: Open loop control &ndash; Operator takes action
                and controls the actuator (human in the loop)</t>
              </list></t>

            <t>Monitoring <list style="symbols">
                <t>Class 4: Alerting - Short-term operational effect (for
                example event-based maintenance)</t>

                <t>Class 5: Logging and downloading / uploading - No immediate
                operational consequence (e.g., history collection,
                sequence-of-events, preventive maintenance)</t>
              </list></t>
          </list>
        Safety critical functions effect the basic safety integrity
        of the plant. These normally dormant functions kick in only when
        process control systems, or their operators, have failed. By design
        and by regular interval inspection, they have a well-understood
        probability of failure on demand in the range of typically once per
        10-1000 years.</t>

        <t>In-time deliveries of messages becomes more relevant as the class
        number decreases.</t>

        <t>Note that for a control application, the jitter is just as
        important as latency and has a potential of destabilizing control
        algorithms.</t>

        <t>The domain of applicability for the RPL protocol probably matches 
		the range of classes where industrial users are interested in deploying 
		wireless networks. This domain includes monitoring classes (4 and 5), and
		the non-critical portions of control classes (2 and 3). RPL might also be 
		considered as an additional repair mechanism in all situations, and 
		independently of the flow classification and the medium type.</t>
	</section>	
	
    <section title="RPL applicability matrix">
	<t>It appears from the above sections that whether and the way RPL can be 
	applied for a given flow depends both on the deployment scenario and on 
	the class of application / traffic. At a high level, this can be
	summarized by the following matrix:
	
	    <figure anchor="table1" title="RPL applicability matrix">
            <artwork>
            	<![CDATA[ 
+---------------------+------------------------------------------------+		
|   Phase \  Class    |   0       1       2       3       4       5    |
+=====================+================================================+
|   Construction      |                   X       X       X       X    |
+---------------------+------------------------------------------------+
|   Planned startup   |                   X       X       X       X    |
+---------------------+------------------------------------------------+
|   Normal operation  |                           ?       ?       ?    |
+---------------------+------------------------------------------------+
|   Planned shutdown  |                   X       X       X       X    |
+---------------------+------------------------------------------------+
|Plant decommissioning|                   X       X       X       X    |
+---------------------+------------------------------------------------+
| Recovery and repair |   X       X       X       X       X       X    |
+---------------------+------------------------------------------------+
		
 ? : typically usable for all but higher-rate classes 0,1 PS traffic
	 ]]></artwork></figure>
    </t>
	</section>
	</section>	

  <section title="Characterization of communication flows in IACS wireless networks">
   <section title="General">
  	<t>In an IACS, high-rate communications flows (e.g., 1&nbsp;Hz or 4&nbsp;Hz for a traditional process automation network)
  	typically are such that only a single wireless LLN hop separates the source device from a LLN Border Router (LBR) to a significantly higher data-rate backbone network, typically based on IEEE&nbsp;802.3, 
	IEEE&nbsp;802.11, or IEEE&nbsp;802.16, as illustrated in  <xref target="fig1"/>. </t>
	<t>
          <figure anchor="fig1" title="High-rate low-delay low-variance IACS topology">
          <artwork><![CDATA[
               ---+------------------------ 
                  |          Plant Network 
                  | 
               +-----+ 
               |     | Gateway 
               |     | 
               +-----+ 
                  | 
                  |      Backbone 
            +--------------------+------------------+ 
            |                    |                  | 
         +-----+             +-----+             +-----+ 
         |     | LLN border  |     | LLN border  |     | LLN border
    o    |     | router      |     | router      |     | router 
         +-----+             +-----+             +-----+ 
    o                  o                   o                 o
        o    o   o         o   o  o   o         o  o   o o 
		                        LLN 
		
 o : stationary wireless field device, seldom acting as an LLN router
	 ]]></artwork></figure>
    </t>
  	<t>For factory automation networks, the basic communications cycle for control is typically much faster, 
  	on the order of 100&nbsp;Hz or more. In this case the LLN itself may be based on high-data-rate IEEE&nbsp;802.11 or a
  	100&nbsp;Mbit/s or faster optical link, and the higher-rate network used by the LBRs to connect the LLN to superior
  	automation equipment typically might be based on fiber-optic IEEE&nbsp;802.3, with multiple LBRs around the periphery
  	of the factory area, so that most high-rate communications again requires only a single wireless LLN hop.</t>

  	<t>Multi-hop LLN routing is used within the LLN portion of such networks to provide backup communications
  	paths when primary single-hop LLN paths fail, or for lower repetition rate communications where longer LLN
  	transit times and higher variance are not an issue. Typically, the majority of devices in an IACS can tolerate
  	such higher-delay higher-variance paths, so routing choices often are driven by energy considerations for the
  	affected devices, rather than simply by IACS performance requirements, as
	illustrated in  <xref target="fig2"/>.</t>
	<t>
     <figure  anchor="fig2" title="Low-rate higher-delay higher-variance IACS topology">
            <artwork><![CDATA[                ---+------------------------ 
                  |          Plant Network 
                  | 
               +-----+ 
               |     | Gateway 
               |     | 
               +-----+ 
                  | 
                  |      Backbone 
            +--------------------+------------------+ 
            |                    |                  | 
         +-----+             +-----+             +-----+ 
         |     | Backbone    |     | Backbone    |     | Backbone 
         |     | router      |     | router      |     | router 
         +-----+             +-----+             +-----+ 
            o    o   o    o     o   o  o   o   o   o  o   o o 
        o o   o  o   o  o  o o   o  o  o   o   o   o  o  o  o o 
       o  o o  o o    o   o   o  o  o  o    M    o  o  o o o 
       o   o  M o  o  o     o  o    o  o  o    o  o   o  o   o 
         o   o o       o        o  o         o        o o 
                 o           o          o             o     o
		                        LLN 
                        
 o : stationary wireless field device, often acting as an LLN router	
 M : mobile wireless device
	 ]]></artwork></figure>
    </t>
  	<t>Two decades of experience with digital fieldbuses has shown that four communications paradigms dominate
  	in IACS:
	  <list hangIndent="5" style="hanging">
		<t hangText="SS:  ">Source-sink</t>
		<t hangText="PS:  ">Publish-subscribe</t>
		<t hangText="P2P: ">Peer-to-peer</t>
		<t hangText="P2MP:">Peer-to-multipeer</t>
	</list>
	</t>
   </section>
	
   <section title="Source-sink (SS) communication paradigm">
  	<t>In SS, the source-sink communication paradigm, each of many devices in one set, S1, sends UDP-like messages,
  	usually infrequently and intermittently, to a second set of devices, S2, determined by a common multicast
  	address. A typical example would be that all devices within a given process unit N are configured to send
  	process alarm messages to the multicast address Receivers_of_process_alarms_for_unit_N. Receiving devices,
  	typically on non-LLN networks accessed via LBRs, are configured to receive such multicast messages if their
  	work assignment covers process unit N, and not otherwise.</t>

  	<t>Timeliness of message delivery is a significant aspect of some SS communication. When the SS traffic conveys
  	process alarms or device alerts, there is often a contractual requirement, and sometimes even a regulatory
  	requirement, on the maximum end-to-end transit delay of the SS message, including both the LLN and non-LLN
  	components of that delay. However, there is no requirement on relative jitter in the delivery of multiple
  	SS messages from the same source, and message reordering during transit is irrelevant.</t>

  	<t>Within the LLN, the SS paradigm simply requires that messages so addressed be forwarded to the
  	responsible LBR (or set of equivalent LBRs) for further forwarding outside the LLN. Within the LLN such traffic
  	typically is device-to-LBR or device-to-redundant-set-of-equivalent-LBRs. In general, SS traffic may be
  	aggregated before forwarding when both the multicast destination address and other QoS attributes are
  	identical. If information on the target delivery times for SS messages is available to the aggregating
  	forwarding device, that device may intentionally delay forwarding somewhat to facilitate further aggregation,
  	which can significantly reduce LLN alarm-reporting traffic during major plant upset events.</t>
   </section>

   <section title="Publish-subscribe (PS, or pub/sub) communication paradigm">
  	<t>In PS, the publish-subscribe communication paradigm, a device sends UDP-like messages, usually periodically or
  	cyclicly (i.e., repetitively but without fixed periodicity), to a single multicast address derived from
  	or correlated with the device's own address. A typical example would be that each sensor and actuator device
  	within a given process unit N is configured to send process state messages to the multicast address that
  	designates its specific publications. In essence the derived multicast address for device D is
  	Receivers_of_publications_by_device_D. Typically those receivers are in two categories:
  	controllers (C) for control loops in which device D participates, and devices accessed via the LLN's LBRs
  	that monitor and/or accumulate historical information about device D's status and outputs.</t>

  	<t>If the controller(s) that receive device D's publication are all outside the LLN and accessed
  	by LBRs, then within the LLN such traffic typically is device-to-LBR or device-to-redundant-set-of-equivalent-LBRs.
  	But if a controller (Cn) is within the LLN, then a number of different LLN-local traffic patterns may be employed,
  	depending on the capabilities of the underlying link technology and on configured performance requirements
  	for such reporting. Typically in such a case, publication by device D is forwarded up a DODAG to an LLN router
  	that is also on a downward DODAG to a destination controller Cn, then forwarded down that second DODAG to that
  	destination controller Cn. Of course, if the LLN router (or even the LBR) is itself the intended destination 
  	controller, which will often be the case, then no downward forwarding occurs.</t>

  	<t>Timeliness of message delivery is a critical aspect of PS communication. Individual messages can be
  	lost without significant impact on the controlled physical process, but typically a sequence of four 
  	consecutive lost messages will trigger fallback behavior of the control algorithms, which is considered
  	a system failure by most system owner/operators. (In general, and unless a local catastrophic event such as a
  	major explosion or a tornado occurs in the plant, invocation of more than one instance of such fallback
  	handling per year, per plant, is considered unacceptable.)</t>

  	<t>Message loss, delay and jitter in delivery of PS messaging is a relative matter. PS messaging is
  	used for transfer of process measurements and associated status from sensors to control computation elements,
  	from control computation elements to actuators, and of current commanded position and status from actuators back
  	to control computation elements. The actual time interval of interest is that which starts with sensing of the
  	physical process (which necessarily occurs before the sensed value can be sent in the first message) and which
  	ends when the computed control correction is applied to the physical process by the appropriate actuator
  	(which cannot occur until after the second message containing the computed control output has been received
  	by that actuator). With rare exception, the control algorithms used with PS messaging in the process automation
  	industries - those managing continuous material flows - rely on fixed-period sampling, computation and transfer
  	of outputs, while those in the factory automation industries - those managing discrete manufacturing operations
  	- rely on bounded delay between sampling of inputs, control computation and transfer of outputs to physical
  	actuators that affect the controlled process.</t>

  	<t>Deliberately manipulated message delay and jitter in delivery of PS messaging has the potential to
  	destabilize control loops. It is the responsibility of conveyed higher-level protocols to protect against such
  	potential security attacks by detecting overly delayed or jittered messages at delivery, converting them
  	into instances of message loss. Thus network and data-link protocols such as IPv6 and Ethernet need not
  	themselves address such issues, although their selection and employment should take the existence (or
  	lack) of such higher-layer protection mechanisms, and the resulting consequences due to excessive delay
  	and jitter, into consideration in their parameterization.</t>

  	<t>In general, PS traffic within the LLN is not aggregated before forwarding, to minimize message loss
  	and delay in reception by any relevant controller(s) that are outside the LLN. However, if all intended
  	destination controllers are within the LLN, and at least one of those intended controllers also serves
  	as an LLN router on a DODAG to off-LLN destinations that all are not controllers, then the router functions
  	in that device may aggregate PS traffic before forwarding when the required routing and other QoS attributes
  	are identical. If information on the target delivery times for PS messages to non-controller devices is
  	available to the aggregating forwarding device, that device may intentionally delay forwarding somewhat
  	to facilitate further aggregation.</t>

  	<t>In some system architectures, message streams that use PS to convey current process measurements and status
  	are compressed at the source through a 2&#8209;dimensional winnowing process that compares
	<list hangIndent="0" style="hanging">
	    <t hangText="1)"> the process measurement values and status of the about-to-be-sent message with
  	 	that of the last actually-sent message, and</t>
  		<t hangText="2)"> the current time vs. the queueing time for the last actually-sent message.</t>
	</list></t>
  	<t>If the interval since that last-sent message is less than a predefined maximum time, and the status
  	is unchanged, and the process measurement(s) conveyed in the message is within predefined deadband(s)
  	of the last-sent measurement value(s), then transmission of the new message is suppressed. Often this
  	suppression takes the form of not queuing the new message for transmission, but in some protocols a brief
  	placeholder message indicating "no significant change" is queued in its stead.</t>
   </section>

   <section title="Peer-to-peer (P2P) communication paradigm">
  	<t>In P2P, the peer-to-peer communication paradigm, a device sends UDP-like or TCP-like messages from one
  	device (D1) to a second device (D2), usually with bidirectional but asymmetric flow of application data,
  	where the amount of data is significantly greater in one direction than the other. Typical examples
  	are transfer of configuration information to or from a process field device, or transfer of captured
  	process diagnostics (e.g., time-stamped noise signatures from a coriolis flowmeter) to an off-LLN
  	higher-level asset management system. Unicast addressing is used in both directions of data flow.</t>

  	<t>In general, specific P2P traffic has only loose timeliness requirements, typically just those required
  	so that response times to human-operator-initiated actions meet human factors requirements. As a
  	consequence, in general, message aggregation is permitted, although few opportunities are likely to
  	present themselves for such aggregation due to the sporadic nature of such messaging to a single
  	destination, and/or due to the large message payloads that often occur in at least one direction
  	of transmission.</t>
   </section>

   <section title="Peer-to-multipeer (P2MP) communication paradigm">
  	<t>In P2MP, the peer-to-multipeer communication paradigm, a device sends UDP-like messages downward,
  	from one device (D1) to a set of other devices (Dn). Typical examples are bulk downloads to a set of devices
  	that use identical code image segments or identically-structured database segments; group commands to
  	enable device state transitions that are quasi-synchronized across all or part of the local network
  	(e.g., switch to the next set of point-to-point downloaded session keys, or notifying that the network is
  	switching to an emergency repair and recovery mode); etc. Multicast addressing is used in the downward
  	direction of data flow.</t>

  	<t>Devices can be assigned to a number of multicast groups, for instance by device type. Then, if it
  	becomes necessary to reflash all devices of a given type with a new load image, a multicast
  	distribution mechanism can be leveraged to optimize the distribution operation.</t>

  	<t>In general, P2MP traffic has only loose timeliness requirements. As a consequence, in general,
  	message aggregation is permitted, although few opportunities are likely to present themselves for
  	such aggregation due to the sporadic nature of such messaging to a single multicast group destination,
  	and/or due to the large message payloads that often occur when P2MP is used for group downloads.
  	However, in general, message aggregation negatively impacts the delivery success rate for each of
  	the aggregated messages, since the probability of error in a received message increases with message
    length> Together these considerations often lead to a policy of non-aggregation for P2MP messaging.</t>

  	<t>Note: Reliable group download protocols, such as the no-longer-published IEEE 802.1E (ISO/IEC 15802&#8209;4)
  	system load protocol, and reliable multicast protocols based on the guidance of RFC2887, are instructive
  	in how P2MP can be used for initial bulk download, followed by either P2MP or P2P selective retransmissions
  	for missed download segments.</t>
   </section>

    <section title="Additional considerations: Duocast and N&#8209;cast">
  	<t>In industrial automation systems, some traffic is from (relatively) high-rate monitoring and
  	control loops, of Class 0 and Class 1 as described in <xref target="RFC5673"/>. In such systems, the
  	wireless link protocol, which typically uses immediate in-band acknowledgement to confirm delivery
  	(or, on failure, conclude that a retransmission is required), can be adapted to attempt simultaneous delivery
  	to more than one receiving device, with separated, sequenced immediate in-band acknowledgement by each of
  	those intended receivers. (This mechanism is known colloquially as "duocast" (for two intended receivers),
  	or more generically as "N&#8209;cast" (for N intended receivers).) Transmission is deemed successful if
  	at least one such immediate acknowledgement is received by the sending device; otherwise the device
  	queues the message for retransmission, up until the maximum configured number of retries has been
  	attempted.</t>

  	<t>The logic behind duocast/N&#8209;cast is very simple: In wireless systems without FEC (forward error
  	correction), the overall rate of success for transactions consisting of an initial transmission and
  	an immediate acknowledgement is typically 95%. In other words, 5% of such transactions fail, either
  	because the initial message of the transaction is not received correctly by the intended receiver,
  	or because the immediate acknowledgment by that receiver is not received correctly by the transaction
  	initiator.</t>

  	<t>In the generalized case of N&#8209;cast, where any received acknowledgement serves to complete the
  	transaction, and where the N intended receivers are spatially diverse, physically separated from each
  	other by multiple wavelengths, the probability that all such receivers fail to receive the initial
  	message of the transaction, or that all generated immediate acknowledgements are not received by
  	the transaction initiator, is typically approximately (5%)^N. Thus, for duocast, the expected success rate
  	for a single transaction goes from 95% (1.0&nbsp;&#8209;&nbsp;0.05) to 99.75% (1.0&nbsp;&#8209;&nbsp;0.05^2),
  	to 99.9875% (1.0&nbsp;&#8209;&nbsp;0.05^3) when N=3, and even higher when N>3.</t>

  	<t>From the above analysis, it is obvious that the primary benefit of N&#8209;cast occurs when N goes from
  	N=1 (unicast) to N=2 (duocast); the reduction in transaction loss rate for increasing N>2
  	is quite small, and for N>3 it is infinitesimal. In the typical industrial automation environment of
  	class 1 process control loops, which typically repeat at a 1&nbsp;Hz or 4&nbsp;Hz rate, in a very large
  	process plant with thousands of field devices reporting at that rate, the maximum number of transmission
  	retries that must be planned, and for which capacity must be scheduled (within the requisite 250&nbsp;ms or
  	1&nbsp;s interval) is seven (7) retries for unicast PS reporting, but only three (3) retries with duocast
  	PS reporting. (This is determined by the requirement to not miss four successive reports more than once
  	per year, across the entire plant, as such a loss typically triggers fallback behavior in the controlled
  	loop, which is considered a failure of the wireless system by the plant owner/operator.)
  	In practice, the enormous reduction in both planned and used retransmission capacity provided by
  	duocast/N&#8209;cast is what enables 4&nbsp;Hz loops to be supported in large wireless systems.</t>

  	<t>When available, duocast/N&#8209;cast typically is used only for one-hop PS traffic on Class 1 and Class 0 
  	control loops. It may also be employed for rapid, reliable one-hop delivery of Class 0 and sometimes Class 1 
  	process alarms and device alerts, which use the SS paradigm. Because it requires scheduling of multiple
  	receivers that are prepared to acknowledge the received message during the transaction, in general it is
  	not appropriate for the other types of traffic in such systems - P2P and P2MP - and is not needed for
  	other classes of control loops or other types of traffic, which do not have such stringent reporting
  	requirements.</t>

	<t>Note: Although there are known patent applications for duocast and N&#8209;cast, at the time
	of this writing the patent assignee, Honeywell International, has offered to permit cost-free RAND use in those industrial
	wireless standards that have chosen to employee the technology, under a reciprocal licensing requirement
	relative to that use. Since duocast and N&#8209;cast provide performance and energy optimizations,
	they are not essential for use in wireless systems. However, in practice, their use makes it possible
	to support 4&nbsp;Hz wireless loops and meet sub-second safety alarm reporting requirements in large 
	plants, where that might otherwise be impractical without use of a wired network. When duocast/N&#8209;cast
	is not employed, the wireless retransmission capacity that is needed to support such fast loops often is excessive,
	typically over 100x that actually used for retransmission (i.e., providing for seven retries per transaction 
	when the mean number used is only 0.06 retries).</t>
    </section>

    <section title="RPL applicability per communication paradigm">
	
	<t>To match the requirements above, RPL provides a number of RPL Modes of Operation (MOP):
	  <list hangIndent="0" style="hanging">
	    <t hangText="No downward route:">defined in <xref target="I-D.ietf-roll-rpl"/>, 
		section 6.3.1, MOP of 0. This mode allows only upward routing, that is from
		nodes (devices) that reside inside the RPL network toward the outside via the
		DODAG root.</t>

	    <t hangText="Non-storing mode:">defined in <xref target="I-D.ietf-roll-rpl"/>, 
		section 6.3.1, MOP of 1. This mode improves MOP 0 by adding the capability to 
		use source routing from the root towards registered targets within the instance 
		DODAG.</t>

	    <t hangText="Storing mode without multicast support:">defined in
		<xref target="I-D.ietf-roll-rpl"/>, section 6.3.1, MOP of 2.  
		This mode improves MOP 0 by adding the capability to use stateful
		routing from the root towards registered targets within the instance DODAG.</t>

	    <t hangText="Storing mode with link-scope multicast DAO:">defined in
		<xref target="I-D.ietf-roll-rpl"/> section 9.10, this mode improves MOP 2 by adding
		the capability to send Destination Advertisements to all nodes over a single 
		Layer 2 link (e.g. a wireless hop) and enables line-of-sight direct communication.
		</t>

	    <t hangText="Storing mode with multicast support:">defined in
		<xref target="I-D.ietf-roll-rpl"/>, 
		Mode-of-operation (MOP) of 3. This mode improves MOP 2 by adding
		the capability to register multicast groups and perform multicast 
		forwarding along the instance DODAG (or a spanning subtree within the DODAG).</t>

		
	    <t hangText="Reactive:">defined in <xref target="I-D.ietf-roll-p2p-rpl"/>, 
		the reactive mode creates on-demand additional DAGs that are used to reach
		a given node acting as DODAG root within a certain number of hops. This mode can
		typically be used for an ad-hoc closed-loop communication.</t>	
	</list></t>

	<t>The RPL MOP that can be applied for a given flow
	depends on the communication paradigm. It must be noted that a DODAG that is used 
	for PS	traffic can also be used for SS traffic since the MOP 2 extends the MOP 0, 
	and that a DODAG that is used for P2MP distribution can also be used for downward PS
	since the MOP 3 extends the MOP 2.</t>

	<t>On the other hand, an Objective Function (OF) that optimizes metrics for a pure
	upwards DODAG might differ from the OF that optimizes a mixed upward and downward DODAG.</t>

	<t>As a result, it can be expected that different RPL instances are installed
    with different OFs, different channel allocations, etc... that result in
	different routing and forwarding topologies, sometimes with differing delay vs. energy
	profiles, optimized separately for the different flows at hand.</t>
	
	<t>	This can be broadly summarized in the following table:
	
		<figure anchor="table2" title="RPL applicability per communication paradigm">
            <artwork>
            	<![CDATA[ 
+---------------------+------------+-----------------------------------+		
|   Paradigm\RPL MOP  |  RPL spec  |         Mode of operation         |
+=====================+============+===================================+
|   Peer-to-peer      |  RPL P2P   |     reactive (on-demand)          |
+---------------------+------------+-----------------------------------+
|   P2P line-of-sight |  RPL base  |  2 (storing) with multicast DAO   |
+---------------------+------------+-----------------------------------+	
|   P2MP distribution |  RPL base  |     3 (storing with multicast)    |
+---------------------+------------+-----------------------------------+
|   Publish-subscribe |  RPL base  |  1 or 2 (storing or not-storing)  |
+---------------------+------------+-----------------------------------+	
|   Source-sink       |  RPL base  |     0 (no downward route)         |
+---------------------+------------+-----------------------------------+	
|   N-cast publish    |  RPL base  |     0 (no downward route)         |
+---------------------+------------+-----------------------------------+
				]]>
			</artwork>
    	</figure>
	</t>
	</section>
  </section>
	<!--
  <section title="Using RPL to meet the functional requirements">


   <t>The functional requirements for most industrial automation deployments are similar to those listed in [RFC5673]:
	<list>

	   <t>The routing protocol MUST be capable of supporting the organization of a large number of nodes into
		  regions, usually corresponding to partitions of the automated process, each containing on
		  the order of 30 to 3000 nodes.</t>
	
	   <t>The routing protocol MUST provide mechanisms to support configuration of the routing protocol itself.</t>
	
	   <t>The routing protocol MUST provide mechanisms to support instructed configuration of explicit routing,
		  so that in the absence of failure the routing used for selected flow classes is that which has been remotely
		  configured (typically by a centralized configurator). In such circumstances RPL is used

		  <list>

			  <t>for local network repair;</t>

			  <t>for flow classes to which explicit routing has not been assigned;</t>

			  <t>during bootstrapping of the network itself (which is really just an instance of routing without such
			     an externally-imposed assignment).</t>

		  </list></t>

	   <t>The routing protocol SHOULD support directed flows with different QoS characteristics, typically
	      with different energy vs. delay tradeoffs, for traffic directed to LBRs. In practice only two such
	      sets of QoS are relevant:
	      <list>

		      <t>one that emphasizes energy minimization for energy-constrained nodes
		      at the expense of greater mean transit delay and variance in transit delay; and</t>

		      <t>one that emphasizes minimization of mean transit delay and transit delay variance at the expense
		      of greater energy demand on originating and intermediary energy-constrained nodes, typically used for
		      critical SS traffic (e.e., infrequent and unpredictable safety alarms with legally-mandated maximum
		      reporting delays) and critical PS traffic (e.g., predictable periodic (for process automation) or 
		      cyclic (for factory automation) high-speed safety control loops needed to protect life, the environment,
		      and/or critical national infrastructure assets).</t>

	      </list>
       </t>
	   <t>In the absence of configured routing, or when such routes have failed,
		  the routing protocol MUST dynamically compute and select effective
		  routes composed of low-power and lossy links.  Local network
		  dynamics SHOULD NOT impact the entire network.  The routing
		  protocol MUST compute multiple paths when possible.</t>
	
	   <t>The routing protocol MUST support multicast addressing, including
	   
		<list>
	
			<t>multicast originating with a LBR or off the LLN, directed to a predefined group within the LLN</t> 
		
			<t>multicast originating within the LLN, directed to one or more equivalent LBRs, in support of SS
			traffic</t>
		
			<t>multicast originating within the LLN, directed to one or more equivalent LBRs, in support of PS
			traffic, including all three of the following situations:
	   
			<list>
				<t>1: &lt;to be added&gt;</t>
				<t>2: &lt;to be added&gt;</t>
				<t>3: &lt;to be added&gt;</t>		   
			</list>
		    </t>
		</list>
        </t>
	    <t>The routing protocol SHOULD support and utilize a large number of highly directed flows to a few LBRs,
	    to handle scalability.</t>
	
		<t>The routing protocol SHOULD support formation of groups of field devices in the network.</t>
	
		<t>The routing protocol NEED NOT support anycast addressing because, as of the date of writing of this document,
		such addressing is not used by automation and control field devices. In general, no two such devices are
		equivalent, except perhaps for intermediary LBRs, so unicast suffices for situations where anycast might 
		otherwise be employed.</t>
	</list>
	</t>

   <t>RPL supports:
	<list>
	
	   <t>Large-scale networks characterized by highly directed traffic
		  flows between each field device and servers close to the head-end of the
		  automation network.  To this end, RPL builds Directed Acyclic Graphs
		  (DAGs) rooted at LBRs.</t>
	
	   <t>Zero-touch configuration.  This is done through in-band methods
		  for configuring RPL variables using DIO messages.</t>
	
	   <t>The use of links with time-varying availability and quality characteristics.  This is accomplished by
	      allowing the  use of metrics that effectively capture the quality of a path (e.g., in terms of the mean
	      and maximum impact of use of that path on packet delivery timing and on endpoint energy demands), and
	      by limiting the impact of changing local conditions by discovering and maintaining multiple DAG parents,
		  and by using local repair mechanisms when DAG links break.</t>
		
	</list>
    </t>
	<t>For wireless installations of small size with undemanding communication requirements, RPL is likely
	to generate satisfactory routing without any special effort. However, in larger installations or where
	timeliness considerations do not permit multi-second wireless-subnet transit times, then flow labeling
	is likely required so that forwarding routers can make informed tradeoffs between conserving their own
	energy resources and meeting overall system needs.</t>


<!!!
Extract requirements from the Reqs RFC
   Requirements Related to Traffic Characteristics
       Service Requirements
       	   Data bandwidth
       	   Latency
       	   Transmission phasing
       	   Service contract type (blocking or graceful degradation under overload)
       	   Transmission priority (queue service ordering)
       Configurable Application Requirement
       Different Routes for Different Flows
           Path diversity / parallel flows
   Reliability Requirements
   Device-Aware Routing Requirements
       Consideration of energy demands on routers
   Broadcast/Multicast Requirements
       Source - sink for alerts
       Publish - subscribe for process data
       Intentional use of parallel forwarding paths
   Protocol Performance Requirements
       Availability of information needed for routing metrics
       Rapidity of convergence
   Mobility Requirements
       Wireless worker PDAs
       Wireless connectivity to slow mobile devices or vehicles
   Manageability Requirements
       Self-deploying
       Ability to have central management optimizer override local decisions, in the absence of failure
   Antagonistic Requirements
   Security Considerations
Might be a simple list with pointers into the Reqs RFC
For each, list the RPL features that are used or explicitly not
used to meet the requirements 

	<t>&lt;to be added&gt;</t>
	!!>
  </section>

-->
  <section title="RPL profile">

  	<section title="Use for process control">

   <t>This section outlines a RPL profile for a representative deployment in a process control application.
   Process monitoring without control is typically less demanding, so a subset of this profile generally
   will suffice.</t>

  	</section>

  	<section title="RPL features">
<!-- 
Mode of operation: storing versus non-storing
Use of P2P of the base specification or the P2P solution
Number of DAG
Repair Mode
Metrics
-->

		<section title="Storing vs. non-storing mode">
		
			<t>RPL operation is defined for a single RPL instance.  However,
			multiple RPL instances can be supported in multi-service networks
			where different applications may require the use of different routing
			metrics and constraints, e.g., a network carrying both safety and non-safety
			control and monitoring traffic.</t>
			
			<t>In general, storing mode is required for high-reporting-rate devices (where "high rate" is with
			respect to the underlying link data conveyance capability). Such devices, in the absence of path failure,
			are typically only one hop from the LBR(s) that convey their messaging to other parts of the system.
			Fortunately, in such cases, the routing tables required by such nodes are small, even when they include
			information on DODAGs that are used as backup alternate routes.</t>
			
			<t>In general, devices which communicate with LBRs through a chain of intermediary devices will
			use storing mode for their upward DODAGs, but will use non-storing mode for downward DODAGs for
			messaging that they route further into the LLN. However, routers that provide downward forwarding
			for PS messaging addressed to controllers within the LLN (which is expected to be a rare occurrence)
			will use storing mode for those forwarding paths, so that timely, destination-constrained forwarding of
			such recurring messaging does not overload the routing node(s) and their downstream subnets.</t>
		
		</section>
		
		<section title="DAO policy">
		
			<t>Two-way communication is a requirement in industrial automation systems.  As a result,
   			nodes SHOULD send DAO messages to establish downward paths from the root to themselves.</t>
			
			<t>&lt;to be added&gt;</t>
		
		</section>
		
		<section title="Path metrics">
		
			<t>RPL relies on an Objective Function for selecting parents and
		   computing path costs and rank.  This objective function is decoupled
		   from the core RPL mechanisms and also from the metrics in use in the
		   network.  Two objective functions for RPL have been defined at the
		   time of this writing, OF0 and MRHOF, both of which define the
		   selection of a preferred parent and backup parents, and are suitable
		   for industrial automation network deployments.</t>
			
			<t>Neither of the currently defined objective functions supports
		   multiple metrics that might be required in heterogeneous industrial automation networks
		   (e.g., networks composed of devices with different energy and timeliness-of-communication
		   constraints).  Additional objective functions specifically designed
		   for such networks may be defined in companion RFCs.</t>
		
		</section>
		
		<section title="Objective functions">
		
			<t>&lt;to be added&gt;</t>
		
		</section>
		
		<section title="DODAG repair">
<!-- 
			<t>To effectively handle time-varying link characteristics and
		   availability, industrial automation network deployments SHOULD utilize the local repair
		   mechanisms in RPL.</t>
			
			<t>Local repair is triggered by broken link detection, and in storing
		   mode also by loop detection.</t>
			
			<t>The first local repair mechanism consists of a node detaching from a
		   DODAG and then re-attaching to the same or to a different DODAG at a
		   later time.  While detached, a node advertises an infinite rank value
		   so that its children can select a different parent.  This process is
		   known as poisoning and is described in Section 8.2.2.5 of
		   [I-D.ietf-roll-rpl].  While RPL provides an option to form a local
		   DODAG, doing so in industrial automation network deployments is of little benefit since
		   applications typically communicate through a LBR.  After the detached
		   node has made sufficient effort to send notification to its children
		   that it is detached, the node can rejoin the same DODAG with a higher
		   rank value.  The configured duration of the poisoning mechanism needs
		   to take into account the disconnection time applications running over
		   the network can tolerate.  Note that when joining a different DODAG,
		   the node need not perform poisoning.</t>
			
			<t>The second local repair mechanism controls how much a node can
		   increase its rank within a given DODAG Version (e.g., after detaching
		   from the DODAG as a result of broken link or loop detection).
		   Setting the DAGMaxRankIncrease to a non-zero value enables this
		   mechanism, and setting it to a value of less than infinity limits the
		   cost of count-to-infinity scenarios when they occur, thus controlling
		   the duration of disconnection applications may experience.</t>
		
		</section>
		
		<section title="TBD">
		
			<t>&lt;to be added&gt;</t>
		
		</section>
		
		<section title="TBD">
		
			<t>&lt;to be added&gt;</t>
-->
		</section>
		
		<section title="Security">
		
			<t>Industrial automation network deployments typically operate in areas that provide limited physical
		   security (relative to the risk of attack).  For this reason, the link layer, transport layer and
		   application layer technologies utilized within such networks typically
		   provide security mechanisms to ensure authentication,
		   confidentiality, integrity, timeliness and freshness.  As a result, such
		   deployments may not need to implement RPL's security mechanisms and
		   could rely on link layer and higher layer security features.</t>
		
		</section>

  	</section>

  	<section title="RPL options">

<!-- 

(for each RPL option you need to say:
    - should it be implemented [required, optional, not required]
    - should it be deployed [required, recommended, optional, not
       recommended, must not]
    - which requirement in section 3 it meets [if applicable] )
-->

  	</section>
	<section title="Recommended configuration defaults and ranges">
	
	<!-- 
	(For each configurable thing in the RPL spec
		 - default value
		 - recommended ranges for implementations)
	-->
		<section title="Trickle parameters">
		
		   <t>Trickle was designed to be density-aware and perform well in networks
		   characterized by a wide range of node densities.  The combination of
		   DIO packet suppression and adaptive timers for sending updates allows
		   Trickle to perform well in both sparse and dense environments.</t>
	<!-- 
		
		   <t>Node densities in industrial automation network deployments can vary greatly, from nodes having
		   only one or a handful of neighbors to nodes having several hundred
		   neighbors.  In high density environments, relatively low values for
		   Imin may cause a short period of congestion when an inconsistency is
		   detected and DIO updates are sent by a large number of neighboring
		   nodes nearly simultaneously.  While the Trickle timer will
		   exponentially backoff, some time may elapse before the congestion
		   subsides.  Although some link layers employ contention mechanisms that
		   attempt to avoid congestion, relying solely on the link layer to
		   avoid congestion caused by a large number of DIO updates can result
		   in increased communication latency for other control and data traffic
		   in the network.</t>
		
		   <t>To mitigate this kind of short-term congestion, this document
		   recommends a more conservative set of values for the Trickle
		   parameters than those specified in [RFC6206].  In particular,
		   DIOIntervalMin is set to a larger value to avoid periods of
		   congestion in dense environments, and DIORefundancyConstant is
		   parameterized accordingly as described below.  These values are
		   appropriate for the timely distribution of DIO updates in both sparse
		   and dense scenarios while avoiding the short-term congestion that
		   might arise in dense scenarios.</t>
		
		   <t>Because the actual link capacity depends on the particular link
		   technology used within an industrial automation network deployment, the Trickle parameters are
		   specified in terms of the link's maximum capacity for conveying
		   link-local multicast messages.  If the link can convey m link-local
		   multicast packets per second on average, the expected time it takes
		   to transmit a link-local multicast packet is 1/m seconds.</t>
		
		   <t>DIOIntervalMin:  Industrial automation network deployments SHOULD set DIOIntervalMin such that
			  the Trickle Imin is at least 50 times as long as it takes to
			  convey a link-local multicast packet.  This value is larger than
			  that recommended in [RFC6206] to avoid congestion in dense plant
			  deployments as described above.</t>
		
		   <t>DIOIntervalDoublings:  Industrial automation network deployments SHOULD set
			  DIOIntervalDoublings such that the Trickle Imax is at least TBD minutes or more.</t>
		
		   <t>DIORedundancyConstant:  Industrial automation network deployments SHOULD set
			  DIORedundancyConstant to a value of at least 10.  This is due to
			  the larger chosen value for DIOIntervalMin and the proportional
			  relationship between Imin and k suggested in [RFC6206].  This
			  increase is intended to compensate for the increased communication
			  latency of DIO updates caused by the increase in the
			  DIOIntervalMin value, though the proportional relationship between
			  Imin and k suggested in [RFC6206] is not preserved.  Instead,
			  DIORedundancyConstant is set to a lower value in order to reduce
			  the number of packet transmissions in dense environments.</t>
	-->
			<t>&lt;to be added&gt;</t>
		</section>
		
		<section title="Other parameters">
	<!-- 
	
		   <t>Industrial automation network deployments SHOULD set MinHopRankIncrease to 256, resulting in
			  8 bits of resolution (e.g., for the ETX metric).</t>
		
		   <t>To enable local repair, industrial automation network deployments SHOULD set MaxRankIncrease
			  to a value that allows a device to move a small number of hops
			  away from the root.  With a MinHopRankIncrease of 256, a
			  MaxRankIncrease of 1024 would allow a device to move up to 4 hops
			  away.</t>
	-->
		
			<t>&lt;to be added&gt;</t>
		</section>
	
		<section title="Additional configuration recommendations">
	<!-- 
	(Anything that is not configurable in the RPL spec that should be
		 configurable in this deployment)
	-->
		<t>&lt;to be added&gt;</t>
		</section>
	</section>
  </section>
	 
	 
  <section title="Other related protocols">
<!-- 
   (what else do you need implemented, what assumptions can/should
    be made)
-->
	<t>&lt;to be added&gt;</t>
  </section>

  <section title="Manageability">
	<t>Network manageability is a critical aspect of smart grid network
   deployment and operation.  With millions of devices participating in
   the smart grid network, many requiring real-time reachability,
   automatic configuration, and lightweight network health monitoring
   and management are crucial for achieving network availability and
   efficient operation.</t>

	<t>RPL enables automatic and consistent configuration of RPL routers
   through parameters specified by the DODAG root and disseminated
   through DIO packets.  The use of Trickle for scheduling DIO
   transmissions ensures lightweight yet timely propagation of important
   network and parameter updates and allows network operators to choose
   the trade-off point they are comfortable with respect to overhead vs.
   reliability and timeliness of network updates.</t>

	<t>The metrics in use in the network along with the Trickle Timer
   parameters used to control the frequency and redundancy of network
   updates can be dynamically varied by the root during the lifetime of
   the network.  To that end, all DIO messages SHOULD contain a Metric
   Container option for disseminating the metrics and metric values used
   for DODAG setup.  In addition, DIO messages SHOULD contain a DODAG
   Configuration option for disseminating the Trickle Timer parameters
   throughout the network.</t>

	<t>The possibility of dynamically updating the metrics in use in the
   network as well as the frequency of network updates allows deployment
   characteristics (e.g., network density) to be discovered during
   network bring-up and to be used to tailor network parameters once the
   network is operational rather than having to rely on precise pre-
   configuration.  This also allows the network parameters and the
   overall routing protocol behavior to evolve during the lifetime of
   the network.</t>

	<t>RPL specifies a number of variables and events that can be tracked
   for purposes of network fault and performance monitoring of RPL
   routers.  Depending on the memory and processing capabilities of each
   smart grid device, various subsets of these can be employed in the
   field.</t>

	<t>&lt;to be added&gt;</t>
  </section>
	
  <section anchor="IANA" title="IANA considerations">
	<t>This specification has no requirement on IANA.</t>
  </section>
		
  <section anchor="Sec" title="Security considerations">
	<t>This document does not specify operations that could introduce new threats.
	Security considerations for RPL deployments are to be developed in accordance
    with recommendations laid out in, for example, 
	<xref target="I-D.tsao-roll-security-framework"/>.</t>

	<t>Industrial automation networks are subject to stringent security requirements as
   they are considered a critical infrastructure component.  At the same
   time, since they are composed of large numbers of resource-
   constrained devices inter-connected with limited-throughput links,
   many available security mechanisms are not practical for use in such
   networks.  As a result, the choice of security mechanisms is highly
   dependent on the device and network capabilities characterizing a
   particular deployment.</t>

	<t>In contrast to other types of LLNs, in industrial automation networks
   centralized administrative control and access to a permanent secure
   infrastructure is available.  As a result link-layer, transport-layer
   and/or application-layer security mechanisms are typically in place
   and may make use of RPL's secure mode unnecessary.</t>
  </section>

  <section anchor="Acknowledgements" title="Acknowledgements">

	<t>&lt;to be added&gt;</t>

  </section>

</middle>

<back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.I-D.ietf-roll-rpl.xml'?>
      <?rfc include='reference.I-D.ietf-roll-p2p-rpl.xml'?>

      <?rfc include='reference.I-D.ietf-roll-terminology.xml'?>
	  
	  <?rfc include="reference.RFC.5548"?>
      <?rfc include="reference.RFC.5826"?>
      <?rfc include="reference.RFC.5867"?>
      <?rfc include="reference.RFC.5673"?>
      <?rfc include='reference.I-D.ietf-roll-of0.xml'?>
      <?rfc include='reference.I-D.tsao-roll-security-framework.xml'?>
    </references>

    <references title="External Informative References">
      <reference anchor="HART">
        <front>
          <title>Highway Addressable Remote Transducer, a group of
          specifications for industrial process and control devices
          administered by the HART Foundation</title>

          <author>
            <organization>www.hartcomm.org</organization>
          </author>

          <date></date>
        </front>
      </reference>

      <reference anchor="ISA100.11a"
                 target="     http://www.isa.org/Community/SP100WirelessSystemsforAutomation">
        <front>
          <title>ISA100, Wireless Systems for Automation</title>

          <author>
            <organization>ISA</organization>
          </author>

          <date day="05" month="May" year="2008" />
        </front>
      </reference>
    </references>

</back>
</rfc>
