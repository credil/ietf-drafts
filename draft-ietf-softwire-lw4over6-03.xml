<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes"?>
<rfc category="std" docName="draft-ietf-softwire-lw4over6-03"
     ipr="trust200902">
  <front>
    <title abbrev="Lightweight 4over6">Lightweight 4over6: An Extension to
    the DS-Lite Architecture</title>

    <author fullname="Yong Cui" initials="Y" surname="Cui">
      <organization>Tsinghua University</organization>

      <address>
        <postal>
          <street/>

          <city>Beijing</city>

          <code>100084</code>

          <country>P.R.China</country>
        </postal>

        <phone>+86-10-62603059</phone>

        <email>yong@csnet1.cs.tsinghua.edu.cn</email>
      </address>
    </author>

    <author fullname="Qiong Sun" initials="Q.S" surname="Sun">
      <organization>China Telecom</organization>

      <address>
        <postal>
          <street>Room 708, No.118, Xizhimennei Street</street>

          <city>Beijing</city>

          <code>100035</code>

          <country>P.R.China</country>
        </postal>

        <phone>+86-10-58552936</phone>

        <email>sunqiong@ctbri.com.cn</email>
      </address>
    </author>

    <author fullname="Mohamed Boucadair" initials="M.B" surname="Boucadair">
      <organization>France Telecom</organization>

      <address>
        <postal>
          <street/>

          <city>Rennes</city>

          <code>35000</code>

          <region/>

          <country>France</country>
        </postal>

        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <author fullname="Tina Tsou" initials="T.T" surname="Tsou">
      <organization>Huawei Technologies</organization>

      <address>
        <postal>
          <street>2330 Central Expressway</street>

          <city>Santa Clara</city>

          <region>CA</region>

          <code>95050</code>

          <country>USA</country>
        </postal>

        <phone>+1-408-330-4424</phone>

        <email>tena@huawei.com</email>
      </address>
    </author>

    <author fullname="Yiu L. Lee" initials="Y" surname="Lee">
      <organization>Comcast</organization>

      <address>
        <postal>
          <street>One Comcast Center</street>

          <city>Philadelphia</city>

          <region>PA</region>

          <code>19103</code>

          <country>USA</country>
        </postal>

        <email>yiu_lee@cable.comcast.com</email>
      </address>
    </author>

    <author fullname="Ian Farrer" initials="I.F" surname="Farrer">
      <organization>Deutsche Telekom AG</organization>

      <address>
        <postal>
          <street>GTN-FM4,Landgrabenweg 151</street>

          <city>Bonn</city>

          <region>NRW</region>

          <code>53227</code>

          <country>Germany</country>
        </postal>

        <email>ian.farrer@telekom.de</email>
      </address>
    </author>

    <date day="6" month="November" year="2013"/>

    <workgroup>Softwire Working Group</workgroup>

    <abstract>
      <t>Dual-Stack Lite (RFC 6333) describes an architecture for transporting 
      IPv4 packets over an IPv6 network. This document specifies an extension 
      to DS-Lite called Lightweight 4over6 which moves the Network Address and
      Port Translation (NAPT) function from the centralized DS-Lite tunnel 
      concentrator to the tunnel client located in the Customer Premises 
      Equipment (CPE). This removes the requirement for a Carrier Grade NAT 
      function in the tunnel concentrator and reduces the amount of centralized 
      state that must be held to a per-subscriber level. In order to delegate 
      the NAPT function and make IPv4 Address sharing possible, port-restricted 
      IPv4 addresses are allocated to the CPEs.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Dual-Stack Lite (DS-Lite, <xref target="RFC6333"/>) defines a model
      for providing IPv4 access over an IPv6 network using two well-known
      technologies: IP in IP <xref target="RFC2473"/> and Network Address
      Translation (NAT). The DS-Lite architecture defines two major functional
      elements as follows:</t>

      <t><list hangIndent="34" style="hanging">
          <t hangText="Basic Bridging BroadBand element:">A B4 element is a
          function implemented on a dual-stack capable node, either a directly
          connected device or a CPE, that creates a tunnel to an AFTR.</t>

          <t hangText="Address Family Transition Router:">An AFTR element is
          the combination of an IPv4-in-IPv6 tunnel endpoint and an IPv4-IPv4
          NAT implemented on the same node.</t>
          
        </list>As the AFTR performs the centralized NAT44 function, it
      dynamically assigns public IPv4 addresses and ports to requesting host's
      traffic (as described in <xref target="RFC3022"/>). To achieve this, the
      AFTR must dynamically maintain per-flow state in the form of active NAPT
      sessions. For service providers with a large number of B4 clients, the
      size and associated costs for scaling the AFTR can quickly become
      prohibitive. It can also place a large NAPT logging overhead upon the
      service provider in countries where legal requirements mandate this.</t>

      <t>This document describes a mechanism called Lightweight 4 over 6
      (lw4o6), which provides a solution for these problems. By relocating the
      NAPT functionality from the centralized AFTR to the distributed B4s, a
      number of benefits can be realised:<list style="symbols">
          <t>NAPT44 functionality is already widely supported and used in
          today's CPE devices. Lw4o6 uses this to provide
          private&lt;-&gt;public NAPT44, meaning that the service provider
          does not need a centralized NAT44 function.</t>

          <t>The amount of state that must be maintained centrally in the AFTR
          can be reduced from per-flow to per-subscriber. This reduces the
          amount of resources (memory and processing power) necessary in the
          AFTR.</t>

          <t>The reduction of maintained state results in a greatly reduced
          logging overhead on the service provider.</t>
        </list></t>

      <t>Operator's IPv6 and IPv4 addressing architectures remain independent
      of each other. Therefore, flexible IPv4/IPv6 addressing schemes can be
      deployed.</t>

      <t>Lightweight 4over6 provides a solution for a hub-and-spoke softwire
      architecture only. It does not offer direct, meshed IPv4 connectivity
      between subscribers without packets traversing the AFTR. If this type of
      meshed interconnectivity is required, <xref
      target="I-D.ietf-softwire-map"/> provides a suitable solution.</t>

      <t>The tunneling mechanism remains the same for DS-Lite and Lightweight
      4over6. This document describes the changes to DS-Lite that are
      necessary to implement Lightweight 4over6. These changes mainly concern
      the configuration parameters and provisioning method necessary for the
      functional elements.</t>

      <t>Lightweight 4over6 features keeping per-subscriber state in the
      service provider's network. It is categorized as Binding approach in
      <xref target="I-D.ietf-softwire-unified-cpe"/> which defines a unified
      IPv4-in-IPv6 Softwire CPE.</t>

      <t>This document is an extended case, which covers address sharing for
      <xref target="I-D.ietf-softwire-public-4over6"/>. It is also a variant
      of A+P called Binding Table Mode (see Section 4.4 of <xref
      target="RFC6346"/>).</t>

      <t>This document focuses on architectural considerations and
      particularly on the expected behavior of the involved functional
      elements and their interfaces. Deployment-specific issues are discussed
      in a companion document. As such, discussions about redundancy and
      provisioning policy are out of scope.</t>
    </section>

    <section anchor="conventions" title="Conventions">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"/>.</t>
    </section>

    <section title="Terminology">
      <t>The document defines the following terms:<list hangIndent="30"
          style="hanging">
          <t hangText="Lightweight 4over6 (lw4o6):">An IPv4-over-IPv6 hub and
          spoke mechanism, which extends DS-Lite by moving the IPv4
          translation (NAPT44) function from the AFTR to the B4.</t>

          <t hangText="Lightweight B4 (lwB4):">A B4 element (Basic Bridging
          BroadBand element <xref target="RFC6333"/>), which supports
          Lightweight 4over6 extensions. An lwB4 is a function implemented on
          a dual-stack capable node, (either a directly connected device or a
          CPE), that supports port-restricted IPv4 address allocation,
          implements NAPT44 functionality and creates a tunnel to an
          lwAFTR</t>

          <t hangText="Lightweight AFTR (lwAFTR):">An AFTR element (Address
          Family Transition Router element <xref target="RFC6333"/>), which
          supports Lightweight 4over6 extension. An lwAFTR is an IPv4-in-IPv6
          tunnel endpoint which maintains per-subscriber address binding only
          and does not perform a NAPT44 function.</t>

          <t hangText="Restricted Port-Set:">A non-overlapping range of
          allowed external ports allocated to the lwB4 to use for NAPT44.
          Source ports of IPv4 packets sent by the B4 must belong to the
          assigned port-set. The port set is used for all port aware IP
          protocols (TCP, UDP, SCTP etc.)</t>

          <t hangText="Port-restricted IPv4 Address:">A public IPv4 address
          with a restricted port-set. In Lightweight 4over6, multiple B4s may
          share the same IPv4 address, however, their port-sets must be
          non-overlapping.</t>
        </list></t>

      <t>Throughout the remainder of this document, the terms B4/AFTR should
      be understood to refer specifically to a DS-Lite implementation. The
      terms lwB4/lwAFTR refer to a Lightweight 4over6 implementation.</t>

      <t/>
    </section>

    <section title="Lightweight 4over6 Architecture">
      <t>The Lightweight 4over6 architecture is functionally similar to
      DS-Lite. lwB4s and an lwAFTR are connected through an IPv6-enabled
      network. Both approaches use an IPv4-in-IPv6 encapsulation scheme to
      deliver IPv4 connectivity services. The following figure shows the data
      plane with the main functional change between DS-Lite and lw4o6:</t>

      <figure>
        <artwork><![CDATA[
                                               
+--------+   +---------+   IPv4-in-IPv6   +------+    +-------------+
|IPv4 LAN|---|lwB4/NAPT|==================|lwAFTR|----|IPv4 Internet|
+--------+   +---------+                  +------+    +-------------+
                    ^                         |
                    +-------------------------+
                      NAPT function relocated
                         to lwB4 in lw4o6

]]></artwork>

        <postamble>Figure 1 Lightweight 4over6 Data Plane Overview</postamble>
      </figure>

      <t>There are three main components in the Lightweight 4over6
      architecture:</t>

      <t><list style="symbols">
          <t>The lwB4, which performs the NAPT function and
          encapsulation/de-capsulation IPv4/IPv6.</t>

          <t>The lwAFTR, which performs the encapsulation/de-capsulation
          IPv4/IPv6.</t>

          <t>The provisioning system, which tells the lwB4 which IPv4 address
          and port set to use.</t>
        </list></t>

      <t>The lwB4 differs from a regular B4 in that it now performs the NAPT
      functionality. This means that it needs to be provisioned with the
      public IPv4 address and port set it is allowed to use. This information
      is provided though a provisioning mechanism such as DHCP, PCP or
      TR-69.</t>

      <t>The lwAFTR needs to know the binding between the IPv6 address of each
      subscriber and the IPv4 address and port set allocated to that
      subscriber. This information is used to perform ingress filtering
      upstream and encapsulation downstream. Note that this is per-subscriber
      state as opposed to per-flow state in the regular AFTR case.</t>

      <t>The consequence of this architecture is that the information
      maintained by the provisioning mechanism and the one maintained by the
      lwAFTR MUST be synchronized (See figure 2). The details of this
      synchronization depend on the exact provisioning mechanism and will be
      discussed in a companion document.</t>

      <t>The solution specified in this document allows the assignment of
      either a full or a shared IPv4 address requesting CPEs. <xref
      target="I-D.ietf-softwire-public-4over6"/> provides a mechanism for
      assigning a full IPv4 address only.</t>

      <figure>
        <artwork><![CDATA[
                          +------------+
                  /-------|Provisioning|<-----\
                  |       +------------+      |
                  |                           |
                  V                           V
+--------+   +---------+    IPv4/IPv6     +------+    +-------------+
|IPv4 LAN|---|lwB4/NAPT|==================|lwAFTR|----|IPv4 Internet|
+--------+   +---------+                  +------+    +-------------+
        ]]></artwork>

        <postamble>Figure 2 Lightweight 4over6 Provisioning
        Synchronization</postamble>
      </figure>
    </section>

    <section title="Lightweight B4 Behavior">
      <section title="Lightweight B4 Provisioning with DHCPv6">
        <t>With DS-Lite, the B4 element only needs to be configured with a
        single DS-Lite specific parameter so that it can set up the softwire
        (the IPv6 address of the AFTR). Its IPv4 address can be taken from the
        well-known range 192.0.0.0/29.</t>

        <t>In lw4o6, due to the distributed nature of the NAPT function, a
        number of lw4o6 specific configuration parameters must be provisioned
        to the lwB4. These are:</t>

        <t><list style="symbols">
            <t>IPv6 Address for the lwAFTR</t>

            <t>IPv4 External (Public) Address for NAPT44</t>

            <t>Restricted port-set to use for NAPT44</t>
          </list></t>
          
        <t>For DHCPv6 based configuration of these parameters, the lwB4 
        SHOULD implement OPTION_SW46_LW as described in section 6.3 of 
        <xref target="I-D.ietf-softwire-map-dhcp"/>. This means that the
        lifetime of the softwire and the derived configuration information 
        (e.g. IPv4 shared address, IPv4 address) is bound to the lifetime of 
        the DHCPv6 lease. If stateful IPv4 configuration or additional IPv4 
        configuration information is required, DHCPv4 <xref target="RFC2131"/> 
        must be used. </t>
        
        <t>Some other mechanisms which may be adapted for the provisioning of IPv4
        addresses and port-sets are described in section 7 below.</t>

        <t>An IPv6 address from an assigned prefix is also required for the
        lwB4 to use as the encapsulation source address for the softwire. In
        order to enable end-to-end provisioning, the IPv6 address is constructed by taking
        the /64 prefix assigned to the WAN interface (learned via SLAAC, DHCPv6
        or manual configuration) and suffixing 64-bits for the interface 
        identifier. The /128 prefix is constructed as follows:</t>
        
        <figure>
          <artwork><![CDATA[ 
          
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                 Operator assigned (64-bits)                   |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Zero Padding          |         IPv4 Address          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|       IPv4 Addr cont.         |             PSID              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ]]></artwork>

          <postamble>Figure 3 Construction of the lw4o6 /128 Prefix</postamble>
        </figure>
        
        <t><list hangIndent="14" style="hanging">
        <t hangText="Padding:">Padding (all zeros)</t>
        
        <t hangText="IPv4 Address:">Public IPv4 address allocated to the client
        </t>
        
        <t hangText="PSID:">Port Set ID allocated to the client, left padded
        with zeros to 16-bits. If no PSID is provisioned, all zeros.</t>
        </list></t>

        <t>In the event that the lwB4's encapsulation source address is
        changed for any reason (such as the DHCPv6 lease expiring), the lwB4's
        dynamic provisioning process must be re-initiated.</t>
           
        <t>An lwB4 MUST support dynamic port-restricted IPv4 address
        provisioning.  The port set algorithm for provisioning this is 
        described in Section 5.1 of [I-D.ietf-softwire-map]. For lw4o6, the
        number of a-bits SHOULD be 0.</t>

        <t>In the event that the lwB4 receives and ICMPv6 error message (type
        1, code 5) originating from the lwAFTR, the lwB4 SHOULD interpret this
        to mean that no matching entry in the lwAFTR's binding table has been
        found. The lwB4 MAY then re-initiate the dynamic port-restricted
        provisioning process. The lwB4's re-initiation policy SHOULD be
        configurable.</t>

        <t>The DNS considerations described in Section 5.5 and Section 6.4 of
        <xref target="RFC6333"/> SHOULD be followed.</t>
      </section>

      <section title="Lightweight B4 Data Plane Behavior">
        <t>Several sections of <xref target="RFC6333"/> provide background
        information on the B4's data plane functionality and MUST be
        implemented by the lwB4 as they are common to both solutions. The
        relevant sections are:</t>

        <t><list hangIndent="34" style="hanging">
            <t hangText="5.2 Encapsulation">Covering encapsulation and
            de-capsulation of tunneled traffic</t>

            <t hangText="5.3 Fragmentation and Reassembly">Covering MTU and
            fragmentation considerations (referencing <xref
            target="RFC2473"/>), with the exception noted below.</t>

            <t hangText="7.1 Tunneling">Covering tunneling and traffic class
            mapping between IPv4 and IPv6 (referencing <xref
            target="RFC2473"/> and <xref target="RFC4213"/>)</t>
          </list></t>

        <t>The lwB4 element performs IPv4 address translation (NAPT44) as well
        as encapsulation and de-capsulation. It runs standard NAPT44 <xref
        target="RFC3022"/> using the allocated port-restricted address as its
        external IPv4 address and port numbers.</t>

        <t>The working flow of the lwB4 is illustrated in figure 3.</t>

        <figure>
          <artwork><![CDATA[
                     +-------------+
                     |     lwB4    |
   +--------+  IPv4  |------+------| IPv4-in-IPv6  +----------+
   |IPv4 LAN|------->|      |Encap.|-------------->|Configured|  
   |        |<-------| NAPT |  or  |<--------------|  lwAFTR  |
   +--------+        |      |Decap.|               +----------+
                     +------+------+                 
        ]]></artwork>

          <postamble>Figure 4 Working Flow of the lwB4</postamble>
        </figure>

        <t>Internally connected hosts source IPv4 packets with an <xref
        target="RFC1918"/> address. When the lwB4 receives such an IPv4
        packet, it performs a NAPT44 function on the source address and port
        by using the public IPv4 address and a port number from the allocated
        port-set. Then, it encapsulates the packet with an IPv6 header. The
        destination IPv6 address is the lwAFTR's IPv6 address and the source
        IPv6 address is the lwB4's IPv6 tunnel endpoint address. Finally, the
        lwB4 forwards the encapsulated packet to the configured lwAFTR.</t>

        <t>When the lwB4 receives an IPv4-in-IPv6 packet from the lwAFTR, it
        de-capsulates the IPv4 packet from the IPv6 packet. Then, it performs
        NAPT44 translation on the destination address and port, based on the
        available information in its local NAPT44 table.</t>

        <t>If the IPv6 source address does not match the configured lwAFTR
        address, then the packet MUST be discarded. If the decapsulated IPv4
        packet does not match the lwB4's configuration (i.e. invalid
        destination IPv4 address or port) then the packet MUST be dropped. An
        ICMPv4 error message (type 13 - Communication Administratively
        Prohibited) message MAY be sent back to the lwAFTR. The ICMP policy
        SHOULD be configurable.</t>

        <t>The lwB4 is responsible for performing ALG functions (e.g., SIP,
        FTP), and other NAPT traversal mechanisms (e.g., UPnP, NAPT-PMP,
        manual binding configuration, PCP) for the internal hosts. This
        requirement is typical for NAPT44 gateways available today.</t>

        <t>It is possible that a lwB4 is co-located in a host. In this case,
        the functions of NAPT44 and encapsulation/de-capsulation are
        implemented inside the host.</t>
      
        <section title="Changes to RFC2473 and RFC6333 Fragmentation Behaviour">
        
        <t>On receiving an encapsulated packet containing an IPv4 fragment, 
        the lwB4 MUST wait until all other fragments have been received and
        de-capsulated. The original packet is then re-assembled before 
        performing NAPT. This is necessary because layer-4 protocol information 
        is only present in the first fragment.</t>
        
        <t> When an lwB4 receives an IPv4 packet from its connected host that 
        is larger than the MTU size after encapsulation, the lwB4 MUST fragment
         the IPv4 packet before encapsulation.  This lwB4 behavior will not 
         result IPv6 fragmentation so that lwAFTR does not require to 
         re-assemble the fragmented IPv6 packets.</t>
        
        </section>
        </section>
    </section>

    <section title="Lightweight AFTR Behavior">
      <section title="Binding Table Maintenance">
        <t>The lwAFTR maintains an address binding table containing the
        binding between the lwB4's IPv6 address, the allocated IPv4 address
        and restricted port-set. Unlike the DS-Lite extended binding table
        defined in section 6.6 of <xref target="RFC6333"/> which is a 5-tuple
        NAPT table, each entry in the Lightweight 4over6 binding table contains
        the following 3-tuples:</t>

        <t><list style="symbols">
            <t>IPv6 Address for a single lwB4</t>

            <t>Public IPv4 Address</t>

            <t>Restricted port-set</t>
          </list>The entry has two functions: the IPv6 encapsulation of
        inbound IPv4 packets destined to the lwB4 and the validation of
        outbound IPv4-in-IPv6 packets received from the lwB4 for
        de-capsulation.</t>

        <t>The lwAFTR does not perform NAPT and so does not need session
        entries.</t>

        <t>The lwAFTR MUST synchronize the binding information with the
        port-restricted address provisioning process. If the lwAFTR does not
        participate in the port-restricted address provisioning process, the
        binding MUST be synchronized through other methods (e.g. out-of-band
        static update).</t>

        <t>If the lwAFTR participates in the port-restricted provisioning
        process, then its binding table MUST be created as part of this
        process.</t>

        <t>For all provisioning processes, the lifetime of binding table
        entries MUST be synchronized with the lifetime of address
        allocations.</t>

        <t><vspace blankLines="1"/></t>
      </section>

      <section title="lwAFTR Data Plane Behavior">
        <t>Several sections of <xref target="RFC6333"/> provide background
        information on the AFTR's data plane functionality and MUST be
        implemented by the lwAFTR as they are common to both solutions. The
        relevant sections are:</t>

        <t><list hangIndent="34" style="hanging">
            <t hangText="6.2 Encapsulation">Covering encapsulation and
            de-capsulation of tunneled traffic</t>

            <t hangText="6.3 Fragmentation and Reassembly">Fragmentation and
            re-assembly considerations (referencing <xref
            target="RFC2473"/>)</t>

            <t hangText="7.1 Tunneling">Covering tunneling and traffic class
            mapping between IPv4 and IPv6 (referencing <xref
            target="RFC2473"/> and <xref target="RFC4213"/>)</t>
          </list></t>

        <t>When the lwAFTR receives an IPv4-in-IPv6 packet from an lwB4, it
        de-capsulates the IPv6 header and verifies the source addresses and
        port in the binding table. If both the source IPv4 and IPv6 addresses
        match a single entry in the binding table and the source port is in
        the allowed port-set for that entry, the lwAFTR forwards the packet to
        the IPv4 destination.</t>

        <t>If no match is found (e.g., no matching IPv4 address entry, port
        out of range, etc.), the lwAFTR MUST discard or implement a policy
        (such as redirection) on the packet. An ICMPv6 type 1, code 5 (source
        address failed ingress/egress policy) error message MAY be sent back
        to the requesting lwB4. The ICMP policy SHOULD be configurable.</t>

        <t>When the lwAFTR receives an inbound IPv4 packet, it uses the IPv4
        destination address and port to lookup the destination lwB4's IPv6
        address in its binding table. If a match is found, the lwAFTR
        encapsulates the IPv4 packet. The source is the lwAFTR's IPv6 address
        and the destination is the lwB4's IPv6 address from the matched entry.
        Then, the lwAFTR forwards the packet to the lwB4 natively over the
        IPv6 network.</t>

        <t>If no match is found, the lwAFTR MUST discard the packet. An ICMPv4
        type 3, code 1 (Destination unreachable, host unreachable) error
        message MAY be sent back. The ICMP policy SHOULD be configurable.</t>

        <t>The lwAFTR MUST support hairpinning of traffic between two lwB4s,
        by performing de-capsulation and re-encapsulation of packets. The
        hairpinning policy MUST be configurable.</t>
      </section>
    </section>

    <section title="Additional IPv4 address and Port Set Provisioning 
    Mechanisms">
      <t>In addition to the DHCPv6 based mechanism described in section 5.1,
      several other IPv4 provisioning protocols have been suggested. 
      These protocols MAY be implemented. These alternatives include:</t>

      <t><list style="symbols">
          <t>DHCPv4 over DHCPv6: [I-D.ietf-dhc-dhcpv4-over-dhcpv6] describes 
          implementing DHCPv4 messages over an IPv6 only service providers 
          network. This enables leasing of IPv4 addresses and makes DHCPv4 
          options available to the DHCPv4 over DHCPv6 client.</t>
          
          <t>PCP<xref target="RFC6887"/>: an lwB4 MAY use <xref
          target="I-D.ietf-pcp-port-set"/> to retrieve a restricted IPv4
          address and a set of ports.</t>
        </list></t>
      
      <t>In a Lightweight 4over6 domain, the binding information MUST be 
      aligned between the lwB4s, the lwAFTRs and the provisioning server.</t>

    </section>

    <section title="ICMP Processing">
      <t>ICMP does not work in an address sharing environment without special
      handling <xref target="RFC6269"/>. Due to the port-set style address
      sharing, Lightweight 4over6 requires specific ICMP message handling not
      required by DS-Lite.</t>

      <t>The following behavior SHOULD be implemented by the lwAFTR to provide
      ICMP error handling and basic remote IPv4 service diagnostics for a port
      restricted CPE: for inbound ICMP messages, the lwAFTR MAY behave in two
      modes:</t>

      <t>Either:</t>

      <t><list style="numbers">
          <t>Check the ICMP Type field.</t>

          <t>If the ICMP type is set to 0 or 8 (echo reply or request), then
          the lwAFTR MUST take the value of the ICMP identifier field as the
          source port, and use this value to lookup the binding table for an
          encapsulation destination. If a match is found, the lwAFTR forwards
          the ICMP packet to the IPv6 address stored in the entry; otherwise
          it MUST discard the packet.</t>

          <t>If the ICMP type field is set to any other value, then the lwAFTR
          MUST use the method described in REQ-3 of <xref target="RFC5508"/>
          to locate the source port within the transport layer header in ICMP
          packet's data field. The destination IPv4 address and source port
          extracted from the ICMP packet are then used to make a lookup in the
          binding table. If a match is found, it MUST forward the ICMP reply
          packet to the IPv6 address stored in the entry; otherwise it MUST
          discard the packet.</t>
        </list>Or:</t>

      <t><list style="symbols">
          <t>Discard all inbound ICMP messages.</t>
        </list></t>

      <t>The ICMP policy SHOULD be configurable.</t>

      <t>The lwB4 SHOULD implement the requirements defined in <xref
      target="RFC5508"/> for ICMP forwarding. For ICMP echo request packets
      originating from the private IPv4 network, the lwB4 SHOULD implement the
      method described in <xref target="RFC6346"/> and use an available port
      from its port-set as the ICMP Identifier.</t>

      <t>For both the lwAFTR and the lwB4, ICMPv6 MUST be handled as described
      in <xref target="RFC2473"/>.</t>

      <t/>
    </section>

    <section title="Security Considerations">
      <t>As the port space for a subscriber shrinks due to address sharing,
      the randomness for the port numbers of the subscriber is decreased
      significantly. This means it is much easier for an attacker to guess the
      port number used, which could result in attacks ranging from throughput
      reduction to broken connections or data corruption.</t>

      <t>The port-set for a subscriber can be a set of contiguous ports or
      non-contiguous ports. Contiguous port-sets do not reduce this threat.
      However, with non-contiguous port-set (which may be generated in a
      pseudo-random way <xref target="RFC6431"/>), the randomness of the port
      number is improved, provided that the attacker is outside the
      Lightweight 4over6 domain and hence does not know the port-set
      generation algorithm.</t>

      <t>More considerations about IP address sharing are discussed in Section
      13 of <xref target="RFC6269"/>, which is applicable to this
      solution.</t>
    </section>

    <section title="IANA Considerations">
      <t>This document does not include an IANA request.</t>
    </section>

    <section title="Author List">
      <t>The following are extended authors who contributed to the effort:</t>

      <t><list>
          <t>Jianping Wu <vspace blankLines="1"/> Tsinghua University <vspace
          blankLines="1"/> Department of Computer Science, Tsinghua University
          <vspace blankLines="1"/> Beijing 100084 <vspace blankLines="1"/>
          P.R.China</t>

          <t>Phone: +86-10-62785983 <vspace blankLines="1"/> Email:
          jianping@cernet.edu.cn</t>

          <t/>

          <t>Peng Wu <vspace blankLines="1"/> Tsinghua University <vspace
          blankLines="1"/> Department of Computer Science, Tsinghua University
          <vspace blankLines="1"/> Beijing 100084 <vspace blankLines="1"/>
          P.R.China</t>

          <t>Phone: +86-10-62785822 <vspace blankLines="1"/> Email:
          pengwu.thu@gmail.com</t>

          <t/>

          <t>Qi Sun <vspace blankLines="1"/> Tsinghua University <vspace
          blankLines="1"/> Beijing 100084 <vspace blankLines="1"/>
          P.R.China</t>

          <t>Phone: +86-10-62785822 <vspace blankLines="1"/> Email:
          sunqi@csnet1.cs.tsinghua.edu.cn</t>

          <t/>

          <t>Chongfeng Xie <vspace blankLines="1"/> China Telecom <vspace
          blankLines="1"/> Room 708, No.118, Xizhimennei Street <vspace
          blankLines="1"/> Beijing 100035 <vspace blankLines="1"/>
          P.R.China</t>

          <t>Phone: +86-10-58552116 <vspace blankLines="1"/> Email:
          xiechf@ctbri.com.cn</t>

          <t/>

          <t>Xiaohong Deng <vspace blankLines="1"/> France Telecom</t>

          <t>Email: xiaohong.deng@orange.com</t>

          <t/>

          <t>Cathy Zhou <vspace blankLines="1"/> Huawei Technologies <vspace
          blankLines="1"/> Section B, Huawei Industrial Base, Bantian Longgang
          <vspace blankLines="1"/> Shenzhen 518129 <vspace blankLines="1"/>
          P.R.China</t>

          <t>Email: cathyzhou@huawei.com</t>

          <t/>

          <t>Alain Durand <vspace blankLines="1"/> Juniper Networks <vspace
          blankLines="1"/> 1194 North Mathilda Avenue <vspace blankLines="1"/>
          Sunnyvale, CA 94089-1206 <vspace blankLines="1"/> USA</t>

          <t>Email: adurand@juniper.net</t>

          <t/>

          <t>Reinaldo Penno <vspace blankLines="1"/> Cisco Systems, Inc.
          <vspace blankLines="1"/> 170 West Tasman Drive<vspace
          blankLines="1"/> San Jose, California 95134<vspace blankLines="1"/>
          USA</t>

          <t>Email: repenno@cisco.com</t>

          <t/>

          <t>Alex Clauberg <vspace blankLines="1"/> Deutsche Telekom AG
          <vspace blankLines="1"/> GTN-FM4 <vspace blankLines="1"/>
          Landgrabenweg 151 <vspace blankLines="1"/> Bonn, CA 53227 <vspace
          blankLines="1"/> Germany</t>

          <t>Email: axel.clauberg@telekom.de</t>

          <t/>

          <t>Lionel Hoffmann <vspace blankLines="1"/> Bouygues Telecom <vspace
          blankLines="1"/> TECHNOPOLE <vspace blankLines="1"/> 13/15 Avenue du
          Marechal Juin <vspace blankLines="1"/> Meudon 92360 <vspace
          blankLines="1"/> France</t>

          <t>Email: lhoffman@bouyguestelecom.fr</t>

          <t/>

          <t>Maoke Chen <vspace blankLines="1"/> FreeBit Co., Ltd. <vspace
          blankLines="1"/>13F E-space Tower, Maruyama-cho 3-6<vspace
          blankLines="1"/>Shibuya-ku, Tokyo 150-0044<vspace
          blankLines="1"/>Japan</t>

          <t>Email: fibrib@gmail.com</t>
        </list></t>
    </section>

    <section title="Acknowledgement">
      <t>The authors would like to thank Ole Troan, Ralph Droms and Suresh
      Krishnan for their comments and feedback.</t>

      <t>This document is a merge of three documents: <xref
      target="I-D.cui-softwire-b4-translated-ds-lite"/>, <xref
      target="I-D.zhou-softwire-b4-nat"/> and <xref
      target="I-D.penno-softwire-sdnat"/>.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.1918"?>
      
      <?rfc include="reference.RFC.2119" ?>
      
      <?rfc include="reference.RFC.2131" ?>

      <?rfc include="reference.RFC.2473"?>

      <?rfc include="reference.RFC.4213"?>

      <?rfc include="reference.RFC.5508"?>

      <?rfc include="reference.RFC.6333"?>

      <?rfc include="reference.I-D.ietf-softwire-map-dhcp"?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.3022"?>
      
      <?rfc include="reference.RFC.6269"?>
      
      <?rfc include="reference.RFC.6346"?>
      
      <?rfc include="reference.RFC.6431"?>

      <?rfc include="reference.RFC.6887"?>

      <?rfc include="reference.I-D.ietf-softwire-public-4over6"?>

      <?rfc include="reference.I-D.ietf-softwire-map"?>

      <?rfc include="reference.I-D.ietf-softwire-map-dhcp"?>

      <?rfc include="reference.I-D.cui-softwire-b4-translated-ds-lite"?>

      <?rfc include="reference.I-D.zhou-softwire-b4-nat"?>

      <?rfc include="reference.I-D.penno-softwire-sdnat"?>
      
      <?rfc include="reference.I-D.ietf-pcp-port-set"?>
      
      <?rfc include="reference.I-D.ietf-softwire-unified-cpe"?>
      
      <?rfc include="reference.I-D.ietf-dhc-dhcpv4-over-dhcpv6"?>
    </references>
  </back>
</rfc>
