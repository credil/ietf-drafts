<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" []>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="info"
     docName="draft-mouton-mif-dhcpv6-drlo-01.txt"
     ipr="trust200902">

  <!-- category values: std, bcp, info, exp, and historic ipr values:
       trust200902, noModificationTrust200902,
       noDerivativesTrust200902, or pre5378Trust200902 you can add the
       attributes updates="NNNN" and obsoletes="NNNN" they will
       automatically be output with "(if approved)" -->

  <front>

    <title abbrev="Default Router List Option">
      Default Router List Option for DHCPv6 (DRLO)
    </title>

    <author initials='A.' surname="Petrescu" fullname='Alexandru Petrescu'>
      <organization>CEA, LIST</organization>
      <address>
	<postal>
	  <street>
	    Communicating Systems Laboratory, Point Courrier 173
	  </street>
	  <city>
	    Gif-sur-Yvette
	  </city>
	  <region>
	  </region>
	  <code>
	    F-91191
	  </code>
	  <country>
	    France
	  </country>
	</postal>
	<phone>
	  +33(0)169089223
	</phone>
	<email>
	  alexandru.petrescu@cea.fr
	</email>
      </address>
    </author>
	
    <author initials='C.' surname="Janneteau"
	    fullname='Christophe Janneteau'>
      <organization>CEA, LIST</organization>
      <address>
	<postal>
	  <street>
	    Communicating Systems Laboratory, Point Courrier 173
	  </street>
	  <city>
	    Gif-sur-Yvette
	  </city>
	  <region>
	  </region>
	  <code>
	    F-91191
	  </code>
	  <country>
	    France
	  </country>
	</postal>
	<phone>
	  +33(0)169089182
	</phone>
	<email>
	  christophe.janneteau@cea.fr
	</email>
      </address>
    </author>	

    <author fullname="Maximilien Mouton" initials="M." 
	    surname="Mouton">
      <organization>University of Luxembourg</organization>
      <address>
	<postal>
	  <street>
	    Interdisciplinary Center for Security, Reliability and Trust
	  </street>
	  <city>
	    Luxembourg
	  </city>
	  <region>
	  </region>
	  <code>
	  </code>
	  <country>
	    Luxembourg
	  </country>
	</postal>
	<phone>
	</phone>
	<email>
	  maximilien.mouton@uni.lu
	</email>
      </address>
    </author>

	<date/>

    <!-- Meta-data Declarations -->

    <area>Internet</area>

    <workgroup>Network Working Group</workgroup>

    <!-- WG name at the upperleft corner of the doc, IETF is fine for
         individual submissions.  If this element is not present, the
         default is "Network Working Group", which is used by the RFC
         Editor as a nod to the history of the IETF. -->

    <keyword>
      DHCPv6, default route, default router, lifetime
    </keyword>

    <!-- Keywords will be incorporated into HTML output files in a
         meta tag but they have no effect on text or nroff output. If
         you submit your draft to the RFC Editor, the keywords will be
         used for the search engine. -->

    <abstract>
      <t>
	Neighbor Discovery protocol is currently considered as the
	best way for providing a default router to a client in IPv6
	networks, typically using a Default Router List.  Hence it was
	not considered necessary for DHCPv6 to have this feature.
	But, recently, some deployment scenarios expressed a need not
	to use Neighbor Discovery mechanisms.  This draft specifies a
	new DHCPv6 option providing data necessary for a Client's
	Default Router List (address, lifetime, MAC address)
	(indirectly, through the Neighbour Cache).
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
	<t>
	  Neighbor Discovery protocol <xref target="RFC4861"/> is
	  currently considered as the best way for providing a default
	  router to a client in IPv6 networks.  Hence it was not
	  considered necessary for DHCPv6 <xref target="RFC3315"/> to
	  have this feature.  But recently, some deployment scenarios
	  express a need not to use neighbor discovery
	  autoconfiguration mechanism.
	</t>
      
	<!--
	    <t>
	    One of this scenario consists, in the context of
	    network mobility [RFC3963], for the mobile router to
	    overpass the interdiction to autoconfigure its care of
	    address with neighbor discovery autoconfiguration
	    mechanism.
	    </t>
	-->
	  
	<t>
	  This need is justified by configuration management
	  centralization reasons.  Indeed, contrary to Stateless
	  Address Autoconfiguration (SLAAC) <xref target="RFC4862"/>
	  which needs to be configured in each router, DHCPv6
	  configuration is centralized in a server; meaning that all
	  subnets configurations are managed in one configuration file
	  containing all prefix information, DNS server addresses,
	  timers, etc.  Hence, one administering a large, complex
	  architecture including numerous routers may prefer a
	  centralized, stateful autoconfiguration solution like DHCPv6
	  rather than using SLAAC on each router which is more
	  difficult to debug and reconfigure.  Other cases like
	  multihoming may require a centralized autoconfiguration
	  mechanism for traffic optimization reasons.
	</t>
	  
	<t>
	  This draft specifies a new DHCPv6 option.  This option
	  provides data necessary for the ND Neighbor Cache and
	  pointed to by the ND Default Router List (this data is
	  coloquially named "a default router list" from here on).
	  This option is similar to DHCPv4 option router <xref
	  target="RFC2132"/>.  Contrary to DHCPv4, however, this
	  option also provides router lifetime and optionaly router
	  link layer address.  Lifetime and link-layer address are
	  necessary for a coherent implementation of DHCP and ND data
	  structures.  They are particularly useful in the context of
	  mobility and multihoming for managing several default
	  routers in order to solve continuity of service issues.
	</t>
    
	<t>
	  The perspective of using DHCPv6 to provide a default route
	  to a client was previously mentioned in <xref
	  target='I-D.droms-dhc-dhcpv6-default-router'/>.
	</t>
	<t>
	  Additionally, <xref
	  target='I-D.ietf-mif-dhcpv6-route-option'/> presents a
	  method to distribute routes, in a generic manner, to DHCP
	  Clients.  This draft does not explicitly treat the default
	  router case, although it does exhibit a capability to
	  communicate a default route as a particular case of a route
	  (use destination prefix "::" with prefix length 0, and
	  address of the default router).
	</t>
    </section>
	
    <section title="Terminology">
      <t>
	The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in
	<xref target="RFC2119">RFC 2119</xref>.
      </t>
      <t>
	This document uses also the terminology defined in <xref
	target="RFC3315"/>, <xref target="RFC3963"/> and <xref
	target="RFC4862"/>.
      </t>
    </section>

    <section title="Pertinence to the MIF Working Group">
      <t>
	The Multiple Interfaces WG (MIF) is treating of Hosts which
	have the ability to attach to multiple networks
	simultaneously.  The WG is chartered to produce, among other
	products, extensions to DHCPv6 to "provision client nodes with
	small amount of static routing information".  

<!-- 	A draft with status WG item exists: <xref -->
<!-- 	target='I-D.ietf-mif-dhcpv6-route-option'/>. -->
      </t>
      <t>
	The mechanism described in this draft, can be used to
	communicate several default routes (triplets gw-mac-lifetime)
	to a single Host which can have several interfaces.
      </t>
      <t>
	The distinction among the default routes (once installed on a
	Client) can be realized according to various criteria: (1) use
	a form of Preferences, new extensions similar to RFC 4191, (2)
	use the Lifetime communicated by the mechanism of this draft
	to distinguish among default routes according to new rules,
	(3) use a random function to pick a default route, (4) use a
	new interface name in the ORO and in the Ack to specify which
	default route uses which interface, (5) use a new field
	containing a source address which the Client must use for a
	particular default route, and more.
      </t>
    </section>

    <section title="Scenario description">
      <section title="Topologies">
	<t>
	  This section describes two simple topologies: one involving a
	  server and a client and another implying in addition a relay.
	</t>
	<t>
	  Client/Server topology:
	</t>
	<figure align="center"
		anchor="xml_topo1"
		title="Simple Client-Server topology">
	  <artwork align="center">
	    <![CDATA[
+------+        +------+
|DHCPv6|--------|DHCPv6|
|server|ethernet|client|
+------+        +------+
			
	    ]]></artwork>
	</figure>

	<t>
	  In this topology, a client with no IPv6 configuration needs
	  to obtain an Internet access and doesn't intend to use
	  SLAAC.  It asks the DHCPv6 Server the three necessary
	  settings: an IPv6 address, a default router address and a
	  DNS server in a solicit message. The DHCPv6 Server receives
	  this Solicit message and sends back the parameters necessary
	  fo IPv6 configuration.
	</t>

	<t>
	  Client/Relay/Server topology:
	</t>
	<figure align="center"
		anchor="xml_topo2"
		title="Simple Client-Relay-Server topology">
	  <artwork align="center">
	    <![CDATA[
+------+        +------+        +------+
|DHCPv6|--....--|DHCPv6|--------|DHCPv6|
|server|ethernet|relay |ethernet|client|
+------+        +------+        +------+	
	    ]]></artwork>
	</figure>
	<t>
	  Again, a client with no IPv6 configuration tries to obtain
	  an Internet access and doesn't want to use SLAAC. It asks
	  the DHCPv6 server the same way than in previous figure but
	  the DHCPv6 server is not in the same link. The DHCPv6 relay
	  takes client DHCPv6 message and delivers it to the
	  server. The server knows that the message is relayed and
	  send its responses back to the relay.
	</t>
      </section>
      <!--
	  <section title="More specific topologies">
	  <section title="Network mobility">
	  <t>This section describes a classic topology in network mobility (NEMO).</t>
	  
	  <t>A mobile router providing Internet access to two local fixe nodes moves in the foreign network 2001:db8:200::/64. As a router, [RFC4861] states that it should not use neighbor discovery protocol to obtain its IPv6 configuration. It then runs a DHCPv6 so that it gets the care of address and the default router address it needs to build a tunnel toward its home agent.</t>
	  </section>
	  </section>-->

      <section title="Message Exchange">
	<t>
	  There are two main message exchange scenarios corresponding
	  to the using or not of a relay. The message exchange when
	  not using a relay is the following:
	</t>

	<figure align="center"
		anchor="xml_msg_ex1"
		title="Client-Server message exchange">
	  <artwork align="center">
	    <![CDATA[
   +------+                     +------+
   |DHCPv6|                     |DHCPv6|
   |client|                     |server|
   +------+                     +------+
        |                          |
        |    DHCPv6 Solicit        |
        |------------------------->|
        |                          |
        |    DHCPv6 Advertise      |
        |<-------------------------|
        |                          |
        |    DHCPv6 Request        |
        |------------------------->|
        |                          |
        |    DHCPv6 Reply          |
        |<-------------------------|
        |                          |					
	    ]]></artwork>
	</figure>

	<t>
	  A normal exchange between a new Client and a DHCPv6 Server
	  consists in four messages: Solicit, Advertise, Request, and
	  Reply.  In a Solicit/Request packet a Client lists wanted
	  options in the Option Request Option (ORO).  This option is
	  composed of a list of option codes.  The DHCPv6 Server
	  answers those packets with Advertise/Reply packets
	  containing values for the options asked by the Client.
	</t>

	<t>
	  The message exchange when using a Relay is illustrated in
	  the figure below:
	</t>

	<figure align="center"
		anchor="xml_msg_ex2"
		title="Client-Relay-Server message exchange">
	  <artwork align="center">
	    <![CDATA[
   +------+                    +------+                     +------+
   |DHCPv6|                    |DHCPv6|                     |DHCPv6|
   |client|                    |relay |                     |server|
   +------+                    +------+                     +------+
       |                          |                            |
       |    DHCPv6 Solicit        |      DHCPv6 Relay-forw     |
       |------------------------->|===========================>|
       |                          |                            |
       |    DHCPv6 Advertise      |      DHCPv6 Relay-reply    |
       |<-------------------------|<===========================|
       |                          |                            |
       |    DHCPv6 Request        |      DHCPv6 Relay-forw     |
       |------------------------->|===========================>|
       |                          |                            |
       |    DHCPv6 Reply          |      DHCPv6 Relay-reply    |
       |<-------------------------|<===========================|
       |                          |                            |
	    ]]></artwork>
	</figure>

	<t>
	  The relay receives the message from the client and forwards
	  it to the server in a Relay-forw message. The server replies
	  to the relay with an advertise/reply message encapsulated in
	  a Relay-reply message. The content of this message is
	  extracted by the relay and sent to the client.
	</t>
      </section>
    </section>
	
    <section title="DHCPv6 Default router list option">
      <section title="Option format">
	<section title="Client side">
	  <t>
	    In its DHCPv6 requests, the client sends a list of
	    required options in the option request option (ORO). The
	    format of this option is the following:
	  </t>
	  <figure align="center"
		  anchor="xml_client_option"
		  title="DHCPv6 option request option field">
	    <artwork align="center">
	      <![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           OPTION_ORO          |           option-len          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    requested-option-code      |                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                              ...                              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	      ]]></artwork>
	  </figure>
	  <t>
	    The proposed option (to fill in the field
	    requested-option-code in the diagram above) is named in
	    this draft OPTION_DEFAULT_ROUTER_LIST.  It is possible to
	    concatenate this value with several other existing
	    requested-option-code's.
	  </t>
	  <t>
	    The value of this code of this option is TBA.
	  </t>
	</section>

	<section title="Server side">
	  <t>
	    The default router list option is described below:
	  </t>
	  <figure align="center"
		  anchor="xml_server_option"
		  title="DHCPv6 default router list option field">
	    <artwork align="center">
	      <![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   OPTION_DEFAULT_ROUTER_LIST  |          option-len           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                        router_address                         |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        router_lifetime        |    lla_len    |               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               |
.                 router_link_layer_address(opt)                .
.                              ...                              .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	      ]]></artwork>
	  </figure>
	  <t>
	    As this option contains a list, the pattern containing
	    router_address, router_lifetime, lla_len and optionnaly
	    router_link_layer_address can be repeated.
	  </t>
	  <t>
	    <list hangIndent="8" style="hanging">
	      <t hangText="option-code">
	      <vspace blankLines="0" />
	      OPTION_DEFAULT_ROUTER_LIST (TBA)
	      </t>
	      <t hangText="option-len">
	      <vspace blankLines="0" />
	      length of the default router list option in bytes. It
	      has a value of minimum 23 (decimal representation).
	      </t>
	      <t hangText="router_address"><vspace blankLines="0" />
	      default router IPv6 address (16 bytes)
	      </t>
	      <t hangText="router_lifetime">
	      <vspace blankLines="0" />
	      16-bit unsigned integer.  Router lifetime in units of
	      seconds. Limit value is 9000 and 0 SHOULD NOT appear
	      according to section 6 of [RFC 4861].
	      </t>
	      <t hangText="lla_len">
	      <vspace blankLines="0" />
	      8-bit unsigned integer. The size of the link layer
	      address of the router in bytes. Equals to 0 if no link
	      layer address is given.
	      </t>
	      <t hangText="router_link_layer_address">
	      <vspace blankLines="0" />
	      link layer address of the router. Its length is not
	      known in advance and need to be inquired in lla_len
	      field. This field is optional.
	      </t>
	    </list>
	  </t>
	  <t>
	    This option contains an optional variable length field
	    router_link_layer_address. Router_address and
	    router_lifetime field's size are fixed.
	  </t>
	  <t>
	    There are two alternative possibilities of using router
	    information in the list:
	  </t>
	  <t>
	    <list style="symbols">
		<t>
		  Not using router_link_layer_address: DHCPv6 server
		  communicates router_address and router_lifetime with
		  lla_len equals to 0. Default router's information is
		  finished at the end of lla_len.
		</t>
		<t>
		  Using router_link_layer_address: DHCPv6 server
		  communicates router_address and router_lifetime with
		  lla_len equals to k, where k is the size of the
		  link-layer address.  After the field lla_len the
		  default router's information is finished after
		  reading k more bytes.
		</t>
	    </list>
	  </t>
	</section>
      </section>

      <section title="Optimization">
	<t>
	  An optimization is possible: removing lla_len field for the
	  last element of a default router list when that is not
	  necessary.  Prima facie, one may consider that removing one
	  byte may not be worth the effort of the implementation
	  complexity.  This is why this draft proposes to apply this
	  optimization in only one simple but fairly frequent case: if
	  the last element (i.e. the triplet address-MAC-lifetime) of
	  a list (if there are more elements) has no link-layer
	  address. As a matter of fact it has the advantage of
	  removing 8 zero bits.  This case happens each time an
	  administrator doesn't want to use router_link_layer_address.
	  This case is frequent enough to justify an optimization.
	  Moreover this optimization has been implemented and does not
	  require a huge amount of intellectual effort (around 10
	  extra lines of code).
	</t>
		
	<!--This draft raises the following cases in which this optimization is possible:</t>
	    <t><list style="numbers">
	    <t>The last element of a list (of one are more elements) have no link layer address.</t>
	    <t>The last element of a list (of one are more elements) has a link layer address and element from the list always have an address which is less than 144 			bits long.</t>
	    <t>The last element of a list (with several elements) has a link layer address and element from the list always have an address which is less than 144 			bits long and has the same size for each element.</t>
	    </list> </t>
	    
	    <t>Maximum link-layer address size is defined as 144 bits because when a link layer address is equals or greater than 144 bits it can be mistaken for another default router information.</t>
	    
	    <figure align="center" anchor="xml_optimisations" title="Example of optimization cases when default router list option carries one or two default router">
	    <preamble>Optimization cases when default router list option carries one or two default router:</preamble>
	    <artwork align="center"><![CDATA[
	    
	    ]]></artwork>
	    </figure>
	    <t>DRA: default router address</t>
		<t>LT: router lifetime</t>
		<t>DRLLALEN: default router link layer address length</t>
		<t>DRLLA: default router link layer address</t>
		<t>Case 2 and 3 raise some problems for two reasons:</t>
		<t><list style="symbols">
		<t>link-layer addresses longer than 144 bits long can exist.</t>
		<t>The link layer addresses type communicated may not be always the same (multihoming, etc.)</t>
		</list></t>
		<t>According to the latter this draft keep only case 1 as a possible optimization.</t>-->

      </section>
      <section title="Default router lifetime management">
	<t>
	  This draft proposes to use default router lifetime in the
	  same manner as <xref target="RFC4861"/>.  This has the
	  following consequences.
	</t>
	<!--<t>The client MAY update default router lifetime by sending renew message.</t>-->
		<t>
		  When a default router lifetime is equal to 0 it MUST
		  be deleted from the Default Router list, Neighbor
		  cahce and other related Fowarding Information Bases.
		</t>
		<t>
		  Following <xref target="RFC4861"/> section 6, this
		  draft propose to limit the lifetime to 9000
		  (decimal) seconds.
		</t>
      </section>
    </section>
	
    <section title="Open issues">
      <t>
	In addition of default router address, lifetime and link-layer
	address neighbor discovery mechanism also provide MTU, Hop
	limit, reachable time, retransmission timer and textual name
	of the interface.  This information can be defined in other
	DHCPv6 options extending this draft, if needed.
      </t>
      <t>
	DHCP and Neighbor Discovery protocol manage router lifetime
	differently. <xref target="RFC3315"/> specifies lifetimes
	typically in a 4-byte field. In the opposite, Neighbor
	Discovery protocol defines a 2-byte field for lifetime. In
	addition, it defines a lifetime limit equalling 9000 making
	the use of 4-byte fields unnecessary.  Because of this, this
	draft proposes a 2-byte field for router lifetime.
      </t>
      <t>
	Simultaneous use of DHCP and Router Advertisement to
	communicate default routes is out of the scope of this draft.
      </t>
    </section>

    <section anchor="Acknowledgements"
	     title="Acknowledgements">
      <t>
	The authors would like to acknowledge the useful technical
	contribution of Mathias Boc and Sofian Imadali.
      </t>
      <t>
	Authors appreciate the particularly stimulating discussion
	about default route and DHCPv6 in the email lists of DHC, MIF
	and 6MAN Working Groups.
      </t>
      <t>
	Recently, Tomasz Mrugalski offered insight about default
	routes potentially used by draft-dec-dhcpv6-route-option-02.
	Mikael Abrahamsson suggested communicating a source address
	when discussing default route and DHCPv6.
      </t>
      <t>
	This work has been performed in the framework of the ICT
	project ICT-5-258512 EXALTED, which is partly funded by the
	European Union.  The organisations on the source list [CEA]
	would like to acknowledge the contributions of their
	colleagues to the project, although the views expressed in
	this contribution are those of the authors and do not
	necessarily represent the project.
      </t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>
	The proper working of this extension to DHCPv6 to support
	default routers rely on using a unique number for
	OPTION_DEFAULT_ROUTER_LIST.
      </t>
      <t>
	In this sense, and when agreed to take on this path, IANA will
	be demanded to assign an option code to
	OPTION_DEFAULT_ROUTER_LIST, if deemed necessary.
      </t>
      <t>
	Currently, the local prototype implementation uses the number
	66 (decimal) for this field.
      </t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
	Security considerations referring to DHCPv6 are described in
	<xref target="RFC3315"/> and other more recent Internet
	Drafts.  The new option described here should not add new
	threats.  However, it is worth mentioning that the high
	importance of a default route (it must work when everything
	else fails) represents also a high risk when successful
	attacks - if at all - happen.
      </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>

    <references title="Normative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119" ?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2132" ?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3315" ?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3963" ?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4861" ?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4862" ?>
    </references>

    <references title="Informative References">
      <?rfc
	include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.droms-dhc-dhcpv6-default-router"
      ?>
      <?rfc
	include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-mif-dhcpv6-route-option"
      ?>
    </references>


    <section anchor='changelog'
	     title='ChangeLog'>
      <t>
	The changes are listed in reverse chronological order, most
	recent changes appearing at the top of the list.
      </t>

      <t>
	From draft-mouton-mif-dhcpv6-drlo-00.txt to
	draft-mouton-mif-dhcpv6-drlo-01.txt:
	<list style='symbols'>
	  <t>
	    Date change, author ordering and affiliation.
	  </t>
	</list>	
      </t>
    </section>

  </back>
</rfc>
