<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
  <!ENTITY RFC2616 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2616.xml">
  <!ENTITY RFC3810 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3810.xml">
  <!ENTITY RFC4291 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4291.xml">
  <!ENTITY RFC4601 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4601.xml">
  <!ENTITY RFC4944 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4944.xml">
  <!ENTITY RFC5771 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5771.xml">
  <!ENTITY RFC6550 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6550.xml">
  <!ENTITY RFC6636 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6636.xml">
  <!ENTITY RFC6690 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6690.xml">  
  <!ENTITY RFC6775 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6775.xml">  
  <!ENTITY I-D.ietf-core-coap SYSTEM
    "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-core-coap.xml">
  <!ENTITY I-D.ietf-roll-trickle-mcast SYSTEM
  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-roll-trickle-mcast.xml">
  <!ENTITY I-D.vanderstok-core-dna SYSTEM
  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.vanderstok-core-dna.xml">
  <!ENTITY I-D.keoh-tls-multicast-security SYSTEM
  "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.keoh-tls-multicast-security.xml">

]>

<!-- Use with the following tips & tools:
      http://xml.resource.org/authoring/draft-mrose-writing-rfcs.html
      http://xml.resource.org/
      http://fenron.net/~fenner/ietf/xml2rfc-valid/
      http://tools.ietf.org/rfcdiff
  -->

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.35) -->

<!-- give errors regarding ID-nits and DTD validation -->
<?rfc strict="yes"?>

<!-- control the table of contents (ToC) -->
<!-- generate a ToC -->
<?rfc toc="yes"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<?rfc tocdepth="3"?>

<!-- control references -->
<!-- use anchors instead of numbers for refs, i.e, [RFC2119] instead of [1] -->
<?rfc symrefs="yes"?>
<!-- sort the reference entries alphabetically -->
<?rfc sortrefs="no" ?>

<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<!-- do not start each main section on a new page -->
<?rfc compact="yes" ?>
<!-- "no" to keep one blank line between list items (rfced) -->
<?rfc subcompact="no" ?>

<!-- encourage use of "xml2rfc" tool -->
<?rfc rfcprocack="yes" ?>
<!-- end of list of popular I-D processing instructions -->

<rfc category="info" ipr="trust200902" docName="draft-ietf-core-groupcomm-04">
  <front>
    <title abbrev="Group Communication for CoAP">Group Communication for CoAP</title>
    <author fullname="Akbar Rahman" initials="A." surname="Rahman" role="editor">
      <organization>InterDigital Communications, LLC</organization>
      <address>
        <email>Akbar.Rahman@InterDigital.com</email>
      </address>
    </author>
    <author fullname="Esko Dijk" initials="E.O." surname="Dijk" role="editor">
      <organization>Philips Research</organization>
      <address>
        <email>esko.dijk@philips.com</email>
      </address>
    </author>
    <date year="2012"/>
    <area>Applications</area>
    <workgroup>CoRE Working Group</workgroup>

    <abstract>
      <t>
      CoAP is a RESTful transfer protocol for constrained devices and networks.  It is
      anticipated that constrained devices will often naturally operate in groups 
      (e.g. in a building automation scenario all lights in a given room may
      need to be switched on/off as a group). This document defines how the CoAP 
      protocol should be used in a group communication context.  An approach for
      using CoAP on top of IP multicast is detailed for both constrained and
      un-constrained networks.  Also, various use causes and corresponding protocol
      flows are provided to illustrate important concepts. Finally, guidance is
      provided for deployment in various network topologies.
      </t>
    </abstract>

    <!--
    <note title="Requirements Language">
    <t>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;,
    &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;,
    &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,
    &quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document are to be
    interpreted as described in  <xref target="RFC2119">RFC 2119</xref>.
    </t>
    </note>
    -->
  </front>
  <middle>

<!-- section anchor="sec-1" title="Conventions and Terminology" -->
<section title="Conventions and Terminology">
  <t>
  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
  "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
  document are to be interpreted as described in <xref target="RFC2119" />.
  </t>
  
  <t>This document assumes readers are familiar with the terms and
     concepts that are used in <xref target="I-D.ietf-core-coap"/>.  In
     addition, this document defines the following terminology:

  		      <list style="hanging">
			     <t hangText="Group Communication"><vspace />
				     A source node sends a single message which is delivered
				     to multiple destination nodes, where all destinations are 
				     identified to belong to a specific group.  The
				     source node may or may not be part of the group.  The underlying
				     mechanism for group communication is assumed to be multicast
				     based.  The network where the group communication takes place
				     can be either a constrained or a regular (un-constrained) network.</t>

			      <t hangText="Multicast"><vspace />
				      Sending a message to multiple destination nodes simultaneously.
				      There are various options to implement multicast including 
				      layer 2 (Media Access Control) and layer 3 (IP) mechanisms.</t>

			      <t hangText="IP Multicast"><vspace />
				      A specific multicast solution based on the use of IP multicast
				      addresses as defined in "IANA Guidelines for IPv4 Multicast Address
				      Assignments" <xref target="RFC5771" /> and "IP Version 6 Addressing
				      Architecture" <xref target="RFC4291" />.</t>

			      <t hangText="Low power and Lossy Network (LLN)"><vspace />
				      A type of constrained network where the devices are interconnected by
				      a variety of low power, lossy links such as IEEE 802.15.4, Bluetooth,
				      WiFi, wired or low power power-line communication links.</t>
			 </list> 
    </t>

</section>

<!-- section anchor="sec-2" title="Introduction" -->
<section title="Introduction">
  <!-- section anchor="sec-2.1" title="Background" -->
  <section title="Background">
    <t>
    The Constrained Application Protocol (CoAP) is an application protocol (analogous to HTTP)
    for resource constrained devices operating in an IP network <xref target="I-D.ietf-core-coap"/>.
    Constrained devices can be large in number, but are often highly correlated to
    each other (e.g. by type or location). For example, all the light switches in a building may
    belong to one group and all the thermostats may belong to another group.
    Groups may be composed by function. For example, the group
    "all lights in building one" may consist of the groups "all lights
    on floor one of building one", "all lights on floor two of building
    one", etc. Groups may be preconfigured or dynamically formed. If information
    needs to be sent to or received from a group of devices, group communication
    mechanisms can improve efficiency and latency of communication and reduce
    bandwidth requirements for a given application.  HTTP does not
    support any equivalent functionality to CoAP group communication.</t>


  </section>

  <!-- section anchor="sec-2.2" title="Scope" -->
  <section title="Scope">
    <t>
    This document describes how to use the CoAP protocol in a group communication 
    context with IP Multicast running underneath CoAP.  No changes to 
    either CoAP or IP Multicast are required for this purpose.  However, proper
    operation of group communication does require judicious use of these and
    a variety of other IETF protocols. The main contribution of this document
    lies in explaining how various IETF mechanisms may be used together to fulfill CoAP
    group communication needs for specific use cases and deployments.</t>
  </section>

  </section>





<!-- section anchor="sec-3" title="IP Multicast Based Group Communication" -->
<section title="CoAP Group Communication Based On IP Multicast" anchor="IPMulticast">


  <!-- section anchor="sec-3.1" title="Introduction" -->
  <section title="IP Multicast Background">
	  
    <t>
    IP Multicast routing protocols have been evolving for decades, resulting in 
    proposed standards such as Protocol Independent Multicast - Sparse
    Mode (PIM-SM) <xref target="RFC4601" />.  Yet, due to various technical and marketing
    reasons, IP Multicast routing is not widely deployed on the general Internet.  However, IP
    Multicast is very popular in specific deployments such as in enterprise networks
    (e.g. for video conferencing), smart home networks (e.g. UPnP) and carrier IPTV deployments.  The 
    packet economy and minimal host complexity of IP multicast make it attractive for
    group communication in constrained environments. Therefore IP multicast is the recommended
    underlying mechanism for CoAP group communication, and the approach assumed in this document.
    </t>
    <t>To achieve IP multicast beyond a subnet, an IP multicast routing protocol needs to be
    active on routers. The RPL protocol <xref target="RFC6550"/> for example is able to 
    route multicast traffic in constrained LLNs.  While PIM-SM  <xref target="RFC4601" /> is
    often used for multicast routing in un-constrained networks. 
    </t>
    <t>IP multicast can also be run in a Link-Local (LL) scope.  This means that there is no routing
       involved and an IP multicast message is only received on the network link on which it was sent.
    </t>
  </section>

  <!-- section anchor="sec-3.2" title="CoAP Group Definition and Naming" -->
  <section title="CoAP Group Definition and Naming">
    <t>
    A group is defined as a set of CoAP endpoints, where each endpoint is configured to receive a 
    multicast CoAP request that is sent to the group's associated IP multicast address. The group
    MAY have more than one associated IP multicast address. An endpoint MAY be a member of 
    multiple groups. Group membership of an endpoint MAY dynamically change over time.
    </t>

    <t>
    A CoAP group member listens for CoAP messages on the group's IP multicast address,
    assuming the default CoAP UDP port. Note that a non-default UDP port MAY be specified 
    for the group; in which case implementers MUST ensure that all group members are configured to
    use this same port.
    </t>

    <t>For group communications, the Group URI will be the CoAP request URI. A Group URI has the
       scheme 'coap' and includes in the authority part either a group IP multicast address or 
       a hostname that can be resolved to the group IP multicast address (e.g., a Group Name or Group FQDN). 
       Group URIs follow the CoAP URI syntax <xref target="I-D.ietf-core-coap"/>. It is recommended for
       sending nodes to use the IP multicast address literal in the authority for the Group URI as the
       default. </t>  
       	  	  
    <t> The Group FQDN can be uniquely mapped to a site-local or global multicast IP address via DNS
	    resolution (if supported). Some examples of hierarchical Group FQDN naming (and scoping) for
	    a building control application are shown below (<xref target="I-D.vanderstok-core-dna" />):

    <figure><artwork>
  URI authority                  Targeted group
  all.bldg6.example.com          "all nodes in building 6"
  all.west.bldg6.example.com     "all nodes in west wing, building 6"
  all.floor1.west.bldg6.examp... "all nodes in floor 1, west wing, 
                                  building 6"
  all.bu036.floor1.west.bldg6... "all nodes in office bu036, floor1, 
                                  west wing, building 6"
    </artwork></figure>
    </t>
    
    <t>Reverse mapping (from IP multicast address to Group FQDN) is supported
    using the reverse DNS resolution technique (<xref target="I-D.vanderstok-core-dna" />).
    </t>
  </section>




  <!-- section anchor="sec-3.3" title="Group Discovery and Member Discovery" -->  
  <section title="Group Discovery and Member Discovery"  anchor="GroupDiscovery">
	 
   <t>
    CoAP defines a resource discovery capability <xref target="RFC6690"/>, but does not specify how
    to discover groups (e.g. find a group to join or send a multicast message to)
    or how to discover members of a group (e.g. to address selected group members by unicast).  A simple
    ad-hoc method to discover members of a CoAP group would be to send a multicast "CoAP ping"
    <xref target="I-D.ietf-core-coap"/>.  The collected responses to the ping would then give
    an indication of the group members.
    </t>

   </section>



  <!-- section anchor="sec-3.4" title="Group Resource Manipulation" -->
  <section title="Group Resource Manipulation">
      
   <t>Group communications SHALL only be used for idempotent methods
      (i.e. CoAP GET, PUT,and  DELETE). The CoAP messages that are sent
      via multicast SHALL be Non-Confirmable.   </t>

   <t>A unicast response per server MAY be sent back to answer the group request
      (e.g. response "2.05 Content" to a group GET request) taking into
      account the congestion control rules defined in
      <xref target="Congestion_Control"/>.  The unicast responses may be a mixture
      of success (e.g. 2.05 Content) and failure (e.g. 4.04 Not Found)
      codes depending on the individual server processing result.
   </t>

    <t>Group communications SHALL NOT be used for non-idempotent
       methods (i.e. CoAP POST).  This is because not all group members
       are guaranteed to receive the multicast request, and the sender
       can not readily find out which group members did not receive it. 
   </t>

    <t>
    All nodes in a given group should receive the same request with high probability.  This will not be 
    the case if there is diversity in the authority port (i.e. a diversity of
    dynamic port addresses across the group) or if the targeted resource
    is located at different paths on different nodes.
    </t>
    
    <t>
    Therefore, some measures must be present to ensure uniformity in port number
    and resource names/locations within a group.  The following are recommended measures:
    <list style="symbols">
      <t> All CoAP multicast requests MUST be sent either to the default CoAP UDP port
	      (i.e. default Uri-Port as defined in <xref target="I-D.ietf-core-coap"/>), or
	      to a port number obtained via a service discovery lookup operation as a valid
	      CoAP port for the targeted multicast group.</t>
      <t> All CoAP multicast requests SHOULD operate only on URIs (links) which were retrieved
	      either from a "/.well-known/core" lookup on at least one group member node,
	      or from an equivalent service discovery lookup which returns either the
	      resources supported by all group members or resources supported by one particular group 
	      member.</t>
    </list>

    </t>
  </section>


        <!-- section anchor="sec-3.5" title="Configuring Group Membeship In Endpoints" --> 
	<section title="Configuring Group Membership In Endpoints">
	<t>
	In some use cases, the group membership of endpoints needs to be configurable after the network
	has been deployed. Example use cases can be found in building control. A commissioning tool
	determines to which groups a light or sensor node belongs, and writes this information to all
	nodes, which can subsequently join the correct IP multicast group. 
	</t><t>
	To achieve smoother interoperability between nodes/endpoints from different manufacturers, 
	an OPTIONAL RESTful method of configuring CoAP endpoints
	with relevant group information is specified here.
	</t><t>
	CoAP endpoints implementing this mechanism MUST support at least one discoverable "Group Configuration" resource 
	of resource type (rt) <xref target="RFC6690"/> "core.gp". This resource is 
	used by an authorized endpoint to manage group membership of the CoAP endpoint.
	</t><t>
	The resource of type "core.gp" has a JSON content format. A GET on this resource returns a
	JSON array of group objects, each group object formatted as shown below:

<figure><artwork>	
   Req: GET /gp
   Res: 2.05 Content (Content-Format: application/json)
   [ { "n": "Room-A-Lights.floor1.west.bldg6.example.com",
       "ip": "ff05::4200:f7fe:ed37:14ca" }
   ]   
</artwork></figure>
	 where the OPTIONAL "n" key/value pair defines the Group name as FQDN and "ip" defines the associated multicast IP address.	 
	 A CoAP endpoint can be added to another group by a POST on the resource 
	 with a single JSON group object, which updates the existing resource by adding the group object to the existing ones:

<figure><artwork>	
   Req: POST /gp (Content-Format: application/json)
   { "n": "floor1.west.bldg6.example.com",
     "ip": "ff05::4200:f7fe:ed37:14cb" }
   Res: 2.04 Changed   
</artwork></figure>

   A PUT with as payload an array of JSON group objects will replace all current group memberships with the new
   ones as defined in the payload. After a change effected on the "core.gp" type resource, the endpoint MUST 
   effect registration/deregistration from corresponding IP multicast groups.
	</t>
	</section>
	
  <!-- section anchor="sec-3.6" title="Congestion Control" -->
  <section title="Congestion Control" anchor="Congestion_Control">
    <t>
    Multicast CoAP requests may result in a multitude of replies from
    different nodes, potentially causing congestion. Therefore sending multicast requests
    should be conservatively controlled.
    </t><t>
    The base CoAP draft <xref target="I-D.ietf-core-coap"/> reduces multicast-specific congestion risks through the following measures:
    <list style="symbols">    
      <t>A server MAY choose not to respond to a multicast request if there's nothing useful 
      to respond (e.g. error or empty response).</t>
      <t>A server SHOULD limit the support for multicast requests to specific resources 
      where multicast operation is required.</t>
      <t>A multicast request MUST be Non-Confirmable.</t>
      <t>A server does not respond immediately to a multicast request, but SHOULD first wait for 
      a time that is randomly picked within a predetermined time interval called the Leisure.</t>
      <t>A server SHOULD NOT accept multicast requests that can not be authenticated.</t>
    </list>
    </t>
    <t>
    Additional guidelines to reduce congestion risks are:   
    <list style="symbols">    
      <t>A server in an LLN should only support multicast GET for resources that are small, e.g. for an LLN
      that could mean the payload of the response fits into a single link-layer frame.</t>
      <t>A server can minimize the payload length in response to a multicast GET on "/.well-known/core" 
      by using hierarchy in arranging link descriptions for the response. An example of this is given 
      in Section 5 of <xref target="RFC6690"/>.</t>
      <t>Preferably IP multicast with link-local scope should be used, rather than global or site-local.</t>
    </list>
    </t>
    
  </section>

</section>





  <!-- section anchor="sec-4" title="Use Cases and Corresponding Protocol Flows" -->	
  <section title="Use Cases and Corresponding Protocol Flows" anchor="Use_Cases">

	<!-- section anchor="sec-4.1" title="Introduction" -->
	<section title="Introduction">
		<t>The use of CoAP group communication is shown in the context of the following two use
		       	cases and corresponding protocol flows:
		<list style="symbols">
			<t>Discovery of Resource Directory: discovering the local CoRE RD which
				contains links (URIs) to resources stored on other servers
			       	<xref target="RFC6690" />. 
			</t>
			<t>Lighting Control: synchronous operation of a group of
			       	IPv6-connected lights (e.g., 6LoWPAN <xref target="RFC4944"/> lights).
			</t>

		</list>				
	       </t>
       </section>


	<!-- section anchor="sec-4.2" title="Network Configuration" -->
	<section title="Network Configuration">
		<t>To illustrate all use cases we define two network configurations. Both are based on
		  the topology as shown in <xref target="Example_Topology" />. The two configurations
		  using this topology are:
	<list style="numbers">		  
		<t>Subnets are 6LoWPAN networks; the routers Rtr-1 and Rtr-2 are 6LoWPAN Border Routers
		   (6LBRs, <xref target="RFC6775"/>).</t>
		<t>Subnets are Ethernet links; the routers Rtr-1 and Rtr-2 are multicast-capable Ethernet routers.</t>
	</list>
	
	Both configurations are further specified by the following:
	<list style="symbols">
		<t>A large room (Room-A) with three lights (Light-1, Light-2, Light-3) controlled by a
			Light Switch.  The devices are organized into two subnets. In reality, there could be
			more lights (up to several hundreds) but these are not shown for clarity.</t>
		<t>Light-1 and the Light Switch are connected to a router (Rtr-1) which is also 
		  a CoAP Resource Directory (RD).</t>
		<t>Light-2 and the Light-3 are connected to another router (Rtr-2) which is also 
		  a CoAP RD.</t>
		<t>The routers are connected to an IPv6 network backbone which is also multicast 
			enabled.  In the general case, this means the network backbone and Rtr-1/Rtr-2 support
			a PIM based multicast routing protocol, and MLD for forming groups. In a limited case,
			if the network backbone is one link, then the routers only have to support MLD-snooping
			(<xref target="mld"/>) for the following use cases to work.</t>
		<t>The DNS server is optional.  If the server is there then certain DNS based features are available 
			(e.g. DNS resolution of URI to IP multicast address). If the DNS server is not there, then 
			greater manual provisioning of the network is requried (e.g. IP multicast addresses are hardcoded
		       	into devices). </t>
		</list>				
	  </t>
	  
      <figure anchor="Example_Topology" title="Network Topology of a Large Room (Room-A)" align="center">
        <artwork>
          <![CDATA[

                                                             Network
                                                            Backbone
                                                                   |
  ################################################                 |
  #                                       Room-A #                 |
  #         **********************               #                 |
  #       **  Subnet-1            **             #                 |
  #     *                            *           #                 |
  #    *     +----------+             *          #                 |
  #   *      |  Light   |-------+      *         #                 |
  #  *       |  Switch  |       |       *        #                 |
  #  *       +----------+  +---------+  *        #                 |
  #  *                     |  Rtr-1  |-----------------------------|
  #  *                     +---------+  *        #                 |
  #  *       +----------+        |      *        #                 |
  #   *      |  Light-1 |--------+     *         #                 |
  #    *     +----------+             *          #                 |
  #     *                            *           #                 |
  #       **                      **             #                 |
  #         **********************               #                 |
  #                                              #                 |
  #                                              #                 |
  #        **********************                #                 |
  #       **  Subnet-2            **             #                 |
  #     *                            *           #                 |
  #    *     +----------+             *          #                 |
  #   *      |  Light-2 |-------+      *         #                 |
  #  *       |          |       |       *        #                 |
  #  *       +----------+  +---------+  *        #                 |
  #  *                     |  Rtr-2  |-----------------------------|
  #  *                     +---------+  *        #                 |
  #  *       +----------+        |      *        #                 |
  #   *      |  Light-3 |--------+     *         #                 |
  #    *     +----------+             *          #                 |
  #     *                            *           #                 |
  #       **                      **             #                 |
  #         **********************               #                 |
  #                                              #                 |
 #################################################                 |
                                                                   |
                                    +------------+                 |
                                    |    DNS     |                 |
				    |   Server   |-----------------+
                                    | (Optional) |
                                    +------------+
          ]]>
        </artwork>
      </figure>

     </section>



	<!-- section anchor="sec-4.3" title="Discovery of Resource Directory" -->
	<section title="Discovery of Resource Directory" anchor="Discovery_Use_Case">	
          <t>
	    The protocol flow for discovery of a RD for the given network 
	    (of <xref target="Example_Topology" />) is shown in <xref target="Example_Protocol_Flow_1" />:

	    		<list style="symbols">
				<t>The fixture for Light-2 is installed and powered on for the first time.</t>
				<t>Light-2 will then search for the local RD (RD-2) by sending
					out a GET request (with the "/.well-known/core?rt=core.rd" request URI)
				       	to the site-local "All CoAP Nodes" address.  In this case, the site is
				       	configured to include at least all nodes in the subnet. </t>
				<t>This multicast message will then go to each node in subnet-2.
					However, only Rtr-2 (RD-2) will respond because the GET is qualified
				        by the query string "?rt=core.rd".
				        Note that the router Rtr-2
				       	is configured not to forward this multicast request further onto the
				       	backbone.</t>
				<t>Note that the flow is shown only for Light-2 for clarity.  Similar flows will
					happen for Light-1, Light-3 and the Light Switch when they are first
				       	powered on.</t>  
			</list>
			The RD may also be discovered by other means such as by assuming a default location
			(e.g. on a 6LBR), using DHCP, anycast address, etc.  However, these approaches do not
     	invoke CoAP group communication so are not further discussed here.
      </t>        
      <t>For other discovery use cases such as discovering local CoAP servers, services or resources
      group communication can be used in a similar fashion as in the above use case. Both Link-Local (LL) and
      site-local discovery are possible this way.
      </t>



      <figure anchor="Example_Protocol_Flow_1" title="Resource Directory Discovery via Multicast Message" align="center">
        <artwork>
          <![CDATA[
                                 Light      Rtr-1     Rtr-2   Network
Light-1   Light-2    Light-3     Switch    (RD-1)    (RD-2)  Backbone
 |          |          |          |          |          |          |
 |          |          |          |          |          |          |
 **********************************          |          |          |
 *   Light-2 is installed         *          |          |          |
 *   and powers on for first time *          |          |          |
 **********************************          |          |          |
 |          |          |          |          |          |          |
 |          |          |          |          |          |          |
 |          | COAP NON Mcast(GET                        |          |
 |          |           /.well-known/core?rt=core.rd)   |          |
 |          |--------->-------------------------------->|          |
 |          |          |          |          |          |          |
 |          |          |          |          |          |          |
 |          |          |          |          |          |          |
 |          | COAP NON (2.05 Content                    |          |
 |          |         </rd>;rt="core.rd";ins="Primary") |          |
 |          |<------------------------------------------|          |
 |          |          |          |          |          |          |
 
          ]]>
        </artwork>
     </figure>

    </section>



	<!-- section anchor="sec-4.4" title="Lighting Control" -->
	<section title="Lighting Control" anchor="Lighting_Control_Use_Case">	     
    <t>
	    The protocol flow for a building automation lighting control scenario
	    for the network (<xref target="Example_Topology" />) in 6LoWPAN configuration
	    is shown in sequence in  
	    <xref target="Example_Protocol_Flow_3" /> for the case that the CoAP servers
	    in each Light are configured to not generate a CoAP response to lighting control CoAP multicast 
	    requests. (Following section 8.2 of <xref target="I-D.ietf-core-coap"/>, 
	    a server MAY choose not to generate a response 
	    to a multicast request.) 
	  </t><t>In addition, <xref target="Example_Protocol_Flow_4" />
	    shows an additional protocol flow example for the case that servers do respond to a
	    lighting control multicast request. There are two success responses and one 5.00
	    error response. In this particular use case the Light Switch does not check, based on
	    the responses, that all Lights in the group actually received the multicast request,
	    because it is not configured with an exhaustive list of IP addresses of all Lights
	    belonging to the group. However, based on received error responses it could take
	    additional action such as logging a fault in its log or alerting the user via its
	    LCD display.
	  </t><t>
	    We assume the following steps have already occurred before the illustrated flows:

    		<list style="numbers">
				<t>Startup phase:  6LoWPANs are formed.  IPv6 addresses assigned to all devices.  
					The CoAP network is formed.</t>
				<t>Network configuration (application-independent): 6LBRs are configured with
				   multicast address blocks to filter out or to pass through to/from the 6LoWPAN.</t>
				<t>Commissioning phase (application): The IP multicast address of the group 
					(Room-A-Lights) has been set in all the Lights.  The URI of the group
				  (Room-A-Lights) has been set in the Light Switch.</t>
        </list>	
			Note for the Commissioning phase: the switch's software supports sending 
		  unicast, multicast or proxied unicast/multicast CoAP requests, including processing of
		  the multiple responses that may be generated by a multicast CoAP request.
    </t>

       <figure anchor="Example_Protocol_Flow_3" title="Light Switch Sends Multicast Control Message" align="center">
        <artwork>
          <![CDATA[
                                 Light                        Network
Light-1   Light-2    Light-3     Switch    Rtr-1      Rtr-2  Backbone
 |          |          |          |          |          |          |
 |          |          |          |          |          |          |
 |          |          ***********************          |          |
 |          |          *   User flips on     *          |          |
 |          |          *   light switch to   *          |          |
 |          |          *   turn on all the   *          |          |
 |          |          *   lights in Room A  *          |          |
 |          |          ***********************          |          |
 |          |          |          |          |          |          |
 |          |          |    ______|______    |          |          |
 |          |          |    COAP NON (PUT    |          |          |
 |          |          |    Destination IP Address =    |          |
 |          |          |    IP multicast address        |          |
 |          |          |    for Group (Room-A-Lights)   |          |
 |          |          |    Payload=lights on)          |          |
 |<-------------------------------+--------->|          |          |
 ON         |          |          |          |-------------------->|
 |          |          |          |          |          |<---------|
 |          |<---------|<-------------------------------|          |
 |          ON         ON         |          |          |          |
 ^          ^          ^          |          |          |          |
 ***********************          |          |          |          |
 *   Lights in Room-A  *          |          |          |          |
 *   turn on (nearly   *          |          |          |          |
 *   simultaneously)   *          |          |          |          |
 ***********************          |          |          |          |
 |          |          |          |          |          |          |
          ]]>
        </artwork>
      </figure>


      <figure anchor="Example_Protocol_Flow_4" title="Lights (Optionally) Respond to Multicast CoAP Request" align="center">
        <artwork>
          <![CDATA[
                                 Light                        Network
Light-1   Light-2    Light-3     Switch    Rtr-1      Rtr-2  Backbone
 |          |          |          |          |          |          |
 |     COAP NON (2.04 Changed)    |          |          |          |
 |------------------------------->|          |          |          |
 |          |          |          |          |          |          |
 |          |          |          |          |          |          |
 |          COAP NON (2.04 Changed)          |          |          |
 |          |------------------------------------------>|          |
 |          |          |          |          |          |--------->|
 |          |          |          |          |<--------------------|
 |          |          |          |<---------|          |          |
 |          |          |          |          |          |          |
 |          |        COAP NON (5.00 Internal Server Error)         |
 |          |          |------------------------------->|          |
 |          |          |          |          |          |--------->|
 |          |          |          |          |<--------------------|
 |          |          |          |<---------|          |          |
 |          |          |          |          |          |          |
          ]]>
        </artwork>
      </figure>
 
  </section>


        <!-- section anchor="sec-4.5" title="Lighting Control in MLD Enabled Network" -->
	<section title="Lighting Control in MLD Enabled Network" anchor="Lighting_Control_Use_Case_MLD">	     
    <t>
    The use case of previous section can also apply in networks where nodes support the
    MLD protocol <xref target="RFC3810" />. The Lights then 
    take on the role of MLDv2 listener and the routers (Rtr-1, Rtr-2) are MLDv2 Routers.
    In the Ethernet based network configuration, MLD may be available on all involved network
    interfaces. Use of MLD in the 6LoWPAN based configuration is also possible, but requires MLD support
    in all nodes in the 6LoWPAN which is usually not implemented in many deployments.
    
    </t><t>
    The resulting protocol flow is shown in <xref target="Example_Protocol_Flow_2"/>. This flow
    is executed after the commissioning phase, as soon as Lights are configured with a group
    address to listen to. The MLD Reports may require periodic refresh activity as specified
    by the MLD protocol.
    </t><t>
    After the shown sequence of MLD Report messages has been executed, both Rtr-1 and Rtr-2
    are automatically configured to forward multicast traffic destined to Room-A-Lights onto
    their connected subnet. Hence, no manual Network Configuration of routers, as previously 
    indicated in <xref target="Lighting_Control_Use_Case"/>, is needed anymore.
    </t><t>
    
      <figure anchor="Example_Protocol_Flow_2" title="Joining Lighting Groups Using MLD" align="center">
        <artwork>
          <![CDATA[
                                 Light                        Network
Light-1   Light-2    Light-3     Switch    Rtr-1      Rtr-2  Backbone
 |          |          |          |          |          |          |
 |          |          |          |          |          |          |
 |          |          |          |          |          |          |
 | MLD Report: Join    |          |          |          |          |
 | Group (Room-A-Lights)          |          |          |          |
 |---LL------------------------------------->|          |          |
 |          |          |          |          |MLD Report: Join     |
 |          |          |          |          |Group (Room-A-Lights)|
 |          |          |          |          |---LL--------------->|
 |          |          |          |          |          |          |
 |          | MLD Report: Join    |          |          |          |
 |          | Group (Room-A-Lights)          |          |          |
 |          |---LL------------------------------------->|          |
 |          |          |          |          |          |          |
 |          |          | MLD Report: Join    |          |          |
 |          |          | Group (Room-A-Lights)          |          |
 |          |          |---LL-------------------------->|          |
 |          |          |          |          |          |          |
 |          |          |          |          |MLD Report: Join     |
 |          |          |          |          |Group (Room-A-Lights)|
 |          |          |          |          |          |---LL---->|
 |          |          |          |          |          |          |
 |          |          |          |          |          |          |
          ]]>
        </artwork>
      </figure>
    </t>
  </section>
</section>

  
<!-- section anchor="sec-5" title="Deployment Guidelines" -->
<section title="Deployment Guidelines">

   <t>
   This section provides guidelines how an IP Multicast based solution
   for CoAP group communication can be deployed in various network configurations.  
   </t>
   
	<section title="Target Network Topologies">
		<t>
		CoAP group communication can be deployed in various network topologies. First, the
		target network may be a regular IP network, or a LLN such as a 6LoWPAN network, or 
		consist of mixed constrained/unconstrained network segments.
		Second, it may be a single subnet only or multi-subnet; e.g. multiple 6LoWPAN 
		networks joined by a single backbone LAN. Third, a wireless network segment may have all
		nodes reachable in a single IP hop, or it may require multiple IP hops for some pairs of
		nodes to reach each other.
		</t><t>
		Each topology may pose different requirements on the configuration of routers and protocol(s),
		in order to enable efficient CoAP group communication.
		</t>
	</section>
	
	<section title="Multicast Routing">
	  <t>
	  If a network (segment) requires multiple IP hops to reach certain nodes, a multicast routing
	  protocol is required to propagate multicast UDP packets to these nodes. Examples of 
	  routing/forwarding protocols specifically for LLNs, able to route multicast, are RPL (Section 12 
	  of <xref target="RFC6550"/>) and MPL <xref target="I-D.ietf-roll-trickle-mcast" />.
	  </t>
	</section>

  <section title="Advertising Membership of Multicast Groups">
    <t>
    If a multicast routing/forwarding protocol is used in a network, server nodes that
    intend to receive CoAP multicast requests generally require a method to advertise the
    specific IP multicast address(es) they want to receive, i.e.
    a method to join specific IP multicast groups. This section identifies the ways in which
    this can be accomplished.
    </t>
    
    <section title="Using the Multicast Listener Discovery (MLD) Protocol">
	    <t>
	    CoAP nodes that are IP hosts (i.e. not routers) are generally unaware of the specific multicast routing protocol
	    being used. When such a host needs to join a specific (CoAP) multicast group, it usually requires a way to
	    signal to the multicast routers which multicast traffic it wants to receive. 
	    For efficient multicast routing (i.e. avoid always flooding multicast IP packets), routers
	  	must know which hosts need to receive packets addressed to specific IP multicast 
	  	destinations.
	    </t>
	    <t>
	    The Multicast Listener Discovery (MLD) protocol (<xref target="RFC3810" />, <xref target="mld"/>)
	    is the standard IPv6 method to achieve this. 
	    <xref target="RFC6636"/> discusses tuning of MLD for mobile and wireless networks. These guidelines
	    may be useful when implementing MLD in LLNs.
	  	</t><t>
		  Alternatively, to avoid the addition of MLD in LLN deployments, all nodes can be configured
	    as multicast routers in an LLN.
	    </t>
    </section>

    <section title="Using the RPL Routing Protocol">
      <t>
      The RPL routing protocol <xref target="RFC6550"/> defines in Section 12 the 
      advertisement of IP multicast destinations using DAO messages. This mechanism
      can be used by CoAP nodes (which are also RPL routers) to advertise IP multicast
      group membership to other RPL nodes. Then, the RPL protocol can route multicast CoAP
      requests over multiple hops to the correct CoAP servers.
      </t><t>
      This mechanism could  also be used as a means to convey IP multicast group membership
      information to an edge router (e.g. 6LBR), in case the edge router is also the root
      of the RPL DODAG. This could be useful in LLN segments where MLD is not available.
      </t>
		</section>
		
		<section title="Using the MPL Forwarding Protocol">
			<t>
			The MPL forwarding protocol <xref target="I-D.ietf-roll-trickle-mcast" /> can be used in a
			predefined network domain for propagation of IP multicast packets to all MPL routers, over
			multiple hops. MPL is designed to work in LLN deployments.
			Due to its property of propagating all (non-link-local) IP multicast packets to all MPL routers,
			there is in principle no need for CoAP server nodes to advertise IP multicast group membership
			assuming that any IP multicast source is also part of the MPL domain.						
			</t>
		</section>   
    
  </section>
  
  <section title="6LoWPAN-Specific Guidelines">
    <t>
     To support multi-LoWPAN scenarios for CoAP group communication,
	   it is RECOMMENDED that a 6LoWPAN Border Router (6LBR) will act in an
	   MLD Router role on the backbone link.  If this is not possible then
	   the 6LBR SHOULD be configured to act as an MLD Multicast Address
	   Listener and/or MLD Snooper (<xref target="mld"/>) on the backbone link.
    </t>
    <t>
    To avoid that backbone IP multicast traffic needlessly congests 6LoWPAN network segments,
    it is RECOMMENDED that a filtering means is implemented to block IP multicast
    traffic from 6LoWPAN segments where none of the 6LoWPAN nodes listen to this traffic. Possible means are:
    <list style="symbols">
    	<t>Filtering in 6LBRs based on information from the routing protocol. This allows a 6LBR to only forward multicast
    	traffic onto the LoWPAN, for which it is known that there exists at least one listener on the LoWPAN.</t>
    	<t>Filtering in 6LBRs based on MLD reports. Similar as previous but based directly on MLD reports from 6LoWPAN
    	nodes. This only works in a single-IP-hop 6LoWPAN network, such as a mesh-under routing network or a star 
    	topology network, because MLD relies on link-local communication.</t>
    	<t>Filtering in 6LBRs based on settings. Filtering tables with blacklists/whitelists can be configured in the 6LBR by
    	system administration for all 6LBRs or configured on a per-6LBR basis.</t>
    	<t>Filtering in router(s) or firewalls that provide access to constrained network segments. For example, in an access router/bridge  
    	that connects a regular intranet LAN to a building control IPv6 backbone. This backbone connects 
    	multiple 6LoWPAN segments, each segment connected via a 6LBR.</t>    	
    </list>
    </t>
  </section>
  
</section>


<!-- section anchor="sec-6" title="Security Considerations" -->
<section title="Security Considerations" anchor="security">
	<t>As defined in <xref target="I-D.ietf-core-coap" />, CoAP group communications based on 
	  IP multicast must use the following security approach:
		<list style="symbols">
			<t>Group communications MUST operate in CoAP NoSec (No Security) mode. 
			</t>
			<t>Group communications MUST NOT use "coaps" scheme.  That is, all group
			       	communications MUST use only "coap" scheme.
			</t>
			<t>Group communications MUST NOT use IPSec. 
			</t>
		</list>				
		
		A consequence is that CoAP group communications is vulnerable to all attacks mentioned
		in <xref target="I-D.ietf-core-coap" /> for the NoSec mode. For sensitive data or
		safety-critical control, appropriate link-layer security or application-level object 
		security SHOULD be used instead of DTLS security.
	</t>

	<t>Also, there is an approach for DTLS-based IP multicast security for CoAP networks
		(see <xref target="I-D.keoh-tls-multicast-security" />) that should be considered
   	once it matures. 
  </t>

</section>

<!-- section anchor="sec-7" title="IANA Considerations" -->
<section title="IANA Considerations">
	<t>No request is made to IANA.  (Note to RFC Editor: The required multicast address
	       	request to IANA is made in <xref target="I-D.ietf-core-coap"/>).
           </t>
</section>


<!-- section anchor="sec-8" title="Acknowledgements" -->
<section title="Acknowledgements">
      <t>
      Thanks to Peter Bigot, Carsten Bormann, Anders Brandt, Angelo Castellani,
      Guang Lu, Salvatore Loreto, Kerry Lynn, Dale Seed, Zach Shelby, 
      Peter van der Stok, and Juan Carlos Zuniga for their helpful comments
      and discussions that have helped shape this document.
      </t>
</section>

	</middle>
  <back>
    <references title="Normative References">
      &RFC2119;
      &RFC2616;
      &RFC3810;
      &RFC4291;
      &RFC4601;
      &RFC4944;
      &RFC5771;      
      &RFC6550;
      &RFC6636;
      &RFC6690;
      &RFC6775;
      &I-D.ietf-core-coap;
    </references>
    
    <references title="Informative References">
      &I-D.vanderstok-core-dna;   
      &I-D.ietf-roll-trickle-mcast;     
      &I-D.keoh-tls-multicast-security;
    </references>


  <!-- section anchor="Appendix A" title="Multicast Listener Discovery" -->
  <section anchor="mld" title="Multicast Listener Discovery (MLD)">
  	<t>
  	In order to extend the scope of IP multicast beyond link-local scope, an IP multicast 
  	routing protocol has to be active in routers on an LLN. To achieve efficient 
  	multicast routing (i.e. avoid always flooding multicast IP packets), routers
  	have to learn which hosts need to receive packets addressed to specific IP multicast 
  	destinations.
  	</t><t>
  	The Multicast Listener Discovery (MLD) protocol <xref target="RFC3810" /> 
  	(or its IPv4 pendant IGMP) is today the method of choice used by an 
  	(IP multicast enabled) router to discover 
  	the presence of multicast listeners on directly attached links, and to 
  	discover which multicast addresses are of interest to those listening nodes. MLD 
  	was specifically designed to cope with fairly dynamic situations in which multicast
  	listeners may join and leave at any time.
  	</t><t>
  	IGMP/MLD Snooping is a technique implemented in some corporate LAN routing/switching
  	devices. An MLD snooping switch listens to MLD State Change Report messages from
  	MLD listeners on attached links. Based on this, the switch learns on what
  	LAN segments there is interest for what IP multicast traffic. If the switch
  	receives at some point an IP multicast packet, it uses the stored information
  	to decide onto which LAN segment(s) to send the packet. This improves network 
  	efficiency compared to the regular behavior of forwarding every incoming multicast 
  	packet onto all LAN segments. An MLD snooping switch may also send out MLD Query
  	messages (which is normally done by a device in MLD Router role) if no MLD Router is present.
  	</t><t>
  	<xref target="RFC6636"/> discusses optimal tuning of the parameters of MLD for routers
       	for mobile and wireless	networks. These guidelines may be useful when implementing MLD in LLNs.
  	</t>
  </section>





  <!-- section anchor="Appendix B" title="Change Log" -->   
    <section title="Change Log">

     <t>Changes from ietf-03 to ietf-04:
	     <list style="symbols">
	     <t>Removed section 2.3 (Potential Solutions for Group Communications) as it is
		     purely background information and moved section to draft-dijk-core-groupcomm-misc (#266).</t>
	     <t>Added reference to draft-keoh-tls-multicast-security to section 6 (Security Considerations).</t>
	     <t>Removed Appendix B (CoAP-Observe Alternative to Group Communications) as it is
		     as an alternative to IP Multicast that the WG has not adopted and moved section
		     to draft-dijk-core-groupcomm-misc (#267).</t>
	     <t>Deleted section 8 (Conclusions) as it is redundant (#268).</t>
	     <t>Simplified light switch use case (#269) by splitting into basic operations and additional
		     functions (#269).</t>
	     <t>Moved section 3.7 (CoAP Multicast and HTTP Unicast Interworking) to draft-dijk-core-groupcomm-misc
		     (#270).</t>
	     <t>Moved section 3.3.1 (DNS-SD) and 3.3.2 (CoRE Resource Directory) to draft-dijk-core-groupcomm-misc as
		     these sections essentially just repeated text from other drafts regarding DNS based features.
		     Clarified remaining text in this draft relating to DNS based features to clearly indicate
		     that these features are optional (#272).</t>
	     <t>Focus section 3.5 (Configuring Group Membership) on a single proposed solution.</t>
	     <t>Scope of section 5.3 (Use of MLD) widened to multicast destination advertisement methods
		     in general.</t>
	     <t>Rewrote section 2.2 (Scope) for improved readibility.</t>
	     <t>Moved use cases that are not adressed to draft-dijk-core-groupcomm-misc.</t>
	     <t>Various editorial updates for improved readibility.</t>
	     </list>
     </t>

     <t>Changes from ietf-02 to ietf-03:
	     <list style="symbols">
	     <t>Clarified that a group resource manipulation may return back a mixture of successful
		     and unsuccessful responses (section 3.4 and Figure 6) (#251).</t>
	     <t>Clarified that security option for group communication must be NoSec mode (section 6) (#250).</t>
	     <t>Added mechanism for group membership configuration (#249).</t>
	     <t>Removed IANA request for multicast addresses (section 7) and replaced with a note
		     indicating that the request is being made in <xref target="I-D.ietf-core-coap"/> (#248).</t>
	     <t>Made the definition of 'group' more specific to group of CoAP endpoints and included
		     text on UDP port selection  (#186).</t>
	     <t>Added explanatory text in section 3.4 regarding why not to use group communication
		     for non-idempotent messages (i.e. CoAP POST) (#186).</t>
	     <t>Changed link-local RD discovery to site-local in RD discovery use case to make it
		     more realistic.</t>
	     <t>Fixed lighting control use case CoAP proxying; now returns individual CoAP responses
		     as in coap-12.</t>  
	     <t>Replaced link format I-D with RFC6690 reference.</t>
	     <t>Various editorial updates for improved readibility</t>
	     </list>
     </t>

     <t>Changes from ietf-01 to ietf-02:
	     <list style="symbols">
	     <t>Rewrote congestion control section based on latest CoAP text including Leisure concept (#188)</t>
	     <t>Updated the CoAP/HTTP interworking section and example use case with more details and use
		     of MLD for multicast group joining</t>
	     <t>Key use cases added (#185)</t>
	     <t>References to <xref target="I-D.vanderstok-core-dna" /> and
		     draft-castellani-core-advanced-http-mapping added</t>
	     <t>Moved background sections on "MLD" and "CoAP-Observe" to Appendices</t>
	     <t>Removed requirements section (and moved it to draft-dijk-core-groupcomm-misc)</t>
	     <t>Added details for IANA request for group communication multicast addresses</t>
	     <t>Clarified text to distinguish between "link local" and general multicast cases</t>
	     <t>Moved lengthy background section 5 to draft-dijk-core-groupcomm-misc and replaced with a summary</t>
	     <t>Various editorial updates for improved readibility</t>
	     <t>Changelog added</t>
	     </list>
     </t>

     <t>Changes from ietf-00 to ietf-01:
	     <list style="symbols">
	     <t>Moved CoAP-observe solution section to section 2</t>
	     <t>Editorial changes</t>
	     <t>Moved security requirements into requirements section</t>
	     <t>Changed multicast POST to PUT in example use case</t>
	     <t>Added CoAP responses in example use case</t>
	     </list>
     </t>

     <t>Changes from rahman-07 to ietf-00:
	     <list style="symbols">
	     <t>Editorial changes</t>
	     <t>Use cases section added</t>
	     <t>CoRE Resource Directory section added</t>
	     <t>Removed section 3.3.5. IP Multicast Transmission Methods</t>
	     <t>Removed section 3.4 Overlay Multicast</t>
	     <t>Removed section 3.5 CoAP Application Layer Group Management</t>
	     <t>Clarified section 4.3.1.3 RPL Routers with Non-RPL Hosts case</t>
	     <t>References added and some normative/informative status changes</t>
	     </list>
     </t>

    </section>
    
  </back>
</rfc>
