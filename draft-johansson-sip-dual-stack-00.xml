<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
    <!-- try to enforce the ID-nits conventions and DTD validity -->
<?rfc strict="yes" ?>    <!-- items used when reviewing the document -->
<?rfc comments="no" ?>  <!-- controls display of <cref> elements -->
<?rfc inline="no" ?>    <!-- when no, put comments at end in comments section,
                                otherwise, put inline -->
<?rfc editing="no" ?>   <!-- when yes, insert editing marks -->

    <!-- create table of contents (set it options).
           Note the table of contents may be omitted
         for very short documents -->

<?rfc toc="yes"?><?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>

    <!-- choose the options for the references. Some like
         symbolic tags in the references (and citations)
         and others prefer numbers. --> 
<?rfc symrefs="yes"?><?rfc sortrefs="yes" ?>
    <!-- these two save paper: start new paragraphs from the same page etc. -->
<?rfc compact="yes" ?><?rfc subcompact="no" ?>
<!-- end of list of processing instructions -->
    <!-- Information about the document.
         categories values: std, bcp, info, exp, and historic
         For Internet-Drafts, specify attribute "ipr".
         (ipr values are: full3667, noModification3667, noDerivatives3667),
         Also for Internet-Drafts, can specify values for
         attributes "iprExtract", and "docName".  Note
         that the value for iprExtract is the anchor attribute
         value of a section that can be extracted, and is only
         useful when the value of "ipr" is not "full3667". -->
    <!-- TODO: verify which attributes are specified only
            by the RFC editor.  It appears that attributes
            "number", "obsoletes", "updates", and "seriesNo"
            are specified by the RFC editor (and not by
            the document author). -->

<rfc category="std" ipr="trust200902" docName="draft-johansson-sip-dual-stack-00">
<front>
    <title abbrev="Locating SIP servers dual stack">Locating SIP servers in a dual stack IP network</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->    

    <author fullname="Olle E. Johansson" initials="O" surname="Johansson">
      <organization>Edvina AB</organization>

      <address>
        <postal>
          <street>Runbov√§gen 10</street>
          <city>Sollentuna</city>
          <code>SE-192 48</code>
          <country>SE</country>
        </postal>
        <email>oej@edvina.net</email>
      </address>
    </author>

     <author fullname="Gonzalo Salgueiro" initials="G" surname="Salgueiro">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>7200-12 Kit Creek Road</street>
          <city>Research Triangle Park</city>
          <region>NC</region>
          <code>27709</code>
          <country>US</country>
        </postal>
        <email>gsalguei@cisco.com</email>
      </address>
    </author>    
   
    <date year="2013" />
<!-- month="May" is no longer necessary note also, day="30" is optional -->
    
    <area>Real Time Applications and Infrastructure (RAI)</area>    
    
    <!-- WG name at the upperleft corner of the doc, IETF fine for individual submissions -->
    
    <workgroup>Dispatch</workgroup>
    
    <keyword>I-D</keyword>

    <keyword>Internet-Draft</keyword>
	
    <abstract>
	<t>RFC 3263 defines how a SIP implementation given an URL should locate the next hop SIP server using DNS.
	The RFC repeatedly states that the implementation should look up IPv4 or IPv6 addresses, which is 
	not a good solution considering the issues that lead to the development of Happy Eyeballs (RFC XXX).
	This document corrects this behaviour for dual stack SIP implementations so that an implementation 
	so that an implementation should look up both IPv4 and IPv6 addresses. This way, the implementation
	can find the best network flow and have a greater chance in success in reaching the service.</t>
	
	<t>This document also clarifies DNS SRV usage for single stack clients.</t>
    </abstract>

</front>

<middle>

    <section anchor="Introduction" title="Introduction">
	<t>The SIP core RFCs was written with support for IPv4 and IPv6 in mind, but did not handle the migration
	phase where many servers and client implementations will run on dual stack hosts. During this phase
	one of the networks may run over a tunnel, starting with IPv6 over IPv4 and likely ending with
	IPv4 over IPv6. The use of automatically configured non-working tunnels lead to the development
	of the Happy Eyeballs RFC that has been implemented in many web browsers.</t>
	<t>RFC 6157<xref target="RFC6157"/> focus on handling media in a dual stack network path between
	two SIP user agents. This doesn't solve the signalling issues that can occur, when trying to find the
	best network path to the next hop SIP server.</t>
	<t>This document changes RFC 3263<xref target="RFC3263"/>  so that a dual stack client must look up both 
	A and AAAA records in DNS, and then select the best way to set up a network flow. How to do that is out of scope
	of this document (see Happy Eyeballs, RFC 6555<xref target="RFC6555"/> for more information about issues with setting
	up dual stack network flows).</t>
    </section>

    <section anchor="Conventions" title="Terminology and Conventions Used in This Document">
		<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 <xref target="RFC2119"/>.</t>
		
		<t>RFC 3261 <xref target="RFC3261"/> defines additional terms used in this document that are specific to the SIP domain such as "proxy"; "registrar"; "redirect server"; "user agent server" or "UAS"; "user agent client" or "UAC"; "back-to-back user agent" or "B2BUA"; "dialog"; "transaction"; "server transaction".</t>

   		<t>This document uses the term "SIP Server" that is defined to include the following SIP entities: user agent server, registrar, redirect server, a SIP proxy in the role of user agent server, and a B2BUA in the role of a user agent server.</t>
   		
		<t>This document also uses the following terminology to make clear distinction between SIP entities supporting only IPv4, only IPv6 or supporting both IPv4 and IPv6.</t>

        <t>
        <list style="hanging">  		   
   		<t hangText="IPv4-only UA/UAC/UAS:">  An IPv4-only UA/UAC/UAS supports SIP signaling and media only on the IPv4 network.  It does not understand IPv6 addresses.</t>

		<t hangText="IPv6-only UA/UAC/UAS:">  An IPv6-only UA/UAC/UAS supports SIP signaling and media only on the IPv6 network.  It does not understand IPv4 addresses.</t>

		<t hangText="IPv4/IPv6 UA/UAC/UAS:">  A UA/UAC/UAS that supports SIP signaling and media on both IPv4 and IPv6 networks; such a UA/UAC/UAS is known (and will be referred to in this document) as a "dual-stack" <xref target="RFC4213"/> UA/UAC/UAS.</t>
		</list>
		</t>
		

	</section>
	
	<section anchor="AandAAAA" title="A dual stack SIP ua should look up both A and AAAA records"> 
	<t>RFC 3263<xref target="RFC3263"/> section 4.2. states 
	<list style='empty'>
		<t>"If the TARGET was not a numeric IP address, but a port is present in
   		the URI, the client performs an A or AAAA record lookup of the domain
   		name. "
		</t>
	</list>
	</t>
	<t>This has been proven to be the wrong solution for a dual stack client. A client that has support for both
	IPv4 and IPv6 SHOULD lookup both an A and an AAAA record and add the addresses to the list of IP addresses to
	be contacted. This is a normative update to RFC 3263.</t>
	</section>
	<section anchor="SrvPreference" title="Indicating address family preference in SRV"> 
	<t>
	A service may use DNS SRV records to indicate preference for an address family. This way, a server with
	a high-latency and low-capacity IPv4 tunnel may indicate a preference for being contacted using
	IPv6. A server that wishes to do this can use the lowest SRV priority to publish hostnames that only
	resolve in IPv6 and the next priority with host names that resolve into both address families.
	</t>
	<t>
	Note that single stack clients needs to be prepared for SRV record sets that doesn't resolve
	into an address in the address family used by the client. In this case, the client should go
	to the next priority and try these host names.
	</t>
	</section>

	<section anchor="Security" title="Security Considerations"> 
		<t>This document changes lookup of SRV given host names to IP addresses.  The scenarios discussed in this document do not introduce any new security threats.  The specific security vulnerabilities, attacks, threat models of the various protocols discussed in this document (SIP, DNS, SRV records, etc.) are well documented in their respective documents.</t>
	</section>
	
	<section anchor="IANA" title="IANA Considerations"> 
  		<t>This document does not require actions by IANA.</t>
	</section>

	<section anchor="Acknowledgements" title="Acknowledgements">
    	<t>The author would like to acknowledge the support and contribution of the SIP Forum IPv6 Working Group. This
	document is based on a lot of tests and discussions at SIPit events, organized by the SIP Forum.</t>
	</section>
    
</middle>

<back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119" ?>
	 	 
    </references>
    
    <references title="Informative References">
      <?rfc include="reference.RFC.3263" ?>
      <?rfc include="reference.RFC.6157" ?>
      <?rfc include="reference.RFC.6555" ?>
      <?rfc include="reference.RFC.3261" ?>
      <?rfc include="reference.RFC.3680" ?>
      <?rfc include="reference.RFC.4213" ?>
      <?rfc include="reference.RFC.4566" ?>
      <?rfc include="reference.RFC.5245" ?>
      <?rfc include="reference.RFC.5589" ?>
   </references>
  </back>
</rfc>
