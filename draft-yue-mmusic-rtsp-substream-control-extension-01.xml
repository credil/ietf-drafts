<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119    PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
<!ENTITY RFC4566    PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml'>
<!ENTITY RFC6190    PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6190.xml'>
<!ENTITY I-D.ietf-mmusic-rfc2326bis    PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-mmusic-rfc2326bis-27.xml'>
<!ENTITY I-D.ietf-payload-rtp-mvc    PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-payload-rtp-mvc-00.xml'>
]>

<?xml-stylesheet type='text/xsl' href='http://xml.resource.org/authoring/rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc tocompact="no" ?>
<?rfc tocindent="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="yes"?>

<rfc
  category="std"
  ipr="trust200902"
  docName="draft-yue-mmusic-rtsp-substream-control-extension-01">

  <front>
    <title abbrev="RTSP Extension for Substream Control">
    RTSP Extension for Substream Control 
    </title>

    <author initials="P." surname="Yue" fullname="Peiyu Yue">
      <organization abbrev="Huawei Technologies">Huawei Technologies</organization>
      <address>
        <postal>
          <street>Huawei Base</street>
          <street>101 Software Avenue, Yuhua District</street>
          <city>Nanjing</city>
          <region>Jiangsu</region>
          <code>210012</code>
          <country>China</country>
        </postal>
        <phone>+86-25-56620258</phone>
        <email>yuepeiyu@huawei.com</email>
      </address>
    </author>    
  
    <date year="2012" />

    <area>RAI</area>
    <workgroup>mmusic</workgroup>

    <abstract>
      <t>
      This document defines extensions to RTSP 2.0 protocol, including 
      header "SubstreamCtrl", feature tag "Play.substream" , and related new status codes.
      These extensions enables the playback control of a media stream on substream basis.
      </t>
    </abstract>

  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>
         Single Session Transmission (SST) is recommended for the SVC (
         Scalable Video Codec) video transport <xref target='RFC6190' /> 
         and MVC (Multiview Video Codec) video transport <xref target='I-D.ietf-payload-rtp-mvc'/>
. 
         In SST, a single RTP session conveys all the related media data, 
         namely all the bitstream components. A bitstream component here is part of a media stram 
         that has a common property which could be:
         <list style="symbols">
          <t>
          Layer: in SVC media stream; In this case, a bitstream component is media data
           of a specific layer.
          </t>
          <t>
          View: in MVC media stream; In this case, a bitstream component is media data 
          of a specific view.
          </t>
          </list>
       </t>
       <t>
       In such a SST session,one or several bitstream components together may be decodable by themselves
       and therefore make sense to the receiver. Here these bitstream component(s) combinations are here Substream.
        </t>
       <t>    
       In SVC and MVC RTP sessions, such a Substream is identified by an Operation Point. 
       </t>
       <t>
		 There are cases that a client wants to retrieve a specific substream
		  in a SST session.  However, in the current RTSP 2.0 protocol,
		   the control of the media is on basis of media stream i.e. an RTP session
		   when RTP is used as transport protocol.  This prevents a client to
		   receive only certain substream(s) of the media.

       </t>
       <t>
       This memo extends the RTSP 2.0<xref target='I-D.ietf-mmusic-rfc2326bis'/> 
       to establish a substream playback control framework, 
       which enables a client to play a part of a media stream. 
       </t>
       <t>
       This memo also defines the substream usage for SVC and MVC.
       </t>
     </section>     
       
      <section anchor="terms" title="Terminology">    
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
          "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in
          this document are to be interpreted as described in <xref target='RFC2119' />.
        </t>        
      </section>
      
      <section anchor="definition" title="Definitions and Abbreviations">
      <section title="Definitions">
       <t>
        The following terms are used in this document and have specific meaning within the context of this document.
        <list style="symbols">
          <t>
          Substream: a part of a media stream containing one or more bitstream components, 
          which can be independently decoded. Typically a Substream is identified by a single operation point.
         </t><t> 
         Substream type: the compound mode of the bitstream components in a media stream, e.g. SVC, MVC, etc
          </t>
          </list>
        </t> 
        </section>
        <section title="Abbreviations">
        <t>
        <list style="hanging">
        <t>
        SVC:		Scalable Video Coding
        </t>
        <t>
        MVC:		Multiview Video Coding
        </t>
        <t>
         SST:		Single Session Transmission
        </t>
		</list>		
		</t>        
        </section>
      </section>

     <section title="Protocol Overview">
       <t>
       The whole framework includes three parts: substream annotation, capability negotiation 
       and substream playback control.
       This section provides an overview of substream control framework.
       </t>
       <figure>
		<artwork><![CDATA[
  CLIENT                                                     SERVER
    |                                                          |
    | <------         substream annotation            -------  |
    |                                                          |
    |                                                          |
    |                                                          |
    | <----   RTSP Session Setup(Capability Negotiation) ----> |
    |                                                          |
    |                                                          |
    | <----   RTSP media playback control(play/pause)    ----> |
    |                                                          |
    |                                                          |
             Figure 1: Substream Control Framework Overview
    ]]> 
		</artwork>
	   </figure>
       
      <section anchor="substream-annotation" title="Substream Annotation">
       <t>
       Substream annotation is used to announce all substreams available in a media stream,
       which can be retrieved selectively. This is done through a presentation description, typically using SDP description. 
       </t>
       <t>
       Substream annotation SHALL signal the substream type and substream id for each substream.
       </t>
       <t>
       Substrean type is the compound mode of the bitstream components in a media stream, e.g. SVC, MVC, etc.
       Here a media stream with SVC substream type, means comforming to <xref target='RFC6190'/>. A media stream with MVC substream type, means comforming to <xref target='I-D.ietf-payload-rtp-mvc'/>. More specification of SVC and MVC substream type is defined at  <xref target='svc-mvc-substream-type'/>.
       </t>
       <t>
       Substream id is the identifier for a substream. The actual definition of the substream id is defined by each substream type.
       </t>
	
     </section>
         <section title="Capability Negotiation">
       <t>
       Capability negotiation is used to negotiate  support of substream control between RTSP client and server.
       It makes use of the RTSP feature tag mechanism defined in RTSP 2.0<xref target='I-D.ietf-mmusic-rfc2326bis'/>.
       A new feature tag (play.substream) is defined in <xref target='feature-tag'/> of this document.
       </t>
       <t>
       If received a media presentation with substream annotation, 
       a substream control capable RTSP client SHALL include play.substream 
       in the REQUIRE header of the RTSP SETUP request.
		 This indicates that the client is able to control the playback of the media on substream basis.
       </t>
       <t>
       A 2xx response implies that the server is capable of substream control. 
       A server MAY refuse the request with a 551 "Option not supported" response, 
       with an UNSUPPORT header including play.substream.
      </t>
       <t>
        The receiving client may try to setup a session without this feature later. 
        This means that the client will not perform substream control and will retrieve the media as a whole. 
        </t>  
     </section>
     <section title="Substream Playback Control">
       <t>
		In case the session is setup correctly, the client may control the play back on substream basis, including:
        <list style="symbols">
          <t>
          start to play/resume a substream
          </t>

          <t>
          pause a substream. Note that this means pause the play back of the whole session.
          </t>
          </list>
       </t> 
       <section title="Substream Play/Resume">
       <t>
       After successful set up of an RTSP session, the client may perform substream playback control.
       The playback of a substream is similar with the normal playback of a session, 
       except that the PLAY request SHALL contain a "SubstreamCtrl" header to signal the substream(s) that the client intends to play.  
       </t>
       <t>
        The SubstreamCtrl header, as defined in <xref target='substream-header'/>, SHALL contain at least the substream type and the substream id of each substream. In the case of aggregate control, the header SHALL further contain Request-URIs for each of the the substreams.
       </t>
       <t>
        A client SHOULD NOT perform substream play if the server has not 
        indicated support of substream control during session setup.
       </t>
       <t>
       Upon receiving a PLAY request with a "SubstreamCtrl" header, the server SHALL identify the substream(s) according to the substream type. substream id and optional Request-URI combination(s) in the request, and then provides the indicated substream(s) after sending a 200 OK response.  
       </t>
       <t>
       If the server doesn't support substream control, it SHALL respond with a 551 "Option not supported" response as defined in RTSP 2.0<xref target='I-D.ietf-mmusic-rfc2326bis'/>.
       </t>
       <t>
       If the server supports substream control but the substream type indicated in the "SubstreamCtrl" header is not recognized, it SHALL respond with a 552 "Substream Type Not Recognizable" response, see  <xref target='status-code-552'/>.
        </t>
       <t>    
       If a requested media is not allowed to be played on substream basis as requested, the server SHALL respond with a 553 "Substream Control Not Allowed" response, see  <xref target='status-code-553'/>.
       </t>
       <t>
       If the requested substream id is not valid, the server SHALL respond with a 554 "Substream id not valid", see <xref target='status-code-554'/>.
       </t>
       </section>

        <section title="Substream Pause">
       <t>
   The pause operation of a substream is identical to the pause operation of
   a normal RTSP session. It is not necessary for the client to include a
   "SubstreamCtrl" header in the PAUSE request message.  However, if the
   request includes a "SubstreamCtrl" header, it SHALL list all the
   substreams are currently played.
	</t>
       <t>
    Upon receiving a PAUSE request without a SubstreamCtrl header, the server SHALL pause the stream(s) according to RTSP 2.0<xref target='I-D.ietf-mmusic-rfc2326bis'/>.
	</t>
	 <t>
	Upon receiving a PAUSE request with a SubstreamCtrl header, the server SHALL check the substream list contained. If the substream list is not identical to the ones that is in the play status, the server SHALL respond with a 553 "Substream Control Not Allowed" response, see  <xref target='status-code-553'/>. Otherwise, the server SHALL respond with 2xx message and pause the stream(s) properly.
       </t>
       </section>
       </section> 
    </section>
   
    <section title="RTSP Extensions">
       <t>
       This section documents the extension to the RTSP 2.0 specification. Specifically  <xref target='substream-header'/> specifies the SubstreamCtrl header,  <xref target='feature-tag'/> specifies the substream control feature tag,  <xref target='status-code'/> specifies the status codes extentions for the substream control feature.  
       </t>
       
     <section anchor="feature-tag" title="Play.substream Feature Tag">
       <t>
   The following feature-tag is defined in this specification and
   hereby registered.  The change control belongs to the IETF.
		</t>
       <t>
   play.substream:  Support of substream control operations for media playback.  Applies
         for both clients and servers.
       </t>   
       <t>
       Notes that this feature is based the play.basic therefore spport of this feature inheritly means support of play.basic. 
       </t>
       </section> 
 
        <section anchor="substream-header" title="Substream Header">
       <t>
SubstreamCtrl header is used to indicate the substream(s) of media stream(s) that the client intends to play. 
	      </t> <t>
	SubstreamCtrl header can be used in PLAY and PAUSE request. 
	Proxies shall not modify this header and pass through to the server. 
	</t><t>
	SubstreamCtrl header contains one or more [stream uri, substream type, substream id] triple.
	The syntax is: 
	</t> 
    <figure>
    <artwork><![CDATA[
SubstreamCtrl = "SubstreamCtrl:" 
                substream-id * (";" sustream-id)
substream-id  = [stream-uri ","] 
                substream-type "," substream_id
stream-uri 	  = RTSP-URI
substream-type= "SVC" / "MVC" / token
	]]>
	</artwork>
	</figure>
  
	  </section>      
     <section anchor="status-code" title="Status Code Extension">
       <t>
This clause defines the status codes extended for the substream control feature. They are:
       
       <list style="symbols">
          <t>
          552 Substream Type Not Recognized
          </t>
          <t>
          553 Substream Control Not Allowed
          </t>
          <t>
          554 Substream Id Not Valid
          </t>
       </list>
        </t>   
       <section anchor="status-code-552" title="552 Substream Type Not Recognized">
       <t>
The server can not recognize one or more substream type(s) in the SubstreamCtrl header of the request.
       </t>
       </section> 
       <section anchor="status-code-553" title="553 Substream Control Not Allowed">
       <t>
One or more media streams identified by the Request-URI in the request is not allowed for the substream control.
		</t>
       </section>      
       <section anchor="status-code-554" title="554 Substream Id Not Valid">
       <t>
One or more substream id(s) specified in the request are not valid for the media identified by the Request-URI. 
       </t>
       </section>  
      </section> 
      </section>
      
      <section anchor="svc-mvc-substream-type" title="SVC and MVC Substream Type">
      <section anchor="svc-substream-type" title="SVC Substream Type">
      <t>
      This section provides the specification of substream type for SVC Stream:
      Substream Type: "SVC"
      Substream annotation:
        </t><t>
       In SVC, a substream is identical to an operation point,
        which consists of the bitstream components required to 
        be decoded independently.  
      </t><t>
      Operation points are signalled in SDP, by ether of the following two parameters :
      <list style="symbols">
      <t>
      sprop-operation-point-info:
      According to <xref target='RFC6190'/>, this parameter consists of a comma-separated list of operation-point-description vectors, including ayer-ID, dependency-ID, temporal_ID, quality-ID. Among them, the value of layer-ID specifies the layer identifier of the operation point, which is identical to the layer_id that would be indicated (for the same values of dependency_id, quality_id, and temporal_id) in the scalability information SEI message.  
      </t>
       <t>
      sprop-scalability-info:
      According to <xref target='RFC6190'/>, This parameter is used to convey the NAL unit containing
         the scalability information SEI message as specified in Annex G
         of [H.264].  Within the scalability information SEI message, layer information of the SVC stream is signalled, including layer_id, dependency_id, quality_id, and temporal_id.
      </t>
      </list>
       </t><t>
       Therefore, substreams in a SVC stream is identified by either layer-ID or a [dependency-ID,
   temporal_ID, quality-ID] combination.
		</t><t>

      The syntax of substream_id is:
      </t>
    <figure>
    <artwork><![CDATA[
substream_id	= layer-id
                  /(dependency-id ","temporal-id "," quality-id)
layer-id 	= "layer_id=" layer_id_value
layer_id_value 	= 1*4DIGIT				;0~2047
dependency-id	= "dependency_id=" dependency_id_value
dependency_id_value = DIGIT 				;0~7
temporal-id 	= "temporal_id="  temporal_id_value
temporal_id_value = DIGIT  				;0~7
quality-id 		= "quality_id=" quality_id_value
quality_id_value = 1*2DIGIT 				;0~15
DIGIT		=  %x30-39 		;any US-ASCII digit "0".."9"
]]>
	</artwork>
	</figure>	
    <t>
    An example of Substream header is:
	</t>
	<t>
	SubstreamCtrl: rtsp://example.com/svc.mp4, SVC, lay-id=1
	</t>
      </section>
      <section anchor="mvc-substream-type" title="MVC Substream Type">
      <t> This section provides the specification of substream type for SVC Stream:
      Substream Type: "SVC"
      Substream annotation:
      
       
       Annocation of MVC substreams is specified in <xref target='I-D.ietf-payload-rtp-mvc'/>.
       </t>
       <t>
       editor notes: pending on the complement of <xref target='I-D.ietf-payload-rtp-mvc'/>.
       </t>
        <t>
      Substream_id:
      </t>
      <t>
	For the MVC case, the syntax of substream_id is:
	</t>
	<t>
	editor's notes: pending on the complement of mvc-operation-point-id
	</t>
  
      </section>
	 </section>
	 
      <section anchor="Example" title="Examples">
      <t>
      The following takes substream control of a SVC stream as an example.
      
      Step 1: Client C requests a presentation from media server S. 
      The media is a video encoded by SVC and transported by SST.
      </t>
          <figure>
    <artwork><![CDATA[
C->S: DESCRIBE rtsp://example.com/BreakingDawn.3gp RTSP/2.0
      CSeq: 1
      User-Agent: PhonyClient/1.2

S->C: RTSP/2.0 200 OK
      CSeq: 1
      Server: PhonyServer/1.0
      Date: Wed, 22 Feb 2012 15:20:29 GMT
      Content-Type: application/sdp
      Content-Length: 407
      Content-Base: rtsp://example.com/BreakingDawn.3gp/
      Expires: 22 Feb 2012 15:20:29 GMT

      v=0
      o=- 2890844256 2890842807 IN IP4 198.51.100.5
      s=RTSP Session
      i=An Example of substream control usage
      e=adm@example.com
      c=IN IP4 0.0.0.0
      a=control: *
      a=range: npt=0-0:10:34.10
      t=0 0
      m=video 20000 RTP/AVP 97
      a=rtpmap:97 H264-SVC/90000
      a=fmtp:97 profile-level-id=53000c; packetization-mode=1;
       sprop-parameter-sets={sps0},{sps1},{pps0},{pps1};
       sprop-operation-point-info=<1,0,0,0,4de00a,3200,176,144,128,
      256>,<2,1,1,0,53000c,6400,352,288,256,512>;
     ]]>    
    	</artwork>
	</figure>
	<t>
	 Step 2: The client setup the RTSP session with play.substream feature tag.
   </t>
         
    <figure>
    <artwork><![CDATA[
C->S: SETUP rtsp://example.com/BreakingDawn.3gp RTSP/2.0
      CSeq: 2
      User-Agent: PhonyClient/1.2
      Require: play.substream
      Transport: RTP/AVP;unicast;dest_addr=":8000"/":8001"
      Accept-Ranges: NPT, SMPTE, UTC
       
S->C: RTSP/2.0 200 OK
      CSeq: 3
      Server: PhonyServer/1.0
      Transport: RTP/AVP;unicast; ssrc=AABBCCDD;
		   dest_addr="192.0.2.53:8002"/"192.0.2.53:8003";
		   src_addr="198.51.100.5:9002"/"198.51.100.5:9003";

      Session: 12345678
      Expires: 22 Feb 2012 15:22:09 GMT
      Date: 22 Feb 2012 15:22:09 GMT
      Accept-Range: NPT
      Media-Properties: Random-Access=0.8, Immutable, Unlimited
     ]]>    
    	</artwork>
	</figure>
	<t>
	 Step 3: The client starts the playout of the component layer 1.
   </t>
         
    <figure>
    <artwork><![CDATA[
C->S: PLAY rtsp://example.com/BreakingDawn.3gp/ RTSP/2.0
      CSeq: 4
      User-Agent: PhonyClient/1.2
      Range: npt=0-
      Seek-Style: RAP
      Session: 12345678
      SubstreamCtrl: SVC, layer_id=1


       
S->C: RTSP/2.0 200 OK
      CSeq: 4
      Server: PhonyServer/1.0
      Date: 22 Feb 2012 15:22:52 GMT
      Session: 12345678
      Range: npt=0-634.10
      Seek-Style: RAP
      RTP-Info: url="rtsp://example.com/BreakingDawn.3gp"
         ssrc=0D12F123:seq=12345;rtptime=3450012,

     ]]>    
    	</artwork>
	</figure>

	<t>
	 Step 4: The client requests to pause the session.
   </t>
         
    <figure>
    <artwork><![CDATA[
C->S: PAUSE rtsp://example.com/BreakingDawn.3gp/ RTSP/2.0
      CSeq: 5
      User-Agent: PhonyClient/1.2
      Session: 12345678
      SubstreamCtrl: SVC, layer_id=1
      
S->C: RTSP/2.0 200 OK
      CSeq: 5
      Server: PhonyServer/1.0
      Date:  22 Feb 2012 15:22:58 GMT
      Session: 12345678
      Range: npt=5.66-634.10

     ]]>    
    	</artwork>
	</figure>

      </section>

    
    
    
     <section anchor="security" title="Security Considerations">
       <t>
       Considerations outlined in RTSP 2.0 <xref target='I-D.ietf-mmusic-rfc2326bis'/> apply here as well. 
       It is believed that no special security risk is led by this document.  
      </t>
     </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>
        Registration is requested for the newly defined RTSP feature tag extension, RTSP header 
        extensions and RTSP status code extensions, according to the instructions in section 22 of the base
        specification <xref target='I-D.ietf-mmusic-rfc2326bis'/>.
     </t>
     
     <t>
	    This section also sets up a registry for substream type that should
	    be maintained by IANA. 
      </t>
      
       <section title="RTSP Feature-tag Extensions">
      <t>
        The following feature-tag is defined in this specification  and
        hereby registered according to the section 22.1.2 of the base specification 
        <xref target='I-D.ietf-mmusic-rfc2326bis'/>.  The change control 
        belongs to the IETF.
      </t>
     
      <t>
        <list style="symbols">
        <t>
        Feature tag: Play.substream  
        </t>
        <t>
        Description: Support of control the media playback on substream
        basis. Applies for clients, servers and proxies.
        </t>
        <t>
        Contact person: Peiyu YUE
        </t>
        <t>
        Change control: IETF
        </t>
        <t>
        Reference specification: present document.
        </t>
        </list>
      </t>
      </section>
      
      <section title="RTSP Header Extensions">
       <t>
       The following RTSP header is defined in this specification and
        hereby registered according to section 22.4.2 of the base specification 
        <xref target='I-D.ietf-mmusic-rfc2326bis'/>.  The change control 
        belongs to the IETF.
      </t>
      <t>
      <list style="symbols">
      <t>
      The name of the header: SubstreamCtrl
      </t>
      <t>
      Description: SubstreamCtrl is used to indicate the substreams RTSP client wants to control(i.e. play or pause).
      </t>
      <t>
      The syntax of the header: as described in  <xref target='substream-header'/>.
      </t>
      <t>
      Where to use: as described in  <xref target='substream-header'/>.
      </t>
      <t>
      Handle by proxy: default.
      </t>
      </list>
      </t>

      </section>

      <section title="RTSP Status Code Extension">
      <t>
       The following RTSP status codes are in defined this specification and
        hereby registered according to section 22.3.2 of the base specification 
        <xref target='I-D.ietf-mmusic-rfc2326bis'/>.  The change control 
        belongs to the IETF.
      </t>
      <t>
         <list style="symbols">
         <t>
         Request number: 552
         </t>
         <t>
         Description: as described in <xref target='status-code-552'/>
         </t>
         </list>
         </t>
         <t>
          <list style="symbols">
         <t>
         Request number: 553
         </t>
         <t>
         Description: as described in <xref target='status-code-553'/>
         </t>
         </list> 
         </t>
         <t>
          <list style="symbols">
         <t>
         Request number: 554
         </t>
         <t>
         Description: as described in <xref target='status-code-554'/>
         </t>
         </list>   
      </t>
      </section>
         
  
      <section anchor ="Substream_Type_Registration" title="Hold of Substream Type Registration">
     
      <section title="Guidance of Substream Type Registration">
      <t>
      IANA should take the responsibility for the registration of the substream type.
      A new substream type MUST be registered through an IETF Standards Action.
	  A specification for a new substream type MUST consist of the following
	  items:
     <list style="symbols">
     <t>
	 A substream type;
	</t>
	<t>
	A description of the substream type;
	</t>
	<t>
	A substream id definition
	</t>
	</list>
      </t>
      </section>
      <section title="Registration of Substream Types">
      <t>
      This specification registers two substream types: SVC and MVC:
      </t>
      <t>
     <list style="symbols">
         <t>
         Substream Type: SVC
         </t>
         <t>
         Description: Scalable Video Codec stream as defined in
          <xref target='RFC6190'/>.
         </t>
         <t>
         Substream id definition: could be layer-id or [dependency-ID,
          temporal_ID, quality-ID] combination, as described in 
          <xref target='substream-annotation'/>.
         </t>
         </list> 
         </t>
         <t>
        <list style="symbols">
         <t>
         Substream Type: MVC
         </t>
         <t>
         Description: Multiview Video Codec stream as defined in
          <xref target='I-D.ietf-payload-rtp-mvc'/>.
         </t>
         <t>
         Substream id definition: as described in 
          <xref target='substream-annotation'/>.
         </t>
         </list> 
         </t>
      </section>
</section>

</section>  
    
  </middle>

  <back>
    <references title="Normative References">
      &RFC2119;
      &RFC6190;
	  &I-D.ietf-mmusic-rfc2326bis;
	  &I-D.ietf-payload-rtp-mvc;
    </references>

    <references title="Informative References">
		&RFC4566;
  </references>
  </back>
</rfc>
    