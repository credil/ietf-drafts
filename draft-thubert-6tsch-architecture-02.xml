<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc subcompact="no"?>
<?rfc authorship="yes"?>
<?rfc tocappendix="yes"?>
 
<rfc category="std" docName="draft-thubert-6tsch-architecture-02" ipr="trust200902">

<front>
   <title abbrev="6tsch-architecture">An Architecture for IPv6 over Timeslotted Channel Hopping</title>
   <author fullname="Pascal Thubert" initials="P" role="editor" surname="Thubert">
      <organization abbrev="cisco">Cisco Systems, Inc</organization>
      <address>
         <postal>
            <street>Building D</street>
            <street>45 Allee des Ormes - BP1200 </street>
            <city>MOUGINS - Sophia Antipolis</city>
            <code>06254</code>
            <country>FRANCE</country>
         </postal>
         <phone>+33 497 23 26 34</phone>
         <email>pthubert@cisco.com</email>
      </address>
   </author>
   <author fullname="Robert Assimiti" initials="RA" surname="Assimiti">
      <organization abbrev="Nivis">Nivis</organization>
      <address>
         <postal>
            <street>1000 Circle 75 Parkway SE, Ste 300</street>
            <city>Atlanta</city>
            <region>GA</region>
            <code>30339</code>
            <country>USA</country>
         </postal>
         <phone>+1 678 202 6859</phone>
         <email>robert.assimiti@nivis.com</email>
      </address>
   </author>
   <author initials="T" surname="Watteyne" fullname="Thomas Watteyne">
      <organization>Linear Technology / Dust Networks</organization>
      <address>
         <postal>
            <street>30695 Huntwood Avenue</street>
            <city>Hayward</city>
            <region>CA</region>
            <code>94544</code>
            <country>USA</country>
         </postal>
         <phone>+1 (510) 400-2978</phone>
         <email>twatteyne@linear.com</email>
      </address>
   </author>
   <date/>
   <area>Internet Area</area>
   <workgroup>6TSCH</workgroup>
   <keyword>Draft</keyword>
   <abstract>
      <t>
         This document presents an architecture for an IPv6 multilink subnet that
         is composed of a high speed powered backbone and a number of 
		 IEEE802.15.4e TSCH wireless networks attached and synchronized by 
		 Backbone Routers. Route Computation may be achieved in a centralized 
		 fashion by a Path Computation Element, in a distributed fashion using the 
		 Routing Protocol for Low Power and Lossy Networks, or in a mixed mode. 
		 The Backbone Routers perform proxy Neighbor discovery operations over the 
		 backbone on behalf of the wireless device, so they can share a same subnet 
		 and appear to be connected to the same backbone as classical devices.
      </t>
   </abstract>
   <note title="Requirements Language">
      <t>
         The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", 
		 "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", 
		 and "OPTIONAL" in this document are to be interpreted as described 
		 in <xref target="RFC2119">RFC 2119</xref>.
      </t>
   </note>
</front>

<middle>
   <section title="Introduction">
   <t>The emergence of radio technology enabled a large variety of new types of devices
   to be interconnected, at a very low marginal cost compared to wire, at any range from
    Near Field to interplanetary distances, and in circumstances where wiring could be less
	than practical, for instance rotating devices.
   </t>   
      <t>
        At the same time, a new breed of Time Sensitive Networks is being developped to enable
		traffic that is highly sensitive to jitter and quite sensitive to 
		latency. Such traffic is not limited to voice and video, but also
		includes command and control operations such as found in industrial
		automation or in-vehicule sensors and actuators.
      </t>
      <t>
         At IEEE802.1, the "Audio/Video Task Group", was renamed TSN for
		 Time Sensitive Networking to address Deterministic Ethernet.
		 The IEEE802.15.4 Medium Access Control (MAC) has evolved with 
		 IEEE802.15.4e that provides in particular the Timeslotted
		 Channel Hopping (TSCH) mode for industrial-type applications. 
		 </t>
		 <t>Though at a different time scale, both standards provide 
		 Deterministic capabilities to the point that
		 a packet that pertains to a certain flow will cross the network from
		 node to node following a very precise schedule, like a train leaves
		 intermediate stations at precise times along its path. The time
		 slotted aspect reduces collisions, and saves energy, and enables to 
		 more closely engineer the network for deterministic properties.
		 The channel hopping aspect is a simple and efficient technique
		 to get around statistical interference by WiFi emitters. 
      </t>
      <t>
         This document presents an architecture for an IPv6 multilink subnet
		 that is composed of a high speed powered backbone and a number of
		 IEEE802.15.4e TSCH wireless networks attached and synchronized by
		 backbone routers. Route Computation may be achieved in a centralized
		 fashion by a Path Computation Element (PCE), in a distributed fashion
		 using the Routing Protocol for Low Power and Lossy Networks (RPL), or
		 in a mixed mode. The Backbone Routers perform proxy Ipv6 Neighbor
		 Discovery (ND) operations over the backbone on behalf of the wireless
		 devices, so they can share a same IPv6 subnet and appear to be
		 connected to the same backbone as classical devices.
      </t>
   </section>
   <section anchor="Terminology" title="Terminology">
      <t>
         The draft uses terminology defined in
		 <xref target="I-D.palattella-6tsch-terminology"/>, 
		 <xref target="I-D.chakrabarti-nordmark-6man-efficient-nd"/>,
		 <xref target="RFC5191"/> 
		 and <xref target="RFC4080"/>.
      </t>
      <t>
         It conforms to the terms and models described for IPv6 in
		 <xref target="RFC5889"/> and uses the vocabulary and the concepts
		 defined in <xref target="RFC4291"/> for IPv6.
      </t>
   </section>
   <section anchor="Goals" title="Applications and Goals">
   <t>The architecture derives from existing industrial standards for Process 
   Control by its focus on Deterministic Networking, in particular with the use 
   of the IEEE802.15.4e TSCH MAC and the centralized path computation element.
   This approach leverages the TSCH MAC benefits for high reliability against interference, 
   low-power consumption on deterministic traffic, and its Traffic Engineering capabilities.
   Deterministic Networking applies in particular to open and closed control loops, 
   as well as supervisory control flows, and management.
   </t>
   <t>Additional industrial use cases are addressed with the addition of a more
   autonomic and distributed routing based on RPL. These use cases include
   plant setup and decommissioning, as well as monitoring of lots of lesser 
   importance measurements such as corrosion and events. 
   RPL also enables mobile use cases such as mobile workers and cranes.
   </t>
    <t>A Backbone Router is included in order to scale the factory plant subnet to address 
	large deployments, with proxy ND and time synchronization over a high speed backbone.
	</t>
    <t>The architecture also applies to building automation that leverage RPL's storing
	mode to address multipath over a large number of hops, in-vehicule command and control
	that can be as demanding as industrial applications, commercial automation and asset 
	Tracking with mobile scenarios, home automation and domotics which become more reliable 
	and thus provide a better user experience, and resource management (energy, water, etc.).
   </t>
   </section>
   <section anchor="Scope" title="Overview and Scope">
      <t>
         The scope of the present work is a subnet that, in its basic
		 configuration, is made of a
		 <xref target="I-D.watteyne-6tsch-tsch-lln-context">
		 IEEE802.15.4e Timeslotted Channel Hopping (TSCH)</xref>
		 MAC Route-Over Low Power Lossy Network (LLN).
         <figure anchor="fig1" title="Basic Configuration">
<artwork><![CDATA[

            +-----+           
            |     | LLN Border 
            |     | router     
            +-----+    
          o    o   o   
   o     o   o     o 
      o   o LLN   o    o     o 
         o   o   o       o       
                 o       
]]></artwork>
         </figure>
      </t>
      <t>
         The LLN devices communicate over IPv6 <xref target="RFC2460"/>
	 using the <xref target="RFC6282">6LoWPAN Header Compression (6LoWPAN HC)</xref>.

         From the Layer 3 perspective, a single LLN interface 
        (typically an IEEE802.15.4 radio) may be seen as a collection of Links with 
         different capabilities for unicast or multicast services. An IPv6 subnet will
         span over multiple links, effectively forming a multilink subnet. Within that
         subnet, Neighbor Devices are discovered with <xref target="RFC6775"> 6LoWPAN
		 Neighbor Discovery (6LoWPAN ND)</xref>. <xref target="RFC6550">
		 The Routing Protocol for Low Power and Lossy Networks (RPL) </xref>
		 enables routing within the LLN, typically within the multilink subnet
        in the so called Routing Over fashion. RPL forms Destination Oriented 
		 Directed Acyclic Graphs (DODAGs) within instances of the protocol,
		 each instance being associated with an Objective Function (OF) to
		 form a routing topology. A particular LLN device, usually powered,
		 acts as RPL root, 6LoWPAN HC terminator, and LLN Border Router
		 (LBR) to the outside.
      </t>
      <t>
         An extended configuration of the subnet comprises multiple LLNs.
		 The LLNs are interconnected and synchronized over a backbone, that
		 can be wired or wireless. The backbone can be a classical IPv6
		 network, with Neighbor Discovery operating as defined in
		 <xref target="RFC4861"/> and <xref target="RFC4862"/>.
		 The backbone can also support
		 <xref target="I-D.chakrabarti-nordmark-6man-efficient-nd">
		 Efficiency aware IPv6 Neighbor Discovery Optimizations </xref>
		 in mixed mode as described in 
		 <xref target="I-D.thubert-6lowpan-backbone-router"/>.
      </t>
      <t>
         Security is often handled at layer 2 and Layer 4. Authentication
		 during the join process is handled with the <xref target="RFC5191">
		 Protocol for Carrying Authentication for Network Access (PANA)</xref>.
      </t>
      <t>
         The LLN devices are time-synchronized at MAC level. 
		 The MAC coordinator that serves as time source is loosely coupled with the RPL parent;
		 this way, the time
		 synchronization starts at the RPL root and follows the RPL
		 DODAGs with no timing loop.
      </t>
      <t>
         In the extended configuration, the functionality of the LBR is
		 enhanced to that of Backbone Router (BBR). A BBR is an LBR, but
		 also an Energy Aware Default Router (NEAR) as defined in
		 <xref target="I-D.chakrabarti-nordmark-6man-efficient-nd"/>.
		 The BBR performs ND proxy operations between the registered devices
		 and the classical ND devices that are located over the backbone.
		 6TSCH BBRs synchronize with one another over the backbone, so as
		 to ensure that the multiple LLNs that form the IPv6 subnet stay
		 tightly synchronized. If the Backbone is Deterministic (such as
		 defined by the Time Sensitive Networking WG at IEEE), then the
		 Backbone Router ensures that the end-to-end deterministic
		 behavior is maintained between the LLN and the backbone.
      </t>
      <t>
         <figure anchor="fig2" title="Extended Configuration">
<artwork><![CDATA[
               ---+------------------------ 
                  |      External Network 
                  | 
               +-----+                  +-----+                         
               |     | Router           |     | PCE
               |     |                  |     |
               +-----+                  +-----+
                  |                        |
                  |     Subnet Backbone    |
            +--------------------+------------------+ 
            |                    |                  | 
         +-----+             +-----+             +-----+ 
         |     | Backbone    |     | Backbone    |     | Backbone
    o    |     | router      |     | router      |     | router 
         +-----+             +-----+             +-----+ 
    o                  o                   o                 o   o
        o    o   o         o   o  o   o         o  o   o    o 
   o             o        o  LLN      o      o         o      o
      o   o    o      o      o o     o  o   o    o    o     o
]]></artwork>
         </figure>
      </t>
      <t>
         The main architectural blocks are arranged as follows:
		 
		 
         <figure anchor="fig4" title="6TSCH stack">
<artwork><![CDATA[
        +-----+-----+-----+-----+-------+-----+  
        |PCEP |   CoAP    |PANA |6LoWPAN| RPL |
        | PCC |DTLS |     |     |   ND  |     |
        +-----+-----+-----+-----+-------+-----+-----+
        | TCP |       UDP       |    ICMP     |RSVP |
        +-----+-----+-----+-----+-------+-----+-----+
        |                 IPv6                      |
        +-------------------------------------------+
        |               6LoWPAN HC                  |
        +-------------------------------------------+
        |                   6top                    |
        +-------------------------------------------+
        |             802.15.4e   TSCH              |
        +-------------------------------------------+  
]]></artwork>
         </figure>
		 
        </t>
		<t>RPL is the routing protocol of choice for LLNs. (TBD RPL) whether there
		is a need to define a 6TSCH OF.</t>
		<t>(tbd NME) COMAN is working on network Management for LLN. 
		They are considering the Open Mobile Alliance (OMA) Lightweight M2M (LWM2M) Objet system. 
		This standard includes DTLS, CoAP (core plus the Block and Observe patterns), 
		SenML and CoAP Resource Directory.</t>
         <t>(tbd PCC) need to work with PCE WG to define flows to PCE, and define how to 
		 accomodate PCE routes and reservation. Will probably look a lot like GMPLS</t>
         <t>(tbd Backbone Router) need to work with 6MAN to define ND proxy. 
		 Also need BBR sync sync between deterministic ethernet and 6TSCH LLNs.</t>
         <t>IEEE802.1TSN: external, maintain consistency.</t>
         <t>IEEE802.15.4: external, (tbd need updates?).</t>
         <t>ISA100.20 Common Network Management: external, maintain consistency.</t>
         <t>IoT6 European Project: external, maintain consistency.</t>
      
 
   </section>
   
   <section anchor="PCEvsRPL" title="Centralized vs. Distributed Routing">
      <t>6TSCH supports a mix model of centralized routes that are computed by a Path Computation Entity
	  and distributed routes that are computed by RPL over a common physical LLN. 
      </t>
      <t>Both RPL and the PCE may inject routes in the Routing Tables of the 6TSCH routers.
	  In either case, each route is associated with a topology that is indexed by an instanceID, 
      as defined in <xref target="RFC6550">RPL</xref>.  RPL and PCE rely on shared sources to define
	  Global and Local InstanceIDs.
      </t>
	  <t>
	  It is possible for RPL and PCE to share a same topology, in which case the PCE routes have 
	  precedence over RPL routes in case of a conflict.
      </t>  <t>
	   Inside the 6TSCH domain, the flow label is used to indicate the topology that must be used for
	   routing and the associated Routing Tables as discussed in <xref target="I-D.thubert-roll-flow-label"/>.
      </t> 
   </section>
  
   
   <section anchor="FwdMdl" title="Forwarding Models">
      <t>
	  6TSCH supports three different forwarding model, G-MPLS Track Forwarding (TF), 
	  6LoWPAN Fragment Forwarding (FF) and IPv6 Forwarding (6F).
      </t>
	  
   <section anchor="Trkfwd" title="Track Forwarding">
      <t>
	  Track Forwarding is the simplest and fastest. A set of input cells are uniquely bound 
	  to a set of output cells, representing a forwarding state that can be used regardless of
	  the uppoer layer protocol. This model can effectively be seen as a G-MPLS operation
	  in that the information used to switch is not an explicit label but related to other 
	  properties of the way the packet was received, a particular cell in the case of 6TSCH.
	  As a result, as long as the TSCH MAC (and Layer 2 security) accepts a frame, that frame 
	  can be switched regardless of the protocol, whether this is an IPv6 packet, a 6LoWPAN
	  fragment, or a frame from an alternate protocol such as WirelessHART of ISA100.11a.
      </t>  
	 
	  <t>
	  A Track is defined end-to-end as a succession of Timeslots and a Timeslot belongs
	  to at most one Track. For a given iteration of a Slotframe, the Timeslot is 
	  associated uniquely with a cell which indicates the channel at which the Timeslot 
	  operates for that iteration.
      </t>  <t> 
	  A frame that is forwarded along a Track has a destination MAC address set to broadcast 
	  or a multicast address depending on the MAC support.
	  This way, the MAC layer in the intermediate nodes will accept the incoming frame and 
	  6top will switch it without incurring a change in the MAC header.
	  In the case of 802.15.4e, this means effectively broadcast, so that along the Track 
	  the short address for the destination is set to 0xFFFF.
      </t>  <t> 
	  Conversely, a frame that is received along a Track with a destination MAC address
	  set to this node is extracted from the Track stream and delivered to the upper layer.
	  A frame with an unrecognized MAC address is just ignored at the MAC layer and thus is not received 
	  at the 6top sublayer.
      </t>  <t>
	  There are 2 modes for a Track, transport mode and tunnel mode.
	  </t>
   <section anchor="Tranmode" title="Transport Mode">
   <t>
	  <figure anchor="fig5" title="Track Forwarding, Transport Mode">
<artwork><![CDATA[
                          |                                    ^
      +--------------+    |                                    |
      |     IPv6     |    |                                    |
      +--------------+    |                                    |
      |  6LoWPAN HC  |    |                                    |
      +--------------+  ingress                              egress
      |     6top     |   sets     +----+          +----+     restores
      +--------------+  dmac to   |    |          |    |     dmac to
      |   TSCH MAC   |   brdcst   |    |          |    |      self
      +--------------+    |       |    |          |    |       | 
      |   LLN PHY    |    +-------+    +--...-----+    +-------+
      +--------------+  
		
]]></artwork>
         </figure>
	  In transport mode, the PDU is associated with flow information that refers uniquely to the Track, 
	  so the 6top sublayer can place the frame in the appropriate Timeslot without ambiguity. 
	  In the case of IPv6 traffic, the identification of that flow information is transported in the 
	  Flow Label in the IPv6 header. Associated with the source IPv6 address, the flow label forms a 
	  globally unique identifier for that particular Track that is validated at egress before restoring
	  the dmac and punting to the upper layer.
	  </t>
	  
	</section>  
   <section anchor="Trktun" title="Tunnel Mode">
   <t>
	  In tunnel mode, the frames originate from an arbitrary protocol over a compatible MAC
	  that may or may not be perfectly synchronized with the 6TSCH network. An example of 
	  this would be a router with a dual radio that is capable to receive and send WirelessHART
     or ISA100.11a frames with the second radio, by presenting itself as an Access 
	  Point or a Backbone Router, respectively.
      </t>  <t>	
	  In that mode, the PCE may coordinate with a WirelessHART Network Manager or an ISA100.11a
	  System Manager in order to specify the flows that are to be transported transparently
	  over the Track.
	  <figure anchor="fig6" title="Track Forwarding, Tunnel Mode">
<artwork><![CDATA[
                            
        +--------------+  
        |     IPv6     |          
        +--------------+          
        |  6LoWPAN HC  |
        +--------------+             set            restore
        |     6top     |            +dmac+          +dmac+       
        +--------------+            |    |          |    |       
        |   TSCH MAC   |            |    |          |    |      
        +--------------+            |    |          |    |       
        |   LLN PHY    |    +-------+    +--...-----+    +-------+
        +--------------+    |   ingress                 egress   | 
		                    |                                    |
        +--------------+    |                                    |
		|   LLN PHY    |    |                                    |
        +--------------+    |                                    |
		|   TSCH MAC   |    |                                    |
        +--------------+    |                                    |
		|ISA100/WiHART |    |                                    v
        +--------------+ 		
]]></artwork>
         </figure>
		In that case, the flow information that identifies the Track is uniquely derived from the 
		information at the receiving end, for instance the incoming Timeslots, or an ISA100.11a 
		ContractId. At the ingress 6TSCH router, the packet destination is recognized as self but the
		flow information indicates that the frame must be tunneled over a particular 6top Track so the
		packet is not punted to upper layer. Instead, it is passed to the 6top sublayer for switching.
		The 6top sublayer in the ingress router overrides the destination MAC to broadcast and forwards.
      </t>
      <t>
	    At the egress 6top router, the reverse operation occurs. Based on metadata associated to the 
	    Track, the frame is passed to the appropriate link layer with the destination MAC restored.
      </t>  
	</section>  
   <section anchor="Tundata" title="Tunnel Metadata">
   <t>
	  Metadata coming with the Track configuration is expected to provide the destination MAC address
	  of the egress endpoint as well as the tunnel mode and specific data depending on the mode,
	  for instance a service acces point for frame delivery at egress.	
      </t>  <t>	
	  If the tunnel egress point does not have a MAC address that matches the configuration,
	  the Track installation fails. 
      </t>  <t>	
	  In transport mode, if the final layer 3 destination is the tunnel termination, then it is possible
	  that the IPv6 address of the destination is compressed at the 6LoWPAN sublayer based on the MAC address.
	  It is thus mandatory at the ingress point to validate that the MAC address that was used at the 6LoWPAN
	  sublayer for compression matches that of the tunnel egress point. For that reason, the node that injects
	  a packet on a Track checks that the destination is effectively that of the tunnel egress point
	  before it overwrites it to broadcast.
	  The 6top sublayer at the tunnel egress point reverts that operation to the MAC address obtained
	  from the tunnel metadata.
      </t> 
   </section>
   
   </section>  
	
   <section anchor="Frgfwd" title="Fragment Forwarding">
      <t>Considering that 6LoWPAN packets can be as large as 1280 bytes, which is the IPv6 MTU, 
	  and that the non-storing mode of RPL implies Source Routing that requires space for routing 
	  headers, and that a 802.15.4 frame with security may carry in the order of 80 bytes of 
	  effective payload, an IPv6 packet might be fragmented into more than 16 fragments at the 
	  6LoWPAN sublayer. 
      </t>  <t>	
      This level of fragmentation is much higher than that traditionally experienced over the Internet 
	  with IPv4 fragments, where fragmentation is already known as harmful.
      </t>  <t>	
	  In the case to a multihop route within a 6TSCH network, Hop-by-Hop recomposition would occur at each
	  hop in order to reform the packet and route it. This creates additional latency and forces intermediate
	  nodes to store a portion of a packet for an indetermined time, thus impacting critical resources such
	  as memory and battery.
      </t>  <t>	
	  <xref target="I-D.thubert-roll-forwarding-frags"/> describes a mechanism whereby the datagram tag in the
	  6LoWPAN Fragment is used as a label for switching at the 6LoWPAN sublayer. The draft allows for a degree of
	  flow control base on an Explicit Congestion Notification, as well as end-to-end individual fragment recovery.
	  In that model, the first fragment is routed based on the IPv6 header that is present in that fragment.
         <figure anchor="fig7" title="Forwarding First Fragment">
<artwork><![CDATA[
                            |                                    ^
        +--------------+    |                                    |
        |     IPv6     |    |       +----+          +----+       |
        +--------------+    |       |    |          |    |       |
        |  6LoWPAN HC  |    |       learn           learn        |
        +--------------+    |       |    |          |    |       |
        |     6top     |    |       |    |          |    |       | 
        +--------------+    |       |    |          |    |       |
        |   TSCH MAC   |    |       |    |          |    |       |
        +--------------+    |       |    |          |    |       |
        |   LLN PHY    |    +-------+    +--...-----+    +-------+
        +--------------+  
		
		
		
]]></artwork>
         </figure>
      </t>  <t>
	  The 6LoWPAN sublayer learns the next hop selection, generates a new datagram tag for transmission to
	  the next hop, and stores that information indexed by the incoming MAC address and datagram tag. The next
	  fragments are then switched based on that stored state.
         <figure anchor="fig8" title="Forwarding Next Fragment">
<artwork><![CDATA[
                            |                                    ^
        +--------------+    |                                    |
        |     IPv6     |    |                                    |
        +--------------+    |                                    |
        |  6LoWPAN HC  |    |       replay          replay       |
        +--------------+    |       |    |          |    |       |
        |     6top     |    |       |    |          |    |       | 
        +--------------+    |       |    |          |    |       |
        |   TSCH MAC   |    |       |    |          |    |       |
        +--------------+    |       |    |          |    |       |
        |   LLN PHY    |    +-------+    +--...-----+    +-------+
        +--------------+  
		
		
		
]]></artwork>
         </figure>
		 A bitmap and an ECN echo in the end-to-end acknowledgement enable the source to resend the missing
		 fragments selectively. The first fragment may be resent to carve a new path in case of a path failure.
		 The ECN echo set indicates that the number of outstanding fragments should be reduced.
      </t>  
   </section>
   
   <section title="IPv6 Forwarding"> <t>
	  As the packets are routed at layer 3, traditional QoS and RED operations are expected to prioritize
	  flows with differentiated services. A new class of service for Deterministic Forwarding is being 
	  defined to that effect in <xref target="I-D.svshah-tsvwg-lln-diffserv-recommendations"/>.
         <figure anchor="fig9" title="IP Forwarding">
<artwork><![CDATA[
                            |                                    ^
        +--------------+    |                                    |
        |     IPv6     |    |       +-QoS+          +-QoS+       |
        +--------------+    |       |    |          |    |       |
        |  6LoWPAN HC  |    |       |    |          |    |       |
        +--------------+    |       |    |          |    |       |
        |     6top     |    |       |    |          |    |       | 
        +--------------+    |       |    |          |    |       |
        |   TSCH MAC   |    |       |    |          |    |       |
        +--------------+    |       |    |          |    |       |
        |   LLN PHY    |    +-------+    +--...-----+    +-------+
        +--------------+  
		
		
		
]]></artwork>
         </figure>
      </t> 
   </section>
   
   </section>
  
   
   <section anchor="Flows" title="Functional Flows">
      <t>
         <list hangIndent="6" style="hanging">
            <t hangText="Join:"></t>
            <t hangText="Time Synchronization:"></t>
            <t hangText="Setup for routing:"></t>
            <t hangText="PCE reservation:"></t>
            <t hangText="Distributed reservation:"></t>
            <t hangText="Dynamic slot (de)allocation:"></t>
            <t hangText="DSCP mapping:"></t>
         </list>
      </t>
   </section>
   <section anchor="Sync" title="Network Synchronization">
      <t>
		Nodes in a TSCH are time synchronized. A node keeps synchronized to its time source neighbor(s) 
		through a combination of frame-based and acknowledgment-based synchronization. 
		In order to maximize battery life and network throughput, it is advisable that RPL ICMP discovery 
		and maintenance traffic (governed by the trickle timer) be somehow coordinated with the 
		transmission of time synch packets (especially with enhanced beacons). 
		This could be achieved through an interaction of the 6top sublayer and the RPL objective Function, 
		or could be controlled by the Device Management Entity.
      </t>
      <!--t>
         Time synchronization in TSCH is based on three mechanisms:
         <list>
            <t>Enhanced Beacons</t> 
            <t>Enhanced ACKs </t>
            <t>Frame based synchronization </t>
         </list>
         If a node communicates intermittently (sleepy, battery operated) it
		 can also proactively ping its time source and receive time stamps.
		 In order to maximize battery life and network throughput, it is
		 advisable that RPL ICMP discovery and maintenance traffic
		 (governed by the trickle timer) be somehow coordinated with
		 the transmission of time synch packets (especially with enhanced
		 beacons). This could be a function of the 6top sublayer or it could
		 be deferred to the device management entity. Any suggestions,
		 ideas on this topic?
      </t-->
   </section>
   <section anchor="SixTOP" title="TSCH and 6top">
      <section title="6top">
         <t>
            6top is a sublayer which is the next higher layer to TSCH and which offers a set of commands 
			defining data and management interfaces. 6top is defined in <xref target="I-D.draft-wang-6tsch-6top"/>
         </t>
         <t>
            The management interface of 6top enables an upper layer to schedule cells and Slotframes in 
			the TSCH schedule.
         </t>
         <t>
            If the scheduling entity explicitly specifies the slotOffset/channelOffset of the cells to be 
			added/deleted, those cells are marked as "hard". 6top cannot move hard cells in the TSCH schedule. 
			Hard cells are typically used by an central PCE.
         </t>
         <t>
            6top contains a monitoring process which monitors the performance of cells, and can move a cell in the TSCH schedule when it performs bad. This is only applicable to cells which are marked as "soft". To reserve a soft cell, the higher layer does not indicate the slotOffset/channelOffset of the cell to add, but rather the resulting bandwidth and QoS requirements. When the monitoring process triggers a cell reallocation, the two neighbor motes communicating over this cell negociate its new position in the TSCH schedule.
         </t>
      </section>
      <section anchor="Slotframes" title="Slotframes and Priorities">
         <t>
            6top uses priority queues to manage concurrent data flows of different priorities. When a packet is received from an higher layer for transmission, the I-MUX module of 6top inserts that packet in the outgoing queue which matches the packet best (DSCP can therefore be used). At each scheduled transmit slot, the MUX module looks for the frame in all the outgoing queues that best matches the cells. If a frame is found, it is given to TSCH for transmission.
         </t>
      </section>
      <section anchor="PCEFlow" title="Centralized Flow Reservation">
         <t>
            In a centralized setting, a PCE computes the TSCH schedule, and communicates with the different nodes in the network to configure their TSCH schedule. Since it has full knowledge of the network's topology, the PCE can compute a collision-free schedule, which results in a high degree of communication determinism.
         </t>
         <t>
            The protocol for the PCE to communicate with the motes is not yet defined. This protocol typically reserves hard cells on the transmitter side of a dedicated cell, and the negociation protocol of 6top takes care of reserving the same cell on the receiver node.
         </t>
      </section>
      <section anchor="SettingUpAFlow" title="Distributed Flow Reservation">
         <t>
            In a distributed setting, no central PCE in present in the network. Nodes use 6top to reserve soft cells with their neighbors. Since no node has full knowledge of the network's topology and the traffic requirements, scheduling collisions are possible, for example because of a hidden terminal problem.
         </t>
         <t>
            A schedule collision can be detected if two motes have multiple dedicated cells schedule to one another. The monitoring process of 6top can be configured to continuously compute the packet delivery ratio of those cells, and it can declare a soft cell to perform bad when the statistics for that cell are significantly worse than for the other cells to the same neighbor.
         </t>
         <t>
            When this happens, the monitoring process of 6top moves the cell to another location in the 6TSCH schedule, through a re-negociation procedure with the neighbor.
         </t>
         <t>
            The entity that builds and maintains the schedule in a distributed fashion is not yet defined.
         </t>
      </section>
   <section anchor="Packet" title="Packet Marking and Handling">
      <t>
      </t>
      <figure anchor="fig15" title="NSIS flow">
<artwork><![CDATA[
               ---+----------------
       Sender                                              Receiver
   +-----------+     +----+     +----+      +----+      +-----------+
   |Application|---->| R1 |---->| R2 |----->|BBR |----->|Application|
   |   +--+    |     |+--+|     |+--+|      |+--+|      |   +--+    |
   |   |NE|====|=====||NE||=====||NE||======||NE||======|===|NE|    |
   |   +--+    |     |+--+|     |+--+|      |+--+|      |   +--+    |
   |    |^     |     | |^ |     | |^ |      | |^ |      |    |^     |
   |    v|     |     | v| |     | v| |      | v| |      |    v|     |
   |   +--+    |     |+--+|     |+--+|      |+--+|      |   +--+    |
   |   |6T|    |     ||6T||     ||6T||      ||6T||      |   |6T|    |
   |   |us|    |     ||us||     ||us||      ||us||      |   |us|    |
   |   +--+    |     |+--+|     |+--+|      |+--+|      |   +--+    |
   +-----------+     +----+     +----+      +----+      +-----------+

      +--+
      |NE| = NSIS      ==== = Signaling    ---> = Data flow messages
      +--+   Entity           Messages            (unidirectional)

      +--+
      |6T|   6top layer
      |us| (and IEEE802.15.4e TSCH MAC below) 
      +--+   

]]></artwork>
         </figure>
         <t>
            reservation
            Deterministic flow allocation (hard reservation of Timeslots) eg centralized RSVP? metrics? 
            Hop-by-hop interaction with 6top.
            Lazy reservation (use shared slots to transport extra burst and then dynamically (de)allocate)
            Classical QoS (dynamic based on observation)
         </t>
   </section>
   </section>
   <section anchor="MGT" title="Management">
      <t>
      </t>
   </section>
   <section anchor="IANA" title="IANA Considerations">
      <t>
         This specification does not require IANA action.
      </t>
   </section>
   <section anchor="Sec" title="Security Considerations">
      <t>
         This specification is not found to introduce new security threat.
      </t>
   </section>
   <section anchor="Acknowledgements" title="Acknowledgements">
      <t>
      </t>
   </section>
</middle>

<back>
   <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>
      <?rfc include="reference.RFC.2460"?>
      <?rfc include="reference.RFC.4080"?>
      <?rfc include="reference.RFC.4291"?>
      <?rfc include="reference.RFC.4861"?>
      <?rfc include="reference.RFC.4862"?>
      <?rfc include="reference.RFC.5191"?>
      <?rfc include="reference.RFC.5889"?>
      <?rfc include="reference.RFC.5974"?>
      <?rfc include="reference.RFC.6282"?>
      <?rfc include="reference.RFC.6550"?>
      <?rfc include="reference.RFC.6775"?>
   </references>
   <references title="Informative References">
      <?rfc include='reference.I-D.watteyne-6tsch-tsch-lln-context'?>
      <?rfc include='reference.I-D.palattella-6tsch-terminology'?>
      <reference anchor="I-D.draft-wang-6tsch-6top">
         <front>
            <title>
               6TSCH Operation Sublayer (6top). draft-wang-6tsch-6top-00 (work in progress)
            </title>
            <author initials="Q" surname="Wang"       fullname="Qin Wang" role="editor"/>
            <author initials="X" surname="Vilajosana" fullname="Xavier Vilajosana"/>
            <author initials="T" surname="Watteyne"   fullname="Thomas Watteyne"/>
            <date month="July" year="2013"/>
         </front>
      </reference>
      <?rfc include='reference.I-D.vilajosana-6tsch-basic'?>
      <?rfc include='reference.I-D.ohba-6tsch-security'?>
      <?rfc include='reference.I-D.svshah-tsvwg-lln-diffserv-recommendations'?>
      <?rfc include='reference.I-D.chakrabarti-nordmark-6man-efficient-nd.xml'?>
      <?rfc include='reference.I-D.thubert-6lowpan-backbone-router.xml'?> 
      <?rfc include='reference.I-D.thubert-roll-forwarding-frags.xml'?> 
      <?rfc include='reference.I-D.svshah-tsvwg-lln-diffserv-recommendations.xml'?> 
      <?rfc include='reference.I-D.thubert-roll-flow-label.xml'?> 
   </references>
   <references title="External Informative References">
      <reference anchor="IEEE802.1TSNTG" target="http://www.ieee802.org/1/pages/avbridges.html">
         <front>
            <title>IEEE 802.1 Time-Sensitive Networks Task Group</title>
            <author>
               <organization>IEEE Standards Association</organization>
            </author>
            <date day="08" month="March" year="2013" />
         </front>
      </reference>
      <reference anchor="HART">
         <front>
            <title>Highway Addressable Remote Transducer, a group of specifications for industrial process and control devices administered by the HART Foundation</title>
            <author>
               <organization>www.hartcomm.org</organization>
            </author>
            <date></date>
         </front>
      </reference>
      <reference anchor="ISA100.11a" target="http://www.isa.org/Community/SP100WirelessSystemsforAutomation">
         <front>
            <title>ISA100, Wireless Systems for Automation</title>
            <author>
               <organization>ISA</organization>
            </author>
            <date day="05" month="May" year="2008" />
         </front>
      </reference>
   </references>
</back>

</rfc>
