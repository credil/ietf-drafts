<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY I-D.mpls-seamless-mpls SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-mpls-seamless-mpls.xml">
<!ENTITY I-D.ietf-mpls-ldp-ipv6 SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-mpls-ldp-ipv6.xml">
]>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="info" docName="draft-mkonstan-keyed-ipv6-tunnel-00"
     ipr="trust200902">
  <front>
    <title abbrev="">Keyed IPv6 Tunnel</title>

    <author fullname="Rainer Schatzmayr" initials="R" surname="Schatzmayr">
      <organization>Deutsche Telekom AG</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country/>
        </postal>

        <phone/>

        <facsimile/>

        <email> rainer.schatzmayr@telekom.de</email>

        <uri/>
      </address>
    </author>

    <author fullname="Giles Heron" initials="G" role="editor" surname="Heron">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <code/>

          <country/>
        </postal>

        <phone/>

        <email>giheron@cisco.com</email>
      </address>
    </author>

    <author fullname="Maciek Konstantynowicz" initials="M" role="editor"
            surname="Konstantynowicz">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <country/>
        </postal>

        <email>maciek@cisco.com</email>
      </address>
    </author>

    <author fullname="Mark Townsley" initials="M" surname="Townsley">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country/>
        </postal>

        <phone/>

        <facsimile/>

        <email>townsley@cisco.com</email>

        <uri/>
      </address>
    </author>

    <date day="15" month="July" year="2013"/>

    <abstract>
      <t>This document describes a simple L2 Ethernet over IPv6 tunnel
      encapsulation with mandatory 64-bit authentication key for connecting L2
      Ethernet attachment circuits identified by IPv6 addresses. The
      encapsulation is based on L2TPv3 over IP.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t/>

      <t>L2TPv3, as defined in <xref target="RFC3931">RFC3931</xref>, provides
      a dynamic mechanism for tunneling Layer 2 (L2) "circuits" across a
      packet-oriented data network (e.g., over IP), with multiple attachment
      circuits multiplexed over a single pair of IP address endpoints (i.e. a
      tunnel) using the L2TPv3 session ID as a circuit discriminator.</t>

      <t>Implementing L2TPv3 over IPv6 provides the opportunity to utilize
      unique IPv6 addresses to identify Ethernet attachment circuits directly,
      leveraging the key property that IPv6 offers, a vast number of unique IP
      addresses. In this case, processing of the L2TPv3 Session ID may be
      bypassed upon receipt as each tunnel has one and only one associated
      session. This local optimization does not hinder the ability to continue
      supporting the multiplexing of circuits via the Session ID on the same
      router for other L2TPv3 tunnels.</t>
    </section>

    <section anchor="sec_static_mapping"
             title="Static 1:1 Mapping Without a Control Plane">
      <t>Use of the L2TPv3 Control Plane is optional. When the control plane
      is not used, local configuration creates a one-to-one mapping between
      the access-side L2 attachment circuit and the IP address used in the
      network-side IPv6 encapsulation. Further, circuit monitoring is
      performed using Ethernet OAM mechanisms (802.1ag and/or Y.1731).</t>

      <t>The L2TPv3 encapsulating router identifies each Ethernet L2
      attachment circuit by the Ethernet VLAN stack present on Ethernet frames
      on the access side</t>

      <t><list style="symbols">
          <t>port mode access - physical port identifies a L2 attachment
          circuit.</t>

          <t>single-stack access - s-tag or c-tag with S-VID or C-VID value
          identifies a L2 attachment circuit.</t>

          <t>multi-stack access - ( s-tag, c-tag ) with tuple ( S-VID, C-VID )
          identifies a L2 attachment circuit.</t>
        </list></t>

      <t>L2 attachment connection identifiers s-tag or ( s-tag, c-tag ) are
      treated with local significance and are not required to be forwarded
      over the IPv6 network (though the operator may prefer to forward tags in
      some cases).</t>

      <t>The L2TPv3 encapsulating router identifies each L2TPv3 tunnel
      endpoint by a distinct /128 IPv6 address in the packet header of L2TPv3
      IPv6 packets received and transmitted on the network side.</t>

      <t>In the event that an IPv6 address used in L2TPv3 does not directly
      correspond to one and only one attachment circuit on both sides of the
      L2TPv3 tunnel, the Session ID may be used for additional granularity.
      This allows for other addressing schemes that may require additional
      bits beyond those which can fit in the IPv6 header address field.</t>
    </section>

    <section anchor="sec_auth_key" title="64-bit Authentication Key">
      <t>All packets MUST carry a 64-bit authentication key in the L2TPv3
      cookie field. The cookie MUST be 64-bits long in order to provide
      sufficient protection against a brute force blind insertion attack.</t>

      <t>In absence of the L2TPv3 Control Plane, the L2TPv3 encapsulating
      router must be provided with local configuration of the 64-bit
      authentication cookie for each local and remote IPv6 endpoint - note
      that cookies are asymmetric, so local and remote endpoints may send
      different cookie values. The value of the cookie must be able to be
      changed at any time in a manner that does not drop any legitimate
      tunneled packets - i.e. the receiver must be willing to accept both
      "old" and "new" cookie values during a change of cookie value.</t>
    </section>

    <section anchor="sec_encapsulation" title="Encapsulation">
      <t><xref target="RFC4719">RFC4719</xref> describes encapsulation of
      Ethernet over L2TPv3. Paraphrasing from this document, the Ethernet
      frame, without the preamble or frame check sequence (FCS), is
      encapsulated in L2TPv3 and is sent as a single packet by the ingress
      router.</t>

      <t>The s-tag (or in the multi-stack access case the s-tag and c-tag)
      SHOULD be removed before the packet is encapsulated.</t>

      <t>The full encapsulation is as follows:</t>

      <t><figure align="center">
          <artwork><![CDATA[    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  Ver  | Traffic Class |             Flow Label                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |        Payload Length         |  Next Header  |   Hop Limit   | 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    Source address (0:31)                      |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    Source address (32:63)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    Source address (64:95)                     |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    Source address (96:127)                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  Destination address (0:31)                   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  Destination address (32:63)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  Destination address (64:95)                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  Destination address (96:127)                 |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    Session ID (32 bits)                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                        Cookie (0:31)                          |             
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                        Cookie (32:63)                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      Payload (variable)                       |
   |                              ?                                |
   |                              ?                                |
   |                              ?                                |
   |                              ?                                |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]></artwork>

          <postamble/>
        </figure></t>

      <t>The combined IPv6 and L2TPv3 header contains the following
      fields:</t>

      <t><list style="symbols">
          <t>Ver. Set to 0x6 to indicate IPv6.</t>

          <t>Traffic Class. May be set by the ingress router to ensure correct
          PHB treatment by transit routers between the ingress and egress, and
          correct QoS disposition at the egress router.</t>

          <t>Flow Label. May be set by the ingress router to indicate a flow
          of packets from the client which may not be reordered by the network
          (if there is a requirement for finer grained ECMP load balancing
          than per-circuit load balancing).</t>

          <t>Payload Length. Set to the length of the packet, excluding the
          IPv6 header (i.e. the length from the Session ID to the end of the
          packet).</t>

          <t>Next Header. Set to 0x73 to indicate that the next header is
          L2TPv3.</t>

          <t>Hop Limit. Set to 0xFF, and decremented by one by each router in
          the path to the egress router.</t>

          <t>Source Address. IPv6 source address for the tunnel. In the
          "Static 1:1" case the IPv6 source address may correspond to a port
          or VLAN being transported as an L2 circuit, or may be a loopback
          address terminating inside the router (e.g. if L2 circuits are being
          used within a multipoint VPN) or may be an anycast address
          terminating on a data center virtual machine.</t>

          <t>Destination Address. IPv6 destination address for the tunnel. As
          with the source address this may correspond to a port or VLAN being
          transported as an L2 circuit or may be a loopback or anycast
          address.</t>

          <t>Session ID. In the "Static 1:1 mapping" case described in <xref
          target="sec_static_mapping"/>, the IPv6 address resolves to an
          L2TPv3 session immediately, thus the Session ID may be ignored upon
          receipt. For compatibility with other tunnel termination platforms
          supporting only 2-stage resolution (IPv6 Address + Session ID), this
          specification recommends supporting explicit configuration of
          Session ID to any value other than zero. For cases where both tunnel
          endpoints support one-stage resolution (IPv6 Address only), this
          specification recommends setting the Session ID to all ones for easy
          identification in case of troubleshooting.</t>

          <t>Cookie. 64 bits, configured and described as in <xref
          target="sec_auth_key"/>. All packets for a destined L2 Circuit (or
          L2TPv3 Session) must match the configured Cookie value or be
          discarded (see <xref target="RFC3931">RFC3931</xref> for more
          details).</t>

          <t>Payload. The customer data, with s-tag or s-tag/c-tag removed. As
          noted above preamble and FCS are stripped before encapsulation. A
          new FCS will be added at each hop when the IP packet is
          transmitted.</t>
        </list></t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>None.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Packet spoofing for any type of Virtual Private Network (VPN)
      tunneling protocol is of particular concern as insertion of carefully
      constructed rogue packets into the VPN transit network could result in a
      violation of VPN traffic separation, leaking data into a customer VPN.
      This is complicated by the fact that it may be particularly difficult
      for the operator of the VPN to even be aware that it has become a point
      of transit into or between customer VPNs.</t>

      <t>Keyed IPv6 encapsulation provides traffic separation for its VPNs via
      use of separate 128-bit IPv6 addresses to identify the endpoints. The
      mandatory authentication key carried in the L2TPv3 cookie field,
      provides an additional check to ensure that an arriving packet is
      intended for the identified tunnel.</t>

      <t>In the presence of a blind packet spoofing attack, the authentication
      key provides security against inadvertent leaking of frames into a
      customer VPN, like in case of L2TPv3 <xref
      target="RFC3931">RFC3931</xref>. To illustrate the type of security that
      it is provided in this case, consider comparing the validation of a
      64-bit Cookie in the L2TPv3 header to the admission of packets that
      match a given source and destination IP address pair. Both the source
      and destination IP address pair validation and Cookie validation consist
      of a fast check on cleartext header information on all arriving packets.
      However, since L2TPv3 uses its own value, it removes the requirement for
      one to maintain a list of (potentially several) permitted or denied IP
      addresses, and moreover, to guard knowledge of the permitted IP
      addresses from hackers who may obtain and spoof them. Further, it is far
      easier to change a compromised L2TPv3 Cookie than a compromised IP
      address," and a cryptographically random <xref
      target="RFC4086">RFC4086</xref> value is far less likely to be
      discovered by brute-force attacks compared to an IP address.</t>

      <t>For protection against brute-force, blind, insertion attacks, a 64-
      bit Cookie MUST be used with all tunnels.</t>

      <t>Note that the Cookie provides no protection against a sophisticated
      man-in-the-middle attacker who can sniff and correlate captured data
      between nodes for use in a coordinated attack.</t>

      <t>The L2TPv3 64-bit cookie must not be regarded as a substitute for
      security such as that provided by IPsec when operating over an open or
      untrusted network where packets may be sniffed, decoded, and correlated
      for use in a coordinated attack.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>...</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include='reference.RFC.3931'?>

      <?rfc include='reference.RFC.4086'?>

      <?rfc include='reference.RFC.4719'?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.1700'?>
    </references>
  </back>
</rfc>
