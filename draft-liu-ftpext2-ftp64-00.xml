<?xml version="1.0" ?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<?rfc compact="yes" ?> 
<?rfc subcompact="yes" ?>


<rfc category="bcp" ipr="trust200902" docName="draft-liu-ftpext2-ftp64-00">
<front>
<title abbrev="Recommendation for IPv6 FTP client">Recommendations for FTP Clients and Servers in the IPv6/IPv4 Transition Scenario </title>

<author initials="D." surname="Liu" fullname="Dapeng Liu">
  <organization>China Mobile</organization>
  <address>
    <postal>
      <street>Unit2, 28 Xuanwumenxi Ave,Xuanwu District</street>
      <city>Beijing 100053</city>
      <country>China</country>
    </postal>
    <email>liudapeng@chinamobile.com</email>
  </address>
</author>

<author initials="Iljitsch van" surname="Beijnum" fullname="Iljitsch van Beijnum"> 
	<organization>IMDEA Networks</organization>
		<address>
			<postal>
				<street>Avda. del Mar Mediterraneo, 22, Leganes</street> <city>Madrid  28918</city> 
				<country>Spain</country>
			</postal>
		<email>iljitsch@muada.com</email>
		</address>
</author>

<author initials="Hui." surname="Deng" fullname="Hui Deng"><organization>China Mobile</organization><address>
<postal>
<street>Unit2, 28 Xuanwumenxi Ave,Xuanwu District</street><city>Beijing 100053</city><country>China</country></postal>
<email>denghui@chinamobile.com</email></address>
</author>

<author initials="Z." surname="Cao" fullname="Zhen Cao">
	<organization>China Mobile</organization><address>
	  <postal>
		  <street>Unit2, 28 Xuanwumenxi Ave,Xuanwu District</street>
		  <city>Beijing 100053</city>
		  <country>China</country>
		  </postal>
	  <email>caozhen@chinamobile.com</email>
  </address>
</author>


<date month="July" year="2013"/><area></area><workgroup>FTPEXT2</workgroup>

 <abstract>
  <t>The File transfer protocol, which was originally defined in RFC 114 
  and published in 1971, well before TCP and IP were created.
  However, it is still in wide use. Many FTP servers implement
  RFC 959, which requires IPv4. RFC 2428 defines extensions
  that allow FTP to work over IPv6 by
  introducing the EPRT and EPSV commands.

When IPv6 FTP clients attempt to communicate with IPv4 FTP servers
through an IPv6-IPv4 translator, only certain combinations of FTP
client and server behavior lead to successful file transfers.

  This document proposes the best current practice
  for IPv6 FTP client implementations in the IPv6-IPv4 translation scenario,
allowing file transfers to succeed without the presence of an
ALG (Application Layer Gateway).
  </t>
</abstract>
</front>

<middle>
<section anchor="intro" title="Introduction">

   <t>Figure 1 illustrates FTP <xref target="RFC0959" /> in the IPv6-IPv4 translation scenario.</t>
    <figure align="center" anchor="xml_happy">
       
        <artwork align="center"><![CDATA[
+------------------------------------------------------+
|                                                      |
|                                                      |
| +----------------+                  +--------------+ |
| | IPv6 Network   |                  | IPv4 Network | |
| | +-----------+  |  +------------+  | +----------+ | |
| | |IPv6       |--|--| IPv6-IPv4  |--|-|IPv4      | | |
| | |FTP Client |  |  | Translator |  | |FTP Server| | |
| | +-----------+  |  +------------+  | +----------+ | |
| |                |                  |              | |
| +----------------+                  +--------------+ |
|                                                      |
|                                                      |
+------------------------------------------------------+
      Figure 1. IPv6-IPv4 translation the FTP scenario.
            ]]></artwork>

        
      </figure>
 
<t>The IPv6 FTP client is situated in an IPv6 network and 
communicates with an IPv4 server that is situated in an IPv4 network
through a translation box in the middle. Here "IPv6 FTP client" means 
an FTP client that supports IPv6, i.e., it implements 
<xref target="RFC2428" />. "IPv4 server" means an FTP
server with only IPv4 connectivity, which may or may not
support the RFC2428 extensions.</t>

<t>The situation where a legacy IPv4 FTP client that does not
support the RFC2428 extensions runs on the IPv6 host is out of
scope.</t>

<t>FTP has two operation modes: passive mode and active mode. In passive
   mode, the server listens on a TCP port, which the client connects to. In
   active mode, the server connects back to the client, using the IP
   address and port number provided by the client.</t> 
   
<t>RFC2428 specifies extensions to the FTP protocol which let it work
over IPv6, and make it easier for FTP to work through firewalls and NATs.
Two new commands are specified: EPRT and EPSV.
The EPRT command is an extension of the existing PORT command.
   It provides and IP address (IPv4 or IPv6) and a port number to the
server to connect to. The EPSV command is a simplified version of
the PASV command. Unlike with PASV, with EPSV the server does not
respond with an IP address for the client to connect to. Instead, the
server only specifies a port number. The IP address the client should
connect to is the same IP address that the client is already connected
to for the control channel TCP session.</t>

<t>Many servers do not support EPSV command today, or send a valid response,
but the subsequent data channel connection fails to establish.
However, most of these servers support PASV mode.
This document provides recommendations for IPv6 FTP clients
that allow them to successfully communicate
   with an IPv4 server through a stateless <xref target="RFC6145" />
or stateful <xref target="RFC6146" /> IPv6-IPv4 translation box.</t>   
</section>

<section title="Conventions used in this document">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL","SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document 
are to be interpreted as described in <xref target="RFC2119" />.</t>
</section>


<section title="IPv6 FTP Client Considerations">

<t>According to <xref target="RFC2428" />, the IPv6 client SHOULD 
   support EPSV and EPRT commands. This document recommends that the IPv6 FTP client SHOULD
   support both EPSV and PASV command. The reason is that during the early stage
   of IPv6 transition, many FTP servers will be still located in the IPv4
   Internet and not support the EPSV command. This requirement implies
   that the IPv6 FTP client SHOULD support both IPv4 and IPv6.
   This requirement is reasonable since backward compatibility to IPv4
   is one of the basic requirements for any IPv6 applications especially
   during the early stage of IPv6 transition.</t>
   

<t>Most of today's dedicated IPv4 FTP client software uses passive mode
   as the default mode. According to RFC 2428, 
   for IPv6 FTP client, EPSV command MUST be used when the control and data 
   connection is established between the same two machines. The reasons that 
   both IPv4 and IPv6 FTP client prefer passive mode includes:

<list style="numbers">

<t>Active mode of FTP may introduce security issues. 
   For example, the attacker may use PORT/EPRT command to specify a victim host's 
   IP address and port, and then the FTP serve will send TCP SYN to the victim host 
   to attempt to establish data connection. This kind of attack is recognized as
   FTP reflects attack.</t>

<t>Using passive mode of FTP can traverse
   firewalls and NATs more easily because passive mode does not require the middle box 
   to implement an FTP ALG (Application Layer Gateway).
 </t>
</list>
</t>

<t>Considering the above, it is recommended that the IPv6 FTP client SHOULD use
   passive mode instead of active mode whenever it is possible. 
</t> 
   
   <t>In IPv6/IPv4 translation scenario, an IPv6 FTP client which is located 
    in the IPv6 network may need to communicate with an IPv4 server which is 
    located in the IPv4 network.

   In this case, the IPv4 server may not support EPSV command and if the IPv6
   FTP client uses the EPSV command, the command may not be recognized
so no file transfer can be established.</t> 

   <t>This document recommends that the IPv6 FTP
   client SHOULD retry with PASV command when EPSV command fails with
a 50x response from the server, the server sends a 229 response but
the data connection cannot be established, or the control channel TCP
session is lost between the 229 response and any other messages sent
over the control channel by the server.
</t>

<t>After the client issues a PASV command, the
IPv4 FTP server will respond with a 227 message that
   contains an IPv4 address and port number of the FTP server 
   for the client to connect to. The IPv6 FTP client MUST ignore the IPv4
   address provided in the response; instead, it MUST use the remote IP
address used for the control channel to establish the
   data connection. </t>

   <t>Many IPv4 FTP clients already ignore the IP address in the 227
response because this way, the data connection will still be
established if the server includes its <xref target="RFC1918" />
address in the 227 response. Also, if a dual stack host connects
over IPv6 for the control channel and then over IPv4 for the data
channel, the server may reject the data channel connection because
it comes from an unexpected address.
   </t>

   <t>
    Another important benefit of this approach is that the translation box 
    will not need to implement FTP ALG <xref target="RFC6384" />. 
   </t>
 </section>

<section title="FTP Server considerations">
<t>Clients conforming to the recommendations listed above will
be able to transfer files to/from all FTP servers. However,
FTP servers are encouraged to support the EPSV command if this
can be done successfully. If the server cannot successfully
use the EPSV command, for instance, because the server is
located behind an application aware firewall that only allows
incoming data connections after observing 227 responses in the
FTP control channel, then servers SHOULD return a 502 response
when the client sends the EPSV command.
</t>

<t>
Implementers of FTP server software SHOULD include a setting
that allows the EPSV command to return a 502 response.
</t>
</section>


<section title="FTP ALG considerations">

<t>This document recommends that the translation box does not need to implement FTP ALG
<xref target="RFC6384" />
  in the IPv6/IPv4 translation scenario. Instead, it is recommended that the IPv6 FTP
  client implementation should comply with this document to avoid the necessity of 
  implementation FTP ALG in the IPv6/IPv4 translation box.
</t>

<t>Adjusting the behaviour of IPv6 clients is feasible because IPv6 is
   not widely deployed and there are not much IPv6 FTP client been deployed
   currently. It is a good chance to publish this recommendation before the
   widely deployment of IPv6 and IPv6 FTP client.</t>

<section title="FTP ALG limitations">

<t>Implementing FTP ALG in the translation box may have some limitations,
   such as:</t>
<t> 1) FTP ALG may case to increase the complexity of translation box,
      since FTP ALG needs to understand FTP protocol and translate the
      application layer payload and update the header of FTP control
      packets. ALG could also cause impair the translation
      box's performance.</t>
      
<t>2) From the evolution perspective, if the network continues to
      provide support of FTP ALG indefinitely, the ALG function of the
      translation box will become more and more complex.</t>
</section>      
</section>   
     


<section anchor="security" title="Security Considerations">
<t>
FTP security is discussed in <xref target="RFC2577" />. The extension that
is defined in this document will not impact the FTP security.
</t>
</section>

<section title="IANA Considerations">
<t>No IANA action is required.</t>
</section>


<section title="Acknowledgments">
<t>The authors want to thanks the following people for their useful suggestions:
Robert Oslin, Anthony Bryan.
</t>
</section>

</middle>

<back>

<references title="Normative References">
<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.0959.xml"?>
<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2428.xml"?>
<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
</references>
             
<references title="Informative References">

<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.1918.xml"?>     
<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2577.xml"?>
<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6145.xml"?>
<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6146.xml"?>
<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6384.xml"?>
      

</references>

</back>
</rfc>
