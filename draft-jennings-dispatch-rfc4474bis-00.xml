<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc rfcedstyle="no" ?>
<?rfc tocdepth="4"?>

<!-- TODO - A bunch of the refs are wrong and still numeric - search for [ -->

<rfc category="std" docName="draft-jennings-dispatch-rfc4474bis-00"
     ipr="pre5378Trust200902">
  <front>
    <title abbrev="SIP Identity">Authenticated Identity Management in the
    Session Initiation Protocol (SIP)</title>

    <author fullname="Jon Peterson" initials="J." surname="Peterson">
      <organization>NeuStar</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <region></region>

          <code></code>

          <country></country>
        </postal>

        <email>jon.peterson@neustar.biz</email>
      </address>
    </author>

    <author fullname="Cullen Jennings" initials="C." surname="Jennings">
      <organization>Cisco</organization>

      <address>
        <postal>
          <street>400 3rd Avenue SW, Suite 350</street>

          <city>Calgary</city>

          <region>AB</region>

          <code>T2P 4H2</code>

          <country>Canada</country>
        </postal>

        <email>fluffy@iii.ca</email>
      </address>
    </author>

    <author fullname="Eric Rescorla" initials="E.K." surname="Rescorla">
      <organization>RTFM, Inc.</organization>

      <address>
        <postal>
          <street>2064 Edgewood Drive</street>

          <city>Palo Alto</city>

          <region>CA</region>

          <code>94303</code>

          <country>USA</country>
        </postal>

        <phone>+1 650 678 2350</phone>

        <email>ekr@rtfm.com</email>
      </address>
    </author>

    <date day="29" month="May" year="2013" />

    <area>RAI</area>

    <abstract>
      <t>The existing security mechanisms in the Session Initiation Protocol
      (SIP) are inadequate for cryptographically assuring the identity of the
      end users that originate SIP requests, especially in an interdomain
      context. This document defines a mechanism for securely identifying
      originators of SIP messages. It does so by defining two new SIP header
      fields, Identity, for conveying a signature used for validating the
      identity, and Identity-Info, for conveying a reference to the
      certificate of the signer.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="sec-preamble" title="Preamble">
      <t>The sip-identity drafts that lead to <xref target="RFC4474">RFC
      4474</xref> were first published in 2002. Since that point many things
      have changed that impact that design. <list style="symbols">
          <t>The DNS root has been signed.</t>

          <t> SPAM continues to be a problem.</t>

          <t>A clearer understanding has evolved of the use of B2BUAs including
          standardization such as the STRAW WG.</t>

          <t>Multipart MIME has failed as a SIP extension mechanism.</t>

          <t>Widespread identity providers such as Facebook have emerged.</t>

          <t>Techniques for non-carrier entities to verify phone numbers and then
          use them for addressing (such as Apple's iMessage) have been shown to
          be commercially feasible.</t>

          <t>Substantial portions of commercial, government, and personal voice
          communications rely on SIP at some stage in the communications.</t>

          <t>The cost of operating large databases has fallen and outsourced
          versions of these databases have become cheaply available. </t>

          <t>Extensive experience and user research has improved our
          understanding of how to present security information to users.</t>

          <t>The world is in the a huge transition to mobile devices. Even the
          most limited modern mobile devices have user interface and
          computational capabilities that greatly exceed a 2002-era SIP
          phone.</t>
        </list></t>

      <t>The authors believe that the confluence of changing technology, the
      evolution of mobile devices and internet, and a political will to change
      make this the right time to consider an expansion of the scope of 4474
      to solve the following problems: <list style="symbols">

          <t>Assert strong identity for domain scoped names such as
          alice@example.com</t>

          <t>Assert strong identity for E.164 numbers such as +1 408
          555-1212</t>

          <t>Provide organization attributes such as "this is a Bank".</t>

          <t>Work for calls crossing even the most adverse networks such as
          the PSTN.</t>

          <t>Provide reliable information about who is calling before the call
          is answered to help stop SPAM.</t>

          <t>Provide reliable information about who you are talking to.</t>

          <t>Work with evolving non SIP based communications systems such as
          WebRTC.</t>
        </list></t>

      <t>We believe it is possible to solve all of these in a way that is
      commercially viable, deployable, and provides a delightful user
      experience.</t>

      <t>The core problem in a global identity system with delegated names is
      understanding who is authorized to make assertions about a given name.
      The proposal is to solve that problem with a two pronged approach.</t>

      <t>First have responsibility for a number delegated down from the root
      in a series of delegation sub delegation towards the user. For example,
      the North American number operator may assign a portion of the +1 space
      to a service provider. That service provider may assign a sub space to a
      company and that company may assign a number to a user. At each level of
      delegation, cryptographic credentials could be provided that allow the
      user to prove the space was delegated to them given some common trust
      root. This approach is referred to as "delegation" and effectively works
      from the top down.</t>

      <t>The other prong to solving the problem is called "claims" and works
      via a bottom up approach. The end user of a number basically claims it
      and some trusted system validates this claim. The validation may be as
      simple as sending a SMS to the number or more complicated such as the
      VIPR system.</t>

      <t>The delegation approach creates an easier user experience but is
      harder to deploy from a business incentive point of view so our approach
      is to do both and work down from the top and up from the bottom with a
      meet in the middle approach to coverage of the full name space.</t>

      <t>User agents that have a credential (whether of the 
      delegation or claim variety) for a name can create
      two types of assertions: replay assertions and reliance assertions.
      These two assertion are signed over a different set of the call
      information and protect against different types of attacks. Some
      networks might modify the signaling in ways that impact one of these
      assertions but not the other.</t>

      <t>The assertions are passed from the caller to the callee for
      verification. This can be done by either passing the assertion along with
      the signaling, or alternatively passing it through a web based Call Detail
      Service (CDS) where the caller saves the assertion on the Call Detail
      Service and the callee retrieves it from the Call Detail Service
      service. There are some call signaling environments, such as when a call
      passes through the PSTN, where it is not possible to transfer the
      assertion in the call signaling path. The Call Detail Service is in place
      to make things work in this environment thought some privacy information
      around who is calling who is reveled to the Call Detail Service service.
      An outline for this design is described in <xref
      target="I-D.rescorla-callerid-fallback" />.</t>

    </section>

    <section anchor="sec-prop" title="Scope of Proposed Changes">

      <!--
      <t>To summarize the work proposed and changes from RFC 4474. <list
          style="numbers">
          <t>Add a delegation approach for E.164 numbers.</t>

          <t>Add a claims approach.</t>

          <t>Provide two types of assertions instead of one.</t>

          <t>Add an out of band rendezvous service to pass assertions.</t>
        </list></t>
      -->

      <section anchor="sec-prop-id-info"
               title="Changes to the Identity-Info Header">

        <t>Currently, RFC4474 restricts the subject of the certificate to a
        domain name, and accordingly the RFC4474 Identity-Info header contains a
        URI which designates a certificate whose subject (more precisely,
        subjectAltName) must correspond to the domain of the URI in the From
        header field value of the SIP request. Per the analysis in <xref
        target="I-D.peterson-secure-origin-ps" />, we propose to relax this to
        allow designating an alternative authority for telephone numbers, when
        telephone numbers appear in the From header field value.</t>

        <t>These changes will allow the Identity-Info URI to point to the
        certificate with authority over the calling telephone number. A
        verification service will therefore authorize a SIP request when the
        telephone number in the From header field value agrees with the subject
        of the certificate. Verification services must of course trust the
        certificate authority that issued the certificate in question. To
        implement this change to the Identity-Info header, we must allow for two
        possibilities for the conveyance of a telephone number in a request:
        appearing within a tel URI or appearing as the user portion of a SIP
        URI. Therefore, we must prescribe verification service behind in the
        case where the From header field value URI contains a telephone user
        part followed by a domain -- which should the verification service
        expect to find in a certificate?</t>

        <t>There are also a few other potential changes within the scope of a
        revision to the Identity-Info header. We might consider implementing
        enough flexibility in the URI to allow a model more like the IdP model
        described in <xref target="I-D.rescorla-rtcweb-generic-idp" />; this could be
        useful as RTCWeb sees increasing deployment. We also should consider any
        implications of the signing of the DNSSEC root and the DANE
        specifications to the existing Identity-Info uses with domain name. At a
        high level, it is not expected that the proposed changes will radically
        alter the semantics of Identity-Info.</t>

        <t>Although deployment of RFC4474 to date has been essentially
        non-existent, we will during this revision process consider any
        realistic backwards compatibility concerns.</t>
      </section>

      <section anchor="sec-prop-id-header"
               title="Changes to the Identity Header">

        <t>Per the analysis in <xref
        target="I-D.peterson-secure-origin-ps" />, we propose
        to change the signature mechanism that RFC44474 specified for the
        Identity header: in particular, to replace this signature mechanism with
        one that is more likely to survive end-to-end in SIP networks where
        intermediaries act as back-to-back user agents rather than proxy
        servers.</t>

        <t>To accomplish this, we propose creating two distinct signatures
        within SIP requests: a replay assurance and a reliance assurance. The
        replay assurance prevents impersonation attacks by providing a signature
        over the From header field value and certain other headers which will
        allow a verification service to detect a cut-and-paste attack. The
        reliance assurance protects against men-in-the-middle unilaterally
        changing other parameters of the call: these include the target of
        future requests (Contact header field) and the entirely of the SDP,
        including the target IP address and ports which, if unprotected, can
        allow a man-in-the-middle to impersonate an intended
        listener. Verification services behavior would change to allow them to
        decide, based on their configuration in a deployment environment,
        whether the replay assurance alone can realistically survive network
        transit, or if the reliance assurance should be available.</t>

        <t>There are a number of ways to implement this change to the signature
        in the Identity header field. One possibility is to design two 
        new headers, which we might call "Identity-Reliance" and "Identity-Replay"
        with the reliance signature being over a canonical representation of the
        reliance field and then the Identity-Replay header covering the
        From header field value, other headers needed for
        replay protection, and well as the contents of the Identity-Reliance
        header. It might also be possible to preserve the existing
        Identity header as the reliance header.
        There are however several similar alternatives we might
        consider, and some analysis will be required to identify the best
        option.</t>

        <t>In order to preserve critical security parameters even in adverse
        network conditions, the replay assurance integrity protection must
        always cover security parameters of the SDP required to negotiate
        media-level security. There may be other exception cases, or
        extensibility mechanisms, worth considering here. In cases where the
        From header field value of a SIP request contains a SIP URI with a
        telephone number user part, we will also consider replay assurance
        canonicalizations that do not cover the domain portion of the URI.</t>

        <t>We will furthermore give due consideration to changes in SIP
        architecture and deployment since the publication of RFC4474, including
        the ongoing work in the STRAW working group.</t>

        <t>As with Identity-Info, any necessary consideration will be given to
        backwards compatibility of the Identity header.</t>
      </section>
    </section>

    <section anchor="sec-1" title="Introduction">
      <t>This document provides enhancements to the existing mechanisms for
      authenticated identity management in the Session Initiation Protocol
      (SIP, <xref target="RFC3261">RFC 3261</xref>). An identity, for the
      purposes of this document, is defined as a SIP URI, commonly a canonical
      address-of-record (AoR) employed to reach a user (such as
      'sip:alice@atlanta.example.com').</t>

      <t><xref target="RFC3261">RFC 3261</xref> stipulates several places
      within a SIP request where a user can express an identity for
      themselves, notably the user-populated From header field. However, the
      recipient of a SIP request has no way to verify that the From header
      field has been populated appropriately, in the absence of some sort of
      cryptographic authentication mechanism.</t>

      <t><xref target="RFC3261">RFC 3261</xref> specifies a number of security
      mechanisms that can be employed by SIP user agents (UAs), including
      Digest, Transport Layer Security (TLS), and S/MIME (implementations may
      support other security schemes as well). However, few SIP user agents
      today support the end-user certificates necessary to authenticate
      themselves (via S/MIME, for example), and furthermore Digest
      authentication is limited by the fact that the originator and
      destination must share a prearranged secret. It is desirable for SIP
      user agents to be able to send requests to destinations with which they
      have no previous association -- just as in the telephone network today,
      one can receive a call from someone with whom one has no previous
      association, and still have a reasonable assurance that the person's
      displayed Caller-ID is accurate. A cryptographic approach, like the one
      described in this document, can probably provide a much stronger and
      less spoofable assurance of identity than the telephone network provides
      today.</t>
    </section>

    <section anchor="sec-2" title="Terminology">
      <t>In this document, the key words "MUST", "MUST NOT", "REQUIRED",
      "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT
      RECOMMENDED", "MAY", and "OPTIONAL" are to be interpreted as described
      in <xref target="RFC2119">RFC 2119</xref> and <xref target="RFC6919">RFC
      6919</xref>.</t>
    </section>

    <section anchor="sec-3" title="Background">
      <t>The usage of many SIP applications and services is governed by
      authorization policies. These policies may be automated, or they may be
      applied manually by humans. An example of the latter would be an
      Internet telephone application that displays the Caller-ID of a caller,
      which a human may review before answering a call. An example of the
      former would be a presence service that compares the identity</t>

      <t>of potential subscribers to a whitelist before determining whether it
      should accept or reject the subscription. In both of these cases,
      attackers might attempt to circumvent these authorization policies
      through impersonation. Since the primary identifier of the sender of a
      SIP request, the From header field, can be populated arbitrarily by the
      controller of a user agent, impersonation is very simple today. The
      mechanism described in this document aspires to provide a strong
      identity system for SIP in which authorization policies cannot be
      circumvented by impersonation.</t>

      <t>All <xref target="RFC3261">RFC 3261</xref> compliant user agents
      support Digest authentication, which utilizes a shared secret, as a
      means for authenticating themselves to a SIP registrar. Registration
      allows a user agent to express that it is an appropriate entity to which
      requests should be sent for a particular SIP AoR URI (e.g.,
      'sip:alice@atlanta.example.com').</t>

      <t>By the definition of identity used in this document, registration is
      a proof of the identity of the user to a registrar. However, the
      credentials with which a user agent proves its identity to a registrar
      cannot be validated by just any user agent or proxy server -- these
      credentials are only shared between the user agent and their domain
      administrator. So this shared secret does not immediately help a user to
      authenticate to a wide range of recipients. Recipients require a means
      of determining whether or not the 'return address' identity of a
      non-REGISTER request (i.e., the From header field value) has
      legitimately been asserted.</t>

      <t>The AoR URI used for registration is also the URI with which a UA
      commonly populates the From header field of requests in order to provide
      a 'return address' identity to recipients. From an authorization
      perspective, if you can prove you are eligible to register in a domain
      under a particular AoR, you can prove you can legitimately receive
      requests for that AoR, and accordingly, when you place that AoR in the
      From header field of a SIP request other than a registration (like an
      INVITE), you are providing a 'return address' where you can legitimately
      be reached. In other words, if you are authorized to receive requests
      for that 'return address', logically, it follows that you are also
      authorized to assert that 'return address' in your From header field.
      This is of course only one manner in which a domain might determine how
      a particular user is authorized to populate the From header field; as an
      aside, for other sorts of URIs in the From (like anonymous URIs), other
      authorization policies would apply.</t>

      <t>Ideally, then, SIP user agents should have some way of proving to
      recipients of SIP requests that their local domain has authenticated
      them and authorized the population of the From header field. This
      document proposes a mediated authentication architecture for SIP in
      which requests are sent to a server in the user's local domain, which
      authenticates such requests (using the same practices by which the
      domain would authenticate REGISTER requests). Once a message has been
      authenticated, the local domain then needs some way to communicate to
      other SIP entities that the sending user has been authenticated and its
      use of the From header field has been authorized. This document
      addresses how that imprimatur of authentication can be shared.</t>

      <t><xref target="RFC3261">RFC 3261</xref> already describes an
      architecture very similar to this in Section 26.3.2.2, in which a user
      agent authenticates itself to a local proxy server, which in turn
      authenticates itself to a remote proxy server via mutual TLS, creating a
      two-link chain of transitive authentication between the originator and
      the remote domain. While this works well in some architectures, there
      are a few respects in which this is impractical. For one, transitive
      trust is inherently weaker than an assertion that can be validated
      end-to-end. It is possible for SIP requests to cross multiple
      intermediaries in separate administrative domains, in which case
      transitive trust becomes even less compelling.</t>

      <t>One solution to this problem is to use 'trusted' SIP intermediaries
      that assert an identity for users in the form of a privileged SIP
      header. A mechanism for doing so (with the P-Asserted-Identity header)
      is given in [12]. However, this solution allows only hop- by-hop trust
      between intermediaries, not end-to-end cryptographic authentication, and
      it assumes a managed network of nodes with strict mutual trust
      relationships, an assumption that is incompatible with widespread
      Internet deployment.</t>

      <t>Accordingly, this document specifies a means of sharing a
      cryptographic assurance of end-user SIP identity in an interdomain or
      intradomain context that is based on the concept of an 'authentication
      service' and a new SIP header, the Identity header. Note that the scope
      of this document is limited to providing this identity assurance for SIP
      requests; solving this problem for SIP responses is more complicated and
      is a subject for future work.</t>

      <t>This specification allows either a user agent or a proxy server to
      provide identity services and to verify identities. To maximize
      end-to-end security, it is obviously preferable for end-users to acquire
      their own certificates and corresponding private keys; if they do, they
      can act as an authentication service. However, end- user certificates
      may be neither practical nor affordable, given the difficulties of
      establishing a Public Key Infrastructure (PKI) that extends to
      end-users, and moreover, given the potentially large number of SIP user
      agents (phones, PCs, laptops, PDAs, gaming devices) that may be employed
      by a single user. In such environments, synchronizing keying material
      across multiple devices may be very complex and requires quite a good
      deal of additional endpoint behavior. Managing several certificates for
      the various devices is also quite problematic and unpopular with users.
      Accordingly, in the initial use of this mechanism, it is likely that
      intermediaries will instantiate the authentication service role.</t>
    </section>

    <section anchor="sec-4" title="Overview of Operations">
      <t>This section provides an informative (non-normative) high-level
      overview of the mechanisms described in this document.</t>

      <t>Imagine the case where Alice, who has the home proxy of example.com
      and the address-of-record sip:alice@example.com, wants to communicate
      with sip:bob@example.org.</t>

      <t>Alice generates an INVITE and places her identity in the From header
      field of the request. She then sends an INVITE over TLS to an
      authentication service proxy for her domain.</t>

      <t>The authentication service authenticates Alice (possibly by sending a
      Digest authentication challenge) and validates that she is authorized to
      assert the identity that is populated in the From header field. This
      value may be Alice's AoR, or it may be some other value that the policy
      of the proxy server permits her to use. It then computes a hash over
      some particular headers, including the From header field and the bodies
      in the message. This hash is signed with the certificate for the domain
      (example.com, in Alice's case) and inserted in a new header field in the
      SIP message, the 'Identity' header.</t>

      <t>The proxy, as the holder of the private key of its domain, is
      asserting that the originator of this request has been authenticated and
      that she is authorized to claim the identity (the SIP address-
      of-record) that appears in the From header field. The proxy also inserts
      a companion header field, Identity-Info, that tells Bob how to acquire
      its certificate, if he doesn't already have it.</t>

      <t>When Bob's domain receives the request, it verifies the signature
      provided in the Identity header, and thus can validate that the domain
      indicated by the host portion of the AoR in the From header field
      authenticated the user, and permitted the user to assert that From
      header field value. This same validation operation may be performed by
      Bob's user agent server (UAS).</t>
    </section>

    <section anchor="sec-5" title="Authentication Service Behavior">
      <t>This document defines a new role for SIP entities called an
      authentication service. The authentication service role can be
      instantiated by a proxy server or a user agent. Any entity that
      instantiates the authentication service role MUST possess the private
      key of a domain certificate. Intermediaries that instantiate this role
      MUST be capable of authenticating one or more SIP users that can
      register in that domain. Commonly, this role will be instantiated by a
      proxy server, since these entities are more likely to have a static
      hostname, hold a corresponding certificate, and have access to SIP
      registrar capabilities that allow them to authenticate users in their
      domain. It is also possible that the authentication service role might
      be instantiated by an entity that acts as a redirect server, but that is
      left as a topic for future work.</t>

      <t>SIP entities that act as an authentication service MUST add a Date
      header field to SIP requests if one is not already present (see <xref
      target="sec-syntax"></xref> for information on how the Date header field
      assists verifiers). Similarly, authentication services MUST add a
      Content- Length header field to SIP requests if one is not already
      present; this can help verifiers to double-check that they are hashing
      exactly as many bytes of message-body as the authentication service when
      they verify the message.</t>

      <t>Entities instantiating the authentication service role perform the
      following steps, in order, to generate an Identity header for a SIP
      request:</t>

      <t>Step 1:</t>

      <t>The authentication service MUST extract the identity of the sender
      from the request. The authentication service takes this value from the
      From header field; this AoR will be referred to here as the 'identity
      field'. If the identity field contains a SIP or SIP Secure (SIPS) URI,
      the authentication service MUST extract the hostname portion of the
      identity field and compare it to the domain(s) for which it is
      responsible (following the procedures in <xref target="RFC3261">RFC
      3261</xref>, Section 16.4), used by a proxy server to determine the
      domain(s) for which it is responsible). If the identity field uses the
      TEL URI scheme, the policy of the authentication service determines
      whether or not it is responsible for this identity; see <xref
      target="sec-identity-tel"></xref> for more information. If the
      authentication service is not responsible for the identity in question,
      it SHOULD process and forward the request normally, but it MUST NOT add
      an Identity header; see below for more information on authentication
      service handling of an existing Identity header.</t>

      <t>Step 2:</t>

      <t>The authentication service MUST determine whether or not the sender
      of the request is authorized to claim the identity given in the identity
      field. In order to do so, the authentication service MUST authenticate
      the sender of the message. Some possible ways in which this
      authentication might be performed include: <list>
          <t>If the authentication service is instantiated by a SIP
          intermediary (proxy server), it may challenge the request with a 407
          response code using the Digest authentication scheme (or viewing a
          Proxy-Authentication header sent in the request, which was sent in
          anticipation of a challenge using cached credentials, as described
          in <xref target="RFC3261">RFC 3261</xref>, Section 22.3). Note that
          if that proxy server is maintaining a TLS connection with the client
          over which the client had previously authenticated itself using
          Digest authentication, the identity value obtained from that
          previous authentication step can be reused without an additional
          Digest challenge.</t>

          <t>If the authentication service is instantiated by a SIP user
          agent, a user agent can be said to authenticate its user on the
          grounds that the user can provision the user agent with the private
          key of the domain, or preferably by providing a password that
          unlocks said private key.</t>
        </list></t>

      <t>Authorization of the use of a particular username in the From header
      field is a matter of local policy for the authentication service, one
      that depends greatly on the manner in which authentication is performed.
      For example, one policy might be as follows: the username given in the
      'username' parameter of the Proxy-Authorization header MUST correspond
      exactly to the username in the From header field of the SIP message.
      However, there are many cases in which this is too limiting or
      inappropriate; a realm might use 'username' parameters in
      Proxy-Authorization that do not correspond to the user-portion of SIP
      From headers, or a user might manage multiple accounts in the same
      administrative domain. In this latter case, a domain might maintain a
      mapping between the values in the 'username' parameter of Proxy-
      Authorization and a set of one or more SIP URIs that might legitimately
      be asserted for that 'username'. For example, the username can
      correspond to the 'private identity' as defined in Third Generation
      Partnership Project (3GPP), in which case the From header field can
      contain any one of the public identities associated with this private
      identity. In this instance, another policy might be as follows: the URI
      in the From header field MUST correspond exactly to one of the mapped
      URIs associated with the 'username' given in the Proxy-Authorization
      header. Various exceptions to such policies might arise for cases like
      anonymity; if the AoR asserted in the From header field uses a form like
      'sip:anonymous@example.com', then the 'example.com' proxy should
      authenticate that the user is a valid user in the domain and insert the
      signature over the From header field as usual.</t>

      <t>Note that this check is performed on the addr-spec in the From header
      field (e.g., the URI of the sender, like
      'sip:alice@atlanta.example.com'); it does not convert the display- name
      portion of the From header field (e.g., 'Alice Atlanta'). Authentication
      services MAY check and validate the display-name as well, and compare it
      to a list of acceptable display-names that may be used by the sender; if
      the display-name does not meet policy constraints, the authentication
      service MUST return a 403 response code. The reason phrase should
      indicate the nature of the problem; for example, "Inappropriate Display
      Name". However, the display-name is not always present, and in many
      environments the requisite operational procedures for display-name
      validation may not exist. For more information, see <xref
      target="sec-display-name"></xref>.</t>

      <t>Step 3:</t>

      <t>The authentication service SHOULD ensure that any preexisting Date
      header in the request is accurate. Local policy can dictate precisely
      how accurate the Date must be; a RECOMMENDED maximum discrepancy of ten
      minutes will ensure that the request is unlikely to upset any verifiers.
      If the Date header contains a time different by more than ten minutes
      from the current time noted by the authentication service, the
      authentication service SHOULD reject the request. This behavior is not
      mandatory because a user agent client (UAC) could only exploit the Date
      header in order to cause a request to fail verification; the Identity
      header is not intended to provide a source of non-repudiation or a
      perfect record of when messages are processed. Finally, the
      authentication service MUST verify that the Date header falls within the
      validity period of its certificate. For more information on the security
      properties associated with the Date header field value, see <xref
      target="sec-syntax"></xref>.</t>

      <t>Step 4:</t>

      <t>The authentication service MUST form the identity signature and add
      an Identity header to the request containing this signature. After the
      Identity header has been added to the request, the authentication
      service MUST also add an Identity-Info header. The Identity-Info header
      contains a URI from which its certificate can be acquired. Details on
      the generation of both of these headers are provided in <xref
      target="sec-syntax"></xref>.</t>

      <t>Finally, the authentication service MUST forward the message
      normally.</t>

      <section anchor="sec-5.1"
               title="Identity within a Dialog and Retargeting">
        <t>Retargeting is broadly defined as the alteration of the Request-URI
        by intermediaries. More specifically, retargeting supplants the
        original target URI with one that corresponds to a different user, a
        user that is not authorized to register under the original target URI.
        By this definition, retargeting does not include translation of the
        Request-URI to a contact address of an endpoint that has registered
        under the original target URI, for example.</t>

        <t>When a dialog-forming request is retargeted, this can cause a few
        wrinkles for the Identity mechanism when it is applied to requests
        sent in the backwards direction within a dialog. This section provides
        some non-normative considerations related to this case.</t>

        <t>When a request is retargeted, it may reach a SIP endpoint whose
        user is not identified by the URI designated in the To header field
        value. The value in the To header field of a dialog-forming request is
        used as the From header field of requests sent in the backwards
        direction during the dialog, and is accordingly the header that would
        be signed by an authentication service for requests sent in the
        backwards direction. In retargeting cases, if the URI in the From
        header does not identify the sender of the request in the backwards
        direction, then clearly it would be inappropriate to provide an
        Identity signature over that From header. As specified above, if the
        authentication service is not responsible for the domain in the From
        header field of the request, it MUST NOT add an Identity header to the
        request, and it should process/forward the request normally.</t>

        <t>Any means of anticipating retargeting, and so on, is outside the
        scope of this document, and likely to have equal applicability to
        response identity as it does to requests in the backwards direction
        within a dialog. Consequently, no special guidance is given for
        implementers here regarding the 'connected party' problem;
        authentication service behavior is unchanged if retargeting has
        occurred for a dialog-forming request. Ultimately, the authentication
        service provides an Identity header for requests in the backwards
        dialog when the user is authorized to assert the identity given in the
        From header field, and if they are not, an Identity header is not
        provided.</t>

        <t>For further information on the problems of response identity and
        the potential solution spaces, see [15].</t>
      </section>
    </section>

    <section anchor="sec-verifier-behavior" title="Verifier Behavior">
      <t>This document introduces a new logical role for SIP entities called a
      server. When a verifier receives a SIP message containing an Identity
      header, it may inspect the signature to verify the identity of the
      sender of the message. Typically, the results of a verification are
      provided as input to an authorization process that is outside the scope
      of this document. If an Identity header is not present in a request, and
      one is required by local policy (for example, based on a
      per-sending-domain policy, or a per-sending-user policy), then a 428
      'Use Identity Header' response MUST be sent.</t>

      <t>In order to verify the identity of the sender of a message, an entity
      acting as a verifier MUST perform the following steps, in the order here
      specified.</t>

      <t>Step 1:</t>

      <t>The verifier MUST acquire the certificate for the signing domain.
      Implementations supporting this specification SHOULD have some means of
      retaining domain certificates (in accordance with normal practices for
      certificate lifetimes and revocation) in order to prevent themselves
      from needlessly downloading the same certificate every time a request
      from the same domain is received. Certificates cached in this manner
      should be indexed by the URI given in the Identity- Info header field
      value.</t>

      <t>Provided that the domain certificate used to sign this message is not
      previously known to the verifier, SIP entities SHOULD discover this
      certificate by dereferencing the Identity-Info header, unless they have
      some more efficient implementation-specific way of acquiring
      certificates for that domain. If the URI scheme in the Identity-Info
      header cannot be dereferenced, then a 436 'Bad Identity-Info' response
      MUST be returned. The verifier processes this certificate in the usual
      ways, including checking that it has not expired, that the chain is
      valid back to a trusted certification authority (CA), and that it does
      not appear on revocation lists. Once the certificate is acquired, it
      MUST be validated following the procedures in <xref target="RFC3280">RFC
      3280</xref>. If the certificate cannot be validated (it is self-signed
      and untrusted, or signed by an untrusted or unknown certificate
      authority, expired, or revoked), the verifier MUST send a 437
      'Unsupported Certificate' response.</t>

      <t>Step 2:</t>

      <t>The verifier MUST follow the process described in <xref
      target="sec-security-subordination"></xref> to determine if the signer
      is authoritative for the URI in the From header field.</t>

      <t>Step 3:</t>

      <t>The verifier MUST verify the signature in the Identity header field,
      following the procedures for generating the hashed digest-string
      described in <xref target="sec-syntax"></xref>. If a verifier determines
      that the signature on the message does not correspond to the
      reconstructed digest- string, then a 438 'Invalid Identity Header'
      response MUST be returned.</t>

      <t>Step 4:</t>

      <t>The verifier MUST validate the Date, Contact, and Call-ID headers in
      the manner described in <xref target="sec-security-digest"></xref>;
      recipients that wish to verify Identity signatures MUST support all of
      the operations described there. It must furthermore ensure that the
      value of the Date header falls within the validity period of the
      certificate whose corresponding private key was used to sign the
      Identity header.</t>
    </section>

    <section anchor="sec-7" title="Considerations for User Agent">
      <t>This mechanism can be applied opportunistically to existing SIP
      deployments; accordingly, it requires no change to SIP user agent
      behavior in order for it to be effective. However, because this
      mechanism does not provide integrity protection between the UAC and the
      authentication service, a UAC SHOULD implement some means of providing
      this integrity. TLS would be one such mechanism, which is attractive
      because it MUST be supported by SIP proxy servers, but is potentially
      problematic because it is a hop-by-hop mechanism. See <xref
      target="sec-secure-connect-auth-serv"></xref> for more information about
      securing the channel between the UAC and the authentication service.</t>

      <t>When a UAC sends a request, it MUST accurately populate the From
      header field with a value corresponding to an identity that it believes
      it is authorized to claim. In a request, it MUST set the URI portion of
      its From header to match a SIP, SIPS, or TEL URI AoR that it is
      authorized to use in the domain (including anonymous URIs, as described
      in <xref target="RFC3323">RFC 3323</xref>). In general, UACs SHOULD NOT
      use the TEL URI form in the From header field (see <xref
      target="sec-identity-tel"></xref>).</t>

      <t>Note that this document defines a number of new 4xx response codes.
      If user agents support these response codes, they will be able to
      respond intelligently to Identity-based error conditions.</t>

      <t>The UAC MUST also be capable of sending requests, including mid-call
      requests, through an 'outbound' proxy (the authentication service). The
      best way to accomplish this is using pre-loaded Route headers and loose
      routing. For a given domain, if an entity that can instantiate the
      authentication service role is not in the path of dialog-forming
      requests, identity for mid-dialog requests in the backwards direction
      cannot be provided.</t>

      <t>As a recipient of a request, a user agent that can verify signed
      identities should also support an appropriate user interface to render
      the validity of identity to a user. User agent implementations SHOULD
      differentiate signed From header field values from unsigned From header
      field values when rendering to an end-user the identity of the sender of
      a request.</t>
    </section>

    <section anchor="sec-8" title="Considerations for Proxy Servers">
      <t>Domain policy may require proxy servers to inspect and verify the
      identity provided in SIP requests. A proxy server may wish to ascertain
      the identity of the sender of the message to provide spam prevention or
      call control services. Even if a proxy server does not act as an
      authentication service, it MAY validate the Identity header before it
      makes a forwarding decision for a request. Proxy servers MUST NOT remove
      or modify an existing Identity or Identity-Info header in a request.</t>
    </section>

    <section anchor="sec-syntax" title="Header Syntax">
      <t>This document specifies two new SIP headers: Identity and Identity-
      Info. Each of these headers can appear only once in a SIP message. The
      grammar for these two headers is (following the ABNF [6] in RFC 3261
      [1]):</t>

      <figure>
        <artwork><![CDATA[
   Identity = "Identity" HCOLON signed-identity-digest
   signed-identity-digest = LDQUOT 32LHEX RDQUOT

   Identity-Info = "Identity-Info" HCOLON ident-info
                    *( SEMI ident-info-params )
   ident-info = LAQUOT absoluteURI RAQUOT
   ident-info-params = ident-info-alg / ident-info-extension
   ident-info-alg = "alg" EQUAL token
   ident-info-extension = generic-param
]]></artwork>
      </figure>

      <t>The signed-identity-digest is a signed hash of a canonical string
      generated from certain components of a SIP request. To create the
      contents of the signed-identity-digest, the following elements of a SIP
      message MUST be placed in a bit-exact string in the order specified
      here, separated by a vertical line, "|" or %x7C, character: <list>
          <t>The AoR of the UA sending the message, or addr-spec of the From
          header field (referred to occasionally here as the 'identity
          field').</t>

          <t>The addr-spec component of the To header field, which is the AoR
          to which the request is being sent.</t>

          <t>The callid from Call-Id header field.</t>

          <t>The digit (1*DIGIT) and method (method) portions from CSeq header
          field, separated by a single space (ABNF SP, or %x20). Note that the
          CSeq header field allows linear whitespace (LWS) rather than SP to
          separate the digit and method portions, and thus the CSeq header
          field may need to be transformed in order to be canonicalized. The
          authentication service MUST strip leading zeros from the 'digit'
          portion of the Cseq before generating the digest-string.</t>

          <t>The Date header field, with exactly one space each for each SP
          and the weekday and month items case set as shown in BNF in <xref
          target="RFC3261">RFC 3261</xref>. RFC 3261 specifies that the BNF
          for weekday and month is a choice amongst a set of tokens. The <xref
          target="RFC2234">RFC 2234</xref> rules for the BNF specify that
          tokens are case sensitive. However, when used to construct the
          canonical string defined here, the first letter of each week and
          month MUST be capitalized, and the remaining two letters must be
          lowercase. This matches the capitalization provided in the
          definition of each token. All requests that use the Identity
          mechanism MUST contain a Date header.</t>

          <t>The addr-spec component of the Contact header field value. If the
          request does not contain a Contact header, this field MUST be empty
          (i.e., there will be no whitespace between the fourth and fifth "|"
          characters in the canonical string).</t>

          <t>The body content of the message with the bits exactly as they are
          in the Message (in the ABNF for SIP, the message-body). This
          includes all components of multipart message bodies. Note that the
          message-body does NOT include the CRLF separating the SIP headers
          from the message-body, but does include everything that follows that
          CRLF. If the message has no body, then message-body will be empty,
          and the final "|" will not be followed by any additional
          characters.</t>
        </list></t>

      <t>For more information on the security properties of these headers, and
      why their inclusion mitigates replay attacks, see <xref
      target="sec-security-considerations"></xref> and <xref
      target="RFC3893"></xref>. The precise formulation of this digest-string
      is, therefore (following the ABNF<xref target="RFC4234"></xref> in <xref
      target="RFC3261">RFC 3261</xref>):</t>

      <figure>
        <artwork><![CDATA[
   digest-string = addr-spec "|" addr-spec "|" callid "|"
                   1*DIGIT SP Method "|" SIP-date "|" [ addr-spec ] "|"
                   message-body
]]></artwork>
      </figure>

      <t>Note again that the first addr-spec MUST be taken from the From
      header field value, the second addr-spec MUST be taken from the To
      header field value, and the third addr-spec MUST be taken from the
      Contact header field value, provided the Contact header is present in
      the request.</t>

      <t>After the digest-string is formed, it MUST be hashed and signed with
      the certificate for the domain. The hashing and signing algorithm is
      specified by the 'alg' parameter of the Identity-Info header (see below
      for more information on Identity-Info header parameters). This document
      defines only one value for the 'alg' parameter: 'rsa-sha1'; further
      values MUST be defined in a Standards Track RFC, see Section 14.7 for
      more information. All implementations of this specification MUST support
      'rsa-sha1'. When the 'rsa-sha1' algorithm is specified in the 'alg'
      parameter of Identity-Info, the hash and signature MUST be generated as
      follows: compute the results of signing this string with
      sha1WithRSAEncryption as described in <xref target="RFC3370">RFC
      3370</xref> and base64 encode the results as specified in <xref
      target="RFC3548">RFC 3548</xref>. A 1024-bit or longer RSA key MUST be
      used. The result is placed in the Identity header field. For detailed
      examples of the usage of this algorithm, see <xref
      target="sec-test-examples"></xref>.</t>

      <t>The 'absoluteURI' portion of the Identity-Info header MUST contain a
      URI which dereferences to a resource containing the certificate of the
      authentication service. All implementations of this specification MUST
      support the use of HTTP and HTTPS URIs in the Identity-Info header. Such
      HTTP and HTTPS URIs MUST follow the conventions of <xref
      target="RFC2585">RFC 2585</xref>, and for those URIs the indicated
      resource MUST be of the form 'application/pkix-cert' described in that
      specification. Note that this introduces key lifecycle management
      concerns; were a domain to change the key available at the Identity-Info
      URI before a verifier evaluates a request signed by an authentication
      service, this would cause obvious verifier failures. When a rollover
      occurs, authentication services SHOULD thus provide new Identity-Info
      URIs for each new certificate, and SHOULD continue to make older key
      acquisition URIs available for a duration longer than the plausible
      lifetime of a SIP message (an hour would most likely suffice).</t>

      <t>The Identity-Info header field MUST contain an 'alg' parameter. No
      other parameters are defined for the Identity-Info header in this
      document. Future Standards Track RFCs may define additional
      Identity-Info header parameters.</t>

      <t>This document adds the following entries to Table 2 of <xref
      target="RFC3261">RFC 3261</xref>:</t>

      <figure>
        <artwork><![CDATA[
 Header field         where   proxy   ACK  BYE  CAN  INV  OPT  REG
 ------------         -----   -----   ---  ---  ---  ---  ---  ---
 Identity               R       a      o    o    -    o    o    o

                                      SUB  NOT  REF  INF  UPD  PRA
                                      ---  ---  ---  ---  ---  ---
                                       o    o    o    o    o    o

 Header field         where   proxy   ACK  BYE  CAN  INV  OPT  REG
 ------------         -----   -----   ---  ---  ---  ---  ---  ---
 Identity-Info          R       a      o    o    -    o    o    o

                                      SUB  NOT  REF  INF  UPD  PRA
                                      ---  ---  ---  ---  ---  ---
                                       o    o    o    o    o    o

]]></artwork>
      </figure>

      <t>Note, in the table above, that this mechanism does not protect the
      CANCEL method. The CANCEL method cannot be challenged, because it is
      hop-by-hop, and accordingly authentication service behavior for CANCEL
      would be significantly limited. Note as well that the REGISTER method
      uses Contact header fields in very unusual ways that complicate its
      applicability to this mechanism, and the use of Identity with REGISTER
      is consequently a subject for future study, although it is left as
      optional here for forward-compatibility reasons. The Identity and
      Identity-Info header MUST NOT appear in CANCEL.</t>
    </section>

    <section anchor="sec-test-examples" title="Compliance Tests and Examples">
      <t>The examples in this section illustrate the use of the Identity
      header in the context of a SIP transaction. Implementers are advised to
      verify their compliance with the specification against the following
      criteria: <list>
          <t>Implementations of the authentication service role MUST generate
          identical base64 identity strings to the ones shown in the Identity
          headers in these examples when presented with the source message and
          utilizing the appropriate supplied private key for the domain in
          question.</t>

          <t>Implementations of the verifier role MUST correctly validate the
          given messages containing the Identity header when utilizing the
          supplied certificates (with the caveat about self-signed
          certificates below).</t>
        </list> Note that the following examples use self-signed certificates,
      rather than certificates issued by a recognized certificate authority.
      The use of self-signed certificates for this mechanism is NOT
      RECOMMENDED, and it appears here only for illustrative purposes.
      Therefore, in compliance testing, implementations of verifiers SHOULD
      generate appropriate warnings about the use of self-signed certificates.
      Also, the example certificates in this section have placed their domain
      name subject in the subjectAltName field; in practice, certificate
      authorities may place domain names in other locations in the certificate
      (see <xref target="sec-security-subordination"></xref> for more
      information).</t>

      <t>Note that all examples in this section use the 'rsa-sha1'
      algorithm.</t>

      <t>Bit-exact reference files for these messages and their various
      transformations are supplied in Appendix B.</t>

      <section anchor="sec-10.1"
               title="Identity-Info with a Singlepart MIME body">
        <t>Consider the following private key and certificate pair assigned to
        'atlanta.example.com' (rendered in OpenSSL format).</t>

        <figure>
          <artwork><![CDATA[
        -----BEGIN RSA PRIVATE KEY-----
        MIICXQIBAAKBgQDPPMBtHVoPkXV+Z6jq1LsgfTELVWpy2BVUffJMPH06LL0cJSQO
        aIeVzIojzWtpauB7IylZKlAjB5f429tRuoUiedCwMLKblWAqZt6eHWpCNZJ7lONc
        IEwnmh2nAccKk83Lp/VH3tgAS/43DQoX2sndnYh+g8522Pzwg7EGWspzzwIDAQAB
        AoGBAK0W3tnEFD7AjVQAnJNXDtx59Aa1Vu2JEXe6oi+OrkFysJjbZJwsLmKtrgtt
        PXOU8t2mZpi0wK4hX4tZhntiwGKkUPC3h9Bjp+GerifP341RMyMO+6fPgjqOzUDw
        +rPjjMpwD7AkcEcqDgbTrZnWv/QnCSaaF3xkUGfFkLx5OKcRAkEA7UxnsE8XaT30
        tP/UUc51gNk2KGKgxQQTHopBcew9yfeCRFhvdL7jpaGatEi5iZwGGQQDVOVHUN1H
        0YLpHQjRowJBAN+R2bvA/Nimq464ZgnelEDPqaEAZWaD3kOfhS9+vL7oqES+u5E0
        J7kXb7ZkiSVUg9XU/8PxMKx/DAz0dUmOL+UCQH8C9ETUMI2uEbqHbBdVUGNk364C
        DFcndSxVh+34KqJdjiYSx6VPPv26X9m7S0OydTkSgs3/4ooPxo8HaMqXm80CQB+r
        xbB3UlpOohcBwFK9mTrlMB6Cs9ql66KgwnlL9ukEhHHYozGatdXeoBCyhUsogdSU
        6/aSAFcvWEGtj7/vyJECQQCCS1lKgEXoNQPqONalvYhyyMZRXFLdD4gbwRPK1uXK
        Ypk3CkfFzOyfjeLcGPxXzq2qzuHzGTDxZ9PAepwX4RSk 
        -----END RSA PRIVATE KEY-----
]]></artwork>
        </figure>

        <figure>
          <artwork><![CDATA[
        -----BEGIN CERTIFICATE-----
        MIIC3TCCAkagAwIBAgIBADANBgkqhkiG9w0BAQUFADBZMQswCQYDVQQGEwJVUzEL
        MAkGA1UECAwCR0ExEDAOBgNVBAcMB0F0bGFudGExDTALBgNVBAoMBElFVEYxHDAa
        BgNVBAMME2F0bGFudGEuZXhhbXBsZS5jb20wHhcNMDUxMDI0MDYzNjA2WhcNMDYx
        MDI0MDYzNjA2WjBZMQswCQYDVQQGEwJVUzELMAkGA1UECAwCR0ExEDAOBgNVBAcM
        B0F0bGFudGExDTALBgNVBAoMBElFVEYxHDAaBgNVBAMME2F0bGFudGEuZXhhbXBs
        ZS5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAM88wG0dWg+RdX5nqOrU
        uyB9MQtVanLYFVR98kw8fTosvRwlJA5oh5XMiiPNa2lq4HsjKVkqUCMHl/jb21G6
        hSJ50LAwspuVYCpm3p4dakI1knuU41wgTCeaHacBxwqTzcun9Ufe2ABL/jcNChfa
        yd2diH6DznbY/PCDsQZaynPPAgMBAAGjgbQwgbEwHQYDVR0OBBYEFNmU/MrbVYcE
        KDr/20WISrG1j1rNMIGBBgNVHSMEejB4gBTZlPzK21WHBCg6/9tFiEqxtY9azaFd
        pFswWTELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkdBMRAwDgYDVQQHDAdBdGxhbnRh
        MQ0wCwYDVQQKDARJRVRGMRwwGgYDVQQDDBNhdGxhbnRhLmV4YW1wbGUuY29tggEA
        MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADgYEADdQYtswBDmTSTq0mt211
        7alm/XGFrb2zdbU0vorxRdOZ04qMyrIpXG1LEmnEOgcocyrXRBvq5p6WbZAcEQk0
        DsE3Ve0Nc8x9nmvljW7GsMGFCnCuo4ODTf/1lGdVr9DeCzcj10YUQ3MRemDMXhY2
        CtDisLWl7SXOORcZAi1oU9w=
         -----END CERTIFICATE-----
]]></artwork>
        </figure>

        <t>A user of atlanta.example.com, Alice, wants to send an INVITE to
        bob@biloxi.example.org. She therefore creates the following INVITE
        request, which she forwards to the atlanta.example.org proxy server
        that instantiates the authentication service role:</t>

        <figure>
          <artwork><![CDATA[
   INVITE sip:bob@biloxi.example.org SIP/2.0
   Via: SIP/2.0/TLS pc33.atlanta.example.com;branch=z9hG4bKnashds8
   To: Bob <sip:bob@biloxi.example.org>
   From: Alice <sip:alice@atlanta.example.com>;tag=1928301774
   Call-ID: a84b4c76e66710
   CSeq: 314159 INVITE
   Max-Forwards: 70
   Date: Thu, 21 Feb 2002 13:02:03 GMT
   Contact: <sip:alice@pc33.atlanta.example.com>
   Content-Type: application/sdp
   Content-Length: 147

   v=0
   o=UserA 2890844526 2890844526 IN IP4 pc33.atlanta.example.com
   s=Session SDP
   c=IN IP4 pc33.atlanta.example.com
   t=0 0
   m=audio 49172 RTP/AVP 0
   a=rtpmap:0 PCMU/8000
]]></artwork>
        </figure>

        <t>When the authentication service receives the INVITE, it
        authenticates Alice by sending a 407 response. As a result, Alice adds
        an Authorization header to her request, and resends to the
        atlanta.example.com authentication service. Now that the service is
        sure of Alice's identity, it calculates an Identity header for the
        request. The canonical string over which the identity signature will
        be generated is the following (note that the first line wraps because
        of RFC editorial conventions):</t>

        <figure>
          <artwork><![CDATA[
   sip:alice@atlanta.example.com|sip:bob@biloxi.example.org|
   a84b4c76e66710|314159 INVITE|Thu, 21 Feb 2002 13:02:03 GMT|
   sip:alice@pc33.atlanta.example.com|v=0
   o=UserA 2890844526 2890844526 IN IP4 pc33.atlanta.example.com
   s=Session SDP
   c=IN IP4 pc33.atlanta.example.com
   t=0 0

   m=audio 49172 RTP/AVP 0
   a=rtpmap:0 PCMU/8000
]]></artwork>
        </figure>

        <t>The resulting signature (sha1WithRsaEncryption) using the private
        RSA key given above, with base64 encoding, is the following:</t>

        <figure>
          <artwork><![CDATA[
        ZYNBbHC00VMZr2kZt6VmCvPonWJMGvQTBDqghoWeLxJfzB2a1pxAr3VgrB0SsSAa
        ifsRdiOPoQZYOy2wrVghuhcsMbHWUSFxI6p6q5TOQXHMmz6uEo3svJsSH49thyGn
        FVcnyaZ++yRlBYYQTLqWzJ+KVhPKbfU/pryhVn9Yc6U=
]]></artwork>
        </figure>

        <t>Accordingly, the atlanta.example.com authentication service will
        create an Identity header containing that base64 signature string (175
        bytes). It will also add an HTTPS URL where its certificate is made
        available. With those two headers added, the message looks like the
        following:</t>

        <figure>
          <artwork><![CDATA[
 INVITE sip:bob@biloxi.example.org SIP/2.0
 Via: SIP/2.0/TLS pc33.atlanta.example.com;branch=z9hG4bKnashds8
 To: Bob <sip:bob@biloxi.example.org>
 From: Alice <sip:alice@atlanta.example.com>;tag=1928301774
 Call-ID: a84b4c76e66710
 CSeq: 314159 INVITE
 Max-Forwards: 70
 Date: Thu, 21 Feb 2002 13:02:03 GMT
 Contact: <sip:alice@pc33.atlanta.example.com>
 Identity:
   "ZYNBbHC00VMZr2kZt6VmCvPonWJMGvQTBDqghoWeLxJfzB2a1pxAr3VgrB0SsSAa
    ifsRdiOPoQZYOy2wrVghuhcsMbHWUSFxI6p6q5TOQXHMmz6uEo3svJsSH49thyGn
    FVcnyaZ++yRlBYYQTLqWzJ+KVhPKbfU/pryhVn9Yc6U="
 Identity-Info: <https://atlanta.example.com/atlanta.cer>;alg=rsa-sha1
 Content-Type: application/sdp
 Content-Length: 147
  v=0
 o=UserA 2890844526 2890844526 IN IP4 pc33.atlanta.example.com
 s=Session SDP
 c=IN IP4 pc33.atlanta.example.com
 t=0 0
 m=audio 49172 RTP/AVP 0
 a=rtpmap:0 PCMU/8000
]]></artwork>
        </figure>

        <t>atlanta.example.com then forwards the request normally. When Bob
        receives the request, if he does not already know the certificate of
        atlanta.example.com, he dereferences the URL in the Identity-Info
        header to acquire the certificate. Bob then generates the same
        canonical string given above, from the same headers of the SIP
        request. Using this canonical string, the signed digest in the
        Identity header, and the certificate discovered by dereferencing
        the</t>

        <t>Identity-Info header, Bob can verify that the given set of headers
        and the message body have not been modified.</t>
      </section>

      <section anchor="sec-10.2"
               title="Identity for a Request with No MIME Body or Contact">
        <t>Consider the following private key and certificate pair assigned to
        "biloxi.example.org".</t>

        <figure>
          <artwork><![CDATA[
        -----BEGIN RSA PRIVATE KEY-----
        MIICXgIBAAKBgQC/obBYLRMPjskrAqWOiGPAUxI3/m2ti7ix4caqCTAuFX5cLegQ
        7nmquLOHfIhxVIqT2f06UA0lOo2NVofK9G7MTkVbVNiyAlLYUDEj7XWLDICf3ZHL
        6Fr/+CF7wrQ9r4kv7XiJKxodVCCd/DhCT9Gp+VDoe8HymqOW/KsneriyIwIDAQAB
        AoGBAJ7fsFIKXKkjWgj8ksGOthS3Sn19xPSCyEdBxfEm2Pj7/Nzzeli/PcOaic0k
        JALBcnqN2fHEeIGK/9xUBxTufgQYVJqvyHERs6rXX/iT4Ynm9t1905EiQ9ZpHsrI
        /AMMUYA1QrGgAIHvZLVLzq+9KLDEZ+HQbuCLJXF+6bl0Eb5BAkEA636oMANp0Qa3
        mYWEQ2utmGsYxkXSfyBb18TCOwCty0ndBR24zyOJF2NbZS98Lz+Ga25hfIGw/JHK
        nD9bOE88UwJBANBRSpd4bmS+m48R/13tRESAtHqydNinX0kS/RhwHr7mkHTU3k/M
        FxQtx34I3GKzaZxMn0A66KS9v/SHdnF+ePECQQCGe7QshyZ8uitLPtZDclCWhEKH
        qAQHmUEZvUF2VHLrbukLLOgHUrHNa24cILv4d3yaCVUetymNcuyTwhKj24wFAkAO
        z/jx1EplN3hwL+NsllZoWI58uvu7/Aq2c3czqaVGBbb317sHCYgKk0bAG3kwO3mi
        93/LXWT1cdiYVpmBcHDBAkEAmpgkFj+xZu5gWASY5ujv+FCMP0WwaH5hTnXu+tKe
        PJ3d2IJZKxGnl6itKRN7GeRh9PSK0kZSqGFeVrvsJ4Nopg== 
        -----END RSA PRIVATE KEY-----
]]></artwork>
        </figure>

        <figure>
          <artwork><![CDATA[
        -----BEGIN CERTIFICATE-----
        MIIC1jCCAj+gAwIBAgIBADANBgkqhkiG9w0BAQUFADBXMQswCQYDVQQGEwJVUzEL
        MAkGA1UECAwCTVMxDzANBgNVBAcMBkJpbG94aTENMAsGA1UECgwESUVURjEbMBkG
        A1UEAwwSYmlsb3hpLmV4YW1wbGUuY29tMB4XDTA1MTAyNDA2NDAyNloXDTA2MTAy
        NDA2NDAyNlowVzELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAk1TMQ8wDQYDVQQHDAZC
        aWxveGkxDTALBgNVBAoMBElFVEYxGzAZBgNVBAMMEmJpbG94aS5leGFtcGxlLmNv
        bTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAv6GwWC0TD47JKwKljohjwFMS
        N/5trYu4seHGqgkwLhV+XC3oEO55qrizh3yIcVSKk9n9OlANJTqNjVaHyvRuzE5F
        W1TYsgJS2FAxI+11iwyAn92Ry+ha//ghe8K0Pa+JL+14iSsaHVQgnfw4Qk/RqflQ
        6HvB8pqjlvyrJ3q4siMCAwEAAaOBsTCBrjAdBgNVHQ4EFgQU0Z+RL47W/APDtc5B
        fSoQXuEFE/wwfwYDVR0jBHgwdoAU0Z+RL47W/APDtc5BfSoQXuEFE/yhW6RZMFcx
        CzAJBgNVBAYTAlVTMQswCQYDVQQIDAJNUzEPMA0GA1UEBwwGQmlsb3hpMQ0wCwYD
        VQQKDARJRVRGMRswGQYDVQQDDBJiaWxveGkuZXhhbXBsZS5jb22CAQAwDAYDVR0T
        BAUwAwEB/zANBgkqhkiG9w0BAQUFAAOBgQBiyKHIt8TXfGNfpnJXi5jCizOxmY8Y
        gln8tyPFaeyq95TGcvTCWzdoBLVpBD+fpRWrX/II5sE6VHbbAPjjVmKbZwzQAtpp
        P2Fauj28t94ZeDHN2vqzjfnHjCO24kG3Juf2T80ilp9YHcDwxjUFrt86UnlC+yid
        yaTeusW5Gu7v1g== 
        -----END CERTIFICATE-----
]]></artwork>
        </figure>

        <t>Bob (bob@biloxi.example.org) now wants to send a BYE request to
        Alice at the end of the dialog initiated in the previous example. He
        therefore creates the following BYE request, which he forwards to the
        'biloxi.example.org' proxy server that instantiates the authentication
        service role:</t>

        <figure>
          <artwork><![CDATA[
   BYE sip:alice@pc33.atlanta.example.com SIP/2.0
   Via: SIP/2.0/TLS 192.0.2.4;branch=z9hG4bKnashds10
   Max-Forwards: 70
   From: Bob <sip:bob@biloxi.example.org>;tag=a6c85cf
   To: Alice <sip:alice@atlanta.example.com>;tag=1928301774
   Call-ID: a84b4c76e66710
   CSeq: 231 BYE
   Content-Length: 0
]]></artwork>
        </figure>

        <t>When the authentication service receives the BYE, it authenticates
        Bob by sending a 407 response. As a result, Bob adds an Authorization
        header to his request, and resends to the biloxi.example.org
        authentication service. Now that the service is sure of Bob's
        identity, it prepares to calculate an Identity header for the request.
        Note that this request does not have a Date header field. Accordingly,
        the biloxi.example.org will add a Date header to the request before
        calculating the identity signature. If the Content-Length header were
        not present, the authentication service would add it as well. The
        baseline message is thus:</t>

        <figure>
          <artwork><![CDATA[
   BYE sip:alice@pc33.atlanta.example.com SIP/2.0
   Via: SIP/2.0/TLS 192.0.2.4;branch=z9hG4bKnashds10
   Max-Forwards: 70
   From: Bob <sip:bob@biloxi.example.org>;tag=a6c85cf
   To: Alice <sip:alice@atlanta.example.com>;tag=1928301774
   Date: Thu, 21 Feb 2002 14:19:51 GMT
   Call-ID: a84b4c76e66710
   CSeq: 231 BYE
   Content-Length: 0
]]></artwork>
        </figure>

        <t>Also note that this request contains no Contact header field.
        Accordingly, biloxi.example.org will place no value in the canonical
        string for the addr-spec of the Contact address. Also note that there
        is no message body, and accordingly, the signature string will
        terminate, in this case, with two vertical bars. The canonical string
        over which the identity signature will be generated is the following
        (note that the first line wraps because of RFC editorial
        conventions):</t>

        <t>sip:bob@biloxi.example.org|sip:alice@atlanta.example.com|
        a84b4c76e66710|231 BYE|Thu, 21 Feb 2002 14:19:51 GMT||</t>

        <t>The resulting signature (sha1WithRsaEncryption) using the private
        RSA key given above for biloxi.example.org, with base64 encoding, is
        the following:</t>

        <t>sv5CTo05KqpSmtHt3dcEiO/1CWTSZtnG3iV+1nmurLXV/HmtyNS7Ltrg9dlxkWzo
        eU7d7OV8HweTTDobV3itTmgPwCFjaEmMyEI3d7SyN21yNDo2ER/Ovgtw0Lu5csIp
        pPqOg1uXndzHbG7mR6Rl9BnUhHufVRbp51Mn3w0gfUs=</t>

        <t>Accordingly, the biloxi.example.org authentication service will
        create an Identity header containing that base64 signature string. It
        will also add an HTTPS URL where its certificate is made available.
        With those two headers added, the message looks like the
        following:</t>

        <figure>
          <artwork><![CDATA[
   BYE sip:alice@pc33.atlanta.example.com SIP/2.0
   Via: SIP/2.0/TLS 192.0.2.4;branch=z9hG4bKnashds10
   Max-Forwards: 70
   From: Bob <sip:bob@biloxi.example.org>;tag=a6c85cf
   To: Alice <sip:alice@atlanta.example.com>;tag=1928301774
   Date: Thu, 21 Feb 2002 14:19:51 GMT
   Call-ID: a84b4c76e66710
   CSeq: 231 BYE
   Identity:
     "sv5CTo05KqpSmtHt3dcEiO/1CWTSZtnG3iV+1nmurLXV/HmtyNS7Ltrg9dlxkWzo
      eU7d7OV8HweTTDobV3itTmgPwCFjaEmMyEI3d7SyN21yNDo2ER/Ovgtw0Lu5csIp
      pPqOg1uXndzHbG7mR6Rl9BnUhHufVRbp51Mn3w0gfUs="
   Identity-Info: <https://biloxi.example.org/biloxi.cer>;alg=rsa-sha1
   Content-Length: 0
]]></artwork>
        </figure>

        <t>biloxi.example.org then forwards the request normally.</t>
      </section>
    </section>

    <section anchor="sec-identity-tel" title="Identity and the TEL URI Scheme">
      <t>Since many SIP applications provide a Voice over IP (VoIP) service,
      telephone numbers are commonly used as identities in SIP deployments. In
      the majority of cases, this is not problematic for the identity
      mechanism described in this document. Telephone numbers commonly appear
      in the username portion of a SIP URI (e.g.,
      'sip:+17005551008@chicago.example.com;user=phone'). That username
      conforms to the syntax of the TEL URI scheme (<xref target="RFC3966">RFC
      3966</xref>). For this sort of SIP address-of-record,
      chicago.example.com is the appropriate signatory.</t>

      <t>It is also possible for a TEL URI to appear in the SIP To or From
      header field outside the context of a SIP or SIPS URI (e.g.,
      'tel:+17005551008'). In this case, it is much less clear which signatory
      is appropriate for the identity. Fortunately for the identity mechanism,
      this form of the TEL URI is more common for the To header field and
      Request-URI in SIP than in the From header field, since the UAC has no
      option but to provide a TEL URI alone when the remote domain to which a
      request is sent is unknown. The local domain, however, is usually known
      by the UAC, and accordingly it can form a proper From header field
      containing a SIP URI with a username in TEL URI form. Implementations
      that intend to send their requests through an authentication service
      SHOULD put telephone numbers in the From header field into SIP or SIPS
      URIs whenever possible.</t>

      <t>If the local domain is unknown to a UAC formulating a request, it
      most likely will not be able to locate an authentication service for its
      request, and therefore the question of providing identity in these cases
      is somewhat moot. However, an authentication service MAY sign a request
      containing a TEL URI in the From header field. This is permitted in this
      specification strictly for forward compatibility purposes. In the
      longer-term, it is possible that ENUM [14] may provide a way to
      determine which administrative domain is responsible for a telephone
      number, and this may aid in the signing and verification of SIP
      identities that contain telephone numbers. This is a subject for future
      work.</t>
    </section>

    <section anchor="sec-12" title="Privacy Considerations">
      <t>The identity mechanism presented in this document is compatible with
      the standard SIP practices for privacy described in <xref
      target="RFC3323">RFC 3323</xref>. A SIP proxy server can act both as a
      privacy service and as an authentication service. Since a user agent can
      provide any From header field value that the authentication service is
      willing to authorize, there is no reason why private SIP URIs that
      contain legitimate domains (e.g., sip:anonymous@example.com) cannot be
      signed by an authentication service. The construction of the Identity
      header is the same for private URIs as it is for any other sort of
      URIs.</t>

      <t>Note, however, that an authentication service must possess a
      certificate corresponding to the host portion of the addr-spec of the
      From header field of any request that it signs; accordingly, using
      domains like 'anonymous.invalid' will not be possible for privacy
      services that also act as authentication services. The assurance offered
      by the usage of anonymous URIs with a valid domain portion is "this is a
      known user in my domain that I have authenticated, but I am keeping its
      identity private". The use of the domain 'anonymous.invalid' entails
      that no corresponding authority for the domain can exist, and as a
      consequence, authentication service functions are meaningless.</t>

      <t>The "header" level of privacy described in <xref target="RFC3323">RFC
      3323</xref> requests that a privacy service alter the Contact header
      field value of a SIP message. Since the Contact header field is
      protected by the signature in an Identity header, privacy services
      cannot be applied after authentication services without a resulting
      integrity violation.</t>

      <t><xref target="RFC3325">RFC 3325</xref> defines the "id" priv-value
      token, which is specific to the P-Asserted-Identity header. The sort of
      assertion provided by the P-Asserted-Identity header is very different
      from the Identity header presented in this document. It contains
      additional information about the sender of a message that may go beyond
      what appears in the From header field; P-Asserted-Identity holds a
      definitive identity for the sender that is somehow known to a closed
      network of intermediaries that presumably the network will use this
      identity for billing or security purposes. The danger of this
      network-specific information leaking outside of the closed network
      motivated the "id" priv-value token. The "id" priv-value token has no
      implications for the Identity header, and privacy services MUST NOT
      remove the Identity header when a priv-value of "id" appears in a
      Privacy header.</t>

      <t>Finally, note that unlike <xref target="RFC3325">RFC 3325</xref>, the
      mechanism described in this specification adds no information to SIP
      requests that has privacy implications.</t>
    </section>

    <section anchor="sec-security-considerations"
             title="Security Considerations">
      <section anchor="sec-security-digest"
               title="Handling of digest-string Elements">
        <t>This document describes a mechanism that provides a signature over
        the Contact, Date, Call-ID, CSeq, To, and From header fields of SIP
        requests. While a signature over the From header field would be
        sufficient to secure a URI alone, the additional headers provide
        replay protection and reference integrity necessary to make sure that
        the Identity header will not be used in cut-and-paste attacks. In
        general, the considerations related to the security of these headers
        are the same as those given in <xref target="RFC3261">RFC 3261</xref>
        for including headers in tunneled 'message/sip' MIME bodies (see
        Section 23 in particular). The following section details the
        individual security properties obtained by including each of these
        header fields within the signature; collectively, this set of header
        fields provides the necessary properties to prevent impersonation.</t>

        <t>The From header field indicates the identity of the sender of the
        message, and the SIP address-of-record URI in the From header field is
        the identity of a SIP user, for the purposes of this document. The To
        header field provides the identity of the SIP user that this request
        targets. Providing the To header field in the Identity signature
        serves two purposes: first, it prevents cut-and-paste attacks in which
        an Identity header from legitimate request for one user is
        cut-and-pasted into a request for a different user; second, it
        preserves the starting URI scheme of the request, which helps prevent
        downgrade attacks against the use of SIPS.</t>

        <t>The Date and Contact headers provide reference integrity and replay
        protection, as described in <xref target="RFC3261">RFC 3261</xref>,
        Section 23.4.2. Implementations of this specification MUST NOT deem
        valid a request with an outdated Date header field (the RECOMMENDED
        interval is that the Date header must indicate a time within 3600
        seconds of the receipt of a message). Implementations MUST also record
        Call-IDs received in valid requests containing an Identity header, and
        MUST remember those Call-IDs for at least the duration of a single
        Date interval (i.e., commonly 3600 seconds). Because a SIP-compliant
        UA never generates the same Call-ID twice, verifiers can use the
        Call-ID to recognize cut-and-paste attacks; the Call-ID serves as a
        nonce. The result of this is that if an Identity header is replayed
        within the Date interval, verifiers will recognize that it is invalid
        because of a Call-ID duplication; if an Identity header is replayed
        after the Date interval, verifiers will recognize that it is invalid
        because the Date is stale. The CSeq header field contains a numbered
        identifier for the transaction, and the name of the method of the
        request; without this information, an INVITE request could be cut-
        and-pasted by an attacker and transformed into a BYE request without
        changing any fields covered by the Identity header, and moreover
        requests within a certain transaction could be replayed in potentially
        confusing or malicious ways.</t>

        <t>The Contact header field is included to tie the Identity header to
        a particular user agent instance that generated the request. Were an
        active attacker to intercept a request containing an Identity header,
        and cut-and-paste the Identity header field into its own request
        (reusing the From, To, Contact, Date, and Call-ID fields that appear
        in the original message), the attacker would not be eligible to
        receive SIP requests from the called user agent, since those requests
        are routed to the URI identified in the Contact header field. However,
        the Contact header is only included in dialog-forming requests, so it
        does not provide this protection in all cases.</t>

        <t>It might seem attractive to provide a signature over some of the
        information present in the Via header field value(s). For example,
        without a signature over the sent-by field of the topmost Via header,
        an attacker could remove that Via header and insert its own in a
        cut-and-paste attack, which would cause all responses to the request
        to be routed to a host of the attacker's choosing. However, a
        signature over the topmost Via header does not prevent attacks of this
        nature, since the attacker could leave the topmost Via intact and
        merely insert a new Via header field directly after it, which would
        cause responses to be routed to the attacker's host "on their way" to
        the valid host, which has exactly the same end result. Although it is
        possible that an intermediary-based authentication service could
        guarantee that no Via hops are inserted between the sending user agent
        and the authentication service, it could not prevent an attacker from
        adding a Via hop after the authentication service, and thereby
        preempting responses. It is necessary for the proper operation of SIP
        for subsequent intermediaries to be capable of inserting such Via
        header fields, and thus it cannot be prevented. As such, though it is
        desirable, securing Via is not possible through the sort of identity
        mechanism described in this document; the best known practice for
        securing Via is the use of SIPS.</t>

        <t>This mechanism also provides a signature over the bodies of SIP
        requests. The most important reason for doing so is to protect Session
        Description Protocol (SDP) bodies carried in SIP requests. There is
        little purpose in establishing the identity of the user that
        originated a SIP request if this assurance is not coupled with a
        comparable assurance over the media descriptors. Note, however, that
        this is not perfect end-to-end security. The authentication service
        itself, when instantiated at a intermediary, could conceivably change
        the SDP (and SIP headers, for that matter) before providing a
        signature. Thus, while this mechanism reduces the chance that a
        replayer or man-in-the-middle will modify SDP, it does not eliminate
        it entirely. Since it is a foundational assumption of this mechanism
        that the users trust their local domain to vouch for their security,
        they must also trust the service not to violate the integrity of their
        message without good reason. Note that <xref target="RFC3261">RFC
        3261</xref>, Section 16.6 states that SIP proxy servers "MUST NOT add
        to, modify, or remove the message body."</t>

        <t>In the end analysis, the Identity and Identity-Info headers cannot
        protect themselves. Any attacker could remove these headers from a SIP
        request, and modify the request arbitrarily afterwards. However, this
        mechanism is not intended to protect requests from men-in-the- middle
        who interfere with SIP messages; it is intended only to provide a way
        that SIP users can prove definitively that they are who they claim to
        be. At best, by stripping identity information from a request, a
        man-in-the-middle could make it impossible to distinguish any
        illegitimate messages he would like to send from those messages sent
        by an authorized user. However, it requires a considerably greater
        amount of energy to mount such an attack than it does to mount trivial
        impersonations by just copying someone else's From header field. This
        mechanism provides a way that an authorized user can provide a
        definitive assurance of his identity that an unauthorized user, an
        impersonator, cannot.</t>

        <t>One additional respect in which the Identity-Info header cannot
        protect itself is the 'alg' parameter. The 'alg' parameter is not
        included in the digest-string, and accordingly, a man-in-the-middle
        might attempt to modify the 'alg' parameter. However, it is important
        to note that preventing men-in-the-middle is not the primary impetus
        for this mechanism. Moreover, changing the 'alg'</t>

        <t>would at worst result in some sort of bid-down attack, and at best
        cause a failure in the verifier. Note that only one valid 'alg'
        parameter is defined in this document and that thus there is currently
        no weaker algorithm to which the mechanism can be bid down. 'alg' has
        been incorporated into this mechanism for forward- compatibility
        reasons in case the current algorithm exhibits weaknesses, and
        requires swift replacement, in the future.</t>
      </section>

      <section anchor="sec-display-name" title="Display-Names and Identity">
        <t>As a matter of interface design, SIP user agents might render the
        display-name portion of the From header field of a caller as the
        identity of the caller; there is a significant precedent in email user
        interfaces for this practice. As such, it might seem that the lack of
        a signature over the display-name is a significant omission.</t>

        <t>However, there are several important senses in which a signature
        over the display-name does not prevent impersonation. In the first
        place, a particular display-name, like "Jon Peterson", is not unique
        in the world; many users in different administrative domains might
        legitimately claim that name. Furthermore, enrollment practices for
        SIP-based services might have a difficult time discerning the
        legitimate display-name for a user; it is safe to assume that
        impersonators will be capable of creating SIP accounts with arbitrary
        display-names. The same situation prevails in email today. Note that
        an impersonator who attempted to replay a message with an Identity
        header, changing only the display-name in the From header field, would
        be detected by the other replay protection mechanisms described in
        <xref target="sec-security-digest"></xref>.</t>

        <t>Of course, an authentication service can enforce policies about the
        display-name even if the display-name is not signed. The exact
        mechanics for creating and operationalizing such policies is outside
        the scope of this document. The effect of this policy would not be to
        prevent impersonation of a particular unique identifier like a SIP URI
        (since display-names are not unique identifiers), but to allow a
        domain to manage the claims made by its users. If such policies are
        enforced, users would not be free to claim any display-name of their
        choosing. In the absence of a signature, man-in-the-middle attackers
        could conceivably alter the display-names in a request with impunity.
        Note that the scope of this specification is impersonation attacks,
        however, and that a man-in-the-middle might also strip the Identity
        and Identity-Info headers from a message.</t>

        <t>There are many environments in which policies regarding the
        display- name aren't feasible. Distributing bit-exact and
        internationalizable display-names to end-users as part of the
        enrollment or registration process would require mechanisms that are
        not explored in this</t>

        <t>document. In the absence of policy enforcement regarding domain
        names, there are conceivably attacks that an adversary could mount
        against SIP systems that rely too heavily on the display-name in their
        user interface, but this argues for intelligent interface design, not
        changes to the mechanisms. Relying on a non-unique identifier for
        identity would ultimately result in a weak mechanism.</t>
      </section>

      <section anchor="sec-secure-connect-auth-serv"
               title="Securing the Connection to the Authentication Service">
        <t>The assurance provided by this mechanism is strongest when a user
        agent forms a direct connection, preferably one secured by TLS, to an
        intermediary-based authentication service. The reasons for this are
        twofold: <list>
            <t>If a user does not receive a certificate from the
            authentication service over this TLS connection that corresponds
            to the expected domain (especially when the user receives a
            challenge via a mechanism such as Digest), then it is possible
            that a rogue server is attempting to pose as an authentication
            service for a domain that it does not control, possibly in an
            attempt to collect shared secrets for that domain.</t>

            <t>Without TLS, the various header field values and the body of
            the request will not have integrity protection when the request
            arrives at an authentication service. Accordingly, a prior
            legitimate or illegitimate intermediary could modify the message
            arbitrarily.</t>
          </list></t>

        <t>Of these two concerns, the first is most material to the intended
        scope of this mechanism. This mechanism is intended to prevent
        impersonation attacks, not man-in-the-middle attacks; integrity over
        the header and bodies is provided by this mechanism only to prevent
        replay attacks. However, it is possible that applications relying on
        the presence of the Identity header could leverage this integrity
        protection, especially body integrity, for services other than replay
        protection.</t>

        <t>Accordingly, direct TLS connections SHOULD be used between the UAC
        and the authentication service whenever possible. The opportunistic
        nature of this mechanism, however, makes it very difficult to
        constrain UAC behavior, and moreover there will be some deployment
        architectures where a direct connection is simply infeasible and the
        UAC cannot act as an authentication service itself. Accordingly, when
        a direct connection and TLS are not possible, a UAC should use the
        SIPS mechanism, Digest 'auth-int' for body integrity, or both when it
        can. The ultimate decision to add an Identity header to a request lies
        with the authentication service, of course; domain policy must
        identify those cases where the UAC's security association with the
        authentication service is too weak.</t>
      </section>

      <section anchor="sec-security-subordination"
               title="Domain Names and Subordination">
        <t>When a verifier processes a request containing an Identity-Info
        header, it must compare the domain portion of the URI in the From
        header field of the request with the domain name that is the subject
        of the certificate acquired from the Identity-Info header. While it
        might seem that this should be a straightforward process, it is
        complicated by two deployment realities. In the first place,
        certificates have varying ways of describing their subjects, and may
        indeed have multiple subjects, especially in 'virtual hosting' cases
        where multiple domains are managed by a single application. Secondly,
        some SIP services may delegate SIP functions to a subordinate domain
        and utilize the procedures in <xref target="RFC3263">RFC 3263</xref>
        that allow requests for, say, 'example.com' to be routed to
        'sip.example.com'. As a result, a user with the AoR
        'sip:jon@example.com' may process its requests through a host like
        'sip.example.com', and it may be that latter host that acts as an
        authentication service.</t>

        <t>To meet the second of these problems, a domain that deploys an
        authentication service on a subordinate host MUST be willing to supply
        that host with the private keying material associated with a
        certificate whose subject is a domain name that corresponds to the
        domain portion of the AoRs that the domain distributes to users. Note
        that this corresponds to the comparable case of routing inbound SIP
        requests to a domain. When the NAPTR and SRV procedures of RFC 3263
        are used to direct requests to a domain name other than the domain in
        the original Request-URI (e.g., for 'sip:jon@example.com', the
        corresponding SRV records point to the service 'sip1.example.org'),
        the client expects that the certificate passed back in any TLS
        exchange with that host will correspond exactly with the domain of the
        original Request-URI, not the domain name of the host. Consequently,
        in order to make inbound routing to such SIP services work, a domain
        administrator must similarly be willing to share the domain's private
        key with the service. This design decision was made to compensate for
        the insecurity of the DNS, and it makes certain potential approaches
        to DNS-based 'virtual hosting' unsecurable for SIP in environments
        where domain administrators are unwilling to share keys with hosting
        services.</t>

        <t>A verifier MUST evaluate the correspondence between the user's
        identity and the signing certificate by following the procedures
        defined in <xref target="RFC2818">RFC 2818</xref>, Section 3.1. While
        <xref target="RFC2818">RFC 2818</xref> deals with the use of HTTP in
        TLS, the procedures described are applicable to verifying identity if
        one substitutes the "hostname of the server" in HTTP for the domain
        portion of the user's identity in the From header field of a SIP
        request with an Identity header.</t>

        <t>Because the domain certificates that can be used by authentication
        services need to assert only the hostname of the authentication
        service, existing certificate authorities can provide adequate
        certificates for this mechanism. However, not all proxy servers and
        user agents will be able to support the root certificates of all
        certificate authorities, and moreover there are some significant
        differences in the policies by which certificate authorities issue
        their certificates. This document makes no recommendations for the
        usage of particular certificate authorities, nor does it describe any
        particular policies that certificate authorities should follow, but it
        is anticipated that operational experience will create de facto
        standards for authentication services. Some federations of service
        providers, for example, might only trust certificates that have been
        provided by a certificate authority operated by the federation. It is
        strongly RECOMMENDED that self-signed domain certificates should not
        be trusted by verifiers, unless some previous key exchange has
        justified such trust.</t>

        <t>For further information on certificate security and practices, see
        <xref target="RFC3280">RFC 3280</xref>. The Security Considerations of
        <xref target="RFC3280">RFC 3280</xref> are applicable to this
        document.</t>
      </section>

      <section anchor="sec-13.5"
               title="Authorization and Transitional Strategies">
        <t>Ultimately, the worth of an assurance provided by an Identity
        header is limited by the security practices of the domain that issues
        the assurance. Relying on an Identity header generated by a remote
        administrative domain assumes that the issuing domain used its
        administrative practices to authenticate its users. However, it is
        possible that some domains will implement policies that effectively
        make users unaccountable (e.g., ones that accept unauthenticated
        registrations from arbitrary users). The value of an Identity header
        from such domains is questionable. While there is no magic way for a
        verifier to distinguish "good" from "bad" domains by inspecting a SIP
        request, it is expected that further work in authorization practices
        could be built on top of this identity solution; without such an
        identity solution, many promising approaches to authorization policy
        are impossible. That much said, it is RECOMMENDED that authentication
        services based on proxy servers employ strong authentication practices
        such as token-based identifiers.</t>

        <t>One cannot expect the Identity and Identity-Info headers to be
        supported by every SIP entity overnight. This leaves the verifier in a
        compromising position; when it receives a request from a given SIP
        user, how can it know whether or not the sender's domain supports
        Identity? In the absence of ubiquitous support for identity, some
        transitional strategies are necessary. <list>
            <t>A verifier could remember when it receives a request from a
            domain that uses Identity, and in the future, view messages
            received from that domain without Identity headers with
            skepticism.</t>

            <t>A verifier could query the domain through some sort of callback
            system to determine whether or not it is running an authentication
            service. There are a number of potential ways in which this could
            be implemented; use of the SIP OPTIONS method is one possibility.
            This is left as a subject for future work.</t>
          </list></t>

        <t>In the long term, some sort of identity mechanism, either the one
        documented in this specification or a successor, must become
        mandatory-to-use for the SIP protocol; that is the only way to
        guarantee that this protection can always be expected by
        verifiers.</t>

        <t>Finally, it is worth noting that the presence or absence of the
        Identity headers cannot be the sole factor in making an authorization
        decision. Permissions might be granted to a message on the basis of
        the specific verified Identity or really on any other aspect of a SIP
        request. Authorization policies are outside the scope of this
        specification, but this specification advises any future authorization
        work not to assume that messages with valid Identity headers are
        always good.</t>
      </section>
    </section>

    <section anchor="sec-14" title="IANA Considerations">
      <t>This document requests changes to the header and response-code sub-
      registries of the SIP parameters IANA registry, and requests the
      creation of two new registries for parameters for the Identity-Info
      header.</t>

      <section anchor="sec-14.1" title="Header Field Names">
        <t>This document specifies two new SIP headers: Identity and Identity-
        Info. Their syntax is given in <xref target="sec-syntax"></xref>.
        These headers are defined by the following information, which has been
        added to the header sub-registry under
        http://www.iana.org/assignments/sip-parameters</t>

        <figure>
          <artwork><![CDATA[
   Header Name: Identity
   Compact Form: y
   Header Name: Identity-Info
   Compact Form: n
]]></artwork>
        </figure>
      </section>

      <section anchor="sec-14.2"
               title="428 'Use Identity Header' Response Code">
        <t>This document registers a new SIP response code, which is described
        in <xref target="sec-verifier-behavior"></xref>. It is sent when a
        verifier receives a SIP request that lacks an Identity header in order
        to indicate that the request should be re-sent with an Identity
        header. This response code is defined by the following information,
        which has been added to the method and response-code sub-registry
        under http://www.iana.org/assignments/sip-parameters</t>

        <figure>
          <artwork><![CDATA[
         Response Code Number: 428
         Default Reason Phrase: Use Identity Header
]]></artwork>
        </figure>
      </section>

      <section anchor="sec-14.3" title="436 'Bad Identity-Info' Response Code">
        <t>This document registers a new SIP response code, which is described
        in <xref target="sec-verifier-behavior"></xref>. It is used when the
        Identity-Info header contains a URI that cannot be dereferenced by the
        verifier (either the URI scheme is unsupported by the verifier, or the
        resource designated by the URI is otherwise unavailable). This
        response code is defined by the following information, which has been
        added to the method and response-code sub-registry under
        http://www.iana.org/assignments/sip-parameters</t>

        <figure>
          <artwork><![CDATA[
         Response Code Number: 436
         Default Reason Phrase: Bad Identity-Info
]]></artwork>
        </figure>
      </section>

      <section anchor="sec-14.4"
               title="437 'Unsupported Certificate' Response Code">
        <t>This document registers a new SIP response code, which is described
        in <xref target="sec-verifier-behavior"></xref>. It is used when the
        verifier cannot validate the certificate referenced by the URI of the
        Identity-Info header, because, for example, the certificate is
        self-signed, or signed by a root certificate authority for whom the
        verifier does not possess a root certificate. This response code is
        defined by the following information, which has been added to the
        method and response-code sub-registry under
        http://www.iana.org/assignments/sip-parameters</t>

        <figure>
          <artwork><![CDATA[
         Response Code Number: 437
         Default Reason Phrase: Unsupported Certificate
]]></artwork>
        </figure>
      </section>

      <section anchor="sec-14.5"
               title="438 'Invalid Identity Header' Response Code">
        <t>This document registers a new SIP response code, which is described
        in <xref target="sec-verifier-behavior"></xref>. It is used when the
        verifier receives a message with an Identity signature that does not
        correspond to the digest-string calculated by the verifier. This
        response code is defined by the following information, which has been
        added to the method and response-code sub-registry under
        http://www.iana.org/assignments/sip-parameters</t>

        <figure>
          <artwork><![CDATA[
         Response Code Number: 438
         Default Reason Phrase: Invalid Identity Header
]]></artwork>
        </figure>
      </section>

      <section anchor="sec-14.6" title="Identity-Info Parameters">
        <t>The IANA has created a new registry for Identity-Info headers. This
        registry is to be prepopulated with a single entry for a parameter
        called 'alg', which describes the algorithm used to create the
        signature that appears in the Identity header. Registry entries must
        contain the name of the parameter and the specification in which the
        parameter is defined. New parameters for the Identity-Info header may
        be defined only in Standards Track RFCs.</t>
      </section>

      <section anchor="sec-14.7"
               title="Identity-Info Algorithm Parameter Values">
        <t>The IANA has created a new registry for Identity-Info 'alg'
        parameter values. This registry is to be prepopulated with a single
        entry for a value called 'rsa-sha1', which describes the algorithm
        used to create the signature that appears in the Identity header.
        Registry entries must contain the name of the 'alg' parameter value
        and the specification in which the value is described. New values for
        the 'alg' parameter may be defined only in Standards Track RFCs.</t>
      </section>

      <section anchor="sec-apendix-a" title="Acknowledgements">
        <t>The authors would like to thank</t>
      </section>

      <section anchor="sec-apendix-c" title="Original RFC 4474 Requirements">
        <t>The following requirements were crafted throughout the development
        of the mechanism described in this document. They are preserved here
        for historical reasons. <list>
            <t>The mechanism must allow a UAC or a proxy server to provide a
            strong cryptographic identity assurance in a request that can be
            verified by a proxy server or UAS.</t>

            <t>User agents that receive identity assurances must be able to
            validate these assurances without performing any network
            lookup.</t>

            <t>User agents that hold certificates on behalf of their user must
            be capable of adding this identity assurance to requests.</t>

            <t>Proxy servers that hold certificates on behalf of their domain
            must be capable of adding this identity assurance to requests; a
            UAC is not required to support this mechanism in order for an
            identity assurance to be added to a request in this fashion.</t>

            <t>The mechanism must prevent replay of the identity assurance by
            an attacker.</t>

            <t>In order to provide full replay protection, the mechanism must
            be capable of protecting the integrity of SIP message bodies (to
            ensure that media offers and answers are linked to the signaling
            identity).</t>

            <t>It must be possible for a user to have multiple AoRs (i.e.,
            accounts or aliases) that it is authorized to use within a domain,
            and for the UAC to assert one identity while authenticating itself
            as another, related, identity, as permitted by the local policy of
            the domain.</t>
          </list></t>
      </section>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <reference anchor="RFC3261">
        <front>
          <title>SIP: Session Initiation Protocol</title>

          <author fullname="J. Rosenberg" initials="J." surname="Rosenberg">
            <organization></organization>
          </author>

          <author fullname="H. Schulzrinne" initials="H."
                  surname="Schulzrinne">
            <organization></organization>
          </author>

          <author fullname="G. Camarillo" initials="G." surname="Camarillo">
            <organization></organization>
          </author>

          <author fullname="A. Johnston" initials="A." surname="Johnston">
            <organization></organization>
          </author>

          <author fullname="J. Peterson" initials="J." surname="Peterson">
            <organization></organization>
          </author>

          <author fullname="R. Sparks" initials="R." surname="Sparks">
            <organization></organization>
          </author>

          <author fullname="M. Handley" initials="M." surname="Handley">
            <organization></organization>
          </author>

          <author fullname="E. Schooler" initials="E." surname="Schooler">
            <organization></organization>
          </author>

          <date month="June" year="2002" />

          <abstract>
            <t>This document describes Session Initiation Protocol (SIP), an
            application-layer control (signaling) protocol for creating,
            modifying, and terminating sessions with one or more participants.
            These sessions include Internet telephone calls, multimedia
            distribution, and multimedia conferences. [STANDARDS-TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3261" />

        <format octets="647976"
                target="http://www.rfc-editor.org/rfc/rfc3261.txt" type="TXT" />
      </reference>

      <reference anchor="RFC2818">
        <front>
          <title>HTTP Over TLS</title>

          <author fullname="E. Rescorla" initials="E." surname="Rescorla">
            <organization></organization>
          </author>

          <date month="May" year="2000" />

          <abstract>
            <t>This memo describes how to use Transport Layer Security (TLS)
            to secure Hypertext Transfer Protocol (HTTP) connections over the
            Internet. This memo provides information for the Internet
            community.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="2818" />

        <format octets="15170"
                target="http://www.rfc-editor.org/rfc/rfc2818.txt" type="TXT" />
      </reference>

      <reference anchor="RFC3280">
        <front>
          <title>Internet X.509 Public Key Infrastructure Certificate and
          Certificate Revocation List (CRL) Profile</title>

          <author fullname="R. Housley" initials="R." surname="Housley">
            <organization></organization>
          </author>

          <author fullname="W. Polk" initials="W." surname="Polk">
            <organization></organization>
          </author>

          <author fullname="W. Ford" initials="W." surname="Ford">
            <organization></organization>
          </author>

          <author fullname="D. Solo" initials="D." surname="Solo">
            <organization></organization>
          </author>

          <date month="April" year="2002" />

          <abstract>
            <t>This memo profiles the X.509 v3 certificate and X.509 v2
            Certificate Revocation List (CRL) for use in the Internet.
            [STANDARDS-TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3280" />

        <format octets="295556"
                target="http://www.rfc-editor.org/rfc/rfc3280.txt" type="TXT" />
      </reference>

      <reference anchor="RFC3548">
        <front>
          <title>The Base16, Base32, and Base64 Data Encodings</title>

          <author fullname="S. Josefsson" initials="S." surname="Josefsson">
            <organization></organization>
          </author>

          <date month="July" year="2003" />

          <abstract>
            <t>This document describes the commonly used base 64, base 32, and
            base 16 encoding schemes. It also discusses the use of line-feeds
            in encoded data, use of padding in encoded data, use of
            non-alphabet characters in encoded data, and use of different
            encoding alphabets. This memo provides information for the
            Internet community.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3548" />

        <format octets="26363"
                target="http://www.rfc-editor.org/rfc/rfc3548.txt" type="TXT" />
      </reference>

      <reference anchor="RFC3370">
        <front>
          <title>Cryptographic Message Syntax (CMS) Algorithms</title>

          <author fullname="R. Housley" initials="R." surname="Housley">
            <organization></organization>
          </author>

          <date month="August" year="2002" />
        </front>

        <seriesInfo name="RFC" value="3370" />

        <format octets="51001"
                target="http://www.rfc-editor.org/rfc/rfc3370.txt" type="TXT" />
      </reference>

      <reference anchor="RFC4234">
        <front>
          <title abbrev="ABNF">Augmented BNF for Syntax Specifications:
          ABNF</title>

          <author fullname="Dave Crocker" initials="D." role="editor"
                  surname="Crocker">
            <organization>Brandenburg InternetWorking</organization>

            <address>
              <postal>
                <street>675 Spruce Dr.</street>

                <city>Sunnyvale</city>

                <region>CA</region>

                <code>94086</code>

                <country>US</country>
              </postal>

              <phone>+1.408.246.8253</phone>

              <email>dcrocker@bbiw.net</email>
            </address>
          </author>

          <author fullname="Paul Overell" initials="P." surname="Overell">
            <organization>THUS plc.</organization>

            <address>
              <postal>
                <street>1/2 Berkeley Square,</street>

                <street>99 Berkeley Street</street>

                <city>Glasgow</city>

                <code>G3 7HR</code>

                <country>UK</country>
              </postal>

              <email>paul.overell@thus.net</email>
            </address>
          </author>

          <date month="October" year="2005" />

          <keyword>ABNF</keyword>

          <keyword>Augmented</keyword>

          <keyword>Backus-Naur</keyword>

          <keyword>Form</keyword>

          <keyword>electronic</keyword>

          <keyword>mail</keyword>

          <abstract>
            <t>Internet technical specifications often need to define a formal
            syntax. Over the years, a modified version of Backus-Naur Form
            (BNF), called Augmented BNF (ABNF), has been popular among many
            Internet specifications. The current specification documents ABNF.
            It balances compactness and simplicity, with reasonable
            representational power. The differences between standard BNF and
            ABNF involve naming rules, repetition, alternatives, order-
            independence, and value ranges. This specification also supplies
            additional rule definitions and encoding for a core lexical
            analyzer of the type common to several Internet
            specifications.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="4234" />

        <format octets="26351"
                target="http://www.rfc-editor.org/rfc/rfc4234.txt" type="TXT" />

        <format octets="52301"
                target="http://xml.resource.org/public/rfc/html/rfc4234.html"
                type="HTML" />

        <format octets="37285"
                target="http://xml.resource.org/public/rfc/xml/rfc4234.xml"
                type="XML" />
      </reference>

      <reference anchor="RFC3893">
        <front>
          <title>Session Initiation Protocol (SIP) Authenticated Identity Body
          (AIB) Format</title>

          <author fullname="J. Peterson" initials="J." surname="Peterson">
            <organization></organization>
          </author>

          <date month="September" year="2004" />

          <abstract>
            <t>RFC 3261 introduces the concept of adding an S/MIME body to a
            Session Initiation Protocol (SIP) request or response in order to
            provide reference integrity over its headers. This document
            provides a more specific mechanism to derive integrity and
            authentication properties from an 'authenticated identity body', a
            digitally-signed SIP message, or message fragment. A standard
            format for such bodies (known as Authenticated Identity Bodies, or
            AIBs) is given in this document. Some considerations for the
            processing of AIBs by recipients of SIP messages with such bodies
            are also given. [STANDARDS-TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3893" />

        <format octets="28500"
                target="http://www.rfc-editor.org/rfc/rfc3893.txt" type="TXT" />
      </reference>

      <reference anchor="RFC3323">
        <front>
          <title>A Privacy Mechanism for the Session Initiation Protocol
          (SIP)</title>

          <author fullname="J. Peterson" initials="J." surname="Peterson">
            <organization></organization>
          </author>

          <date month="November" year="2002" />
        </front>

        <seriesInfo name="RFC" value="3323" />

        <format octets="54116"
                target="http://www.rfc-editor.org/rfc/rfc3323.txt" type="TXT" />
      </reference>

      <reference anchor="RFC2119">
        <front>
          <title abbrev="RFC Key Words">Key words for use in RFCs to Indicate
          Requirement Levels</title>

          <author fullname="Scott Bradner" initials="S." surname="Bradner">
            <organization>Harvard University</organization>

            <address>
              <postal>
                <street>1350 Mass. Ave.</street>

                <street>Cambridge</street>

                <street>MA 02138</street>
              </postal>

              <phone>- +1 617 495 3864</phone>

              <email>sob@harvard.edu</email>
            </address>
          </author>

          <date month="March" year="1997" />

          <area>General</area>

          <keyword>keyword</keyword>

          <abstract>
            <t>In many standards track documents several words are used to
            signify the requirements in the specification. These words are
            often capitalized. This document defines these words as they
            should be interpreted in IETF documents. Authors who follow these
            guidelines should incorporate this phrase near the beginning of
            their document: <list>
                <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
                "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
                "OPTIONAL" in this document are to be interpreted as described
                in RFC 2119.</t>
              </list></t>

            <t>Note that the force of these words is modified by the
            requirement level of the document in which they are used.</t>
          </abstract>
        </front>

        <seriesInfo name="BCP" value="14" />

        <seriesInfo name="RFC" value="2119" />

        <format octets="4723"
                target="http://www.rfc-editor.org/rfc/rfc2119.txt" type="TXT" />

        <format octets="17970"
                target="http://xml.resource.org/public/rfc/html/rfc2119.html"
                type="HTML" />

        <format octets="5777"
                target="http://xml.resource.org/public/rfc/xml/rfc2119.xml"
                type="XML" />
      </reference>
    </references>

    <references title="Informative References">
      <reference anchor="RFC4474">
        <front>
          <title>Enhancements for Authenticated Identity Management in the
          Session Initiation Protocol (SIP)</title>

          <author fullname="J. Peterson" initials="J." surname="Peterson">
            <organization></organization>
          </author>

          <author fullname="C. Jennings" initials="C." surname="Jennings">
            <organization></organization>
          </author>

          <date month="August" year="2006" />

          <abstract>
            <t>The existing security mechanisms in the Session Initiation
            Protocol (SIP) are inadequate for cryptographically assuring the
            identity of the end users that originate SIP requests, especially
            in an interdomain context. This document defines a mechanism for
            securely identifying originators of SIP messages. It does so by
            defining two new SIP header fields, Identity, for conveying a
            signature used for validating the identity, and Identity-Info, for
            conveying a reference to the certificate of the signer.
            [STANDARDS-TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="4474" />

        <format octets="104952"
                target="http://www.rfc-editor.org/rfc/rfc4474.txt" type="TXT" />
      </reference>

      <reference anchor="RFC3325">
        <front>
          <title>Private Extensions to the Session Initiation Protocol (SIP)
          for Asserted Identity within Trusted Networks</title>

          <author fullname="C. Jennings" initials="C." surname="Jennings">
            <organization></organization>
          </author>

          <author fullname="J. Peterson" initials="J." surname="Peterson">
            <organization></organization>
          </author>

          <author fullname="M. Watson" initials="M." surname="Watson">
            <organization></organization>
          </author>

          <date month="November" year="2002" />
        </front>

        <seriesInfo name="RFC" value="3325" />

        <format octets="36170"
                target="http://www.rfc-editor.org/rfc/rfc3325.txt" type="TXT" />
      </reference>

      <reference anchor="RFC4475">
        <front>
          <title>Session Initiation Protocol (SIP) Torture Test
          Messages</title>

          <author fullname="R. Sparks" initials="R." surname="Sparks">
            <organization></organization>
          </author>

          <author fullname="A. Hawrylyshen" initials="A."
                  surname="Hawrylyshen">
            <organization></organization>
          </author>

          <author fullname="A. Johnston" initials="A." surname="Johnston">
            <organization></organization>
          </author>

          <author fullname="J. Rosenberg" initials="J." surname="Rosenberg">
            <organization></organization>
          </author>

          <author fullname="H. Schulzrinne" initials="H."
                  surname="Schulzrinne">
            <organization></organization>
          </author>

          <date month="May" year="2006" />

          <abstract>
            <t>This informational document gives examples of Session
            Initiation Protocol (SIP) test messages designed to exercise and
            "torture" a SIP implementation. This memo provides information for
            the Internet community.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="4475" />

        <format octets="93276"
                target="http://www.rfc-editor.org/rfc/rfc4475.txt" type="TXT" />
      </reference>

      <reference anchor="RFC3761">
        <front>
          <title>The E.164 to Uniform Resource Identifiers (URI) Dynamic
          Delegation Discovery System (DDDS) Application (ENUM)</title>

          <author fullname="P. Faltstrom" initials="P." surname="Faltstrom">
            <organization></organization>
          </author>

          <author fullname="M. Mealling" initials="M." surname="Mealling">
            <organization></organization>
          </author>

          <date month="April" year="2004" />

          <abstract>
            <t>This document discusses the use of the Domain Name System (DNS)
            for storage of E.164 numbers. More specifically, how DNS can be
            used for identifying available services connected to one E.164
            number. It specifically obsoletes RFC 2916 to bring it in line
            with the Dynamic Delegation Discovery System (DDDS) Application
            specification found in the document series specified in RFC 3401.
            It is very important to note that it is impossible to read and
            understand this document without reading the documents discussed
            in RFC 3401. [STANDARDS-TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3761" />

        <format octets="41559"
                target="http://www.rfc-editor.org/rfc/rfc3761.txt" type="TXT" />
      </reference>

      <reference anchor="RFC3966">
        <front>
          <title>The tel URI for Telephone Numbers</title>

          <author fullname="H. Schulzrinne" initials="H."
                  surname="Schulzrinne">
            <organization></organization>
          </author>

          <date month="December" year="2004" />

          <abstract>
            <t>This document specifies the URI (Uniform Resource Identifier)
            scheme "tel". The "tel" URI describes resources identified by
            telephone numbers. This document obsoletes RFC 2806.
            [STANDARDS-TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3966" />

        <format octets="40783"
                target="http://www.rfc-editor.org/rfc/rfc3966.txt" type="TXT" />
      </reference>

      <reference anchor="I-D.peterson-sipping-retarget">
        <front>
          <title>Retargeting and Security in SIP: A Framework and
          Requirements</title>

          <author fullname="Jon  Peterson" initials="J" surname="Peterson">
            <organization></organization>
          </author>

          <date day="15" month="February" year="2005" />

          <abstract>
            <t>Retargeting, the alteration by intermediaries of the
            destination of a Session Initiation Protocol (SIP) request, is a
            common practice performed during the routing of a call. Some forms
            of retargeting, however, give rise to security problems and
            potential functional gaps in SIP. This document provides a general
            framework for discussion of the security problems relating to
            retargeting, and gives requirements for mechanisms that might
            overcome these problems.</t>
          </abstract>
        </front>

        <seriesInfo name="Internet-Draft"
                    value="draft-peterson-sipping-retarget-00" />

        <format target="http://www.ietf.org/internet-drafts/draft-peterson-sipping-retarget-00.txt"
                type="TXT" />
      </reference>

      <reference anchor="RFC2585">
        <front>
          <title abbrev="PKIX Operational Protocols: FTP and HTTP">Internet
          X.509 Public Key Infrastructure Operational Protocols: FTP and
          HTTP</title>

          <author fullname="Russell Housley" initials="R." surname="Housley">
            <organization>SPYRUS</organization>

            <address>
              <postal>
                <street>381 Elden Street</street>

                <street>Suite 1120</street>

                <street>Suite 1120</street>

                <city>Herndon</city>

                <region>VA</region>

                <code>20170</code>

                <country>US</country>
              </postal>

              <email>housley@spyrus.com</email>
            </address>
          </author>

          <author fullname="Paul Hoffman" initials="P." surname="Hoffman">
            <organization>Internet Mail Consortium</organization>

            <address>
              <postal>
                <street>127 Segre Place</street>

                <city>Santa Cruz</city>

                <region>CA</region>

                <code>95060</code>

                <country>US</country>
              </postal>

              <email>phoffman@imc.org</email>
            </address>
          </author>

          <date month="May" year="1999" />

          <abstract>
            <t>The protocol conventions described in this document satisfy
            some of the operational requirements of the Internet Public Key
            Infrastructure (PKI). This document specifies the conventions for
            using the File Transfer Protocol (FTP) and the Hypertext Transfer
            Protocol (HTTP) to obtain certificates and certificate revocation
            lists (CRLs) from PKI repositories. Additional mechanisms
            addressing PKIX operational requirements are specified in separate
            documents.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="2585" />

        <format octets="14813"
                target="http://www.rfc-editor.org/rfc/rfc2585.txt" type="TXT" />
      </reference>

      <reference anchor="RFC3263">
        <front>
          <title>Session Initiation Protocol (SIP): Locating SIP
          Servers</title>

          <author fullname="J. Rosenberg" initials="J." surname="Rosenberg">
            <organization></organization>
          </author>

          <author fullname="H. Schulzrinne" initials="H."
                  surname="Schulzrinne">
            <organization></organization>
          </author>

          <date month="June" year="2002" />

          <abstract>
            <t>The Session Initiation Protocol (SIP) uses DNS procedures to
            allow a client to resolve a SIP Uniform Resource Identifier (URI)
            into the IP address, port, and transport protocol of the next hop
            to contact. It also uses DNS to allow a server to send a response
            to a backup client if the primary client has failed. This document
            describes those DNS procedures in detail. [STANDARDS-TRACK]</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="3263" />

        <format octets="42310"
                target="http://www.rfc-editor.org/rfc/rfc3263.txt" type="TXT" />
      </reference>

      <reference anchor="RFC6919">
        <front>
          <title>Further Key Words for Use in RFCs to Indicate Requirement
          Levels</title>

          <author fullname="R. Barnes" initials="R." surname="Barnes">
            <organization></organization>
          </author>

          <author fullname="S. Kent" initials="S." surname="Kent">
            <organization></organization>
          </author>

          <author fullname="E. Rescorla" initials="E." surname="Rescorla">
            <organization></organization>
          </author>

          <date month="April" year="1 2013" />

          <abstract>
            <t>RFC 2119 defines a standard set of key words for describing
            requirements of a specification. Many IETF documents have found
            that these words cannot accurately capture the nuanced
            requirements of their specification. This document defines
            additional key words that can be used to address alternative
            requirements scenarios. Authors who follow these guidelines should
            incorporate this phrase near the beginning of their
            document:&lt;/t&gt;&lt;t&gt; The key words "MUST (BUT WE KNOW YOU
            WON\'T)", "SHOULD CONSIDER", "REALLY SHOULD NOT", "OUGHT TO",
            "WOULD PROBABLY", "MAY WISH TO", "COULD", "POSSIBLE", and "MIGHT"
            in this document are to be interpreted as described in RFC
            6919.</t>
          </abstract>
        </front>

        <seriesInfo name="RFC" value="6919" />

        <format octets="11076"
                target="http://www.rfc-editor.org/rfc/rfc6919.txt" type="TXT" />
      </reference>

      <reference anchor="RFC2234">
        <front>
          <title abbrev="ABNF for Syntax Specifications">Augmented BNF for
          Syntax Specifications: ABNF</title>

          <author fullname="David H. Crocker" initials="D." role="editor"
                  surname="Crocker">
            <organization>Internet Mail Consortium</organization>

            <address>
              <postal>
                <street>675 Spruce Dr.</street>

                <city>Sunnyvale</city>

                <region>CA</region>

                <code>94086</code>

                <country>US</country>
              </postal>

              <phone>+1 408 246 8253</phone>

              <facsimile>+1 408 249 6205</facsimile>

              <email>dcrocker@imc.org</email>
            </address>
          </author>

          <author fullname="Paul Overell" initials="P." surname="Overell">
            <organization>Demon Internet Ltd.</organization>

            <address>
              <postal>
                <street>Dorking Business Park</street>

                <street>Dorking</street>

                <city>Surrey</city>

                <region>England</region>

                <code>RH4 1HN</code>

                <country>UK</country>
              </postal>

              <email>paulo@turnpike.com</email>
            </address>
          </author>

          <date month="November" year="1997" />

          <keyword>ABNF</keyword>

          <keyword>Augmented</keyword>

          <keyword>Backus-Naur</keyword>

          <keyword>Form</keyword>

          <keyword>electronic</keyword>

          <keyword>mail</keyword>
        </front>

        <seriesInfo name="RFC" value="2234" />

        <format octets="24265"
                target="http://www.rfc-editor.org/rfc/rfc2234.txt" type="TXT" />

        <format octets="42947"
                target="http://xml.resource.org/public/rfc/html/rfc2234.html"
                type="HTML" />

        <format octets="24417"
                target="http://xml.resource.org/public/rfc/xml/rfc2234.xml"
                type="XML" />
      </reference>




  <reference anchor="I-D.cooper-iab-secure-origin-00">
       <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Secure Origin">Secure Call Origin Identification</title>

    <!--add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Alissa Cooper" initials="A." surname="Cooper">
      <organization>CDT</organization>

      <address>
        <postal>
          <street>1634 Eye St. NW, Suite 1100</street>

          <city>Washington</city>

          <region>DC</region>

          <code>20006</code>

          <country>USA</country>
        </postal>

        <email>acooper@cdt.org</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
      <organization>Nokia Siemens Networks</organization>
      <address>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>

        <author fullname="Jon Peterson" initials="J." surname="Peterson">
      <organization>NeuStar</organization>
      <address>
        <email>jon.peterson@neustar.biz</email>
      </address>
    </author>

        <author fullname="Bernard Aboba" initials="B." surname="Aboba">
      <organization>Microsoft</organization>
      <address>
        <email>bernard.aboba@gmail.com</email>
      </address>
    </author>

    <date day="30" month="November" year="2012"/>

 
    <area>General</area>

    <workgroup>Network Working Group</workgroup>

    <abstract>
      <t>A number of parties have suggested creating mandates such that
                   networks receiving voice calls would be capable of securely
                   identifying the call origin. This
                   document provides insights about the capabilities and limitations of
                   supporting call origin identification in a secure and privacy-
                   friendly way in the PSTN and for IP-based real-time communications.</t>
    </abstract>
  </front>

        <seriesInfo name="Internet-Draft"
                    value="draft-cooper-iab-secure-origin-00" />

        <format target="http://www.ietf.org/internet-drafts/draft-cooper-iab-secure-origin00.txt"
                type="TXT" />
      </reference>


   <reference anchor="I-D.peterson-secure-origin-ps">
       

 <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Secure Origin Identification">Secure Origin Identification: Problem Statement, Requirements, and Roadmap</title>

        <author initials="J." surname="Peterson" fullname="Jon Peterson">
            <organization abbrev="NeuStar, Inc.">NeuStar, Inc.</organization>
            <address>
                <postal>
                    <street>1800 Sutter St Suite 570</street>
                    <city>Concord</city>
                    <region>CA</region>
                    <code>94520</code>
                    <country>US</country>
                </postal>
                <email>jon.peterson@neustar.biz</email>
            </address>
        </author>

    
   <author initials="H." surname="Schulzrinne" fullname="Henning Schulzrinne">
            <organization>Columbia University</organization>
            <address>
                <postal>
                    <street>Department of Computer Science</street>
                    <street>450 Computer Science Building</street>
                    <city>New York</city>
                    <region>NY</region>
                    <code>10027</code>
                    <country>US</country>
                </postal>
                <phone>+1 212 939 7004</phone>
                <email>hgs+ecrit@cs.columbia.edu</email>
                <uri>http://www.cs.columbia.edu</uri>
            </address>                  
    </author>
    
     <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
      <organization>Nokia Siemens Networks</organization>
      <address>
        <postal>
          <street>Linnoitustie 6</street>
          <city>Espoo</city>
          <region></region>
          <code>02600</code>
          <country>Finland</country>
        </postal>
        <phone>+358 (50) 4871445</phone>
        <email>Hannes.Tschofenig@gmx.net</email>
        <uri>http://www.tschofenig.priv.at</uri>
      </address>
    </author>


 <date year="2013" month="May" day="27"/>

    <!--    <area>
    Security
    </area>-->

    <keyword>SIP</keyword>

    <keyword>XMPP</keyword>

    <keyword>Secure Origin Identification</keyword>

    <keyword>Communication Security</keyword>
    
    <keyword>RTCWeb</keyword>

    <keyword>Problem Statement</keyword>

    <keyword>Real-Time Communication</keyword>

    <abstract>
      <t>Over the past decade, SIP has become a major signaling protocol for voice communications, one which has replaced many traditional telephony deployments. However, interworking SIP with the traditional telephone network has ultimately reduced the security of Caller ID systems. Given the widespread interworking of SIP with the telephone network, the lack of effective standards for identifying the calling party in a SIP session has granted attackers new powers as they impersonate or obscure calling party numbers when orchestrating bulk commercial calling schemes, hacking voicemail boxes or even circumventing multi-factor authentication systems trusted by banks. This document therefore examines the reasons why providing identity for telephone numbers on the Internet has proven so difficult, and shows how changes in the last decade may provide us with new strategies for attaching a secure identity to SIP sessions.</t>
    </abstract>
  </front>



        <seriesInfo name="Internet-Draft"
                    value="draft-peterson-secure-origin-ps-00" />

        <format target="http://www.ietf.org/internet-drafts/draft-peterson-secure-origin-ps-00.txt"
                type="TXT" />
      </reference>



<reference anchor='I-D.rescorla-rtcweb-generic-idp'>
<front>
<title>RTCWEB Generic Identity Provider Interface</title>

<author initials='E' surname='Rescorla' fullname='Eric Rescorla'>
    <organization />
</author>

<date month='March' day='12' year='2012' />

<abstract><t>Security for RTCWEB communications requires that the communicating endpoints be able to authenticate each other.  While authentication may be mediated by the calling service, there are settings in which this is undesirable.  This document describes a generic mechanism for leveraging existing identity providers (IdPs) such as BrowserID or OAuth to provide this authentication service.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-rescorla-rtcweb-generic-idp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-rescorla-rtcweb-generic-idp-01.txt' />
</reference>








<reference anchor='I-D.rescorla-callerid-fallback'>


 <front>
    <title abbrev="Caller-ID Fallback">Secure Caller-ID Fallback Mode</title>

    <author fullname="Eric Rescorla" initials="E.K." surname="Rescorla">
      <organization>RTFM, Inc.</organization>

      <address>
        <postal>
          <street>2064 Edgewood Drive</street>

          <city>Palo Alto</city>

          <region>CA</region>

          <code>94303</code>

          <country>USA</country>
        </postal>

        <phone>+1 650 678 2350</phone>

        <email>ekr@rtfm.com</email>
      </address>
    </author>

    <date day="29" month="May" year="2013" />

    <area>RAI</area>

<!--    <workgroup>RTCWEB</workgroup> -->

    <abstract>
      <t>
        A major challenge with RFC 4474-style identity assertions has been
        that SIP operates in highly mediated and interworked environments.
        SIP requests may pass through gateways, policy enforcement devices
        or other entities that receive SIP requests and effectively act as user agents, 
        re-initiating a request.  In these circumstances, intermediaries may 
        recreate the fields protected by the RFC4474 signature, making end-to
        end integrity impossible.  This document describes a mechanism for two 
        compliant endpoints to exchange authentication data even in the face of
        intermediaries which remove all additional call signaling meta-data.
      </t>
    </abstract>
  
  </front>

 
<seriesInfo name='Internet-Draft' value='draft-rescorla-callerid-fallback-00' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-rescorla-callerid-fallback-00.txt' />
</reference>






    </references>
  </back>
</rfc>
