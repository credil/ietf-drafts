<?xml version="1.0" ?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no"?>
<?rfc strict="yes"?>
<?rfc compact="yes" ?> 
<?rfc subcompact="yes" ?>


<rfc category="info" ipr="trust200902" docName="draft-liu-i2rs-architecture-02">
<front>
<title abbrev="i2rs architecture">Architecture Discussion of I2RS</title>

<author initials="D." surname="Liu" fullname="Dapeng Liu">
  <organization>China Mobile</organization>
  <address>
    <postal>
      <street>Unit2, 28 Xuanwumenxi Ave,Xuanwu District</street>
      <city>Beijing 100053</city>
      <country>China</country>
    </postal>
    <email>liudapeng@chinamobile.com
    </email>
  </address>
</author>


<author initials="B." surname="Khasnabish" fullname="Bhumip Khasnabish">
  <organization>ZTE</organization>
  <address>
    <postal>
          <street>55 Madison Avenue, Suite 160</street>
          <city>Morristown</city>
          <region>New Jersey</region>
          <code>07960</code>
          <country>USA </country>
     </postal>
      <phone>+001-781-752-8003</phone>
      <email>vumip1@gmail.com, bhumip.khasnabish@zteusa.com</email>
  </address>
</author>


<author initials="H." surname="Deng" fullname="Hui Deng">
  <organization>China Mobile</organization><address>
  <postal>
  <street>Unit2, 28 Xuanwumenxi Ave,Xuanwu District</street><city>Beijing 100053</city><country>China</country></postal>
  <email>denghui@chinamobile.com</email></address>
</author>



<date month="July" year="2013"/><area></area><workgroup>I2RS</workgroup>

 <abstract>
  <t>
    This document discusses the high level architecture of I2RS. This document also provides brief descriptions
    on the use of virtualization and its impact on constructing chained and grouped services. 
    We plan to include further details on virtualization, service chaining, and grouping in a 
    future version of this draft. 
  </t>
</abstract>
</front>

<middle>
<section anchor="intro" title="Introduction">
  <t>
    This document discusses the high level architecture of I2RS.
    As illustrated in figure 1, the I2RS architecture is composed by three types of building blocks.
    The first type of the building block is the user of I2RS interface. The users could be 
    network controllers, network management functions, other user applications etc. The user application uses 
    the I2RS interface interacts with the routing system. The second type of the building block is management 
    functions. This include configuration management function and security management function. The configuration management
    function is used to configure the I2RS interface. The security function is used to enforce the security polices of 
    the I2RS interface. The third type of the building block is routing function. This build block includes routing 
    information base, IP forwarding table etc. The routing information base could be accessed by the I2RS users using 
    the I2RS interface. Besides, the routing control and the forwarding function could also be separated. The interface
    between the routing control and forwarding function could be open flow, ForCES etc.    
  </t>

    <figure align="center" title="architecture of I2RS" anchor="architec_i2rs">
       
        <artwork align="center"><![CDATA[












+------------------+  +------------------+  +-----------------+
|Network Controller|  |Network Management|  | User Application|..
+------------------+  +------------------+  +-----------------+
            |               | |                     |
            \---------------| |--------------------/
                            | | I2RS Interface
+----------------------+    | |     +------------------+
|Configuration Function|----| |-----|Security Function |
+----------------------+    | |     +------------------+
                            | |
                            | |                 Routing Function
+---------------------------| |--------------------------------+
|                           | |                                |
|   +------------+          | |             +-----------+      |
|   |OSPF process|          | |             |BGP process| ...  |
|   +------------+          | |             +-----------+      |
|          |            +--------+                |            | 
|          |            | Agent  |                |            |
|          |            +--------+                |            |
|          |     +----------|-------------+       |            |                  
|          +-----|Routing Information Base|-------+            |
|                +------------------------+                    |
|                           |                                  |
+---------------------------|----------------------------------+
                            |
 {OF, ForCES, .. Protocol}  |               Forwarding Function
+---------------------------|----------------------------------+
|                           |                                  |
|                           |                                  |
|                   +--------------------+                     |
|                   | IP Forwarding Table|                     |
|                   +--------------------+                     |
|                                                              |
+--------------------------------------------------------------+

            ]]></artwork>
      </figure>
     
</section>



<section title="Conventions used in this document">
<t>
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC-2119 [RFC2119]. 
</t>
<t>
In this document, these words will appear with that interpretation only when in ALL CAPS. Lower case uses of these words are not to be interpreted as carrying RFC-2119 significance.
</t>
   
<t>
A list of acronyms and abbreviations used in this document are presented below.
</t>

<t>
  <list style='symbols'> 

	<t> ForCES: Forwarding and Control Element separation </t>

	<t> I2RS: Interface to Routing System </t>

  <t> NF: Network Function</t>
	
	<t> NSC: Network Service Chaining </t>

	<t> NSG: Network Service Grouping </t>   

	<t> OF: Open Flow </t>

	<t> RIB: Routing Information Base </t>
	
	<t> SF: Service Function</t>

	<t> TIB: Topology Information Base </t>

	<t> VF: Virtualized Function </t>

	<t> VNF: Virtualized Network Function </t>

	<t> VSF: Virtualized Service Function </t> 
	 

  </list>
</t>

</section> <!-- END of Conventions used in this document -->

 


<section title="Architecture of I2RS">
  <t>
    This section discusses the function of the building block of the I2RS architecture. These functional building blocks 
    could be either physical or virtual or hybrid, i.e., a combination of physical and virtual blocks.  
  </t>

  <t>
    i. I2RS application
  </t>
  <t>
    The I2RS applications communicate with the I2RS agent using the I2RS interface. The I2RS agent 
    locates in the router that implement the I2RS interface. The I2RS agent communicates with
    the routing system. The interface between the I2RS agent and the routing system could be implementation
    specific.
    
    The I2RS application can read the routing information from the routing information base, it can also inject
    polices, routing information etc into the routing information base. The I2RS interface could be RESTful API or
    websocket etc. There should be an authentication mechanism in the I2RS architecture that only allow the authorized 
    application communicate with the I2RS agent.
  </t>

  <t>
    ii. Configuration function
  </t>
  <t>
    The I2RS interface could be configured by the configuration function. The I2RS user application could customize 
    the I2RS interface function and set the I2RS interface parameters by the configuration function. The network
    administrator can also use this configuration function to control the I2RS interface parameters. For example,
    the network administrator may need to control a certain scope of the routing information could be
    accessed by a specific I2RS application. The network administrator can use the configuration function
    to implement those settings.
  </t>

  <t>
    Virtualization of the configuration function through appropriate management and/or visor function would help 
    achieve (a) efficient management of configuration resources, and (b) desired chaining/grouping of the resources 
    for dynamically balancing/distributing operational loads.  
  </t>

  <t>
    iii. Security function
  </t>
  <t>
    Security function is an important building block of the I2RS architecture. It will ensure only authorized application 
    can use the I2RS interface and communicate with the routing system. There could be different level of authorization. 
    For example, the security function can allow some application only read from the routing system while other     
    application can both read and inject polices into the routing system. 
  </t>
  <t>
   Virtualization of the security function would help move the service closer to the utilization point based on the   
   desired requirements without moving the physical device (or installing new purpose-built devices). 
  </t>

  <t>
    iv. Routing function
  </t>
  <t>
    The routing function is composed of routing information base (RIB), IP forwarding table and the routing processes. 
    The I2RS application could communicate with the routing information base using the I2RS interface. The agent
    function locates in the router could communicate with the routing information base and the I2RS application. It
    receives the I2RS application's request and convert it to the implementation specific command to get/set
    the routing information base. By this way, the I2RS application can read or inject routing information
    into the routing information base. The routing processes can also inject routing 
    information into the routing information base. There should be a protection mechanism to 
    prevent any race condition of the routing information base be modified by different
    entities simultaneously. The Routing function can be virtualized. 
  </t>

  <t>
    iv. Forwarding function
  </t>
  <t>
    The forwarding function facilitates forwarding of flows/packets. It can operate using simple
    Table or sophisticated dynamic matrix for intelligent processing of flows. 
    The forwarding function can be virtualized.  
  </t>
</section>

<section title="I2RS Application/Agent">
	<t>
		This section discusses the I2RS application and agent function in the architecture.
		There are many applications can use the I2RS interfaces. For example, network management
		application can use I2RS interface to get the network topology information.
		I2RS agent locates in the routing function and communicates with the I2RS application.
		The I2RS agent locates in the router, it can communicate with the I2RS application using
		the I2RS interface. The I2RS agent convert the I2RS application's command into implementation
		specific functions to get/set the routing information base.
	</t>
</section>

<section title="I2RS Interfaces">
	<t>
		This section discusses the I2RS interfaces in the architecture. The I2RS interface
		is the interface between the I2RS application and the I2RS agent. The requirement
		of the I2RS interface includes the following aspects:
		(1) The I2RS interface should support multiplexing function that allows multiple I2RS
		applications communicate with one I2RS agent and one I2RS application communicates
		with multiple I2RS agents.
		(2) The I2RS interface should support authentication/authorization mechanism that allow only
		the authorized I2RS application access specific routing information. The I2RS interface
		should support encryption and data integrity protection mechanism.
		(3) The I2RS interface should support data protection mechanism to prevent the 
		race condition.
		(4) The I2RS interface should provide scalability and extensibility.
	</t>
</section>

<section title="Network/Service Control">
	<t>
		This section discusses the network and service control in the architecture.
		Network control may include control of both virtual and physical network entities.
    The services may include chaining of network services (NSCs) and grouping network services (NSGs).
	</t>
	
					<figure align="center" title="Network Function Service Chaining" anchor="NF_chaining">
				        <artwork align="center"><![CDATA[
				
				
				
				
								                                  ^
                ._._._._._._._._._._._._._._      | 
                |                        ---|----------------
             -------      -------        |Control/Managemnt |
          <- |VNF-1|   <- |VNF-n|._._._._|   of VNFs        |-->
             |     |  ... |     |        |                  |
             -------      -------        --------------------
                |.............|
                      |
                      |
              /----------------\ 
             | Virtualization/  |
             |   Abstraction    |
              \----------------/
                      |
                      |
              ...................
              :   Network       :
              :   Function (NF) :
              :.................:

				            ]]></artwork>
				  </figure>
				  
				  
				  
				  <figure align="center" title="Service Function Service Chaining" anchor="SF_chaining">
				       
				        <artwork align="center"><![CDATA[
								                                  ^
                ._._._._._._._._._._._._._._      | 
                |                        ---|----------------
             -------      -------        |Control/Managemnt |
          <- |VSF-1|   <- |VSF-n|._._._._|   of VSFs        |-->
             |     |  ... |     |        |                  |
             -------      -------        --------------------
                |.............|
                      |
                      |
              /----------------\ 
             | Virtualization/  |
             |   Abstraction    |
              \----------------/
                      |
                      |
              ...................
              :   Service       :
              :   Function (SF) :
              :.................:

				            ]]></artwork>
				  </figure>
				    
</section>

<section title="Management Considerations">
	<t>
		This section discusses the management consideration of the architecture. In addition to managing
		the configurations of the virtual and physical network entities, this may include managing
		service-specific meta-data and configurations of the hosts that provide network-based
		value-added services like policy, compliance, load-balancing, and so on.
	</t>
</section>
     
<section anchor="security" title="Security Considerations">
  <t>
    Security function is very important for the I2RS architecture. It should provide authentication mechanism and 
    data protection mechanism to protect critical routing information.
  </t>
</section>

<section title="IANA Considerations">
<t>To be determined later.</t>
</section>


<section title="Acknowledgments">
<t>.</t>
</section>

</middle>

<back>

<references title="Normative References">
  <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>     

</references>
             
<references title="Informative References">
		<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2328.xml"?> 
		<?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4271.xml"?>

		<reference anchor='DMTF-DSP0243'> 
		    <front>
		     	<title>DMTF DSP0243, Open Virtualization Format Specification 2.0</title>
		     	<author initials="" surname="" fullname="">
		      	<organization/>
		     	</author>
		      <date month="December" year="2012"/>
		    </front>
		    <format type="PDF" target="http://www.dmtf.org/standards/published_documents/DSP0243_2.0.pdf"/>
		</reference>
		
		<reference anchor='DMTF-DSP0263'> 
		    <front>
		     	<title>DMTF DSP0263, Cloud Infrastructure Management Interface (CIMI) Model and REST Interface over HTTP 1.0</title>
		     	<author initials="" surname="" fullname="">
		      	<organization/>
		     	</author>
		      <date month="September" year="2012"/>
		    </front>
		    <format type="PDF" target="http://www.dmtf.org/standards/published_documents/DSP0263_1.0.pdf"/>
		</reference>
		
		<reference anchor='DMTF-DSP2029'> 
		    <front>
		     	<title>DMTF DSP2029, Cloud Management for Communications Service Providers 1.0</title>
		     	<author initials="" surname="" fullname="">
		      	<organization/>
		     	</author>
		      <date month="January" year="2012"/>
		    </front>
		    <format type="PDF" target="http://www.dmtf.org/sites/default/files/standards/documents/DSP2029%20_1.0.0a.pdf "/>
		</reference>
		
		<reference anchor='DMTF-DSP2034'> 
		    <front>
		     	<title>DMTF DSP2034, Network Services Management Use Cases, 1.0a</title>
		     	<author initials="" surname="" fullname="">
		      	<organization/>
		     	</author>
		      <date month="March" year="2013"/>
		    </front>
		    <format type="PDF" target="http://www.dmtf.org/sites/default/files/standards/documents/DSP2034_1.0.0a.pdf"/>
		</reference>       

</references>

</back>
</rfc>