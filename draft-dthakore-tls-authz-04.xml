<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="no" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="yes" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->

<rfc category="info" docName="draft-dthakore-tls-authz-04" ipr="trust200902" submissionType="independent">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="TLS Auth Using DTCP">Transport Layer Security (TLS) Authorization Using DTCP Certificate</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="D. Thakore" initials="D." surname="Thakore">
      <organization abbrev="CableLabs">Cable Television Laboratories, Inc.</organization>
      <address>
        <postal>
          <street>858 Coal Creek Circle</street>
          <city>Louisville</city>
          <region>CO</region>
          <code>80023</code>
          <country>USA</country>
        </postal>
        <email>d.thakore@cablelabs.com</email>
        </address>
    </author>
    <date month="July" year="2013" />
    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->
    <area>Security</area>    
    <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.  
	      If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->
    <workgroup>Transport Layer Security</workgroup>
    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->    
    <keyword>TLS</keyword>
    <keyword>SupplementalData</keyword>
    <keyword>DTCP</keyword>
    
    <abstract>
      <t>
        This document specifies the use of Digital Transmission Content 
        Protection (DTCP) certificates as an authorization data type in the 
        authorization extension for the Transport Layer Security (TLS) Protocol. 
        This is in accordance with the guidelines for authorization extensions
        as specified in <xref target="RFC5878"></xref>. As with other TLS extensions,
        this authorization data can be included in the client and 
        server Hello messages to confirm that both parties support the desired 
        authorization data types. If supported by both the client and the server,
        DTCP certificates are exchanged in the supplemental data TLS handshake message 
        as specified in RFC4680. This authorization data type extension is in
        support of devices containing DTCP certificates, issued by the 
        Digital Transmission Licensing Administrator <xref target="DTLA"></xref>.
      </t>
    </abstract>
    
  </front>

  <!-- ***** MAIN MATTER ***** -->
  <middle>

    <section title="Introduction">
      <t>
        The Transport Layer Security (TLS) protocol (<xref target="RFC2246">TLS1.0</xref>, 
        <xref target="RFC4346">TLS1.1</xref>, <xref target="RFC5246">TLS1.2</xref>) is being used
        in an ever increasing variety of operational environments, the most common among which is its use 
        in securing HTTP traffic (<xref target="RFC2818"></xref>). 
        <xref target="RFC5878"></xref> introduces extensions that enable TLS to operate
        in environments where authorization information needs to be exchanged between the client
        and the server before any protected data is exchanged. The use of these TLS authorization
        extensions is especially attractive since it allows the client and server to
        determine the type of protected data to exchange based on the authorization information 
        received in the extensions.
      </t>
      
      <t>
        A substantial number of deployed consumer electronics devices such as 
        televisions, tablets, game consoles, set-top boxes and other multimedia 
        devices contain <xref target="DTLA"></xref> issued
        <xref target="DTCP">Digital Transmission Content Protection</xref> certificates. 
        These DTCP certificates enable secure transmission of premium audio-visual
        content between devices over various types of links (e.g., <xref target="DTCP-IP">DTCP over IP</xref>).
        These DTCP certificates can also be used to verify device functionality (e.g., supported device features)                
      </t>
            
      <t>
        This document describes the format and necessary identifiers to exchange DTCP certificates within the
        supplemental data message (see <xref target="RFC4680"></xref>) while negotiating a TLS session. 
        The DTCP certificates are then used independent of their use
        for content protection (e.g., to verify supported features) and 
        the corresponding DTCP Authentication and Key Exchange (AKE) protocol. 
        This communication allows either the client or the server or both to perform certain
        actions or provide specific services. The actual semantics of the authorization decision by the client/server
        are beyond the scope of this document. The DTCP certificate, which is not
        an X.509 certificate, can be cryptographically tied to the 
        X.509 certificate being used during the TLS tunnel establishment by an <xref target="DTCP">EC-DSA</xref>
        signature. 
      </t>
      
      <section title="Applicability Statement">
        <t>
          DTCP-enabled consumer electronics devices (eg. televisions, game consoles) use DTCP 
          certificates for secure transmission of audio-visual content. 
          The Authentication and Key Exchange (AKE) protocol defined in
          <xref target="DTCP"></xref> is used to exchange DTCP Certificates 
          and allows a device to be identified and 
          authenticated based on the information in the DTCP Certificate. 
          However these DTCP-enabled devices offer additional
          functionality (e.g., via HTML5 User Agents or web enabled applications) 
          that is distinct from its capability to transmit and
          play audio-visual content. The mechanism outlined in this document 
          allows a DTCP-enabled consumer electronics device to authenticate and 
          authorize using its DTCP Certificate when accessing services 
          over the internet; for example ,web applications on televisions that can enable 
          value-added services. This is anticipated to be very valuable since there are
          a considerable number of such devices. The re-use of well-known web security
          will also keep such communication consistent with existing standards and
          best practices.
        </t>
      </section>

      <section title="Conventions">
        <t>
          The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
          "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be 
          interpreted as described in <xref target="RFC2119">RFC 2119</xref>.
        </t>
      </section>
      
    </section>
    
    <section title="Overview" anchor="overview">
      
      <section title="Overview of DTCP Certificates">
        
        <t>
          DTCP certificates issued by <xref target="DTLA"></xref> to 
          DTLA-compliant devices come in three general variations
          (see <xref target="DTCP"></xref>, Section 4.2.3.1)
          <list style="hanging" hangIndent="4">
            <t hangText="* Restricted Authentication device certificate format (Format 0):">
              Typically issued to devices with limited computation resources. 
              <vspace />
            </t>
            <t hangText="* Baseline Full Authentication device certificate format (Format 1):">
              This is the most commonly issued certificate format. Format 1 certificates include a unique Device ID
              and device EC-DSA public/private key pair generated by the DTLA. 
              (See Section 4.3 of <xref target="DTCP"></xref>)
              <vspace />
            </t>
            <t hangText="* Extended Full Authentication device certificate format (Format 2):">
              This is issued to devices that possess additional functions (e.g., additional channel ciphers,
              specific device properties). The presence of these additional functions is indicated by the device
              capability mask as specified in <xref target="DTCP">Section 4.2.3.2 of the DTCP specification</xref>. 
              Format 2 certificates also include a unique Device ID and device EC-DSA public/private key pair generated 
              by the DTLA. (See Section 4.3 of <xref target="DTCP"></xref>)
              <vspace />
            </t>
          </list>
          The mechanism specified in this document allows only Format 1 and Format 2 DTCP certificates to be 
          exchanged in the supplemental data message since it requires the use of the EC-DSA private key associated 
          with the certificate.
        </t>
        
      </section>
      
      <section title="Overview of Supplemental Data handshake">
        
        <t>
          Figure 1 illustrates the exchange of 
          SupplementalData message during the TLS handshake as specified in
          <xref target="RFC4680"></xref> and is repeated here for convenience:
        </t>
        
        <figure align="left" anchor="sd_single_exchange">
           <artwork>
            <![CDATA[
            
     Client                                               Server
     
     ClientHello (with extensions) -------->
     
                                    ServerHello(with extensions)
                                               SupplementalData*
                                                    Certificate*
                                              ServerKeyExchange*
                                             CertificateRequest*
                                  <--------      ServerHelloDone
                                  
     SupplementalData*
     Certificate*
     ClientKeyExchange
     CertificateVerify*
     [ChangeCipherSpec]
     Finished                     -------->
                                              [ChangeCipherSpec]
                                  <--------             Finished
     Application Data             <------->     Application Data
     
     
     *  Indicates optional or situation-dependent messages that are
        not always sent.
        
     [] Indicates that ChangeCipherSpec is an independent TLS 
        protocol content type; it is not a TLS handshake message.
        
          ]]>
          </artwork>
          <postamble>
            TLS handshake message exchange with Supplemental Data  
          </postamble>
        </figure>
        
      </section>
      
      <section title="Overview of authorization extensions">
        <t>
          <xref target="RFC5878"> </xref> defines two authorization extension types
          that are used in the ClientHello and ServerHello messages and are repeated 
          below for convenience:
          <figure>
            <artwork>
              <![CDATA[
      enum {
        client_authz(7), server_authz(8), (65535)
      } ExtensionType;
              ]]>
            </artwork>
          </figure>
          
          A client uses the client_authz and server_authz extensions in the ClientHello
          message to indicate that it will send client authorization data and receive
          server authorization data respectively in the SupplementalData messages. 
          A server uses the extensions in a similar manner in its ServerHello message. 
          <xref target="RFC5878"></xref> also establishes
          a registry that is maintained by IANA for registering authorization data formats.
          This document defines a new authorization data type for both 
          the client_authz and server_authz extensions and allows the client and
          server to exchange DTCP certificates in the SupplementalData message. 
        </t>  
      </section>
      
      <section title="Overview of supplemental data usage for authorization">
        <t>
          Section 3 of <xref target="RFC5878"></xref> specifies the syntax of the
          supplemental data message when carrying the authz_data message that is
          negotiated in the client_authz and/or server_authz types. 
                    
          This document defines a new authorization data format that is used in the
          authz_data message when sending DTCP Authorization data.
        </t>
      </section>
      
    </section>

    <!-- This PI places the pagebreak correctly (before the section title) in the text output. -->

    <?rfc needLines="8" ?>
    
    <section title="DTCP Authorization Data Format" anchor="dtcp_authz">
      <section title="DTCP Authorization Type" anchor="dtcp_type">
        <t>
          The DTCP Authorization type definition in the TLS Authorization Data 
          Formats registry is:
        </t>
      <figure>
        <artwork>
          <![CDATA[
          
       dtcp_authorization(TBA); 
       
          ]]>          
        </artwork>
        <postamble>Note to RFC Editor: Please populate the number assigned by IANA</postamble>
      </figure>
      </section>      
      
      <section title="DTCP Authorization Data" anchor="dtcp_data">
        <t>
          The DTCP Authorization data is used when the AuthzDataFormat 
          type is dtcp_authorization. The syntax of the authorization data is:
        </t>
        <figure>          
          <artwork>
            <![CDATA[
            
      struct {          
          opaque random_bytes[32];
      } RandomNonce;

      digitally-signed struct {
          RandomNonce nonce;
          uint16 DTCPCert_length;
          opaque DTCPCert<1..2^24-1>;
          uint16 ASN.1Cert_length;
          opaque ASN.1Cert<0..2^24-1>;
      } DigitallySignedData;
              
      struct {
          DigitallySignedData certs;
          opaque signature[40];   
      } dtcp_authz_data;
            
            ]]>          
          </artwork>
        </figure>
        <t>
          RandomNonce is generated by the server and consists of 32 bytes generated by a high 
          quality secure random number generator.  
          The RandomNonce helps detect replay attacks.           
        </t>
        <t>
          DTCPCert is the sender's DTCP certificate, see Section 4.2.3.1 of the DTCP Specification
          <xref target="DTCP"></xref>
        </t>
        <t>
          ASN.1Cert is the sender's certificate used to establish the
          TLS session, i.e., sent in the Certificate or ClientCertificate message 
          using the Certificate structure defined in Section 7.4.2 of <xref target="RFC5246"></xref>.          
        </t>
        <t>
          If the ASN.1Cert is not being sent, the ASN.1Cert_length MUST be zero.
        </t>
        <t>
          DigitallySignedData - contains the RandomNonce, DTCP Certificate and the optional ASN.1 
          Certificate. This is then followed by the digital signature covering the RandomNonce,
          DTCP Certificate and the ASN.1 certificate if it is present. 
          The signature is generated using the private key associated with the DTCP certificate 
          using the Signature Algorithm and Hash Algorithm 
          as specified in Section 4.4 of <xref target="DTCP"></xref>.
          This signature provides proof of the possession of the private key by the sender.
          A sender sending its own DTCP Certificate MUST populate the certs field. 
        </t>
      </section>
      
      <section title="Usage rules for clients to exchange DTCP Authorization data">
        <t>
          A client includes both the client_authz and server_authz extensions in the
          extended client hello message when indicating its desire to exchange DTCP authorization data
          with the server. Additionally, the client includes the AuthzDataFormat type specified
          in <xref target="dtcp_type"></xref> in the extension_data field to specify the format
          of the authorization data. 
        </t>
        <t>
          A client will receive the server's dtcp_authz_data before
          it sends its own dtcp_authz_data. When sending its own dtcp_authz_data message, the client
          includes the same RandomNonce that it receives 
          in the server's dtcp_authz_data message. Clients include its DTCP Certificate in
          the dtcp_authz_data message. If the client wants to cryptographically tie its
          dtcp_authz_data with the TLS session, then the client includes the ASN.1 Certificate used 
          to establish the TLS session (certificate in the ClientCertificate message) in the
          ASN.1Cert field in dtcp_authz_data.
        </t>
      </section>

      <section title="Usage rules for servers to exchange DTCP Authorization data">
        <t>
          A server responds with both the client_authz and server_authz extensions in the
          extended server hello message when indicating its desire to exchange dtcp_authorization data
          with the client. Additionally, the server includes the AuthzDataFormat type specified
          in <xref target="dtcp_type"></xref> in the extension_data field to specify the format
          of the dtcp_authorization data. A server always generates and populates the RandomNonce in
          the dtcp_authz_data message. If the client's hello message does not contain both the
          client_authz and server_authz extensions with dtcp_authorization type, the server MUST
          NOT include support for dtcp_authorization data in its hello message. 
          A server MAY include its DTCP Certificate in the dtcp_authz_data message. 
          If the server includes its DTCP Certificate, it MUST also include its server certificate 
          (sent in the TLS Certificate message) in the certs field to cryptographically tie
          its dtcp_authz_data with the TLS session being established. 
        </t>
      </section>
      
      <section title="TLS message exchange with dtcp_authz_data">
        <t>
          Based on the usage rules in the sections above,  
          <xref target="dtcp_sd_exchange">Figure 2</xref> below provides one possible
          TLS message exchange where the client sends its DTCP Certificate to the server
          within the dtcp_authz_data message.
        </t>
        <figure align="left" anchor="dtcp_sd_exchange">
          <artwork>
            <![CDATA[
            
     Client                                               Server
     
     ClientHello (with extensions) -------->
     
                                    ServerHello(with extensions)
                                 SupplementalData(with Nonce N1)
                                                     Certificate
                                              ServerKeyExchange*
                                              CertificateRequest
                                  <--------      ServerHelloDone
                                  
     SupplementalData(with Data D1)
     Certificate
     ClientKeyExchange
     CertificateVerify
     [ChangeCipherSpec]
     Finished                     -------->
                                              [ChangeCipherSpec]
                                  <--------             Finished
     Application Data             <------->     Application Data
     
     
   N1 Random nonce generated by server
     
   D1 Contains dtcp_authz_data populated with the following 
     {(N1, DTCP Cert, Client X.509 Cert) Signature over all elements}
     
   *  Indicates optional or situation-dependent messages that are
        not always sent.
        
   [] Indicates that ChangeCipherSpec is an independent TLS 
        protocol content type; it is not a TLS handshake message.
        
          ]]>            
          </artwork>
        </figure>
      </section>
      
      <section anchor="Errors" title="Alert Messages">
        <t>
          This document reuses TLS Alert messages for any errors that arise during
          authorization processing, and reuses the AlertLevels as
          specified in <xref target="RFC5878"></xref>. Additionally the following
          AlertDescription values are used to report errors in dtcp_authorization processing:
        </t>
        <figure>
          <artwork>
            <![CDATA[
        
    unsupported_extension:
      During processing of dtcp_authorization, a client uses this
      when it receives a server hello message that does not indicate 
      support for both client_authz and server_authz extension.
      This message is always fatal.
        
    certificate_unknown:
      During processing of dtcp_authorization, a client or server
      uses this when it has received an X.509 certificate in the 
      dtcp_authorization data and that X.509 certificate does
      not match the certificate sent in the corresponding 
      ClientCertificate or Certificate message. 
          
            ]]>            
          </artwork>
        </figure>        
      </section>
      
    </section>
    
    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
      <t>
        This document proposes a new entry to be registered in the IANA-maintained
        TLS Authorization Data Formats registry for dtcp_authorization(TBA). 
        This registry is defined in <xref target="RFC5878"></xref> and defines two ranges:
        one is IETF review and the other is specification required. The value for
        dtcp_authorization should be assigned via <xref target="RFC5226"></xref>
        Specification Required.
      </t>
      <t>
        Note to RFC Editor: Please populate the number assigned by IANA in TBA above.
      </t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
        This document specifies a TLS authorization data extension that allows TLS clients and
        servers to exchange DTCP certificates during a TLS handshake exchange.
        The dtcp_authorizaton data as specified in this document carries the 
        DTCP Certificate that identified the associated device. Given that it is
        anticipated by DTCP to be shared in the open (e.g., similar to its usage in AKE),
        this document does not add any additional security threats (e.g., confidentiality).
        Further its integrity is ensured by the TLS protocol. Hence the security
        considerations specified in <xref target="RFC5878"></xref> and
        <xref target="RFC5246"></xref> apply to the extension specified in this
        document. In addition, the dtcp_authorization data may
        be carried along with other supplemental data or some other authorization data 
        and that information may require additional protection.
      </t>
      <t>
        In cases where the supplemental data contains sensitive information, the double
        handshake technique described in <xref target="RFC4680"></xref> can
        be used to provide protection for the supplemental data information. 
        The double handshake specified in <xref target="RFC4680"></xref> assumes
        that the client knows the context of the TLS session that is being set up and
        uses the authorization extensions as needed. <xref target="sd_double_exchange"></xref>
        illustrates a variation of the double handshake that addresses the case
        where the client may not have a priori knowledge
        that it will be communicating with a server capable of exchanging
        dtcp_authz_data (typical for https connections; see <xref target="RFC2818"></xref>).
        In <xref target="sd_double_exchange">Figure 3</xref>, the client's Hello messages
        includes the client_authz and server_authz extensions. 
        The server simply establishes an encrypted TLS session with the client in the
        first handshake by not indicating support for any authz extensions. The server
        initiates a second handshake by sending a HelloRequest. The second handshake
        will include server's support for authz extensions which will result in 
        SupplementalData being exchanged.
      </t>
      <t>
        This double handshake mechanism is vulnerable to the TLS
        MITM Renegotiation exploit as explained in <xref target="RFC5746"></xref>.
        In order to address this vulnerability, clients and servers MUST use the 
        secure_renegotiation extension as specified in <xref target="RFC5746"></xref>
        when performing a double handshake.
      </t>
      <t>
        It should be noted that for double handshake to succeed, any extension 
        (e.g., TLS Session Ticket <xref target="RFC5077"></xref>) that results
        in the TLS Handshake sequence being modified may result in failure to
        exchange SupplementalData.
      </t>
      
      <figure align="left" anchor="sd_double_exchange">
        <preamble>
          Double Handshake to protect Supplemental Data
        </preamble>
        <artwork>
          <![CDATA[
            
            
  Client                                                   Server
   
  ClientHello (w/ extensions) -------->                            |0
                                ServerHello (no authz extensions)  |0
                                                     Certificate*  |0
                                               ServerKeyExchange*  |0
                                              CertificateRequest*  |0
                              <--------           ServerHelloDone  |0
  Certificate*                                                     |0
  ClientKeyExchange                                                |0
  CertificateVerify*                                               |0
  [ChangeCipherSpec]                                               |0
  Finished                    -------->                            |1
                                               [ChangeCipherSpec]  |0
                              <--------                  Finished  |1
                              <--------              HelloRequest  |1
  ClientHello (w/ extensions) -------->                            |1
                                      ServerHello (w/ extensions)  |1
                                                SupplementalData*  |1
                                                     Certificate*  |1
                                               ServerKeyExchange*  |1
                                              CertificateRequest*  |1
                              <--------           ServerHelloDone  |1
  SupplementalData*                                                |1
  Certificate*                                                     |1
  ClientKeyExchange                                                |1
  CertificateVerify*                                               |1
  [ChangeCipherSpec]                                               |1
  Finished                    -------->                            |2
                                               [ChangeCipherSpec]  |1
                              <--------                  Finished  |2
  Application Data            <------->          Application Data  |2
  
  *  Indicates optional or situation-dependent messages.
            
            ]]>            
        </artwork>
      </figure>
      <t>
        Finally, implementers should also reference <xref target="DTCP"></xref>
        and <xref target="DTCP-IP"></xref> for more information regarding DTCP
        certificates, their usage and associated security considerations.
      </t>
    </section>
    
    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>
        The author wishes to thank Mark Brown, Sean Turner, Sumanth Channabasappa;
        and the Chairs (EKR, Joe Saloway) and members of the TLS Working Group who
        provided feedback and comments on one or more revisions of this document.
      </t>
      <t>
        This document derives its structure and much of its content from 
        <xref target="RFC4680"></xref>, <xref target="RFC5878"></xref> and
        <xref target="RFC6042"></xref>.
      </t>      
    </section>
    
  </middle>

  <!--  *****BACK MATTER ***** -->
  
  <back>    
    
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;
      
      <!-- References below added for this RFC -->
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2246.xml"?-->
      <reference anchor="RFC2246" target="http://tools.ietf.org/html/rfc2246">
        <front>
          <title>
            The TLS Protocol Version 1.0
          </title>
          <author initials="T." surname="Dierks" fullname="Tim Dierks">
            <organization>Certicom</organization>
            <address>
              <email>tdierks@certicom.com</email>
            </address>
          </author>
          <author initials="C." surname="Allen" fullname="Christopher Allen">
            <organization>Certicom</organization>
            <address>
              <email>callen@certicom.com</email>
            </address>
          </author>
          <date year="1999" month="January"/>
        </front>
        <seriesInfo name="RFC" value="2246"/>        
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4346.xml"?-->
      <reference anchor="RFC4346" target="http://tools.ietf.org/html/rfc4346">
        <front>
          <title>
            The TLS Protocol Version 1.1
          </title>
          <author initials="T." surname="Dierks" fullname="T. Dierks">
            <organization/>
          </author>
          <author initials="E." surname="Rescorla" fullname="E. Rescorla">
            <organization/>
          </author>
          <date year="2006" month="April"/>
        </front>
        <seriesInfo name="RFC" value="4346"/>
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml"?-->
      <reference anchor="RFC5246" target="http://tools.ietf.org/html/rfc5246">
        <front>
          <title>
            The TLS Protocol Version 1.2
          </title>
          <author initials="T." surname="Dierks" fullname="T. Dierks">
            <organization/>
          </author>
          <author initials="E." surname="Rescorla" fullname="E. Rescorla">
            <organization/>
          </author>
          <date year="2008" month="August"/>
        </front>
        <seriesInfo name="RFC" value="5246"/>
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5746.xml"?-->
      <reference anchor="RFC5746" target="http://tools.ietf.org/html/rfc5746">
        <front>
          <title>
            Transport Layer Security (TLS) Renegotiation Indication Extension
          </title>
          <author initials="E." surname="Rescorla" fullname="E. Rescorla">
            <organization/>
          </author>
          <author initials="M." surname="Ray" fullname="M. Ray">
            <organization/>
          </author>
          <author initials="S." surname="Dispensa" fullname="S. Dispensa">
            <organization/>
          </author>
          <author initials="N." surname="Oskov" fullname="N. Oskov">
            <organization/>
          </author>
          <date year="2010" month="February"/>
        </front>
        <seriesInfo name="RFC" value="5746"/>
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4680.xml"?-->
      <reference anchor="RFC4680" target="http://tools.ietf.org/html/rfc4680">
        <front>
          <title>TLS Handshake Message for Supplemental Data</title>
          <author initials="S." surname="Santesson">
            <organization>Microsoft</organization>
          </author>
          <date year="2006" month="September"/>
        </front>
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5878.xml"?-->
      <reference anchor="RFC5878" target="http://tools.ietf.org/html/rfc5878">        
        <front>
          <title>
            Transport Layer Security (TLS) Authorization Extensions            
          </title>
          <author initials="M." surname="Brown">
            <organization>RedPhone Security</organization>
          </author>
          <author initials="R." surname="Housley">
            <organization>Vigil Security</organization>
          </author>
          <date year="2010" month="May"/>
        </front>
        <seriesInfo name="RFC" value="5878"/>
      </reference>
      
      <reference anchor="DTCP" target="http://www.dtcp.com/documents/dtcp/info-20111214-dtcp-v1-rev-1-p-7.pdf">
        <front>
          <title>Digital Transmission Content Protection</title>
          <author>
            <organization>Digital Transmission Licensing Administrator</organization>
          </author>
          <date/>
        </front>
      </reference>
      
      <reference anchor="DTCP-IP" target="http://www.dtcp.com/documents/dtcp/info-20111214-dtcp-v1se-ip-rev-1-p-4-ed-1.pdf">
        <front>
          <title>DTCP Volume 1 Supplement E</title>
          <author>
            <organization>Digital Transmission Licensing Administrator</organization>
          </author>
          <date/>
        </front>
      </reference>
      
    </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->
      &RFC2629;
      &RFC3552;
      &RFC5226;
            
      <reference anchor="DTLA" target="http://www.dtcp.com">
        <front>
          <title>DTLA</title>
          <author>
            <organization>Digital Transmission Licensing Administrator</organization>
          </author>
          <date/>
        </front>
      </reference>
      
      <reference anchor="RFC2818" target="http://tools.ietf.org/html/rfc2818">
        <front>
          <title>HTTP over TLS</title>
          <author initials="E." surname="Rescorla">
            <organization>RTFM, Inc.</organization>
          </author>
          <date year="2000" month="May"/>
        </front>
        <seriesInfo name="RFC" value="2818"/>
      </reference>
      
      <reference anchor="RFC5077" target="http://tools.ietf.org/html/rfc5077">
        <front>
          <title>Transport Layer Security (TLS) Session Resumption without Server-Side State</title>
          <author initials="J." surname="Salowey">
            <organization>Cisco System</organization>
          </author>
          <author initials="P." surname="Eronen">
            <organization>Nokia</organization>
          </author>
          <date year="2008" month="January"/>
        </front>
        <seriesInfo name="RFC" value="5077"/>
      </reference>
      
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6042.xml"?-->
      <reference anchor="RFC6042" target="http://tools.ietf.org/html/rfc6042">
        <front>
          <title>
            Transport Layer Security (TLS) Authorization Using KeyNote            
          </title>
          <author initials="A." surname="Keromytis">
            <organization>Columbia University</organization>
          </author>
          <date month="October" year="2010"/>
        </front>
        <seriesInfo name="RFC" value="6042"/>
      </reference>    
 
    </references>

    <section anchor="app-additional" title="Additional Stuff">
      <t>This becomes an Appendix.</t>
    </section>

<!-- Change Log

v00 2012-10-11  EBD   Initial version
  
-->
  </back>
</rfc>
