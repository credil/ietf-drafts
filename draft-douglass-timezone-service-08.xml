<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="../rfc2629.xslt"?><!DOCTYPE rfc SYSTEM "rfc2629.dtd" [<!ENTITY I-D.newton-json-content-rules SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.newton-json-content-rules.xml"><!ENTITY I-D.kewisch-et-al-icalendar-in-json SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.kewisch-et-al-icalendar-in-json.xml"><!ENTITY RFC2046 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2046.xml"><!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"><!ENTITY RFC2616 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2616.xml"><!ENTITY RFC2782 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2782.xml"><!ENTITY RFC2818 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2818.xml"><!ENTITY RFC3339 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3339.xml"><!ENTITY RFC4627 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4627.xml"><!ENTITY RFC5246 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml"><!ENTITY RFC5545 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5545.xml"><!ENTITY RFC5646 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5646.xml"><!ENTITY RFC5785 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5785.xml"><!ENTITY RFC6125 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6125.xml"><!ENTITY RFC6321 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6321.xml"><!ENTITY RFC6335 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6335.xml"><!ENTITY RFC6557 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6557.xml"><!ENTITY RFC6763 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6763.xml">]><?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?><?rfc strict="yes" ?><?rfc toc="yes"?><?rfc tocdepth="5"?><?rfc symrefs="yes"?><?rfc sortrefs="yes" ?><?rfc compact="yes" ?><?rfc subcompact="no" ?><rfc category="std" docName="draft-douglass-timezone-service-08" ipr="trust200902">  <front>    <title abbrev="Timezone Service Protocol">Timezone Service Protocol</title>    <author initials="M." surname="Douglass" fullname="Michael Douglass">      <organization abbrev="RPI">Rensselaer Polytechnic Institute</organization>      <address>        <postal>          <street>110 8th Street</street>          <city>Troy</city>          <region>NY</region>          <code>12180</code>          <country>USA</country>        </postal>        <email>douglm@rpi.edu</email>        <uri>http://www.rpi.edu/</uri>      </address>    </author>    <author initials="C." surname="Daboo" fullname="Cyrus Daboo">      <organization abbrev="Apple">Apple Inc.</organization>      <address>        <postal>          <street>1 Infinite Loop</street>          <city>Cupertino</city>          <region>CA</region>          <code>95014</code>          <country>USA</country>        </postal>        <email>cyrus@daboo.name</email>        <uri>http://www.apple.com/</uri>      </address>    </author>    <date />    <area>Applications</area>    <keyword>timezones</keyword>    <keyword>calendaring</keyword>    <keyword>scheduling</keyword>    <abstract>      <t>        This document defines a timezone service protocol that allows reliable,        secure and fast delivery of timezone data to client systems such        as calendaring and scheduling applications or operating systems.      </t>    </abstract>  </front>  <middle>    <section title="Introduction">        <t>          Timezone data typically combines a coordinated universal           time (UTC) offset with daylight          saving time (DST) rules. Timezones are typically tied to specific          geographic and geopolitical regions. Whilst the UTC offset for          particular regions changes infrequently, DST rules can change          frequently and sometimes with very little notice           (sometimes hours before a change comes into effect).        </t>        <t>          Calendaring and scheduling systems, such as those that use          <xref target='RFC5545'>iCalendar</xref>, as well as operating systems,          critically rely on timezone data to determine the correct local          time. As such they need to be kept up to date with changes to timezone          data. To date there has been no fast and easy way to do that.          Timezone data is often supplied in the form of a set of data          files that have to be "compiled" into a suitable database format for          use by the client application or operating system. In the case of          operating systems, those changes often only get propagated out to          client machines when there is an operating system update and those          can be infrequent, resulting in inaccurate timezone data being present          for significant amounts of time.        </t>        <t>          This specification defines a timezone service protocol that allows          for fast, reliable and accurate delivery of timezone data to          client systems. This protocol is based on          <xref target='RFC2616'>HTTP</xref> using a REST style API, with          <xref target='RFC4627'>JSON</xref> responses.        </t>        <t>          This specification does not define the source of the timezone           data. It is assumed that a reliable and accurate source is          available. One such source is the <xref target='RFC6557'>IANA hosted          timezone database</xref>.        </t>        <t>          Discussion of this document should take place on the calsify           mailing list calsify@ietf.org        </t>        <section title="Conventions" anchor="conventions">          <t>            The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",            "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and            "OPTIONAL" in this document are to be interpreted as described            in <xref target="RFC2119" />.          </t>        </section>        <section anchor="glossary_of_terms" title="Glossary of terms">          <t>The following terms with the given meanings are used throughout this            document.            <list style='hanging'>              <t hangText="Timezone Data:">                Data that defines a single timezone, including an identifier, UTC offset values, and DST rules;              </t>              <t hangText="Timezone Server:">                A server implementing the Timezone Service Protocol defined by                this specification;              </t>              <t hangText="Timezone Identifier:">                A globally unique name which identifies timezone data.               </t>            </list>          </t>        </section>    </section>    <section anchor="architectural_overview" title="Architectural Overview">        <t>            The overall process for the delivery of timezone data can be            visualized via the diagram shown below.            <figure anchor='architecture' title='Timezone Service Architecture'>                <artwork><![CDATA[            ====================  ====================(a)         |   Contributors   |  |   Contributors   |            ====================  ====================                      |                    |            ====================  ==================== (b)         |   Publisher A    |  |   Publisher B    |             ====================  ====================                                  |                      ====================(c)                   |     Provider     |                      ====================                     /            |       \                    /             |        \         ====================     |     ====================(d)      |     Provider     |     |     |     Provider     |         ====================     |     ====================           |           |          |              |           |           |          |              |     ==========  ==========  ==========      ==========(e)  | Client |  | Client |  | Client |      | Client |     ==========  ==========  ==========      ==========]]></artwork>            </figure>        </t>      <t>        The overall service is made up of several layers:        <list style='hanging'>          <t hangText="(a) Contributors:">            Individuals, governments or organizations which provide information            about timezones to the publishing process. There can be            many contributors.          </t>          <t hangText="(b) Publishers:">            Publishers aggregate information from contributors, determine the            reliability of the information and, based on that, generate timezone            data. There can            be many publishers, each getting information from many different contributors.            In some cases a publisher may choose to "re-publish" data from another             publisher.          </t>          <t hangText=" (c) Root Providers:">            Servers which obtain and then provide the timezone data from             publishers and make that available to other servers or clients.             There can be            many root providers. Root providers can choose to supply timezone            data from one or more publishers.          </t>          <t hangText="(d) Local Providers:">            Servers which handle the bulk of the requests and reduce the load            on root servers. These will typically be simple caches of the root            server, located closer to clients. For example a large Internet            Service Provider (ISP) may choose to setup their own local provider            to allow clients within their network to make requests of that server            rather than making requests of servers outside their network. Local            servers will cache and periodically refresh data from the root servers.          </t>          <t hangText="(e) Clients:">            Applications, operating systems etc., that make use of timezone data            and retrieve that from either root or local providers.          </t>        </list>      </t>      <t>        Some of those layers may be coalesced by implementors. For example, a        vendor may choose to implement the entire service as a single monolithic         virtual server with the address embedded in distributed systems. Others         may choose to provide a service consisting of multiple layers of         providers, many local servers and a small number of root servers.      </t>      <t>        This specification is only concerned with the protocol used to exchange        data between providers and from provider to client. This specification        does not define how contributors pass their information to publishers,        nor how those publishers vet that information to obtain trustworthy data, nor the        format of the data produced by the publishers.      </t>    </section>    <section anchor="timezone_naming" title="General Considerations">      <section anchor="timezone_identifiers"                title="Timezone Identitifiers">        <t>          Timezone identifiers are unique names associated with each timezone, as defined by publishers. The <xref target='RFC5545'>iCalendar</xref> specification has a "TZID" property and parameter whose value is set to the corresponding timezone identifier, and used to identify timezones data and relate timezones to start and end dates in events, etc. This specification does not define what format of timezone identifiers should be used. It is possible that timezone identifiers from different publishers overlap, and there might be a need for a provider to distinguish those with some form of "namespace" prefix identifying the publisher. However, development of a standard (global) timezone identifier naming scheme is out of scope for this specification.        </t>      </section>      <section anchor="timezone_aliases"                title="Timezone Aliases">        <t>          Timezone aliases map a name onto a timezone identifier. For example "US/Eastern" is usually mapped on to "America/New_York". Timezone aliases are typically used interchangeably with timezone identifiers when presenting information to users.        </t>        <t>          A timezone service needs to maintain timezone alias mapping information, and expose that data to clients as well as allow clients to query for timezone data using aliases.        </t>      </section>      <section anchor="timezone_localized_names"                title="Timezone Localized Names">        <t>          Localized names are names for timezones which can be presented to a user in their own language. Each timezone may have one or more localized names associated with it. Names would typically be unique in their own locale as they might be presented to the user in a list.        </t>        <t>          A timezone service might need to maintain localized name information, for one or more chosen languages, as well as allow clients to query for timezone data using localized names.        </t>      </section>    </section>    <section anchor="timezone_service" title="Timezones Service Protocol">      <section anchor="server_protocol" title="Server Protocol">        <t>          The timezone service protocol uses <xref target="RFC2616">HTTP</xref> for query and delivery of data. Queries are made on a single HTTP resource using the GET method is used, with specific client request attributes passed in request-URI parameters.          </t>          <t>            The "action" request-URI parameter defines the overall function being requested, with other request parameters acting as arguments to that function.          </t>          <t>            Most security considerations are already handled adequately by HTTP. However, given the nature of the data being transferred and the requirement it be correct, all interactions between client and server SHOULD use an HTTP connection protected with <xref target='RFC5246'>TLS</xref> as defined in <xref target='RFC2818'/>.        </t>      <section anchor="timezone_name_searches"                title="Timezone Queries">        <t>          Timezone identifiers, aliases or localized names can be used to query for timezone data. This will be more explicitly defined below for each action. In general however, if a "tzid" request parameter is used then the value may be an identifier or an alias. When the "name" parameter is used it may be an identifier, an alias or a localized name.        </t>      </section>        <section anchor="timezone_formats" title="Timezone Formats">          <t>            The default format for returning timezone definitions is the <xref target='RFC5545'>iCalendar</xref> data format. In addition, the <xref target='RFC6321'>iCalendar-in-XML</xref>, and <xref target='I-D.kewisch-et-al-icalendar-in-json'>iCalendar-in-JSON</xref> representations are also available. The "format" request-URI parameter can be used to select which data format is returned.          </t>        </section>        <section anchor="conditional_timezone" title="Conditional Timezone Requests">          <t>            Timezone data is generally slow moving, with the set of timezones that change from even year-to-year being relatively small. However, any changes that do occur, need to be distributed in a timely manner. Typically it is more efficient to just provide the set of changes to timezone data, so a client can do updates to any locally cached data.          </t>                    <t>            When listing timezones, a timestamp is returned by the server, and that can be used later by clients to determine if any "substantive" change has occurred in the timezone data. Clients can use a conditional "list" action (see <xref target="action_list_timezone_identifiers"/>), supplying a previous timestamp value, to limit the results to timezones which have changed in a "substantive" manner since that previous timestamp. This allows clients to cache the last timestamp and to periodically poll the server for possible changes.          </t>          <t>            A "substantive" change is one which affects the calculated onsets for a timezone. Changes to properties such as a description are not treated as a "substantive" change.          </t>          <t>            Clients SHOULD NOT poll for such changes too frequently, typically once a day ought to be sufficient. See <xref target='security_considerations'/> on expected client and server behavior regarding high request rates.          </t>        </section>        <section anchor="timezone_onset_delivery"                 title="Expanded Timezone Data">          <t>            Determining timezone offsets at a particular point in time is often a complicated process, as the rules for daylight saving time can be complex. To help with this, the timezone service provides an action that allows clients to request the server to expand a timezone definition into a set of "observances" over a fixed period of time (see <xref target="action_expand_timezones"/>). Each of these observances describes a local onset time and UTC offsets for the prior time and the observance time. Together, these provide a quick way for "thin" clients to determine an appropriate UTC offset for an arbitrary date without having to do full timezone expansion themselves.          </t>        </section>          <section anchor="server_requirements" title="Server Requirements">          <t>            To enable a simple client implementation, servers SHOULD ensure that they provide or cache data for all commonly used timezones, from various publishers. That allows client implementations to configure a single server to get all timezone data. In turn, any server can refresh any of the data from any other server - though the root servers may provide the most up-to-date copy of the data.          </t>        </section>                <section anchor="error_responses" title="Error Responses">          <t>            The following are examples of response codes one would expect to be            used by the server.  Note, however, that unless explicitly            prohibited any 2/3/4/5xx series response code may be used in a            response.            <list>              <t>                200 (OK) - The command succeeded.              </t>                <t>                400 (Bad Request) - The Sender has provided an invalid request                parameter.              </t>                <t>                404 (Not Found) - The timezone was not found.                      </t>            </list>          </t>                  <t>            When an error status is set the server SHOULD respond with some             descriptive text in an error object as per <xref target="tz_error_element"/>                </t>        </section>        <section anchor="timezone_selection" title="Extensions">          <t>            This protocol is designed to be extensible through a standards based registration mechanism (see <xref target='iana_considerations'/>). It is anticipated that other useful timezone actions will be added in the future (e.g., mapping a geographical location to timezone identifiers, getting change history for timezones), and so, servers MUST return a description of their capabilities. This will allow clients to determine if new features have been installed and, if not, fall back on earlier features or disable some client capabilities.          </t>        </section>      </section>      <section anchor="client_guidelines" title="Client Guidelines">        <section anchor="discovery" title="Discovery">          <t>            Client implementations need to either know where the timezone service is located or discover it through some mechanism. To use a timezone service, a client needs an FQDN, port and HTTP request-URI path.          </t>            <section title='Timezone Service SRV Service Labels'>            <t>              <xref target="RFC2782"/> defines a DNS-based service discovery protocol that has been widely adopted as a means of locating particular services within a local area network and beyond, using SRV RR records. This can be used to discover a service's FQDN and port.            </t>              <t>              This specification adds two service types for use with SRV records:              <list style="hanging">                <t hangText="timezone:">                  Identifies a Timezone server that uses HTTP without transport                  layer security (<xref target="RFC2818"/>).                </t>                <t hangText="timezones:">                  Identifies a Timezone server that uses HTTP with transport                  layer security (<xref target="RFC2818"/>).                </t>              </list>            </t>              <t>              Clients MUST honor "TTL", "Priority" and "Weight" values in the SRV records, as described by <xref target="RFC2782"/>.            </t>              <figure>              <preamble>                Example: service record for server without transport layer security              </preamble>              <artwork>_timezone._tcp     SRV 0 1 80 tz.example.com.</artwork>            </figure>            <figure>              <preamble>                  Example: service record for server with transport layer security              </preamble>              <artwork>_timezones._tcp    SRV 0 1 443 tz.example.com.</artwork>            </figure>          </section>                    <section title='Timezone Service TXT records'>            <t>              When SRV RRs are used to advertise a timezone service, it is also convenient to be able to specify a "context path" in the DNS to be retrieved at the same time.  To enable that, this specification uses a TXT RR that follows the syntax defined in Section 6 of <xref target="RFC6763"/> and defines a "path" key for use in that record.  The value of the key MUST be the actual "context path" to the corresponding service on the server.            </t>                      <t>              A site might provide TXT records in addition to SRV records for each service.  When present, clients MUST use the "path" value as the "context path" for the service in HTTP requests.  When not present, clients use the ".well-known" URI approach described next.            </t>              <figure>              <preamble>                Example: text record for service with transport layer security              </preamble>              <artwork>_timezones._tcp    TXT path=/timezones</artwork>            </figure>          </section>            <section title='Timezone Service Well-Known URI'>            <t>              A <xref target='RFC5785'>"well-known" URI</xref> is registered by this specification for the Timezone service, "timezone" (see <xref target='iana_considerations'/>). This URI points to a resource that the client can use as the initial "context path" for the service they are trying to connect to. The server MUST redirect HTTP requests for that resource to the actual "context path" using one of the available mechanisms provided by HTTP (e.g., using an appropriate 3xx status response).  Clients MUST handle HTTP redirects on the ".well-known" URI.  Servers MUST NOT locate the actual timezone service endpoint at the ".well-known" URI as per Section 1.1 of <xref target='RFC5785'/>.            </t>              <t>              Servers SHOULD set an appropriate Cache-Control header value (as per Section 14.9 of <xref target='RFC2616'/>) in the redirect response to ensure caching occurs as needed, or as required by the type of response generated.  For example, if it is anticipated that the location of the redirect might change over time, then a "no-cache" value would be used.            </t>              <t>              To facilitate "context path's" that might differ from user to user, the server MAY require authentication when a client tries to access the ".well-known" URI (i.e., the server would return a 401 status response to the unauthenticated request from the client, then return the redirect response only after a successful authentication by the client).            </t>                        <section title='Example: well-known URI redirects to actual context path'>              <t>                A Timezone server has a "context path" that is "/servlet/timezone". The client will use "/.well-known/timezone" as the path for the service after it has first found the FQDN and port number via an SRV lookup or via manual entry of information by the user. When the client makes its initial HTTP request against "/.well-known/timezone", the server would issue an HTTP 301 redirect response with a Location response header using the path "/servlet/timezone". The client would then "follow" this redirect to the new resource and continue making HTTP requests there.              </t>            </section>          </section>        </section>                <section anchor="initial_synch_of_all_timezones"                  title="Initial Synchronization of All Timezones">          <t>            When a secondary service or a client wishing to cache all timezone data first starts, or wishes to do a full refresh, it synchronizes with another server by first issuing a "list" action. The client would preserve the returned datestamp for subsequent use. Each timezone in the returned list can then be fetched and stored locally. In addition a mapping of aliases to timezones can be built.          </t>        </section>                <section anchor="subsequent_synch_of_all_timezones"                  title="Subsequent Synchronization of All Timezones">          <t>            A secondary service or a client caching all timezone data needs to periodically synchronize with a server. To do so it would issue a "list" action with the "changedsince" parameter set to the value of the datestamp returned by the last synchronization. The client would again preserve the returned datestamp for subsequent use. Each timezone in the returned list can then be fetched and stored locally.          </t>                    <t>            Note, this process makes no provision for handling deleted timezones. In general it is bad practice to delete timezones as they might still be in use by consumers of timezone data.          </t>        </section>      </section>    </section>    <section anchor="server_request_parameters" title="Request Parameters">      <t>        The "action" request-URI parameter MUST be included in all requests to define what action is required of the server.      </t>            <t>        The following request-URI parameters are used with the various actions.      </t>      <section anchor="parameter_action" title='"action" Parameter'>        <t>          <list style='hanging'>            <t hangText="Name:">              action            </t>                <t hangText="Description:">              Specify the action to be carried out.            </t>                <t hangText="Value:">              Any IANA registered action name (see <xref target="actions_registry"/>).            </t>          </list>        </t>      </section>      <section anchor="parameter_format" title='"format" Parameter'>        <t>          <list style='hanging'>            <t hangText="Name:">              format            </t>                <t hangText="Description:">              Specify the format of the timezone data returned by the server as a standard <xref target='RFC2046'>MIME</xref> media-type. If absent, the <xref target='RFC5545'>iCalendar</xref> format will be returned with the timezones contained within a "VCALENDAR" object (i.e., a default media-type of "text/calendar").            </t>                <t hangText="Value:">              A <xref target='RFC2046'>MIME</xref> media-type. The following values MAY be used, with servers advertising the values they do support via the "capabilities" action response (see <xref target="action_get_capabilities"/>):              <list style='hanging'>                <t hangText="text/calendar:">                  Return data as "VTIMEZONE" components embedded in a "VCALENDAR" object as per <xref target='RFC5545'/>.                </t>                    <t hangText="application/calendar+xml:">                  Return data using the XML representation of iCalendar data as                   per <xref target='RFC6321'>iCalendar-in-XML</xref>.                </t>                    <t hangText="application/calendar+json:">                  Return data using the JSON representation of iCalendar data as                   per iCalendar-in-JSON.                </t>              </list>            </t>          </list>        </t>      </section>      <section anchor="parameter_changedsince"               title='"changedsince" Parameter'>        <t>          <list style='hanging'>            <t hangText="Name:">              changedsince            </t>                <t hangText="Description:">              Specify the timestamp for a conditional "list" (see <xref target='action_list_timezone_identifiers'/>) or "expand" (see <xref target='action_expand_timezones'/>) action in order to restrict the results to only changes since the given timestamp.            </t>                <t hangText="Value:">              An <xref target="RFC3339"/> UTC date-time value, typically a value returned by a previous request.            </t>          </list>        </t>      </section>      <section anchor="parameter_start" title='"start" Parameter'>        <t>          <list style='hanging'>            <t hangText="Name:">              start            </t>                <t hangText="Description:">              Specify the inclusive start of a period.            </t>                <t hangText="Value:">              An <xref target="RFC3339"/> full-date or UTC date-time value. If an "end" parameter is also present, then both the "start" and "end" values MUST have the same full-date or date-time value types.            </t>          </list>        </t>      </section>      <section anchor="parameter_end" title='"end" Parameter'>        <t>          <list style='hanging'>            <t hangText="Name:">              end            </t>                <t hangText="Description:">              Specify the exclusive end of a period.            </t>                <t hangText="Value:">              An <xref target="RFC3339"/> full-date or UTC date-time value. If an "end" parameter is also present, then both the "start" and "end" values MUST have the same full-date or date-time value types.            </t>          </list>        </t>      </section>      <section anchor="parameter_lang" title='"lang" Parameter'>        <t>          <list style='hanging'>            <t hangText="Name:">              lang            </t>                <t hangText="Description:">              Specify the language in which locale specific values are to be returned. e.g., if a language is specified, only localized names for that language would be returned.            </t>                <t hangText="Value:">              The value follows the specifications in <xref target="RFC5646"/>.            </t>          </list>        </t>      </section>      <section anchor="parameter_tzid" title='"tzid" Parameter'>        <t>          <list style='hanging'>            <t hangText="Name:">              tzid            </t>                <t hangText="Description:">              Specify a timezone to be targeted by an action.            </t>                <t hangText="Value:">              A timezone identifier or alias. In some cases the special value               "*" is used to indicate that all timezones should be matched.            </t>          </list>        </t>      </section>      <section anchor="parameter_name" title='"name" Parameter'>        <t>          <list style='hanging'>            <t hangText="Name:">              name            </t>                <t hangText="Description:">              Specify a name for queries.            </t>                <t hangText="Value:">              A timezone identifier, alias or localized name. This parameter is              used when searching for matching timezones (see <xref target="action_find_timezones"/>).            </t>          </list>        </t>      </section>    </section>    <section anchor="server_actions" title="Actions">      <t>        Servers MUST support the following actions.      </t>      <section anchor="action_get_capabilities"               title='"capabilities" Action'>        <t>          <list style='hanging'>            <t hangText="Name:">              capabilities            </t>            <t hangText="Description:">              This action returns the capabilities of the server, allowing              clients to determine if a specific feature has been deployed              and/or enabled.            </t>            <t hangText="Parameters:">                <list style="hanging">                    <t hangText="action">REQUIRED with value "capabilities"</t>                </list>            </t>            <t hangText="Response">              A JSON object containing a "version" member, an "info" member, and an "actions" member, see <xref target="json_capabilities"/>.            </t>            <t hangText="Possible Error Codes">              No specific code.            </t>          </list>        </t>        <section anchor="example_get_capabilities"                 title="Example: Get Capabilities">          <figure>            <artwork><![CDATA[>> Request <<GET /?action=capabilities HTTP/1.1Host: tz.example.com>> Response <<HTTP/1.1 200 OKDate: Wed, 4 Jun 2008 09:32:12 GMTContent-Type: application/json; charset="utf-8"Content-Length: xxxx{  "version": 1,  "info": {    "primary-source": "Olson:2011m",    "contact": "mailto:tzs@example.org",  },  "actions": [    {      "name": "list",      "parameters": [        {          "name": "lang",          "required": false,          "multi": true        },        {          "name": "changedsince",          "required": false,          "multi": false        }      ]    },    {      "name": "get",      "parameters": [        {          "name": "format",          "required": false,          "multi": false,          "values": [            "text/calendar",            "application/calendar+xml",            "application/calendar+json"          ]        },        {          "name": "lang",          "required": false,          "multi": true        },        {          "name": "tzid",          "required": true,          "multi": true,        }      ]    },    {      "name": "expand",      "parameters": [        {          "name": "tzid",          "required": true,          "multi": true,        },        {          "name": "start",          "required": false,          "multi": false        },        {          "name": "end",          "required": false,          "multi": false,        }      ]    },    {      "name": "find",      "parameters": [        {          "name": "name",          "required": true,          "multi": false,        },        {          "name": "lang",          "required": false,          "multi": true        }      ]    },    {      "name":"capabilities",      "parameters": []    },  ]}]]></artwork>          </figure>        </section>      </section>      <section anchor="action_list_timezone_identifiers"               title='"list" Action'>        <t>          <list style='hanging'>            <t hangText="Name:">              list            </t>            <t hangText="Description:">              This action lists all timezone identifiers, in summary format, with aliases and optional localized data. In addition, it returns a timestamp which is the current server last modification value.            </t>            <t hangText="Parameters:">              <list style='hanging'>                <t hangText="action">REQUIRED with value "list"</t>                <t hangText="lang=&lt;lang-code&gt;">                  OPTIONAL, but MAY occur multiple times.                </t>                <t hangText="changedsince">                  OPTIONAL, but MUST occur only once. MUST NOT be present if the "tzid" parameter is present.                </t>                                <t hangText="tzid=&lt;identifier&gt;">                  OPTIONAL, and MAY occur multiple times. MUST NOT be present if the "tzid" parameter is present. If "tzid" is specified, a "dtstamp" member MUST be returned in the response. The value of the "dtstamp" member corresponds to the entire set of data and allows the client to determine if it should refresh its full set. </t>              </list>            </t>            <t hangText="Response:">              A JSON object containing a "dtstamp" member and a "timezones" member, see <xref target="json_list"/>.            </t>            <t hangText="Possible Error Codes">              <list style='hanging'>                <t hangText="invalid-changedsince">The "changedsince" query parameter is not present, or has an incorrect value, or appears more than once.</t>                <t hangText="invalid-tzid">The "tzid" query parameter is present along with the "changedsince", or has an incorrect value.</t>              </list>            </t>          </list>        </t>        <section anchor="example_server_list_timezone_identifiers"                 title="Example: List timezone identifiers">          <figure>            <preamble>              In this example the client requests the timezone identifiers and               in addition requests that the US-English local names be returned.            </preamble>            <artwork><![CDATA[>> Request <<GET /?action=list&lang=en_US HTTP/1.1Host: tz.example.com>> Response <<HTTP/1.1 200 OKDate: Wed, 4 Jun 2008 09:32:12 GMTContent-Type: application/json; charset="utf-8"Content-Length: xxxx{  "dtstamp": "2009-10-11T09:32:11Z",  "timezones": [    {      "tzid": "America/New_York",      "last-modified": "2009-09-17T01:39:34Z",      "aliases":["US/Eastern"],      "local-names": [        {          "name": "America/New_York",          "lang": "en_US"        }      ]    },    ...  ]}]]></artwork>          </figure>        </section>      </section>      <section anchor="action_get_timezone" title='"get" Action'>        <t>          <list style='hanging'>            <t hangText="Name:">              get            </t>                        <t hangText="Description:">              This action returns a timezone. If a single timezone is               specified, the response MUST contain an ETag response header field               indicating the current value of the strong entity tag of the               timezone resource.            </t>                        <t>              If the identifier is actually a timezone alias, the server will return the matching timezone data. The "substitute-alias" parameter specifies whether or not the alias name is to be substituted for the timezone identifier in the resulting timezone data.            </t>                        <t hangText="Parameters:">              <list style='hanging'>                <t hangText="action">REQUIRED with value "get"</t>                <t hangText="format=&lt;media-type&gt;">                  OPTIONAL, but MUST occur only once.                </t>                                <t hangText="lang=&lt;lang-code&gt;">                  OPTIONAL, but MAY occur multiple times.                </t>                                <t hangText="tzid=&lt;identifier&gt;">                  REQUIRED, and MUST occur only once. If                   a value of "*" is given, returns data for all                   timezones. The "*" option will typically be used by servers                   that wish to retrieve the entire set of timezones supported by                   another server to re-synchronize their entire data cache.                   Clients will typically only retrieve individual timezone data                   on a case-by-case basis.                 </t>                                <t hangText="substitute-alias=&lt;true|false&gt;">                  OPTIONAL and defaults to false. If true and the "tzid" value is a timezone alias, it will replace the timezone identifier in the returned timezone data. If false, the returned timezone data will use the normal timezone identifier.                </t>              </list>            </t>            <t hangText="Response:">              A document containing all the requested timezone data in the format specified.            </t>            <t hangText="Possible Error Codes">              <list style='hanging'>                <t hangText="invalid-tzid">The "tzid" query parameter is not present, or appears more than once.</t>                <t hangText="missing-tzid">The "tzid" query parameter value does not map to a timezone identifier known to the server.</t>              </list>            </t>          </list>        </t>        <section title="Example: Get timezone">          <figure>            <preamble>              In this example the client requests the timezone with a specific              timezone identifier to be returned            </preamble>            <artwork><![CDATA[>> Request <<GET /?action=get&tzid=America/New_York                  &format=text/calendar HTTP/1.1Host: tz.example.com>> Response <<HTTP/1.1 200 OKDate: Wed, 4 Jun 2008 09:32:12 GMTContent-Type: text/calendar; charset="utf-8"Content-Length: xxxxETag: "123456789-000-111"BEGIN:VCALENDAR...BEGIN:VTIMEZONE...END:VTIMEZONEEND:VCALENDAR]]></artwork>          </figure>        </section>      </section>      <section anchor="action_expand_timezones"             title='"expand" Action'>        <t>          <list style='hanging'>            <t hangText="Name:">              expand            </t>            <t hangText="Description:">              This action expands the specified              timezone into a list of onset start date/time and UTC offsets. The               response MUST contain an ETag response header field indicating the               current value of the strong entity tag for the expanded data.            </t>            <t hangText="Parameters:">              <list style='hanging'>                <t hangText="action">                  REQUIRED with value "expand"                </t>                <t hangText="tzid=&lt;identifier&gt;">                  REQUIRED, but MUST only occur once. The value "*" is not                   supported by this action.                </t>                <t hangText="lang=&lt;lang-code&gt;">                  OPTIONAL, but MAY occur multiple times.                </t>                <t hangText="start=date or date-time:">                  OPTIONAL, but MUST occur only once. If present, specifies the                   start of the period of interest. If omitted, the current year                   is assumed.                </t>                <t hangText="end=date or date-time:">                  OPTIONAL, but MUST occur only once. If present, specifies the                   end of the period of interest. If omitted, the current                   year + 10 is assumed.                </t>                <t hangText="changedsince">                  OPTIONAL, but MUST occur only once. If present, its value MUST be taken from the "dtstamp" result of a previous expand result. If the targeted timezone has not changed over the expansion range queried in the request, then the server MUST return a 304 HTTP status response.                </t>              </list>            </t>            <t hangText="Response:">              A JSON object containing a "dtstamp" member and an "observances" member, see <xref target="json_expand"/>.            </t>            <t hangText="Possible Error Codes">              <list style='hanging'>                <t hangText="invalid-tzid">The "tzid" query parameter is not present, or appears more than once.</t>                <t hangText="missing-tzid">The "tzid" query parameter value does not map to a timezone identifier known to the server.</t>                <t hangText="invalid-start">The "start" query parameter has an incorrect value, or appears more than once.</t>                <t hangText="invalid-end">The "end" query parameter has an incorrect value, or appears more than once, or has a value less than our equal to the "start" query parameter.</t>                <t hangText="invalid-changedsince">The "changedsince" query parameter has an incorrect value, or appears more than once.</t>              </list>            </t>          </list>        </t>        <section anchor="example_expanded_json_data_format"                 title="Example: Expanded JSON Data Format">          <figure>            <preamble>              In this example the client requests a timezone in the expanded              form.            </preamble>            <artwork><![CDATA[>> Request <<GET /?action=expand&tzid=America/New_York HTTP/1.1Host: tz.example.com>> Response <<HTTP/1.1 200 OKDate: Wed, 4 Jun 2008 09:32:12 GMTContent-Type: application/json; charset="utf-8"Content-Length: xxxxETag: "123456789-000-111"{  "dtstamp": "2009-10-11T09:32:11Z",  "observances": [    {      "name": "Daylight",      "onset": "2008-03-09T07:00:00Z",      "utc-offset-from": -18000,      "utc-offset-to": -14400    },    {      "name": "Standard",      "onset": "2008-11-02T07:00:00Z",      "utc-offset-from": -14400,      "utc-offset-to": -18000    },    {      "name": "Daylight",      "onset": "2009-03-08T07:00:00Z",      "utc-offset-from": -18000,      "utc-offset-to": -14400    },  ...  ]}]]></artwork>          </figure>        </section>      </section>      <section anchor="action_find_timezones"             title='"find" Action'>        <t>          <list style='hanging'>            <t hangText="Name:">              find            </t>            <t hangText="Description:">              This action allows a client to query the timezone service for              a matching identifier, alias or localized name, using a sub-string match against the names known to the server.            </t>            <t hangText="Parameters:">              <list style='hanging'>                <t hangText="action">                  REQUIRED with value "find"                </t>                <t hangText="name=&lt;text&gt;">                  REQUIRED, but MUST only occur once.                </t>                <t hangText="lang=&lt;lang-code&gt;">                  OPTIONAL, but MAY occur multiple times.                </t>              </list>            </t>            <t hangText="Response:">              The response has the same format as the "list" action, with one result object per successful match, see <xref target="json_list"/>.            </t>            <t hangText="Possible Error Codes">              <list style='hanging'>                <t hangText="invalid-name">The "name" query parameter is not present, or appears more than once.</t>              </list>            </t>          </list>        </t>        <section anchor="example_find_timezones"                 title="Example: Find action">          <figure>            <preamble>              In this example the client asks for data about the timezone              "America/New_York".            </preamble>            <artwork><![CDATA[>> Request <<GET /?action=find&name=US/Eastern HTTP/1.1Host: tz.example.com>> Response <<HTTP/1.1 200 OKDate: Wed, 4 Jun 2008 09:32:12 GMTContent-Type: application/json; charset="utf-8"Content-Length: xxxx{  "dtstamp": "2009-10-11T09:32:11Z",  "timezones": [    {      "tzid": "America/New_York",      "last-modified": "2009-09-17T01:39:34Z",      "aliases":["US/Eastern"],      "local-names": [        {          "name": "America/New_York",          "lang": "en_US"        }      ]    },    {      "tzid": "America/Detroit",      "last-modified": "2009-09-17T01:39:34Z",      "aliases":["US/Eastern"],      "local-names": [        {          "name": "America/Detroit",          "lang": "en_US"        }      ]    },    ...  ]}]]></artwork>          </figure>        </section>      </section>    </section>    <section anchor="service_JSON_definitions"             title="JSON Definitions">      <t>        JSON members used by this specification are defined here using the syntax in <xref target="I-D.newton-json-content-rules"/>. Clients MUST ignore any JSON members they do not expect.      </t>      <section title="capabilities action response" anchor="json_capabilities">          <figure>            <preamble>              JSON Content Rules for the JSON document returned for a "capabilities" action request.            </preamble>            <artwork><![CDATA[; root objectroot {  version,  info,  actions}; The version number of the protocol supported - MUST be 1version "version" : integer 1..1; object containing service informationinfo "info" {  primary_source / secondary_source,  contacts}; The source of the timezone data provided by a "primary" serverprimary_source "primary-source" : string; The timezone server from which data is provided by a "secondary"; serversecondary_source "secondary-source" : uri; Array of URIs providing contact details for the server; administratorcontacts "contacts" [ * : uri ]; Array of actions supported by the serveractions "actions" [ * action ]; An action supported by the serveraction {  action_name,  action_params}; Name of the actionaction_name "name" : string; Array of request-URI query parameters supported by the actionaction_params "parameters" [ * parameter ]; Object defining an action parameterparameter {  param_name,  ?param_required,  ?param_multi,  ?param_values}; Name of the parameterparam_name "name" : string; If true the parameter has to be present in the request-URI; default is falseparam_required "required" : boolean; If true the parameter can occur more than once in the request-URI; default is falseparam_multi "multi" : boolean,; An array that defines the allowed set of values for the parameter; In the absence of this member, any string value is acceptableparam_values "values" [ * : string ]]]></artwork>          </figure>      </section>      <section title="list action response" anchor="json_list">          <figure>            <preamble>              JSON Content Rules for the JSON document returned for a "list" action request.            </preamble>            <artwork><![CDATA[; root objectroot {  dtstamp,  timezones}; Server generated timestamp used for synchronizing changes,; [RFC3339] UTC valuedtstamp "dtstamp" : date-time; Array of timezone objectstimezones "timezones" [ * timezone ]; Information about a timezone available on the servertimezone {  tzid,  last_modified,  ?aliases,  ?local_names,}; Timezone identifiertzid "tzid" : string; Date/time when the timezone data was last modified; [RFC3339] UTC valuelast_modified "last-modified" : date-time; An array that lists the set of timezone aliases available; for the corresponding timezonealiases "aliases" [ * : string ]; An array that lists the set of localized names available; for the corresponding timezonelocal_names "local-names" [ * local_name ]local_name [lang, lname, ?pref]; Language tag for the language of the associated namelang : string; Localized namelname : string; Indicates whether this is the preferred name for the associated; language default: falsepref : boolean]]></artwork>          </figure>      </section>      <section title="expand action response" anchor="json_expand">          <figure>            <preamble>              JSON Content Rules for the JSON document returned for a "expand" action request.            </preamble>            <artwork><![CDATA[; root objectroot {  dtstamp,  observances}; Server generated timestamp used for synchronizing changes; [RFC3339] UTC valuedtstamp "dtstamp" : date-time; Array of timezone objectsobservances "observances" [ * observance ]; Information about a timezone available on the serverobservance {  oname,  ?olocal_names,  onset,  utc_offset_from,  utc_offset_to}; Observance nameoname "name" : string; Array of localized observance namesolocal_names "local-names" [ * : string]; The local time at which the observance takes effect; [RFC3339] value modified to exclude "time-offset" partonset "onset" : date-time; The UTC offset in seconds before the start of this observanceutc_offset_from "utc-offset-from" : integer; The UTC offset in seconds at and after the start of this observanceutc_offset_to "utc-offset-to" : integer]]></artwork>          </figure>      </section>      <section title="error response" anchor="tz_error_element">          <figure>            <preamble>              JSON Content Rules for the JSON document returned when an error occurs.            </preamble>            <artwork><![CDATA[; root objectroot {  error,  ?description}; Error codeerror "error" : string; Description of the errordescription "description" : string]]></artwork>          </figure>      </section>    </section>    <section anchor="security_considerations"             title='Security Considerations'>      <t>        Timezone data is critical in determining local or UTC time for devices         and in calendaring and scheduling operations. As such, it is vital that         a reliable source of timezone data is used. Servers providing a timezone         service MUST support HTTP over Transport Layer Security (TLS) (as defined         by <xref target="RFC2818"/>) with a valid certificate. Clients and         servers making use of a timezone service SHOULD use HTTP over TLS and         verify the authenticity of the service being used before accepting and         using any timezone data from that source.      </t>            <t>        Clients that support transport layer security as defined by         <xref target="RFC2818"/> SHOULD try the "_timezones" service first         before trying the "_timezone" service.  Clients MUST follow the        certificate verification process specified in        <xref target="RFC6125" />.      </t>            <t>        A malicious attacker with access to the DNS server data, or able to        get spoofed answers cached in a recursive resolver, can potentially        cause clients to connect to any server chosen by the attacker.  In        the absence of a secure DNS option, clients SHOULD check that the        target FQDN returned in the SRV record matches the original service        domain that was queried.  If the target FQDN is not in the queried        domain, clients SHOULD verify with the user that the SRV target FQDN        is suitable for use before executing any connections to the host.      </t>            <t>        Timezone servers SHOULD protect themselves against errant or malicious        clients by throttling high request rates or frequent requests for large         amounts of data. Clients can avoid being throttled by using the polling        capabilities outlined in <xref target='conditional_timezone'/>      </t>    </section>    <section anchor="iana_considerations" title='IANA Considerations'>      <t>        This  defines a new registry of         "actions" for the timezone service protocol, and defines a "well-known"         URI using the registration procedure and template from Section 5.1 of         <xref target='RFC5785'/>, and creates two new SRV service label aliases.      </t>      <section anchor="new_service_actions_registration"               title="Service Actions Registration">        <t>          This section defines the process to register new or modified          timezone service actions with IANA.        </t>        <section anchor="service_actions_registration_procedure"                 title="Service Actions Registration Procedure">          <t>            The IETF will create a mailing list, timezone-service@ietf.org,             which can be used for public discussion of timezone service actions             proposals prior to registration. Use of the mailing list is strongly             encouraged. The IESG will appoint a designated expert who will             monitor the timezone-service@ietf.org mailing list and review registrations.          </t>          <t>            Registration of new timezone service actions MUST be reviewed by             the designated expert and published in an RFC. A Standard Tracks RFC             is REQUIRED for the registration of new timezone service actions.             A Standard Tracks RFC is also REQUIRED for changes to actions             previously documented in a Standard Tracks RFC.          </t>          <t>            The registration procedure begins when a completed registration             template, defined in the sections below, is sent to             timezone-service@ietf.org and iana@iana.org. The designated expert             is expected to tell IANA and the submitter of the registration within             two weeks whether the registration is approved, approved with minor             changes, or rejected with cause.  When a registration is rejected             with cause, it can be re-submitted if the concerns listed in the             cause are addressed. Decisions made by the designated expert can be             appealed to the IESG Applications Area Director, then to the IESG.             They follow the normal appeals procedure for IESG decisions.          </t>        </section>        <section anchor="registration_template_for_actions"                 title="Registration Template for Actions" >          <t>            An action is defined by completing the following template.            <list style="hanging">              <t hangText="Name:">                The name of the action. This is also the value of the "action"                 parameter used in timezone service requests.              </t>              <t hangText="Description:">                A general description of the action, its purpose, etc.              </t>              <t hangText="Parameters:">                A list of allowed request parameters, indicating whether they                 are "REQUIRED" or "OPTIONAL" and whether they can occur only                 once or multiple times.              </t>              <t hangText="Response">                The nature of the response to the HTTP request, e.g., what                 format the response data is in.              </t>            </list>          </t>        </section>        <section anchor="registration_template_for_action_parameterss"                 title="Registration Template for Action Parameters" >          <t>            An action parameter is defined by completing the following template.            <list style="hanging">              <t hangText="Name:">                The name of the parameter.              </t>              <t hangText="Description:">                A general description of the parameter, its purpose, etc.              </t>              <t hangText="Value:">                The format of the parameter value, or an indication that the parameter has no value.              </t>            </list>          </t>        </section>      </section>      <section anchor="initial_timezone_service_registries"               title="Initial Timezone Service Registries" >        <t>          The IANA is requested to create and maintain the following          registries for timezone service actions with pointers to          appropriate reference documents.        </t>        <section anchor="actions_registry"                 title="Actions Registry">          <t>            The following table is to be used to initialize the            actions registry.          </t>          <texttable>            <ttcol align="left">Action Name</ttcol>            <ttcol align="left">Status</ttcol>            <ttcol align="left">Reference</ttcol>            <c>capabilities</c>            <c>Current</c>            <c>RFCXXXX, <xref target="action_get_capabilities"/></c>            <c>list</c>            <c>Current</c>            <c>RFCXXXX, <xref target="action_list_timezone_identifiers"/></c>            <c>get</c>            <c>Current</c>            <c>RFCXXXX, <xref target="action_get_timezone"/></c>            <c>expand</c>            <c>Current</c>            <c>RFCXXXX, <xref target="action_expand_timezones"/></c>            <c>find</c>            <c>Current</c>            <c>RFCXXXX, <xref target="action_find_timezones"/></c>          </texttable>        </section>        <section anchor="parameters_registry"                 title="Action Parameters Registry">          <t>            The following table is to be used to initialize the            parameters registry.          </t>          <texttable>            <ttcol align="left">Parameter</ttcol>            <ttcol align="left">Status</ttcol>            <ttcol align="left">Reference</ttcol>            <c>action</c>            <c>Current</c>            <c>RFCXXXX, <xref target="parameter_action"/></c>            <c>changedsince</c>            <c>Current</c>            <c>RFCXXXX, <xref target="parameter_changedsince"/></c>            <c>end</c>            <c>Current</c>            <c>RFCXXXX, <xref target="parameter_end"/></c>            <c>format</c>            <c>Current</c>            <c>RFCXXXX, <xref target="parameter_format"/></c>            <c>lang</c>            <c>Current</c>            <c>RFCXXXX, <xref target="parameter_lang"/></c>            <c>start</c>            <c>Current</c>            <c>RFCXXXX, <xref target="parameter_start"/></c>            <c>tzid</c>            <c>Current</c>            <c>RFCXXXX, <xref target="parameter_tzid"/></c>          </texttable>        </section>      </section>      <section title='timezone Well-Known URI Registration'>        <t>          <list style='hanging'>             <t hangText="URI suffix:">timezone</t>               <t hangText="Change controller:">IETF.</t>               <t hangText="Specification document(s):">This RFC.</t>               <t hangText="Related information:"></t>          </list>        </t>      </section>      <section title='Service Name Registrations'>        <t>          This document registers two new service names as per           <xref target='RFC6335'/>. Both are defined within this document.        </t>                <section title='timezone Service Name Registration'>          <t>            <list style='hanging'>               <t hangText="Service Name:">timezone</t>               <t hangText="Transport Protocol(s):">TCP</t>               <t hangText="Assignee:">IESG &lt;iesg@ietf.org&gt;</t>               <t hangText="Contact:">IETF Chair &lt;chair@ietf.org&gt;</t>               <t hangText="Description:">Timezone Service Protocol - non-TLS</t>               <t hangText="Reference:">[draft-douglass-timezone-service]</t>               <t hangText="Assignment Note:">This is an extension of the http                   service. Defined TXT keys: path=&lt;context path&gt;</t>            </list>          </t>        </section>        <section title='timezones Service Name Registration'>          <t>            <list style='hanging'>               <t hangText="Service Name:">timezones</t>               <t hangText="Transport Protocol(s):">TCP</t>               <t hangText="Assignee:">IESG &lt;iesg@ietf.org&gt;</t>               <t hangText="Contact:">IETF Chair &lt;chair@ietf.org&gt;</t>               <t hangText="Description:">Timezone Service Protocol - over TLS</t>               <t hangText="Reference:">[draft-douglass-timezone-service]</t>               <t hangText="Assignment Note:">This is an extension of the https                  service. Defined TXT keys: path=&lt;context path&gt;</t>            </list>          </t>        </section>      </section>    </section>    <section title="Acknowledgements">      <t>        The authors would like to thank the members of the Calendaring and        Scheduling Consortium's Timezone Technical Committee and the following        individuals for contributing their ideas and support:         Steve Allen,        John Haug,        Ciny Joy,        Bryan Keller,        Andrew McMillan,         Arnaud Quillaud,        and Jose Edvaldo Saraiva.      </t>      <t>        The authors would also like to thank the Calendaring and        Scheduling Consortium for advice with this specification.      </t>    </section>  </middle>  <!--  *****BACK MATTER ***** -->  <back>    <references title="Normative References">      &I-D.newton-json-content-rules;      &I-D.kewisch-et-al-icalendar-in-json;      &RFC2046;      &RFC2119;      &RFC2616;      &RFC2782;      &RFC2818;      &RFC3339;      &RFC4627;      &RFC5246;      &RFC5545;      &RFC5646;      &RFC5785;      &RFC6125;      &RFC6321;      &RFC6335;      &RFC6557;      &RFC6763;    </references>    <section title="Change History (to be removed prior to publication as an RFC)">      <t>Changes for -08        <list style="numbers">          <t>            Editorial changes.          </t>          <t>            Fixed JSON content rule syntax.          </t>          <t>            Added a "version" to capabilities.          </t>          <t>            Changed "error" member to a string.          </t>          <t>            Added error codes.          </t>          <t>            Updated reference.          </t>          <t>            Removed inactive timezone feature and returnall parameter.          </t>        </list>      </t>      <t>Changes for -07        <list style="numbers">          <t>            Switched to JSON instead of XML and clean-ed up schema a little bit.          </t>          <t>            Added changedsince to expand action.          </t>          <t>            Added find into registry table.          </t>          <t>            Re-organized some sections.          </t>        </list>      </t>      <t>Changes for -06        <list style="numbers">          <t>            Refresh prior to last call          </t>        </list>      </t>      <t>Changes for -05        <list style="numbers">          <t>            Replaced reference to draft RFC with RFC6557 and RFC6125.          </t>          <t>            New XML namespace contact.          </t>          <t>            Templates for service name.          </t>          <t>            Various typos fixed.          </t>          <t>            More acknowledgements.          </t>        </list>      </t>      <t>Changes for -04        <list style="numbers">          <t>            Replaced reference to RFC4646 with reference to RFC5646          </t>          <t>            New wording on polling.          </t>        </list>      </t>      <t>Changes for -03        <list style="numbers">          <t>            Replaced erroneous reference to ISO3036 with reference to RFC4646          </t>          <t>            Update reference to iCalendar in XML (RFC6321)          </t>          <t>            More description of ids/aliases/names          </t>          <t>            Add substitute-alias parameter for action=get          </t>          <t>            Allow tzid on list          </t>          <t>            Added name request parameter          </t>          <t>            Added find action          </t>        </list>      </t>      <t>Changes for -02        <list style="numbers">          <t>            Missed definitions of the inactive element          </t>          <t>            Restrict UtcOffsetFromType, UtcOffsetToType to a pattern - allow            seconds.          </t>          <t>            Use restricted XML dateTime as base for onset          </t>          <t>            Use restricted XML dateTime for lastmodified and dtstamp          </t>          <t>            Note that 0 and 1 are valid values for an XML boolean.          </t>          <t>            Set pref to a default value of false          </t>          <t>            Server will now set tzid of aliased timezones to the alias name          </t>          <t>            Remove returnaliases option          </t>          <t>            Aliases should not have lang attribute - removed          </t>          <t>            Add text on status codes and an error element          </t>          <t>            Added capabilities info element containing source | primary-source             and contacts.           </t>        </list>      </t>    </section>    <!-- Change Logv00 2007-10-19  MD    Initial version                      -->  </back></rfc>