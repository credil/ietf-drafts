<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
 <!ENTITY rfc2119 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
 <!ENTITY rfc2782 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2782.xml">
 <!ENTITY rfc4033 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml">
 <!ENTITY rfc4035 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4035.xml">
 <!ENTITY rfc5280 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5280.xml">
 <!ENTITY rfc5321 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5321.xml">
 <!ENTITY rfc5890 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5890.xml">
 <!ENTITY rfc6066 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6066.xml">
 <!ENTITY rfc6125 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6125.xml">
 <!ENTITY rfc6698 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6698.xml">
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<!-- autobreaks="yes" -->
<?rfc comments="yes" ?> <?rfc inline="yes" ?>
<?rfc compact="yes" ?> <?rfc subcompact="no" ?>
<!-- editing="no" -->
<?rfc iprnotified="no" ?>
<!-- linkmailto="yes" -->
<!-- private="" --> <!-- header="" --> <!-- footer="" -->
<!-- slides="no" --> <!-- background="" -->
<!-- sortrefs="no" --> <?rfc symrefs="yes" ?>
<?rfc strict="yes" ?>
<?rfc toc="yes" ?> <!-- tocompact="yes" --> <!-- tocdepth="3" --> <!-- tocindent="yes" -->
<!-- topblock="no" -->

<!-- $Cambridge: hermes/doc/qsmtp/draft-fanf-dane-srv.xml,v 1.7 2013/02/25 23:39:38 fanf2 Exp $ -->

<rfc ipr="trust200902"
     category="std"
     docName="draft-ietf-dane-srv-02">

<!-- === -->
 <front>

  <title abbrev="TLSA and SRV">
   Using DNS-Based Authentication of Named Entities (DANE)
   TLSA records with SRV and MX records.
  </title>

  <author initials="T." surname="Finch" fullname="Tony Finch">
   <organization abbrev="University of Cambridge">
    University of Cambridge Computing Service
   </organization>
   <address>
    <postal>
     <street>New Museums Site</street>
     <street>Pembroke Street</street>
     <city>Cambridge</city>
     <code>CB2 3QH</code>
     <country>ENGLAND</country>
    </postal>
    <phone>+44 797 040 1426</phone>
    <email>dot@dotat.at</email>
    <uri>http://dotat.at/</uri>
   </address>
  </author>

  <date month="February" year="2013"/>

  <area>Security</area>
  <workgroup>DNS-Based Authentication of Named Entities (DANE)</workgroup>

  <abstract>

   <t>The DANE specification [RFC6698] describes how to use TLSA
    resource records in the DNS to associate a server's host name with
    its TLS certificate. The association is secured with DNSSEC. Some
    application protocols can use SRV records [RFC2782] to indirectly
    name the server hosts for a service domain. (SMTP uses MX records
    for the same purpose.) This specification gives generic
    instructions for how these application protocols locate and use
    TLSA records. Separate documents give the details that are
    specific to particular application protocols.</t>

  </abstract>

 </front>

 <middle>

<!-- === -->

  <section anchor="intro" title="Introduction">

   <t>The base DANE specification <xref target="RFC6698"/> describes
    how to use TLSA resource records in the DNS to associate a
    server's host name with its TLS certificate. The association is
    secured using DNSSEC. That document "only relates to securely
    associating certificates for TLS and DTLS with host names" (see
    the last paragraph of section 1.2 of
    <xref target="RFC6698"/>).</t>

   <t>Some application protocols do not use host names directly, but
    instead use a service domain. The domain's servers are located
    indirectly via SRV records <xref target="RFC2782"/> (or MX records
    in the case of SMTP <xref target="RFC5321"/>). When they do not
    use host names <xref target="RFC6698"/> does not direcly apply to
    these protocols.</t>

   <t>This document describes how to use DANE TLSA records with SRV
    and MX records. To summarize:

    <list style="symbols">

     <t>We rely on DNSSEC to secure the association between the
      service domain and the target server host names, i.e. the
      result of the SRV or MX query.</t>

     <t>The TLSA records are located using the SRV port, protocol, and
      target host name fields.</t>

     <t>Clients always use TLS when connecting to servers with TLSA
      records.</t>

     <t>The server's certificate is expected to authenticate the
      server host name, rather than the service domain.</t>

    </list></t>

   <t>Separate documents give the details that are specific to
    particular application protocols. For examples,
    see <xref target="I-D.ietf-dane-smtp"/>
    and <xref target="I-D.ietf-dane-mua"/>.</t>

   <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
    memo are to be interpreted as described in <xref target="RFC2119"/>.</t>

  </section>

<!-- === -->

   <section title="Relation between SRV and MX records">

    <t>For the purpose of this specification (to avoid cluttering the
     description with special cases) we treat each MX record
     (<xref target="RFC5321"/> section 5) as being equivalent to a SRV
     record <xref target="RFC2782"/> with corresponding fields copied
     from the MX record and the remaining fields having fixed values
     as follows:

     <list style='hanging'>
      <t hangText="Service -">smtp</t>
      <t hangText="Proto -">tcp</t>
      <t hangText="Name -">MX owner name (mail domain)</t>
      <t hangText="TTL -">MX TTL</t>
      <t hangText="Class -">MX Class</t>
      <t hangText="Priority -">MX Priority</t>
      <t hangText="Weight -">0</t>
      <t hangText="Port -">25</t>
      <t hangText="Target -">MX Target</t>
     </list></t>

    <t>For example this MX record is treated as if it were the
     following SRV record:
     <figure><artwork><![CDATA[
example.com.            86400 IN MX  10      mx.example.net.

_smtp._tcp.example.com. 86400 IN SRV 10 0 25 mx.example.net.
     ]]></artwork></figure></t>

    <t>Other details that are specific to SMTP are described in
     <xref target="I-D.ietf-dane-smtp"/>.</t>

   </section>

<!-- === -->

  <section anchor="dns" title="DNS checks for TLSA and SRV records">

   <section title="SRV query">

    <t>When the client makes a SRV query, a successful result will be
     (a possible chain of CNAME / DNAME aliases referring to) a list of
     one or more SRV records.</t>

    <t>For this specification to take effect, all of these DNS RRsets
     MUST be "secure" according to DNSSSEC validation
     (<xref target="RFC4033"/> section 5). In the case of aliases, the
     whole chain MUST be secure as well as the ultimate target. (This
     corresponds to the AD bit being set in the response(s) - see
     <xref target="RFC4035"/> section 3.2.3.)</t>

    <t>If they are not all secure, this protocol has not been fully
     deployed. The client SHOULD fall back to its non-DNSSEC non-DANE
     behaviour. (This corresponds to the AD bit being unset.)</t>

    <t>If any of the responses is "bogus" according to DNSSEC
     validation the client MUST abort. (This usually corresponds to a
     "server failure" response.)</t>

    <t>In the successful case, the client now has an authentic list of
     server host names with weight and priority values. It performs
     server ordering and selection using the weight and priority
     values without regard to the presence or absence of DNSSEC or
     TLSA records. It takes note of the DNSSEC validation status of
     the SRV response for use when checking certificate names (see
     section <xref target="tls"/>).</t>

   </section>

   <section title="TLSA queries">

    <t>This sub-section applies to each server host name individually,
     provided the SRV response was secure according to DNSSEC
     validation.</t>

    <t>The client SHALL construct the TLSA query name as described in
     <xref target="RFC6698"/> section 3, based on fields from the SRV
     record: port from the SRV RDATA, protocol from the SRV query
     name, and the TLSA base domain is the SRV target host name.</t>

    <t>For example this SRV record leads to the following TLSA query:
     <figure><artwork><![CDATA[
_imap._tcp.example.com. 86400 IN SRV 10 0 143 imap.example.net.

_143._tcp.imap.example.net. IN TLSA ?
     ]]></artwork></figure></t>

    <t>The client SHALL determine if the TLSA record(s) are usable
     according to section 4.1 of <xref target="RFC6698"/>. This
     affects SRV handling as follows:</t>

    <t>If the TLSA response is "secure" the client MUST use TLS when
     connecting to the server. The TLSA records are used when
     validating the server's certificate as described in section
     <xref target="tls"/>.</t>

    <t>If the TLSA response is "insecure" or "indeterminate" the
     client SHALL proceed as if this server has no TLSA records. It
     MAY connect to the server with or without TLS.</t>

    <t>If the TLSA response is "bogus" then the client MUST NOT
     connect to the corresponding server. (The client can still use
     other SRV targets.)</t>

   </section>

  </section>

<!-- === -->

  <section anchor="tls" title="TLS checks for TLSA and SRV records">

   <t>When connecting to a server, the client MUST use TLS if the
    responses to the SRV and TLSA queries were "secure" as described
    above. If the client received zero usable TLSA certificate
    associations, it SHALL validate the server's TLS certificate using
    the normal PKIX rules <xref target="RFC5280"/> without further
    input from the TLSA records. If the client received one or more
    usable TLSA certificate associations, it SHALL process them as
    described in <xref target="RFC6698"/> section 2.1.</t>

   <t>The client uses the DNSSEC validation status of the SRV query in
    its server certificate identity checks. (The TLSA validation
    status does not affect the server certificate identity checks.) It
    SHALL use the Server Name Indication extension (TLS SNI)
    <xref target="RFC6066"/> with the preferred name chosen as
    follows. It SHALL verify the identity asserted by the server's
    certificate according to <xref target="RFC6125"/> section 6, using
    a list of reference identifiers constructed as follows.

    <list style="hanging">
     <t hangText="SRV is insecure or indeterminate:">
      The reference identifiers SHALL include the service domain and
      MUST NOT include the SRV target host name. The service domain is
      the preferred name for TLS SNI.</t>

     <t hangText="SRV is secure:">
      The reference identifiers SHALL include both the service domain
      and the SRV target host name. The target host name is the
      preferred name for TLS SNI.</t>

   </list></t>

   <t>(In the latter case, the client will accept either identity so
    that it is compatible with servers that do and do not support this
    specification.)</t>

  </section>

<!-- === -->

  <section title="Guidance for application protocols">

   <t>Separate documents describe how to apply this specification to
    particular application protocols. If you are writing such as
    document the following points ought to be covered: (This section
    is currently sketchy.)

    <list style="symbols">

     <t>SRV fallback logic? In the event of bogus replies etc.</t>

     <t>Compatibility with non-SRV clients.</t>

    </list>
   </t>

  </section>

<!-- === -->

  <section title="Guidance for server operators">

   <t>In order to support this specification, server software MUST
    implement the TLS Server Name Indication extension (TLS SNI)
    <xref target="RFC6066"/> for selecting the appropriate
    certificate.</t>

   <t>A server that supports TLS and is the target of a SRV record
    MUST have a TLS certificate that authenticates the SRV query
    domain (i.e. the service domain, or "source domain" in
    <xref target="RFC6125"/> terms). This is necessary for clients
    that cannot perform DNSSEC validation. This certificate MUST be
    the default that is presented if the client does not use TLS
    SNI.</t>

   <t>In order to support this specification, the server SHOULD also
    have a certificate that authenticates the SRV target domain (the
    mail server hostname). This can be done using a multi-name
    certificate or by using the client's TLS SNI to select the
    appropriate certificate. The server's TLSA record SHOULD
    correspond to this certificate.</t>

   <t>Note: In some application protocols, there are old non-SRV
    clients that expect a server's TLS certificate to authenticate its
    host name; they are also unlikely to support SNI. This means that
    servers for old clients need a different default certificate from
    servers that are the targets of SRV records. If the server does
    not have a certificate that authenticates all relevant names, it
    is necessary to segregate old and new clients. This can be done by
    using different target hosts or non-standard ports in the SRV
    targets. (The latter avoids the need for additional
    certificates.)</t>

  </section>

<!-- === -->

  <section anchor="security" title="Security considerations">

   <section title="Mixed security status">

    <t>We do not specify that clients check that all of a service
     domain's server host names are consistent in whether they have or
     do not have TLSA records. This is so that partial or incremental
     deployment does not break the service. Different levels of
     deployment are likely if a service domain has a third-party
     fall-back server, for example.</t>

    <t>The SRV and MX sorting rules are unchanged; in particular they
     have not been altered in order to prioritize secure servers over
     insecure servers. If a site wants to be secure it needs to deploy
     this protocol completely; a partial deployment is not secure and
     we make no special effort to support it.</t>

   </section>

   <section title="A service domain trusts its servers">

    <t>By signing their zone with DNSSEC, service domain operators
     implicitly instruct their clients to check their server TLSA
     records. This implies another point in the trust relationship
     between service domain holders and their server operators. Most
     of the setup requirements for this protocol fall on the server
     operator: installing a TLS certificate with the correct name, and
     publishing a TLSA record under that name. If these are not
     correct then connections from TLSA-aware clients might fail.</t>

   </section>

   <section title="Certificate subject name matching">

    <t>Section 4 of the TLSA specification <xref target="RFC6698"/>
     leaves the details of checking names in certificates to higher
     level application protocols, though it suggests the use of
     <xref target="RFC6125"/>.</t>

    <t>Name checking might appear to be unnecessary, since DNSSEC
     provides a secure binding between the server name and the TLSA
     record, which in turn authenticates the certificate. However this
     latter step can be indirect, via a chain of certificates. A
     usage=0 TLSA record only authenticates the CA that issued the
     certificate, and third parties can obtain certificates from the
     same CA.</t>

    <t>So this specification says that clients check that the server's
     certificate matches the server host name, to ensure that the
     certificate was issued by the CA to the server that the client is
     connecting to. The client always performs this check regardless
     of the TLSA usage, to simplify implementation and so that this
     specification is less likely to need updating when new TLSA
     usages are added.</t>

   </section>

   <section title="Deliberate omissions">

    <t>We do not specify that clients check the DNSSEC state of the
     server address records. This is not necessary since the
     certificate checks ensure that the client has connected to the
     correct server. (The address records will normally have the same
     security state as the TLSA records, but they can differ if there
     are CNAME or DNAME indirections.)</t>

   </section>

  </section>

<!-- === -->

  <section title="Internationalization Considerations">

   <t>If any of the DNS queries are for an internationalized domain
    name, then they need to use the A-label form
    <xref target="RFC5890"/>.</t>

  </section>

<!-- === -->

  <section title="IANA Considerations">

   <t>No IANA action is required.</t>

  </section>

<!-- === -->

  <section title="Acknowledgements">

   <t>Thanks to Mark Andrews for arguing that authenticating the
    server host name is the right thing, and that we ought to rely on
    DNSSEC to secure the SRV / MX lookup. Thanks to James Cloos, Ned
    Freed, Olafur Gudmundsson, Paul Hoffman, Phil Pennock, Hector
    Santos, Jonas Schneider, and Alessandro Vesely for helpful
    suggestions.</t>

  </section>

<!-- === -->

 </middle>

 <back>

<!-- === -->

  <references title="Normative References">

   &rfc2119; <!-- MUSTard MAYonnaise -->
   &rfc2782; <!-- DNS SRV -->
   &rfc4033; <!-- DNSSEC overview -->
   &rfc4035; <!-- DNSSEC protocol -->
   &rfc5280; <!-- PKIX -->
   &rfc5321; <!-- ESMTP -->
   &rfc5890; <!-- IDNA -->
   &rfc6066; <!-- TLS SNI -->
   &rfc6125; <!-- certificate verification -->
   &rfc6698; <!-- DANE TLSA -->

  </references>

  <references title="Informative References">

   <reference anchor="I-D.ietf-dane-smtp">
    <front>
     <title>Secure SMTP using DNS-Based Authentication of Named Entities
      (DANE) TLSA records.</title>
     <author initials="T" surname="Finch" fullname="Tony Finch" />
     <date month="March" year="2013" />
    </front>
    <seriesInfo name="Internet-Draft" value="draft-ietf-dane-smtp" />
   </reference>

   <reference anchor="I-D.ietf-dane-mua">
    <front>
     <title>Using DNS-Based Authentication of Named Entities (DANE)
      with POP, IMAP, and message submission.</title>
     <author initials="T" surname="Finch" fullname="Tony Finch" />
     <date month="March" year="2013" />
    </front>
    <seriesInfo name="Internet-Draft" value="draft-ietf-dane-mua" />
   </reference>

  </references>

<!-- === -->

  <section title="Example">

   <t>In the following, most of the DNS resource data is elided for
    simplicity.</t>

   <t><figure>
    <artwork><![CDATA[
; mail domain
example.com.              MX      1 mx.example.net.
example.com.              RRSIG   MX ...

; SMTP server host name
mx.example.net.           A      192.0.2.1
mx.example.net.           AAAA   2001:db8:212:8::e:1

; TLSA resource record
_25._tcp.mx.example.net.  TLSA   ...
_25._tcp.mx.example.net.  RRSIG  TLSA ...
    ]]></artwork>
   </figure></t>

   <t>Mail for addresses at example.com is delivered by SMTP to
    mx.example.net. Connections to mx.example.net port 25 that use
    STARTTLS will get a server certificate that authenticates the name
    mx.example.net.</t>

  </section>

<!-- === -->

  <section title="Rationale">

   <t>The long-term goal of this specification is to settle on TLS
    certificates that verify the server host name rather than the
    service domain, since this is more convenient for servers hosting
    multiple domains and scales up more easily to larger numbers of
    service domains.</t>

   <t>There are a number of other reasons for doing it this way:
    <list style="symbols">

     <t>The certificate is part of the server configuration, so it
      makes sense to associate it with the server name rather than the
      service domain.</t>

     <t>In the absence of TLS SNI, if the certificate identifies the
      host name then it does not need to list all the possible service
      domains.</t>

     <t>When the server certificate is replaced it is much easier if
      there is one part of the DNS that needs updating to match,
      instead of an unbounded number of hosted service domains.</t>

     <t>The same TLSA records work with this specification, and with
      direct connections to the host name in the style of
      <xref target="RFC6698"/>.</t>

     <t>Some application protocols, such as SMTP, allow a client to
      perform transactions with multiple service domains in the same
      connection. It is not in general feasible for the client to
      specify the service domain using TLS SNI when the connection is
      established, and the server might not be able to present a
      certificate that authenticates all possible service domains.</t>

     <t>It is common for SMTP servers to act in multiple roles, as
      outgoing relays or as incoming MX servers, depending on the
      client identity. It is simpler if the server can present the
      same certificate regardless of the role in which it is to act.
      Sometimes the server does not know its role until the client has
      authenticated, which usually occurs after TLS has been
      established.</t>

   </list></t>

   <t>This specification does not provide an option to put TLSA
    records under the service domain because that would add complexity
    without providing any benefit, and security protocols are best
    kept simple. As described above, there are real-world cases where
    authenticating the service domain cannot be made to work, so there
    would be complicated criteria for when service domain TLSA records
    might be used and when they cannot. This is all avoided by
    putting the TLSA records under the server host name.</t>

   <t>The disadvantage is that clients which do not do DNSSEC
    validation must, according to <xref target="RFC6125"/> rules,
    check the server certificate against the service domain, since
    they have no other way to authenticate the server. This means that
    Server Name Indication support is necessary for backwards
    compatibility.</t>

  </section>

<!-- === -->

 </back>

</rfc>
