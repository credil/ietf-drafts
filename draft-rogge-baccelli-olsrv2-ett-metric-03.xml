<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes" tocompact="yes" tocdepth="3" tocindent="yes" symrefs="yes" sortrefs="no" comments="yes" inline="yes" compact="yes" subcompact="no"?>
<rfc category="info" docName="draft-rogge-baccelli-olsrv2-ett-metric-03" ipr="trust200902">
	<front>
		<title abbrev="Directional airtime metric for OLSRv2">Packet Sequence Number based directional airtime metric for OLSRv2</title>
		<author initials="H.R." surname="Rogge" fullname="Henning Rogge">
			<organization>Fraunhofer FKIE</organization>
			<address>
				<email>henning.rogge@fkie.fraunhofer.de</email>
				<uri>http://www.fkie.fraunhofer.de</uri>
			</address>
		</author>
		<author initials="E.B." surname="Baccelli" fullname="Emmanuel Baccelli">
			<organization>INRIA</organization>
			<address>
				<email>Emmanuel.Baccelli@inria.fr</email>
				<uri>http://www.emmanuelbaccelli.org/</uri>
			</address>
		</author>
		<date month="September" year="2013"/>
		<area>Routing Area</area>
		<workgroup>MANET</workgroup>
		<keyword>metric</keyword>
		<keyword>ad hoc network</keyword>
		<keyword>MANET</keyword>
		<keyword>routing</keyword>
		<keyword>IP networks</keyword>
		<keyword>OLSR</keyword>
		<keyword>ETT</keyword>
		<keyword>ETX</keyword>
		<keyword>Funkfeuer</keyword>
		<abstract>
			<t>This document specifies an directional airtime link metric for usage in OLSRv2.</t>
		</abstract>
	</front>

	<middle>
		<section anchor="introduction" title="Introduction">
			<t>One of the major shortcomings of OLSR <xref target="RFC3626"/> is the missing of alink cost metric between mesh nodes. Operational experience with mesh networks since the standardization of OLSR has revealed that wireless networks links can have highly variable and heterogeneous properties, which makes a hopcount metric insufficient for effective mesh routing.</t>
			<t>Based on this experience, OLSRv2 <xref target="OLSRV2"/> integrates the concept of link metrics directly into the core specification of the routing protocol. The OLSRv2 routing metric is an external process, it can be any kind of dimensionless additive cost function which reports to the OLSRv2 protocol.</t>
			<t>The OLSR.org <xref target="OLSR.org"/> implementation of OLSR included an Estimated Transmission Count (ETX) metric <xref target="MOBICOM04"/> since 2004 as a proprietary extension. While this metric is not perfect, it proved to be sufficient for a long time for Community Mesh Networks (<xref target="olsrorg_history"/>).</t>
			<t>This document describes a Directional Airtime routing metric for OLSRv2, a successor of the OLSR.org routing metric for <xref target="RFC3626"/>. It takes both the loss rate and the link speed into account to provide a more accurate picture of the mesh network links.</t>
		</section>

		<section anchor="terminology" title="Terminology">
			<t>The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL NOT','SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>
			<t>The terminology introduced in <xref target="RFC5444"/>, <xref target="OLSRV2"/> and <xref target="RFC6130"/>, including the terms "packet", "message" and "TLV" are to be interpreted as described therein.</t>
			<t>Additionally, this document uses the following terminology and notational conventions:
			<list style="hanging">
				<t hangText="QUEUE"> - a first in, first out queue of integers.</t>
				<t hangText="QUEUE[TAIL]"> - the most recent element in the queue.</t>
				<t hangText="add(QUEUE, value)"> - adds a new element to the TAIL of the queue.</t>
				<t hangText="remove(QUEUE)"> - removes the HEAD element of the queue</t>
				<t hangText="sum(QUEUE)"> - an operation which returns the sum of all elements in a QUEUE.</t>
				<t hangText="diff_seqno(new, old)"> - an operation which returns the positive distance between two elements of the circular sequence number space defined in section 5.1 of <xref target="RFC5444"/>. Its value is either (new - old) if this result is positive, or else its value is (new - old + 65536).</t>
				<t hangText="MAX(a,b)"> - the maximum of a and b.</t>
				<t hangText="UNDEFINED">- a value not in the normal value range of a variable. Might be -1 for this protocol.</t>
				<t hangText="airtime">- the time a transmitted packet blocks a shared medium, e.g., a wireless link.</t>
				<t hangText="ETX">- Expected Transmission Count, a link metric proportional to the number of transmissions to successfully send an IP packet over a link.</t>
				<t hangText="ETT">- Estimated Travel Time, a link metric proportional to the amount of airtime needed to transmit an IP packet over a link, not considering layer-2 overhead created by preamble, backoff time and queuing.</t>
				<t hangText="DAT">- Directional Airtime Metric, the link metric described in this document, which is a directional variant of ETT.</t>
			</list></t>
		</section>

		<section anchor="applicable" title="Applicability Statement">
			<t>The Directional Airtime Metric was designed and tested in wireless IEEE 802.11 mesh networks. These networks employ linklayer retransmission to increase the delivery probability and multiple unicast data rates.</t>
			<t>The metric must learn about the unicast data rate towards each one-hop neighbor from an external process, either by configuration or by an external measurement process. This measurement could be done by indirect layer-3 measurements like packet-pair or by gathering cross-layer data from the operating system or an external daemon like DLEP <xref target="DLEP"/>.</t>
			<t>If <xref target="RFC5444"/> control traffic is used to determine the link packet loss, the link-layer multicast transmission should not have a higher reception probability than the slowest unicast transmission. It might be necessary to increase the data-rate of the multicast transmissions, e.g. set the multicast data-rate to 6 MBit/s if you use IEEE 802.11g only.</t>
			<t>The metric can only handle a certain range of packet loss and unicast data-rate. Maximum packet loss is 15 of 16 packets (without link-layer retransmissions), the unicast data-rate can be between 16 bits/s and 4 GBit/s. The metric has been designed for data-rates of 1 MBit/s and hundreds of MBit/s.</t>
		</section>

		<section anchor="datmetric" title="Directional Airtime Metric Rational">
			<t>The Directional Airtime Metric has been inspired by the publications on the ETX <xref target="MOBICOM03"/> and ETT <xref target="MOBICOM04"/> metric, but has several key differences.</t>
			<t>Instead of measuring the symmetric probability of a bidirectional transmission of a packet over a link and back, the Directional Airtime Metric only measures the unidirectional loss and combines it with the outgoing linkspeed into the metric cost. There are multiple reasons for this decision:
			<list style="symbols">
				<t>OLSRv2 <xref target="OLSRV2"/> defines the link metric as directional costs between nodes.</t>
				<t>Not all linklayer implementations use acknowledgement mechanisms. Most linklayer implementations who do use them use less airtime and a more robust modulation for the acknowledgement than the data transmission, which makes it more likely for the data transmission to be disrupted compared to the acknowledgement.</t>
				<t>Symmetric link loss would need an additional signaling TLV in the <xref target="RFC6130"/> HELLO and would delay metric calculating by a HELLO interval.</t>
			</list></t>
			<t>The Directional Airtime Metric does not integrate the packet size into the link cost. Doing so is not feasible in most link-state routing protocol implementations, multiplying all link costs with the size of a packet would not change the dijkstra result anyways.</t>
			<t>The queue based packet loss estimator has been tested for a long time in the OLSR.org ETX implementation, see <xref target="olsrorg_history"/>. The output is a time-stable average of the packet loss.</t>
		</section>

		<section anchor="functioning" title="Metric Functioning &amp; Overview">
			<t>The Directional Airtime Metric is calculated for each link set entry, as defined in <xref target="RFC6130"/> section 7.1.</t>
			<t>The metric processes two kinds of data into the metric value, packet loss rate and link-speed. While the link-speed is taken from an external process, the current packet loss rate is calculated by storing packet reception and packet loss events.</t>
			<t>Multiple incoming packet loss/reception events must be averaged into a loss rate to get a smooth metric. Experiments with exponential weighted moving average (EWMA) lead to a highly fluctuating output or a too slow convergence (or both). To get a smoother and more controllable metric result, this metric uses a fixed length double queue to average the incoming events, one queue for received packets and one for the total number of packets sent by the other side of the link.</t>
			<t>Because the rate of incoming packets is not uniform over time, the queue is made of a number of counters, each representing a fixed time interval. Incoming packet loss and packet reception event are accumulated in the current queue element until a timer adds a new empty counter to both queues and remove the oldest counter from both.</t>
			<t>In addition to the queued packet loss, this metric uses a timer to detect a total link-loss. For every NHDP HELLO interval in which the metric received no packet from a neighbor, scales the number of received packets in the queue based on the total time interval the queue represents compared to the total time of the lost HELLO intervals.</t>
			<t>The average packet loss ratio is calculated as the sum of the 'total package count' queue counters divided by the sum of the 'packets received count' queue counters. This value is then divided through the current link-speed and then scaled into the range of metrics allowed for OLSRv2.</t>
			<t>The metric value is then used as L_in_metric of the Link Set (as defined in section 8.1. of <xref target="OLSRV2"/>).</t>
		</section>

		<section anchor="parameter" title="Protocol Parameters">
			<t>This specification defines the following parameters, which can be changed without making the metric outputs incomparable with each other:
			<list style="hanging">
				<t hangText="DAT_MEMORY_LENGTH">- Queue length for averaging packet loss. All received and lost packets within the queue are used to calculate the cost of the link.</t>
				<t hangText="DAT_REFRESH_INTERVAL">- interval in seconds between two metric recalculations as described in <xref target="metric_recalc"/>. This value SHOULD be smaller than a typical HELLO interval.</t>
				<t hangText="DAT_HELLO_TIMEOUT_FACTOR">- timeout factor for HELLO interval at which point a HELLO is definitely considered lost. The value must be a floating point number between 1.0 and 2.0, large enough to take the delay for message aggregation into account.</t>
				<t hangText="DAT_SEQNO_RESTART_DETECTION">- threshold in number of missing packets (based on received packet sequence numbers) at which point the router considers the neighbor has restarted. This parameter is only used for packet sequence number based loss estimation.</t>
			</list></t>
			
			<section title="Recommened Values">
				<t>The proposed values of the protocol parameters are for Community Mesh Networks, which mostly use immobile mesh nodes. Using this metric for mobile networks might require shorter DAT_REFRESH_INTERVAL and/or DAT_MEMORY_LENGTH.
				<list style="hanging">
					<t hangText="DAT_MEMORY_LENGTH">:= 64</t>
					<t hangText="DAT_REFRESH_INTERVAL">:= 1</t>
					<t hangText="DAT_HELLO_TIMEOUT_FACTOR">:= 1.2</t>
					<t hangText="DAT_SEQNO_RESTART_DETECTION">:= 8</t>
				</list></t>
			</section>
		</section>

		<section anchor="constants" title="Protocol Constants">
			<t>This specification defines the following constants, which cannot be changed without making the metric outputs incomparable:
			<list style="hanging">
				<t hangText="DAT_MAXIMUM_LOSS">- Fraction of the loss rate used in this routing metric. Loss rate will be between 0/DAT_MAXIMUM_LOSS and (DAT_MAXIMUM_LOSS-1)/DAT_MAXIMUM_LOSS: 16.</t>
				<t hangText="DAT_MINIMUM_BITRATE">- Minimal bit-rate in Bit/s used by this routing metric: 16.</t>
			</list></t>
		</section>
		<section anchor="infobase" title="Data Structures">
			<t>This specification extends the Link Set Tuples of the Interface Information Base, as defined in <xref target="RFC6130"/> section 7.1, by the following additional elements for each link tuple when being used with this metric:
			<list style="hanging">
				<t hangText="L_DAT_received"> is a QUEUE with DAT_MEMORY_LENGTH integer elements. Each entry contains the number of successfully received packets within an interval of DAT_REFRESH_INTERVAL.</t>
				<t hangText="L_DAT_total"> is a QUEUE with DAT_MEMORY_LENGTH integer elements. Each entry contains the estimated number of packets transmitted by the neighbor, based on the received packet sequence numbers within an interval of DAT_REFRESH_INTERVAL.</t>
				<t hangText="L_DAT_hello_time"> is the time when the next hello will be expected.</t>
				<t hangText="L_DAT_hello_interval"> is the interval between two hello messages of the links neighbor as signaled by the INTERVAL_TIME TLV <xref target="RFC5497"/> of NHDP messages <xref target="RFC6130"/>.</t>
				<t hangText="L_DAT_lost_hello_messages"> is the estimated number of lost hello messages from this neighbor, based on the value of the hello interval.</t>
				<t hangText="L_DAT_rx_bitrate"> is the current bitrate of incoming unicast traffic for this neighbor.</t>
			</list></t>

			<t>Methods to obtain the value of L_DAT_rx_bitrate are out of scope for this specification. Such methods may be static configuration via a configuration file, or dynamic measurement through mechanisms described in a separate specification (e.g. <xref target="DLEP"/>).  Any Link tuple with L_status = HEARD or L_status = SYMMETRIC MUST have a specified value of L_DAT_rx_bitrate if it is to be used by this routing metric.</t>
			
			<t>When using packet sequence numbers to estimate the loss rate, the Link Set Tuples get another field:
			<list style="hanging">
				<t hangText="L_DAT_last_pkt_seqno"> is the last received packet sequence number received from this link.</t>
			</list></t>
			
			<section title="Initial Values">
				<t>When generating a new tuple in the Link Set, as defined in <xref target="RFC6130"/> section 12.5 bullet 3, the values of the elements specified in <xref target="infobase"/> are set as follows:
				<list style="symbols">
					<t>L_DAT_received := 0, ..., 0. The queue always has DAT_MEMORY_LENGTH elements.</t>
					<t>L_DAT_total := 0, ..., 0. The queue always has DAT_MEMORY_LENGTH elements.</t>
					<t>L_DAT_last_pkt_seqno := UNDEFINED (no earlier packet received).</t>
					<t>L_DAT_hello_time := EXPIRED (no earlier NHDP HELLO received).</t>
					<t>L_DAT_hello_interval := UNDEFINED (no earlier NHDP HELLO received).</t>
					<t>L_DAT_lost_hello_messages := 0 (no HELLO interval without packets).</t>
				</list></t>
			</section>
		</section>

		<section title="Packets and Messages">
			<section title="Definitions">
				<t>For the purpose of this section, note the following definitions:
				<list style="symbols">
					<t>"pkt_seqno" is defined as the <xref target="RFC5444"/> packet sequence number of the received packet.</t>
					<t>"interval_time" is the time encoded in the INTERVAL_TIME message TLV of a received <xref target="RFC6130"/> HELLO message.</t>
				</list></t>
			</section>

			<section title="Requirements">
				<t>An implementation of OLSRv2, using the metric specified by this document, MUST include the following parts into its <xref target="RFC5444"/> output:
				<list style="symbols">
					<t>an INTERVAL_TIME message TLV in each HELLO message, as defined in <xref target="RFC6130"/> section 4.3.2.</t>
				</list></t>
			</section>

			<section title="Link Loss Data Gathering">
				<t>While this metric was designed for measuring the packet loss based on the <xref target="RFC5444"/> packet sequence number, some implementations might not be able to add the packet sequence number to their output.</t>
				<section title="Packet Sequence based link loss">
					<t>An implementation of OLSRv2, using the metric specified by this document with packet sequence based link loss, MUST include the following element into its <xref target="RFC5444"/> output:
					<list style="symbols">
						<t>an interface specific packet sequence number as defined in <xref target="RFC5444"/> section 5.1 which is incremented by 1 for each outgoing <xref target="RFC5444"/> packet on the interface.</t>
					</list></t>
					
					<t>For each incoming <xref target="RFC5444"/> packet, additional processing MUST be carried out after the packet messages have been processed as specified in <xref target="RFC6130"/> and <xref target="OLSRV2"/>.</t>
					<t><xref target="RFC5444"/> packets without packet sequence number MUST NOT be processed in this way by this metric.</t>
					<t>The router MUST update the Link Set Tuple corresponding to the originator of the packet:
					<list style="numbers">
						<t>If L_DAT_last_pkt_seqno = UNDEFINED, then:
						<list style="numbers">
							<t>L_DAT_received[TAIL] := 1.</t>
							<t>L_DAT_total[TAIL] := 1.</t>
						</list></t>
						<t>Otherwise:
						<list style="numbers">
							<t>L_DAT_received[TAIL] := L_DAT_received[TAIL] + 1.</t>
							<t>diff := seq_diff(pkt_seqno, L_DAT_last_pkt_seqno).</t>
							<t>If diff &gt; DAT_SEQNO_RESTART_DETECTION, then:
							<list style="numbers">
								<t>diff := 1.</t>
							</list></t>
							<t>L_DAT_total[TAIL] := L_DAT_total[TAIL] + diff.</t>
						</list></t>
						<t>L_DAT_last_pkt_seqno := pkt_seqno.</t>
						<t>If L_DAT_hello_interval != UNDEFINED, then:
						<list style="numbers">
							<t>L_DAT_hello_time := current time + (L_DAT_hello_interval * DAT_HELLO_TIMEOUT_FACTOR).</t>
						</list></t>
						<t>L_DAT_lost_hello_messages := 0.</t>
					</list></t>
				</section>

				<section title="HELLO based link loss">
					<t>A metric might just use the incoming NHDP HELLO messages of a neighbor to calculate the link loss. Because this method uses fewer events to calculate the metric, the variance of the output will increase. It might be necessary to increase the value of DAT_MEMORY_LENGTH to compensate this.</t>
					
					<t>For each incoming HELLO Message, after it has been processed as defined in <xref target="RFC6130"/> section 12, the Link Set Tuple (section XYZ) corresponding to the incoming HELLO message must be updated.
					<list style="numbers">
						<t>L_DAT_received[TAIL] := L_DAT_received[TAIL] + 1.</t>
						<t>L_DAT_total[TAIL] := L_DAT_total[TAIL] + 1.</t>
						<t>L_DAT_lost_hello_messages := 0.</t>
					</list></t>
				</section>

				<section title="Other measurement of link loss">
					<t>Instead of using incoming <xref target="RFC5444"/> packets or <xref target="RFC6130"/> messages, the routing daemon can also use other sources to measure the linklayer lossrate (e.g. <xref target="DLEP"/>).</t>
					<t>To use a source like this with this metric, the routing daemon has to add incoming total traffic (or the sum of received and lost traffic) and lost traffic to the corresponding queue elements in the Link Set Tuple (section XYZ) corresponding to originator of the traffic.</t>
					<t>The routing daemon should also set L_DAT_lost_hello_messages to zero every times new packeges arrive.</t>
				</section>
			</section>

			<section title="HELLO Message Processing">
				<t>For each incoming HELLO Message, after it has been processed as defined in <xref target="RFC6130"/> section 12, the Link Set Tuple corresponding to the incoming HELLO message must be updated.</t>
				<t>Only HELLO Messages with an INTERVAL_TIME message TLVs must be processed.
				<list style="numbers">
					<t>L_DAT_hello_interval := interval_time.</t>
				</list></t>
			</section>
		</section>

		<section title="HELLO Timeout Processing">
			<t>When L_DAT_hello_time has timed out, the following step MUST be done:
			<list style="numbers">
				<t>L_DAT_lost_hello_messages := L_DAT_lost_hello_messages + 1.</t>
				<t>L_DAT_hello_time := L_DAT_hello_time + L_DAT_hello_interval.</t>
			</list></t>
		</section>

		<section anchor="metric_recalc" title="Metric Update">
			<t>Once every DAT_REFRESH_INTERVAL, all L_in_metric values in all Link Set entries MUST be recalculated:
			<list style="numbers">
				<t>sum_received := sum(L_DAT_total).</t>
				<t>sum_total := sum(L_DAT_received).</t>
				<t>If L_DAT_hello_interval != UNDEFINED and L_DAT_lost_hellos &gt; 0, then:
				<list style="numbers">
					<t>lost_time_proportion := L_DAT_hello_interval * L_DAT_lost_hellos / DAT_MEMORY_LENGTH.</t>
					<t>sum_received := sum_received * MAX ( 0, 1 - lost_time_proportion);</t>
				</list></t>
				<t>If sum_received &lt; 1, then:
				<list style="numbers">
					<t>L_in_metric := MAXIMUM_METRIC, as defined in <xref target="OLSRV2"/> section 5.6.1.</t>
				</list></t>
				<t>Otherwise:
				<list style="numbers">
					<t>loss := sum_total / sum_received.</t>

					<t>If loss &gt; DAT_MAXIMUM_LOSS, then:
					<list style="numbers">
						<t>loss := DAT_MAXIMUM_LOSS.</t>
					</list></t>
					
					<t>bitrate := L_DAT_rx_bitrate.</t>
					<t>If bitrate &lt; DAT_MINIMUM_BITRATE, then:
					<list style="numbers">
						<t>bitrate := DAT_MINIMUM_BITRATE.</t>
					</list></t>
					
					<t>L_in_metric := (2^24 / DAT_MAXIMUM_LOSS) * loss / (bitrate / DAT_MINIMUM_BITRATE).</t>
				</list></t>
				
				<t>remove(L_DAT_total)</t>
				<t>add(L_DAT_total, 0)</t>
				
				<t>remove(L_DAT_received)</t>
				<t>add(L_DAT_received, 0)</t>
			</list></t>
		</section>

		<section title="IANA Considerations">
			<t>This document contains no actions for IANA.</t>
		</section>

		<section anchor="security" title="Security Considerations">
			<t>Artificial manipulation of metrics values can drastically alter network performance. In particular, advertising a higher L_in_metric value may decrease the amount of incoming traffic, while advertising lower L_in_metric may increase the amount of incoming traffic. By artificially increasing or decreasing the L_in_metric values it advertises, a rogue router may thus attract or repulse data traffic. A rogue router may then potentially degrade data throughput by not forwarding data as it should or redirecting traffic into routing loops or bad links.</t>
			<t>An attacker might also inject packets with incorrect packet level sequence numbers, pretending to be somebody else. This attack could be prevented by the true originator of the RFC5444 packets by adding a <xref target="RFC6622"/> ICV Packet TLV and TIMESTAMP Packet TLV to each packet. This allows the receiver to drop all incoming packets which have a forged packet source, both packets generated by the attacker or replayed packets.</t>
		</section>
		
		<section anchor="acknowledgements" title="Acknowledgements">
			<t>The authors would like to acknowledge the network administrators from <xref target="FREIFUNK">Freifunk Berlin</xref> and <xref target="FUNKFEUER">Funkfeuer Vienna</xref> for endless hours of testing and suggestions to improve the quality of the original ETX metric for the olsr.org routing daemon.</t>
			<t>This effort/activity is supported by the European Community Framework Program 7 within the Future Internet Research and Experimentation Initiative (FIRE), Community Networks Testbed for the Future Internet (<xref target="CONFINE"/>), contract FP7-288535.</t>
			<t>The authors would like to gratefully acknowledge the following people for intense technical discussions, early reviews and comments on the specification and its components (listed alphabetically):
			Teco Boot (Infinity Networks),
			Juliusz Chroboczek (PPS, University of Paris 7),
			Thomas Clausen,
			Christopher Dearlove (BAE Systems Advanced Technology Centre),
			Ulrich Herberg (Fujitsu Laboratories of America),
			Markus Kittenberger (Funkfeuer Vienna), 
			Joseph Macker (Naval Research Laboratory) and
			Stan Ratliff (Cisco Systems).
			</t>
		</section>
	</middle>
	<back>
		<references title="Normative References">
			<reference anchor="RFC2119">
				<front>
					<title abbrev="RFC2119">Key words for use in RFCs to Indicate Requirement Levels</title>
					<author initials="S." surname="Bradner" fullname="Scott Bradner">
						<organization abbrev="HU">Harvard University</organization>
					</author>
					<date month="March" year="1997"/>
				</front>
				<seriesInfo name="RFC" value="2119"/>
				<seriesInfo name="BCP" value="14"/>
			</reference>
			<reference anchor="RFC3626">
				<front>
					<title abbrev="RFC3626">Optimized Link State Routing Protocol</title>
					<author initials="T.H." surname="Clausen" fullname="Thomas Heide Clausen">
						<organization abbrev="INRIA">Project Hipercom, INRIA Rocquencourt, France</organization>
					</author>
					<author initials="P." surname="Jacquet" fullname="P. Jacquet">
						<organization abbrev="INRIA">Project Hipercom, INRIA Rocquencourt, France</organization>
					</author>
					<date month="October" year="2003"/>
				</front>
				<seriesInfo name="RFC" value="3626"/>
			</reference>
			<reference anchor="RFC5444">
				<front>
					<title>Generalized Mobile Ad Hoc Network (MANET) Packet/Message Format</title>
					<author initials="T.H." surname="Clausen" fullname="Thomas Heide Clausen">
						<organization abbrev="X">Ecole Polytechnique, France</organization>
					</author>
					<author initials="C." surname="Dearlove" fullname="C. Dearlove">
						<organization>BAE Systems</organization>
					</author>
					<author initials="J." surname="Dean" fullname="J. Dean">
						<organization abbrev="NRL">Naval Research Laboratory</organization>
					</author>
					<author initials="C." surname="Adjih" fullname="C. Adjih">
						<organization abbrev="INRIA">INRIA Rocquencourt</organization>
					</author>
					<date month="February" year="2009"/>
				</front>
				<seriesInfo name="RFC" value="5444"/>
			</reference>
			<reference anchor="RFC5497">
				<front>
					<title>Representing Multi-Value Time in Mobile Ad Hoc Networks (MANETs)</title>
					<author initials="T.H." surname="Clausen" fullname="Thomas Heide Clausen">
						<organization abbrev="X">Ecole Polytechnique, France</organization>
					</author>
					<author initials="C." surname="Dearlove" fullname="C. Dearlove">
						<organization>BAE Systems</organization>
					</author>
					<date month="March" year="2009"/>
				</front>
				<seriesInfo name="RFC" value="5497"/>
			</reference>
			<reference anchor="RFC6130">
				<front>
					<title>Mobile Ad Hoc Network (MANET) Neighborhood Discovery Protocol (NHDP)</title>
					<author initials="T.H." surname="Clausen" fullname="Thomas Heide Clausen">
						<organization abbrev="LIX">Ecole Polytechnique, France</organization>
					</author>
					<author initials="C." surname="Dearlove" fullname="C. Dearlove">
						<organization abbrev="INRIA">BAE Systems</organization>
					</author>
					<author initials="J." surname="Dean" fullname="J. Dean">
						<organization abbrev="NRL">Naval Research Laboratory</organization>
					</author>
					<date month="April" year="2011"/>
				</front>
				<seriesInfo name="RFC" value="6130"/>
			</reference>
			<reference anchor="RFC6622">
				<front>
					<title>Integrity Check Value and Timestamp TLV Definitions for Mobile Ad Hoc Networks (MANETs)</title>
					<author initials="U.H." surname="Ulrich" fullname="Ulrich Herberg">
						<organization abbrev="X">Fujitsu Laboratories of America</organization>
					</author>
					<author initials="T.H." surname="Clausen" fullname="Thomas Heide Clausen">
						<organization abbrev="LIX">Ecole Polytechnique, France</organization>
					</author>
					<date month="May" year="2012"/>
				</front>
				<seriesInfo name="RFC" value="6622"/>
			</reference>
			<reference anchor="OLSRV2">
				<front>
					<title>The Optimized Link State Routing Protocol version 2</title>
					<author initials="T.H." surname="Clausen" fullname="Thomas Heide Clausen">
						<organization abbrev="X">Ecole Polytechnique, France</organization>
					</author>
					<author initials="P." surname="Jacquet" fullname="P. Jacquet">
						<organization abbrev="INRIA">Project Hipercom, INRIA Rocquencourt, France</organization>
					</author>
					<author initials="C." surname="Dearlove" fullname="C. Dearlove">
						<organization abbrev="INRIA">BAE Systems</organization>
					</author>
					<date month="March" year="2013"/>
				</front>
				<seriesInfo name="draft-ietf-manet-olsrv2-19" value=""/>
			</reference>
		</references>
		<references title="Informative References">
			<reference anchor="CONFINE" target="http://www.confine-project.eu">
				<front>
					<title>Community Networks Testbed for the Future Internet (CONFINE)</title>
					<author/>
					<date year="2013"/>
				</front>
			</reference>
			<reference anchor="DLEP">
				<front>
					<title>Dynamic Link Exchange Protocol (DLEP)</title>
					<author initials="S.R." surname="Ratliff" fullname="S. Ratliff">
						<organization abbrev="X">Cisco</organization>
					</author>
					<author initials="B.B." surname="Berry" fullname="Bo Berry">
						<organization abbrev="X">Cisco</organization>
					</author>
					<author initials="G.H." surname="Harrison" fullname="Greg Harrison">
						<organization abbrev="X">Cisco</organization>
					</author>
					<author initials="S.J." surname="Jury" fullname="Shawn Jury">
						<organization abbrev="X">NetApp</organization>
					</author>
					<author initials="D.S." surname="Satterwhite" fullname="Darryl Satterwhite">
						<organization abbrev="X">Broadcom</organization>
					</author>
					<date month="March" year="2013"/>
				</front>
				<seriesInfo name="draft-ietf-manet-dlep-04" value=""/>
			</reference>
			<reference anchor="MOBICOM03">
				<front>
					<title>A High-Throughput Path Metric for Multi-Hop Wireless Routing</title>
					<author initials="D." surname="De Couto" fullname="D. De Couto">
						<organization abbrev=""/>
					</author>
					<author initials="D." surname="Aguayo" fullname="D. Aguayo">
						<organization abbrev=""/>
					</author>
					<author initials="J." surname="Bicket" fullname="J. Bicket">
						<organization abbrev=""/>
					</author>
					<author initials="R." surname="Morris" fullname="R. Morris">
						<organization abbrev=""/>
					</author>
					<date year="2003"/>
				</front>
				<seriesInfo name="Proceedings of the MOBICOM Conference" value=""/>
			</reference>
			<reference anchor="MOBICOM04">
				<front>
					<title>Routing in Multi-Radio, Multi-Hop Wireless Mesh Networks</title>
					  
					<author initials="D." surname="Richard" fullname="Richard Draves">
						<organization abbrev=""/>
					</author>
					<author initials="P." surname="Jitendra" fullname="Jitendra Padhye">
						<organization abbrev=""/>
					</author>
					<author initials="Z." surname="Brian" fullname="Brian Zill">
						<organization abbrev=""/>
					</author>
					<date year="2004"/>
				</front>
				<seriesInfo name="Proceedings of the MOBICOM Conference" value=""/>
			</reference>
			<reference anchor="OLSR.org" target="http://www.olsr.org/">
				<front>
					<title>The olsr.org OLSR routing daemon</title>
					<author/>
					<date year="2013"/>
				</front>
			</reference>
			<reference anchor="FREIFUNK" target="http://www.freifunk.net">
				<front>
					<title>Freifunk Wireless Community Networks</title>
					<author/>
					<date year="2013"/>
				</front>
			</reference>
			<reference anchor="FUNKFEUER" target="http://www.funkfeuer.at">
				<front>
					<title>Austria Wireless Community Network</title>
					<author/>
					<date year="2013"/>
				</front>
			</reference>
		</references>
		<section anchor="olsrorg_history" title="OLSR.org metric history">
			<t>The Funkfeuer <xref target="FUNKFEUER"/> and Freifunk networks <xref target="FREIFUNK"/> are OLSR-based <xref target="RFC3626"/> or B.A.T.M.A.N. based wireless community networks with hundreds of routers in permanent operation. The Vienna Funkfeuer network in Austria, for instance, consists of 400 routers (around 600 routes) covering the whole city of Vienna and beyond, spanning roughly 40km in diameter. It has been in operation since 2003 and supplies its users with Internet access. A particularity of the Vienna Funkfeuer network is that it manages to provide Internet access through a city wide, large scale Wi-Fi mesh network, with just a single Internet uplink.</t>
			<t>Operational experience of the OLSR project <xref target="OLSR.org"/> with these networks have revealed that the use of hop-count as routing metric leads to unsatisfactory network performance. Experiments with the ETX metric <xref target="MOBICOM03"/> were therefore undertaken in parallel in the Berlin Freifunk network as well as in the Vienna Funkfeuer network in 2004, and found satisfactory, i.e., sufficiently easy to implement and providing sufficiently good performance. This metric has now been in operational use in these networks for several years. </t>
			<t>The ETX metric of a link is the estimated number of transmissions required to successfully send a packet (each packet equal to or smaller than MTU) over that link, until a link-layer acknowledgement is received. The ETX metric is additive, i.e., the ETX metric of a path is the sum of the ETX metrics for each link on this path.</t>
			<t>While the ETX metric delivers a reasonable performance, it doesn't handle well networks with heterogeneous links that have different bitrates. Since every wireless link, when using ETX metric, is characterized only by its packet loss ratio, the ETX metric prefers long-ranged links with low bitrate (with low loss ratios) over short-ranged links with high bitrate (with higher but reasonable loss ratios). Such conditions, when they occur, can degrade the performance of a network considerably by not taking advantage of higher capacity links.</t>
			<t>Because of this the OLSR.org project has implemented the Directional Airtime Metric for OLSRv2, which has been inspired  by the Estimated Travel Time (ETT) metric <xref target="MOBICOM04"/>. This metric uses an unidirectional packet loss, but also takes the bitrate into account to create a more accurate description of the relative costs or capabilities of mesh links.</t>
		</section>
	</back>
</rfc>
