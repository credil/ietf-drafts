<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY rfc3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">

<!ENTITY rfc3263 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3263.xml"> <!-- Locating SIP Servers -->

<!ENTITY rfc3265 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3265.xml"> <!-- SIP Event Framework -->

<!ENTITY rfc3840 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3840.xml"> <!-- Indicating UA Capabilities in SIP -->

<!ENTITY rfc4353 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4353.xml"> <!-- A Framework for Conferencing -->

<!ENTITY rfc4575 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4575.xml"> <!-- Conference Event Package -->

<!ENTITY rfc5567 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5567.xml"> <!-- An Architectural Framework for Media Server Control -->

<!ENTITY rfc5369 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5369.xml"> <!-- Framework for Transcoding with SIP -->

<!ENTITY rfcSDP SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml">

<!ENTITY RAVEN SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2804.xml">

<!ENTITY rfc6341 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6341.xml"> <!-- SIPREC Requriements -->

<!ENTITY draft-ietf-siprec-metadata SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-siprec-metadata-06.xml">

<!ENTITY draft-ietf-siprec-protocol SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-siprec-protocol-04.xml">

]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc sortrefs="no" ?>
<?rfc colonspace='yes' ?>
<?rfc tocindent='yes' ?>
<rfc category="info" docName="draft-ietf-siprec-architecture-06" ipr="trust200902" obsoletes="" updates="">

<front>
  <title abbrev="Architecture for Media Recording">An Architecture for Media Recording using the Session Initiation Protocol</title>
  <author fullname="Andrew Hutton" initials="A" surname="Hutton" role="editor">
    <organization>Siemens Enterprise Communications</organization>
    <address>
	  <postal>
		<street>Hofmannstrasse 51</street>
		<city>Munich D-81379</city>
		<country>Germany</country>
	  </postal> 	  
      <email>andrew.hutton@siemens-enterprise.com</email>
    </address>
  </author>
  <author fullname="Leon Portman" initials="L" surname="Portman" role="editor">
    <organization>NICE Systems</organization>
    <address>
	<postal>
		<street>8 Hapnina</street>
		<city>Ra'anana  43017</city>
		<country>Israel</country>
	</postal>
	<email>leon.portman@nice.com</email>
    </address>
  </author>
  <author fullname="Rajnish Jain" initials="R" surname="Jain">
    <organization>IPC Systems</organization>
    <address>
	<postal>
		<street>777 Commerce Drive</street>
		<city>Fairfield, CT  06825</city>
		<country>USA</country>
	</postal>
	<email>rajnish.jain@ipc.com</email>
    </address>
  </author>  
  <author fullname="Ken Rehor" initials="K" surname="Rehor">
    <organization>Cisco Systems, Inc.</organization>
    <address>
	<postal>
		<street>170 West Tasman Drive</street>
		<city>San Jose, CA  95134-1706</city>
		<country>USA</country>
	</postal>
	<email>krehor@cisco.com</email>
    </address>
  </author>  
    
  <date year="2012"></date>
  <area>RAI</area>
  <workgroup>SIPREC</workgroup>
  <keyword>I-D</keyword>
  <keyword>Internet-Draft</keyword>
  <keyword>SIP</keyword>
  <abstract>
    <t>Session recording is a critical requirement in many communications environments such as call centers and financial trading.  In some of these environments, all calls must be recorded for regulatory, compliance, and consumer protection reasons.  Recording of a session is typically performed by sending a copy of a media stream to a recording device. This document describes architectures for deploying session recording solutions in an environment which is based on the Session Initiation Protocol (SIP). 
    </t>
  </abstract>
</front>
<middle>
 
<section title="Introduction">
	<t>Session recording is a critical requirement in many communications environments such as call centers and financial trading.  In some of these environments, all calls must be recorded for regulatory, compliance, and consumer protection reasons.  Recording of a session is typically performed by sending a copy of a media stream to a recording device. This document describes architectures for deploying session recording solutions in an environment which is based on the Session Initiation Protocol (SIP) the requirements for which are described in <xref target="RFC6341" />. 
	</t>
	<t>This document focuses on how sessions are established between a Session Recording Client (SRC) and the Session Recording Server (SRS) for the purpose of conveying the Replicated Media and Recording Metadata (e.g. Identity of parties involved) relating to the Communication Session.
	</t>
	<t>Once the Replicated Media and Recording Metadata have been received by the Session Recording Server they will typically be archived for retrieval at a later time. The procedures relating to the archiving and retrieval of this information is outside the scope of this document.
	</t>
	<t>This document only considers active recording, where the Session Recording Client purposefully streams media to a Session Recording Server.  Passive recording, where a recording device detects media directly from the network (E.g. using port mirroring techniques), is outside the scope of this document.  In addition, lawful intercept is outside the scope of this document which takes account of the IETF policy on wiretapping <xref target="RFC2804"></xref>.
	</t>
	<t>The Recording Session that is established between the Session Recording Client and the Session Recording Server uses the normal procedures for establishing INVITE initiated dialogs as specified in <xref target="RFC3261"></xref> and uses SDP for describing the media to be used during the session as specified in <xref target="RFC4566"></xref>. However it is intended that some extensions to SIP (E.g. Headers, Option Tags, Etc.) will be defined to support the requirements for media recording. The Replicated Media is required to be sent in real-time to the Session Recording Server and is not buffered by the Session Recording Client to allow for real-time analysis of the media by the Session Recording Server.
		<vspace blankLines='100' />
	</t>
</section>

<section title="Definitions">  
	<t>Session Recording Server (SRS): A Session Recording Server (SRS) is a SIP User Agent (UA) that is a specialized media server or collector that acts as the sink of the recorded media. An SRS is typically implemented as a multi-port device that is capable of receiving media from multiple sources simultaneously. An SRS is the sink of the recorded session metadata.  
	</t>
	<t>Session Recording Client (SRC): A Session Recording Client (SRC) is a SIP User Agent (UA) that acts as the source of the recorded media, sending it to the SRS.  An SRC is a logical	function.  Its capabilities may be implemented across one or more physical devices.  In practice, an SRC could be a personal device	(such as a SIP phone), a SIP Media Gateway (MG), a Session Border Controller (SBC) or a SIP Media Server (MS) integrated with an Application Server (AS). This specification defines the term SRC such	that all such SIP entities can be generically addressed under one definition.  The SRC provides metadata to the SRS.
	</t>
	<t>Communication Session (CS): A session created between two or more SIP User Agents (UAs) that is the subject of recording.
	</t>
	<t>Recording Session (RS): The SIP session created between an SRC and SRS for the purpose of recording a Communication Session.
	</t>
	<t>Recording aware User Agent (UA): A SIP User Agent that is aware of SIP extensions associated with the Communication Session. Such extensions may be used to notify the Recording aware UA that a session is being recorded, or by a Recording aware UA to express preferences as to whether a recording should be started, paused, resumed or stopped.
	</t>
	<t>Recording unaware User Agent (UA): A SIP User Agent that is unaware of SIP extensions associated with the Communication Session. Such Recording unaware UA will be notified that a session is being recorded or express preferences as to whether a recording should be started, paused, resumed or stopped via some other means that is out of scope of SIPREC.
	</t>
	<t>Recording Metadata: The metadata describing the communication session that is required by the Session Recording Server. This will include for example the identity of users that participate in the Communication Session and dialog state. Typically this metadata is archived with the replicated media at the Session Recording Server. The recording metadata is delivered in real-time to the Session Recording Server.
	</t>
	<t>Replicated Media: A copy of the media associated with the Communication Session created by the Session Recording Client and sent to the Session Recording Server. It may contain all the media associated with the communication session (E.g. Audio and Video) or just a subset (E.g. Audio). Replicated Media is part of Recording Session.
	</t>  
</section> 
  
  
<section title="Session Recording Architecture">

  <section title="Location of the Session Recording Client">
    <t>This section contains some example session recording architectures showing how the Session Recording Client is a logical function that can be located in or split between various physical components.  
    </t>
 
	<section title="B2BUA acts as a Session Recording Client">
	   
	   <t>A SIP Back to Back User Agent (B2BUA) which has access to the media that is to be recorded may act as a Session Recording Client. The B2BUA may already be aware that a session needs to be recorded before the initial establishment of the communication session or the decision to record the session may occur after the session has been established.</t>
	   <t>If the B2BUA/SRC makes the decision to initiate the Recording Session (RS) then it will initiate the establishment of a SIP Session by sending an INVITE to the Session Recording Server.
	   </t>
	   <t>If the Session Recording Server makes the decision to initiate the recording session then it will initiate the establishment of a SIP Session by sending an INVITE to the B2BUA/Session Recording Client.
	   </t>
	   <t>The RS INVITE contains information which identifies the session as being established for the purposes of recording and prevents the session from being accidentally rerouted to a UA which is not a SRS.
	   </t>
	   <t>The B2BUA/SRC is responsible for notifying the UAs involved in the communication session that the session is being recorded.
	   </t>
	   <t>The B2BUA/SRC is responsible for complying with requests from recording aware UAs or through some configured policies indicating that the communication session should not be recorded.
	   </t>

	   
   <figure><artwork><![CDATA[

                                           +-----------+
                       (Recording Session) |  Session  |
                          +------SIP------>| Recording |
                          |                |  Server   |
                          |  +--RTP/RTCP-->|  (SRS)    |
                          |  |             +-----------+
                          V  V                   ^
                     +-------------+             |
                     |             |             |
                     |             |-- MetaData -+
                     |             |
                     |    B2BUA    |
                     |             |
                     |   Session   |
  +--------+         |  Recording  |         +---------+
  |        |<- SIP ->|   Client    |<- SIP ->|         |
  |  UA-A  |         |   (SRC)     |         |  UA-B   |
  |        |<- RTP/->|             |<- RTP/->|         |
  +--------+   RTCP  |             |   RTCP  +---------+
                     +-------------+
  |____________________________________________________|
                 (Communication Session)

       Figure 1: B2BUA Acts as the Session Recording Client.
   
    ]]></artwork></figure>

<t><vspace blankLines='100' /></t> <!-- Page Break -->         
    </section>
    
   
   	<section title="Endpoint acts as Session Recording Client">
   
   	<t>A SIP Endpoint / UA may act as a Session Recording Client in which case the endpoint sends the Replicated Media to the Session Recording Server
   	</t>
   	<t>If the endpoint makes the decision to initiate the Recording Session then it will initiate the establishment of a SIP Session by sending an INVITE to the Session Recording Server.
   	</t>
   	<t>If the Session Recording Server makes the decision to initiate the Recording Session then it will initiate the establishment of a SIP Session by sending an INVITE to the endpoint. The actual decision mechanism is out of scope of SIPREC. 
   	</t>
 

   	     
    <figure><artwork><![CDATA[ 
   

       (Recording Session) +-----------+
      +----------SIP------>|           |
      |  +----RTP/RTCP---->|  Session  |
      |  |                 | Recording |
      |  |                 |  Server   |
      |  | +-- Metadata -->|   (SRS)   |
      |  | |               |           |
      |  | |               +-----------+
      |  | |
      |  | |
      |  | |
      |  | |
      V  V |  (Communication Session)
   +--+------+                     +---------+
   |         |<-------SIP--------->|         |
   |  UA-A   |                     |  UA-B   |
   |  (SRC)  |<-----RTP/RTCP------>|         |
   +---------+                     +---------+


   Figure 2: SIP Endpoint acts as the Session Recording Client


    ]]></artwork></figure>

    </section>
    
	<section title="A SIP Proxy cannot be a Session Recording Client">
	    <t>A SIP Proxy is unable to act as an SRC because it does not have access to the media and therefore has no way of enabling the delivery of the replicated media to the SRS</t>
	</section>    	
	    
   
    
 	<section title="Interaction with MEDIACTRL">
	    <t>The mediactrl architecture <xref target="RFC5567"></xref> describes an architecure in which an Application Server (AS) controls a Media Server (MS) which may be used for purposes such as conferencing and recording media streams. In the <xref target="RFC5567"></xref> architecure the AS typically uses SIP Third Party Call Control (3PCC) to instruct the SIP UAs to direct their media to the Media Server. 
	    </t>
		<t>The Session Recording Client and Session Recording Server described in this document may act as an application server as described in <xref target="RFC5567"></xref>; and therefore, when further decomposed, may be made up of an application server which uses a mediactrl interface to control a media server for the purpose of recording the media streams. However, this interface is considered outside the scope of this document.
		</t>
	      
<figure><artwork><![CDATA[ 

                                  Session Recording Server (SRS)
                           +----------------------------------------+
                           |                                        |
       (Recording Session) |  +-----------+          +------------+ |
       +------------SIP----|->|           |          |            | |
       |                   |  | MediaCtrl |MEDIACTRL |   Media    | |
       |                   |  |Application|<-------->|   Server   | |
       |    +-----Metadata--->|  Server   |          |  (Recorder)| |
       |    |              |  |           |          |            | |
       |    |              |  +-----------+          +------------+ |
       |    |              |                              ^         |
       |    |              +------------------------------|---------+
       |    |  +--------------- RTP/RTCP -----------------+
       |    |  |
       V    |  V
     +---+------+                          +---------+
     |          |<-------SIP-------------->|         |
     |   UA-A   | (Communication Session)  |  UA-B   |
     |   (SRC)  |<-------RTP/RTCP--------->|         |
     +----------+                          +---------+

        Figure 3: Example of Session Recording Server using MEDIACTRL

 	]]></artwork></figure>

 <figure><artwork><![CDATA[ 
                                     
                                                 +----------+
              (Recording Session)                | Session  |
        +-----------SIP------------------------->|Recording |
        |                                        |  Server  |
        |                                        |   (SRS)  |
        |  UA-A Session Recording Client (SRC)   +----------+
 +----------------------------------------+         ^
 |                                        |         |
 |  +-----------+          +------------+ |         |
 |  |           | Control  |            |<-RTP/RTCP-+    +---------+
 |  |    UA     | Protocol |   Media    | |              |         |
 |  |Application|<-------->|  Server    | |<----SIP----->|  UA-B   |
 |  |  Server   |          |            |<-----RTP------>|         |
 |  |           |          |            | |              +---------+
 |  +-----------+          +------------+ |
 |                                        |
 +----------------------------------------+
        Figure 4: Example of Session Recording Client decomposition

 	]]></artwork></figure>
	</section> 
	
	<section title="Interaction with Conference Focus">
	    <t>In the case of a centralised conference a combination of the conference focus and mixer <xref target="RFC4353"></xref> may act as a SRC and therefore provide the SRS with the replicated media and associated recording metadata. In this arrangement the SRC is able to provide media and metadata relating to each of the participants, including, for example, any side conversations where the media passes through the mixer.
	    </t>
		<t>Conference Focus can either provide mixed replicated media or separate streams per conference participant (as depicted in the Figure 5).
		</t>
	    <t>The conference focus may also act as a Recording Aware UA in the case when one of the participants acts as a SRC. 
	    </t>
	    <t>In an alternative arrangement a SIP endpoint which is a conference participant can act as an SRC. The SRC will in this case have access to the media and metadata relating to that particular participant and may be able to obtain additional metadata from the conference focus. The SRC may for example use the conference event package as described in <xref target="RFC4575"></xref> to obtain information about other participants which it provides to the SRS within the recording metadata.
	    </t>
		<t>The SRC may be involved in the conference from the very beginning or may join at some later point of time.
		</t> <!-- Deepanshu asked for this -->
		<!-- PARTHA/RAM ASKED Sec 4.1.5 Figure shall be added to indicate a scenarion whererin focus acts as SRC. -->
<figure><artwork><![CDATA[ 

                             User 1
                         +-----------+
                         |           |
                         |           |
                         |Participant|
                         |     1     |
                         |           |
                         +-----------+
                             ^ ^SIP
                         RTP | |Dialog
                             | |1
    User 2                   V V       Recording
 +-----------+           +-----------+  Session     *************
 |           |           |           |<------------>*           *
 |           |<-- RTP -->|           |<-RTP/RTCP 1->*           *
 |Participant|<--------->| Focus/SRC |<-RTP/RTCP 2->*    SRS    *
 |     2     |  SIP      |           |<-RTP/RTCP 3->*           *
 |           |  Dialog   |           |              *           *
 +-----------+  2        +-----------+              *************
                              ^ ^
                              | |SIP
                          RTP | |Dialog
                              | |3
                              V V
                         +-----------+
                         |           |
                         |           |
                         |Participant|
                         |    3      |
                         |           |
                         +-----------+
                            User 3

        Figure 5: Conference Focus acting as an SRC.

 	]]></artwork></figure>
 	
	</section>    	
	
	   
</section>
      
<section title="Establishing the Recording Session">

	<t>The Session Recording Client or the Session Recording Server may initiate the Recording Session. </t>
	
	<t>It should be noted that the Recording Session is independent from the Communication Session that is being recorded at both the SIP dialog level and at the session level. 
	
	<!-- For example if media encryption is used for the Communication Session the Session Recording Client must decrypt any media received on the Communication Session and, if required, re-encrypt the media using a separate SRTP key for the Recording Session before sending the media to the Session Recording Server -->
	</t>
	
	<t>Concerning media negotiation, regular SIP/SDP capabilities should be used, and existing transcoding capabilities and media encryption should not be precluded.
	</t>
	
	<section title="Session Recording Client Initiated Recording">
	  
	  <t>When the Session Recording Client initiates the Recording Session  for the purpose of conveying media to the Session Recording Server it performs the following actions.
	  </t>
      <t><list style="symbols">
      		<t>The SRC is provisioned with a Unified Resource Identifier (URI) for the SRS, which is resolved through normal <xref target="RFC3263"></xref> procedures.</t>
            <t>Initiates the dialog by sending an INVITE request to the Session Recording Server. The dialog is established according to the normal procedures for establishing an INVITE initiated dialog as specified in <xref target="RFC3261"></xref>.</t>
      		<t>Include in the INVITE an indication that the session is established for the purpose of recording the associated media.</t>
      		<t>If the Replicated Media is to be started immediately then the Session Recording Client will include an SDP attribute of "a=sendonly" for each media line or "a=inactive" if it is not ready to transmit the media.</t>
      		<t>The Recording Session may replicate all media associated with the Communication Session or only a subset.</t>
      		<t>Replicate the media streams that are to be recorded and transmit the media to the Session Recording Server.</t>
       </list></t>

    
	
	</section>

	<section title="Session Recording Server Initiated Recording">
    	<t>When the Session Recording Server initiates the media recording session with the Session Recording Client it performs the following actions.</t>
	
      <t><list style="symbols">
			<t>The SRS is provisioned with a Unified Resource Identifier (URI) for the SRC, which is resolved through normal <xref target="RFC3263"></xref> procedures.</t>
    	    <t>Send an INVITE request to the Session Recording Client</t>
      	   	<t>Include in the INVITE an indication that the session is established for the purpose of recording the associated media. Possible mechanisms for this include using the Require header or a media feature tag as defined in <xref target="RFC3840"></xref>.</t>
      		<t>Identify the sessions that is to be recorded. The actual mechanism of the identification depends on SRC policy.</t>
      		<t>If the Recording Session is to be started immediately then the Session Recording Client will include an SDP attribute of "a=recvonly" for each media line or "a=inactive" if it is not ready to receive the media </t>
      </list></t>
	  <t>If the Session Recording Server does not have prior knowledge of what media streams are available to be recorded it can make use of an offerless INVITE which allows the Session Recording Client to make the initial Session Description Protocol (SDP) offer.</t>
      	     
	</section>

	<section title="Pause/Resume Recording Session">
    	<t>The Session Recording Server or the Session Recording Client may pause the recording by changing the SDP direction attribute to "inactive" and resume the recording by changing the direction back to "recvonly" or "sendonly".</t>
	</section>
	
	<section title="Media Stream Mixing">
		<t>In a basic session involving only audio there are typically two audio/RTP streams between the two UAs involved transporting media in each direction. When recording this media the two streams may be mixed at the SRC before being transmitted to the SRS or it may be a requirement of the recording server that the media streams are not mixed and are sent to the SRS as two separate streams. The case when media is mixed at the SRC is simple as only a single media stream is required to be sent to the SRS. However in the case when the media streams are not mixed then the SDP offer sent to the SRS must describe two separate media streams. 
		</t>
				
	</section>

	<section title="Media Transcoding">
		<t>The communication session (CS) and the recording session (RS) are negotiated separately using a standard SDP offer/answer exchange which may result in the SRC having to perform media transcoding between the two sessions. If the SRC is not capable of performing  media transcoding it may limit the media formats in the offer to the SRS depending on what media is negotiated on the CS or may limit what it includes in the offer on the CS if it has prior knowledge of the media formats supported by the SRS. However typically the SRS will be a more capable device which can provide a wide range of media format options to the SRC and may also be able to make use of a media transcoder as detailed in <xref target="RFC5369"></xref>.
		</t>
				
	</section>		

</section>

<section title="Recording Metadata">

	<section title="Contents of recording metadata">
	
	<!-- Text Removed and replaced with reference to metadata draft following IETF80 -->
	
	<t>The metadata model is defined in  <xref target="I-D.ietf-siprec-metadata" />.</t>

	</section>

	<section title="Mechanisms for delivery of metadata to Session Recording Server">
	
		<!-- Text Removed and replaced with reference to protocol draft following IETF80 -->
	
	<t>The SRS obtains session recording metadata from the SRC. The metadata is transported via SIP based mechanisms as specified in <xref target="I-D.ietf-siprec-protocol" /> </t>

	<t>It is also possible that metadata is transported via non SIP based mechanisms but these are considered out of scope.</t>
	<t>It is also possible to have RS session without the metadata, in such case SRS will be receiving it by some other means or not at all.</t>
 
	</section>

</section>

<section title="Notifications to the Recorded User Agents">
 
	<t>Typically a user that is involved in a session that is to be recorded is notified by an announcement at the beginning of the session or may receive some warning tones within the media. However the standardization of media recording protocols when using SIP enable an indication that the call is being recorded to be included in the SIP requests and responses associated with that communication session.
	</t>
	<t>It is the Session Recording Client that provides the notification to all SIP UAs for which it is replicating received media for the purpose of recording including the local user if the Session Recording Client is a SIP endpoint.
	</t>
	
</section>

<section title="Preventing the recording of a SIP session">
	<t>A Recording Aware UA may during the initial session establishment or during an established session provide an indication of their preference with regard to recording the media in the communication session. The mechanism for this are specified in <xref target="I-D.ietf-siprec-protocol" /> 
	</t>

</section>
        
</section>


 
<section title="IANA considerations">
    <t>This draft mentions SIP/SDP extensions. The associated IANA considerations are addressed in <xref target="I-D.ietf-siprec-protocol" /> that defines them.</t>
</section>

<section title="Security considerations" anchor="section-security">
    <t>The Recording Session is fundamentally a standard SIP dialog and media session and therefore makes use of existing SIP security mechanisms for securing the Recording Session and Recording Metadata. 
    </t>
    <t>The intended use of this architecture is only for the case where the users are aware that they are being recorded, and the architecture provides the means for the Session Recording Client to notify users that they are being recorded. 
    </t>
    <t>This architectural solution is not intended to support lawful intercept which in contrast requires that users are not informed.
    </t>
    <t>It is the responsibility of the Session Recording Server to protect the Replicated Media and Recording Metadata once it has been received and archived. The mechanism for protecting the storage and retrieval from the SRS is out of scope of this work.
    </t>
    <t>Protection of the RS should be not weaker than protection of the CS, and may need to be stronger because the media is retransmitted (allowing more possibility for interception). This applies to both the signaling and media paths. 
    </t> 
    <t>It is essential that the SRC will authenticate the SRS because the client must be certain that it is recording on the right recording system. It is less important that the SRS authenticate the SRC, but implementations must have the ability to perform mutual authentication.
    </t>
    <t>In some environments, it is desirable to not decrypt and re-encrypt the media. This means the same key is used on the CS and RS. This only works when the media is encrypted, not the transport. When the media must be decrypted on the CS, and is re-encrypted on the RS, a new key must be used.
    </t>
    <t>The retrieval mechanism for media recorded by this protocol is out of scope. Implementations of retrieval mechanisms should consider the security implications carefully as the retriever is not usually a party to the call that was recorded.  Retrievers should be authenticated carefully. The crypto suites on the retrieval should be no less strong than used on the RS, and may need to be stronger.
    </t>
</section>

<section title="Acknowledgements">
      <t>Thanks to John Elwell, Brian Rosen, Alan Johnson, Cullen Jennings, Hadriel Kaplan, Henry Lum,  
      Paul Kyzivat, Parthasarathi R, Ram Mohan R, Charles Eckel and Friso Feenstra
      for their significant contributions and assistance with this document and Working Group, 
      and to all the members of SIPREC WG mailing list for 
      providing valuable input to this work.</t>
</section>


</middle>



<back>
  <references title="Informative References">
    &rfc3261;
    &rfc3263;
    &rfcSDP;
    &rfc6341;
    &draft-ietf-siprec-metadata;
    &draft-ietf-siprec-protocol;
    &rfc3265;
    &rfc3840;
    &rfc4353;
    &rfc4575;
    &rfc5567;
    &rfc5369;
    &RAVEN;
   </references>
</back>

</rfc>
