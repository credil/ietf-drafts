<?xml version="1.0"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<!DOCTYPE rfc SYSTEM "rfc&rfc.number;.dtd">

<!-- 12 novembre 2012 -->

<rfc category="exp" ipr="trust200902" docName="draft-kaiser-nd-pd-01">

	<front>

		<title abbrev="ND-PD">Prefix Delegation extension to Neighbor Discovery protocol</title>

		<author initials="A.K." surname="Kaiser" fullname="Arnaud Kaiser">
			<organization abbrev="CEA">Commissariat à l'Energie Atomique</organization>
			<address>
				<postal>
					<street>8 Avenue de la Vauve</street>
					<city>Palaiseau</city>
					<region>Ile-de-France</region>
					<code>91120</code>
					<country>FR</country>
				</postal>
<!--				<phone>+33 1 69 08 07 28</phone> -->
				<email>arnaud.kaiser@cea.fr</email>
<!--				<uri>http://www.google.com/</uri> -->
			</address>
		</author>

		<author initials="S.D." surname="Decremps" fullname="Sylvain Decremps">
			<organization abbrev="CEA">Commissariat à l'Energie Atomique</organization>
			<address>
				<postal>
					<street>8 Avenue de la Vauve</street>
					<city>Palaiseau</city>
					<region>Ile-de-France</region>
					<code>91120</code>
					<country>FR</country>
				</postal>
<!--				<phone>+33 1 69 07 99 95</phone> -->
				<email>sylvain.decremps@cea.fr</email>
<!--				<uri>http://www.google.com/</uri> -->
			</address>
		</author>

		<author initials="N.O." surname="Oualha" fullname="Nouha Oualha">
			<organization abbrev="CEA">Commissariat à l'Energie Atomique</organization>
			<address>
				<postal>
					<street>8 Avenue de la Vauve</street>
					<city>Palaiseau</city>
					<region>Ile-de-France</region>
					<code>91120</code>
					<country>FR</country>
				</postal>
<!--				<phone>+33 1 69 07 99 95</phone> -->
				<email>nouha.oualha@cea.fr</email>
<!--				<uri>http://www.google.com/</uri> -->
			</address>
		</author>

			<author initials="A.P." surname="Petrescu" fullname="Alexandru Petrescu">
			<organization abbrev="CEA">Commissariat à l'Energie Atomique</organization>
			<address>
				<postal>
					<street>8 Avenue de la Vauve</street>
					<city>Palaiseau</city>
					<region>Ile-de-France</region>
					<code>91120</code>
					<country>FR</country>
				</postal>
<!--				<phone>+33 1 69 08 92 23</phone> -->
				<email>alexandru.petrescu@cea.fr</email>
<!--				<uri>http://www.google.com/</uri> -->
			</address>
		</author>

		<date day="25" month="February" year="2013"/>

		<keyword>IPv6</keyword>
		<keyword>Neighbor Discovery</keyword>
		<keyword>Prefix Delegation</keyword>

		<abstract>
			<t>This document describes an extension to the Neighbor Discovery protocol (ND). The proposed extension enhances ND by providing it with a new option: the Prefix Delegation option (ND-PD). ND-PD offers the possibility for routers on a same link to ask for or delegate IPv6 prefixes.</t>
		</abstract>

	</front>

	<middle>
		<section title="Introduction and motivations">
			<t>This document describes a new option that extends ND with a PD mechanism. Using this mechanism, a requesting router can ask for a global IPv6 prefix to a delegating router that is present on the same link.</t>
			<t>The proposed ND-PD mechanism reaches the same objectives as the DHCPv6-PD mechanism described in <xref target="DHCPV6_PD"/>, but in a faster and less ressources consuming way. The proposed ND-PD has been initially thought and designed for highly mobile networks such as vehicular networks, where opportunities for communicating may be quite short. Therefore, the less signaling messages are required to auto-configure mobile nodes, the more time can be exploited by applications during these short communication windows. Moreover, the default availability of the ND protocol in any IPv6 stack makes it a strong candidate to handle the PD service rather than implementing an additionnal software, especially in hardware and ressources constrained devices like sensors or on-board devices.</t>
<!--			<t>The objective of the ND-PD mechanism described in this document is the same as the DHCPv6 Prefix Delegation mechanism (DHCPv6-PD) described in <xref target="DHCPV6_PD"/>. Therefore, the ND-PD mechanism can be seen as a substitute of the DHCPv6-PD mechanism that can be used on links lacking in DHCPv6 Servers (or Relays). Indeed, there exists a various number of situations where the DHCPv6 services may not be enabled on a link. In the context of vehicular networks for instance, a vehicle (called Leaf Vehicle (LV)) may access the Internet through another vehicle (called Internet Vehicle (IV)) that shares its Internet connexion. In order to provide Internet access to the nodes present in the LV, the latter needs a global IPv6 prefix. If the IV does not provide DHCPv6 services, the LV will not be able to get a global IPv6 prefix. In this kind of situations, the LV can still ask for a prefix using the ND-PD mechanism. Indeed, as the ND protocol is present on each IPv6 capable node (which is not the case for DHCPv6), providing ND with a PD extension ensures that any IPv6 router is able to request for a prefix in any situation. Moreover, as the proposed ND-PD mechanism relies only on the exchange of two messages (compared with DHCPv6-PD that needs the exchange of 4 messages), it can be more suitable in the case of highly mobile networks (e.g. vehicular networks).</t> -->
		</section>

		<section title="Terminology">
			<t>This document uses the terminology defined in <xref target="DHCPV6_PD"/>, <xref target="NEIGHDISC"/>, and <xref target="SLAAC"/>. Also the following additionnal terms are used:
				<list style="hanging" hangIndent="20">
					<t hangText="Requesting router:">A router that is asking for prefixes to be delegated.</t>
					<t hangText="Delegating router:">A router that provides prefixes to requesting routers.</t>
					<t hangText="Prefix Information:">A logical structure that stores all informations related to a specific prefix.</t>
					<t hangText="DPDB:">The Delegated Prefixes DataBase (DPDB) is a logical structure that stores all prefixes that have been delegated from a specific delegating router along with other informations related to this delegating router. One DPDB MUST be created on both the requesting and the delegating routers sides for each requesting/delegating routers tuple (see <xref target="dp_handling"/> for more details).</t>
				</list>
			</t>
		</section>

		<section title="Requirements">
			<t>The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in this document, are to be interpreted as described in <xref target="KEYWORDS"/>.</t>
		</section>

		<section title="Related works">
			<t>A few drafts about providing a PD mechanism to the ND protocol have already been proposed in the past.</t>
			<t>In <xref target="DRAFT_LUTCHANSKY"/> the author proposes to add a PD option to the Router Solicitation (RS) and Router Advertisement (RA) messages generated by routers. A router that needs a global prefix can ask for one by including a PD option in a RS message. Then, a router that owns prefixes for delegation replies to the request with a RA that includes a PD option. The main advantage of this proposal is that it is very simple and does not require any additionnal message to work. However it lacks of completeness: the handling as well as the renewing and releasing of the delegated prefixes are not taken into consideration.</t>
			<t>In <xref target="DRAFT_HABERMAN"/> a more complete PD mechanism for ND protocol is proposed. The mechanism is based on two new ICMP messages: the Prefix Request and the Prefix Delegation. The former is used by a requesting router to ask for a prefix. Conversely, the latter is used by a delegating router to reply to the request. The proposal also includes the possibility for a requesting router to renew a delegated prefix that has not expired yet and to return a delegated prefix that is no longer required.</t>
			<t>The proposed ND-PD mechanism that is described in this document is close to the one described in <xref target="DRAFT_HABERMAN"/>. However, our mechanism relies on the creation of new RS/RA options rather than the creation of new ICMP messages. Also, the ND-PD service provided by a router is advertised using the RA flags option <xref target="RAFLAGS"/>. This information enable requesting routers to be aware of the presence of routers that provide the ND-PD service on link without firstly asking for it.</t>
		</section>

<!--		<section title="Protocol overview">
			<t>The ND-PD mechanism presented in this document defines a new option for the RS and the RA messages. Using this option, routers on a same link can request and/or delegate prefixes to other routers.</t>
			<t>The Prefix Delegation option proposed in this document adds the following functionnalities to the Neighbor Discovery protocol:
				<list style="symbols">
					<t>Request of prefixes</t>
					<t>Delegation of prefixes</t>
					<t>Renew of previously delegated prefixes</t>
					<t>Release of delegated prefixes</t>
				</list>
				These functionnalities are described in more details in <xref target="op"/>.</t>
		</section>
-->

		<section title="Use case example: V2V2I">
<!--			<section title="The V2V2I use case">-->
				<t><xref target="V2V2I"/> shows a vehicular scenario. Two vehicles are depicted: a Leaf Vehicle (LV) and an Internet Vehicle (IV). Both of them embed a various number of Local Fixed Nodes (LFN) (like, for instance, sensors) and a Mobile Router (MR) that acts as a gateway between the network inside the vehicle and the outdoor. The main difference between the LV and the IV is the number of interfaces that are embedded on their MR and, consequently, their (in)ability to connect to an infrastructure network. In this figure, the MR-IV has two egress interfaces: one connected to the infrastructure (E2) using a long range communication technology (e.g. 3G or LTE) and the other one connected to the LV (E1) in an ad-hoc manner using a short range communication technology (e.g. 802.11p).</t>
				<t> The objective in the V2V2I use case is to provide an IPv6 end-to-end connectivity to the LFN that are embedded in the LV. To this end, a global and topologically correct IPv6 pefix must be advertised by the MR-LV on its I1 interface. The MR-LV gets the required prefix by asking for one to the MR-IV using the ND-PD mechanism. It is assumed that the MR-IV is provided with IPv6 prefixes by the infrastructure, either using DHCPv6-PD or any other way.</t>
				<t>Details about the messages exchanges generated by ND-PD in the V2V2I use case can be found in <xref target="msg_diag"/>, with the MR-LV being the requesting router and MR-IV being the delegating router.</t>
				<!--Let us assume that a DHCPv6 server exists in the infrastructure. Therefore, using DHCPv6-PD the MR-IV can obtain a global prefix to announce on its ingress interface (I1) to configure its LFNs. In order to enable the LFNs of the LV to access the Internet, the LV also needs a global prefix to assign on its ingress interface I1. If the IV has a pool of prefixes to assign, it will delegate a prefix to the LV. Otherwise, the IV can ask the DHCPv6 Server in the infrastructure for an additionnal prefix that it will delegate to the LV.-->
					<figure anchor="V2V2I" title="The V2V2I use case">
					<artwork>
                                              +-----------------+
                                              | INTERNET ACCESS |
                                              |     VIA THE     |
                                              | INFRASTRUCTURE  |
                                              |     NETWORK     |
                                              +--------+--------+
                                                       |
                                                       |
                                                    E2 |
+-------------------------+               +-------------------------+
|                         |               |            |            |
|                         |               |            |            |
|      +-----------+      | E1         E1 |      +-----------+      |
|      |   MR-LV   |------|---------------|------|   MR-IV   |      |
|      +-----------+      |               |      +-----------+      |
|         I1 |            |               |         I1 |            |
|            |            |               |            |            |
|    --------+--------    |               |    --------+--------    |
|    |     |         |    |               |    |     |         |    |
|  LFN-1 LFN-2 ... LFN-x  |               |  LFN-1 LFN-2 ... LFN-x  |
|                         |               |                         |
+-------------------------+               +-------------------------+

       Leaf Vehicle                            Internet Vehicle
					</artwork>
					</figure>
		<!--	</section> -->
		</section>

		<section title="Format of the Prefix Delegation option" anchor="pd_msg_types">
			<t>This section details the format of the option used in the ND-PD mechanism. This option is only valid if included in RS or RA messages and MUST NOT be included in NS, NA, or Redirect messages.</t>
			<t>The Prefix Delegation option is used to manage everything related to the delegation of prefixes. The following operations are considered:
				<list style="hanging" hangIndent="9">
					<t hangText="REQ:">Request operation. A requesting router asks for a prefix to a delegating router.</t>
<!--					<t hangText="REP:">Reply operation. A delegating router replies to a requesting router. Depending on the type of request, a reply message acts as a delegating message that contains the delegated prefix (i.e. in response of a REQ, REN, or REB message) or as an acknoledgment message that contains the prefix that has been successfully released (i.e. in response of a REL message).</t> -->
					<t hangText="REN:">Renew operation. A requesting router asks the delegating router that provided it the prefix to extend its lifetime.</t>
					 <!-- <t hangText="REB:">Rebind operation. A requesting router asks any delegating router present on the link to extend the lifetime of its delegated prefix.</t> -->
					<t hangText="REL:">Release operation. A requesting router that does not use anymore a delegated prefix informs the delegating router that provided it the prefix its intention of releasing it.</t>
					<t hangText="REP:">Reply operation. A delegating router replies to a message sent by a requesting router.</t>
					<t hangText="SYN:">Synchronization operation. When an error is detected, the delegating router sends its DPDB to the requesting router in order to re-synchronize their DPDB.</t>
				</list>
			</t>
			<t>The Prefix Delegation option is composed of a Prefix Delegation header that is followed by a list of Prefix Information (PI). The format of the Prefix Delegation header is as follows:
				<figure>
					<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |    Length     |  Transac. ID  |   Op. Type    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  N. P. Total  | N. P. cncrnd. |           Reserved            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.                          List of PI                           .
.                              ...                              .
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
					</artwork>
				</figure>
				<list style="hanging" hangIndent="17">
					<t hangText="Type:">Value that describes the Prefix Delegation option (TBD: IANA).</t>
					<t hangText="Length:">Size of the option in blocks of 64 bits (according to <xref target="NEIGHDISC"/>) including the fields "Type" and "Length".</t>
					<t hangText="Transac. ID:">Identifier of the current messages exchange between the requesting router and the delegating router.</t>
					<t hangText="Op. Type:">Describes the type of the operation (REQ, REN, REL, REP or SYN).</t>
					<t hangText="N. P. Total:">The total number of prefixes that have been already delegated by the delegating router to the requesting router (used for synchronization).</t>
					<t hangText="N. P. cncrnd.:">The number of prefixes that are concerned by the operation.</t>
					<t hangText="Reserved:">Unused field. MUST be set to "0" by sender and ignored by recipient.</t>
					<t hangText="List of PI:">A list of Prefix Informations.</t>
				</list>
			</t>

			<section title="Format of the Prefix Information">
				<t>A Prefix Information is a structure that holds all informations related to a prefix. The format of the Prefix Information is as follow:
					<figure>
						<artwork>
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Prefix length |                   Reserved                    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           Reserved                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      Preferred Lifetime                       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        Valid Lifetime                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
|                            Prefix                             |
|                                                               |
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
						</artwork>
					</figure>
					<list style="hanging" hangIndent="24">
						<t hangText="Prefix length:">The length of the prefix.</t>
						<t hangText="Reserved:">Unused field. MUST be set to "0" by sender and ignored by recipient.</t>
						<t hangText="Preferred Lifetime:">Time length in seconds (relative to the time the packet is sent) during which addresses generated from this prefix remain preferred (see <xref target="SLAAC"/>). A value of all one bits represents infinity.</t>
						<t hangText="Valid Lifetime:">Time length in seconds (relative to the time the packet is sent) during which the prefix is valid and can be used by nodes for auto-configuration (see <xref target="SLAAC"/>). A value of all one bits represents infinity.</t>
						<t hangText="Prefix:">The IPv6 delegated prefix. All bits in the prefix positionned after the prefix length MUST be set to "0".</t>
					</list>
				</t>
			</section>
		</section>


		<section title="Operations details" anchor="op">
			<section title="Requesting and delegating prefixes" anchor="req">
			<section title="Request">
				<t>A requesting router requests prefixes from a delegating router with the REQ operation. REQ operations are only valid if included in a RS message. This RS message MUST be sent in unicast to a delegating router present on link (see <xref target="nd_pd_srvc_adv"/> for delegating routers discovery). The fields of the PD option for a REQ operation MUST be filled in with the following values:
					<list style="hanging" hangIndent="15">
						<t hangText="Transac. ID:">An ID of the current messages exchange between the requesting router and the delegating router. This ID is chosen by the requesting router and MUST be unique among all other current transactions that the requesting router may have started.</t>
						<t hangText="Op. Type:">"REQ". It is a request for prefixes.</t>
						<t hangText="N. P. Total:">The total number of prefixes that have already been delegated by the delegating router to the requesting router. This value MUST be set to "0" when requesting prefixes to the delegating router for the first time, even if some prefixes have already been delegated by other delegating routers.</t>
						<t hangText="N. P. cncrnd.:">The number of prefixes that are requested by the requesting router.</t>
						<t hangText="Reserved:">Unused field. MUST be set to "0" by sender and ignored by recipient.</t>
						<t hangText="List of PI:">The list of PI is not necessary with a REQ operation. However, if the requesting router has some preferences about the parameters of the requested prefixes (e.g. the prefix length) it MAY add a PI for each requested prefix that describes its preferences. For example, if a requesting router requests three prefixes and has a preference for one of the three to have a prefix length of /48, it SHOULD add one PI with the "Prefix Length" field filled in with the value "48".</t>
					</list>
				</t>
			</section>
			<section title="Reply">
			<t>A delegating router replies to a REQ operation with a REP operation. REP operations are only valid if included in a RA message. This RA message MUST be sent in unicast to the requesting router that initiated the message exchange. The fields of the PD option for a REP operation in reply to a REQ operation MUST be filled in with the following values:
				<list style="hanging" hangIndent="15">
					<t hangText="Transac. ID:">This ID MUST be the same as the one received with the REQ.</t>
					<t hangText="Op. Type:">"REP". It is a reply.</t>
					<t hangText="N. P. Total:">The total number of prefixes that have been delegated by the delegating router to the requesting router. This value MUST include the prefixes that are delegated via this message. For example, if a requesting router has already recceived a prefix from the delegating router and asks for another one, the value of this field MUST be "2" (the previously delegated plus the new one).</t>
					<t hangText="N. P. cncrnd.:">The number of prefixes that are delegated via this message. It may be possible that this value is lower than the one received in the REQ (e.g. if the requesting router requested 3 prefixes but only 2 can be delegated). If no prefix can be delegated, this field MUST be set to "0".</t>
					<t hangText="Reserved:">Unused field. MUST be set to "0" by sender and ignored by recipient.</t>
					<t hangText="List of PI:">For each delegated prefix a PI that describes it MUST be added in the list. If no prefixes are delegated, no PI MUST be added.</t>
				</list>
			</t>
			</section>
			</section>

			<section title="Renewing prefixes">
			<section title="Request">
				<t>A requesting router renews its delegated prefixes with the REN operation. REN operations are only valid if included in a RS message. This RS message MUST be sent in unicast to the delegating router that delegated the concerned prefixes. The fields of the PD option for a REN operation MUST be filled in with the following values:
					<list style="hanging" hangIndent="15">
						<t hangText="Transac. ID:">An ID of the current messages exchange between the requesting router and the delegating router. This ID is chosen by the requesting router and MUST be unique among all other current transactions that the requesting router may have started.</t>
						<t hangText="Op. Type:">"REN". It is a renew of prefixes.</t>
						<t hangText="N. P. Total:">The total number of prefixes that have been delegated by the delegating router to the requesting router.</t>
						<t hangText="N. P. cncrnd.:">The number of prefixes that are requested to be renewed. This value MUST be the same as the "N. P. Total" value because the renew operation acts for all the delegated prefixes.</t>
						<t hangText="Reserved:">Unused field. MUST be set to "0" by sender and ignored by recipient.</t>
						<t hangText="List of PI:">As the REN operation acts for all the delegated prefixes, no list of PI is necessary.</t>
					</list>
				</t>
			</section>
			<section title="Reply">
				<t>A delegating router replies to a REN operation with a REP operation. REP operations are only valid if included in a RA message. This RA message MUST be sent in unicast to the requesting router that initiated the message exchange. The fields of the PD option for a REP operation in reply to a REN operation MUST be filled in with the following values:
				<list style="hanging" hangIndent="15">
					<t hangText="Transac. ID:">This ID MUST be the same as the one received with the REN.</t>
					<t hangText="Op. Type:">"REP". It is a reply.</t>
					<t hangText="N. P. Total:">The total number of prefixes that have been delegated by the delegating router to the requesting router.</t>
					<t hangText="N. P. cncrnd.:">The number of prefixes that are successfully renewed via this message. It MAY be possible that this value is lower than the one received in the REN (e.g. if the requesting router requested to renew 3 prefixes but only 2 can be renewed). If no prefix can be renewed, this field MUST be set to "0".</t>
					<t hangText="Reserved:">Unused field. MUST be set to "0" by sender and ignored by recipient.</t>
					<t hangText="List of PI:">The following cases are possible:
					<list style="numbers" hangIndent="3">
						<t>If no prefix is renewed, the list of PI MUST be empty.</t>
						<t>If only part of the prefixes are renewed, a PI MUST be added for each successfully renewed prefix.</t>
						<t>If all the prefixes are renewed, the list of PI is not necessary, except if the parameters of one or more of the renewed prefixes have changed compared with the last delegation/renew time. As an example, let us consider that the delegating router has delegated two prefixes to the requesting router with preferred and valid lifetimes equal to "10" and "15" respectively. The requesting router now asks for renewing these prefixes. If both prefixes are renewed for the same amount of time (same preferred and valid lifetimes than previously), no PI SHOULD be added. But, if the prefixes are renewed for a different amount of time (e.g. preferred and valid lifetimes equal to "8" and "12" respectively), a PI MUST be added for each renewed prefix.</t>
						</list>
					</t>
				</list>
			</t>
			</section>
			</section>

			<section title="Releasing prefixes">
			<section title="Request">
				<t>A requesting router releases its delegated prefixes with the REL operation. REL operations are only valid if included in a RS message. This RS message MUST be sent in unicast to the delegating router that delegated the concerned prefixes. The fields of the PD option for a REL operation MUST be filled in with the following values:
					<list style="hanging" hangIndent="15">
						<t hangText="Transac. ID:">An ID of the current messages exchange between the requesting router and the delegating router. This ID is chosen by the requesting router and MUST be unique among all other current transactions that the requesting router may have started.</t>
						<t hangText="Op. Type:">"REL". It is a release of prefixes.</t>
						<t hangText="N. P. Total:">The total number of prefixes that have been delegated by the delegating router to the requesting router. This value MUST include the prefixes that are included in this message as the release operation has not been successfully processed yet.</t>
						<t hangText="N. P. cncrnd.:">The number of prefixes that are requested to be released.</t>
						<t hangText="Reserved:">Unused field. MUST be set to "0" by sender and ignored by recipient.</t>
						<t hangText="List of PI:">If the REL operation concerns all the prefixes that have been delegated by the delegating router, the list of PI is not needed. If the REL operation concerns only part of the delegated prefixes, a PI MUST be added for each concerned prefix.</t>
					</list>
				</t>
			</section>
			<section title="Reply">
				<t>A delegating router does not reply to a REL operation.</t>
			</section>
			</section>

			<section title="Prefixes synchronization and error detection">
				<t>The SYN operation is sent by a delegating router to a requesting router when an error about the DPDB is detected. SYN operations are only valid in a RA message. This RA message MUST be sent in unicast to the requesting router that initiated the message exchange.</t>
				<t>The goal of the SYN operation is to re-synchronize the DPDB of the requesting and the delegating router. Each time a delegating router receives a RS message with a PD option, it first starts by checking if the total number of delegated prefixes that the requesting router has in its DPDB (advertised in the "N. P. Total" field) is the same as the one the delegating router has in its DPDB. If both values are the same, the process of the PD option can be continued. Otherwise, an error occurred and both DPDB MUST be re-synchronized (thus the operation requested by the requesting router is NOT processed). The rule is simple: the delegating router sends its DPDB back to the requesting router via a RA message that includes the PD option with the SYN operation. Upon reception of the message, the requesting router updates its DPDB to fit the one advertised by the delegating router. The requesting router MAY then re-send its initial request.</t>
				<t>The fields of the PD option for a SYN operation MUST be filled in with the following values:
					<list style="hanging" hangIndent="15">
						<t hangText="Transac. ID:">This ID MUST be the same as the one received in the PD option of the RS message sent by the requesting router.</t>
						<t hangText="Op. Type:">"SYN". It is a synchronization operation.</t>
						<t hangText="N. P. Total:">The total number of prefixes that have been delegated by the delegating router to the requesting router.</t>
						<t hangText="N. P. cncrnd.:">The number of prefixes that are concerned by this operation. This value MUST be the same as the one above.</t>
						<t hangText="Reserved:">Unused field. MUST be set to "0" by sender and ignored by recipient.</t>
						<t hangText="List of PI:">The list of all the PI MUST be added.</t>
					</list>
				</t>			
			</section>

		</section>

		<section title="Local operations on requesting and delegating routers">
			<t>Upon reception of a RS or a RA message, requesting and delegating routers MUST first check the validity of the message as described in section 6.1. "Message Validation" of <xref target="NEIGHDISC"/>. The processing of the message itself along with any option other than the PD option described in this document is out of the scope of this document.</t>
			<section title="Delegated prefixes handling" anchor="dp_handling">
			<t>The delegated prefixes on both the requesting and the delegating routers are handled using the DPDB. The DPDB is a logical structure that stores all informations related to a requesting/delegating routers tuple. One and only one DPDB MUST be created for each requesting/delegating routers tuple. The DPDB includes but is not restricted to the following informations:
				<list style="symbols">
					<t>The link-local IPv6 address of the requesting router.</t>
					<t>The link-local IPv6 address of the delegating router.</t>
					<t>The Transaction ID used in the last RS or RA message received that includes a PD option.</t>
					<t>The Transaction ID used in the last RS or RA message sent that includes a PD option.</t>
					<t>The total number of prefixes that have been delegated.</t>
					<t>The shortest preferred and valid lifetimes among the delegated prefixes (for an easier handling of the renew operation).</t>
					<t>The list of all the prefixes that have been delegated (list of PI).</t>
				</list>
			</t>
			</section>
			<section title="Delegating router behaviour">
			<section title="Checking the validity of the PD option">
				<t>Upon reception of a RS message that includes a PD option, the delegating router MUST first check that the type of operation of the PD option is either REQ or REN or REL and that the PD flag (see <xref target="nd_pd_srvc_adv"/>) is not set. If one or both of these conditions are not met the message MUST be silently discarded.</t>
			</section>
			<section title="Checking the synchronization of the DPDB">
				<t>Before processing the operation, the DPDB synchronization MUST be checked. To this end, the delegating router compares the value of the "N. P. Total" field of the PD option with the total number of delegated prefixes of its DPDB. If both values are the same, the operation can be processed. Otherwise, the delegating router MUST send back to the requesting router a SYN operation in order to re-synchronize both DPDB.</t>
			</section>
			<section title="Processing the operations">
				<t>If the PD option includes a REQ operation, the delegating router checks its possibility to delegate the requested prefixes to the requesting router. For each successfully delegated prefix the delegating router MUST add in its routing table one entry with the following parameters: the destination network is the delegated prefix and the next-hop is the IPv6 address of the requesting router. The delegating router MUST then reply with a RA message that includes a PD option with the REP operation filled accordingly. While the delegated prefixes are not released (either with a REL operation or when their valid lifetime has expired) they MUST NOT be delegated again.</t>
				<t>If the PD option includes a REN operation, the delegating router checks its possibility to renew all the prefixes present in the DPDB. For each successfully renewed prefix, the delegating router MUST update the corresponding entry in its routing table. The delegating router MUST then reply with a RA message that includes a PD option with the REP operation filled accordingly.</t>
				<t>If the PD option includes a REL operation, the delegating router MUST release the corresponding prefixes. For each successfully released prefix, the delegating router MUST delete the corresponding entry in its routing table.</t>
				<t>If the delegating router detects that one or more of the prefixes specified by the requesting router in the REN or REL operations are not valid, the delegating router MUST NOT process the operation and MUST send back to the requesting router a SYN operation to re-synchronize the DPDB.</t>
				<t>When the Valid Lifetime of a delegated prefix has expired, the delegating router MUST update its routing table by removing the corresponding entry. The expired prefix is then available for future delegation.</t>
			</section>
			</section>
			<section title="Requesting router behaviour">
			<section title="Checking the validity of the PD option">
				<t>Upon reception of a RA message that includes a PD option, the requesting router MUST first check that the type of operation of the PD option is either REP or SYN and that the PD flag is set (see <xref target="nd_pd_srvc_adv"/>). If one or both of these conditions are not met the message MUST be silently discarded.</t>
			</section>
			<section title="Checking the synchronization of the messages exchange">
				<t>In order to ensure that the received RA message is a reply to the initiated request, the requesting router MUST check that the "Transac. ID" of the received message fits the one it generated for its last request.</t>
			</section>
			<section title="Processing the operations">
				<t>If the PD option includes a REP operation, the requesting router is free of advertising the prefixes included in the REP message on any of its interfaces except the one from which the REP message was received. For each prefix that is advertised on an interface, the requesting router MUST add an entry in its routing table with the following parameters: the destination network is the advertised prefix and the output interface is the one where the prefix is advertised.</t>
				<t>If the PD option includes a SYN operation, the requesting router MUST update its DPDB with the inputs included in the RA message along with its routing table entries. The requesting router MAY then re-send its initial request.</t>
				<t>When the Valid Lifetime of a delegated prefix has expired, the requesting router MUST update its routing table by removing the corresponding entry. Also the requesting router MUST stop advertising this prefix on the corresponding interface.</t>
			</section>
			</section>
		</section>
<!--
		<section title="Status codes" anchor="status">
			<t>Status codes are present in the Prefix Collection headers. They are used to give additionnal information to a requesting router about the result of its request. Therefore, all Prefix Collections included in a REP message MUST include a Status code related to their current status. On the contrary, the Status code has no utility when sending requesting messages (REQ, REN, REB and REL messages). Thus, the Status code of a Prefix Collection MUST be set to FULL_SUCCESS (default value) by the requesting router and ignored by the recipient. The following Status codes are supported:
				<list style="hanging" hangIndent="18">
					<t hangText="FULL_SUCCESS">Indicates that the request has been successfully processed: the requested operation (REQ, REN, REB or REL) has been successfull on all prefixes listed in the Prefix Collection.</t>
					<t hangText="PARTIAL_SUCCESS">Informs that only part of the request has been successfully processed: the requested operation has been successfull only on part of the prefixes listed in the requested Prefix Collection. Thus, the replied Prefix Collection includes only the successfull prefixes.</t>
					<t hangText="NO_PREF_AVAIL">Informs that no prefixes are available for delegation.</t>
				</list>
			</t>
		</section>
-->

		<section title="Advertising the ND-PD service" anchor="nd_pd_srvc_adv">
			<t>Each delegating router that delegates prefixes using the ND-PD mechanism described in this document MUST advertise this service by adding the new PD flag (for Prefix Delegation) in each RA message it sends. The PD flag MUST be advertised using the RA flags option described in <xref target="RAFLAGS"/>.</t>
		</section>

		<section title="Messages exchange diagram" anchor="msg_diag">
			<t>This section depicts the messages exchanges generated by ND-PD between a requesting router and a delegating router. Values under "N. P. Total" represent the current total number of delegated prefixes that each router has in its DPDB. All messages shown in this example include a PD option (except the periodic RA message). For each of those messages, the type of operation as well as the corresponding PI that are carried out by the PD option are pointed out.</t>
				<figure>
					<artwork>
         +--------+                  +--------+
         |  Req.  |                  |  Del.  |
         | Router |                  | Router |
         +--------+                  +--------+
             |                           |
N. P. Total  |                           |  N. P. Total
     0       |                           |       0
             | periodic RA - flag PD set |
             |&lt;--------------------------|
             |                           |
             .                           .
             .                           .
             .                           .
             |                           |
             |         RS - REQ          |
             |-------------------------->|
     0       |                           |       0
             |     RA - REP(P1,P2)       |
             |&lt;--------------------------|
     2       |                           |       2
             |                           |
					</artwork>
				</figure>
				<t>The delegating router sends periodic RA messages with the PD flag set. Upon reception of such message, the requesting router knows that the delegating router provides the ND-PD service. At some point, the requesting router asks for two prefixes. The delegating router accepts the request and delegates prefixes P1 and P2. Both DPDB are updated: the total number of delegated prefix for this tuple of requesting/delegating routers is set to 2.</t>
				<figure>
					<artwork>
             |                           |
             |         RS - REQ          |
             |-------------------------->|
     2       |                           |       2
             |       RA - REP(P3)        |
             |     X---------------------|
     2       |                           |       3
             |                           |
					</artwork>
				</figure>
				<t>Let us consider that the delegating router now needs one more prefix. It asks for a new prefix to the delegating router. The delegating router accepts the request and replies with the new delegated prefix P3. However, for some reasons, this message never arrives to the requesting router. Only the DPDB of the delegating router is updated: the delegating router has delegated three prefixes to the requesting router but this latter owns only two of them.</t>
				<figure>
					<artwork>
             |                           |
             |         RS - REN          |
             |-------------------------->|
     2       |                           |       3
             |    RA - SYN(P1,P2,P3)     |
             |&lt;--------------------------|
     3       |                           |       3
             |                           |
					</artwork>
				</figure>
				<t>Let us assume that the Preferred Lifetime of P1 and P2 is now over. However, the requesting router would like to keep both prefixes active for more time. Hence, it asks the delegating router to renew its delegated prefixes. Upon checking the synchronization of the DPDB, the delegating router detects that the total number of delegated prefixes is not the same. Therefore, the delegating router replies with a SYN operation in order to re-synchronize both DPDB.</t>
				<figure>
					<artwork>
             |                           |
             |         RS - REN          |
             |-------------------------->|
     3       |                           |       3
             |      RA - REP(P1,P3)      |
             |&lt;--------------------------|
     2       |                           |       2
             |                           |
					</artwork>
				</figure>
				<t>Now that both DPDB are re-synchronized, the requesting router asks once again for renewing its delegated prefixes. For some reasons, the delegating router accepts the renew only for P1 and P3 and replies consequently. Both DPDB are updated.</t>
				<figure>
					<artwork>
             |                           |
             |       RS - REL(P3)        |
             |-------------------------->|
     1       |                           |       1
             |                           |
					</artwork>
				</figure>
				<t>Finally, the requesting router does not need anymore P3. It thus releases it and both DPDB are updated.</t>
		</section>
		<section title="Security Considerations">
		  <t>This section describes the security issues related to prefix delegation using ND_PD.</t>
      <t>The ND_PD mechanism is prone to attacks that may target either the requesting router or the delegating router, particularly by launching denial-of-service (DoS) attacks as discussed in <xref target="DHCPV6_PD"/>. If the requesting router is malicious, it may repeatedly request prefixes to a delegating router until the exhaustion of all the available prefixes. This attack could be launched with the same requesting router identity or with different spoofed link addresses. On the other side, a malicious delegating router may issue bogus prefixes to the requesting router which may cause DoS due to unreachability. Furthermore, the delegated prefixes could be eavesdropped, suppressed or altered during their transmission to the requesting router, whereby external attackers aim at using spoofed IP addresses or launching DoS attacks in the network.</t>
		</section>

		<section title="IANA Considerations">
			<t>IANA is kindly requested by the authors to allocate the following values:
				<list style="symbols">
					<t>Prefix Delegation option type, which should be added to the Neighbor Discovery option type space defined in section 13 of <xref target="NEIGHDISC"/></t>
					<t>Prefix Delegation operation types:
						<list style="symbols">
							<t>REQ</t>
							<t>REN</t>
							<t>REL</t>
							<t>REP</t>
							<t>SYN</t>
						</list>
					</t>
<!--
					<t>Status Codes:
						<list style="symbols">
							<t>FULL_SUCCESS</t>
							<t>PARTIAL_SUCCESS</t>
							<t>NO_PREF_AVAIL</t>
						</list>
					</t>
-->
					<t>Space allocation for the PD flag in the RA flags option.</t>
				</list>
			</t>
		</section>

		<section anchor="Acknowledgements"
			 title="Acknowledgements">
      <t>
	The authors would like to acknowledge the useful technical
	contribution of Sofiane Imadali.
      </t>
      <t>
	This work has been performed in the framework of the ICT
	project ICT-5-258512 EXALTED, which is partly funded by the
	European Union.  The organisations on the source list [CEA]
	would like to acknowledge the contributions of their
	colleagues to the project, although the views expressed in
	this contribution are those of the authors and do not
	necessarily represent the project.
      </t>
    </section>

	</middle>

	<back>
		<references>

			<reference anchor="KEYWORDS">
				<front>
					<title>Key words for use in RFCs to indicate Requirement Levels</title>
					<author initials="S." surname="Bradner"/>
					<date month="March" year="1997"/>
				</front>
				<seriesInfo name="BCP" value="14"/>
				<seriesInfo name="RFC" value="2119"/>
			</reference>

<!--
			<reference anchor="IPV6">
				<front>
					<title>Internet Protocol, Version 6 (IPv6) Specification</title>
					<author initials="S." surname="Deering"/>
					<author initials="R." surname="Hinden"/>
					<date month="December" year="1998"/>
				</front>
				<seriesInfo name="RFC" value="2460"/>
			</reference>
-->

<!--
			<reference anchor="DHCPV6">
				<front>
					<title>Dynamic Host Configuration Protocol for IPv6 (DHCPv6)</title>
					<author initials="R." surname="Droms"/>
					<author initials="J." surname="Bound"/>
					<author initials="B." surname="Volz"/>
					<author initials="T." surname="Lemon"/>
					<author initials="C." surname="Perkins"/>
					<author initials="M." surname="Carney"/>
					<date month="July" year="2003"/>
				</front>
				<seriesInfo name="RFC" value="3315"/>
			</reference>
-->

			<reference anchor="DHCPV6_PD">
				<front>
					<title>IPv6 Prefix Options for Dynamic Host Configuration Protocol (DHCPv6) version 6</title>
					<author initials="O." surname="Troan"/>
					<author initials="R." surname="Droms"/>
					<date month="December" year="2003"/>
				</front>
				<seriesInfo name="RFC" value="3633"/>
			</reference>

			<reference anchor="NEIGHDISC">
				<front>
					<title>Neighbor Discovery for IP version 6 (IPv6)</title>
					<author initials="T." surname="Narten"/>
					<author initials="E." surname="Nordmark"/>
					<author initials="W." surname="Simpson"/>
					<author initials="H." surname="Soliman"/>
					<date month="September" year="2007"/>
				</front>
				<seriesInfo name="RFC" value="4861"/>
			</reference>

			<reference anchor="SLAAC">
				<front>
					<title>IPv6 Stateless Address Autoconfiguration</title>
					<author initials="S." surname="Thomson"/>
					<author initials="T." surname="Narten"/>
					<author initials="T." surname="Jinmei"/>
					<date month="September" year="2007"/>
				</front>
				<seriesInfo name="RFC" value="4862"/>
			</reference>

			<reference anchor="DRAFT_LUTCHANSKY">
				<front>
					<title>IPv6 Router Advertisement Prefix Delegation Option</title>
					<author initials="N." surname="Lutchansky"/>
					<date month="February" year="2002"/>
				</front>
				<seriesInfo name="draft-lutchann-ipv6-delegate-option-00.txt" value=""/>
			</reference>

			<reference anchor="DRAFT_HABERMAN">
				<front>
					<title>Automatic Prefix Delegation Protocol for Internet Protocol Version 6 (IPv6)</title>
					<author initials="B." surname="Haberman"/>
					<author initials="J." surname="Martin"/>
					<date month="February" year="2002"/>
				</front>
				<seriesInfo name="draft-haberman-ipngwg-auto-prefix-02.txt" value=""/>
			</reference>

			<reference anchor="RAFLAGS">
				<front>
					<title>IPv6 Router Advertisement Flags Option</title>
					<author initials="B." surname="Haberman"/>
					<author initials="R." surname="Hinden"/>
					<date month="March" year="2008"/>
				</front>
				<seriesInfo name="RFC" value="4861"/>
			</reference>

<!--			<reference anchor="IANAWEB">
				<front>
					<title>http://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xml#icmpv6-parameters-11</title>
				</front>
			</reference>

			<reference anchor="MIPV6">
				<front>
					<title>Mobility Support in IPv6</title>
					<author initials="C." surname="Perkins"/>
					<author initials="D." surname="Johnson"/>
					<author initials="J." surname="Arkko"/>
					<date month="June" year="2004"/>
				</front>
				<seriesInfo name="RFC" value="6275"/>
			</reference>

			<reference anchor="DRPREF">
				<front>
					<title>Default Router Preferences and More-Specific Routes</title>
					<author initials="R." surname="Draves"/>
					<author initials="D." surname="Thaler"/>
					<date month="November" year="2005"/>
				</front>
				<seriesInfo name="RFC" value="4191"/>
			</reference>

			<reference anchor="NDPROXY">
				<front>
					<title>Neighbor Discovery Proxies (ND Proxy)</title>
					<author initials="D." surname="Thaler"/>
					<author initials="M." surname="Talwar"/>
					<author initials="C." surname="Patel"/>
					<date month="April" year="2006"/>
				</front>
				<seriesInfo name="RFC" value="4389"/>
			</reference>
-->
		</references>

<!--
		<section title="Appendixes">
			<t>IF ANY</t>
		</section>
-->

	</back>

</rfc>
