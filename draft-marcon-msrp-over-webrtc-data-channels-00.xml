<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
	 which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
	 There has to be one entity for each item to be referenced.
	 An alternate method (rfc include) is described in the references. -->

<!ENTITY DATAREQ SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-rtcweb-data-channel.xml">
<!ENTITY DATAPROTO SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-jesup-rtcweb-data-protocol-04.xml">
<!ENTITY JSEP SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-rtcweb-jsep-02.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3264 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3264.xml">
<!ENTITY RFC3758 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3758.xml">
<!ENTITY RFC4960 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4960.xml">

<!ENTITY RFC4566 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4566.xml">
<!ENTITY RFC4975 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4975.xml">
<!ENTITY RFC4976 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4976.xml">
<!ENTITY RFC5547 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5547.xml">
<!ENTITY RFC6135 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6135.xml">
<!ENTITY RFC6714 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6714.xml">


]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
	 please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
	 (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
	 (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-marcon-msrp-over-webrtc-data-channels-00" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
	 ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
		or pre5378Trust200902
	 you can add the attributes updates="NNNN" and obsoletes="NNNN"
	 they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

	<front>
		<!-- The abbreviated title is used in the page header - it is only necessary if the
			 full title is longer than 39 characters -->

		<title abbrev="MSRP over WebRTC data channels">MSRP over WebRTC data channels</title>

		<!-- add 'role="editor"' below for the editors if appropriate -->

		<!-- Another author who claims to be an editor -->

		<author fullname="Jerome Marcon" initials="J.M." surname="Marcon">
			<organization>Alcatel-Lucent</organization>
			<address>
				<postal>
					<street>Route de Villejust</street>
	
					<!-- Reorder these if your country does things differently -->
	
					<code>91620</code>
	
					<city>Nozay</city>
	
					<country>France</country>
				</postal>
	
				<email>jerome.marcon@alcatel-lucent.com</email>
	
				<!-- uri and facsimile elements may also be added -->
			</address>
		</author>
	<author fullname="Richard Ejzak" initials="R.P." surname="Ejzak">
		<organization>Alcatel-Lucent</organization>

		<address>
			<postal>
			<street>1960 Lucent Lane</street>
	
			<!-- Reorder these if your country does things differently -->
	
			<city>Naperville</city>
	
			<region>Illinois</region>
	
			<code>60563-1594</code>
	
			<country>US</country>
			</postal>
	
			<phone>+1 630 979 7036</phone>
	
			<email>richard.ejzak@alcatel-lucent.com</email>
	
			<!-- uri and facsimile elements may also be added -->
		</address>
	</author>

		<date year="2013" />

		<!-- If the month and year are both specified and are the current ones, xml2rfc will fill
			 in the current day for you. If only the current year is specified, xml2rfc will fill
		 in the current day and month for you. If the year is not the current one, it is
		 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
		 purpose of calculating the expiry date).  With drafts it is normally sufficient to
		 specify just the year. -->

		<!-- Meta-data Declarations -->

		<area>RAI</area>

		<workgroup>MMUSIC</workgroup>

		<!-- WG name at the upperleft corner of the doc,
			 IETF is fine for individual submissions.
		 If this element is not present, the default is "Network Working Group",
			 which is used by the RFC Editor as a nod to the history of the IETF. -->


		<!-- Keywords will be incorporated into HTML output
			 files in a meta tag but they have no effect on text or nroff
			 output. If you submit your draft to the RFC Editor, the
			 keywords will be used for the search engine. -->

		<abstract>
	<t>The Real-Time Communication in WEB-browsers (RTCWeb) working group is charged to provide protocols to support direct interactive rich communication using audio, video, and data between two peers' web-browsers.  For the support of data communication, the RTCWeb working group has in particular defined the concept of bi-directional data channels over SCTP, where each data channel might be used to transport other protocols, called sub-protocols. This document specifies how the Message Session Relay Protocol (MSRP) can be instantiated as a WebRTC data channel sub-protocol, using the SDP offer/exchange to negotiate out-of-band the sub-protocol specific parameters. Two network configurations are documented: a WebRTC end-to-end configuration (connecting two MSRP over data channel endpoints), and a gateway configuration (connecting an MSRP over data channel endpoint with an MSRP over TCP endpoint).</t>
		</abstract>
	</front>

	<middle>
	<section title="Introduction">

		<t>The Message Session Relay Protocol (MSRP) <xref target="RFC4975"></xref> is currently defined to work over TCP connections.</t>
		
		<t>The RTCWeb working group has defined the concept of bi-directional data channels running on top of SCTP/DTLS. Each data channel consists of paired SCTP streams sharing the same SCTP Stream Identifier. Data channels are created by endpoint applications through the WebRTC API, and can be used to transport proprietary or well-defined protocols, which in the latter case can be signaled by the data channel "sub-protocol" parameter, conceptually similar to the WebSocket "sub-protocol". However, apart from the "sub-protocol" value transmitted to the peer, RTCWeb leaves open how endpoint applications can agree on how to instantiate a given sub-protocol on a data channel, whether it be in-band or out-of-band (or both). As an example, the SDP offer generated by the browser includes no channel-specific information.</t>
	
		<t>MSRP is a protocol for transmitting a series of related instant messages in the context of a session. In addition to instant messaging, MSRP can also be used for image sharing or file transfer.</t>
		
		<t>Defining the MSRP as a data channel sub-protocol has many benefits:
			<list style='symbols'>
				<t>provide to WebRTC applications a proven protocol enabling instant messaging, file transfer, image sharing</t>
				<t>integrate those features with other RTCWeb voice and video features</t>
				<t>leverage the SDP-based negotiation already defined for MSRP</t>
				<t>allows the interworking with MSRP endpoints running on a TCP connection</t>
			</list>
		</t>
		<t>This document defines the use MSRP of over WebRTC data channels, where one MSRP endpoint is an MSRP WebRTC application and the other endpoint is either an MSRP WebRTC application or an MSRP TCP application.</t>
		
	</section>
	

	<section title="Conventions">
		<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref>.</t>
	</section>

	<section title="Terminology">
		<t>This document uses the following terms:
			<list style='hanging'>
				<t>Data channel: A bidirectional channel consisting of paired SCTP outbound and inbound streams.</t>
				<t>In-band: transmission through the peer-to-peer SCTP association.</t>
				<t>Out-of-band: transmission through the WebRTC signaling path, using <xref target="I-D.ietf-rtcweb-jsep">JSEP</xref> and the SDP Offer/Answer model <xref target="RFC3264"></xref>.</t>
				<t>MSRP data channel: A data channel specifically used to transport the messages of one MSRP session.</t>
				<t>Peer: From the perspective of one of the agents in a session, its peer is the other agent. Specifically, from the perspective of the SDP offerer, the peer is the SDP answerer. From the perspective of the SDP answerer, the peer is the SDP offerer.</t>
			</list>
		</t>
	</section>

	<section title="WebRTC Data Channels" anchor="defch">
		
		<t>This section summarizes how WebRTC data channels work in general.</t>
					
		<t>A WebRTC application creates a data channel via the WebRTC Data Channel API, by providing a number of setup parameters (sub-protocol, label, reliability, order of delivery, priority).</t>

		<t>The browser then opens in-band the data channel using the DATA CHANNEL OPEN message defined in [draft-jesup-rtcweb-data-protocol]. This message carries some of the channel-specific parameters passed by the application (sub-protocol, label, reliability, order of delivery).</t>

		<t>In case an SCTP association is already established, the browser transmits immediately the DATA CHANNEL OPEN message to the peer, on an unused SCTP stream.</t>

		<t>In case no SCTP association is established, the browser triggers for an SDP offer/answer exchange, and sends the DATA CHANNEL OPEN message(s) once the SCTP association is established (i.e. subsequently to the reception of the answer).</t>

		<t>The SDP offer generated by the browser is as per [draft-ietf-mmusic-sctp-sdp]. In brief, it contains one m-line for the SCTP association on top of which data channels will run, and one attribute per protocol assigned to the SCTP ports:</t>

		<figure align="left" title="">
			<artwork align="left"><![CDATA[
m=application 54111 DTLS/SCTP 5000 5001 5002
c=IN IP4 79.97.215.79
a=sctpmap:5000 webrtc-datachannel 16
a=sctpmap:5001 bfcp 2
a=sctpmap:5002 t38 1
			]]></artwork>			
		</figure>

		<t>Note: A WebRTC browser will only create an sctpmap attribute for the webrtc-datachannel protocol, and will not create sctpmap attributes for other protocols such as bfcp or t38.  This example shows the hypothetical power of the syntax to support multiplexing of SCTP associations for different protocols on the same DTLS connection.</t>

		<t>Note: this SDP syntax does not contain any channel-specific information.</t>
	
	</section>
					
	<section title="End-to-end configuration">
		
		<t>This section describes the network configuration where each MSRP endpoint is a WebRTC endpoint, running MSRP over an SCTP/DTLS connection.</t>

		<section title="Support for SDP-based sub-protocol negotiation" anchor="sup_sdp">

			<t>In the default procedures described in <xref target="defch"/>, the channel-specific parameters are notified in-band to the peer, rather than negotiated with the peer. Also, no mechanism is defined to transmit subprotocol-specific parameters to the peer.</t>

			<t>This section defines a means to negotiate channel-specific and subprotocol-specific parameters, using the out-of-band SDP offer/exchange.</t>

			<section title="SDP syntax">

				<t>The SDP only contains the declaration of data channels for which an SDP-based negotiation is required, and that are either being created or already opened.</t>

					<section title="Channel-specific setup parameters">

						<t>For each of these data channels, the SDP lists one attribute line providing the Stream Identifier, sub-protocol, label, reliability, order of delivery, priority.</t> 
						
						<figure align="left" title="">
							<artwork align="left"><![CDATA[
a=webrtc-DataChannel:5000 stream=2;label="channel 2"; \
  subprotocol="file transfer";max_retr=3
							]]></artwork>			
						</figure>

						<t>NOTE: the related SDP syntax has to be imported from version 3 of [draft-ietf-mmusic-sctp-sdp].</t>

						<t>This line MUST be replicated without changes in the SDP answer, if the answerer accepts the offered data channel.</t>

						<t>This line MUST be replicated without changes in any subsequent offer or answer, as long as the data channel is still opened at the time of offer or answer generation.</t>

						<t>The Sub-protocol, label, reliability and order of delivery parameters MUST be equal to those transmitted in-band in the DATA CHANNEL OPEN message. The Stream Identifier MUST be equal to the SCTP Stream Identifier on which the DATA CHANNEL OPEN message is sent.</t>

				</section>
				<section title="Sub-protocol specific attributes" anchor="sub_param">

						<t>In the SDP, each data channel declaration MAY also be followed by other SDP attributes specific to the sub-protocol in use. Each of these attributes is represented by one new attribute line, and it includes the contents of a media-level SDP attribute already defined for use with this (sub)protocol in another IETF specification.</t>


						<t>Each sub-protocol specific attribute such as "a=accept-types:text/plain" that would normally be used to negotiate an instance of MSRP is replaced with an attribute of the form "a=wdcsa:sctp-port:stream-id original-attribute", where wdcsa stands for "webrtc-DataChannel sub-protocol attribute", sctp-port is the sctp port number assigned for webrtc-DataChannel on the media line, stream-id is the sctp stream id assigned to this instance of MSRP, and original-attribute represents the contents of the MSRP related attribute to be included.</t>

						<figure align="left" title="">
							<artwork align="left"><![CDATA[
a=webrtc-DataChannel:5000 stream=2;label="channel 2"; \
  subprotocol="MSRP";max_retr=3
a=wdcsa:5000:2 accept-types:text/plain
 							]]></artwork>			
						</figure>
  
						<t>Thus the attribute "a=wdcsa:5000:2 accept-types:text/plain" specifies that this instance of MSRP on stream id 2 accepts plain text files.</t>
  
						<t>As opposed to the data channel setup parameters, these parameters are subject to offer/answer negotiation.</t>
						
						<t>The same syntax applies to any other SDP attribute required for negotiation of this instance of the sub-protocol.</t>

				</section>
			</section>
			<section title="Procedures">

				<section title="Opening a data channel">

						<t>Opening a data channel is done in-band by the DATA CHANNEL OPEN message. However when the sub-protocol requires an SDP-based negotiation, applications MUST NOT send data on this channel till both SDP negotiation and DATA CHANNEL OPEN message sending are done, which may happen in any order.</t>

						<t>When the application creates a new data channel (requiring some sub-protocol specific negotiation), the browser follows in any case a generic behavior:

						<list style='symbols'>
							<t>if no SCTP association is established, the browser triggers the SDP negotiation, and sends the DATA CHANNEL OPEN message once the answer is received and the SCTP association initialized.</t> 
	
							<t>if an SCTP association is established, the browser does not trigger any SDP negotiation but instead immediately sends a DATA CHANNEL OPEN message. The application then initiates a new offer/answer exchange</t>  
						</list>
						</t>
							<t>Note: in this case, as the DATA CHANNEL OPEN message is sent before the offer is created, Stream ID conflicts between offers sent to the peer, and DATA CHANNEL OPEN messages received from the peer should not occur.</t>

						<t>The application has the task to complete the browser-generated offer (or answer) with the data channel and subprotocol specific parameters in scope of the SCTP m-line. The browser is expected to ignore those parameters when the completed offer (or answer) is applied locally.</t>

				</section>
				<section title="Closing a data channel">

<t>Closing a data channel is done in-band by the SSN reset mechanism, and does not trigger a new offer/answer exchange.</t>
				</section>
			</section>

		</section>
		
		<section title="Support for MSRP data channels">

			<section title="Overview">

				<t>This document defines how MSRP can be used as a WebRTC sub-protocol, where the MSRP-related negotiation is done as part of the SDP-based data channel negotiation defined in <xref target="sub_param"/>.</t> 
				
				<t>In this design, the MSRP connection maps to the SCTP association and the port assigned to data channels, and each MSRP session maps to one data channel exactly.</t>
								
			</section>
			<section title="MSRP URI">

				<t>This document extends the MSRP URI syntax [RFC3986] by defining the new transport parameter value "dc":</t>
   
					<figure align="left" title="">
						<artwork align="left"><![CDATA[
transport  =  "tcp" / "dc" / 1*ALPHANUM
						]]></artwork>			
					</figure>
     
  			</section>
 			
			<section title="Session negotiation">

				<t>Using the syntax a=webrtc-DataChannel:&lt;port&gt; &lt;param=value&gt;, the SDP declaration of a given MSRP data channel can include at least all the following well-known parameters:
					<list style='symbols'>
						<t>defined in <xref target="RFC4975"/>: "path", "accept-types", "accept-wrapped-types", "max-size"</t> 
						<t>defined in <xref target="RFC4566"/>: "sendonly", "recvonly", "inactive", and "sendrecv"</t> 
						<t>defined in <xref target="RFC6135"/>: "setup"</t>
						<t>defined in <xref target="RFC6714"/>: "msrp-cema"</t>
						<t>defined in <xref target="RFC5547"/>: all the parameters related to MSRP file transfer</t> 
					</list>
				</t>
			</section>
			
			<section title="Session opening">

				<t>The MSRP session is normally opened by the active MSRP endpoint, which sends an MSRP SEND message (empty or not) to the other MSRP endpoint. The active MSRP endpoint does not use the path attribute to open a transport connection to its peer. Instead, the active MSRP endpoint uses the DataChannel established for this MSRP session by the procedures in <xref target="sup_sdp"/>.  The cema attribute is implicitly associated with every MSRP session using data channel transport.</t>

			</section>
			<section title="Data sending and reporting">
				
			</section>
			<section title="Session closing">

				<t>Either endpoint can close the MSRP session by closing the underlying data channel. Closing an MSRP session should not trigger an SDP negotiation.</t>
			</section>


		</section>
		<section title="Support for MSRP File Transfer function">
		<t><xref target="RFC5547"></xref> defines an end-to-end file transfer method based on MSRP and the SDP offer/answer mechanism. This file transfer method is also usable by MSRP WebRTC endpoints, with the following considerations:
				
				<list style='symbols'>
					<t>As an MSRP session maps to one data channel, a file transfer session maps also to one data channel.</t> 
					<t>SDP attributes specified in <xref target="RFC5547"/> for a file transfer m-line are embedded as subprotocol-specific attributes as defined in <xref target="sub_param"/>.</t> 
					<t>Each file chunk is transmitted over one SCTP user message.</t> 					
					<t>Once the file transfer is complete, the same data channel MAY be reused for another file transfer.</t> 
					<t>Following the aborting of a file transfer, the SDP can be updated by adding the "inactive" attribute to the list of subprotocol-specific attributes associated with the corresponding data channel.</t> 
				</list>
			</t>			
			
		</section>
			

	</section>

	<section title="Gateway configuration">
	
		<t>This section describes the network configuration where one endpoint runs MSRP over a WebRTC SCTP/DTLS connection, the other MSRP endpoint runs MSRP over one or more TLS/TCP connections, and the two endpoints interwork via an MSRP gateway.</t>
   
		<t>Specifically, a gateway can be configured to interwork an MSRP session using a data channel with a peer that does not support data channel transport in one of two ways.  In one model, the gateway performs as a MSRP B2BUA to interwork all the procedures as necessary between the endpoints.  No further specification is needed for this model.</t> 

		<t>Alternately, the gateway can use CEMA procedures to provide transport level interworking between MSRP endpoints using different transport protocols as follows.</t> 

		<t>When the gateway performs transport level interworking between MSRP endpoints, all of the procedures in section <xref target="sup_sdp"/> apply to each peer, with the following additions:

			<list style='symbols'>
				<t>The endpoint establishing an MSRP session using data channel transport shall not request inclusion of any relays, although it may interoperate with a peer that signals the use of relays.</t> 
		
				<t>The gateway receiving an SDP offer that includes a request to negotiate an MSRP session on a data channel can provide transport level interworking in the same manner as a CEMA SBC by forwarding TCP or TLS transport parameters in a new m line with the appropriate attributes within the forwarded SDP offer.</t> 
		
				<t>Similarly, a gateway receiving an SDP offer to negotiate an MSRP session using TCP or TLS transport with an endpoint that only supports data channel transport for MSRP can provide transport level interworking in the same manner as a CEMA SBC by establishing a new data channel for the MSRP session with the target endpoint.</t> 
			</list>
		</t>

	</section>

	<section anchor="Security" title="Security Considerations">
		<t>To be completed.</t>
	</section>

	<section anchor="IANA" title="IANA Considerations">
		<t>To be completed.</t>
	</section>

	<section title="Acknowledgments">
		<t>The authors wish to thank... for their invaluable comments.</t>
	</section>

</middle>

  <!--  *****BACK MATTER ***** -->

  <back>
	<!-- References split into informative and normative -->

	<!-- There are 2 ways to insert reference entries from the citation libraries:
	 1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
	 2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
		(for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

	 Both are cited textually in the same manner: by using xref elements.
	 If you use the PI option, xml2rfc will, by default, try to find included files in the same
	 directory as the including file. You can also define the XML_LIBRARY environment variable
	 with a value containing a set of directories to search.  These can be either in the local
	 filing system or remote ones accessed by http (http://domain/dir/... ).-->


	<references title="Normative References">
	  <!-- Here we use entities that we defined at the beginning. -->

	  &JSEP;

	  &RFC2119;
	  
	  &RFC4566;

	  &RFC4975;

	  &RFC4976;

	  &RFC5547;
	  
	  &RFC6135;

	  &RFC6714;

	</references>

	<references title="Informative References">
	  <!-- Here we use entities that we defined at the beginning. -->

		&RFC3264;

		&DATAPROTO;

		&DATAREQ;
	 
		<reference anchor='WebRtcAPI' target='http://www.w3.org/TR/2012/WD-webrtc-20120821'>
			<front>
				<title>WebRTC 1.0: Real-time Communication Between Browsers</title>
				
				<author initials='A.' surname='Bergkvist' fullname='Adam Bergkvist'>
				<organization />
				</author>
				
				<author initials='D.' surname='Burnett' fullname='Daniel C. Burnett'>
				<organization />
				</author>
				
				<author initials='A.' surname='Narayanan' fullname='Anant Narayanan'>
				<organization />
				</author>
				
				<author initials='C.' surname='Jennings' fullname='Cullen Jennings'>
				<organization />
				</author>
				
				<date month='August' day='21' year='2012' />
			</front>	
			<seriesInfo name='World Wide Web Consortium WD' value='WD-webrtc-20120821' />
			<format type='HTML' target='http://www.w3.org/TR/2012/WD-webrtc-20120821' />
		</reference>
			
	
	</references>
	
	

  </back>
</rfc>
