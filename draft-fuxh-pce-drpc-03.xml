<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
	<!ENTITY rfc2629 PUBLIC '' 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml'>
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>


<rfc category="info" docName="draft-fuxh-pce-drpc-03" ipr="trust200902">
	<front>
		<title abbrev="DRPC Procedure">
		  A Dual-end Recursive PCE-Based Computation (DRPC) Procedure to Compute Shortest Constrained Inter-domain Traffic Engineering Label Switched Paths
		</title>
		<author fullname="Xihua Fu" initials="XH" surname="Fu" >
			<organization>ZTE Corporation</organization>
			<address>
				<postal>
					<street> West District,ZTE Plaza,No.10,Tangyan South Road,Gaoxin District</street>
					<city>Xi'an</city>
					<code>710065</code>
					<country>P.R.China</country>
				</postal>
				<phone>+8613798412242</phone>
				<email>fu.xihua@zte.com.cn</email>
				<uri>http://www.zte.com.cn/</uri>
			</address>
		</author>
		<author fullname="Yuanlin Bao" initials="YL" surname="Bao" >
			<organization>ZTE Corporation</organization>
			<address>
				<postal>
					<street> 5F,R&amp;D Building 3, ZTE Industrial Park, XiLi LiuXian Road</street>
					<street> Nanshan District</street>
					<city>Shen Zhen</city>
					<code>518055</code>
					<country>P.R.China</country>
				</postal>
				<phone>+86 755 26773731</phone>
				<email>bao.yuanlin@zte.com.cn</email>
				<uri>http://www.zte.com.cn/</uri>
			</address>
		</author>
		<author fullname="Yongli Zhao" initials="YL" surname="Zhao">
			<organization>BUPT</organization>
			<address>
				<postal>
					<street> No.10,Xitucheng Road,Haidian District</street>
					<city>Beijing</city>
					<code>100876</code>
					<country>P.R.China</country>
				</postal>
				<phone>+8613811761857</phone>
				<email>yonglizhao@bupt.edu.cn</email>
				<uri>http://www.bupt.edu.cn/</uri>
			</address>
		</author>
		<author fullname="Jie Zhang" initials="J" surname="Zhang">
			<organization>BUPT</organization>
			<address>
				<postal>
					<street> No.10,Xitucheng Road,Haidian District</street>
					<city>Beijing</city>
					<code>100876</code>
					<country>P.R.China</country>
				</postal>
				<phone>+8613911060930</phone>
				<email>lgr24@bupt.edu.cn</email>
				<uri>http://www.bupt.edu.cn/</uri>
			</address>
		</author>		
		<author fullname="Yuan Gu" initials="Y" surname="G">
			<organization>BUPT</organization>
			<address>
				<postal>
					<street> No.10,Xitucheng Road,Haidian District</street>
					<city>Beijing</city>
					<code>100876</code>
					<country>P.R.China</country>
				</postal>
				<phone>+8613466734941</phone>
				<email>josephstrauss@yahoo.com.cn</email>
				<uri>http://www.bupt.edu.cn/</uri>
			</address>
		</author>
		<date year="2011"/>
		<area>Routing</area>
		<workgroup>Network Working Group</workgroup>
		<keyword>PCE</keyword>
		<keyword>DRPC</keyword>
		<keyword>Inter-domain</keyword>
		<keyword>Constraints</keyword>
		<abstract>
			<t>A dual-end recursive PCE-based computation procedure (DRPC) is proposed to compute shortest constrained inter-domain traffic engineering label switched paths based on BRPC in Multi-protocol Label Switching (MPLS) and Generalized MPLS (GMPLS) networks. By recursively performing shortest path algorithm and transferring the segmental path computation result from both ends bi-directionally, they meet at one of the Middle PCEs, generating a directional shortest path graph into which the two shortest path trees are stitched together. Therefore, the end-to-end constrained inter-domain traffic engineering label switched path, even k shortest paths can be gained from the directional shortest path graph directly.</t> 
		</abstract>
	</front>
	<middle>
		<section title="Introduction">
			<t>With regards to the constraint-based shortest path computation in Multi-protocol Label Switching (MPLS) and Generalized MPLS (GMPLS) multi-layer and multi-domain networks, IETF groups propose the architecture of Path Computation Element (PCE) [RFC4655]. As an important approach of path computation in PCE architecture, backward recursive PCE-based computation (BRPC) procedure can gain a shortest path tree along the direction from the destination node to the source node, and then get an end-to-end optimal path [RFC5441]. During the procedure of BRPC, a sequence of PCEs  should be pre-determined. However, when the number of PCEs in the predetermined PCE sequence are very large, the path computation time may be long for the customer, and the long PCE chain will be vulnerable. A dual-end recursive PCE-based computation (DRPC) procedure is proposed to compute shortest constrained inter-domain traffic engineering label switched paths. DRPC procedure aims to provide a further improvement of the existing BRPC procedure by computing and transferring the shortest path tree bi-directionally, which doubles the pace of inter-domain path computation.In DRPC procedure, path computation is launched at the source PCE and the destination PCE simultaneously. By recursively performing shortest path algorithm and transferring the segmental path computation result from both ends bi-directionally, they meet at one of the Middle PCEs, generating a directional shortest path graph into which the two shortest path trees are stitched together. Therefore, the end-to-end constrained inter-domain traffic engineering label switched path, even the k shortest paths can be gained from the directional shortest path graph directly. Only the differences from [RFC5441] are listed here, the overlapped comments all inherit the corresponding terms in [RFC5441], such as section 7, 8, 10, 11, 13, 14, 16, and so on.</t>
			<section title="Conventions Used in This Document">
   			<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>
   		</section>
		</section>
		<section title="Terminologies">
			<t>ABR: Area Border Routers. Routers used to connect two IGP areas (areas in OSPF or levels in IS-IS).</t>
			<t>ASBR: Autonomous System Border Routers. Routers used to connect together ASes of the same or different Service Providers via one or more Inter-AS links.</t>
			<t>Boundary Node (BN): a boundary node is either an ABR in the context of inter-area Traffic Engineering or an ASBR in the context of inter-AS Traffic Engineering.</t>
			<t>Entry BN of domain (n): a BN connecting domain (n-1) to domain (n) along a determined sequence of domains.</t>
			<t>Exit BN of domain (n): a BN connecting domain (n) to domain (n+1) along a determined sequence of domains.</t>
			<t>Inter-AS TE LSP: A TE LSP that crosses an AS boundary. Inter-area TE LSP: A TE LSP that crosses an IGP area boundary.</t>
			<t>LSR: Label Switching Router.</t>
			<t>LSP: Label Switched Path.</t>
			<t>PCC: Path Computation Client. Any client application requesting a path computation to be performed by the Path Computation Element.</t>
			<t>PCE (Path Computation Element): an entity (component, application or network node) that is capable of computing a network path or route based on a network graph and applying computational constraints.</t>
			<t>PCE(i): a PCE with the scope of domain (i).</t>
			<t>TED: Traffic Engineering Database.</t>
			<t>VSPT: Virtual Shortest Path Tree.</t>
			<t>VSPG: Virtual Shortest Path Graph.</t>
			<t>Source PCE: the PCE in the source domain to launch the DRPC procedure and transfer the calculated VSPT forward.</t>
			<t>Destination PCE: the PCE in the destination domain to launch the DRPC procedure and transfer the calculated VSPT backward.</t>
			<t>Middle PCE: a PCE which is a relative concept ,that is one of the PCEs in the PCE sequence(the direction from the Destination PCE to the Source PCE or from the Source PCE to the Destination PCE relatively).And the Middle PCE must not be the source PCE or the destination PCE.</t>
			<t>Stitching PCE: a PCE which is determined to stitch the two VSPTs from both source and destination sides of PCEs into a VSPG.</t>
			<t>Downstream: In forward direction, from Source PCE to Destination PCE.</t>
			<t>Upstream: In backward direction, from Destination PCE to Source PCE.</t>
		</section>
		<section title="General Assumptions">
			<t>In the rest of this document, we make the following set of assumptions common to inter-area and inter-AS MPLS TE, which are same to the assumptions of [RFC 5441].
				<list style="symbols">
					<t> Each IGP area or Autonomous System (AS) is assumed to be Traffic Engineering enabled.</t>
					<t> No topology or resource information is distributed between domains (as mandated per [RFC4105] and [RFC4216]), which is critical to preserve IGP/BGP scalability and confidentiality.</t>
					<t> while certain constraints like bandwidth can be used across different domains, other TE constraints like resource affinity, color, metric, etc. as listed in RFC2702 could be translated at domain boundaries. If required, it is assumed that, at the domain boundary nodes, there will exist some sort of local mapping based on policy agreement, in order to translate such constraints across domain boundaries during the inter-PCE communication process.</t>
					<t> Each AS can be made of several IGP areas. The path computation procedure described in this document applies to the case of a single AS made of multiple IGP areas, multiple ASes made of a single IGP area or any combination of the above. For the sake of simplicity, each AS will be considered to be made of a single area in this document. The case of an Inter-AS TE LSP spanning multiple ASes where some of those ASes are themselves made of multiple IGP areas can be easily derived from this case by applying the DRPC procedure described in this document, recursively.</t>
					<t> The domain path (set of domains traversed to reach the destination domain) is either administratively pre-determined or discovered by some means that is outside of the scope of this document.</t>
				</list>
			</t>
		</section>
		<section title="DRPC Procedure">
			<section title="PCE Sequence Selection Approaches">
				<t>A PCE sequence has to be predetermined before DRPC procedure is launched, which corresponds to the domain path selection. The PCE/domain path may be either administratively predetermined or discovered by some means outside of the scope of this document. </t>
				<t>A hierarchical PCE architecture is highly recommended which is proposed in [I-D.ietf-pce-hierarchy-fwk]. In the hierarchical PCE architecture, there are concepts of Parent (hierarchical) PCE and child PCE.</t>
				<t>The Parent PCE is responsible for selecting a PCE/domian path across its domain map.The Parent PCE maintains the domain topology map that contains the child domains and their interconnections and  the traffic engineering (TE) capabilities of domain interconnections. But The Parent PCE has no information about the contents of the child domains.And it learns those from configuration or information received from each Child PCE.</t>
				<t>Each domain has has at least one PCE capable of computing paths across it. These PCEs are known as Child PCEs and have a relationship with the Parent PCE. A child PCE is responsible for computing the path across one or more specific (child) domains. Each Child PCE knows the identity of the border nodes and links of its own adjacent domains. But a child PCE only knows the topology of the domain it serves and does not know the topology of other domains.And it is also not aware of the general domain mesh connectivity beyond the connectivity to the immediate neighbordomains of the domain it serves.</t>
				<t>When the ingress PCE responsible for the ingress domain receives a path computation request from the source node, and the destination is outside of this domain, the ingress PCE will send a path computation request(PCReq Message) to the parent PCE. The parent PCE determines which domian the destination node belongs to.And then the parent PCE selects the sequence of candidate domain PCEs based on its domain topology map. It then sends the selected candidate PCE sequence within the computation requests (PCRep Message) to the ingress PCE .</t>
				<t>Each selected candidate PCE that in the selected sequence computes a set of candidate path segments across its own domain and then use some methods(e.g. BRPC, etc.) to gain an optimal end-to-end optimal path from the source node to the destination node.</t>
				<t>The communication with Parent PCE is unnecessary within the context of non-hierarchical PCE architecture and PCE/domain path can be obtained by other means.</t>
			</section>
			<section title="DRPC Procedure">
				<t>Definition of VSPG(i), VSPT(0,i) and VSPT(1,i): </t>
				<t>VSPG(i) consists of multi shortest paths from the same node to other multi nodes. </t>
				<t>In each domain i,
					<list style="symbols">
						<t>There is a set of X-en(i) entry BNs noted BN-en(k,i) where BN-en(k,i) is the kth entry BN of domain(i).</t>
						<t>There is a set of X-ex(i) exit BNs noted BN-ex(k,i) where BN-ex(k,i) is the kth exit BN of domain(i).</t>
					</list>
				</t>
				<t>The definition of VSPT(1,i) is the same as that of VSPT(i) in BRPC (see [RFC5441]).</t>
				<t>VSPT(1,i): MP2P (multipoint-to-point) tree returned by PCE(i) to PCE(i-1):</t>
				<figure title="VSPT(1,i) Backward Shortest Path MP2P Tree" anchor="VSPT(1,i) Backward Shortest Path MP2P Tree">
					<artwork align="center">
							<![CDATA[ 
   ---------------------------------------------
  |                                             |   
  |        -------------------------            |
  |       |Root (TE LSP destination)|           |
  |        -------------------------            |
  |         /          |          \             |
  |        /           |           \            |
  |       /            |            \           |
  |   ----------   ----------      ----------   |
  |  |BN-en(1,i)| |BN-en(2,i)| ...|BN-en(j,i)|  |
  |   ----------   ----------      ----------   |
  |                                             |
   ---------------------------------------------
where [X-en(i)] is the number of entry BNs in
domain (i), and j is no larger than [X-en(i)] 
              ]]> 
					</artwork>
				</figure>				
				<t>Each link of tree VSPT(1,i) represents the shortest constrained path between BN-en(j,i) and the TE LSP destination that satisfies the set of required constraints for the TE LSP (bandwidth, resource affinity, metrics, etc.). These are path segments to reach the TE LSP destination from BN-en(j,i).</t>
				<t>The definition of VSPT(0,i) is vary similar to the VSPT(1,i).</t>
				<t>VSPT(0,i): P2MP (point-to-multipoint) tree returned by PCE(i) to PCE(i+1):</t>
				<figure title="VSPT(0,i) Forward Shortest Path P2MP Tree" anchor="VSPT(0,i) Forward Shortest Path P2MP Tree">
					<artwork align="center"> 
						<![CDATA[
 -----------------------------------------------------
|                                                      |   
|               ---------------------                  |
|              | Root (TE LSP source)|                 |
|               ---------------------                  |     
|              /          |          \                 |
|             /           |           \                |
|            /            |            \               |
|   ------------     ------------       ------------   |
|  |BN-en(1,i+1)|   |BN-en(2,i+1)| ... |BN-en(j,i+1)|  |
|   ------------     ------------       ------------   |
|                                                      |
 -----------------------------------------------------
where [X-en(i)] is the number of entry BNs in
domain (i), and j is no larger than [X-en(i)]
]]> 
					</artwork>
				</figure>				
				<t>Each link of tree VSPT(0,i) represents the shortest constrained path between BN-en(j,i+1) and the TE LSP source that satisfies the set of required constraints for the TE LSP (bandwidth, resource affinity, metrics, etc.). These are path segments to reach BN-en(j,i+1) from the TE LSP source.</t>
 				<t>Different from BRPC, when a path computation request arriving and the PCE sequence to be traversed has been predetermined, DRPC will launch the path computation from dual-end PCEs to the Middle PCEs bi-directionally. It is worth noting that the Middle PCE may not be the PCE in the middle of the PCE sequence but the PCE receiving the two path computation requests from two directions. And the domian that servered by the Middle PCE is called as Stitching Domain,and this Middle PCE is also called as stitching PCE. According to the path computation request, the source PCE sparks the path computaion to the Entry BN of the stitching domain. While, the destination PCE sparks the path computation to the the Entry BN of the domain next to the stitching domain. When the stitching PCE receives the two messages which contain the two virtual shortest path trees (VSPT) at the root of the source node and the destination node respectively, the stitching PCE will stitch the two VSPTs into one complete directional shortest path graph. At last, the shortest path or k shortest paths will be selected from the directional shortest path graph by the stitching PCE according to some strategies and transferred to the source node through the Source PCE. Similar with BRPC procedure, a predetermined PCE sequence should also be designated before DRPC procedure.</t>
				<t>PCE(i+1) computes VSPT(1,i+1) by using its own topology map without considerating any cross-domain links. VSPT(1,i+1) is returned by PCE(i+1) to PCE(i) along the direction from the Destination PCE to the Source PCE, which consists of multi shortest paths from the multi BN-en(j,i+1)s to the destination node, as is shown in Fig.1.</t>
				<t>PCE(i-1) computes VSPT(0,i-1) by using its own topology map together with the cross-domain links between domain(i-1) and domain(i). VSPT(0, i-1) is returned by PCE(i-1) to PCE (i) along the direction from the Source PCE to the Destination PCE, which consists of multi shortest paths from the source node to multi BN-en(j,i), as is shown in Fig.2.</t>
				<t>VSPG(i)=VSPT(0,i)+VSPT(1,i+1) is the directional shortest path graph from the source node to the destination node which is stitched by the two directional shortest path trees that gained above.  As the Stitching PCE, PCE(i) computes VSPT(0,i) and then stitches the two directional shortest path graphs together where VSPT(0,i) represents the directional shortest path tree computed from source node to the Entry BN of domain(i+1) and VSPT(1,i+1) represents the directional shortest path graph computed from destination node to the Entry BN of domain(i+1). At last, the directional shortest path graph from the source node to the destination node is generated as shown in Fig.3.</t>
				<figure title="VSPG(i) Shortest Path Graph" anchor="VSPG(i) Shortest Path Graph">
					<artwork align="center"> 
						<![CDATA[ 
 ----------------------------------------------------
|                                                      |
|                 -------------------                  |
|                |Root (TE LSP source)|                |
|                 -------------------                  |              
|                /         |         \                 |
|               /          |          \                |
|   ------------     ------------       ------------   |
|  |BN-en(1,i+1)|   |BN-en(2,i+1)| ... |BN-en(j,i+1)|  |
|   ------------     ------------       ------------   |
|               \          |          /                |
|                \         |         /                 |
|              -------------------------               |
|             |Root (TE LSP destination)|              |
|              -------------------------               |
|                                                      |
  ----------------------------------------------------
]]>  
					</artwork>
				</figure>

				<t>The Stitching PCE can be either designated before DRPC procedure or dynamic selected in PCEP signaling procedure automatically.</t>
				<t>Two path selection strategies are permitted to return the shortest path back to PCC.
					<list style="symbols">
						<t>The Stitching PCE transfers the computed optimal end-to-end path to the Source PCE through PCReq message and the Source PCE returns the path back to PCC. The non-optimal paths are deleted at the Stitching PCE.</t>
						<t>The Stitching PCE transfers the newly stitched directional shortest path graph to the Source PCE through PCRep message. Source PCE generates the shortest path and returns it back to PCC.  The non-shortest paths are deleted at the Source PCE.</t>
					</list>
				</t>
			</section>
			<section title="Stitching PCE Selection">
				<t>The Stitching PCE is an ordinary PCE. It acts as the role of stitching the two VSPTs from both source and destination sides of PCEs into a VSPG. The Stitching PCE can be designated by several means before DRPC procedure, such as Parent PCE computation, Network Management System(NMS) designation, administrative configuration and etc. These can be regarded as Designation Case and Section 4.3.1 describes the DRPC operation in this case. By utilizing the characteristics of the PCEP signaling, the stitching role can be dynamically determined. Section 4.3.2 elaborates the details of PCEP signaling procedure in Stitching PCE Selection.</t>
				<section title="Case(1): Mode of Operation in PCE Designation">
					<t>Denoting that PCE(1) is the Source PCE, PCE(m) is the Stitching PCE, and PCE(n) is the Destination PCE.</t>
					<t>Step 1:</t>
					<t>PCE(1) computes VSPT(0,1), the tree made of the list of shortest constrained paths between the TE LSP source and every BN-en(j,2) by using a suitable path computation algorithm (e.g. CSPF, etc.) and returns the computed VSPT(0,1) to PCE(2). This can be triggered by Parent  PCE, PCC or spontaneously.</t>
					<t>Simultaneously, PCE(n) computes VSPT(1,n), the tree made of the list of shortest constrained paths between every BN-en(j,n) and the TE LSP destination using a suitable path computation algorithm (e.g. CSPF, etc.) and returns the computed VSPT(n) to PCE(n-1). This can be triggered by Parent PCE, PCE(n-1) or PCE(1) directly. It is highly recommended to drive PCE(n) to compute VSPT(1,n) by PCE chain and to relay PCReq message PCE-by-PCE downstream from PCE(1). An example of specific PCEP message flow is shown in section 4.4.</t>
					<t>Step i: (Downstream)</t>
					<t>For i=2 to m-1: PCE(i) computes VSPT(0,i), the tree made of the shortest constrained paths between the TE LSP source and each BN-en(j,i+1). It does this by considering the information in VSPT(0,i-1) and its own TED including the links that provide connectivity from domain(i) to domain(i+1). PCE(i) returns the computed VSPT(0,i) to PCE(i+1).</t>
					<t>Step i: (Upstream)</t>
					<t>For i=n-1 to m+1: PCE(i) computes VSPT(1,i), the tree made of the shortest constrained paths between each BN-en(j,i) and the TE LSP destination. It does this by considering the information in VSPT(1,i+1) and its own TED. PCE(i) returns the computed VSPT(1,i) to PCE(i-1).</t>
					<t>Step m:</t>
					<t>The Stitching PCE(m) computes VSPT(0,m), the tree made of the shortest constrained paths between the TE LSP source and each BN-en(j,m+1). It does this by considering the information in VSPT(0,m-1) and its own TED including the links that provide connectivity from domain(m) to domain(m+1). PCE(m) stitches the computed VSPT(0,m) and VSPT(1,m+1) which is returned from PCE(m+1) into a VSPG.</t>
					<t>If n=2, the source domain and the destination domain are directly interconnected with each other.  The Stitching PCE is recommended to be specified as the Source PCE where step i is omitted.</t>
					<t>The PCRep message which carries VSPG(m) or final Explicit Route Objects (EROs) should be relayed from PCE(m) to PCE(1) upstream PCE-by-PCE. PCE(1) returns the final path computation result to PCC. The optimal path can be selected from VSPG(m) either by PCE(m) or PCE(1). For the sake of topology confidentialality, PCE(m) is recommended to select the final explicit route rather than PCE(1).</t>
				</section>
				<section title="Case(2): Mode of Operation in PCEP Signaling Procedure">
					<t>Denoting that PCE(1) is the Source PCE and PCE(n) is the Destination PCE. In case(2), every PCE transfers VSPT to the next PCE without knowing a predefined Stitching PCE. So, the Stitching PCE is selected automatically in PCEP signaling procedure where VSPT request messages upstream and downstream meet each other and there are three scenarios.</t>
					<t>Scenario (1): PCE(i) and PCE(i+1) receive messages request for VSPT(1,i+1) and VSPT(0,i) respectively after these two messages have been sent. Thus, PCE(i) stitches VSPT(0,i) and VSPT(1,i+1) into VSPG(i), whereas PCE(i+1) discards the message.</t>
					<t>Scenario (2): PCE(i) receives a message carrying VSPT(1,i+1) after it has received a message carrying VSPT(0,i), and it is unable to stop sending PCReq with computed VSPT(0,i) to PCE(i+1) immediately or the message has already been sent. Thus, PCE(i) stitches VSPT(0,i) and VSPT(1,i+1) into VSPG(i), whereas PCE(i+1) discards VSPT(0,i).</t>
					<t>Scenario (3): PCE(i+1) receives a message carrying VSPT(0,i) after it has received a message carrying VSPT(1,i+2), and it is unable to stop sending message carrying a computed VSPT(1,i+1) to PCE(i) immediately. Thus, PCE(i) stitches VSPT(0,i) and VSPT(1,i+1) into VSPG(i), whereas PCE(i+1) discards VSPT(0,i).</t>
					<t>The following steps are described to deal with these three situations in a uniform procedure. Denoting that PCE(m) is the Stitching PCE and it is the intersection of the two VSPTs.</t>
					<t>Step 1:</t>
					<t>PCE(1) computes VSPT(0,1), the tree made of the list of shortest constrained paths between the TE LSP source and every BN-en(j,2) by using a suitable path computation algorithm (e.g., CSPF) and returns the computed VSPT(0,1) to PCE(2).  This can be triggered by Parent PCE, PCC or spontaneously.</t>
					<t>Simultaneously, PCE(n) computes VSPT(1,n), the tree made of the list of shortest constrained paths between every BN-en(j,n) and the TE LSP destination using a suitable path computation algorithm (e.g., CSPF) and returns the computed VSPT(n) to PCE(n-1). This can be triggered by Parent PCE, PCE(n-1) or PCE(1) directly. It is highly recommended to drive PCE(n) to compute VSPT(1,n) by PCE chain and to relay PCReq message PCE-by-PCE downstream from PCE(1). This step is identical with that of Case (1).</t>
					<t>Step i: (Downstream)</t>
					<t>For i=2 to m: PCE(i) computes VSPT(0,i), the tree made of the shortest constrained paths between the TE LSP source and each BN-en(j,i+1). It does this by considering the information in VSPT(0,i-1) and its own TED including the links that provide connectivity from domain(i) to domain(i+1). If PCE(i) has already received a valid message request for VSPT(0,i) from PCE(i+1) which carries VSPT(1,i+1), it ignores the message once received from PCE(i-1) downstream. Otherwise PCE(i) returns the computed VSPT(0,i) to PCE(i+1).</t>
					<t>Step i: (Upstream)</t>
					<t>For i=n to m+1: PCE(i) computes VSPT(1,i), the tree made of the shortest constrained paths between each BN-en(j,i) and the TE LSP destination. It does this by considering the information in VSPT(1,i+1) and its own TED.  PCE(i) returns the computed VSPT(1,i) to PCE(i-1). If PCE(i) has already received a valid message request for VSPT(1,i-1) from PCE(i-1) which carries VSPT(0,i-1), it computes VSPT(0,i+1) and transfers the VSPT(0,i) to PCE(i+1).  Once a valid message carrying VSPT(1, i+1) received from PCE(i+1) after receiving VSPT(0, i-1) from PCE(i-1), PCE(i) stitches these two VSPTs into a VSPG(i).</t>
					<t>Both PCReq and PCRep message are permitted to trigger VSPT computation. It is recommended to use PCRep message to trigger the VSPT computation on the Middle PCE, and PCReq on the Source and Destination PCE. VSPT(0, i), VSPT(1, i) and VSPG(i) MUST be encoded in ERO, IRO, RRO, or XRO Objects (see [RFC5440] and [RFC5521]).</t>
					<t>The PCRep message which carries VSPG(m) or final ERO should be relayed from PCE(m) to PCE(1) upstream PCE-by-PCE. PCE(1) returns the final path computation result to PCC. The shortest path can be selected from VSPG(m) either by PCE(m) or PCE(1). These are identical with case (1).</t>
				</section>
			</section>
			<section title="An Example of PCE Collaboration">
				<t>The following example is used for demonstrating PCE collaboration of DRPC procedure in this document. It uses the recommended PCEP message flow.</t>
				<t>Notes:
					<list style="hanging">
						<t>- Only three domains are depicted in the diagram below for the sake of simplicity.</t>
						<t>- We assume that the Stitching PCE is in the middle of the PCE sequence, which may be determined by either of the two cases described in Section 4.3.</t>
					</list>
				</t>
				<figure title="An Example of DRPC Procedure" anchor="An Example of DRPC Procedure">
					<artwork align="center"> 
						<![CDATA[
                                                                    
            (1.1)PCReq      ------------                            
        +----------------->| Parent PCE |                           
        |   (1.2)PCRep      ------------                            
        |                                                           
   -----+------             ------------             ------------   
  |     |      |           |  Domain 2  |           |  Domain 3  |  
  |     v      |           | (Stitcher) |           |            |  
  |   ------   | (2a)PCReq |   ------   | (3a)PCReq |   ------   |  
  |  | PCE1 |<-+-----------+->| PCE2 |<-+-----------+->| PCE3 |  |  
  |   ------   | (2b)PCRep |   ------   | (3b)PCRep |   ------   |  
  |     ^      | (4)PCRep  |            |           |            |  
  |  (1)|PCReq |            ------------             ------------   
  |  (5)|PCRep |                                                    
  |     v      |                                                    
  |   -----    |                                                    
  |  | PCC |   |                                                    
  |   -----    |                                                    
  |            |                                                    
  |  Domain 1  |                                                    
   ------------                                                     
                                                                     
 						]]>
					</artwork>
				</figure>
				<t>Workflows:
				<list style="hanging">
					<t>(1) PCC sends a PCReq message to the Source PCE, requesting an end-to-end explicit route.</t>
					<t>(1.1) Source PCE sends a PCReq message to Parent PCE, requesting a PCE Sequence.</t>
					<t>(1.2) Parent PCE sends a PCReq message to Source PCE, replying the PCE Sequence.</t>
					<t>(2a) Once PCE(1) obtained the PCE Sequence by some means, it sends a PCReq message to PCE(2), asking for PCE(2) to relay this message to the Destination PCE. It expects the Destination PCE to compute VSPT(1, 3).</t>
					<t>(2b) Once PCE(1) obtained the PCE Sequence by some means, it computes VSPT(0, 1) and encapsulate this VSPT into a PCRep message. Then it sends this PCRep message to PCE(2) to launch a VSPT(0, 2) computation.</t>
					<t>(3a) Having received a PCReq message from PCE(1), PCE(2) sends a PCReq message to PCE(3), asking for PCE(3) to relay this message to the Destination PCE. </t>
					<t>(3b) Having received a PCReq message from PCE(2) and checked that the Destination PCE is itself, PCE(3) computes VSPT(1, 3) and encapsulate this VSPT into a PCRep message. Then it sends this PCRep message to PCE(2) to launch a VSPT(1, 2) computation.</t>
					<t>(4) The Stiching PCE stitches VSPT(0, 2) and VSPT(1, 2) into a VSPG(2). It may either select a shortest path from this VSPG and encapsulate it into a PCRep message or it may encapsulate the VSPG into a PCRep message. No matter which strategy is chosen, it sends back the PCRep message to PCE(1), the neighbor PCE along the upstream direction, expecting that PCE to relay this PCReq message to the Source PCE.</t>
					<t>(5) Having received a PCRep message from PCE(2) and checked that the Source PCE is itself, PCE(1) returns the final ERO to PCC by sending a PCRep message. If the received PCRep message contains a VSPG, PCE(1) selects the shortest path from the VSPG, or else PCE(1) relays the received PCRep message to PCC directly.</t>
				</list>
				</t>
				<t>If the parent PCE which maintains the domain topology map of the child domains and their interconnectivity does not exist, the PCE sequence can be predetermined by other means such as administrative configuration, Network Management System(NMS)designated, non-shortest path computation without regard to detailed TE attributes, and etc. This way, the (1.1) and (1.2) steps are skipped.</t>
			</section>
		</section>
		<section title="PCEP Protocol Extension Requirements">
			<t>The two different DRPC procedures require the specification of new flags of the RP object carried within the PCReq message to specify that the shortest paths satisfying the constraints from the destination to the set of entry boundary nodes or from the source to the set of entry boundary nodes are requested.</t>
			<t>Note that IANA has already defined Bit 25 of the flags in RP Object for VSPT.</t>
			<t>The following new flags of the RP object is defined:</t>
			<t>
				<list style="hanging" hangIndent="17">
					<t hangText="Bit Number">Name Flag</t>
					<t hangText="16">VSPG</t>
				</list>
				When Bit 16 is set, it enables VSPG encoding in ERO, IRO, RRO, or XRO Object.
				In PCReq message, when Bit 16 is set, it indicates that the Source PCE is response for path selection from VSPG rather than the Stitching PCE, which is defined in this document. Bit 16 is valid under the assumption that bit 17 is valid.
			</t>
			<t>
				<list style="hanging" hangIndent="17">
					<t hangText="Bit Number">Name Flag</t>
					<t hangText="17">DRPC VSPT Extension</t>
				</list>
				In PCReq Message:
				<list style="hanging" hangIndent="17">
					<t hangText="17">1: Request for DRPC Procedure</t>
				</list>
				In PCRep Message:
				<list style="hanging" hangIndent="17">
					<t hangText="17">0: from source PCE to Middle PCE for VSPT Extension</t>
					<t>1: from destination PCE to Middle PCE for VSPT Extension</t>
				</list>
			</t>
      <t>In PCReq message, when Bit 17 is set, it indicates that the PCC requests the computation of an inter-domain TE LSP using the DRPC procedure defined in this document. In PCRep message Bit 17 is valid under the assumption that bit 25 is valid.</t>
      <t>Because path segments computed by the two end PCEs in the context of the DRPC procedure must be provided along with their respective path costs, the C flag of the METRIC object carried within the PCReq message must be set. It is the choice of the requester to appropriately set the O bit of the RP object.</t>
		</section>
		<section title="VSPG Encoding">
			<t>The VSPG encoding objects must be returned within a PCRep message. The encoding consists of a non-ordered list of Explicit Route Objects (EROs) where each ERO represents a path from the source node to the destination node specified in the END-POINT object of the corresponding PCReq message from PCC to Source PCE.</t>
			<t>Example:</t>

			<figure title="An Example of VSPG Encoding Using a Set of EROs" anchor="An Example of VSPG Encoding Using a Set of EROs">
				<artwork align="center"> 
<![CDATA[
 
                                                                       
 <---- area 1 -----><-------- area 2 ---------><----- area 3 ------>  
  +--A--B---BNex1-1--BNen2-1---E---F---BNex2-1--BNen3-1---K----L--+   
  |                                                               |   
  |                                                               |   
  S----C----BNex1-2--BNen2-2---G---H---BNex2-2--BNen3-2-----M-----D   
                               |                                  |   
                               |                                  |   
                               +---J---BNex2-3--BNen3-3---N----P--+   
                                         |                     |      
                                         |                     |      
                                         +------BNen3-4---Q----+      
                                                                       

]]>
				</artwork>
			</figure>
			<t>In the example shown in Figure 5, along the direction from the source node S to the destination node D, when the Stitching PCE completes the path computation and the Source PCE expects a VSPG to select the optimal path in it, four non-ordered EROs are transferred to PCE(1). The four EROs are as follows:
				<list style="format  ERO[%d]:">
					<t>S---A---B---BN-ex(1,1)---BN-en(2,1)---E---F---BN-ex(2,1)---BN-en(3,1)---K---L---D</t>
					<t>S---C---BN-ex(1,2)---BN-en(2,2)---G---H---BN-ex(2,2)---BN-en(3,2)---M---D</t>
					<t>S---C---BN-ex(1,2)---BN-en(2,2)---G---J---BN-ex(2,3)---BN-en(3,3)---N---P---D</t>
					<t>S---C---BN-ex(1,2)---BN-en(2,2)---G---J---BN-ex(2,3)---BN-en(3,4)---Q---P---D</t>
				</list>
			</t>
			<t>Note that the (BN-ex, BN-en) pair can either be a pair of interfaces on a single ABR or two detached TE-Routers in different domains. In both cases they should be encoded to ERO sub-object specified in [RFC3209].</t>
		</section>
		<section title="DRPC Procedure Failures">
			<t>If the DRPC procedure cannot be completed because a PCE along the domain does not recognize the procedure (VSPG flag of the RP object), the PCE sends a PCErr message to the parent PCE with an Error-Type=4 (not supported object), Error-value-4 (Unsupported parameter). Then the parent PCE sends the failure message to the other PCEs along the PCE chain. The corresponding path computation request is then cancelled by the PCE without further notification. The PCErr message must be relayed to the requesting PCC by the source PCE.</t>
			<t>PCEP-ERROR objects are used to report a PCEP protocol error and are characterized by an Error-Type which specifies the type of error and an Error-value that provides additional information about the error type. Both the Error-Type and the Error-Value are managed by IANA. A new Error-Type and the corresponding error value are defined here.</t>
			<t>
				<list style="hanging" hangIndent="17">
					<t hangText="Error-type">Meaning</t>
					<t hangText="14">DRPC procedure completion failure</t>
				</list>
			</t>
			<t>
				<list style="hanging" hangIndent="17">
					<t hangText="Error-value">Meaning</t>
					<t hangText="1">DRPC procedure not supported by one or more PCEs along the domain path</t>
				</list>
			</t>
		</section>
		<section title="Path Computation Failures">
			<t>If a PCE requires to relay a path computation request according to the DRPC procedure defined in this document to a downstream PCE and no such PCE is available, the PCE MUST cancel all the procedures of path computation on all the other PCEs along the PCE chain through the Source PCE, and send a path computation reply to the PCC using a PCRep message that contains a NO-PATH object. In such case, the NO-PATH object MUST carry a NO-PATH-VECTOR TLV with the newly defined bit named "DRPC Path Computation chain unavailable" set.</t>
			<t>Different from BRPC using bit 28, Bit 23 is defined here.</t>
			<t>
				<list style="hanging" hangIndent="17">
					<t hangText="Bit Number">Name Flag</t>
					<t hangText="23">DRPC Path computation chain unavailable</t>
				</list>
			</t>
		</section>

		<section title="Security Considerations">
			<t>TBD.</t>
		</section>
		<section title="IANA Consideration">
			<section title="New Flags Of The RP Object">
				<t>
					New flags Of The RP Object is defined in this document (VSPG and VSPT-DRPC-Extension to be assigned by IANA).
					<list style="hanging" hangIndent="17">
						<t hangText="Bit Number">Name Flag</t>
						<t hangText="16">VSPG</t>
						<t hangText="17">DRPC VSPT Extension</t>
					</list>
					In PCReq Message:
					<list style="hanging" hangIndent="17">
						<t hangText="17">1: Request for DRPC Procedure</t>
					</list>
					In PCRep Message:
					<list style="hanging" hangIndent="17">
						<t hangText="17">0: from source PCE to Middle PCE for VSPT Extension</t>
						<t>1: from destination PCE to Middle PCE for VSPT Extension</t>
					</list>
				</t>
				<t>Bit 16 is valid under the assumption that bit 17 is valid.</t>
				<t>Bit 17 is valid under the assumption that bit 25 is valid in PCRep message.</t>
			</section>
			<section title="New Error-Type and Error-Value">
				<t>
					A new Error-Type is defined in this document (Error-Type and Error-value to be assigned by IANA).
					<list style="hanging" hangIndent="17">
						<t hangText="Error-type">Meaning</t>
						<t hangText="14">DRPC procedure completion failure</t>
						<t hangText="Error-value">Meaning</t>
						<t hangText="1">DRPC procedure not supported by one or more PCEs along the domain path</t>
					</list>
				</t>
			</section>
			<section title="New Flag Of The NO-PATH-VECTOR TLV">
				<t>
					A new flag of the NO-PATH-VECTOR TLV defined in is specified in this document.(Bit 23 to be assigned by IANA)
					<list style="hanging" hangIndent="17">
						<t hangText="Bit number">Name Flag</t>
						<t hangText="23">DRPC Path computation chain unavailable</t>
					</list>
				</t>
			</section>
		</section>
		<section title="Acknowledgments">
			<t>The RFC text was produced using Marshall Rose's xml2rfc tool.</t>
		</section>
		
	</middle>
	<back>
		<references title="Normative References">
			<reference anchor="RFC2119">
				<front>
				<title>Key words for use in RFC's to Indicate Requirement Levels</title>
					<author initials="S." surname="Bradner" fullname="Scott Bradner">
					<organization>Harvard University</organization>
					</author>
					<date month="March" year="1997" />
				</front>
			<seriesInfo name="RFC" value="2119" />
			</reference>		
			<reference anchor="RFC4665">
				<front>
				<title>A Path Computation Element (PCE)-Based Architecture</title>
					<author initials="A." surname="Farrel" fullname="Adrian Farrel">
					<organization>Old Dog Consulting</organization>
					</author>
					<author initials="J.-P." surname="Vasseur" fullname="Jean-Philippe Vasseur">
					<organization>Cisco Systems, Inc.</organization>
					</author>
					<author initials="J." surname="Ash" fullname="Jerry Ash">
					<organization>AT&amp;T</organization>
					</author>
					<date month="August" year="2006" />
				</front>
			<seriesInfo name="RFC" value="4655" />
			</reference>
			<reference anchor="RFC5441">
				<front>
				<title>A Path Computation Element (PCE)-Based Architecture</title>
					<author initials="J.-P." surname="Vasseur" fullname="Jean-Philippe Vasseur">
					<organization>Cisco Systems, Inc.</organization>
					</author>
					<author initials="R." surname="Zhang" fullname="Raymond Zhang">
					<organization>BT Infonet</organization>
					</author>
					<author initials="N." surname="Bitar" fullname="Nabil Bitar">
					<organization>Verizon</organization>
					</author>
					<author initials="JL." surname="Le Roux" fullname="JL Le Roux">
					<organization>Verizon</organization>
					</author>
					<date month="April" year="2009" />
				</front>
			<seriesInfo name="RFC" value="5441" />
			</reference>
			<reference anchor="RFC5521">
				<front>
				<title>Extensions to the Path Computation Element Communication Protocol (PCEP) for Route Exclusions</title>
					<author initials="E." surname="Oki" fullname="Eiji Oki">
					<organization>University of Electro-Communications</organization>
					</author>
					<author initials="T." surname="Takeda" fullname="Tomonori Takeda">
					<organization>NTT</organization>
					</author>
					<author initials="A." surname="Farrel" fullname="Adrian Farrel">
					<organization>Old Dog Consulting</organization>
					</author>
					<date month="April" year="2009" />
				</front>
			<seriesInfo name="RFC" value="5521" />
			</reference>
			<reference anchor="I-D.ietf-pce-hierarchy-fwk">
				<front>
				<title>The Application of the Path Computation Element Architecture to the Determination of a Sequence of Domains in MPLS &amp; GMPLS</title>
					<author initials="D." surname="King" fullname="Danel King">
					<organization>Old Dog Consulting</organization>
					</author>
					<author initials="A." surname="Farrel" fullname="Adrian Farrel">
					<organization>Old Dog Consulting</organization>
					</author>
					<date month="December" year="2009" />
				</front>
			</reference>
		</references>
	</back>
</rfc>
