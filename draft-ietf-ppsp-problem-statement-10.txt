PPSP                                                            Y. Zhang
Internet Draft                                              China Mobile
                                                                  N.Zong
                                                              HuaweiTech

Intended status: Informational                       September 19, 2012
Expires: March 2013



        Problem Statement and Requirements of Peer-to-Peer Streaming
                              Protocol (PPSP)
                 draft-ietf-ppsp-problem-statement-10.txt


Abstract

   Peer-to-Peer (P2P for short) streaming systems show more and more
   popularity in current Internet with proprietary protocols. This
   document identifies problems of the proprietary protocols, proposes a
   Peer to Peer Streaming Protocol (PPSP) including tracker and peer
   signaling components, and discusses the scope, requirements and uses
   cases of PPSP.



























zhang                   Expires March 19, 2013                  [Page 1]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012




Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html

   This Internet-Draft will expire on March 18, 2013.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors. All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document. Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document. Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.









zhang                  Expires March 19, 2013                 [Page 2]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012




Table of Contents


   1. Introduction  ................................................ 4
   2. Terminology and concepts. .................................... 5
   3. Problem statement  ........................................... 7
      3.1. Heterogeneous P2P traffic and P2P caches deployment ..... 7
      3.2. Latency efficiency difficulties ......................... 7
      3.3. Extended applicability in mobile and wireless environment 7
   4. PPSP: Standard peer to peer streaming protocols .............. 9
      4.1. Tracker protocol candidates discussion and design issues .9
      4.2. Peer protocol candidates discussion and design issues  . 10
   5. Use cases of PPSP  .......................................... 11
      5.1. Worldwide provision of live/VoD streaming .............. 11
      5.2. Cross-screen streaming ................................. 13
      5.3. Cache service supporting P2P streaming ................. 14
      5.4. Proxy service supporting P2P streaming ................. 15
         5.4.1. Home Networking Scenario .......................... 15
         5.4.2. Browser-based HTTP Streaming ...................... 16
   6. Requirements of PPSP ........................................ 17
      6.1. Basic Requirements ..................................... 17
      6.2. PPSP Tracker Protocol Requirements ..................... 18
      6.3. PPSP Peer Protocol Requirements ........................ 19
   7. Security Considerations  .................................... 21
   8. IANA Considerations  ........................................ 23
   9. Acknowledgments  ............................................ 23
   10. Informative References. .................................... 24



















zhang                  Expires March 19, 2013                 [Page 3]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012



1. Introduction

   Streaming traffic is among the largest and fastest growing traffic on
   the Internet [Cisco], where peer-to-peer (P2P) streaming contribute
   substantially. With the advantage of high scalability and fault
   tolerance against single point of failure, P2P streaming applications
   are able to distribute large-scale, live and video on demand (VoD)
   streaming programs to millions of audience with only a handful of
   servers. What's more, along with the new players like CDN providers
   joining in the effort of using P2P technologies in distributing their
   serving streaming content, there are more and more various players in
   P2P streaming ecosystem.

   Given the increasing integration of P2P streaming into the global
   content delivery infrastructure, the lack of an open, standard P2P
   streaming signaling protocol suite becomes a major missing component
   in the protocol stack. Almost all of existing systems use their
   proprietary protocols. Multiple, similar but proprietary protocols
   result in repetitious development efforts for new systems, and the
   lock-in effects lead to substantial difficulties in their integration
   with other players like CDN. For example, in the enhancement of
   existing caches and CDN systems to support P2P streaming, proprietary
   protocols may increase the complexity of the interaction with
   different P2P streaming applications.

   In this document we propose an open P2P Streaming Protocol, which is
   defined as PPSP, to standardize signaling operations in P2P streaming
   systems to solve the above problems.



















zhang                  Expires March 19, 2013                 [Page 4]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012




2. Terminology and concepts

   Chunk: A chunk is a basic unit of data block organized in P2P
   streaming for storage, scheduling, advertisement and exchange among
   peers [VoD]. A chunk size varies from several KBs to several MBs in
   different systems. In case of MBs size chunk scenario, a sub-chunk
   structure named piece is often defined to fit in a single transmitted
   packet. A streaming system may use different granularities for
   different usage, e.g., using chunks during data exchange, and using a
   larger unit such as a set of chunks during advertisement.

   Chunk ID: The identifier of a chunk in a content stream.

   Client: A client in general refers to the service requester in
   client/server computing paradigm. In this draft a client also refers
   to a participant in a P2P streaming system that only receives
   streaming content. In some cases, a node not having enough computing
   and storage capabilities will act as a client. Such node can be
   viewed as a specific type of peer.

   Content Distribution Network (CDN): A CDN is a collection of nodes
   that are deployed, in general, at the network edge like Points of
   Presence (POP) or Data Centers (DC) and that store content provided
   by the original content servers. Typically, CDN nodes serve content
   to the clients located nearby topologically.

   Live streaming: It refers to a scenario where all clients receive
   streaming content for the same ongoing event. It is desired that the
   lags between the play points of the clients and streaming source be
   small.

   P2P cache: A P2P cache refers to a network entity that stores
   (caches) P2P traffic in the network and, either transparently or
   explicitly, streams content to other peers.

   Peer: A peer refers to a participant in a P2P streaming system that
   not only receives streaming content, but also stores and streams
   streaming content to other participants.

   Peer list: A list of peers which are in a same swarm maintained by
   the tracker.  A peer can fetch the peer list of a swarm from the
   tracker or from other peers in order to know which peers have the
   required streaming content.




zhang                  Expires March 19, 2013                 [Page 5]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   Peer ID: The identifier of a peer such that other peers, or the
   tracker, can refer to the peer by using its ID.

   PPSP: The abbreviation of Peer-to-Peer Streaming Protocols. PPSP
   refer to the key signaling protocols among various P2P streaming
   system components, including the tracker and the peer.

   Tracker: A tracker refers to a directory server that maintains a list
   of peers participating in a specific audio/video channel or in the
   distribution of a streaming file. Also, the tracker answers peer list
   queries received from peers. The tracker is a logical component which
   can be centralized or distributed.

   Video-on-demand (VoD): It refers to a scenario where different
   clients may watch different parts of the same recorded media with
   downloaded content.

   Swarm: A swarm refers to a group of peers who exchange data to
   distribute chunks of the same content (e.g. video/audio program,
   digital file, etc) at a given time.

   Swarm ID: The identifier of a swarm containing a group of peers
   sharing a common streaming content.

























zhang                  Expires March 19, 2013                 [Page 6]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012




3. Problem statement

   The problems caused by proprietary protocols for P2P streaming
   applications are listed as follows.

3.1. Heterogeneous P2P traffic and P2P caches deployment


   ISPs are faced to different P2P streaming application introducing
   substantial traffic into their infrastructure, including their
   backbone and their exchange/interconnection points. P2P caches are
   used by ISPs in order to locally store content and hence reduce the
   P2P traffic. P2P caches usually operate at the chunk or file
   granularity.

   However, unlike Web traffic that is represented by HTTP packets and
   therefore allows any caching device to be deployed (as long as it
   supports HTTP), P2P traffic is originated by multiple P2P
   applications which require the ISPs to deploy different type of
   caches for the different types of P2P streams present in the network.

   This increases both engineering and operational costs dramatically.

3.2. Latency efficiency difficulties

   P2P streaming is often criticized due to its longer delays (e.g.,
   startup delay, seek delay and channel switch delay) compared to
   client/server streaming. Hybrid CDN/P2P is a good approach in order
   to address this problem [Hybrid CDN P2P].


   In the Hybrid CDN/P2P approach, the CDN takes two roles: media
   streaming server and P2P tracker. Similarly to what described in
   section 3.1, proprietary P2P protocols introduce complexity between
   peers and CDN trackers because the CDN trackers need to identify each
   different P2P streaming protocol. This increases the deployment cost
   of CDN.

3.3. Extended applicability in mobile and wireless environment

   Mobility and wireless are becoming increasingly important in today's
   Internet, where streaming service is a major usage. It's reported
   that the average volume of video traffic on mobile networks has risen
   up to 50% in the early of 2012 [ByteMobile]. There are multiple prior
   studies exploring P2P streaming in mobile and wireless networks


zhang                  Expires March 19, 2013                 [Page 7]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   [Mobile Streaming1] [Mobile Streaming2].


   However it's difficult to apply current P2P streaming protocols (even
   assuming we can re-use some of the proprietary ones) in mobile and
   wireless networks. Although smart handsets are more eligible to
   become peers with much higher bandwidth, CPU frequency, larger
   storage and memory than before, peer selection will become more
   challenging due to the increase and complexity of exchange between
   peers and trackers. Current P2P protocols are not well suited for
   these new requirements in the context of mobile and wireless
   networks.

   Following are some illustrative examples:
   First, the connections are unstable and expensive in terms of energy
   consumption and transmission (especially in uplink direction). Peers
   and trackers may need more information like packet loss rate, peer
   battery status and processing capability during peer selection.
   Unfortunately current protocols don't cover this kind of information.

   Second, current practices often use a "bitmap" message in order to
   exchange chunk availability. The message is of kilobytes in size and
   exchanged frequently, for example, several seconds. In a mobile
   environment with scarce bandwidth, the message size need to be
   shortened or it may require more efficient methods for expressing and
   distributing chunk availability information, which is different from
   current practice.

   Third, for a resource constraint peer like mobile handsets or set-top
   boxes (STB), there are severe contentions on limited resource when
   using proprietary protocols. The peer has to install many different
   streaming applications for different usages, e.g., some for movies
   and others for sports and each of these applications will compete for
   the same set of memories, flashes or hard disks(some may run in the 
   background even they are not invoked by the users). Open protocols creat 
   an opportunity to use one client software accommodating different P2P systems.
   This may alleviate this problem.











zhang                  Expires March 19, 2013                 [Page 8]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012




4. PPSP: Standard peer to peer streaming protocols

   PPSP is targeted to standardize signaling protocols for tracker-based
   architectures to solve the above problems that support either live or
   VoD streaming.

   The PPSP design includes a signaling protocol between trackers and
   peers (the PPSP "tracker protocol") and a signaling protocol among
   the peers (the PPSP "peer protocol") as shown in Figure 1. The two
   protocols enable peers to receive streaming data within the time
   constraints. The tracker protocol handles the initial and periodic
   exchange of meta-information between trackers and peers, such as
   peer-list and content information. The peer protocol controls the
   advertising and exchange of media data between the peers.

             +------------------------------------------------+
             |                                                |
             |     +--------------------------------+         |
             |     |            Tracker             |         |
             |     +--------------------------------+         |
             |        |     ^                   ^             |
             |Tracker |     | Tracker           |Tracker      |
             |Protocol|     | Protocol          |Protocol     |
             |        |     |                   |             |
             |        V     |                   |             |
             |     +---------+    Peer     +---------+        |
             |     |   Peer  |<----------->|   Peer  |        |
             |     +---------+   Protocol  +---------+        |
             |       | ^                                      |
             |       | |Peer                                  |
             |       | |Protocol                              |
             |       V |                                      |
             |     +---------------+                          |
             |     |      Peer     |                          |
             |     +---------------+                          |
             |                                                |
             |                                                |
             +------------------------------------------------+
                     Figure 1 PPSP System Architecture

4.1. Tracker protocol candidates discussion and design issues

   Tracker protocol: The tracker protocol is best modeled as a
   request/response protocol between peers and trackers, and will carry



zhang                  Expires March 19, 2013                 [Page 9]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   information needed for the selection of peers suitable for real-
   time/VoD streaming.

   One of the main aspects the new protocol has to address is the format
   of the protocol messages. Two options have been identified:

   Binary based: Binary based tracker protocols are widely used in
   practice, e.g., PPLive[PPLive] and PPStream [PPStream]. Binary based
   tracker protocol is simple with the smallest set of semantic
   definitions and efficient in peer and tracker resource usage,
   especially, for mobile and set-top box terminals.

   Text based: HTTP can be easily thought to be the candidate, being a
   text based request/response protocol. HTTP messages may be reused for
   PPSP semantics and if they don't match PPSP requirements, some new
   messages may be redefined. Another approach consists of using
   HTTP+XML combination, where HTTP is only used as the underlying
   transport protocol (in application-level) while tracker information
   and messages are defined in XML format.

   PPSP tracker protocol will select the best of the above options
   according to the requirements from both peer and tracker perspective
   and also taking into consideration deployment and operation
   perspectives.

4.2. Peer protocol candidates discussion and design issues

   Peer Protocol: The peer protocol is modeled as a gossip-like protocol
   with periodic exchanges of neighbor and media chunk availability
   information. Namely, the peer protocol is a content-centric protocol
   built around the abstraction of a cloud of participants disseminating
   the same data in ways and orders that are convenient to the
   participants [I-D.ietf-ppsp-peer-protocol]. In that respect and in
   light of the above requirements, typical HTTP is neither suitable nor
   efficient.

   We list two peer protocol candidates:


   Websockets for bidirectional HTTP: WebSockets is basically a
   bidirectional TCP connection derived from a HTTP connection hence
   allowing a bidirectional P2P transport over HTTP. On the negative
   side, TCP is not ideally suited for multi-party transfers of the same
   content (see Rationale section in I-D.ietf-ppsp-peer-protocol) and
   therefore it introduces implementation (i.e., code) complexity.




zhang                  Expires March 19, 2013                [Page 10]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   UDP based: Unlike TCP or HTTP, UDP is a datagram-based protocol
   without any sequential data stream abstraction which is, in most the
   cases, unnecessary for PPSP. Compared to the use of TCP, it reduces
   the per-connection footprint and complexity of TCP especially in
   resource constraint mobile cases.

   The PPSP peer protocol will discuss the protocol design rationales in
   detail.

5. Use cases of PPSP

5.1. Worldwide provision of live/VoD streaming

   The content provider can efficiently increase live streaming coverage
   by introducing PPSP in between different providers.

   Figure 2 shows the case of provider A broadcasting a TV program with
   the help of provider B and C for a wider coverage by introducing PPSP.
   Without PPSP, when users outside A requests TV program@A, the
   returned peer-list may include few local peers. This may affect the
   user experience. With PPSP, B and C can involve in the broadcasting.
   The providers often deploy in-network peers called super-nodes (SN
   for short) who have better stability and higher storage and bandwidth
   for better QoS. With the tracker protocol, the tracker@A can return a
   peer-list containing, in addition to peers@A addresses, the SNs owned
   by B and C. Hence User@B and User@C can exchange data (availability)
   with these local SNs using the peer protocol.


   Figure 3 shows the case of cooperative VoD provision by introducing
   PPSP inside CDN overlays and in between different CDNs. It is similar
   to Figure 2 except that the intermediate SNs are replaced by 3rd
   party CDN surrogates. The CDN nodes talk with the different streaming
   systems with the same PPSP protocols. Note that for compatibility
   reason both HTTP streaming and P2P streaming can be supported by CDN.

   The interaction between the CDN nodes can be executed by either
   existing (maybe proprietary) protocols or the PPSP peer protocol. The
   peer protocol is useful for building new CDN systems supporting
   streaming in a low cost.









zhang                  Expires March 19, 2013                [Page 11]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   +-------------------------------------------------------------------+
   |                                                                   |
   |                          +------------------+                     |
   |            +------------>| A's      Tracker |<----------+         |
   |            |             +------------------+           |         |
   |     Tracker|                ^              ^            |         |
   |    Protocol|         Tracker|              |Tracker     |Tracker  |
   |            |        Protocol|              |Protocol    |Protocol |
   |            |                |              |            |         |
   |            |                |              |            |         |
   |            v                v              v            v         |
   |      +------+ Peer    +------+            +------+    +------+    |
   |      | B's  |<------->| B's  |            | C's  |    | C's  |    |
   |      | SN1  |Protocol | SN2  |            | SN1  |    | SN2  |    |
   |      +------+         +------+            +------+    +------+    |
   |         ^  ^                                           ^ ^        |
   |         |  |                                           | |        |
   |         |  | Peer Protocol                Peer Protocol| |        |
   | Peer    |  +-------------+              +--------------+ |Peer    |
   | Protocol|                |              |                |protocol|
   |         |                |              |                |        |
   |         |                |              |                |        |
   |         |                |              |                |        |
   |         v                v              v                v        |
   |      +------+ Peer    +------+    +---------+  Peer   +---------+ |
   |      | A's  |<------> | B's  |    |A's      |<------> |C's      | |
   |      | User1|Protocol | User2|    | User1   |Protocol | User2   | |
   |      +------+         +------+    +---------+         +---------+ |
   |                                                                   |
   +-------------------------------------------------------------------+
                 Figure 2 Cooperative Vendors Interaction

















zhang                  Expires March 19, 2013                [Page 12]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   +-------------------------------------------------------------------+
   |                                                                   |
   |                   +-------------+    +--------------+             |
   |            +----->| A's Tracker |    |  B's Tracker |<---+        |
   |            |      +-------------+    +--------------+    |        |
   |     Tracker|              ^  ^        ^    ^             |        |
   |    Protocol|       Tracker|  |Tracker |    |Tracker      |Tracker |
   |            |      Protocol|  |Protocol|    |Protocol     |Protocol|
   |            |              |  |        |    |             |        |
   |            |              |  |        |    |             |        |
   |            v              v  |        |    v             v        |
   |      +------+ Peer   +------+|        |  +------+Internal+------+ |
   |      | CDN  |<------>| CDN  ||        |  | CDN  |<-----> | CDN  | |
   |      | Node1|Protocol| Node2||        |  | Node3|Protocol| Node4| |
   |      +------+        +------+|        |  +------+        +------+ |
   |         ^  ^                 |        |        ^         ^        |
   |         |  |                 |        |        |         |        |
   |         |  | Peer Protocol   |        |   HTTP |         |        |
   | Peer    |  +-------------+   |        | +------+         | Peer   |
   | Procotol|                |   |        | | Protocol       |protocol|
   |         |                | +-+        | |                |        |
   |         |                | |          | |                |        |
   |         |                | |          | |                |        |
   |         v                v v          v v                v        |
   |      +------+ Peer    +------+    +---------+  Peer   +---------+ |
   |      | A's  |<------> | A's  |    |B's      |<------> |B's      | |
   |      | User1|Protocol | User2|    | User3   |Protocol | User4   | |
   |      +------+         +------+    +---------+         +---------+ |
   |                                                                   |
   +-------------------------------------------------------------------+
                   Figure 3 CDN Supporting P2P Streaming

5.2. Cross-screen streaming

   In this scenario PC, STB/TV and mobile terminals from both fixed
   network and mobile/wireless network share the streaming content. With
   PPSP, peers can identify the types of access networks, average load,
   peer abilities and get to know what content other peers have even in
   different networks (potentially with the conversion of the content
   availability expression in different networks) as shown in Figure 4.

   Such information will play an important role on selecting suitable
   peers, e.g., a PC or STB is more likely to provide stable content and
   a mobile peer within a high-load cell is unlikely to be selected,
   which may otherwise lead to higher load on the base station.




zhang                  Expires March 19, 2013                [Page 13]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   +-------------------------------------------------------------------+
   |                                                                   |
   |      Tracker Protocol  +---------+   Tracker Protocol             |
   |        +-------------> | Tracker |<------------------+            |
   |        |               +---------+                   |            |
   |        |                    ^                        |            |
   |        |                    |                        |            |
   |        |                    |                        |            |
   |        V                    |                        V            |
   |    +------+                 |                +------------+       |
   |    |  STB |           Tracker Protocol       |Mobile Phone|       |
   |    +------+                 |                +------------+       |
   |        ^                    |                        ^            |
   |        |                    |                        |            |
   |        |                    |                        |            |
   |        |                    V                        |            |
   |        |Peer Protocol  +---------+    Peer Protocol  |            |
   |        +-------------> |    PC   |<------------------+            |
   |                        +---------+                                |
   |                                                                   |
   +-------------------------------------------------------------------+
              Figure 4 Heterogeneous P2P Streaming with PPSP

5.3. Cache service supporting P2P streaming

   In Figure 5, when peers request the P2P streaming data, the cache
   nodes intercept the requests and ask for the frequently visited
   content (or part of) on behalf of the peers. To do this, it asks the
   tracker for the peer-list and the tracker replies with external peers
   in the peer-list. After the cache nodes exchange data with these
   peers, it can also act as a peer and report what it caches to the
   tracker and serve requesting peers inside afterward. This operation
   greatly decreases the inter-network traffic and increases user
   experience.














zhang                  Expires March 19, 2013                [Page 14]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   The cache nodes do not need to update their library when new
   applications supporting PPSP are introduced, which reduces the cost.

   +----------------------------------------------------------------+
   |                                                                |
   |    Tracker Protocol +---------+                                |
   |  +----------------> | Tracker |                                |
   |  |                  +---------+                                |
   |  |                       ^                                     |
   |  |                       |                                     |
   |  |                       | Tracker Protocol                    |
   |  |                       |                                     |
   |  |                       |                                     |
   |  |             +---------|-------------------------------------|
   |  |             |         V                                     |
   |  |             |     +---------+                               |
   |  |  +----------|---> | Cache   |<-------------------+          |
   |  |  |          |     +---------+        Tracker/Peer|          |
   |  |  | Peer     |                          Protocol  |          |
   |  |  | Protocol |                                    |          |
   |  |  |          |                                    |          |
   |  |  |          |                                    |          |
   |  V  V          |                                    V          |
   |  +-----------+ |        ISP Domain             +------------+  |
   |  |  External | |                               |   Inside   |  |
   |  |  Peer     | |                               |   Peer     |  |
   |  +-----------+ |                               +------------+  |
   +----------------------------------------------------------------+

           Figure 5 Cache Service Supporting Streaming with PPSP

5.4.  Proxy service supporting P2P streaming

5.4.1. Home Networking Scenario

   For applications where the peer is not co-located with the media
   player in the same device (e.g. the peer is located in a home media
   gateway), we can use a PPSP proxy, as shown in figure 6.

   As shown in figure 6, the PPSP proxy terminates both the tracker and
   peer protocol allowing the legacy presentation devices to access P2P
   streaming content. In figure 6 the DLNA protocol [DLNA] is used in
   order to communicate with the presentation devices thanks to its wide
   deployment. Obviously, other protocols can also be used.





zhang                  Expires March 19, 2013                [Page 15]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


      +----------------------------------------------------------------+
      |                                                                |
      |    Tracker Protocol +---------+                                |
      |  +----------------> | Tracker |                                |
      |  |                  +---------+                                |
      |  |                       ^                                     |
      |  |                       |                                     |
      |  |                       | Tracker Protocol                    |
      |  |                       |                                     |
      |  |             +---------|-------------------------------------|
      |  |             |         V                                     |
      |  |             |     +---------+                               |
      |  |  +----------|---> |  PPSP   |<-------------------+          |
      |  |  |          |     |  Proxy  |       DLNA         |          |
      |  |  | Peer     |     +---------+       Protocol     |          |
      |  |  | Protocol |                                    |          |
      |  |  |          |                                    |          |
      |  V  V          |                                    V          |
      |  +-----------+ |        Home Domain            +------------+  |
      |  |  External | |                               | DLNA  Pres.|  |
      |  |  Peer     | |                               | Devices    |  |
      |  +-----------+ |                               +------------+  |
      +----------------------------------------------------------------+

              Figure 6 Proxy service Supporting P2P Streaming

5.4.2. Browser-based HTTP Streaming

   P2P Plug-ins can be used in browser-based environment in order to
   stream content. With P2P plug-ins, HTTP streaming can be turned into
   a de facto P2P streaming. From the browser (and hence the user)
   perspective, it's just HTTP based streaming but the PPSP capable
   plug-in can actually accelerate the process by leveraging streams
   from multiple sources/peers [P2PYoutube]. In this case the plug-ins
   behave just like the proxy.













zhang                  Expires March 19, 2013                [Page 16]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


6. Requirements of PPSP

   This section enumerates the requirements that should be considered
   when designing PPSP.

6.1. Basic Requirements

   PPSP.REQ-1: The tracker and the peer protocol SHOULD allow peers to
   receive streaming content within the required time constraints.

   PPSP.REQ-2: Each peer MUST have a unique ID (i.e. peer ID) in a swarm.

   It's a basic requirement for a peer to be uniquely identified in a
   swarm that other peers or tracker can refer to the peer by ID.

   PPSP.REQ-3: The streaming content MUST be uniquely identified by a
   swarm ID.

   A swarm refers to a group of peers sharing the same streaming content.
   A swarm ID uniquely identifies a swarm. The swarm ID can be used in
   two cases: 1) a peer requests the tracker for the peer list indexed
   by a swarm ID; 2) a peer tells the tracker about the swarms it
   belongs to.

   PPSP.REQ-4: The streaming content MUST allow to be partitioned into
   chunks.

   A key characteristic of P2P streaming system is allowing the data
   fetching from different peers concurrently. Therefore, the whole
   streaming content must allow to be partitioned into small pieces or
   chunks for transmission between peers.

   PPSP.REQ-5: Each chunk MUST have a unique ID (i.e. chunk ID) in the
   swarm.

   Each chunk must have a unique ID in the swarm so that the peer can
   understand which chunks are stored in which peers and which chunks
   are requested by other peers. An example for generating the chunk ID
   is the bitmap approach [I-D.ietf-ppsp-survey].

   PPSP.REQ-6: The tracker protocol and peer protocol are recommended to
   be carried over TCP or UDP.

   PPSP.REQ-7: The tracker and peer protocol together MUST facilitate
   acceptable QoS (e.g. low startup delay, low channel/content switching
   time and minimal end-to-end delay) for both live and VoD streaming
   even for very popular content. The tracker and peer protocol do not


zhang                  Expires March 19, 2013                [Page 17]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   include the algorithm required for scalable streaming. However, the
   tracker and peer protocol SHALL NOT restrict or place limits on any
   such algorithm.

   There are basic QoS requirements for streaming systems. Setup time to
   receive a new streaming channel or to switch between channels should
   be reasonably small. End to end delay, which consists of the time
   between content generation (e.g., a camera) and content consumption
   (e.g., a monitor), will become critical in case of live streaming
   especially in provisioning of sport events where end to end delay of
   1 minute and more are not acceptable.

   For instance, the tracker and peer protocol can carry QoS related
   parameters (e.g. video quality and delay requirements) together with
   the priorities of these parameters in addition to the measured QoS
   situation (e.g., performance, available uplink bandwidth) of content
   providing peers.

   There are also some other possible mechanisms like addition of super
   peers, in-network storage, request of alternative peer addresses, and
   the usage of QoS information for advanced peer selection mechanisms.

6.2. PPSP Tracker Protocol Requirements

   The tracker protocol defines how the peers report and request
   information to/from the tracker and how the tracker replies to the
   requests. The tracker discovery and the possible communication
   between trackers are out of the scope of tracker protocol.

   PPSP.TP.REQ-1: The tracker MUST implement the tracker protocol for
   receiving queries, sending the corresponding replies and periodical
   send peer status reports/updates.

   PPSP.TP.REQ-2: The peer MUST implement the tracker protocol for
   sending queries and periodical peer status reports/updates to the
   tracker and receiving the corresponding replies.

   PPSP.TP.REQ-3: The tracker request message MUST allow the requesting
   peer to solicit the peer list from the tracker with respect to a
   specific swarm ID.

   The tracker request message may also include the requesting peer's
   preference parameter (e.g. preferred number of peers in the peer list)
   or preferred downloading bandwidth. The tracker will then be able to
   select an appropriate set of peers for the requesting peer according
   to the preference.



zhang                  Expires March 19, 2013                [Page 18]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   PPSP.TP.REQ-4: The tracker reply message MUST allow the tracker to
   offer the peer list to the requesting peer with respect of a specific
   swarm ID.

   PPSP.TP.REQ-5: The tracker SHOULD support generating the peer list
   with the help of traffic optimization services, e.g. ALTO [I-D.ietf-
   alto-protocol].

   PPSP.TP.REQ-6: The peer status report/update MUST have the ability to
   inform the tracker about the peer's activity in the swarm.

   PPSP.TP.REQ-7: The chunk availability information of the peer SHOULD
   be reported to tracker when tracker needs such information to steer
   peer selection. The chunk information MUST at least contain the
   chunk ID.

   PPSP.TP.REQ-8: The chunk availability information between peer and
   tracker MUST be expressed as compact as possible.

   The peers may report chunk availability digest information (i.e.,
   compact expression of chunk availability) to the tracker when
   possible in order to decrease the bandwidth consumption in mobile
   networks. For example, if a peer has a bitmap like 111111...1(one
   hundred continuous 1)xxx..., the one hundred continuous "1" can be
   expressed by one byte with seven bits representing the number of "1",
   i.e., "one hundred" and one bit representing the continuous sequence
   is "1" or "0". In this example, 100-8=92 bits are saved. Considering
   the frequency of exchange of chunk availability and the fact that
   many bitmaps have a quite long length of continuous "1" or "0", such
   compression is quite useful.

   PPSP.TP.REQ-9: The status of the peer SHOULD be reported to the
   tracker when tracker needs such information in order to steer peer
   selection.

   For example, peer status can be online time, physical link status
   including DSL/WiFi/etc., battery status, processing capability and
   other capabilities of the peer. Therefore, the tracker is able to
   select better candidate peers for streaming.

6.3. PPSP Peer Protocol Requirements

   The peer protocol defines how the peers advertise streaming content
   availability and exchange status with each other. The peer protocol
   also defines the requests and responses of the chunks among the
   peers.



zhang                  Expires March 19, 2013                [Page 19]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   PPSP.PP.REQ-1: The streaming content availability request message
   MUST allow the peer to solicit the chunk information from other peers
   in the peer list. The chunk information MUST at least contain the
   chunk ID. This chunk availability information MUST NOT be passed on
   to other peer, unless validated (e.g. prevent hearsay and DoS).

   PPSP.PP.REQ-2: The streaming content availability reply message MUST
   allow the peer to offer the information of the chunks in its content
   buffer. The chunk information MUST at least contain the chunk ID.

   PPSP.PP.REQ-3: The streaming content availability request message
   SHOULD allow the peer to solicit an additional list of peers to that
   received from the tracker - with the same swarm ID. The reply
   message MUST contain swarm-membership information of the peers that
   have explicitly indicated they are part of the swarm, verifiable by
   the receiver. This additional list of peers MUST only contain peers
   which have been checked to be valid and online recently (e.g. prevent
   hearsay and DoS).

   It is possible that a peer may need additional peers for certain
   streaming content. Therefore, it is allowed that the peer
   communicates with other peers in the current peer list to obtain an
   additional list of peers in the same swarm.

   PPSP.PP.REQ-4: Streaming content availability update message among
   the peers MUST be supported by the peer protocol. The peer protocol
   MUST implement either pull-based, push-based or both.

   Due to the dynamic change of the buffered streaming content in each
   peer and the frequent join/leave of peers in the swarm, the streaming
   content availability among a peer's neighbors (i.e. the peers known
   to a peer by getting the peer list from either tracker or peers)
   always changes and thus requires being updated on time. This update
   should be done at least on demand. For example, when a peer requires
   finding more peers with certain chunks, it sends a message to some
   other peers in the swarm for streaming content availability update.
   Alternatively, each peer in the swarm can advertise its streaming
   content availability to some other peers periodically. However, the
   detailed mechanisms for this update such as how far to spread the
   update message, how often to send this update message, etc. should
   leave to the algorithms, rather than protocol concerns.

   PPSP.PP.REQ-5: The chunk availability information between peers MUST
   be expressed as compactly as possible.

   In PP.REQ-1/2/4, the peers may exchange chunk availability digest
   information with other peers, when possible, in order to decrease the


zhang                  Expires March 19, 2013                [Page 20]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   messages bandwidth consumption.


   PPSP.PP.REQ-6: The peer status report/update SHOULD be advertised
   among the peers in order to reflect the status of the peer. Peer
   status information should be advertised among the peers via the
   peer status report/update message. For example, peer status can be
   online time, physical link status including DSL/WiFi/etc, battery
   status, processing capability, and other capabilities of the peer.
   With such information, a peer can select more appropriate peers for
   streaming.

   PPSP.PP.REQ-7: The peers MUST implement the peer protocol for chunk
   data (not availability information) requests and responses among the
   peers before the streaming content is transmitted.

7. Security Considerations

   This document discusses the problem statement and requirements around
   P2P streaming protocols without specifying the protocols. However we
   believe it is important for the reader to understand areas of
   security introduced by the P2P nature of the proposed solution. The
   main issue is the usage of un-trusted entities (peers) for service
   provisioning. For example, malicious peers may:

   - Originate denial of service (DOS) attacks to the trackers by
   sending large amount of requests with the tracker protocol;
   - Originate fake information on behalf of other peers;
   - Originate fake information about chunk availability;

   For example, malicious peers/trackers may:
   - Originate reply instead of the regular tracker (man in the middle
     attack).

   We list some important security requirements for PPSP protocols as
   below:

   PPSP.SEC.REQ-1: PPSP MUST support closed swarms, where the peers are
   authenticated.

   This ensures that only the authenticated users can access the
   original media in the P2P streaming system. This can be achieved by
   security mechanisms such as user authentication and/or key management
   scheme.





zhang                  Expires March 19, 2013                [Page 21]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   PPSP.SEC.REQ-2: Confidentiality of the streaming content in PPSP
   SHOULD be supported and the corresponding key management scheme
   SHOULD scale well in P2P streaming systems.

   PPSP.SEC.REQ-3: PPSP MUST provide an option in order to encrypt the
   data exchange among the PPSP entities.

   PPSP.SEC.REQ-4: PPSP MUST have mechanisms in order to limit potential
   damage caused by malfunctioning and badly behaving peers in the P2P
   streaming system.

   Such an attack will degrade the quality of the rendered media at the
   receiver. For example, in a P2P live streaming system a polluter can
   introduce corrupted chunks. Each receiver integrates into its
   playback stream the polluted chunks it receives from its neighbors.
   Since the peers forwards chunks to other peers, the polluted content
   can potentially spread through the P2P streaming network.

   PPSP.SEC.REQ-5: PPSP SHOULD support identifying badly behaving peers,
   and exclude or reject them from the P2P streaming system.

   PPSP.SEC.REQ-6: PPSP MUST prevent peers from DoS attacks which will
   exhaust the available resources of the P2P streaming system.

   Given the prevalence of DoS attacks in the Internet, it is important
   to realize that a similar threat could exist in a large-scale
   streaming system where attackers are capable of consuming a lot of
   resources with just a small amount of effort.

   PPSP.SEC.REQ-7: PPSP SHOULD be robust, i.e., when centralized tracker
   fails, the P2P streaming system SHOULD still work by supporting
   distributed trackers.

   PPSP.SEC.REQ-8: Existing P2P security mechanisms SHOULD be re-used as
   much as possible in PPSP, to avoid developing new security mechanisms.

   PPSP.SEC.REQ-9: Integrity of the streaming content in PPSP MUST be
   supported to provide a peer with the possibility to identify
   unauthentic media content (undesirable modified by other entities
   rather than its genuine source). The corresponding checksum
   distribution and verification scheme SHOULD scale well in P2P
   streaming system and be robust against distrustful trackers/peers.

   The PPSP protocol specifications will document the expected threats
   (and how they will be mitigated by each protocol) and also
   considerations on threats and mitigations when combining both
   protocols in an application. This will include privacy of the users


zhang                  Expires March 19, 2013                [Page 22]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


   and protection of the content distribution. Protection of the content
   by Digital Rights Management (DRM) is outside the scope of the PPSP.

8. IANA Considerations

   This document has no actions for IANA.

9. Acknowledgments

   Thank you to J.Seng, G. Camarillo, R. Yang, C. Schmidt, R. Cruz and S.
   Previdi for contribution to many sections of this draft. Thank you to
   C. Williams, V. Pasual and L. Xiao for contributions to PPSP
   requirements section.
   We would like to acknowledge the following people who provided
   review, feedback and suggestions to this document: M. Stiemerling, D.
   Bryan, E. Marocco, V. Gurbani, R. Even, H. Zhang, D. Zhang, J. Lei,
   Y.Gu, H.Song, X.Jiang, J.Seedorf, D.Saumitra, A.Rahman, L.Deng,
   J.Pouwelse, A.Bakker and W.Eddy.

   This document was prepared using 2-Word-v2.0.template.dot.




























zhang                  Expires March 19, 2013                [Page 23]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012


10. Informative References

   [Cisco] Cisco Visual Networking Index: Forecast and Methodology,
   2009-2014,
   http://www.cisco.com/en/US/solutions/collateral/ns341/ns525/ns537/ns7
   05/ns827/white_paper_c11-
   481360_ns827_Networking_Solutions_White_Paper.html

   [VoD] Y. Huang et al, Challenges, "Design and Analysis of a Large-
   scale P2P-VoD System", Sigcomm08.

   [ByteMobile] http://www.bytemobile.com/news-
   events/2012/archive_230212.html

   [Mobile Streaming1] Streaming to Mobile Users in a Peer-to-Peer
   Network, J. Noh et al, MOBIMEDIA '09.

   [Mobile Streaming2] J.Peltotaloet al.,"A real-time Peer-to-Peer
   streaming system for mobile networking environment", in Proceedings
   of the INFOCOM and Workshop on Mobile Video Delivery (MoVID '09).

   [I-D.ietf-alto-protocol]R. Alimi et al, "ALTO Protocol", draft-ietf-
   alto-protocol-10 (work in progress), October 2011.

   [Hybrid CDN P2P]D. Xu et al, "Analysis of a CDN-P2P hybrid
   architecture for cost-effective streaming media distribution,"
   Springer Multimedia Systems, vol.11, no.4, pp.383-399, 2006.

   [I-D.ietf-ppsp-survey] Y. Gu et al, "Survey of P2P Streaming
   Applications", draft-ietf-ppsp-survey-02 (work in progress), July
   2011.

   [PPTV] http://www.pptv.com

   [PPStream] http://www.ppstream.com

   [I-D.ietf-ppsp-peer-protocol] A. Bakker et al, Peer-to-Peer Streaming
   Peer Protocol (PPSPP),draft-ietf-ppsp-peer-protocol-02, (work in
   progress), June 2012.

   [DLNA] http://www.dlna.org

   [P2PYoutube] https://addons.opera.com/en/extensions/details/p2p-
   youtube/





zhang                  Expires March 19, 2013                [Page 24]

Internet-Draft   Problem Statement and Requirements of PPSP   September 2012




Authors' Addresses

   Yunfei Zhang
   China Mobile Communication Corporation
   zhangyunfei@chinamobile.com

   NingZong
   Huawei Technologies Co., Ltd.
   zongning@huawei.com





































zhang                  Expires March 19, 2013                [Page 25]


