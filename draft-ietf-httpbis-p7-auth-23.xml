<?xml version="1.0" encoding="UTF-8"?>
<!--
    This XML document is the output of clean-for-DTD.xslt; a tool that strips
    extensions to RFC2629(bis) from documents for processing with xml2rfc.
-->
<?xml-stylesheet type='text/xsl' href='../myxml2rfc.xslt'?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no" ?>
<?rfc linkmailto="no" ?>
<?rfc editing="no" ?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<!DOCTYPE rfc
  PUBLIC "" "rfc2629.dtd">
<rfc obsoletes="2616" updates="2617" category="std" ipr="pre5378Trust200902" docName="draft-ietf-httpbis-p7-auth-23">


<front>

  <title abbrev="HTTP/1.1 Authentication">Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>

  <author initials="R." surname="Fielding" fullname="Roy T. Fielding" role="editor">
    <organization abbrev="Adobe">Adobe Systems Incorporated</organization>
    <address>
      <postal>
        <street>345 Park Ave</street>
        <city>San Jose</city>
        <region>CA</region>
        <code>95110</code>
        <country>USA</country>
      </postal>
      <email>fielding@gbiv.com</email>
      <uri>http://roy.gbiv.com/</uri>
    </address>
  </author>

  <author initials="J. F." surname="Reschke" fullname="Julian F. Reschke" role="editor">
    <organization abbrev="greenbytes">greenbytes GmbH</organization>
    <address>
      <postal>
        <street>Hafenweg 16</street>
        <city>Muenster</city><region>NW</region><code>48155</code>
        <country>Germany</country>
      </postal>
      <email>julian.reschke@greenbytes.de</email>
      <uri>http://greenbytes.de/tech/webdav/</uri>
    </address>
  </author>

  <date month="July" year="2013" day="15"/>
  <workgroup>HTTPbis Working Group</workgroup>

<abstract>
<t>
   The Hypertext Transfer Protocol (HTTP) is an application-level protocol for
   distributed, collaborative, hypermedia information systems. This document
   defines the HTTP Authentication framework.
</t>
</abstract>

<note title="Editorial Note (To be removed by RFC Editor)">
  <t>
    Discussion of this draft takes place on the HTTPBIS working group
    mailing list (ietf-http-wg@w3.org), which is archived at
    <eref target="http://lists.w3.org/Archives/Public/ietf-http-wg/"/>.
  </t>
  <t>
    The current issues list is at
    <eref target="http://tools.ietf.org/wg/httpbis/trac/report/3"/> and related
    documents (including fancy diffs) can be found at
    <eref target="http://tools.ietf.org/wg/httpbis/"/>.
  </t>
  <t>
    The changes in this draft are summarized in <xref target="changes.since.22"/>.
  </t>
</note>
</front>
<middle>
<section title="Introduction" anchor="introduction">
<t>
   This document defines HTTP/1.1 access control and authentication. It
   includes the relevant parts of RFC 2616
   with only minor changes (<xref target="RFC2616"/>), plus the general framework for HTTP authentication,
   as previously defined in "HTTP Authentication: Basic and Digest Access
   Authentication" (<xref target="RFC2617"/>).
</t>
<t>
   HTTP provides several OPTIONAL challenge-response authentication
   schemes that can be used by a server to challenge a client request and
   by a client to provide authentication information. The "basic" and "digest"
   authentication schemes continue to be specified in
   RFC 2617.
</t>

<section title="Conformance and Error Handling" anchor="conformance">
<t>
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in <xref target="RFC2119"/>.
</t>
<t>
   Conformance criteria and considerations regarding error handling
   are defined in Section 2.5 of <xref target="Part1"/>.
</t>
</section>

<section title="Syntax Notation" anchor="notation">
<t>
   This specification uses the Augmented Backus-Naur Form (ABNF) notation
   of <xref target="RFC5234"/> with the list rule extension defined in
   Section 1.2 of <xref target="Part1"/>. <xref target="imported.abnf"/> describes rules imported from
   other documents. <xref target="collected.abnf"/> shows the collected ABNF
   with the list rule expanded.
</t>
</section>
</section>

<section title="Access Authentication Framework" anchor="access.authentication.framework">

<section title="Challenge and Response" anchor="challenge.and.response">
  
  
  
  
  
<t>
   HTTP provides a simple challenge-response authentication framework
   that can be used by a server to challenge a client request and by a
   client to provide authentication information. It uses a case-insensitive
   token as a means to identify the authentication scheme, followed
   by additional information necessary for achieving authentication via that
   scheme. The latter can either be a comma-separated list of parameters or a
   single sequence of characters capable of holding base64-encoded
   information.
</t>
<t>
   Parameters are name-value pairs where the name is matched case-insensitively,
   and each parameter name MUST only occur once per challenge.
</t>
<figure><iref primary="true" item="Grammar" subitem="auth-scheme"/><iref primary="true" item="Grammar" subitem="auth-param"/><iref primary="true" item="Grammar" subitem="token68"/><artwork type="abnf2616"><![CDATA[
  auth-scheme    = token
  
  auth-param     = token BWS "=" BWS ( token / quoted-string )

  token68        = 1*( ALPHA / DIGIT /
                       "-" / "." / "_" / "~" / "+" / "/" ) *"=" 
]]></artwork></figure>
<t>
   The "token68" syntax allows the 66 unreserved URI characters (<xref target="RFC3986"/>),
   plus a few others, so that it can hold a base64, base64url (URL and filename
   safe alphabet), base32, or base16 (hex) encoding, with or without padding, but
   excluding whitespace (<xref target="RFC4648"/>). 
</t>
<t>
   The <xref target="status.401" format="none">401 (Unauthorized)</xref> response message is used by an origin server
   to challenge the authorization of a user agent. This response MUST
   include a <xref target="header.www-authenticate" format="none">WWW-Authenticate</xref> header field containing at least one
   challenge applicable to the requested resource.
</t>
<t>   
   The <xref target="status.407" format="none">407 (Proxy Authentication Required)</xref> response message is
   used by a proxy to challenge the authorization of a client and MUST
   include a <xref target="header.proxy-authenticate" format="none">Proxy-Authenticate</xref> header field containing at least
   one challenge applicable to the proxy for the requested resource.
</t>
<figure><iref primary="true" item="Grammar" subitem="challenge"/><artwork type="abnf2616"><![CDATA[
  challenge   = auth-scheme [ 1*SP ( token68 / #auth-param ) ]
]]></artwork></figure>
<t><list>
  <t>
     Note: User agents will need to take special care in parsing the
     <xref target="header.www-authenticate" format="none">WWW-Authenticate</xref> and <xref target="header.proxy-authenticate" format="none">Proxy-Authenticate</xref>
     header field values because they can contain more than one challenge, or
     if more than one of each is provided, since the contents of a challenge
     can itself contain a comma-separated list of authentication parameters.
  </t>
</list></t>
<t><list>
  <t>
     Note: Many clients fail to parse challenges containing unknown
     schemes. A workaround for this problem is to list well-supported schemes
     (such as "basic") first.<!-- see http://greenbytes.de/tech/tc/httpauth/#multibasicunknown2 -->
  </t>
</list></t>
<t>
   A user agent that wishes to authenticate itself with an origin server
   — usually, but not necessarily, after receiving a <xref target="status.401" format="none">401 (Unauthorized)</xref>
   — can do so by including an <xref target="header.authorization" format="none">Authorization</xref> header field with the
   request.
</t>
<t>   
   A client that wishes to authenticate itself with a proxy — usually,
   but not necessarily, after receiving a <xref target="status.407" format="none">407 (Proxy Authentication Required)</xref>
   — can do so by including a <xref target="header.proxy-authorization" format="none">Proxy-Authorization</xref> header field with the
   request.
</t>
<t>
   Both the <xref target="header.authorization" format="none">Authorization</xref> field value and the <xref target="header.proxy-authorization" format="none">Proxy-Authorization</xref> field value
   contain the client's credentials for the realm of the resource being
   requested, based upon a challenge received in a response (possibly at
   some point in the past). When creating their values, the user agent ought to
   do so by selecting the challenge with what it considers to be the most
   secure auth-scheme that it understands, obtaining credentials from the user
   as appropriate.
</t>
<figure><iref primary="true" item="Grammar" subitem="credentials"/><artwork type="abnf2616"><![CDATA[
  credentials = auth-scheme [ 1*SP ( token68 / #auth-param ) ]
]]></artwork></figure>
<t>
   Upon a request for a protected resource that omits credentials, contains
   invalid credentials (e.g., a bad password) or partial credentials (e.g.,
   when the authentication scheme requires more than one round trip), an origin
   server SHOULD send a <xref target="status.401" format="none">401 (Unauthorized)</xref> response that
   contains a <xref target="header.www-authenticate" format="none">WWW-Authenticate</xref> header field with at least one
   (possibly new) challenge applicable to the requested resource.
</t>
<t>
   Likewise, upon a request that requires authentication by proxies that omit
   credentials or contain invalid or partial credentials, a proxy SHOULD
   send a <xref target="status.407" format="none">407 (Proxy Authentication Required)</xref> response that
   contains a <xref target="header.proxy-authenticate" format="none">Proxy-Authenticate</xref> header field with a (possibly
   new) challenge applicable to the proxy.
</t>
<t>
   A server receiving credentials that are valid, but not adequate to gain
   access, ought to respond with the 403 (Forbidden) status code (Section 6.5.3 of <xref target="Part2"/>).
</t>
<t>
   The HTTP protocol does not restrict applications to this simple
   challenge-response framework for access authentication. Additional
   mechanisms MAY be used, such as encryption at the transport level or
   via message encapsulation, and with additional header fields
   specifying authentication information. However, such additional
   mechanisms are not defined by this specification.
</t>
<t>
   Proxies MUST forward the <xref target="header.www-authenticate" format="none">WWW-Authenticate</xref> and
   <xref target="header.authorization" format="none">Authorization</xref> header fields unmodified and follow the rules
   found in <xref target="header.authorization"/>.
</t>
</section>

<section title="Protection Space (Realm)" anchor="protection.space">
  <iref item="Protection Space"/>
  <iref item="Realm"/>
  <iref item="Canonical Root URI"/>
<t>
   The authentication parameter realm is reserved for use by authentication
   schemes that wish to indicate the scope of protection.
</t>
<t>
   A protection space is defined by the canonical root URI (the
   scheme and authority components of the effective request URI; see
   Section 5.5 of <xref target="Part1"/>) of the
   server being accessed, in combination with the realm value if present.
   These realms allow the protected resources on a server to be
   partitioned into a set of protection spaces, each with its own
   authentication scheme and/or authorization database. The realm value
   is a string, generally assigned by the origin server, that can have
   additional semantics specific to the authentication scheme. Note that a
   response can have multiple challenges with the same auth-scheme but
   different realms.
</t>
<t>
   The protection space determines the domain over which credentials can
   be automatically applied. If a prior request has been authorized, the
   same credentials MAY be reused for all other requests within that
   protection space for a period of time determined by the
   authentication scheme, parameters, and/or user preference. Unless
   specifically allowed by the authentication scheme, a single protection
   space cannot extend outside the scope of its server.
</t>
<t>
   For historical reasons, senders MUST only generate the quoted-string syntax.
   Recipients might have to support both token and quoted-string syntax for
   maximum interoperability with existing clients that have been accepting both
   notations for a long time.
</t>
</section>

</section>

<section title="Status Code Definitions" anchor="status.code.definitions">
<section title="401 Unauthorized" anchor="status.401">
  <iref primary="true" item="401 Unauthorized (status code)"/>
  
<t>
   The 401 (Unauthorized) status code indicates that the
   request has not been applied because it lacks valid authentication
   credentials for the target resource. The origin server MUST send a
   <xref target="header.www-authenticate" format="none">WWW-Authenticate</xref> header field (<xref target="header.www-authenticate"/>)
   containing at least one challenge applicable to the target resource.
   If the request included authentication credentials, then the 401 response
   indicates that authorization has been refused for those credentials.
   The user agent MAY repeat the request with a new or replaced
   <xref target="header.authorization" format="none">Authorization</xref> header field (<xref target="header.authorization"/>).
   If the 401 response contains the same challenge as the prior response, and
   the user agent has already attempted authentication at least once, then the
   user agent SHOULD present the enclosed representation to the user, since
   it usually contains relevant diagnostic information.
</t>
</section>
<section title="407 Proxy Authentication Required" anchor="status.407">
  <iref primary="true" item="407 Proxy Authentication Required (status code)"/>
  
<t>
   The 407 (Proxy Authentication Required) status code is
   similar to <xref target="status.401" format="none">401 (Unauthorized)</xref>, but indicates that the client
   needs to authenticate itself in order to use a proxy.
   The proxy MUST send a <xref target="header.proxy-authenticate" format="none">Proxy-Authenticate</xref> header field
   (<xref target="header.proxy-authenticate"/>) containing a challenge
   applicable to that proxy for the target resource. The client MAY repeat
   the request with a new or replaced <xref target="header.proxy-authorization" format="none">Proxy-Authorization</xref>
   header field (<xref target="header.proxy-authorization"/>).
</t>
</section>
</section>

<section title="Header Field Definitions" anchor="header.field.definitions">
<t>
   This section defines the syntax and semantics of HTTP/1.1 header fields
   related to authentication.
</t>

<section title="Authorization" anchor="header.authorization">
  <iref primary="true" item="Authorization header field"/>
  
<t>
   The "Authorization" header field allows a user agent to authenticate
   itself with an origin server — usually, but not necessarily, after receiving a <xref target="status.401" format="none">401
   (Unauthorized)</xref> response. Its value consists of credentials containing 
   information of the user agent for the realm of the resource being
   requested.
</t>
<figure><iref primary="true" item="Grammar" subitem="Authorization"/><artwork type="abnf2616"><![CDATA[
  Authorization = credentials
]]></artwork></figure>
<t>
   If a request is
   authenticated and a realm specified, the same credentials SHOULD
   be valid for all other requests within this realm (assuming that
   the authentication scheme itself does not require otherwise, such
   as credentials that vary according to a challenge value or using
   synchronized clocks).
</t>
<t>
   See Section 3.2 of <xref target="Part6"/> for details of and requirements
   pertaining to handling of the Authorization field by HTTP caches.
</t>
</section>

<section title="Proxy-Authenticate" anchor="header.proxy-authenticate">
  <iref primary="true" item="Proxy-Authenticate header field"/>
  
<t>
   The "Proxy-Authenticate" header field consists of at least one
   challenge that indicates the authentication scheme(s) and parameters
   applicable to the proxy for this effective request URI (Section 5.5 of <xref target="Part1"/>).
   It MUST be included as part of a <xref target="status.407" format="none">407 (Proxy Authentication Required)</xref> response.
</t>
<figure><iref primary="true" item="Grammar" subitem="Proxy-Authenticate"/><artwork type="abnf2616"><![CDATA[
  Proxy-Authenticate = 1#challenge
]]></artwork></figure>
<t>
   Unlike <xref target="header.www-authenticate" format="none">WWW-Authenticate</xref>, the Proxy-Authenticate header field
   applies only to the current connection, and intermediaries SHOULD NOT
   forward it to downstream clients. However, an intermediate proxy might need
   to obtain its own credentials by requesting them from the downstream client,
   which in some circumstances will appear as if the proxy is forwarding the
   Proxy-Authenticate header field.
</t>
<t>
   Note that the parsing considerations for <xref target="header.www-authenticate" format="none">WWW-Authenticate</xref>
   apply to this header field as well; see <xref target="header.www-authenticate"/>
   for details.
</t>
</section>

<section title="Proxy-Authorization" anchor="header.proxy-authorization">
  <iref primary="true" item="Proxy-Authorization header field"/>
  
<t>
   The "Proxy-Authorization" header field allows the client to
   identify itself (or its user) to a proxy that requires
   authentication. Its value consists of credentials containing the
   authentication information of the client for the proxy and/or realm of the
   resource being requested.
</t>
<figure><iref primary="true" item="Grammar" subitem="Proxy-Authorization"/><artwork type="abnf2616"><![CDATA[
  Proxy-Authorization = credentials
]]></artwork></figure>
<t>
   Unlike <xref target="header.authorization" format="none">Authorization</xref>, the Proxy-Authorization header field applies only to
   the next outbound proxy that demanded authentication using the <xref target="header.proxy-authenticate" format="none">Proxy-Authenticate</xref>
   field. When multiple proxies are used in a chain, the
   Proxy-Authorization header field is consumed by the first outbound
   proxy that was expecting to receive credentials. A proxy MAY relay
   the credentials from the client request to the next proxy if that is
   the mechanism by which the proxies cooperatively authenticate a given
   request.
</t>
</section>

<section title="WWW-Authenticate" anchor="header.www-authenticate">
  <iref primary="true" item="WWW-Authenticate header field"/>
  
<t>
   The "WWW-Authenticate" header field consists of at least one
   challenge that indicates the authentication scheme(s) and parameters
   applicable to the effective request URI (Section 5.5 of <xref target="Part1"/>).
</t>
<t>   
   It MUST be included in <xref target="status.401" format="none">401 (Unauthorized)</xref> response messages and MAY be
   included in other response messages to indicate that supplying credentials
   (or different credentials) might affect the response.
</t>
<figure><iref primary="true" item="Grammar" subitem="WWW-Authenticate"/><artwork type="abnf2616"><![CDATA[
  WWW-Authenticate = 1#challenge
]]></artwork></figure>
<t>
   User agents are advised to take special care in parsing the WWW-Authenticate
   field value as it might contain more than one challenge,
   or if more than one WWW-Authenticate header field is provided, the
   contents of a challenge itself can contain a comma-separated list of
   authentication parameters.
</t>
<figure>
  <preamble>For instance:</preamble>
  <artwork type="example"><![CDATA[
  WWW-Authenticate: Newauth realm="apps", type=1,
                    title="Login to \"apps\"", Basic realm="simple"
]]></artwork>
  <postamble>
  This header field contains two challenges; one for the "Newauth" scheme
  with a realm value of "apps", and two additional parameters "type" and
  "title", and another one for the "Basic" scheme with a realm value of
  "simple".
</postamble></figure>
<t><list>
  <t>
    Note: The challenge grammar production uses the list syntax as 
    well. Therefore, a sequence of comma, whitespace, and comma can be
    considered both as applying to the preceding challenge, or to be an
    empty entry in the list of challenges. In practice, this ambiguity
    does not affect the semantics of the header field value and thus is
    harmless.
  </t>
</list></t>
</section>

</section>

<section title="IANA Considerations" anchor="IANA.considerations">

<section title="Authentication Scheme Registry" anchor="authentication.scheme.registry">
<t>
   The HTTP Authentication Scheme Registry defines the name space for the
   authentication schemes in challenges and credentials. It will be created and
   maintained at <eref target="http://www.iana.org/assignments/http-authschemes"/>.
</t>

<section title="Procedure" anchor="authentication.scheme.registry.procedure">
<t>
  Registrations MUST include the following fields:
  <list style="symbols">
    <t>Authentication Scheme Name</t>
    <t>Pointer to specification text</t>
    <t>Notes (optional)</t>
  </list>
</t>
<t>
  Values to be added to this name space require IETF Review
  (see <xref target="RFC5226"/>, Section 4.1).
</t>
</section>

<section title="Considerations for New Authentication Schemes" anchor="considerations.for.new.authentication.schemes">
<t>
  There are certain aspects of the HTTP Authentication Framework that put
  constraints on how new authentication schemes can work:
</t>
<t>
  <list style="symbols">
    <t>
      HTTP authentication is presumed to be stateless: all of the information
      necessary to authenticate a request MUST be provided in the request,
      rather than be dependent on the server remembering prior requests.
      Authentication based on, or bound to, the underlying connection is
      outside the scope of this specification and inherently flawed unless
      steps are taken to ensure that the connection cannot be used by any
      party other than the authenticated user
      (see Section 2.3 of <xref target="Part1"/>). 
    </t>
    <t>
      The authentication parameter "realm" is reserved for defining Protection
      Spaces as defined in <xref target="protection.space"/>. New schemes
      MUST NOT use it in a way incompatible with that definition.
    </t>
    <t>
      The "token68" notation was introduced for compatibility with existing
      authentication schemes and can only be used once per challenge or credential.
      New schemes thus ought to use the "auth-param" syntax instead, because
      otherwise future extensions will be impossible.
    </t>
    <t>
      The parsing of challenges and credentials is defined by this specification,
      and cannot be modified by new authentication schemes. When the auth-param
      syntax is used, all parameters ought to support both token and
      quoted-string syntax, and syntactical constraints ought to be defined on
      the field value after parsing (i.e., quoted-string processing). This is
      necessary so that recipients can use a generic parser that applies to
      all authentication schemes.
    <vspace blankLines="1"/>
      Note: The fact that the value syntax for the "realm" parameter
      is restricted to quoted-string was a bad design choice not to be repeated
      for new parameters.
    </t>
    <t>
      Definitions of new schemes ought to define the treatment of unknown
      extension parameters. In general, a "must-ignore" rule is preferable
      over "must-understand", because otherwise it will be hard to introduce
      new parameters in the presence of legacy recipients. Furthermore,
      it's good to describe the policy for defining new parameters (such
      as "update the specification", or "use this registry"). 
    </t>
    <t>
      Authentication schemes need to document whether they are usable in
      origin-server authentication (i.e., using <xref target="header.www-authenticate" format="none">WWW-Authenticate</xref>),
      and/or proxy authentication (i.e., using <xref target="header.proxy-authenticate" format="none">Proxy-Authenticate</xref>).
    </t>
    <t>
      The credentials carried in an <xref target="header.authorization" format="none">Authorization</xref> header field are specific to
      the User Agent, and therefore have the same effect on HTTP caches as the
      "private" Cache-Control response directive (Section 7.2.2.6 of <xref target="Part6"/>),
      within the scope of the request they appear in.
    <vspace blankLines="1"/>
      Therefore, new authentication schemes that choose not to carry
      credentials in the <xref target="header.authorization" format="none">Authorization</xref> header field (e.g., using a newly defined
      header field) will need to explicitly disallow caching, by mandating the use of
      either Cache-Control request directives (e.g., "no-store",
      Section 7.2.1.5 of <xref target="Part6"/>) or response directives (e.g., "private").
    </t>
  </list>
</t>
</section>
</section>

<section title="Status Code Registration" anchor="status.code.registration">
<t>
   The HTTP Status Code Registry located at <eref target="http://www.iana.org/assignments/http-status-codes"/>
   shall be updated with the registrations below:
</t>

<!--AUTOGENERATED FROM extract-status-code-defs.xslt, do not edit manually-->
<texttable align="left" suppress-title="true" anchor="iana.status.code.registration.table">
   <ttcol>Value</ttcol>
   <ttcol>Description</ttcol>
   <ttcol>Reference</ttcol>
   <c>401</c>
   <c>Unauthorized</c>
   <c>
      <xref target="status.401"/>
   </c>
   <c>407</c>
   <c>Proxy Authentication Required</c>
   <c>
      <xref target="status.407"/>
   </c>
</texttable>
<!--(END)-->

</section>

<section title="Header Field Registration" anchor="header.field.registration">
<t>
   HTTP header fields are registered within the Message Header Field Registry
   maintained at
   <eref target="http://www.iana.org/assignments/message-headers/message-header-index.html"/>.
</t>
<t>
   This document defines the following HTTP header fields, so their
   associated registry entries shall be updated according to the permanent
   registrations below (see <xref target="BCP90"/>):
</t>

<!--AUTOGENERATED FROM extract-header-defs.xslt, do not edit manually-->
<texttable align="left" suppress-title="true" anchor="iana.header.registration.table">
   <ttcol>Header Field Name</ttcol>
   <ttcol>Protocol</ttcol>
   <ttcol>Status</ttcol>
   <ttcol>Reference</ttcol>

   <c>Authorization</c>
   <c>http</c>
   <c>standard</c>
   <c>
      <xref target="header.authorization"/>
   </c>
   <c>Proxy-Authenticate</c>
   <c>http</c>
   <c>standard</c>
   <c>
      <xref target="header.proxy-authenticate"/>
   </c>
   <c>Proxy-Authorization</c>
   <c>http</c>
   <c>standard</c>
   <c>
      <xref target="header.proxy-authorization"/>
   </c>
   <c>WWW-Authenticate</c>
   <c>http</c>
   <c>standard</c>
   <c>
      <xref target="header.www-authenticate"/>
   </c>
</texttable>
<!--(END)-->

<t>
   The change controller is: "IETF (iesg@ietf.org) - Internet Engineering Task Force".
</t>
</section>
</section>

<section title="Security Considerations" anchor="security.considerations">
<t>
   This section is meant to inform developers, information providers, and
   users of known security concerns specific to HTTP/1.1 authentication.
   More general security considerations are addressed in HTTP messaging
   <xref target="Part1"/> and semantics <xref target="Part2"/>.
</t>

<section title="Authentication Credentials and Idle Clients" anchor="auth.credentials.and.idle.clients">
<t>
   Existing HTTP clients and user agents typically retain authentication
   information indefinitely. HTTP/1.1 does not provide a method for a
   server to direct clients to discard these cached credentials. This is
   a significant defect that requires further extensions to HTTP.
   Circumstances under which credential caching can interfere with the
   application's security model include but are not limited to:
  <list style="symbols">
     <t>Clients that have been idle for an extended period, following
        which the server might wish to cause the client to re-prompt the
        user for credentials.</t>

     <t>Applications that include a session termination indication
        (such as a "logout" or "commit" button on a page) after which
        the server side of the application "knows" that there is no
        further reason for the client to retain the credentials.</t>
  </list>
</t>
<t>
   This is currently under separate study. There are a number of work-arounds
   to parts of this problem, and we encourage the use of
   password protection in screen savers, idle time-outs, and other
   methods that mitigate the security problems inherent in this
   problem. In particular, user agents that cache credentials are
   encouraged to provide a readily accessible mechanism for discarding
   cached credentials under user control.
</t>
</section>

<section title="Protection Spaces" anchor="protection.spaces">
<t>
  Authentication schemes that solely rely on the "realm" mechanism for
  establishing a protection space will expose credentials to all resources on
  an origin server. Clients that have successfully made authenticated requests
  with a resource can use the same authentication credentials for other
  resources on the same origin server. This makes it possible for a different
  resource to harvest authentication credentials for other resources.
</t>
<t>
  This is of particular concern when an origin server hosts resources for multiple
  parties under the same canonical root URI (<xref target="protection.space"/>).
  Possible mitigation strategies include restricting direct access to
  authentication credentials (i.e., not making the content of the
  <xref target="header.authorization" format="none">Authorization</xref> request header field available), and separating protection
  spaces by using a different host name (or port number) for each party.
</t>
</section>
</section>

<section title="Acknowledgments" anchor="acks">
<t>
  This specification takes over the definition of the HTTP Authentication
  Framework, previously defined in RFC 2617.
  We thank John Franks, Phillip M. Hallam-Baker, Jeffery L. Hostetler, Scott D. Lawrence,
  Paul J. Leach, Ari Luotonen, and Lawrence C. Stewart for their work
  on that specification. See Section 6 of <xref target="RFC2617"/>
  for further acknowledgements.  
</t>
<t>
  See Section 9 of <xref target="Part1"/> for the Acknowledgments related to this document revision.
</t>
</section>
</middle>

<back>

<references title="Normative References">

<reference anchor="Part1">
  <front>
    <title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
    <author initials="R." surname="Fielding" fullname="Roy T. Fielding" role="editor">
      <organization abbrev="Adobe">Adobe Systems Incorporated</organization>
      <address><email>fielding@gbiv.com</email></address>
    </author>
    <author initials="J. F." surname="Reschke" fullname="Julian F. Reschke" role="editor">
      <organization abbrev="greenbytes">greenbytes GmbH</organization>
      <address><email>julian.reschke@greenbytes.de</email></address>
    </author>
    <date month="July" year="2013"/>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-ietf-httpbis-p1-messaging-23"/>
  
</reference>

<reference anchor="Part2">
  <front>
    <title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
    <author fullname="Roy T. Fielding" initials="R." role="editor" surname="Fielding">
      <organization abbrev="Adobe">Adobe Systems Incorporated</organization>
      <address><email>fielding@gbiv.com</email></address>
    </author>
    <author fullname="Julian F. Reschke" initials="J. F." role="editor" surname="Reschke">
      <organization abbrev="greenbytes">greenbytes GmbH</organization>
      <address><email>julian.reschke@greenbytes.de</email></address>
    </author>
    <date month="July" year="2013"/>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-ietf-httpbis-p2-semantics-23"/>
  
</reference>

<reference anchor="Part6">
  <front>
    <title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
    <author initials="R." surname="Fielding" fullname="Roy T. Fielding" role="editor">
      <organization abbrev="Adobe">Adobe Systems Incorporated</organization>
      <address><email>fielding@gbiv.com</email></address>
    </author>
    <author initials="M." surname="Nottingham" fullname="Mark Nottingham" role="editor">
      <organization>Akamai</organization>
      <address><email>mnot@mnot.net</email></address>
    </author>
    <author initials="J. F." surname="Reschke" fullname="Julian F. Reschke" role="editor">
      <organization abbrev="greenbytes">greenbytes GmbH</organization>
      <address><email>julian.reschke@greenbytes.de</email></address>
    </author>
    <date month="July" year="2013"/>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-ietf-httpbis-p6-cache-23"/>
  
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author initials="S." surname="Bradner" fullname="Scott Bradner">
      <organization>Harvard University</organization>
      <address><email>sob@harvard.edu</email></address>
    </author>
    <date month="March" year="1997"/>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
</reference>

<reference anchor="RFC5234">
  <front>
    <title abbrev="ABNF for Syntax Specifications">Augmented BNF for Syntax Specifications: ABNF</title>
    <author initials="D." surname="Crocker" fullname="Dave Crocker" role="editor">
      <organization>Brandenburg InternetWorking</organization>
      <address>
        <email>dcrocker@bbiw.net</email>
      </address>  
    </author>
    <author initials="P." surname="Overell" fullname="Paul Overell">
      <organization>THUS plc.</organization>
      <address>
        <email>paul.overell@thus.net</email>
      </address>
    </author>
    <date month="January" year="2008"/>
  </front>
  <seriesInfo name="STD" value="68"/>
  <seriesInfo name="RFC" value="5234"/>
</reference>

</references>

<references title="Informative References">

<reference anchor="RFC2616">
  <front>
    <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
    <author initials="R." surname="Fielding" fullname="R. Fielding">
      <organization>University of California, Irvine</organization>
      <address><email>fielding@ics.uci.edu</email></address>
    </author>
    <author initials="J." surname="Gettys" fullname="J. Gettys">
      <organization>W3C</organization>
      <address><email>jg@w3.org</email></address>
    </author>
    <author initials="J." surname="Mogul" fullname="J. Mogul">
      <organization>Compaq Computer Corporation</organization>
      <address><email>mogul@wrl.dec.com</email></address>
    </author>
    <author initials="H." surname="Frystyk" fullname="H. Frystyk">
      <organization>MIT Laboratory for Computer Science</organization>
      <address><email>frystyk@w3.org</email></address>
    </author>
    <author initials="L." surname="Masinter" fullname="L. Masinter">
      <organization>Xerox Corporation</organization>
      <address><email>masinter@parc.xerox.com</email></address>
    </author>
    <author initials="P." surname="Leach" fullname="P. Leach">
      <organization>Microsoft Corporation</organization>
      <address><email>paulle@microsoft.com</email></address>
    </author>
    <author initials="T." surname="Berners-Lee" fullname="T. Berners-Lee">
      <organization>W3C</organization>
      <address><email>timbl@w3.org</email></address>
    </author>
    <date month="June" year="1999"/>
  </front>
  <seriesInfo name="RFC" value="2616"/>
</reference>

<reference anchor="RFC2617">
  <front>
    <title abbrev="HTTP Authentication">HTTP Authentication: Basic and Digest Access Authentication</title>
    <author initials="J." surname="Franks" fullname="John Franks">
      <organization>Northwestern University, Department of Mathematics</organization>
      <address><email>john@math.nwu.edu</email></address>
    </author>
    <author initials="P.M." surname="Hallam-Baker" fullname="Phillip M. Hallam-Baker">
      <organization>Verisign Inc.</organization>
      <address><email>pbaker@verisign.com</email></address>
    </author>
    <author initials="J.L." surname="Hostetler" fullname="Jeffery L. Hostetler">
      <organization>AbiSource, Inc.</organization>
      <address><email>jeff@AbiSource.com</email></address>
    </author>
    <author initials="S.D." surname="Lawrence" fullname="Scott D. Lawrence">
      <organization>Agranat Systems, Inc.</organization>
      <address><email>lawrence@agranat.com</email></address>
    </author>
    <author initials="P.J." surname="Leach" fullname="Paul J. Leach">
      <organization>Microsoft Corporation</organization>
      <address><email>paulle@microsoft.com</email></address>
    </author>
    <author initials="A." surname="Luotonen" fullname="Ari Luotonen">
      <organization>Netscape Communications Corporation</organization>
    </author>
    <author initials="L." surname="Stewart" fullname="Lawrence C. Stewart">
      <organization>Open Market, Inc.</organization>
      <address><email>stewart@OpenMarket.com</email></address>
    </author>
    <date month="June" year="1999"/>
  </front>
  <seriesInfo name="RFC" value="2617"/>
</reference>

<reference anchor="BCP90">
  <front>
    <title>Registration Procedures for Message Header Fields</title>
    <author initials="G." surname="Klyne" fullname="G. Klyne">
      <organization>Nine by Nine</organization>
      <address><email>GK-IETF@ninebynine.org</email></address>
    </author>
    <author initials="M." surname="Nottingham" fullname="M. Nottingham">
      <organization>BEA Systems</organization>
      <address><email>mnot@pobox.com</email></address>
    </author>
    <author initials="J." surname="Mogul" fullname="J. Mogul">
      <organization>HP Labs</organization>
      <address><email>JeffMogul@acm.org</email></address>
    </author>
    <date year="2004" month="September"/>
  </front>
  <seriesInfo name="BCP" value="90"/>
  <seriesInfo name="RFC" value="3864"/>
</reference>

<reference anchor="RFC3986">
 <front>
  <title abbrev="URI Generic Syntax">Uniform Resource Identifier (URI): Generic Syntax</title>
  <author initials="T." surname="Berners-Lee" fullname="Tim Berners-Lee">
    <organization abbrev="W3C/MIT">World Wide Web Consortium</organization>
    <address>
       <email>timbl@w3.org</email>
       <uri>http://www.w3.org/People/Berners-Lee/</uri>
    </address>
  </author>
  <author initials="R." surname="Fielding" fullname="Roy T. Fielding">
    <organization abbrev="Day Software">Day Software</organization>
    <address>
      <email>fielding@gbiv.com</email>
      <uri>http://roy.gbiv.com/</uri>
    </address>
  </author>
  <author initials="L." surname="Masinter" fullname="Larry Masinter">
    <organization abbrev="Adobe Systems">Adobe Systems Incorporated</organization>
    <address>
      <email>LMM@acm.org</email>
      <uri>http://larry.masinter.net/</uri>
    </address>
  </author>
  <date month="January" year="2005"/>
 </front>
 <seriesInfo name="STD" value="66"/>
 <seriesInfo name="RFC" value="3986"/>
</reference>

<reference anchor="RFC4648">
  <front>
    <title>The Base16, Base32, and Base64 Data Encodings</title>
    <author fullname="S. Josefsson" initials="S." surname="Josefsson"/>
    <date year="2006" month="October"/>
  </front>
  <seriesInfo value="4648" name="RFC"/>
</reference>

<reference anchor="RFC5226">
  <front>
    <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
    <author initials="T." surname="Narten" fullname="T. Narten">
      <organization>IBM</organization>
      <address><email>narten@us.ibm.com</email></address>
    </author>
    <author initials="H." surname="Alvestrand" fullname="H. Alvestrand">
      <organization>Google</organization>
      <address><email>Harald@Alvestrand.no</email></address>
    </author>
    <date year="2008" month="May"/>
  </front>
  <seriesInfo name="BCP" value="26"/>
  <seriesInfo name="RFC" value="5226"/>
</reference>

</references>

<section title="Changes from RFCs 2616 and 2617" anchor="changes.from.rfc.2616">
<t>
  The framework for HTTP Authentication is now defined by this document,
  rather than RFC 2617.
</t>
<t>
  The "realm" parameter is no longer always required on challenges;
  consequently, the ABNF allows challenges without any auth parameters.
  (<xref target="access.authentication.framework"/>)
</t>
<t>
  The "token68" alternative to auth-param lists has been added for consistency
  with legacy authentication schemes such as "Basic".
  (<xref target="access.authentication.framework"/>)
</t>
<t>
  This specification introduces the Authentication Scheme Registry, along with
  considerations for new authentication schemes.
  (<xref target="authentication.scheme.registry"/>)
</t>
</section>
 
<section title="Imported ABNF" anchor="imported.abnf">
  
  
  
  
  
  
  
  
  
  
  
<t>
  The following core rules are included by
  reference, as defined in Appendix B.1 of <xref target="RFC5234"/>:
  ALPHA (letters), CR (carriage return), CRLF (CR LF), CTL (controls),
  DIGIT (decimal 0-9), DQUOTE (double quote),
  HEXDIG (hexadecimal 0-9/A-F/a-f), LF (line feed),
  OCTET (any 8-bit sequence of data), SP (space), and
  VCHAR (any visible US-ASCII character).
</t>
<t>
   The rules below are defined in <xref target="Part1"/>:
</t>
<figure><artwork type="abnf2616"><![CDATA[
  BWS           = <BWS, defined in [Part1], Section 3.2.3>
  OWS           = <OWS, defined in [Part1], Section 3.2.3>
  quoted-string = <quoted-string, defined in [Part1], Section 3.2.6>
  token         = <token, defined in [Part1], Section 3.2.6>
]]></artwork></figure>
</section> 


<section title="Collected ABNF" anchor="collected.abnf">
<t>
  In the collected ABNF below, list rules are expanded as per Section 1.2 of <xref target="Part1"/>.
</t><figure>
<artwork type="abnf" name="p7-auth.parsed-abnf"><![CDATA[
Authorization = credentials

BWS = <BWS, defined in [Part1], Section 3.2.3>

OWS = <OWS, defined in [Part1], Section 3.2.3>

Proxy-Authenticate = *( "," OWS ) challenge *( OWS "," [ OWS
 challenge ] )
Proxy-Authorization = credentials

WWW-Authenticate = *( "," OWS ) challenge *( OWS "," [ OWS challenge
 ] )

auth-param = token BWS "=" BWS ( token / quoted-string )
auth-scheme = token

challenge = auth-scheme [ 1*SP ( token68 / [ ( "," / auth-param ) *(
 OWS "," [ OWS auth-param ] ) ] ) ]
credentials = auth-scheme [ 1*SP ( token68 / [ ( "," / auth-param )
 *( OWS "," [ OWS auth-param ] ) ] ) ]

quoted-string = <quoted-string, defined in [Part1], Section 3.2.6>

token = <token, defined in [Part1], Section 3.2.6>
token68 = 1*( ALPHA / DIGIT / "-" / "." / "_" / "~" / "+" / "/" )
 *"="
]]></artwork>
</figure>
</section>


<section title="Change Log (to be removed by RFC Editor before publication)" anchor="change.log">
<t>
  Changes up to the first Working Group Last Call draft are summarized
  in <eref target="http://trac.tools.ietf.org/html/draft-ietf-httpbis-p7-auth-19#appendix-C"/>.
</t>

<section title="Since draft-ietf-httpbis-p7-auth-19" anchor="changes.since.19">
<t>
  Closed issues:
  <list style="symbols">
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/348"/>:
      "Realms and scope"
    </t>
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/349"/>:
      "Strength"
    </t>
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/357"/>:
      "Authentication exchanges"
    </t>
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/361"/>:
      "ABNF requirements for recipients"
    </t>
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/368"/>:
      "note introduction of new IANA registries as normative changes"
    </t>
  </list>
</t>
</section>

<section title="Since draft-ietf-httpbis-p7-auth-20" anchor="changes.since.20">
<t>
  Closed issues:
  <list style="symbols">
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/376"/>:
      "rename b64token for clarity"
    </t>
  </list>
</t>
<t>
  Other changes:
  <list style="symbols">
    <t>
      Conformance criteria and considerations regarding error handling are
      now defined in Part 1.
    </t>
  </list>
</t>
</section>

<section title="Since draft-ietf-httpbis-p7-auth-21" anchor="changes.since.21">
<t>
  Closed issues:
  <list style="symbols">
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/403"/>:
      "Authentication and caching - max-age"
    </t>
  </list>
</t>
</section>

<section title="Since draft-ietf-httpbis-p7-auth-22" anchor="changes.since.22">
<t>
  Closed issues:
  <list style="symbols">
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/436"/>:
      "explain list expansion in ABNF appendices"
    </t>
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/439"/>:
      "terminology: mechanism vs framework vs scheme"
    </t>
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/463"/>:
      "Editorial suggestions"
    </t>
    <t>
      <eref target="http://tools.ietf.org/wg/httpbis/trac/ticket/464"/>:
      "placement of extension point considerations"
    </t>
  </list>
</t>
</section>
</section>

</back>
</rfc>