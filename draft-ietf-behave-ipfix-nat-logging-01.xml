<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-behave-ipfix-nat-logging-01"
     ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="IPFIX IEs for NAT logging">IPFIX Information Elements for logging NAT Events</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Senthil Sivakumar" initials="S." surname="Sivakumar">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>7100-8 Kit Creek Road</street>

          <!-- Reorder these if your country does things differently -->

          <city>Research Triangle Park</city>

          <region>North Carolina</region>

          <code>27709</code>

          <country>USA</country>
        </postal>

        <phone>+1 919 392 5158</phone>

        <email>ssenthil@cisco.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Renaldo Penno" initials="R." surname="Penno">
      <organization>Cisco Systems</organization>

      <address>
        <postal>
          <street>170 W Tasman Drive</street>

          <!-- Reorder these if your country does things differently -->

          <city>San Jose</city>

          <region>California</region>

          <code>95035</code>

          <country>USA</country>
        </postal>

        <phone></phone>

        <email>repenno@cisco.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date month="August" year="2013" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Behave</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>template</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>NAT devices are required to log events like
      creation and deletion of translations and information about the
      resources it is managing. 
      The logs are required in many cases to
      identify an attacker or a host that was used to launch malicious attacks
      and/or for various other purposes of accounting. Since there is no
      standard way of logging this information, different NAT devices behave
      differently and hence it is difficult to expect a consistent behavior.
      The lack of a consistent way makes it difficult to write the collector
      applications that would receive this data and process it to present
      useful information. This document describes the information that is
      required to be logged by the NAT devices.</t>
    </abstract>
  </front>

  <middle>
    <section title="Terminology">
      <t>The usage of the term "NAT device" in this document refer to any
      NAT44 and NAT64 devices. The usage of the term "collector"
      refers to any device that receives the binary data from a NAT device and
      converts that into meaningful information. This document uses the term
      "Session" as it is defined in <xref target="RFC2663"> </xref> and the
      term BIB as it is defined in <xref target="RFC6146"></xref>. The usage 
      of the term Information Element (IE) is defined in
      [RFC5101bis].</t>
    </section>

    <section title="Introduction">
      <t>The IPFIX Protocol [RFC5101bis] defines a generic push mechanism for exporting information
        and events. The IPFIX Information Model [IPFIX-IANA] defines a set of standard Information Elements 
        (IEs) which can be carried by the IPFIX protocol. This document details the IPFIX Information    
        Elements(IEs) that are required for logging by a NAT device. The document will specify the 
        format of the IE's that are required to be logged by the NAT device and all the optional fields. The  
        fields specified in this document are gleaned from <xref target="RFC4787"></xref> and <xref
      target="RFC5382"></xref>.</t>

      <t> Test [3GPP]  </t>

      <t>
      This document and [I-D.behave-syslog-nat-logging] are provided in order to standardize
      the events and parameters to be recorded, using IPFIX [RFC5101bis] 
      and SYSLOG [RFC5424]respectively. </t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119"></xref>.</t>
      </section>
    </section>

    <section title="Scope">
      <t>This document provides the information model to be used for logging
      the NAT devices including Carrier Grade NAT (CGN) events. This document focuses exclusively on
      the specification of IPFIX IE's. 
      This document does not provide guidance on the transport protocol like TCP, UDP or
      SCTP that is to be used to log NAT events.
      The log events SHOULD NOT be lost but the choice of the actual transport
      protocol is beyond the scope of this document.</t>

      <t>The existing IANA IPFIX IEs registry [IPFIX-IANA]
      already has assignments for many NAT logging events. For convenience,
      this document uses those same IEs. However, as stated
      earlier, this document is not defining IPFIX or NetFlow v9 as the
      framework for logging. Rather, the information contained in these
      elements is within the scope of this document.</t>

      <t>This document assumes that the NAT device will use the existing
      IPFIX framework to send the log events to
      the collector. This would mean that the NAT device will specify the template
      that it is going to use for each of the events. 
      The templates can be of varying length and there could be multiple
      templates that a NAT device could use to log the events. </t>

      <t>The implementation details of the collector application is beyond the
      scope of this document.</t>

      <t>The optimization of logging the NAT events are left to the
      implementation and are beyond the scope of this document.</t>
    </section>
    <section title="Applicability">
    <t>NAT logging based on IPFIX uses binary encoding and hence is very efficient.
    IPFIX based logging is recommended for environments where a high volume of logging is
    required, for example, where per-flow logging is needed. 
    However, IPFIX based logging requires a collector that processes the binary
    data and requires a network management application that converts this binary
    data to a human readable format.</t>
    </section>

    <section title="Event based logging">
      <t>An event in a NAT device can be viewed as a happening as it relates
      to the management of NAT resources. The creation and deletion of NAT
      sessions and bindings are examples of events as it results in the
      resources (addresses and ports) being allocated or freed. The events can
      happen either through the processing of data packets flowing through the
      NAT device or through an external entity installing policies on the NAT
      router or as a result of an asynchronous event like a timer. 
      The list of events are provided in Section 4.1. Each of these
      events SHOULD be logged, unless they are administratively prohibited. A
      NAT device MAY log these events to multiple collectors if redundancy is
      required. The network administrator will specify the collectors to which
      the log records are to be sent.</t>

      <t> A collector may receive NAT events from multiple CGN devices and should be able
      to distinguish between the devices. Each CGN device should have a unique source ID to 
      identify themselves. The source ID is part of the IPFIX template and data exchange.</t>

      <t> Prior to logging any events, the NAT device MUST send the template of
      the record to the collector to advertise the format of the data record
      that it is using to send the events. The templates can be exchanged as
      frequently as required given the reliability of the connection. There SHOULD 
      be a configurable timer for controlling the template refresh. NAT
      device SHOULD combine as many events as possible in a single packet to
      effectively utilize the network bandwidth.</t>

      <section title="Logging of destination information">
         <t> Logging of destination information in a NAT event has been discussed in 
             <xref target="RFC6302"></xref> and
             <xref target="RFC6888"></xref>.
             Logging of destination information increases the size of each record and 
             increases the need for storage considerably. It increases the number of log events 
             generated because when the same user connects to a different destination, 
             it results in a log record per destination address. Logging of destination 
	     information also results in the loss of privacy and hence should be done with caution.
             However, this draft provides the necessary fields to log the destination information
             in cases where they are required to be logged. 
         </t>
      </section> 
      <section title="Information Elements">
        <t>The templates could contain a subset of the Information
        Elements(IEs) shown in Table 1 depending upon the event being logged.
        For example a NAT44 session creation template record will contain,</t>

        <t>{sourceIPv4Adress, postNATSourceIPv4Address,
        destinationIpv4Address, postNATDestinationIPv4Address,
        sourceTransportPort, postNAPTSourceTransportPort,
        destinationTransportPort, postNAPTDestTransportPort,
        natOriginatingAddressRealm, natEvent, timeStamp}</t>

        <t>An example of the actual event data record is shown below - in a
        readable form</t>

        <t>{192.168.16.1, 201.1.1.100, 207.85.231.104, 207.85.231.104, 14800,
        1024, 80, 80, 0, 1, 09:20:10:789}</t>

        <t>A single NAT device could be exporting multiple templates and the
        collector should support receiving multiple templates from the same
        source.
        <vspace blankLines='50' />
        </t>

        <t> The following is the table of all the IE's that a CGN device would need 
          to export the events. The formats of the IE's and the IPFIX IDs are listed
          below. </t>
        
        <texttable anchor="Template_table" title="Template format Table">
          <ttcol align="center">Field Name</ttcol>

          <ttcol align="right">Size (bits)</ttcol>

          <ttcol align="right">IANA IPFIX ID</ttcol>

          <ttcol align="center">Description</ttcol>

          <c>timeStamp</c>

          <c>64</c>

          <c>323</c>

          <c>System Time when the event occured.</c>

          <c>vlanID</c>

          <c>16</c>

          <c>58</c>

          <c>VLAN ID in case of overlapping networks</c>

          <c>ingressVRFID</c>

          <c>32</c>

          <c>234</c>

          <c>VRF ID in case of overlapping networks</c>

          <c>sourceIPv4Address</c>

          <c>32</c>

          <c>8</c>
          
          <c>Source IPv4 Address</c>

          <c>postNATSourceIPv4Address</c>

          <c>32</c>

          <c>225</c>

          <c>Translated Source IPv4 Address</c>

          <c>protocolIdentifier</c>

          <c>8</c>

          <c>4</c>

          <c>Transport protocol</c>

          <c>sourceTransportPort</c>

          <c>16</c>

          <c>7</c>

          <c>Source Port</c>

          <c>postNAPTsourceTransportPort</c>

          <c>16</c>

          <c>227</c>

          <c>Translated Source port</c>

          <c>destinationIPv4Address</c>

          <c>32</c>

          <c>12</c>

          <c>Destination IPv4 Address</c>

          <c>postNATDestinationIPv4Address</c>

          <c>32</c>

          <c>226</c>

          <c>Translated IPv4 destination address</c>

          <c>destinationTransportPort</c>

          <c>16</c>

          <c>11</c>

          <c>Destination port</c>

          <c>postNAPTdestinationTransportPort</c>

          <c>16</c>

          <c>228</c>

          <c>Translated Destination port</c>

          <c>sourceIPv6Address</c>

          <c>27</c>

          <c>128</c>

          <c>Source IPv6 address</c>

          <c>destinationIPv6Address</c>

          <c>128</c>

           <c>28</c>

          <c>Destination IPv6 address</c>

          <c>postNATSourceIPv6Address</c>

          <c>128</c>

         <c>281</c>

          <c>Translated source IPv6 addresss</c>

          <c>postNATDestinationIPv6Address</c>

          <c>128</c>

          <c>282</c>

          <c>Translated Destination IPv6 address</c>

          <c>natOriginatingAddressRealm</c>

          <c>8</c>

          <c>229</c>

          <c>Address Realm</c>

          <c>natEvent</c>

          <c>8</c>

          <c>230</c>

          <c>Type of Event</c>

          <c>portRangeStart</c>

          <c>16</c>

          <c>361</c>

          <c>Allocated port block start</c>

          <c>portRangeEnd</c>

          <c>16</c>

          <c>362</c>

          <c>Allocated Port block end</c>

          <c>portRangeStepSize</c>

          <c>16</c>

          <c>363</c>

          <c>Step size of next port</c>

          <c>portRangeNumPorts</c>

          <c>16</c>

          <c>364</c>
          
          <c>Number of ports</c>
          
        </texttable>
      </section>

      <!-- End of section IEs above -->

      <section title="Definition of NAT Events">
        <t>The following are the list of NAT events and the proposed event
        values. The list can be expanded in the future as necessary. The data
        record will have the corresponding natEvent value to identify the
        event that is being logged.</t>

        <texttable anchor="event_id_table" title="NAT Event ID table">
          <ttcol align="center">Event Name</ttcol>

          <ttcol align="right">Values</ttcol>

          <c>NAT44 Session create</c>

          <c>1</c>

          <c>NAT44 Session delete</c>

          <c>2</c>

          <c>NAT Addresses exhausted</c>

          <c>3</c>


          <c>NAT64 Session create</c>

          <c>4</c>

          <c>NAT64 Session delete</c>

          <c>5</c>

          <c>NAT44 BIB create</c>

          <c>6</c>

          <c>NAT44 BIB delete</c>

          <c>7</c>

          <c>NAT64 BIB create</c>

          <c>8</c>

          <c>NAT64 BIB delete</c>

          <c>9</c>

          <c>NAT ports exhausted</c>

          <c>10</c>

          <c>Quota exceeded</c>

          <c>11</c>

          <c>Address Binding</c>

          <c>12</c>

          <c>Port block allocation</c>

          <c>13</c>

          <c>Port block de-allocation</c>

          <c>14</c>
          </texttable>
      </section>
      <section title="Quota exceeded - Sub Event types">
        <t> The following table shows the sub event types for the Quota exceeded event </t>
        <texttable anchor="limid_id_table" title="Sub Event ID table">
          <ttcol align="center">Quota Exceeded Event Name</ttcol>

          <ttcol align="right">Values</ttcol>

          <c>Max Session entries </c>

          <c>1</c>

         <c>Max BIB entries </c>

          <c>2</c>

          <c>Max entries per user</c>

          <c>3</c>
         </texttable>
      </section>
      <section title="Templates for NAT Events">
        <t>The following is the template of events that will have to logged.
         The events below are identified at the time of this writing but
        the events are expandable. Depending on the implementation and
        configuration various IE's specified can be included or ignored.</t>

        <section title="NAT44 create and delete session event">
          <t>This event will be generated when a NAT44 session is created or
          deleted. The template will be the same, the natEvent will indicate
          whether it is a create or a delete event. The following is a
          template of the event.</t>

          <texttable anchor="event_template_table"
                     title="NAT44 Session delete/create template">
            <ttcol align="center">Field Name</ttcol>

            <ttcol align="right">Size (bits)</ttcol>

            <ttcol align="center">Mandatory</ttcol>

            <c>timeStamp</c>

            <c>64</c>

            <c>Yes</c>

            <c>vlanID/ingressVRFID</c>

            <c>32</c>

            <c>No</c>

            <c>sourceIPv4Address</c>

            <c>32</c>

            <c>Yes</c>

            <c>postNATSourceIPv4Address</c>

            <c>32</c>

            <c>Yes</c>

            <c>protocolIdentifier</c>

            <c>8</c>

            <c>Yes</c>

            <c>sourceTransportPort</c>

            <c>16</c>

            <c>Yes</c>

            <c>postNAPTsourceTransportPort</c>

            <c>16</c>

            <c>Yes</c>

            <c>destinationIPv4Address</c>

            <c>32</c>

            <c>No</c>

            <c>postNATDestinationIPv4Address</c>

            <c>32</c>

            <c>No</c>

            <c>destinationTransportPort</c>

            <c>16</c>

            <c>No</c>

            <c>postNAPTdestinationTransportPort</c>

            <c>16</c>

            <c>No</c>

            <c>natOriginatingAddressRealm</c>

            <c>8</c>

            <c>No</c>

            <c>natEvent</c>

            <c>8</c>

            <c>Yes</c>
          </texttable>
        </section>

        <!-- End of section nat44 create/delete above -->

        <section title="NAT64 create and delete session event">
          <t>This event will be generated when a NAT64 session is created. The
          following is a template of the event.</t>

          <texttable anchor="nat64_session_event_template_table"
                     title="NAT64 session create/delete event template">
            <ttcol align="center">Field Name</ttcol>

            <ttcol align="right">Size (bits)</ttcol>

            <ttcol align="center">Mandatory</ttcol>

            <c>timeStamp</c>

            <c>64</c>

            <c>Yes</c>

            <c>vlanID/ingressVRFID</c>

            <c>32</c>

            <c>No</c>

            <c>sourceIPv6Address</c>

            <c>128</c>

            <c>Yes</c>

            <c>postNATSourceIPv4Address</c>

            <c>32</c>

            <c>Yes</c>

            <c>protocolIdentifier</c>

            <c>8</c>

            <c>Yes</c>

            <c>sourceTransportPort</c>

            <c>16</c>

            <c>Yes</c>

            <c>postNAPTsourceTransportPort</c>

            <c>16</c>

            <c>Yes</c>

            <c>destinationIPv6Address</c>

            <c>128</c>

            <c>No</c>

            <c>postNATDestinationIPv4Address</c>

            <c>32</c>

            <c>No</c>

            <c>destinationTransportPort</c>

            <c>16</c>

            <c>No</c>

            <c>postNAPTdestinationTransportPort</c>

            <c>16</c>

            <c>No</c>

            <c>natOriginatingAddressRealm</c>

            <c>8</c>

            <c>No</c>

            <c>natEvent</c>

            <c>8</c>

            <c>Yes</c>
          </texttable>
        </section>

        <!-- End of section nat64 delete/create above -->

        <section title="NAT44 BIB create and delete event">
          <t>This event will be generated when a NAT44 Bind entry is created.
          The following is a template of the event.</t>

          <texttable anchor="nat44_bib_event_template_table"
                     title="NAT44 BIB create/delete event template">
            <ttcol align="center">Field Name</ttcol>

            <ttcol align="right">Size (bits)</ttcol>

            <ttcol align="center">Mandatory</ttcol>

            <c>timeStamp</c>

            <c>64</c>

            <c>Yes</c>

            <c>vlanID/ingressVRFID</c>

            <c>32</c>

            <c>No</c>

            <c>sourceIPv4Address</c>

            <c>32</c>

            <c>Yes</c>

            <c>postNATSourceIPv4Address</c>

            <c>32</c>

            <c>Yes</c>

            <c>protocolIdentifier</c>

            <c>8</c>

            <c>No</c>

            <c>sourceTransportPort</c>

            <c>16</c>

            <c>No</c>

            <c>postNAPTsourceTransportPort</c>

            <c>16</c>

            <c>No</c>

            <c>natOriginatingAddressRealm</c>

            <c>8</c>

            <c>No</c>

            <c>natEvent</c>

            <c>8</c>

            <c>Yes</c>
          </texttable>
        </section>

        <!-- End of section nat44 BIB above -->

        <section title="NAT64 BIB create and delete event">
          <t>This event will be generated when a NAT64 Bind entry is created.
          The following is a template of the event.</t>

          <texttable anchor="nat64_bib_event_template_table"
                     title="NAT64 BIB create/delete event template">
            <ttcol align="center">Field Name</ttcol>

            <ttcol align="right">Size (bits)</ttcol>

            <ttcol align="center">Mandatory</ttcol>

            <c>timeStamp</c>

            <c>64</c>

            <c>Yes</c>

            <c>vlanID/ingressVRFID</c>

            <c>32</c>

            <c>No</c>

            <c>sourceIPv6Address</c>

            <c>128</c>

            <c>Yes</c>

            <c>postNATSourceIPv4Address</c>

            <c>32</c>

            <c>Yes</c>

            <c>protocolIdentifier</c>

            <c>8</c>

            <c>No</c>

            <c>sourceTransportPort</c>

            <c>16</c>

            <c>No</c>

            <c>postNAPTsourceTransportPort</c>

            <c>16</c>

            <c>No</c>

            <c>natOriginatingAddressRealm</c>

            <c>8</c>

            <c>No</c>

            <c>natEvent</c>

            <c>8</c>

            <c>Yes</c>
          </texttable>
        </section>

        <section title="Addresses Exhausted event">
          <t>This event will be generated when a NAT device runs out of global
          IPv4 addresses in a given pool of addresses. Typically, this event would mean that the NAT device
          wont be able to create any new translations until some
          addresses/ports are freed. This event SHOULD be rate limited as many packets hitting the 
          device at the same time will trigger a burst of addresses exhausted events. </t>

          <t> The following is a template of the event.</t>

          <texttable anchor="nat_adress_exhaust_template_table"
                     title="NAT Address Exhausted event template">
            <ttcol align="center">Field Name</ttcol>

            <ttcol align="right">Size (bits)</ttcol>

            <ttcol align="center">Mandatory</ttcol>

            <c>timeStamp</c>

            <c>64</c>

            <c>Yes</c>

            <c>natEvent</c>

            <c>8</c>

            <c>Yes</c>

            <c>natPoolName</c>

            <c>String</c>

            <c>Yes</c>
          </texttable>
        </section>

        <!-- End of section nat address exhaust event above -->

        <section title="Ports Exhausted event">
          <t>This event will be generated when a NAT device runs out of ports
          for a global IPv4 address. Port exhaustion shall be reported per
          protocol (UDP, TCP etc). This event SHOULD be rate limited as many packets hitting the 
          device at the same time will trigger a burst of port exhausted events. </t>
          
          <t>The following is a template of the event. </t>

          <texttable anchor="nat_ports_exhaust_template_table"
                     title="NAT Ports Exhausted event template">
            <ttcol align="center">Field Name</ttcol>

            <ttcol align="right">Size (bits)</ttcol>

            <ttcol align="center">Mandatory</ttcol>

            <c>timeStamp</c>

            <c>64</c>

            <c>Yes</c>

            <c>natEvent</c>

            <c>8</c>

            <c>Yes</c>

            <c>postNATSourceIPv4Address</c>

            <c>32</c>

            <c>Yes</c>

            <c>protocolIdentifier</c>

            <c>8</c>

            <c>Yes</c>
          </texttable>
        </section>

        <!-- End of section nat ports exhaust event above -->

        <section title="Quota exceeded">
          <t>This event will be generated when a NAT device cannot allocate
          resources as a result of an administratively defined policy. The
          examples of Quota exceeded are to allow only certain number of NAT
          sessions per device, certain number of NAT sessions per user etc.
          The following is a template of the event.</t>

          <texttable anchor="nat_quota_exceeded_template_table"
                     title="NAT Quota Exceeded event template">
            <ttcol align="center">Field Name</ttcol>

            <ttcol align="right">Size (bits)</ttcol>

            <ttcol align="center">Mandatory</ttcol>

            <c>timeStamp</c>

            <c>64</c>

            <c>Yes</c>

            <c>natEvent</c>

            <c>8</c>

            <c>Yes</c>

            <c>natLimitEvent</c>

            <c>32</c>

            <c>Yes</c>

            <c>sourceIPv4 address</c>

            <c>32</c>

            <c>Yes for NAT44</c>

            <c>sourceIPv6 address</c>

            <c>128</c>

            <c>Yes for NAT64</c>
          </texttable>
        </section>

        <section title="Address Binding">
          <t>This event will be generated when a NAT device binds a local address with a global address.
             This binding event happens when the first packet of the first flow from a host in the private
             realm. </t>

          <texttable anchor="address_binding_template_table"
                     title="NAT Address Binding template">
            <ttcol align="center">Field Name</ttcol>

            <ttcol align="right">Size (bits)</ttcol>

            <ttcol align="center">Mandatory</ttcol>

            <c>timeStamp</c>

            <c>64</c>

            <c>Yes</c>

            <c>natEvent</c>

            <c>8</c>

            <c>Yes</c>

            <c>sourceIPv4 address</c>

            <c>32</c>

            <c>Yes for NAT44</c>

            <c>sourceIPv6 address</c>

            <c>128</c>

            <c>Yes for NAT64</c>

           <c>Translated Source IPv4 Address</c>

           <c>32</c>

           <c>Yes</c>
          </texttable>
        </section>

        <section title="Port block allocation and de-allocation">
          <t>This event will be generated when a NAT device allocates/de-allocates ports 
             in a bulk fashion, as opposed to allocating a port on a per flow basis. </t>
             <t> portRangeStart represents the starting value of the range. </t>
             <t> portRangeEnd represents the ending value of the range. </t>
             <t> portRangeNumPorts represents the number of ports that are allocated to the user. </t>
             <t> portRangeStepSize represents the step size in case of non-contiguous port allocation. </t>
             <t> NAT devices would do this in order to reduce logs
             and potentially to limit the number of connections a subscriber is allowed to use. In the 
             following Port Block allocation template, the portRangeStart must be specified. 
             Along with portRangeStart,
             atleast one of portRangeEnd, portRangeStepSize or portRangeNumPorts MUST be specified.
             If portRangeEnd is specified, it MUST NOT be lesser than portRangeStart. 
             The value of portRangeStepSize MUST be between 1 and 32K. </t>

             <t> It is up to the implementation to choose to consolidate log records in case two 
                 consecutive port ranges for the same user are allocated or freed. 
             </t>

             <texttable anchor="nat_bulk_port_allocation_template_table"
                     title="NAT Port Block Allocation event template">
            <ttcol align="center">Field Name</ttcol>

            <ttcol align="right">Size (bits)</ttcol>

            <ttcol align="center">Mandatory</ttcol>

            <c>timeStamp</c>

            <c>64</c>

            <c>Yes</c>
 
            <c>sourceIPv4 address</c>

            <c>32</c>

            <c>No</c>

            <c>sourceIPv6 address</c>

            <c>128</c>

            <c>No</c>

           <c>Translated Source IPv4 Address</c>

           <c>32</c>
           
           <c>Yes</c>

            <c>portRangeStart</c>

            <c>16</c>

            <c>Yes</c>

            <c>portRangeEnd</c>

            <c>16</c>

            <c>No</c>

            <c>portRangeStepSize</c>

            <c>16</c>

            <c>No</c>

            <c>portRangeNumPorts</c>

            <c>16</c>

            <c>No</c>

           </texttable>
        </section>
        <!-- End of section nat ports exhaust event above -->
      </section>

      <!-- End of section templates above -->
    </section>

    <!-- End of section Event based logging above -->

    <section anchor="Encoding" title="Encoding">
        <section title="IPFIX">
        <t> 
        This document uses IPFIX as the encoding mechanism to describe the logging of NAT events. However, the information that 
        should be logged SHOULD be the same irrespective of what kind of encoding scheme is used. IPFIX is chosen because is it
        an IETF standard that meets all the needs for a reliable logging mechanism. IPFIX provides the flexibility to the 
        logging device to define the data sets that it is logging. The IEs specified for logging MUST be
        the same irrespective of the encoding mechanism used.
        </t>
        </section>
    </section>
    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>Thanks to Dan Wing, Selvi Shanmugam, Mohamed Boucadir, Jacni Qin
      Ramji Vaithianathan, Simon Perreault, Jean-Francois Tremblay, Paul Aitken and Julia Renouard for their review 
      and comments.</t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations"> 

    <t> There are no IANA considerations for this document. </t>

    </section>

    <section anchor="Security" title="Security Considerations">
      <t>None.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <?rfc include="reference.RFC.2119.xml"?>

      <?rfc include="reference.RFC.2663.xml"?>

      <?rfc include="reference.RFC.4787.xml"?>

      <?rfc include="reference.RFC.5382.xml"?>

      <?rfc include="reference.RFC.6146.xml"?>
      <?rfc include="reference.RFC.6302.xml"?>
      <?rfc include="reference.RFC.6888.xml"?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.5470.xml"?>
      <?rfc include="reference.I-D.ietf-behave-syslog-nat-logging.xml"?>    

      <reference anchor="RFC5101bis">
        <front>
          <title>Specification of the IP Flow Information eXport (IPFIX) Protocol for the Exchange of Flow Information</title>
          <author initials="B." surname="Claise" fullname="B. Claise">
            <organization>Cisco Systems</organization>
          </author>
          <author initials="B." surname="Trammel" fullname="B. Trammel">
            <organization>ETH Zurich</organization>
          </author>
          <date month="July" year="2013"/>
        </front>
      </reference>

      <reference anchor="RFC5102bis">
        <front>
          <title>Information Model for IP Flow Information eXport (IPFIX)</title>
          <author initials="B." surname="Claise" fullname="B. Claise">
            <organization>Cisco Systems</organization>
          </author>
          <author initials="B." surname="Trammel" fullname="B. Trammel">
            <organization>ETH Zurich</organization>
          </author>
          <date month="February" year="2013"/>
        </front>
      </reference>

      <reference anchor="IPFIX-IANA"
                 target="http://www.iana.org/assignments/ipfix">
        <front>
          <title>IPFIX Information Elements registry</title>
          <author>
            <organization>IANA</organization>
          </author>
          <date/>
        </front>
      </reference>  

      <!--
Here we use entities that we defined at the beginningI. -->
    </references>

    <!-- Change Log

v00 2006-03-15  EBD   Initial version

v01 2006-04-03  EBD   Moved PI location back to position 1 -
                      v3.1 of XMLmind is better with them at this location.
v02 2007-03-07  AH    removed extraneous nested_list attribute,
                      other minor corrections
v03 2007-03-09  EBD   Added comments on null IANA sections and fixed heading capitalization.
                      Modified comments around figure to reflect non-implementation of
                      figure indent control.  Put in reference using anchor="DOMINATION".
                      Fixed up the date specification comments to reflect current truth.
v04 2007-03-09 AH     Major changes: shortened discussion of PIs,
                      added discussion of rfc include.
v05 2007-03-10 EBD    Added preamble to C program example to tell about ABNF and alternative 
                      images. Removed meta-characters from comments (causes problems).  -->
  </back>
</rfc>
