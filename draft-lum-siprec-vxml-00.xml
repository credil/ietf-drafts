<?xml version="1.0" encoding="utf-8"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2506 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2506.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3264 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3264.xml">
<!ENTITY RFC3311 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3311.xml">
<!ENTITY RFC3325 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3325.xml">
<!ENTITY RFC3550 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3550.xml">
<!ENTITY RFC3551 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3551.xml">
<!ENTITY RFC3711 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3711.xml">
<!ENTITY RFC3840 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3840.xml">
<!ENTITY RFC4574 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4574.xml">
<!ENTITY RFC4568 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4568.xml">
<!ENTITY RFC4585 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4585.xml">
<!ENTITY RFC4916 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4916.xml">
<!ENTITY RFC4961 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4961.xml">
<!ENTITY RFC5104 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5104.xml">
<!ENTITY RFC5124 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5124.xml">
<!ENTITY RFC5168 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5168.xml">
<!ENTITY RFC5234 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml">
<!ENTITY RFC5552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5552.xml">
<!ENTITY RFC5630 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5630.xml">
<!ENTITY RFC5761 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5761.xml">
<!ENTITY RFC6222 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6222.xml">
<!ENTITY RFC6263 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6263.xml">
<!ENTITY RFC6341 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6341.xml">
<!ENTITY I-D.ietf-siprec-architecture SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-architecture.xml">
<!ENTITY I-D.ietf-siprec-metadata SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-metadata.xml">
<!ENTITY I-D.ietf-siprec-protocol SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-siprec-protocol.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-lum-siprec-vxml-00" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Recording VoiceXML sessions with SIPREC">Recording VoiceXML sessions with SIPREC</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Henry Lum" initials="H." surname="Lum">
      <organization>Genesys</organization>
      <address>
        <postal>
          <street>1380 Rodick Road, Suite 201</street>
          <city>Markham</city>
          <region>Ontario</region>
          <code>L3R4G5</code>
          <country>Canada</country>
        </postal>
        <email>henry.lum@genesyslab.com</email>
      </address>
    </author>

    <date/>
    <area>RAI</area>
    <workgroup>SIPREC</workgroup>
    <keyword>siprec</keyword>
    <abstract>
	  <t>This document addresses the use case of recording Interactive Voice Response (IVR) VoiceXML applications using the SIPREC protocol.
      This document also provides a potential solution for capturing additional information about the call flow within the VoiceXML application from a recording perspective.
    </t>
    </abstract>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
    	<t>One of the use case defined in <xref target="RFC6341"/> is the use of recording self-service Interactive Voice Response (IVR) calls.
      Recording IVR calls are required in some cases to meet compliance requriements or to provide application performance tuning purposes.
      VoiceXML is the standard for defining a voice dialog, and this document provides a proposed method for providing SIPREC metadata for VoiceXML sessions.
      A list of requirements is provided define the scope of the solution defined in this document.
      </t>

    <section title="Usage">
      <t>As VoiceXML is the standard markup for defining voice dialogs, the usage of a voice dialog varies a depending on the use cases.
        The main use case for VoiceXML application is to provide a self-service voice application, for example, to take self-service orders for the user.
        In some environments it is required that the voice application must be recorded before any self-service transaction can take place, and this means that the voice application must have some form of awareness that the recording is taking place at the moment before presenting the option of self-service transaction to the user.
        Certain types of self-service transactions may request the user to enter sensitive information such as a PIN or the CVV of a credit card, and it is required that the VoiceXML application has the ability to explicitly mark certain parts of the application as sensitive portion and that recording is paused while taking senstive data.
      </t>
      <t>Another type usage for a VoiceXML application would be started within a media server dialog to provide basic annoucements, prompts, or controls.
        This type of usage is typically not related to self-service transactions while does require recording for compliance purposes.
        Recording may be useful in this context to provide data to help tuning and reporting of the application.
      </t>
    </section>

    <section title="Deployment types">
      <t>Depending on the implementation of the IVR and the implementation of the VoiceXML interpreter, there are different ways recording can happen based on the deployment model.
        As per <xref target="RFC5552"/>, the IVR is a SIP User Agent that serves VoiceXML applications.
        The IVR in this case can be a SIPREC-aware SIP UA and relies on a separate SRC to provide recording capabilities.
        Being a SIPREC-aware SIP UA allows the IVR to provide recording indications to the VoiceXML application.
      </t>
      <t>The IVR can also be implemented as an SRC so that the IVR can directly initiate recording sessions to an SRS.
        This gives the IVR more control over local recording policies by ensuring recording can happen before executing certain VoiceXML applications that require recording.
      </t>
    </section>
	</section>

	<section title="Recording requirements for VoiceXML applications">
  	<t>
  	<list style="format REQ%d:" counter="my_count">
      <t>Provide an ability for the VoiceXML application to know that it is being recorded.</t>
      <t>Provide an ability for the VoiceXML application to pause/resume certain parts of the application from being recorded</t>
      <t>Define the scope which the recording starts or stops within the VoiceXML application.</t>
      <t>Capture DTMF input as media or metadata.</t>
      <t>Define metadata format to provide essential information about the recorded application.</t>
      <t>Define additional metadata to provide detailed information about about the application executed.</t>
  	</list>
  	</t>
	</section>

  <section anchor="solution" title="Solution">
    <section title="VoiceXML extensions">
      <section title="Recording indication">
        <t>
          The VoiceXML interpreter can provide a new session variable called session.recording (a boolean) to indicate whether recording is currently taking place.
          It is possible that the recording is taking place over the connection by a separate SRC, so a separate session variable called session.connection.recording (a boolean) can indicate whether the recording is taking place over the connection.
        </t>
        <t>
          If the recording is taking place over the connection while the application is executing, a new event can be thrown so that the application can catch this event.
          The new event is called connection.record, and the default action would not reprompt so that an application which does not care about this event can simply ignore this event.
        </t>
      </section>
      <section title="Pause/Resume">
        <t>
          As the use case for pause/resume is to mask the recording while taking sensitive data, this can map naturally to the &lt;field&gt; element in VoiceXML.
          A new attribute siprec:mask (boolean) is introduced to note that the field is taking sensitive data and shall mask the audio portion when accepting input for this field.
          If the IVR is an SRC, then the SRC would initiate a pause request while accepting input for the field, and then resume when the field is filled.
          If the IVR is a SIPREC-aware SIP UA, then the IVR would request to pause the recording, and it is up to the SRC to determine whether the recording is pause or not.
        </t>
      </section>
    </section>
    <section title="DTMF input">
      <t>
        The typical input method for an IVR application is DTMF input, and in addition, some VoiceXML applications supports speech input.
        In order to ensure the recording of the VoiceXML application captures DTMF as input, the media codec telephone-event must be supported to record DTMF input, which is part of the audio media stream.
      </t>
    </section>
    <section title="Metadata">
      <t>
        The IVR is modeled as a participant in a Communication Session.
        As per <xref target="I-D.ietf-siprec-metadata"/>, the participant only contains the address of record.
        Additional information can be provided about the VoiceXML session to provide more context of about the IVR.
        Example attributes:
        <list style="symbols">
          <t>The URI of the VoiceXML page;</t>
          <t>The session.connection.* session variables;</t>
          <t>Any input parameters to the VoiceXML page, such as parmaters injected by a media server dialog;</t>
          <t>&lt;exit&gt; namelist parameters</t>
          <t>Any additional messages and parameters logged by the VoiceXML application.</t>
        </list>
      </t>
      <t>
        Some pieces of metadata relevant to a VoiceXML application may be generated during runtime, for example, the &lt;exit&gt; tag can only happen as the last statement in the application.
        Any metadata generated after the initial execution of the VoiceXML session may not get a chance to provide the metadata in the initial INVITE or UPDATE in the RS.
        The SRC would need to initiate an UPDATE to provide additional metadata to the SRS.
        It is important to note that it is not a good idea to generate an UPDATE every time new messages or parameters are generated by the VoiceXML application, as this can potentially generate large amount of SIP transactions.
        The SRC should either wait until the end of the VoiceXML session to present all the metadata or limit the rate which UPDATE transactions are generated.
      </t>
    </section>
  </section>
	
  <section anchor="iana" title="IANA Considerations">
    <t>This document contains no IANA considerations.
    </t>

  </section>

	<section anchor="Security" title="Security Considerations">
    <t>
      Not explicitly covered in this version.
    </t>
  </section>
    
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      &RFC5234;
      &I-D.ietf-siprec-protocol;

      &I-D.ietf-siprec-metadata;

    </references>

    <references title="Informative References">
      &I-D.ietf-siprec-architecture;

      &RFC5552;

      &RFC6341;

	  </references>
  </back>
</rfc>
